/*

	/fullinfo -> Полная информация о игроке
	/redpanel -> Панель красного администратора
	

*/

#include 									<a_samp>

#undef MAX_PLAYERS
const MAX_PLAYERS = 10; //timed.

#undef MAX_VEHICLES
const MAX_VEHICLES = 2000;

#include 									<a_mysql>
#include 									<streamer>
#include									<nex-ac>
#include 									<Pawn.CMD>
#include 									<profiler>
#include 								 	<sscanf2>
#include 									<foreach>
#include									<TOTP>
#include									<Pawn.RakNet>
#include 									<mxdate>
#include 									<crashdetect>
#include 									<time_t>
#include									<geolocation>
#include                                    <mxini>

#define HINTS_COUNT 4

#define MAX_BUREAU 				3
#define MAX_AUCTION_CARS		6
#define MAX_VEHICLES_IN_PAGE	3
#define MAX_VEHICLE_ANGLES		4
#define MAX_PAGES				"2"
#define MAX_MSG_LINES			10
#define MAX_RADARS              300

#define MAX_AUCTION_GLOBAL_TEXT_DRAWS 	47
#define MAX_AUCTION_PLAYER_TEXT_DRAWS 	21
#define AUCTION_MENU_TEXT_DRAW_GLOBAL	14
#define AUCTION_MENU_TEXT_DRAW_PLAYER	4

/*
    Настройки, связанные с базой данных (MySQL)
*/
#define AC_TABLE_SETTINGS               "anticheat_settings" // Название таблицы в базе данных с настройками анти-чита
#define AC_TABLE_FIELD_CODE             "ac_code" // Название поля с кодом анти-чита в таблице
#define AC_TABLE_FIELD_TRIGGER          "ac_code_trigger_type" // Название поля со значением срабатывания кода анти-чита в таблице

/*
    Общие настройки, касающиеся анти-чита
*/
#define AC_MAX_CODES                    53 // Количество кодов анти-чита (на данный момент их 53)
#define AC_MAX_CODE_LENGTH              (3 + 1) // Максимальное количество символов в "коде" анти-чита (001/002/003, etc.)
#define AC_MAX_CODE_NAME_LENGTH         (33 + 1) // Максимальное количество символов в полном названии чита, за который отвечает какой-либо код

#define AC_MAX_TRIGGER_TYPES            4 // Количество типов срабатываний (наказаний) анти-чита. По мере добавления типов срабатываний (наказаний), увеличивайте данное значение.
#define AC_MAX_TRIGGER_TYPE_NAME_LENGTH (23 + 1) // Максимальное количество символов в названии типа срабатывания (наказания) анти-чита

#define AC_GLOBAL_TRIGGER_TYPE_PLAYER   0
#define AC_GLOBAL_TRIGGER_TYPE_IP       1

// Типы срабатываний объявлены макросами, чтобы было проще ориентироваться в OnCheatDetected.
#define AC_CODE_TRIGGER_TYPE_DISABLED   0 // AC_CODE_TRIGGER_TYPE_DISABLED - Тип наказания: Отключён
#define AC_CODE_TRIGGER_TYPE_WARNING    1 // AC_CODE_TRIGGER_TYPE_WARNING - Тип наказания: Warning
#define AC_CODE_TRIGGER_TYPE_KICK       2 // AC_CODE_TRIGGER_TYPE_KICK - Тип наказания: Kick
#define AC_CODE_TRIGGER_TYPE_PANEL      3

#define AC_TRIGGER_ANTIFLOOD_TIME       20 // Время для анти-флуда срабатываниями (в секундах)

/*
    Настройки визуальной части системы (диалогов)
*/
#define AC_MAX_CODES_ON_PAGE            15 // Максимальное количество элементов на странице настроек анти-чита
#define AC_DIALOG_NEXT_PAGE_TEXT        ">>> Следующая страница" // Текст кнопки, которая будет отображать следующую страницу списка
#define AC_DIALOG_PREVIOUS_PAGE_TEXT    "<<< Предыдущая страница" // Текст кнопки, которая будет отображать предыдущую страницу списка

new gang_zones[][] =
{
	{78, 79, 68, 72, 69, 54, 40, 36, 37, 38, 39, 53, 52, 66, 67, 36, 50, 80, 88, 91}, //  grove
	{1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 28, 29, 30, 31, 45},    // ballas
	{70, 71, 34, 56, 55, 41, 42, 26, 15, 7, 6, 14, 13, 24, 25, 23, 22, 21, 33, 35}, // vagos 34+
	{32, 43, 44, 46, 47, 48, 49, 84, 51, 58, 59, 60, 61, 62, 63, 64, 65, 74, 75, 76},    // rifa 84+
	{57, 73, 81, 83, 85, 86, 87, 82, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 104} //  aztec
};

//Система газонокосильщика
new object_park_ls[345];
new timer_job_mower[MAX_PLAYERS];
//количество убранных чекпоинтов по зонам
new check_taxi_park;
new check_verona_beach;
new check_medic_ls;
new check_mayor_ls;
new check_glenpark_1;
new check_glenpark_2;

new bool: status_check_job_mower[345] = { false, ... };
new bool: status_restore_check_job_mower[345] = { false, ... };
new Float:check_job_mower[345][8]= {
	{1161.606689, -1724.153809, 12.916358, 0.000000, 0.000000, 85.465836 },//Участок №1 Таксопарк LS --33 начало
	{1153.157959, -1724.084595, 12.911668, 0.000000, 0.000000, 89.665298},
	{1141.203979, -1724.180786, 12.910445, 0.000000, 0.000000, 90.542618},
	{1131.005615, -1724.157837, 12.896638, 0.000000, 0.000000, 90.835068},
	{1118.739868, -1724.072388, 12.607371, 0.000000, 0.000000, 92.004852},
	{1105.218628, -1723.931274, 12.602836, 0.000000, 0.000000, 92.589752},
	{1091.625610, -1724.234741, 12.611656, 0.000000, 0.000000, 92.589752},
	{1079.478638, -1724.401001, 12.616489, 0.000000, 0.000000, 92.589752},
	{1066.955566, -1724.367920, 12.615527, 0.000000, 0.000000, 92.589752},
	{1053.047729, -1724.163330, 12.605296, 0.000000, 0.000000, 92.589752},
	{1049.571655, -1739.166748, 12.619127, 0.000000, 0.000000, 183.248245},
	{1049.326294, -1751.635864, 12.604512, 0.000000, 0.000000, 183.248245},
	{1049.393433, -1764.471313, 12.929540, 0.000000, 0.000000, 193.191528},
	{1051.583862, -1773.917236, 12.972979, 0.000000, 0.000000, 350.820526},
	{1052.535767, -1758.635254, 13.031508, 0.000000, 0.000000, 357.254486},
	{1052.654663, -1745.388794, 12.713317, 0.000000, 0.000000, 2.225895},
	{1055.313599, -1729.767090, 13.122073, 0.000000, 0.000000, 308.123230},
	{1073.411133, -1729.266602, 12.768188, 0.000000, 0.000000, 273.614532},
	{1084.724854, -1729.309692, 12.784665, 0.000000, 0.000000, 270.984955},
	{1099.452881, -1728.850220, 12.791674, 0.000000, 0.000000, 276.833954},
	{1112.480103, -1729.510620, 12.831130, 0.000000, 0.000000, 265.428497},
	{1126.941040, -1728.565308, 12.835237, 0.000000, 0.000000, 269.230377},
	{1136.263550, -1728.858887, 12.833879, 0.000000, 0.000000, 265.136047},
	{1146.561279, -1729.278809, 12.837194, 0.000000, 0.000000, 266.013336},
	{1157.270874, -1729.478882, 12.825368, 0.000000, 0.000000, 269.522675},
	{1137.629639, -1753.066406, 12.575413, 0.000000, 0.000000, 87.620552},
	{1125.066406, -1753.092163, 12.574987, 0.000000, 0.000000, 101.658020},
	{1113.047119, -1755.135132, 12.580907, 0.000000, 0.000000, 101.658020},
	{1108.682251, -1767.206177, 12.581818, 0.000000, 0.000000, 101.658020},
	{1109.770996, -1778.359985, 12.583146, 0.000000, 0.000000, 101.658020},
	{1116.171753, -1770.395630, 12.589938, 0.000000, 0.000000, 8.077275},
	{1120.381470, -1761.653931, 12.587656, 0.000000, 0.000000, 280.927979},
	{1132.645630, -1761.134644, 12.594887, 0.000000, 0.000000, 276.396271},
	{484.773346, -1783.324585, 5.595574, 0.000000, 0.000000, 191.964981},//Участок №2 Verona Beach -- 46 начало
	{497.478088, -1784.695557, 5.166778, 0.000000, 0.000000, 195.474335},
	{497.495911, -1794.405518, 5.395043, 0.000000, 0.000000, 165.644714},
	{550.602966, -1805.766113, 5.412500, 0.000000, 0.000000, 170.031387},
	{550.469299, -1817.875122, 5.412500, 0.000000, 0.000000, 170.031387},
	{559.160828, -1820.898560, 5.412500, 0.000000, 0.000000, 266.538940},
	{569.401733, -1821.201782, 5.412500, 0.000000, 0.000000, 278.529266},
	{578.073364, -1820.941528, 5.412500, 0.000000, 0.000000, 269.170959},
	{588.242615, -1820.504883, 5.412500, 0.000000, 0.000000, 269.170959},
	{597.190979, -1819.642456, 5.412500, 0.000000, 0.000000, 276.189667},
	{593.504150, -1812.972168, 5.412500, 0.000000, 0.000000, 90.195747},
	{584.673279, -1813.790527, 5.412500, 0.000000, 0.000000, 89.903297},
	{574.517639, -1813.869385, 5.412500, 0.000000, 0.000000, 89.903297},
	{563.561768, -1814.403564, 5.412500, 0.000000, 0.000000, 89.903297},
	{555.104370, -1811.654663, 5.412500, 0.000000, 0.000000, 89.903297},
	{559.105652, -1805.398071, 5.412500, 0.000000, 0.000000, 265.663971},
	{572.565247, -1807.502197, 5.412500, 0.000000, 0.000000, 143.713577},
	{583.393066, -1806.581299, 5.412500, 0.000000, 0.000000, 272.097870},
	{548.551208, -1830.855347, 4.810937, 0.000000, 0.000000, 282.623566},
	{587.160645, -1829.936157, 5.155915, 0.000000, 0.000000, 270.340820},
	{595.647461, -1838.733643, 4.903313, 0.000000, 0.000000, 241.096100},
	{606.198853, -1842.815552, 4.920055, 0.000000, 0.000000, 262.737183},
	{614.203796, -1840.844971, 5.006981, 0.000000, 0.000000, 272.680359},
	{624.894409, -1844.435303, 4.911686, 0.000000, 0.000000, 253.963760},
	{633.927490, -1844.206543, 4.913923, 0.000000, 0.000000, 263.029633},
	{644.041260, -1845.737671, 4.959471, 0.000000, 0.000000, 262.152283},
	{644.787170, -1838.452515, 5.197773, 0.000000, 0.000000, 3.923810},
	{634.862915, -1837.822876, 5.100921, 0.000000, 0.000000, 84.931755},
	{625.271667, -1836.613770, 5.136159, 0.000000, 0.000000, 82.299736},
	{615.906982, -1835.932617, 5.156877, 0.000000, 0.000000, 82.592186},
	{605.570862, -1835.808594, 5.126902, 0.000000, 0.000000, 82.592186},
	{597.652588, -1831.397217, 5.218519, 0.000000, 0.000000, 49.545647},
	{607.845886, -1829.898804, 5.309297, 0.000000, 0.000000, 277.651978},
	{619.620361, -1831.050903, 5.318044, 0.000000, 0.000000, 249.284592},
	{629.064026, -1829.772827, 5.342881, 0.000000, 0.000000, 275.604797},
	{640.615784, -1830.991943, 5.321196, 0.000000, 0.000000, 248.992126},
	{651.902405, -1826.121338, 5.412500, 0.000000, 0.000000, 260.397644},
	{659.078003, -1826.579712, 5.412500, 0.000000, 0.000000, 254.548706},
	{655.006470, -1833.021973, 5.412500, 0.000000, 0.000000, 155.994034},
	{663.935852, -1830.519165, 5.412500, 0.000000, 0.000000, 268.001343},
	{667.470093, -1840.939087, 5.412500, 0.000000, 0.000000, 313.986755},
	{654.341370, -1847.582642, 5.121390, 0.000000, 0.000000, 339.867279},
	{663.727905, -1851.073730, 5.184746, 0.000000, 0.000000, 266.244324},
	{674.350769, -1851.553955, 5.079543, 0.000000, 0.000000, 306.309540},
	{680.838684, -1851.281738, 5.289329, 0.000000, 0.000000, 51.516762},
	{692.251404, -1850.366821, 6.168665, 0.000000, 0.000000, 278.234528},
	{700.528748, -1851.819824, 6.697062, 0.000000, 0.000000, 258.932953},
	{1220.061279, -1295.611450, 12.820630, 0.000000, 0.000000, 202.588028},//Участок №3 Больница ЛС -- 37 начало
	{1219.068481, -1301.858643, 12.824845, 0.000000, 0.000000, 178.607315},
	{1219.093628, -1309.453491, 12.830401, 0.000000, 0.000000, 180.946472},
	{1218.716797, -1316.750732, 12.836747, 0.000000, 0.000000, 180.654312},
	{1218.542236, -1324.906006, 12.830925, 0.000000, 0.000000, 185.333450},
	{1218.584229, -1332.729614, 12.832835, 0.000000, 0.000000, 177.144867},
	{1218.531372, -1339.101196, 12.837425, 0.000000, 0.000000, 177.144867},
	{1218.733765, -1345.730103, 12.843824, 0.000000, 0.000000, 177.144867},
	{1218.378540, -1353.291382, 12.845671, 0.000000, 0.000000, 182.993820},
	{1218.322144, -1361.223389, 12.817779, 0.000000, 0.000000, 182.993820},
	{1218.914795, -1368.568604, 12.782659, 0.000000, 0.000000, 182.993698},
	{1219.508057, -1379.898315, 12.699455, 0.000000, 0.000000, 182.993698},
	{1228.192505, -1380.120117, 12.688148, 0.000000, 0.000000, 267.218567},
	{1236.037109, -1380.532593, 12.665513, 0.000000, 0.000000, 267.218567},
	{1242.375244, -1378.805786, 12.668731, 0.000000, 0.000000, 4.603386},
	{1233.649902, -1375.019043, 12.693229, 0.000000, 0.000000, 68.356842},
	{1225.229248, -1374.031006, 12.751884, 0.000000, 0.000000, 39.112122},
	{1223.709106, -1367.236572, 12.811624, 0.000000, 0.000000, 1.386210},
	{1224.190186, -1360.600708, 12.842188, 0.000000, 0.000000, 355.537537},
	{1223.404419, -1350.503052, 12.845477, 0.000000, 0.000000, 3.433477},
	{1223.821777, -1341.374023, 12.838238, 0.000000, 0.000000, 358.754486},
	{1224.243042, -1329.755737, 12.832597, 0.000000, 0.000000, 358.754486},
	{1224.303467, -1322.539917, 12.838648, 0.000000, 0.000000, 354.660126},
	{1223.291992, -1311.622437, 12.835979, 0.000000, 0.000000, 9.282518},
	{1225.576538, -1304.833252, 12.826563, 0.000000, 0.000000, 28.293932},
	{1227.786255, -1295.909546, 12.813955, 0.000000, 0.000000, 335.365875},
	{1234.904663, -1296.221924, 12.747257, 0.000000, 0.000000, 182.123581},
	{1231.840576, -1303.273560, 12.775769, 0.000000, 0.000000, 169.840775},
	{1237.192261, -1309.080322, 12.747046, 0.000000, 0.000000, 251.433502},
	{1242.312134, -1307.244141, 12.680327, 0.000000, 0.000000, 171.157913},
	{1242.774292, -1316.437744, 12.686161, 0.000000, 0.000000, 187.097488},
	{1242.702393, -1325.303223, 12.694906, 0.000000, 0.000000, 187.097488},
	{1243.327393, -1334.560669, 12.691512, 0.000000, 0.000000, 183.880508},
	{1241.518188, -1342.948975, 12.700533, 0.000000, 0.000000, 170.720444},
	{1241.839355, -1352.318848, 12.709240, 0.000000, 0.000000, 170.720444},
	{1242.121582, -1361.418945, 12.704837, 0.000000, 0.000000, 170.720444},
	{1240.677856, -1368.625000, 12.709319, 0.000000, 0.000000, 170.135544},
	{1233.519653, -1370.330811, 12.730769, 0.000000, 0.000000, 101.702904},
	{1484.405396, -1701.025513, 12.723542, 0.000000, 0.000000, 342.674561},//Участок №4 Мэрия -- 49 начало
	{1484.707886, -1694.617188, 12.723542, 0.000000, 0.000000, 354.957367},
	{1491.865479, -1698.506104, 12.723542, 0.000000, 0.000000, 265.760956},
	{1492.977173, -1692.551147, 12.723542, 0.000000, 0.000000, 286.524658},
	{1501.361084, -1698.871704, 12.723542, 0.000000, 0.000000, 240.025543},
	{1503.524414, -1692.143188, 12.723542, 0.000000, 0.000000, 0.513200},
	{1497.398560, -1686.606934, 12.713545, 0.000000, 0.000000, 3.730666},
	{1504.668335, -1680.690308, 12.713545, 0.000000, 0.000000, 354.080048},
	{1504.452637, -1672.250854, 12.713545, 0.000000, 0.000000, 0.513200},
	{1504.323364, -1657.891968, 12.713545, 0.000000, 0.000000, 0.513200},
	{1504.454590, -1648.868164, 12.713545, 0.000000, 0.000000, 2.560938},
	{1504.553711, -1640.715820, 12.713545, 0.000000, 0.000000, 2.560938},
	{1504.590454, -1631.154053, 12.713545, 0.000000, 0.000000, 2.560938},
	{1500.948242, -1624.259155, 12.723542, 0.000000, 0.000000, 92.561005},
	{1493.417847, -1624.120361, 12.723542, 0.000000, 0.000000, 109.889061},
	{1483.919312, -1623.524902, 12.703545, 0.000000, 0.000000, 93.219574},
	{1484.159912, -1628.768066, 12.703545, 0.000000, 0.000000, 253.480637},
	{1491.415283, -1628.950806, 12.723542, 0.000000, 0.000000, 267.810577},
	{1497.940918, -1634.199829, 12.713545, 0.000000, 0.000000, 189.142334},
	{1497.992798, -1644.068970, 12.713545, 0.000000, 0.000000, 189.142334},
	{1497.751099, -1654.424316, 12.713545, 0.000000, 0.000000, 189.142334},
	{1497.833984, -1663.303467, 12.713545, 0.000000, 0.000000, 189.142334},
	{1498.224121, -1671.345337, 12.713545, 0.000000, 0.000000, 189.142334},
	{1497.789551, -1679.936035, 12.713545, 0.000000, 0.000000, 189.142334},
	{1473.367310, -1692.144287, 12.723542, 0.000000, 0.000000, 99.068604},
	{1474.040771, -1700.465820, 12.723542, 0.000000, 0.000000, 173.350189},
	{1466.692017, -1700.025635, 12.723542, 0.000000, 0.000000, 78.304871},
	{1465.050293, -1692.439941, 12.723542, 0.000000, 0.000000, 15.428750},
	{1458.385986, -1698.924072, 12.723542, 0.000000, 0.000000, 112.228752},
	{1454.171875, -1692.194946, 12.723542, 0.000000, 0.000000, 26.541758},
	{1460.430176, -1685.786621, 12.713545, 0.000000, 0.000000, 333.608795},
	{1461.098145, -1677.710571, 12.713545, 0.000000, 0.000000, 354.372559},
	{1461.157837, -1669.037842, 12.713545, 0.000000, 0.000000, 354.372559},
	{1461.273071, -1662.562134, 12.713545, 0.000000, 0.000000, 354.372559},
	{1461.348145, -1656.442017, 12.713545, 0.000000, 0.000000, 354.372559},
	{1461.608154, -1648.454956, 12.713545, 0.000000, 0.000000, 354.372559},
	{1461.774536, -1640.947632, 12.713545, 0.000000, 0.000000, 354.372559},
	{1461.712891, -1632.896729, 12.713545, 0.000000, 0.000000, 354.372559},
	{1465.626953, -1628.219238, 12.723542, 0.000000, 0.000000, 281.260742},
	{1473.477417, -1628.022461, 12.723542, 0.000000, 0.000000, 281.260742},
	{1476.294800, -1622.810425, 12.703545, 0.000000, 0.000000, 305.826324},
	{1471.540039, -1618.714478, 12.723542, 0.000000, 0.000000, 61.342930},
	{1467.402466, -1623.687622, 12.723542, 0.000000, 0.000000, 96.144135},
	{1457.411499, -1624.297363, 12.723542, 0.000000, 0.000000, 96.144135},
	{1455.129150, -1635.535034, 12.713545, 0.000000, 0.000000, 177.736877},
	{1455.197388, -1643.830566, 12.713545, 0.000000, 0.000000, 177.151932},
	{1454.638184, -1655.082642, 12.713545, 0.000000, 0.000000, 177.151932},
	{1454.148926, -1670.017700, 12.713545, 0.000000, 0.000000, 177.151932},
	{1454.530762, -1677.566650, 12.713545, 0.000000, 0.000000, 178.614212},
	{1454.378662, -1683.852783, 12.713545, 0.000000, 0.000000, 178.614212},
	{1867.358276, -1246.167114, 13.221643, 0.000000, 0.000000, 271.902435},//Участок №5 Глен Парк сторона 1 -- 95 начало
	{1879.723267, -1246.921753, 13.175182, 0.000000, 0.000000, 270.437866},
	{1889.987915, -1246.639771, 13.363698, 0.000000, 0.000000, 270.437866},
	{1900.332642, -1246.652466, 13.676298, 0.000000, 0.000000, 270.437866},
	{1910.957642, -1246.144897, 14.361286, 0.000000, 0.000000, 270.437866},
	{1921.833496, -1245.892822, 16.109970, 0.000000, 0.000000, 270.437866},
	{1932.653687, -1245.594849, 17.320723, 0.000000, 0.000000, 270.437866},
	{1943.216797, -1245.196533, 18.295958, 0.000000, 0.000000, 270.437866},
	{1953.732178, -1245.090454, 19.037907, 0.000000, 0.000000, 270.437866},
	{1960.312500, -1245.495483, 19.256392, 0.000000, 0.000000, 270.437866},
	{1958.022461, -1232.280029, 19.211897, 0.000000, 0.000000, 134.086182},
	{1951.030396, -1229.105347, 19.144039, 0.000000, 0.000000, 81.519363},
	{1944.291138, -1233.323608, 18.738131, 0.000000, 0.000000, 104.915138},
	{1943.331909, -1223.625610, 19.285929, 0.000000, 0.000000, 32.388256},
	{1935.050171, -1219.605957, 19.468113, 0.000000, 0.000000, 58.416039},
	{1929.315063, -1214.761108, 19.346359, 0.000000, 0.000000, 53.444431},
	{1924.723511, -1220.001465, 18.975727, 0.000000, 0.000000, 139.423889},
	{1924.205811, -1227.302246, 18.344778, 0.000000, 0.000000, 196.743561},
	{1926.336304, -1233.042358, 17.665197, 0.000000, 0.000000, 217.799789},
	{1934.242798, -1233.444458, 17.926485, 0.000000, 0.000000, 275.704315},
	{1916.387329, -1235.239990, 16.341469, 0.000000, 0.000000, 105.790092},
	{1906.114136, -1234.314575, 15.299605, 0.000000, 0.000000, 72.158646},
	{1898.302002, -1231.738403, 14.944695, 0.000000, 0.000000, 51.979790},
	{1891.412964, -1227.149048, 15.060605, 0.000000, 0.000000, 48.177982},
	{1887.563477, -1219.410767, 16.005716, 0.000000, 0.000000, 10.452292},
	{1887.908203, -1211.488281, 17.433287, 0.000000, 0.000000, 347.641449},
	{1889.611450, -1203.114868, 19.143389, 0.000000, 0.000000, 343.547119},
	{1892.414185, -1194.862183, 20.763123, 0.000000, 0.000000, 343.547119},
	{1895.335083, -1187.858032, 21.977161, 0.000000, 0.000000, 344.132050},
	{1898.707520, -1181.456299, 22.807127, 0.000000, 0.000000, 344.132050},
	{1902.802124, -1176.290527, 23.249763, 0.000000, 0.000000, 295.293335},
	{1911.027954, -1170.306641, 23.029148, 0.000000, 0.000000, 291.491516},
	{1919.889282, -1166.064941, 22.243843, 0.000000, 0.000000, 287.689758},
	{1927.470703, -1163.716675, 21.522303, 0.000000, 0.000000, 277.161713},
	{1935.994629, -1162.692261, 20.844452, 0.000000, 0.000000, 272.482574},
	{1943.722778, -1162.527222, 20.438334, 0.000000, 0.000000, 266.633636},
	{1951.386597, -1162.415771, 20.255171, 0.000000, 0.000000, 268.973175},
	{1954.238037, -1167.605103, 19.933907, 0.000000, 0.000000, 180.361542},
	{1953.367920, -1175.664673, 19.445637, 0.000000, 0.000000, 150.532074},
	{1943.820923, -1177.764526, 19.488754, 0.000000, 0.000000, 103.740524},
	{1935.780029, -1180.525269, 19.575300, 0.000000, 0.000000, 108.712120},
	{1928.817017, -1178.982910, 20.131247, 0.000000, 0.000000, 81.806984},
	{1919.220215, -1175.869629, 21.577497, 0.000000, 0.000000, 68.061974},
	{1911.458008, -1177.654907, 22.279034, 0.000000, 0.000000, 120.117508},
	{1906.133301, -1182.346924, 22.269163, 0.000000, 0.000000, 119.825035},
	{1901.146729, -1188.850342, 21.967215, 0.000000, 0.000000, 152.286575},
	{1898.446411, -1196.203857, 20.980274, 0.000000, 0.000000, 160.475082},
	{1897.568726, -1205.405151, 18.905323, 0.000000, 0.000000, 178.314362},
	{1898.428833, -1214.339966, 17.807949, 0.000000, 0.000000, 170.420761},
	{1899.453003, -1222.291504, 16.404261, 0.000000, 0.000000, 227.155411},
	{1906.315918, -1225.115479, 16.469769, 0.000000, 0.000000, 245.869537},
	{1914.545044, -1227.512939, 16.902369, 0.000000, 0.000000, 251.426010},
	{1917.468140, -1221.014160, 18.211891, 0.000000, 0.000000, 318.688782},
	{1920.434937, -1214.422363, 18.912180, 0.000000, 0.000000, 323.075439},
	{1925.799316, -1207.512207, 19.323290, 0.000000, 0.000000, 321.905670},
	{1920.132446, -1202.961670, 19.237158, 0.000000, 0.000000, 31.800503},
	{1912.381958, -1212.841919, 18.752636, 0.000000, 0.000000, 116.317719},
	{1908.059448, -1191.620605, 21.259354, 0.000000, 0.000000, 254.935303},
	{1916.785034, -1194.246216, 20.268057, 0.000000, 0.000000, 248.209015},
	{1925.465576, -1193.818115, 19.545786, 0.000000, 0.000000, 269.265198},
	{1923.847656, -1187.694824, 20.132030, 0.000000, 0.000000, 342.082092},
	{1918.140259, -1185.196533, 20.847538, 0.000000, 0.000000, 57.533447},
	{1954.654541, -1151.323364, 20.875120, 0.000000, 0.000000, 98.183594},
	{1942.135986, -1151.113770, 21.742018, 0.000000, 0.000000, 71.278450},
	{1930.641113, -1152.326050, 22.475374, 0.000000, 0.000000, 89.995071},
	{1920.478882, -1152.254028, 23.103773, 0.000000, 0.000000, 89.995071},
	{1910.036011, -1157.119751, 22.975300, 0.000000, 0.000000, 89.995071},
	{1898.186035, -1152.625366, 23.696474, 0.000000, 0.000000, 89.995071},
	{1885.720703, -1152.850220, 23.474592, 0.000000, 0.000000, 89.995071},
	{1884.073730, -1163.561890, 23.380205, 0.000000, 0.000000, 89.995071},
	{1894.197021, -1164.241333, 23.438457, 0.000000, 0.000000, 89.995071},
	{1902.943115, -1165.435303, 23.526339, 0.000000, 0.000000, 268.899017},
	{1894.442627, -1174.762695, 23.488493, 0.000000, 0.000000, 139.713486},
	{1885.571045, -1174.393066, 23.292017, 0.000000, 0.000000, 121.581818},
	{1875.827759, -1180.716431, 23.038374, 0.000000, 0.000000, 121.289360},
	{1883.703735, -1185.085693, 22.545891, 0.000000, 0.000000, 239.730469},
	{1885.624756, -1194.326538, 20.987839, 0.000000, 0.000000, 171.005417},
	{1878.034668, -1190.441528, 21.570574, 0.000000, 0.000000, 58.413280},
	{1871.276489, -1188.160034, 22.608206, 0.000000, 0.000000, 58.120831},
	{1866.274292, -1191.862793, 22.729689, 0.000000, 0.000000, 109.006630},
	{1866.282593, -1200.074463, 21.576797, 0.000000, 0.000000, 180.656113},
	{1873.567749, -1199.659180, 20.948042, 0.000000, 0.000000, 250.258621},
	{1881.627686, -1202.204102, 19.745148, 0.000000, 0.000000, 245.579498},
	{1880.182617, -1210.648682, 18.136990, 0.000000, 0.000000, 161.647156},
	{1872.642700, -1209.538940, 18.869944, 0.000000, 0.000000, 83.271309},
	{1864.596924, -1209.499390, 19.727041, 0.000000, 0.000000, 83.271301},
	{1864.666626, -1215.465576, 18.963261, 0.000000, 0.000000, 179.194000},
	{1867.633911, -1222.829712, 17.501318, 0.000000, 0.000000, 191.476654},
	{1871.866211, -1216.548096, 17.657242, 0.000000, 0.000000, 346.473633},
	{1878.161499, -1223.409546, 16.220636, 0.000000, 0.000000, 212.825302},
	{1864.669678, -1233.362061, 15.701693, 0.000000, 0.000000, 135.619263},
	{1864.440918, -1239.464600, 14.398665, 0.000000, 0.000000, 323.077942},
	{1885.218018, -1240.321411, 13.916868, 0.000000, 0.000000, 268.682739},
	{1894.850342, -1240.158325, 14.366830, 0.000000, 0.000000, 268.682739},
	{1885.283813, -1233.227051, 14.686578, 0.000000, 0.000000, 268.682739},
	{1872.900024, -1227.628418, 15.833553, 0.000000, 0.000000, 33.850128},
	{2052.105957, -1248.333984, 23.101965, 0.000000, 0.000000, 85.138367},//Участок №6 Глен Парк сторона 2 -- 80 начало
	{2052.648926, -1239.833618, 23.025469, 0.000000, 0.000000, 359.743591},
	{2052.682129, -1232.533691, 23.027925, 0.000000, 0.000000, 359.743591},
	{2052.736328, -1220.633789, 23.031933, 0.000000, 0.000000, 359.743591},
	{2053.768066, -1212.595459, 23.113119, 0.000000, 0.000000, 3.545526},
	{2052.881348, -1204.760254, 23.109367, 0.000000, 0.000000, 93.545670},
	{2053.242188, -1194.415894, 23.006886, 0.000000, 0.000000, 3.545526},
	{2053.067383, -1183.212036, 23.020996, 0.000000, 0.000000, 3.545526},
	{2052.440674, -1173.106445, 22.999132, 0.000000, 0.000000, 3.545526},
	{2054.451416, -1160.462524, 22.994017, 0.000000, 0.000000, 3.545526},
	{2052.638428, -1149.701904, 23.161327, 0.000000, 0.000000, 3.545526},
	{2039.835327, -1148.952515, 23.380121, 0.000000, 0.000000, 85.723320},
	{2033.174683, -1155.614136, 22.236532, 0.000000, 0.000000, 121.986778},
	{2022.169678, -1149.868408, 23.062159, 0.000000, 0.000000, 56.186131},
	{2010.697632, -1148.949951, 23.264124, 0.000000, 0.000000, 83.676140},
	{2001.049805, -1149.684814, 22.906815, 0.000000, 0.000000, 83.678513},
	{1991.516602, -1148.771240, 21.455414, 0.000000, 0.000000, 75.489990},
	{1982.714600, -1152.197510, 20.449589, 0.000000, 0.000000, 153.280945},
	{2000.686035, -1154.322754, 20.688007, 0.000000, 0.000000, 277.278442},
	{2018.766846, -1156.388550, 21.570492, 0.000000, 0.000000, 277.278442},
	{2041.546997, -1168.411377, 22.180187, 0.000000, 0.000000, 176.676620},
	{2029.834229, -1163.938843, 21.483173, 0.000000, 0.000000, 72.275475},
	{1984.586792, -1160.906250, 20.240561, 0.000000, 0.000000, 274.063965},
	{1995.976440, -1160.662964, 20.347477, 0.000000, 0.000000, 274.063965},
	{2006.716797, -1162.463257, 20.533003, 0.000000, 0.000000, 274.063965},
	{2017.682129, -1164.358398, 20.941208, 0.000000, 0.000000, 274.063965},
	{2028.624390, -1170.473633, 21.477953, 0.000000, 0.000000, 274.063965},
	{2037.281006, -1175.917236, 22.148050, 0.000000, 0.000000, 274.063965},
	{2042.541382, -1183.845581, 22.708593, 0.000000, 0.000000, 215.867081},
	{2034.899902, -1184.459839, 22.049437, 0.000000, 0.000000, 84.265892},
	{2030.172119, -1178.808960, 21.374657, 0.000000, 0.000000, 313.030792},
	{2025.353882, -1186.236206, 20.961493, 0.000000, 0.000000, 80.756500},
	{2016.943481, -1184.039551, 20.140444, 0.000000, 0.000000, 86.897896},
	{2010.556763, -1180.000610, 19.800041, 0.000000, 0.000000, 50.342007},
	{2008.480347, -1174.341919, 19.998922, 0.000000, 0.000000, 17.587986},
	{2004.515625, -1169.093384, 20.186283, 0.000000, 0.000000, 86.897957},
	{1993.883179, -1168.541138, 19.960743, 0.000000, 0.000000, 113.803101},
	{1985.223633, -1169.168945, 19.761030, 0.000000, 0.000000, 87.775314},
	{1989.339478, -1175.695435, 19.468435, 0.000000, 0.000000, 236.046021},
	{1998.127686, -1174.196777, 19.700197, 0.000000, 0.000000, 257.102173},
	{2004.564941, -1181.127075, 19.541172, 0.000000, 0.000000, 209.433350},
	{2014.237427, -1190.604126, 19.496807, 0.000000, 0.000000, 210.895584},
	{2017.603271, -1195.766968, 19.634840, 0.000000, 0.000000, 196.273224},
	{2016.462036, -1202.479614, 19.495668, 0.000000, 0.000000, 159.424866},
	{2012.954834, -1211.445313, 19.538244, 0.000000, 0.000000, 159.132416},
	{2006.520874, -1216.973877, 19.580059, 0.000000, 0.000000, 115.265366},
	{1998.958130, -1220.103882, 19.464239, 0.000000, 0.000000, 112.633369},
	{1992.229370, -1223.705933, 19.523685, 0.000000, 0.000000, 110.586235},
	{1986.307739, -1228.668335, 19.575462, 0.000000, 0.000000, 151.236389},
	{1996.842163, -1227.796265, 19.919613, 0.000000, 0.000000, 279.620697},
	{2005.931396, -1225.310913, 20.251413, 0.000000, 0.000000, 278.450897},
	{2014.167969, -1222.740601, 20.569157, 0.000000, 0.000000, 278.450897},
	{2022.712158, -1220.504639, 21.055275, 0.000000, 0.000000, 274.649109},
	{2033.537720, -1216.098267, 21.849470, 0.000000, 0.000000, 274.649109},
	{2032.582642, -1208.034912, 21.539402, 0.000000, 0.000000, 356.824371},
	{2038.923950, -1210.170044, 22.180939, 0.000000, 0.000000, 253.590469},
	{2042.105591, -1203.243164, 22.584679, 0.000000, 0.000000, 345.711273},
	{2043.261841, -1195.205688, 22.725100, 0.000000, 0.000000, 345.711273},
	{2036.342773, -1192.076172, 22.091585, 0.000000, 0.000000, 40.691353},
	{2029.458252, -1194.603394, 21.249327, 0.000000, 0.000000, 118.774757},
	{2026.916992, -1202.825806, 20.823637, 0.000000, 0.000000, 141.878082},
	{2035.867432, -1200.998047, 21.790827, 0.000000, 0.000000, 187.497345},
	{2044.054199, -1247.826660, 23.004990, 0.000000, 0.000000, 72.858070},
	{2037.057739, -1245.909180, 22.751347, 0.000000, 0.000000, 86.895531},
	{2029.271240, -1247.171021, 22.899652, 0.000000, 0.000000, 86.895531},
	{2018.975098, -1247.301758, 22.915018, 0.000000, 0.000000, 86.895531},
	{2009.635498, -1246.693726, 22.650595, 0.000000, 0.000000, 87.480438},
	{2000.731201, -1246.766968, 21.554968, 0.000000, 0.000000, 85.725746},
	{1991.578613, -1247.012451, 20.202988, 0.000000, 0.000000, 85.725746},
	{1989.787720, -1240.149780, 19.651670, 0.000000, 0.000000, 18.755314},
	{1996.230591, -1237.448120, 19.990788, 0.000000, 0.000000, 264.116058},
	{2002.186401, -1241.389282, 21.126034, 0.000000, 0.000000, 262.653809},
	{2007.249756, -1235.382324, 20.777763, 0.000000, 0.000000, 283.709991},
	{2012.688232, -1239.922363, 21.711922, 0.000000, 0.000000, 224.635666},
	{2018.154785, -1232.119995, 21.180098, 0.000000, 0.000000, 298.332336},
	{2024.679932, -1237.369751, 21.673695, 0.000000, 0.000000, 234.871353},
	{2028.964478, -1231.207031, 21.531506, 0.000000, 0.000000, 279.028473},
	{2038.563232, -1233.516846, 22.079952, 0.000000, 0.000000, 271.717316},
	{2037.481934, -1224.965088, 21.976377, 0.000000, 0.000000, 325.235107},
	{2044.973755, -1223.109375, 22.409435, 0.000000, 0.000000, 287.801849},
	{2046.857788, -1235.534180, 22.632471, 0.000000, 0.000000, 188.369812}
};
//Система радаров
new	RadarIterator[MAX_RADARS];
new radariter;
#define foreachRadar(%0) for(new _i, %0=RadarIterator[_i]; _i <radariter; %0=RadarIterator[++_i])

enum rInfo{
    rid,
Float:rX,
Float:rY,
Float:rZ,
Float:rRZ,
Float:rR,
    rSpeed,
    rObj
};
new RadarInfo[MAX_RADARS][rInfo];
new TOTALRADAR;
new RadarTimer[MAX_PLAYERS];
new RadarMaxSpeed[MAX_RADARS];

// Массив AC_CODE хранит в себе текстовые форматы номеров кода анти-чита
static const AC_CODE[AC_MAX_CODES][AC_MAX_CODE_LENGTH] =
{
    "000",
    "001",
    "002",
    "003",
    "004",
    "005",
    "006",
    "007",
    "008",
    "009",
    "010",
    "011",
    "012",
    "013",
    "014",
    "015",
    "016",
    "017",
    "018",
    "019",
    "020",
    "021",
    "022",
    "023",
    "024",
    "025",
    "026",
    "027",
    "028",
    "029",
    "030",
    "031",
    "032",
    "033",
    "034",
    "035",
    "036",
    "037",
    "038",
    "039",
    "040",
    "041",
    "042",
    "043",
    "044",
    "045",
    "046",
    "047",
    "048",
    "049",
    "050",
    "051",
    "052"
};

// Массив AC_CODE_NAME хранит в себе названия читов, которые соответствуют кодам анти-чита
static const AC_CODE_NAME[AC_MAX_CODES][AC_MAX_CODE_NAME_LENGTH] =
{
    {"AirBreak (onfoot)"},
    {"AirBreak (in vehicle)"},
    {"Teleport (onfoot)"},
    {"Teleport (in vehicle)"},
    {"Teleport (into/between vehicles)"},
    {"Teleport (vehicle to player)"},
    {"Teleport (pickups)"},
    {"FlyHack (onfoot)"},
    {"FlyHack (in vehicle)"},
    {"SpeedHack (onfoot)"},
    {"SpeedHack (in vehicle)"},
    {"Health hack (in vehicle)"},
    {"Health hack (onfoot)"},
    {"Armour hack"},
    {"Money hack"},
    {"Weapon hack"},
    {"Ammo hack (add)"},
    {"Ammo hack (infinite)"},
    {"Special actions hack"},
    {"GodMode from bullets (onfoot)"},
    {"GodMode from bullets (in vehicle)"},
    {"Invisible hack"},
    {"Lagcomp-spoof"},
    {"Tuning hack"},
    {"Parkour mod"},
    {"Quick turn"},
    {"Rapid fire"},
    {"FakeSpawn"},
    {"FakeKill"},
    {"Pro Aim"},
    {"CJ run"},
    {"CarShot"},
    {"CarJack"},
    {"UnFreeze"},
    {"AFK Ghost"},
    {"Full Aiming"},
    {"Fake NPC"},
    {"Reconnect"},
    {"High ping"},
    {"Dialog hack"},
    {"Sandbox"},
    {"Invalid version"},
    {"Rcon hack"},
    {"Tuning crasher"},
    {"Invalid seat crasher"},
    {"Dialog crasher"},
    {"Attached object crasher"},
    {"Weapon Crasher"},
    {"Connects to one slot"},
    {"Flood callback functions"},
    {"Flood change seat"},
    {"DDos"},
    {"NOP's"}
};

// Массив AC_TRIGGER_TYPE_NAME хранит в себе названия типов срабатываний (наказаний) анти-чита.
static const AC_TRIGGER_TYPE_NAME[AC_MAX_TRIGGER_TYPES][AC_MAX_TRIGGER_TYPE_NAME_LENGTH] =
{
    {"Отключён"},
    {"Предупреждение"},
    {"Кик игрока"},
	{"Занесение в чит панель"}
};

// Массив AC_CODE_TRIGGER_TYPE хранит в себе наказания каждого кода анти-чита по умолчанию, которые будут заданы при запуске сервера.
new AC_CODE_TRIGGER_TYPE[AC_MAX_CODES] =
{
    AC_CODE_TRIGGER_TYPE_WARNING, // Airbreak (onfoot)
    AC_CODE_TRIGGER_TYPE_WARNING, // Airbreak (in vehicle)
    AC_CODE_TRIGGER_TYPE_WARNING, // Teleport (onfoot)
    AC_CODE_TRIGGER_TYPE_WARNING, // Teleport (in vehicle)
    AC_CODE_TRIGGER_TYPE_WARNING, // Teleport (into/between vehicles)
    AC_CODE_TRIGGER_TYPE_WARNING, // Teleport (vehicle to player)
    AC_CODE_TRIGGER_TYPE_WARNING, // Teleport (pickups)
    AC_CODE_TRIGGER_TYPE_WARNING, // FlyHack (onfoot)
    AC_CODE_TRIGGER_TYPE_WARNING, // FlyHack (in vehicle)
    AC_CODE_TRIGGER_TYPE_WARNING, // SpeedHack (onfoot)
    AC_CODE_TRIGGER_TYPE_WARNING, // SpeedHack (in vehicle)
    AC_CODE_TRIGGER_TYPE_KICK, // Health hack (in vehicle)
    AC_CODE_TRIGGER_TYPE_KICK, // Health hack (onfoot)
    AC_CODE_TRIGGER_TYPE_KICK, // Armour hack
    AC_CODE_TRIGGER_TYPE_KICK, // Money hack
    AC_CODE_TRIGGER_TYPE_KICK, // Weapon hack
    AC_CODE_TRIGGER_TYPE_KICK, // Ammo hack (add)
    AC_CODE_TRIGGER_TYPE_KICK, // Ammo hack (infinite)
    AC_CODE_TRIGGER_TYPE_KICK, // Special actions hack
    AC_CODE_TRIGGER_TYPE_WARNING, // GodMode from bullets (onfoot)
    AC_CODE_TRIGGER_TYPE_WARNING, // GodMode from bullets (in vehicle)
    AC_CODE_TRIGGER_TYPE_KICK, // Invisible hack
    AC_CODE_TRIGGER_TYPE_KICK, // Lagcomp-spoof
    AC_CODE_TRIGGER_TYPE_KICK, // Tuning hack
    AC_CODE_TRIGGER_TYPE_WARNING, // Parkour mod
    AC_CODE_TRIGGER_TYPE_KICK, // Quick turn
    AC_CODE_TRIGGER_TYPE_KICK, // Rapid fire
    AC_CODE_TRIGGER_TYPE_KICK, // FakeSpawn
    AC_CODE_TRIGGER_TYPE_KICK, // FakeKill
    AC_CODE_TRIGGER_TYPE_WARNING, // Pro Aim
    AC_CODE_TRIGGER_TYPE_WARNING, // CJ run
    AC_CODE_TRIGGER_TYPE_WARNING, // CarShot
    AC_CODE_TRIGGER_TYPE_WARNING, // CarJack
    AC_CODE_TRIGGER_TYPE_KICK, // UnFreeze
    AC_CODE_TRIGGER_TYPE_WARNING, // AFK Ghost
    AC_CODE_TRIGGER_TYPE_WARNING, // Full Aiming
    AC_CODE_TRIGGER_TYPE_KICK, // Fake NPC
    AC_CODE_TRIGGER_TYPE_KICK, // Reconnect
    AC_CODE_TRIGGER_TYPE_WARNING, // High Ping
    AC_CODE_TRIGGER_TYPE_KICK, // Dialog Hack
    AC_CODE_TRIGGER_TYPE_KICK, // Sandbox
    AC_CODE_TRIGGER_TYPE_KICK, // Invalid Version
    AC_CODE_TRIGGER_TYPE_KICK, // Rcon hack
    AC_CODE_TRIGGER_TYPE_KICK, // Tuning crasher
    AC_CODE_TRIGGER_TYPE_KICK, // Invalid seat crasher
    AC_CODE_TRIGGER_TYPE_KICK, // Dialog crasher
    AC_CODE_TRIGGER_TYPE_KICK, // Attached object crasher
    AC_CODE_TRIGGER_TYPE_KICK, // Weapon crasher
    AC_CODE_TRIGGER_TYPE_KICK, // Connects to one slot
    AC_CODE_TRIGGER_TYPE_KICK, // Flood callback functions
    AC_CODE_TRIGGER_TYPE_KICK, // Flood change seat
    AC_CODE_TRIGGER_TYPE_KICK, // DDos
    AC_CODE_TRIGGER_TYPE_KICK // NOP`s
};
new
    AC_CODE_TRIGGERED_COUNT[AC_MAX_CODES] = {0, ...}; // Массив, хранящий количество срабатываний того или иного кода анти-чита на протяжении текущей сессии

new
    pAntiCheatLastCodeTriggerTime[MAX_PLAYERS][AC_MAX_CODES], // Массив, хранящий последнее время срабатывания каждого кода анти-чита на игрока
    pAntiCheatSettingsPage[MAX_PLAYERS char], // Массив, хранящий номер страницы настроек, на которой сейчас находится игрок
    pAntiCheatSettingsMenuListData[MAX_PLAYERS][AC_MAX_CODES_ON_PAGE], // Массив, хранящий в себе идентификаторы (ID) отображённых анти-читов на текущей странице, при их настройке в диалоге
    pAntiCheatSettingsEditCodeId[MAX_PLAYERS]; // Массив, хранящий номер кода анти-чита, который редактируется игроком

new Iterator:streamed_players[MAX_PLAYERS]<MAX_PLAYERS-1>;
new Iterator:streamed_vehicles[MAX_PLAYERS]<MAX_VEHICLES-1>;

new Iterator:logged_players<MAX_PLAYERS-1>;
new Iterator:admin_players<MAX_PLAYERS-1>;

new ip_white_list[5][17];

/******************************************************************************/

#define IsPlayerMobile(%0) player_mobile[%0]

native gpci(playerid, buffer[], size = sizeof(buffer));

new bool: player_mobile[MAX_PLAYERS];

/******************************************************************************/

// ----------------------------------------------

#define c_green             "{66CC00}"
#define c_orange_red        "{FF4500}"
#define c_light_grey        "{BDBABD}"
#define c_orange            "{F7C300}"
#define c_yellow            "{FFFF00}"
#define c_red               "{FF0000}"
#define c_gold              "{FFD700}"
#define c_server            "{296A8C}"
#define c_white             "{FFFFFF}"
#define c_crimson           "{DC143C}"
#define c_grey              "{AFAFAF}"
#define c_silver            "{C0C0C0}"
#define c_succes            "{228B22}"

// ----------------------------------------------

#define scm_sucess              ""c_green"|"c_white" "
#define scm_error               ""c_red"|"c_white" "
#define scm_info                ""c_gold"|"c_white" "
#define scm_dialog              ""c_server"|"c_white" "

// ----------------------------------------------

#define col_middle_white					0xAAAAAAFF
#define col_white							0xFFFFFFFF
#define col_gray							0x828282FF
#define col_green							0x55D400FF
#define col_light_purple					0xC2A2DAAA
#define col_light_red						0xFF6347FF
#define col_blue							0x296A8CFF
#define col_lblue 							0x33AAFFFF
#define col_yellow	 						0xFFFF00AA
#define col_lgreen		 					0x9ACD32FF
#define col_useless	 						0x7FB151FF
#define col_succes 							0x228B22FF
#define col_wavy							0x14A3FFFF
#define col_server							0x296A8CFF
#define col_orange_red						0xFF4500FF
#define col_gold 							0xFFD700FF
#define col_silver 							0xC0C0C0FF

#define COLOR_WHITE 	-1
#define COLOR_GREY		0xACACACFF
#define COLOR_DARKRED	0xBC2C2CFF
#define COLOR_LIGHTBLUE 0x039CFFFF
#define COLOR_GOLD		0xF6A904FF
#define COLOR_GREEN		0x2BB000FF

#define callback:%0(%1)						forward %0(%1); public %0(%1)

#define RandomEx(%1,%2) 					(random(%2-%1)+%1)


// --------------------------------------------------------------

const max_family = 500;

enum _fam_enum_
{
    fam_id,
    fam_type,
    fam_name[68],
    fam_chat_color[8],
    fam_creator[MAX_PLAYER_NAME],
    fam_nationality,
    fam_settings[8],

    fam_bank,
    fam_house,

    fam_drugs,
    fam_materials,
    fam_guns,
    fam_dorm_status,

    fam_members,

    fam_rating,
    fam_ticket,

    fam_max_car,
}
new family_info[max_family][_fam_enum_], family_count = 0;

new family_rank[max_family][20][30],
	family_top[3] = {0, ...},
	family_ticket[3] = {5, 3, 1};

new Iterator:family_players[max_family]<MAX_PLAYERS-1>;
new Iterator:family_vehicles[max_family]<MAX_VEHICLES-1>;

new family_cars[max_family] = {0, ...};
new family_chat_color[5][8] = {"FFFFFF","FFD39B","FFFF00","54FF9F","98F5FF"};


// -------------------------------------------------------------- report

const max_report = 50;

new report_text[max_report][141];
new report_text_admin[max_report][131];
new report_player[max_report] = {-1,...};
new report_id[MAX_PLAYERS] = {-1,...};
new report_slot[max_report] = {-1,...};
new bool: report_cooldown[MAX_PLAYERS];

// --------------------------------------------------------------

// --------------------------------------------------------------

/*

		Телефоны

*/

new Text:Samsung_S20_TD[81];
new Text:Iphone_TD[80];

/*

		Текстдрав прогрузки текстур

*/

new Text:Loading_TD[28];
new PlayerText:Loading_PTD[MAX_PLAYERS][1];

/*

		ПТС

*/

new Text:Carpass_TD[62];
new PlayerText:Carpass_PTD[MAX_PLAYERS][7];

/*

		Паспорт

*/

new Text:Passport_TD[6];
new PlayerText:Passport_PTD[MAX_PLAYERS][39];


/*

		Регистрация / Авторизация

*/

new Text:Registration_TD[57];
new Text:Autorization_TD[27];

new PlayerText:Registration_PTD[MAX_PLAYERS][1];
new PlayerText:Autorization_PTD[MAX_PLAYERS][1];

/*

		Багажник

*/

new Text:Trunk_TD[27];
new PlayerText:Trunk_PTD[MAX_PLAYERS][11];

/*


*/

#if !defined INTERIOR_ID_PHOTOGRHAPHER
	const INTERIOR_ID_PHOTOGRHAPHER = 16;
#endif

main();

// ----------------------------------------------

const TYPE_LOG_KICK = 0;
const TYPE_LOG_WARN = 1;
const TYPE_LOG_BAN = 2;
const TYPE_LOG_UNBAN = 3;
const TYPE_LOG_UNWARN = 4;
const TYPE_LOG_CHANGENAME = 5;
const TYPE_LOG_MKL = 6;
const TYPE_LOG_JAIL = 7;
const TYPE_LOG_MUTE = 8;
const TYPE_LOG_UNMUTE = 9;
const TYPE_LOG_UNJAIL = 10;
const TYPE_LOG_INVITE = 11;
const TYPE_LOG_UVAL = 12;
const TYPE_LOG_AGIVERANK = 13;
const TYPE_LOG_OBWYAK = 14;
const TYPE_LOG_LMENU = 15;
const TYPE_LOG_ADMIN = 16;
const TYPE_LOG_BL = 17;

// ----------------------------------------------

/*
			Server data
*/
new sql_connection;

new global_hour ,
	global_weather;

new
	global_string[2512],
	dlobal_string[1024],
	slobal_string[512];

new
    player_fon_timer[MAX_PLAYERS],
    player_fon_box[MAX_PLAYERS];

/*

		quests

*/

#define MAX_QUEST_ACTORS 5
enum actor_quest
{
	actor_skin,
	actor_name[12],
	Float:actor_pos[4]
}

new quest_actor[MAX_QUEST_ACTORS][actor_quest] =
{
	{26, "Джереми", {2840.6277,1297.1078,11.3900,130.6354}},
	{26, "Джереми", {1692.9431,-2333.9421,13.5469,38.7075}},
	{26, "Майк", {996.2280,-1353.6508,13.8630,178.5401}},
	{26, "Тонни", {1768.6504,-1886.6440,13.5534,177.1395}},
	{26, "Грег", {-1977.9573,143.4702,27.6939,239.2599}}
};

#define MAX_QUESTS 8
enum qinfo_
{
	q_name[64],
	q_text[258]
}

new quest_info[MAX_QUESTS][qinfo_]=
{
	{"Стартовый капитал",""c_white"Заработайте 2500$ на лесопилке.\n\n"c_grey"Награда:\n\n"c_white"* 3000$ + 2 очка опыта"},
	{"Мастер вождения",""c_white"Получите водительские права.\n\n"c_grey"Награда:\n\n"c_white"* + 3 очка опыта"},
	{"Добытчик",""c_white"Добудьте и отвезите на склад 10 тележек руды на шахте.\n\n"c_grey"Награда:\n\n"c_white"* 5000$"},
	{"Безопасный сейф",""c_white"Откройте банковский счёт.\n\n"c_grey"Награда:\n\n"c_white"* 1000$"},
	{"Самодостаточность",""c_white"Заработайте 15.000$ за автобусные рейсы.\n\n"c_grey"Награда:\n\n"c_white"* 15.000$"},
	{"Книга знаний",""c_white"Купите справочник в одном из 24/7.\n\n"c_grey"Награда:\n\n"c_white"* 3000$"},
	{"Владыка грузоподъёмника",""c_white"Перевезите 10 контейнеров в порту.\n\n"c_grey"Награда:\n\n"c_white"* 7000$"},
	{"Всегда в моде",""c_white"Купите себе новую одежду в одном из магазинов одежды.\n\n"c_grey"Награда:\n\n"c_white"* 7.000$"}
};

new quest_status[MAX_PLAYERS][MAX_QUESTS];
new quest_progress[MAX_PLAYERS][MAX_QUESTS];

/*


		other


*/

new CarMenuSelectedCar[MAX_PLAYERS];

new Text:TextDrawSpeed[55],
	Text:TextDrawCarMenu[50],
	PlayerText:TextDrawSpeedP[MAX_PLAYERS][8];


/*

		pickups

*/

#define MAX_PICKUP	4096

#define pick_type_hentrance 				1
#define pick_type_hexit 					2
#define pick_type_bentrance 				3
#define pick_type_bexit 					4
#define pick_type_teleportation 			5
#define pick_type_server			 		6
#define pick_type_clentrance				7
#define pick_type_fientrance                8
#define pick_type_fiexit                	9

/******************************************************************/

enum _:E_BUREAU_INFO_
{
	bool: bActive,
	bCarModel,
	bColor1,
	bColor2,
	bSalonPrice,
	bAuctionPrice,
	bStrengthPercentage,
	bMaxSpeed,
	bMileage,
	bool:bTuning,
	bool:bPTuning,
	bCurrentRate,
	bRateInitiator[MAX_PLAYER_NAME-3],
	bRaterID,
	bTime,
	bDeliveryTime
}
new bureauInfo[MAX_BUREAU][MAX_AUCTION_CARS][E_BUREAU_INFO_];
new portInfo[MAX_BUREAU * MAX_AUCTION_CARS][E_BUREAU_INFO_];

static const E_BUREAU_INFO__EOS_[E_BUREAU_INFO_] =
{
	false,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	0,
	false,
	false,
	0,
	EOS,
	-1,
	0,
	0
};

new Text:AuctionGlobalTextDraws[MAX_AUCTION_GLOBAL_TEXT_DRAWS];
new PlayerText:AuctionPlayerTextDraws[MAX_PLAYERS][MAX_AUCTION_PLAYER_TEXT_DRAWS];

new Float:PortCarSpawns[][] =
{
	{-1737.3162,70.1695,3.2847},
	{-1737.4431,67.0080,3.2847},
	{-1737.6472,63.7208,3.2847},
	{-1737.6412,60.4336,3.2847},
	{-1737.4703,57.3733,3.2847},
	{-1737.5516,54.0708,3.2847},
	{-1737.7354,50.9582,3.2847},
	{-1737.3367,47.7742,3.2847},
	{-1737.5211,44.5083,3.2847},
	{-1737.5002,20.9534,3.2847},
	{-1737.5527,17.7538,3.2847},
	{-1737.4506,14.5410,3.2847},
	{-1737.6881,11.3842,3.2847},
	{-1737.6052,8.1429,3.2847},
	{-1737.7052,4.9223,3.2818},
	{-1737.4720,1.7255,3.2818},
	{-1737.9193,-1.4781,3.2818},
	{-1737.6820,-4.6473,3.2833}
};

new AuctionVehiclesList[] = {411, 424, 426, 429, 451, 477, 480, 494, 495, 506, 533, 534, 535, 536, 541, 545, 555, 558, 559, 560};
new VehicleComponents[] = {0, 1008, 1009, 1010, 1018, 1019, 1020, 1021, 1022, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
							1082, 1083, 1084, 1085, 1086, 1087};

new runningAuctionsCount = 0, unactiveCars = 0;
new bureauSfEnterPick, bureauExitPick; //bureauLsEnterPick, bureauLvEnterPick;
new selectedCar[MAX_PLAYERS] = {-1, ...};

/*****************************************************************************************/

enum _pickup
{
	pick_id,
	pick_model,
	pick_type,
	pick_item,
	Float:pick_pos[3]
};

new pick_info[MAX_PICKUP][_pickup];



new server_bonus;

/*
			dialog list
*/
enum
{
	d_none,
	d_login,
	
	d_bad_login,
	d_reg_pass,
	d_reg_email,
	d_reg_referal,
	d_reg_gender,
	d_reg_age,
	d_reg_race,
	d_house,
	d_h_radio,
	d_h_radio_url,
	d_sellhouse,
	d_to_do_rate,
	d_auc_sellcar,
	d_car_take,
	d_car_take_2,
	d_gzowner,
	d_hmenu,
	d_h_sell_accept,
	d_hmenu_stats,
	d_h_improvement,
	d_h_improvement_accept,
	d_h_rent_invite,
	d_h_rent_mn,
	d_rent_invite_money,
	d_rent_invite_days,
	d_h_rent_select,
	d_h_rent_list,
	d_rent_accept,
	d_h_clothes,
	d_b_buy,
	d_b_exit,
	d_b_panel_gas,
	d_b_panel,
	d_bpanel_money,
	d_bpanel_info,
	d_bpanel_fee,
	d_bpanel_sell,
	d_bpanel_sell_gov,
	d_bpanel_sell_id,
	d_bpanel_sell_price,
	d_bpanel_buy,
	
	d_offadmins,
	d_offadmins_menu,
	d_offadmins_menu_rank,
	d_offadmins_menu_info,
	
	d_offleaders,
	d_offleaders_menu,
	d_offleaders_menu_info,
	
	d_island,
	d_island_stats,
	d_island_freeze,
	d_island_healme,
	d_island_radio_url,
	d_island_improve,
	d_island_improve_accept,
	d_sellisland,
	
 	d_reports,
	
	d_setstat,
	d_setstat_1,
	d_setstat_2,
	d_mm,
	d_mm_stats,
	d_mm_stats_2,
	d_mm_rules,
	d_mm_fstyle,
	d_mm_walkstyle,
	d_mm_textstyle,
	d_mm_cmds,
	d_mm_security,
	d_mm_request,
	d_mm_request_2,
	d_mm_changename,
	d_mm_promocode,
    d_makeleader,
	d_alogin,
	d_alogin_reg,
	d_animations,
	d_tp,
	d_tp_newbie,
	d_tp_org,
	d_tp_jobs,
	d_tp_licenses,
	d_tp_main,
	d_tp_vehicle,
	d_invite_box,
	d_set_fskin,
	d_invite_skin,
	d_rank,
	d_dip_list,
	d_dip_change,
	d_give_mc,
	d_heal,
	d_heal_2,
	d_lmenu_rankname_list,
	d_lmenu_rankname_set,
	
	d_afainfo,
	d_redpanel,
	d_redpanel_distribute,
	
	d_promo_list,
	d_promo_list_enter,
	d_promo_settings,
	d_promo_edit,
	
	d_bank,
	d_bank_control,
	d_bank_bills,
	d_bank_phone,
	d_bankticket_list,
	d_bankticket_stats,
	d_bank_phone_money,
	d_bankticket_info,
	d_main_deposit,
	d_deposit_pincode,
	d_deposit_info,
	d_deposit_put,
	d_deposit_take,
	d_deposit_tophone,
	d_row_deposit,
	d_deposit_transfer_id,
	d_deposit_transfer_money,
	d_deposit_create_name,
	d_deposit_create_pass,
	d_mm_cmd_list,

    d_anticheat_settings,
    d_anticheat_edit_code,

    d_carmenu,

	d_ahelp,
    d_ahelp_back,

	d_cellar,
	d_cellar_clmenu,


	d_job_skill,
	d_mm_job_skills,

	d_questlist,
	d_quest_acept,

	d_vacancy,
	d_vacancy_create,
	d_vacancy_create_end,

    d_electroshop,
    d_shop_phone,
	d_pharm_shop,
	d_shop,
	d_shop_sim,
	d_job_miner,
	d_job_factory,
	d_job_sawmil,
	d_advert,
	d_ad_edit,
	d_ad_list,
	d_ad_redit,
	d_ad_delete,
	d_news_menu,
	d_news_phone,
	d_ammo_shop,
	d_ammo_shop_select,
	d_radio_select,
	d_radio_list,		// Список радиостанций(интернет-радио)
	d_numether,
	d_ether_calling,
	d_exam_result,
	d_auto_exam_1,
	d_auto_exam_2,
	d_auto_exam_3,
	d_auto_test_1,
	d_auto_test_2,
	d_auto_test_3,
	d_auto_test_4,
	d_auto_test_5,
	d_give_lic,
	d_give_lic2,
	d_rent_car,
	d_bus_route,
	d_bus_price,
	d_end,
	d_job,
	d_taxi,
	d_taxi_mark,
	d_refill,
	d_repair,
	d_start_mech,
	d_mech_contract,
	d_tune,
	d_tun_engine,
	d_tun_brake,
	d_tun_stability,
	d_tun_engine_accept,
	d_tun_brake_accept,
	d_tun_stability_accept,
	d_atm,
	d_main_atm,
	d_atm_phone,
	d_atm_phone_money,
	d_atm_bills,
	d_ticket_info,
	d_ticket_list,
	d_ticket_stats,
	d_atm_info,
	d_atm_take,
	d_b_story,
	d_truck_buy,
	d_skin_shop,
	d_buy_skin,
	d_buy_autosalon,
	d_fixcar,
	d_sellcar,
	d_sellcar_gov,
	d_carpanel,
	d_carpanel_2,
	d_carbuy,
	d_phone_main,
	d_phone_menu,
	d_pd_elevator,
	d_player_target,
	d_lmenu,
	d_uninvite,
	d_uninvite_reason,
	d_invite,
	d_setrank_id,
	d_offmembers_selection,
	d_offmembers_filter,
	d_offmembers_list,
	d_offmembers_pl_menu,
	d_offmembers_pl_rank,
	d_offmembers_pl_menu_info,
	d_gps,
	d_gps_car,
	d_take,
	d_gps_0,
	d_gps_1,
	d_gps_2,
	d_gps_3,
	d_gps_4,
	d_gps_5,
	d_gps_6,
	d_gps_7,
	d_gps_8,
	d_safe_changepin,
	d_safe_guns,
	d_safe_drugs_put,
	d_safe_drugs_get,
	d_safe_money_put,
	d_safe_money_get,
	d_safe_access,
	d_safe,
	d_safe_pin,
	d_safe_guns_put,
	d_safe_guns_get,
	d_h_freeze,
	d_cop_break,
	d_police_comp,
	d_police_comp_2,
	d_ss_clothes,
	d_carmarket,
	d_carmarket_price,
	d_carmarket_buy,
	d_service,
	d_gz_sell_accept,
	d_biz_sell_accept,
	d_blacklist,
	d_blinvite,
	d_bluninvite,
	d_blclear,
	d_makeadmin,
	d_makegun,
	d_makegun_,
	d_gun_sell_accept,
	d_drugs_sell_accept,
	d_bpanel_cost,
	d_dorm,
	d_drugs_put,
	d_ammo_put,
	d_guns_put,
	d_money_put,
	d_drugs_get,
	d_ammo_get,
	d_guns_get,
	d_money_get,
	d_lspd_payments,
	d_reg_vehicle,
	d_bail,
	d_bail_info,
	d_bail_info_list,
	d_duty,
	d_armoury,
	d_mc_elevator,
	d_mc_menu,
	d_mc_hospital,
	d_mc_medcard,
	d_mc_heal,
	d_mc_complaints,
	d_complaints_list,
	d_drug_dealer,
	d_cellar_menu,
	d_cellar_seed,
	d_bar, d_cafe,
	d_car_shop,
	d_delivery,
	d_delivery_buy,
	d_delivery_bid,
	d_delivery_list,
	d_delivery_end,
	d_order_info,
	d_bpanel_priceorder,
	d_bpanel_countorder,
	d_bpanel_order,
	d_bpanel_money_put,
	d_bpanel_money_take,
	d_armpanel,
	d_armpanel_load,
	d_armpanel_info,
	d_armpanel_delivery,
	d_economy,
	d_economy_info,
	d_economy_transitcount,
	d_economy_transit,
	d_economy_salary_set,
	d_economy_salary_fraction,
	d_economy_salary_ranklist,
	d_free_accept,
	d_change_pass,
	d_graph_code,
	d_vk_id_info,
	d_vk_id,
	d_gauth_info,
	d_gauth_code,
	d_security_history,
	d_mm_settings,
	d_mm_settings_2,
	d_mm_enhancements1,
	d_mm_enhancements2,
	d_clearinfo,
	d_security,
	d_vk_id_code,
	d_vk_entrance,
	d_googleauth_entrance,
	d_gunlic_accept,
	d_boat_exam_1,
	d_boat_exam_2,
	d_boat_exam_3,
	d_fly_exam_1,
	d_fly_exam_2,
	d_fly_exam_3,
	d_air_exam_test,	// Проверка навыков
	d_boat_exam_test,	// Проверка навыков
	d_ganginfo,
	d_paygang,
	d_gangtop,
	d_gangtop_info,
	d_ganginfo_stats,
	d_service_cop,
	d_service_med,
	d_service_taxi,
	d_service_mech,
	d_service_prod,
	d_direction,
	d_direction_info,
	d_crim_ammo_shop_select,
	d_crim_ammo_shop,
	d_gym_training,
	d_beta_code,
	d_sellsim_accept,
	
	d_family_creator,
	d_family_fixcar,
	d_family_fixcar_1,
	d_family_fixcar_2,
	d_family_bank,
	d_family_bank_put,
	d_family_bank_take,

	d_family_hall,
	d_family_create,
	d_family_create_type,
	d_family_rename,
	d_family_list,

	d_family,
	d_family_omembers,
	d_family_settings,
	d_family_settings_c,
	d_family_settings_select,
	d_family_color_rgb,
	d_family_color,
	d_family_rank_list,
	d_family_national,
	d_family_rank_name,
	d_family_invite,
	d_family_rank,
	d_family_info,

	d_blacklist_family,
	d_blinvite_family,
	d_bluninvite_family,
	d_blclear_family,

	d_offamily_lognext,
	d_offamily_logback,

	d_family_lognext,
	d_family_logback,
	d_family_logs,

	d_offamily_list,
	d_offamily_pl_menu,
	d_offamily_pl_rank,
	d_offamily_pl_menu_info,

    d_offamily_bl_list,
    d_offamily_bl_pl_menu,
    d_offamily_bl_pl_menu_info,
	
	d_election_msgbox,
	d_election_list,
	d_election,
	d_election_delete,
	d_vote,
	d_sm_bet,
	d_dice_bet,
	d_dice_exit,
	d_camikaze_cfexit,
	d_camikaze_exit,
	d_cm_bet,
	d_casino_job,
	d_port_job,
	d_bank_org_transit,
	d_bank_org_transitcount,
	d_b_improvement,
	d_b_improvement_accept,
	d_fine,
	d_fine_accept,
	d_b_fee_enter,
	d_accessories,
	d_accessories_exit,
	d_buy_accessories,
	d_accept_accessories,
	d_main_accessories,
	d_use_accessories,
	d_help, d_help_box,
	d_debtors_list,
	d_debtors_pl_menu,
	d_debtor_info,
	d_debtor_sell,
	d_port_help, d_port_help_1, d_port_help_2,
	d_spawnchange,
	d_reg_mp,
	d_rent_faggio,
	d_donate, d_donate_money, d_donate_rename, d_donate_hunger, d_donate_age, d_donate_maxveh, d_donate_unwarn, d_donate_droul,
	d_donate_jobinfo, d_donate_vipgold,
	d_truck_panel, d_truck_info, d_truck_loadings, d_truck_unloadings,
	d_mp,
	d_mp_gun,
	d_boat_freeze,
	d_boat_clothes,
	d_filling,
	d_filling_canister,
	d_rd_end, d_dr_skin, d_referals_list,
	d_lmenu_fixcar,

	d_donate_skin_list,
	d_donate_skin,

	d_training_centr,
	d_duel_invite,
	d_duel_invite_money,
	d_accept_duel,
	d_offadmin,
	
	d_mw_list,
	d_capture_freeze,

	d_fbi_cover,
	d_fbi_cover_skin,
	d_giveleader,

	d_main_inventory,
	d_pharmshop,

	d_ssf,
	d_ffind,

	d_rieltore,
	d_rieltore_house,
	d_rieltore_biz,
	d_rieltore_island,
	d_rieltore_island_free,
	d_rieltore_island_select_info,
	d_island_rieltore,

	d_cellarmenu,
	d_cl_improvement,
	d_cl_improvement_accept,
	d_cl_warehouse_money_get,
	d_cl_warehouse_money_put,
	d_cl_warehouse_guns_put,
	d_cl_warehouse_guns_get,
	d_cl_warehouse_drugs_put,
	d_cl_warehouse_drugs_get,
	d_cl_warehouse_access,
	d_cl_warehouse_guns,

	d_cellar_clseed,
	d_cellar_cl_ceedmenu,
	d_cellar_action,

	d_cellar_makegun_,
	d_cellar_makegun,

	d_photographer_invite,
	d_photographer_invite_1,
	d_photographer_actor_dialog,
	d_photographer_uninvite,
	
	d_pier_delivery_select,
	d_island_delivery_select,

	d_delivery_human_pier,
	d_delivery_human_island,
	d_delivery_human_island_1,

	d_delivery_car_pier,
	d_delivery_car_pier_1,

	d_delivery_car_island,
	d_delivery_car_island_1,
	d_delivery_car_island_2,

	d_clothes_bath,
	d_job_gazon,
	d_job_gazon_2
}

new static_object_count;
/*

			Jobs

*/

#define 		job_none			0

#define 		job_bus				1
#define 		job_taxi			2
#define 		job_mechanic		3
#define 		job_trucker			4
#define 		job_delivery		5
#define 		job_fuel_delivery	6
#define 		job_gazon	        7


#define 		job_miner			50
#define 		job_factory		51
#define 		job_sawmil		52
#define 		job_forklift		53
#define 		job_porter			54


new Float: miner_cp[11][3] = {
{2476.4668, -739.4859, 950.2660},
{2469.1460, -733.7218, 950.2660},
{2459.3906, -734.7656, 950.2660},
{2453.3406, -739.9515, 950.2660},
{2437.3564, -745.9571, 950.2660},
{2430.3076, -735.3958, 950.2660},
{2419.6729, -734.7622, 950.2660},
{2412.8960, -739.0282, 950.2660},
{2509.8374, -716.3794, 950.2660},
{2498.9202, -719.1860, 950.2660},
{2494.4116, -730.0308, 950.2660}
};

new job_timer[MAX_PLAYERS];
new job_ac_tick[MAX_PLAYERS];






#define MAX_GUNWORK_TABLE 17


new Float: table_areas_pos[MAX_GUNWORK_TABLE][3] = {// 19198
	{-28.0294,-262.8438,1529.5376},
	{-28.0286,-265.9310,1529.5376},
	{-24.6343,-265.9243,1529.5376},
	{-24.6359,-262.7445,1529.5376},
	{-24.6357,-259.6948,1529.5376},
	{-23.0171,-259.7004,1529.5376},
	{-23.0176,-262.8910,1529.5376},
	{-23.0184,-265.9581,1529.5376},
	{-19.6240,-265.9037,1529.5376},
	{-19.6210,-262.8339,1529.5376},
	{-19.6243,-259.6277,1529.5376},
	{-22.4749,-274.0132,1529.5376},
	{-23.1504,-280.1017,1529.5376},
	{-16.2274,-274.0129,1529.5376},
	{-19.9048,-274.0132,1529.5376},
	{-19.7651,-280.1012,1529.5376},
	{-17.2986,-280.1023,1529.5376}
};

new table_area[MAX_GUNWORK_TABLE];
new table_area_toggled[MAX_GUNWORK_TABLE];

new factory_take_area;
new Float:factory_box_pos[MAX_GUNWORK_TABLE][6] = {
	{-27.223754, -263.024169, 1529.598632, 0.000000, 0.000000, -89.999977},
	{-27.223754, -266.097167, 1529.598632, 0.000000, 0.000000, -89.999977},
	{-25.503173, -265.776855, 1529.598632, 0.000000, 0.000000, 450.000000},
	{-25.503173, -262.616699, 1529.598632, 0.000000, 0.000000, 450.000000},
	{-25.503173, -259.564453, 1529.598632, 0.000000, 0.000000, 450.000000},
	{-22.162719, -259.904785, 1529.598632, 0.000000, 0.000000, 630.000000},
	{-22.162719, -263.046142, 1529.598632, 0.000000, 0.000000, 630.000000},
	{-22.162719, -266.088989, 1529.598632, 0.000000, 0.000000, 630.000000},
	{-20.481079, -265.748657, 1529.598632, 0.000000, 0.000000, 810.000000},
	{-20.481079, -262.618408, 1529.598632, 0.000000, 0.000000, 810.000000},
	{-20.481079, -259.558349, 1529.598632, 0.000000, 0.000000, 810.000000},
	{-22.631103, -274.788208, 1529.598632, 0.000000, 0.000000, 1260.000000},
	{-23.122680, -279.288696, 1529.598632, 0.000000, 0.000000, 1080.000000},
	{-16.410034, -274.788208, 1529.598632, 0.000000, 0.000000, 1260.000000},
	{-19.989990, -274.788208, 1529.598632, 0.000000, 0.000000, 1260.000000},
	{-19.681762, -279.288696, 1529.598632, 0.000000, 0.000000, 1080.000000},
	{-17.160766, -279.288696, 1529.598632, 0.000000, 0.000000, 1080.000000}
};

/*
			Player Data
*/

enum _pinfo
{
	id,
	name[MAX_PLAYER_NAME],
	main_timer,
	level,
	exp,
	age,
	admin,
	admin_played,
	money, bank,
	skin,
	org_skin,
	temp_skin[5],
	google_auth[18],
	google_auth_status,

	gender,
	mute,
	warn,
	house,
	business,
	member,	rank, leader,
	wanted,	jailed, jail, bail,
	phone_selected,
	number, phone_balance,
	job, timejob, salary,
	gun_skills[7],
	radio,
	rent_house,
	hospital,

	drive_lic,
	boat_lic,
	fly_lic,
	gun_lic,

	drugs,
	crim_ammo,
	crim_guns,

	truck_skill,
	hunger, hunger_immune,



	direct,
	aidkit, bandage, schiene, aspirin, morphine, adrenalin,

	repairkit,
	gps_tracker,
	mask,
	rope,
	canister,

	fight_skill,
	fight_style,
	seed,

	graph_code[2],
	vk_id[2],
	settings[4],
	enhancement[4],
	phone_num[10],
	load_textures,
	phones,
	vip,
	walkstyle,
	textstyle,

	hour_played,
	tax,

	family,
	donate,
	family_rang,
	Text3D:family_text,
	vote,

	f_warning,
	accessories[8],
	accessories_used[8],

	spawnchange,
	max_veh,
	tax_donate,
	promo_used,
	donate_roulette,
	
	promocode_money,
	f_mute,

	cellar,

	newbie_job_skill[4],

	promo_used_today,
	
	pBureau,
	pCurrentPage,
	pCurrentTake,
	bool:pIsOpenAuctionMenu,
	
	fam_mute,
	island,
	
	u_gpci[40]
}
new PlayerInfo[MAX_PLAYERS][_pinfo];


new opev_vehicleid[MAX_PLAYERS],
		bool: used_enter[MAX_PLAYERS];

new Float:vehicle_last_speed[MAX_PLAYERS];


new phone_info[MAX_PLAYERS][10][MAX_PLAYER_NAME];

#define WALK_DEFAULT    0
#define WALK_NORMAL     1
#define WALK_PED        2
#define WALK_GANGSTA    3
#define WALK_GANGSTA2   4
#define WALK_OLD        5
#define WALK_FAT_OLD    6
#define WALK_FAT        7
#define WALK_LADY      	8
#define WALK_LADY2      9
#define WALK_WHORE      10
#define WALK_WHORE2     11
#define WALK_DRUNK     	12
#define WALK_BLIND     	13
new walkInfo[][16] = {
	{"WALK_player"}, {"WALK_civi"}, {"WALK_gang1"}, {"WALK_gang2"}, {"WALK_old"}, {"WALK_fatold"},
	{"WALK_fat"}, {"WOMAN_walknorm"}, {"WOMAN_walkbusy"}, {"WOMAN_walkpro"}, {"WOMAN_walksexy"}, {"WALK_drunk"}, {"Walk_Wuzi"}
};
new walk_timer[MAX_PLAYERS];

new enhancement_cost[4] = {20000, 50000, 70000, 100000};

new police_gz[MAX_PLAYERS];

new Float:police_cams[12][8] = {
	{1497.95447, -1749.84155, 31.3020, 0.0, -90.0, 1495.0288, -1705.5728, 14.5467},
	{1751.59607, -1907.35706, 23.8783, 0.0, 180.0, 1796.5157, -1907.9989, 13.3984},
	{1698.52966, -2335.49121, 16.90540, 0.0, -90.0, 1692.5304, -2308.6775, 14.5156},
	{1113.64673, -1369.28857, 22.90890, 180.0, 10.7640, 945.2707, -1339.5593, 13.7419},
	{1173.24329, -1309.54675, 26.98320, 0.0, 180.0, 1187.6096, -1323.8497, 13.5591},
	{-1980.66003, 127.49276, 35.36670, 0.0, 0.0, -1990.1746, 138.3227, 27.5391},
	{-2650.33545, 616.27930, 22.47060, 0.0, 0.0, -2663.0574, 628.0182, 14.4531},
	{-2765.78760, 385.66788, 18.76630, 0.0, 180.0, -2707.8364, 376.3351, 4.9693},
	{2023.45264, 1019.24127, 18.48250, 0.0, 180.0, 2042.3330, 1005.2474, 10.6719},
	{1619.14746, 1819.49390, 22.63080, 0.0, -90.0, 1612.7747, 1863.0844, 12.0156},
	{2281.24976, 2430.47852, 26.09830, 0.0, 90.0, 2293.4014, 2393.4446, 10.8203},
	{2837.06592, 1297.60730, 14.56190, 0.0, 0.0, 2803.0425, 1293.3516, 10.7576}
};
new Float:last_coord[MAX_PLAYERS][4];
new police_cams_id[12] = {1622, 1622, 1622, 1866, 1616, 1616, 1616, 1616, 1616, 1622, 1622, 1622};
new PlayerText: ptd_policecam[MAX_PLAYERS][30];

new gunrow, drugsrow = 0;

new player_ssf[MAX_PLAYERS char];

new text_cooldown[MAX_PLAYERS];
new cmd_cooldown[MAX_PLAYERS];
new CountFloodForPlayer[MAX_PLAYERS];


new AimbotWarningss[MAX_PLAYERS];

new is_player_in_boat[MAX_PLAYERS];

new heal_cooldown[MAX_PLAYERS];
new heal_id[MAX_PLAYERS] = {INVALID_PLAYER_ID, ...};
new heal_price[MAX_PLAYERS char];

new kickout_cooldown[MAX_PLAYERS];


new call_police[MAX_PLAYERS char];
new call_medic[MAX_PLAYERS char];
new call_taxi[MAX_PLAYERS char];
new call_mechanic[MAX_PLAYERS char];


new gun_skill_up[MAX_PLAYERS char];




new seller_id[MAX_PLAYERS],
	buyer_id[MAX_PLAYERS],
	sell_price[MAX_PLAYERS],
	sell_item[MAX_PLAYERS],
	sell_type[MAX_PLAYERS];

new is_fraction_duty[MAX_PLAYERS char];
new is_gps_used[MAX_PLAYERS char];
new is_control_chat[MAX_PLAYERS char];
new in_recon_chat[MAX_PLAYERS char];
new is_tazered[MAX_PLAYERS char];
new is_drug_effect[MAX_PLAYERS char];

new is_adrenaline_effect[MAX_PLAYERS char];


new is_gym_training[MAX_PLAYERS char];

new is_leave_exam_vehicle[MAX_PLAYERS char];

new pay_day = 0;

new big_ears[MAX_PLAYERS char];

enum _reginfo
{
	reg_email[32],
	reg_referal[MAX_PLAYER_NAME],
	reg_gender,
	reg_national,
	reg_password[32],
	reg_skin,
	reg_age
}
new reg_info[MAX_PLAYERS][_reginfo];

#if !defined MAX_PHOTOGRAPHER_JOB_QUEST
	const MAX_PHOTOGRAPHER_JOB_QUEST = 24;
#endif

#if !defined MAX_NAME_PHOTOGRAPHER_POINT
	const MAX_NAME_PHOTOGRAPHER_POINT = 32;
#endif

#if !defined DEBUG_PHOTOGRAPHER_SYSTEM
	const DEBUG_PHOTOGRAPHER_SYSTEM = 0;
#endif


new const salary_photographer_quest[] =
{
    1_000,
    3_000,
    2_500,
    2_000,
    1_500,
    2_500,
    2_000

};

new const salary_administrators[] =
{
	3_000,
	5_000,
	7_000,
	9_000,
	11_000,
	13_000,
	15_000,
	20_000
};
new dynamic_area_photographer_job[MAX_PLAYERS] = {-1, ...};
new quest_photographer_id[MAX_PLAYERS] = {-1, ...};
new dynamic_sphere_photographer[MAX_PLAYERS] = {-1, ...};
new counter_photos_taken[MAX_PLAYERS char] = {0, ...};
new cylinder_photo_point[MAX_PLAYERS] = {-1, ...};
new step_photographer_job[MAX_PLAYERS] = {-1, ...};
new gps_point_photographer[MAX_PLAYERS] = {-1, ...};
new map_icon_photographer[MAX_PLAYERS] = {-1, ...};
enum e_photographer_job_info
{
	Float: pjXMinPos, // pj = photographer_job
	Float: pjYMinPos,
	Float: pjZMinPos,
	Float: pjXMaxPos,
	Float: pjYMaxPos,
	Float: pjZMaxPos,
	Float: pjXCentr,
	Float: pjYCentr,
	Float: pjZCentr,
	pjName[MAX_NAME_PHOTOGRAPHER_POINT],
}
enum e_actor_photographer_gps_point
{
	Float: x_pos_gps,
	Float: y_pos_gps,
	Float: z_pos_gps
}
new const photographer_gps_point[MAX_PHOTOGRAPHER_JOB_QUEST-4][e_actor_photographer_gps_point] =
{
	{1330.17820, -1273.9088, 13.54690,},
	{1212.15730, -1293.4856, 13.23060,},
	{2055.98000,  1042.7603, 10.83280,},
	{-1995.4968, -165.82920, 35.83450,},
	{-2012.7947,   89.46320, 27.68750,},
	{1355.52890, -1083.0909, 24.75320,},
	{-2738.1760,  366.35970, 4.401900,},
	{2414.40190,  2419.5125, 10.82030,},
	{2671.04100, -2396.3608, 13.26520,},
	{1813.10910, -1883.2084, 13.57810,},
	{338.337200,  2524.1907, 16.76190,},
	{702.524700, -1431.0851, 13.53180,},
	{-2413.0713,  488.26300, 30.06270,},
	{2211.25290, -1749.2924, 13.31220,},
	{1105.31100,  1993.9778, 10.67190,},
	{1567.14990, -1805.2639, 13.38280,},
	{-1921.4198,  728.16440, 45.02400,},
	{740.451800, -532.2566,  16.18750,},
	{1079.45420, -774.2382,  107.9345 },
	{-2608.8765,  830.4791,  49.82810 }
};
new const photographer_job_info[MAX_PHOTOGRAPHER_JOB_QUEST][e_photographer_job_info] =
{
	{1367.3854, -1250.6315, 13.5469, 1420.4756, -1310.6274, 38.5493, 1384.2460, -1291.3689, 22.3596, "Ammo LS"        		  },
	{1149.6456, -1291.1466, 13.6733, 1184.6830, -1383.1680, 34.9101, 1157.6559, -1338.0925, 18.1737, "Hospital LS"    		  },
	{1984.2190,  1076.3556, 10.8127, 1894.3024,  968.7487,  65.5272, 1945.3939,  1005.5414, 13.8135, "Casino LV"      		  },
	{-2010.6404,  -281.6642, 35.3012,-2099.0168, -200.1362,  93.4317, -2060.8982, -243.9525, 51.7099, "Driving School" 	       },
	{-1980.5017,   107.7007, 27.6789,-1921.5685,  164.8251,  41.2000, -1941.3453, 136.1931,  33.8196, "Train Station SF"       },
	{1424.0419,	 -1131.6958, 63.6833, 1424.0419,-1131.6958,  63.6833, 1401.7311, -1085.4531, 39.3858, "Bank LS"                },
	{-2757.8552,  433.0263,	 4.3688, -2806.0176,  323.2400,  48.1583, -2784.4495, 375.4502,  10.0939, "Bank SF"                },
	{2444.3281,	  2403.0166, 12.1635, 2497.4243, 2350.6899,  71.0496,  2467.6660, 2379.0286, 31.7210, "Bank LV"                },
	{2682.6980,  -2527.6489, 13.2552, 2728.1111,-2374.8691,  37.9908,  2707.0999,-2452.8826, 30.0317, "Port LS"                },
	{1811.6510,  -1868.3757, 13.5844, 1734.4515,-1935.8452,  29.1087,  1745.6530,-1907.8779, 23.6527, "Train Station LS"       },
	{435.7428,   2526.3333,  16.8225, -73.4113,  2479.1611,  65.4238,  231.2361,  2502.9556, 51.1600, "Airstrip"               },
	{742.7147,  -1440.0052,  13.5391, 699.2047, -1479.3771,  23.6800,  724.1636, -1462.7202, 12.8013, "Water school"           },
	{-2445.4780, 505.6365,   30.0929, -2500.7900,539.0537,   54.8756,  -2473.6096,523.9125,  39.3753, "FBI"                    },
	{2230.6733, -1722.4855,  13.5552, 2251.0662,-1692.9083,  23.4191,  2242.9551,-1705.5454, 16.0813, "Sports Hall"			  },
	{334.9890,  1988.4769,   40.2977, 376.2723,   1909.6768,  17.6406,  351.3325,  1954.4219, 17.6500,"Задание от старика"     }, // военнка
	{96.5056,   1809.4622,  17.6406, 169.7966,   1853.1842,  46.1755,  141.7163,  1834.8473, 17.6510, ""                       },
	{1757.7635, 1012.2910,  2.7485, 1838.2520,  1122.5527,   34.3056,  1798.8435, 1082.8340, 11.7225, "Задание от депутата"    },
	{1607.1147, 842.9328,   6.2594,  1629.2886,  858.3287,   17.3404,  1615.3962, 852.5183,  17.3404, "" 					  },
	{2060.6157, 1152.0658,  10.3113, 2087.3110,  1100.4790,  25.6398,  2070.6904, 1131.4255, 14.4550, "" 					  },
	{-2111.6799,-110.9163,  35.3203, -2136.5229,-149.5924,   43.1061, -2126.6853,-133.3892,  43.1061, "Задание от бизмесмена" },
	{-2137.5208,-150.4449,  35.3203, -2153.0164,-111.3572,   42.5756, -2145.3601,-135.4847,  37.0078, ""					  },
	{159.8607,  -1943.4482, 3.7734,  148.8078,  -1957.1865,  50.9056,  153.1500,-1953.0459,  39.3845, "Задание от бабули"	  },
	{2005.3545,  1537.2700, 14.6149, 1996.5729,  1550.0276,  20.6621,  1999.2576,1544.6112,  10.3265, "Задание от жены"  	  },
	{-1985.3851, 1132.8583, 53.2471, -2036.8679, 1102.1115,  89.3367, -2010.2142,1117.7034,  62.7589, "Задание от священника" }
};
new const photographer_msg_quest[7][] =
{
	{""c_white"\t\t\t\tПриветствую "c_server"%s"c_white"\n\
	  Нашей мэрии для того что бы подготовить отчет необходимо фото с "c_server"\"%s\""c_white".\n\
	  Ты бы не мог сделать нам пару фотографий, мы заплатим тебе за это "c_server"1000"c_white"$"},
	{""c_server"\t\t\t\t\tЗдравствуй сынок! \n\
	  "c_white"Я давно отошел от дел, но до меня дошли слухи что на военной базе продают оружие нелегалам. \n\
	  Не мог бы ты съездить на военную базу, и сделать 2-3 фотографий по периметру базы. \n\
	  \t\t\t\tЯ готов заплатить тебе за это "c_server"3.000"c_white"$"},
	{""c_white"\t\tМеня тут оповестили, что в Las Venturas очень плохие дороги. \n\
	  Но это странно, так как мы в прошлом месяце мы выделяли финансирование на ремонт. \n\
	  \t\tНе мог бы ты съездить туда и сфотографировать состояние дорог. \n\
	  \t\tУ меня совсем нет времени для того что бы сделать это самому. \n\
	  \t\t\t\tЯ заплачу тебе за это "c_server"2.500"c_white"$"},
	{""c_server"\t\t\t\t\t\t\tПривет дружище!\n\
	  \t\t\t"c_white"Я со своей командой собираюсь построить новый жилой комплекс в San Fiero\n\
  	  \t\t\tНо для того что бы мне получить инвестиции нужно разработать бизнес план.\n\
	  А для него мне нужны фотографии пустыря в городе San Fiero, я заплачу тебе "c_server"2.000"c_white"$ надеюсь ты справишься с этим заданием."},
	{""c_server"\t\t\t\t\t\tПривет внучок.\n\
	  \t\t"c_white"Не мог бы ты сделать пару фотографий маяка в городе Los-Santos.\n\
	  Когда-то давно я познакомилась там со своим мужем, мы очень хотим красивую фотографию этого места.\n\
	  \t\t\t\t\tМы заплатим тебе за это "c_server"1.500"c_white"$"},
	{""c_server"\t\t\t\t\t\tПривет!\n\
	  "c_white"У меня скоро состояться развод с мужем, но я очень хочу выиграть суд и отсудить у него все имущество.\n\
	  \tТы бы не мог проследить за ним и найти доказательства того что он мне изменяет.\n\
	  \t\t\t\t\tЯ готова тебе заплатить "c_server"2.500"c_white"$"},
	{""c_server"\t\t\t\tЗдравствуй сын мой.\n\
	  "c_white"\tЖурналисты из иерусалима захотели написать статью о моей церкви.\n\
   	  Они попросили отправить фотографии, но я к сожалению не умею фотографировать.\n\
	  \t\tНе мог бы ты сделать пару фотографий моей церкви.\n\
	  \t\t\t\tЯ заплачу тебе за это "c_server"2.000"c_white"$"}
};

enum
{
	QUEST_OLD_MILITARY = 14,
	QUEST_DEPUTY = 16,
	QUEST_BUSINESSMAN = 19,
	QUEST_GRANDMOTHER = 21,
	QUEST_WIFE = 22,
	QUEST_PRIEST = 23
};
enum e_three_text_above_actor
{
	three_dtaaText[64], // three_dtaa = 3d_text_above_actor
	Float: three_dtaaX,
    Float: three_dtaaY,
    Float: three_dtaaZ
}
enum e_actor_photographer_info
{
	skin_id,
	Float: x_pos_actor,
	Float: y_pos_actor,
	Float: z_pos_actor,
	Float: angle_actor
}

new const Float: actor_pos_photographer_quest[6][e_actor_photographer_info] =
{
    {62,  1080.8320, 1993.7107, 11.4609, 265.2118},
    {147, 1549.6675,-1809.6011, 13.5469, 267.1425},
    {304,-1942.6541, 668.6179,  46.5625, 320.2568},
    {53,   736.4537,-556.2337,  18.0129, 359.8822},
    {56,  1093.9899,-789.4968,  107.3584,32.72120},
    {221,-2620.9253, 834.0401,  52.0996, 358.7271}
};
enum e_cilinder_photographer_info
{
	Float: x_cilinder_photographer,
	Float: y_cilinder_photographer,
	Float: minz_cilinder_photographer,
	Float: maxz_cilinder_photographer
};
new const query_photographer_string[7][] =
{
	{"next_time_quest_building"    },
	{"next_time_quest_military"	},
	{"next_time_quest_deputy"      },
	{"next_time_quest_businessman"},
	{"next_time_quest_grandmother"},
	{"next_time_quest_wife"		},
	{"next_time_quest_priest"		}
};
new const Float: cylinder_photographer_info[9][e_cilinder_photographer_info] =
{
	{462.19740, 1968.0763, 44.8140, 61.2338},
	{123.99880, 1580.1536, 28.3216, 42.0199},
	{1779.1796, 876.52750, 6.3299, 15.0096},
	{1766.8756, 860.55940, 6.4000, 16.0041},
	{2078.2239, 872.07500, 3.08730, 13.2977},
	{-2127.4600, -80.38280, 31.3203, 40.2775},
	{-2115.4338, -124.7952, 31.3203, 42.3793},
	{-1957.4048, 1088.5103, 51.7188, 60.7811},
	{-2054.4014, 1165.3356, 41.4453, 53.7608}
};
new const three_text_above_actor[6][e_three_text_above_actor] =
{
	{"** Задание от бывшего военного **", 1080.8320, 1993.7107, 11.4609},
	{"** Задание от депутата **", 1549.6675,-1809.6011, 13.5469    },
	{"** Задание от бизмесмена **", -1942.6541, 668.6179,  46.5625},
	{"** Задание от бабули **",  736.4537, -556.2337, 18.0129      },
	{"** Задание от жены **",    1093.9899,-789.4968,107.3584      },
	{"** Задание от монаха **", -2620.9253, 834.0401,52.0996       }
};
new ac_info[MAX_PLAYERS][32];

#if !defined TABLE_PHOTOGRHAPHER_COOLDOWN
	#define TABLE_PHOTOGRHAPHER_COOLDOWN "`photographer_job_cooldown`"
#endif

enum _ptinfo
{
	bool:p_logged,
	p_dialog,
	p_ip[16],
	p_reg_ip[16],

	Float:p_pos[4],
	p_data[2],
	p_tp_immune_time,
	p_gun_immune_time,

	p_gun_slot[13],
	p_gun_ammo[13],
	p_gun_shots,
	p_gun_accuracy,

	p_shot_time,
	p_shot_warnings,
	p_update,

	Float:p_health,
	Float:p_armour,

	v_key,

	bool:phone_toggled,
	phone_caller,
	phone_id,

	phone_audition,

	bool:p_animation,

	pBusRoute,
	pBusPos,
	pBusPrice,
	Text3D:pBusText,
	pBusSpawnTimer,
	Float:pBusDemage,

	pTaxiPrice,
	pTaxiTurn[2],
	Text3D:pTaxi3DText,
	bool:pTaxiGoing,
	Float:pTaxiStart,
	pTaxiPass,

	Float:real_pos[3],

	air_exam_status,	// Статус проверки навыков на возд. транспорте
	air_exam_time,		// Время, в которое игрок стартовал

	boat_exam_status,	// Статус проверки навыков на вод. транспорте
	boat_exam_time,		// Время, в которое игрок стартовал


	Float:old_pos[3],
	last_unoccup_tick,
	last_alt,
	bool: lconnect,
	
	pickup_time,
	camera_timer,
	
	p_pier_status,
	p_pier_time
}
new p_t_info[MAX_PLAYERS][_ptinfo];

// ------------------[Топ навыков авиа/водн транспорт]---------------
enum serv_exam
{
	records,
	prizes,
	names[MAX_PLAYER_NAME],
}
new server_exam[20][serv_exam];
// ------------------------------------------------------------------------

new used_area[MAX_PLAYERS];
new carshot_cheat_count[MAX_PLAYERS char];

new Float:last_speed[MAX_PLAYERS];

new player_shot_count[MAX_PLAYERS char];

new opev_opsc_time_differ[MAX_PLAYERS];
new eev_called[MAX_PLAYERS char];

new player_trailer[MAX_PLAYERS];

new anim_loaded[MAX_PLAYERS char];


new gotome_player[MAX_PLAYERS] = {-1,...};
new pl_afk_time[MAX_PLAYERS];


new exv_called[MAX_PLAYERS char];


new Float:speed_player[MAX_PLAYERS];
new player_vehicle[MAX_PLAYERS];


new Text:td_regskins[13];
new registration_skins[3][2][5] = {
	{{4, 7, 14, 15, 262}, {40, 69, 131, 190, 215}},
	{{23, 29, 37, 96, 234}, {85, 90, 151, 191, 192}},
	{{58, 60, 170, 210, 229}, {55, 56, 169, 224, 226}}
};



new Float:newbie_spawn_pos[3][3][4] =
{
	{
		{995.9619, -1367.8427, 14.5000, 0.000},
		{1006.5240, -1355.1487, 14.5000, 180.000},
		{1034.7451, -1363.0724, 14.5000, 90.000}
	},
	{
		{1756.5187,-1902.9701, 14.5000, 270.000},
		{1756.5187,-1894.2827, 14.5000, 270.000},
		{1756.5187,-1886.8531, 14.5000, 270.000}
	},
	{
		{1680.8912, -2363.2510, 14.5000, 354.4137},
		{1685.3904, -2362.9316, 14.5000, 355.8226},
		{1686.6368, -2356.6345, 14.5000, 39.8869}
	}
};


new change_name[MAX_PLAYERS][MAX_PLAYER_NAME];



new vk_checking[MAX_PLAYERS char],
	google_checking[MAX_PLAYERS char];


// Эфир новостников

new is_ether[MAX_PLAYERS char];
new is_ether_calling[MAX_PLAYERS char];

/*

		Cellar system

*/
new cellar_count;
#define MAX_CELLAR	100
enum _cellar_info
{
	cl_id,
	cl_owner,
	cl_owner_name[MAX_PLAYER_NAME-4],
	cl_price,
	Float:cl_pos[4],
	cl_pickup,
	cl_exit_pickup,
	cl_closed,

	cl_safe_data[2],
	cl_safe_guns[6],
	cl_seed,
	cl_seed_result,

	cl_improve[4],
};

new cellar_info[MAX_CELLAR][_cellar_info];

new cl_improve_price[4] = {10000, 12500, 15000, 20000};
new cl_improve_name[4][64] = {"Укрытие", "Склад","Стол для сборки оружия", "Гидропонная ферма"};

/*

		Island system

*/

const max_island = 20;
const fints_count = 3;

enum _finfo
{
	fi_id,
	fi_owner,
	fi_owner_name[MAX_PLAYER_NAME],
	fi_price,
	fi_family,

	fi_int,
	fi_vw,
	Float:fi_pos[4],
	fi_pickup,
	fi_exit_pickup,
	Text3D:fi_text,

	fi_improve[6],
	fi_safe_code,
	fi_safe_data[2],
	fi_safe_guns[6],

	fi_radio_status,
	fi_radio_url[128]
};
new fi_info[max_island][_finfo], island_count;

const fi_improve_audio = 0;
const fi_improve_freeze = 1;
const fi_improve_healme = 2;
const fi_improve_safe = 3;
const fi_improve_delivery_car = 4;
const fi_improve_subsidies = 5;

new fi_improve_price[6] = {20000, 30000, 35000, 45000, 60000, 100000};
new fi_improve_name[6][25] = {"Акустическая система", "Холодильник", "Мед. пункт", "Склад", "Доставка транспорта", "Оформление субсидии"};

enum _family_int
{
	fint_class,
	Float:fint_position[4],
	Float:fspawn_position[4],
	fint_int,
	fint_description[54]
};

new family_int[fints_count][_family_int] =
{
	{1, {-3147.1521, 3204.1270, 560.7055, 270.2781}, {-3145.1226, 3204.1196, 560.7055, 269.6122}, 3, "Маленький остров"},
	{1, {-372.5723, -808.4107, 899.0613, 266.8960}, {-370.4420, -808.4797, 899.0613, 269.0600}, 3, "Средний остров"},
	{1, {1115.6505, 1693.0482, 857.9690, 270.3918}, {1117.2903, 1693.1025, 857.9690, 271.889}, 3, "Большой остров"}
};

new Float:island_safe_pos[fints_count][3] = {
	{-3142.9338, 3216.7175, 560.7055},
	{-373.8676, -787.5314, 899.0613},
	{1119.5160, 1682.8324, 857.9690}
};

new Float:island_freeze_pos[fints_count][3] = {
	{-3126.9866, 3211.2024, 560.7055},
	{-357.8584, -784.3525, 899.0613},
	{1128.6576, 1682.9292, 857.9690}
};

new Float:island_healme_pos[fints_count][3] = {
	{-3142.0222, 3194.6375, 560.7055},
	{-372.4976, -770.3677, 899.0613},
	{1147.9456, 1696.7496, 858.7963}
};


new island_classes[fints_count][17] = {
	"Маленький остров",
	"Средний остров",
	"Большой остров"
};

// --------------------------------------------------------------

new Float:delivery_human_pier[3][4] = {
	{953.4233, -1929.0533, 1.5170, 180.2761}, // Los Santos
	{-1574.1602, 1267.5923, 1.4531, 270.1117}, // San Fierro
	{2360.6814, 523.1094, 1.7969, 0.8323} // Las Venturas
};

new Float:delivery_human_island[19][4] = {
	{1389.0483, 3493.1816, 2.0364, 89.3890}, // Семейный остров №1
	{1894.4343, 3524.1094, 2.4310, 91.2200}, // Семейный остров №2
	{2471.4841, 3521.6433, 2.1462, 91.0536}, // Семейный остров №3
	{3166.4924, 3546.7830, 1.2546, 91.7194}, // Семейный остров №4
	{3745.8743, 3603.4409, 1.3792, 91.0536}, // Семейный остров №5
	{3859.1565, 4121.3896, 1.4292, 90.8343}, // Семейный остров №6
	{4591.0527, 3984.9885, 1.7187, 90.3878}, // Семейный остров №7

	{-3892.9094, 581.9718, 1.9845, 90.8355}, // Семейный остров №8
	{-3645.1887, 1175.6254, 2.2628, 90.2389}, // Семейный остров №9
	{-3741.8582, 1689.3497, 1.9155, 89.5704}, // Семейный остров №10
	{-3626.1101, 2328.0959, 1.5880, 87.7810}, // Семейный остров №11
	{-3540.4714, 2853.4502, 2.2190, 89.2195}, // Семейный остров №12
	{-3565.3699, 3473.3167, 1.6747, 89.4161}, // Семейный остров №13

	{4063.1082, 2661.2766, 2.0726, 89.6087}, // Семейный остров №14
	{4376.2002, 2187.3762, 2.1935, 89.5570}, // Семейный остров №15
	{4609.0630, 1320.4879, 2.2591, 89.6292}, // Семейный остров №16
	{4908.5859, 789.2073, 2.4488, 89.8358}, // Семейный остров №17
	{5257.3618, 275.0083, 2.2694, 87.9213}, // Семейный остров №18
	{5628.3535, -349.1756, 2.4878, 88.6369} // Семейный остров №19
};

new Float:delivery_car_pier[3][4] = {
	{848.7500, -1817.5187, 12.1922, 176.0050}, // Los Santos
	{-1552.1974, 1277.2759, 7.1858, 181.0926}, // San Fierro
	{2359.8523, 547.8397, 1.7969, 177.4462} // Las Venturas
};

new Float:delivery_car_island[19][4] = {
	{1307.9108, 3472.0876, 2.1564, 321.6906}, // Семейный остров №1
	{1813.2462, 3503.0005, 2.4310, 327.7069}, // Семейный остров №2
	{2389.5076, 3500.3914, 2.1462, 321.2148}, // Семейный остров №3
	{3106.5710, 3525.6030, 1.2546, 314.9423}, // Семейный остров №4
	{3686.2468, 3582.1201, 1.3792, 320.5490}, // Семейный остров №5
	{3777.2925, 4100.1401, 1.4292, 322.8266}, // Семейный остров №6
	{4509.3579, 3963.9507, 1.7187, 320.2163}, // Семейный остров №7

	{-3934.5957, 561.8784, 1.9845, 333.6477}, // Семейный остров №8
	{-3687.9780, 1155.3444, 2.2628, 336.7133}, // Семейный остров №9
	{-3783.9163, 1669.3127, 1.9155, 345.3665}, // Семейный остров №10
	{-3668.1716, 2307.9587, 1.5880, 339.4156}, // Семейный остров №11
	{-3583.2336, 2833.4011, 2.2190, 339.0230}, // Семейный остров №12
	{-3608.1843, 3453.1782, 1.6747, 341.8831}, // Семейный остров №13

	{4021.0178, 2641.2717, 2.0726, 349.8992}, // Семейный остров №14
	{4333.6216, 2167.3132, 2.1935, 352.1780}, // Семейный остров №15
	{4566.8618, 1300.5529, 2.2591, 354.7470}, // Семейный остров №16
	{4866.2363, 769.2001, 2.4488, 350.7921}, // Семейный остров №17
	{5215.1147, 254.8739, 2.2694, 349.3770}, // Семейный остров №18
	{5586.3218, -369.2974, 2.4879, 351.4244} // Семейный остров №19
};

new Float:delivery_car_pos_island[19][12][4] = {
	{
		{1171.4205,3450.5208,3.8082,359.9525}, // Острова №1 | Доставка транспорта
		{1167.6921,3450.6548,3.8086,359.9531}, // Острова №1 | Доставка транспорта
		{1164.2104,3450.6404,3.8083,359.9539}, // Острова №1 | Доставка транспорта
		{1160.9722,3450.6580,3.8082,359.9535}, // Острова №1 | Доставка транспорта
		{1157.6589,3450.5469,3.8082,359.9540}, // Острова №1 | Доставка транспорта
		{1154.4308,3450.5403,3.8082,359.9533}, // Острова №1 | Доставка транспорта
		{1154.3964,3462.9380,3.8086,179.9125}, // Острова №1 | Доставка транспорта
		{1157.8250,3462.8650,3.8082,179.9117}, // Острова №1 | Доставка транспорта
		{1161.0499,3462.7917,3.8086,179.9114}, // Острова №1 | Доставка транспорта
		{1164.1873,3462.6780,3.8091,179.9110}, // Острова №1 | Доставка транспорта
		{1167.8441,3462.6545,3.8087,179.9110}, // Острова №1 | Доставка транспорта
		{1171.4203,3462.7686,3.8082,179.9116} // Острова №1 | Доставка транспорта
	},
	{
		{1676.7640,3481.4526,4.2028,0.4655}, // Острова №2 | Доставка транспорта
		{1673.1377,3481.4229,4.2028,0.4655}, // Острова №2 | Доставка транспорта
		{1669.7235,3481.5337,4.2031,0.4660}, // Острова №2 | Доставка транспорта
		{1666.3157,3481.5742,4.2028,0.4666}, // Острова №2 | Доставка транспорта
		{1663.2426,3481.4968,4.2026,0.4672}, // Острова №2 | Доставка транспорта
		{1659.7267,3481.3818,4.2028,0.4676}, // Острова №2 | Доставка транспорта
		{1659.8267,3493.7461,4.2032,179.5138}, // Острова №2 | Доставка транспорта
		{1663.0527,3493.7183,4.2079,179.5144}, // Острова №2 | Доставка транспорта
		{1666.4542,3493.6897,4.2133,179.5151}, // Острова №2 | Доставка транспорта
		{1669.5532,3493.6636,4.2133,179.5151}, // Острова №2 | Доставка транспорта
		{1672.8887,3493.6362,4.2182,179.5159}, // Острова №2 | Доставка транспорта
		{1676.5092,3493.6060,4.2182,179.5159} // Острова №2 | Доставка транспорта
	},
	{
		{2253.0623,3478.9600,3.9181,359.6570}, // Острова №3 | Доставка транспорта
		{2249.4883,3478.9817,3.9226,359.6576}, // Острова №3 | Доставка транспорта
		{2246.1155,3479.0015,3.9307,359.6588}, // Острова №3 | Доставка транспорта
		{2242.7815,3479.0220,3.9307,359.6588}, // Острова №3 | Доставка транспорта
		{2239.5620,3479.0400,3.9307,359.6588}, // Острова №3 | Доставка транспорта
		{2236.3542,3479.0603,3.9307,359.6588}, // Острова №3 | Доставка транспорта
		{2236.0398,3491.1187,3.9181,180.0601}, // Острова №3 | Доставка транспорта
		{2239.5259,3491.1221,3.9221,180.0607}, // Острова №3 | Доставка транспорта
		{2242.6868,3491.1250,3.9283,180.0618}, // Острова №3 | Доставка транспорта
		{2245.8037,3491.1287,3.9282,180.0618}, // Острова №3 | Доставка транспорта
		{2249.3970,3491.1321,3.9282,180.0618}, // Острова №3 | Доставка транспорта
		{2252.8750,3491.1355,3.9331,180.0613} // Острова №3 | Доставка транспорта
	},
	{
		{2970.0208,3504.1362,3.0267,0.0969}, // Острова №4 | Доставка транспорта
		{2966.4907,3504.1304,3.0307,0.0973}, // Острова №4 | Доставка транспорта
		{2963.0618,3504.1248,3.0350,0.0978}, // Острова №4 | Доставка транспорта
		{2959.7249,3504.1191,3.0426,0.0967}, // Острова №4 | Доставка транспорта
		{2956.4109,3504.1138,3.0497,0.0957}, // Острова №4 | Доставка транспорта
		{2953.1047,3504.1084,3.0497,0.0957}, // Острова №4 | Доставка транспорта
		{2953.0876,3516.4141,3.0268,179.7068}, // Острова №4 | Доставка транспорта
		{2956.3391,3516.3979,3.0309,179.7061}, // Острова №4 | Доставка транспорта
		{2959.6421,3516.3811,3.0386,179.7049}, // Острова №4 | Доставка транспорта
		{2962.9558,3516.3633,3.0434,179.7056}, // Острова №4 | Доставка транспорта
		{2966.2893,3516.3462,3.0434,179.7056}, // Острова №4 | Доставка транспорта
		{2969.8220,3516.3274,3.0434,179.7056} // Острова №4 | Доставка транспорта
	},
	{
		{3549.7107,3560.6699,3.1511,0.1493}, // Острова №5 | Доставка транспорта
		{3546.0613,3560.6606,3.1552,0.1499}, // Острова №5 | Доставка транспорта
		{3542.7527,3560.6528,3.1552,0.1499}, // Острова №5 | Доставка транспорта
		{3539.3643,3560.6440,3.1552,0.1499}, // Острова №5 | Доставка транспорта
		{3536.1167,3560.6355,3.1551,0.1499}, // Острова №5 | Доставка транспорта
		{3532.9097,3560.6270,3.1551,0.1499}, // Острова №5 | Доставка транспорта
		{3532.7969,3573.0181,3.1511,180.0294}, // Острова №5 | Доставка транспорта
		{3536.1243,3573.0190,3.1551,180.0299}, // Острова №5 | Доставка транспорта
		{3539.3223,3573.0200,3.1594,180.0293}, // Острова №5 | Доставка транспорта
		{3542.6899,3573.0208,3.1640,180.0287}, // Острова №5 | Доставка транспорта
		{3546.0276,3573.0217,3.1640,180.0287}, // Острова №5 | Доставка транспорта
		{3549.4866,3573.0227,3.1639,180.0287} // Острова №5 | Доставка транспорта
	},
	{
		{3640.8391,4078.4893,3.2010,0.0165}, // Острова №6 | Доставка транспорта
		{3637.1125,4078.4893,3.2010,0.0165}, // Острова №6 | Доставка транспорта
		{3633.5957,4078.4893,3.2010,0.0165}, // Острова №6 | Доставка транспорта
		{3630.2981,4078.4893,3.2096,0.0153}, // Острова №6 | Доставка транспорта
		{3627.1252,4078.4893,3.2096,0.0153}, // Острова №6 | Доставка транспорта
		{3623.8860,4078.4893,3.2096,0.0153}, // Острова №6 | Доставка транспорта
		{3623.8257,4090.8889,3.2013,179.7062}, // Острова №6 | Доставка транспорта
		{3627.1250,4090.8721,3.2057,179.7054}, // Острова №6 | Доставка транспорта
		{3630.4204,4090.8547,3.2131,179.7046}, // Острова №6 | Доставка транспорта
		{3633.5613,4090.8386,3.2131,179.7046}, // Острова №6 | Доставка транспорта
		{3636.9263,4090.8218,3.2131,179.7046}, // Острова №6 | Доставка транспорта
		{3640.4907,4090.8032,3.2216,179.7054} // Острова №6 | Доставка транспорта
	},
	{
		{4372.8506,3942.4292,3.4909,0.0921}, // Острова №7 | Доставка транспорта
		{4369.2822,3942.4238,3.5022,0.0910}, // Острова №7 | Доставка транспорта
		{4365.7773,3942.4187,3.5023,0.0910}, // Острова №7 | Доставка транспорта
		{4362.5200,3942.4136,3.5071,0.0904}, // Острова №7 | Доставка транспорта
		{4359.2090,3942.4092,3.5070,0.0904}, // Острова №7 | Доставка транспорта
		{4355.6797,3942.4038,3.5123,0.0912}, // Острова №7 | Доставка транспорта
		{4355.8169,3954.6772,3.4905,180.2399}, // Острова №7 | Доставка транспорта
		{4359.1641,3954.6914,3.4957,180.2389}, // Острова №7 | Доставка транспорта
		{4362.5190,3954.7056,3.5005,180.2381}, // Острова №7 | Доставка транспорта
		{4365.7319,3954.7188,3.5067,180.2392}, // Острова №7 | Доставка транспорта
		{4369.0908,3954.7327,3.5067,180.2392}, // Острова №7 | Доставка транспорта
		{4372.7222,3954.7473,3.5068,180.2392} // Острова №7 | Доставка транспорта
	},
	{
		{-4032.3103,592.8970,5.1804,270.3370}, // Острова №8 | Доставка транспорта
		{-4032.2908,589.6806,5.1937,270.3372}, // Острова №8 | Доставка транспорта
		{-4032.2722,586.4791,5.1937,270.3372}, // Острова №8 | Доставка транспорта
		{-4032.2527,583.1877,5.1937,270.3372}, // Острова №8 | Доставка транспорта
		{-4032.2346,580.1854,5.1937,270.3372}, // Острова №8 | Доставка транспорта
		{-4032.2158,576.9733,5.1937,270.3372}, // Острова №8 | Доставка транспорта
		{-4032.1956,573.6240,5.1937,270.3372}, // Острова №8 | Доставка транспорта
		{-4032.1770,570.4193,5.2014,270.3365}, // Острова №8 | Доставка транспорта
		{-4032.1584,567.3200,5.2014,270.3365}, // Острова №8 | Доставка транспорта
		{-4029.9072,560.9858,5.1809,359.7177}, // Острова №8 | Доставка транспорта
		{-4026.6987,560.9700,5.1850,359.7170}, // Острова №8 | Доставка транспорта
		{-4023.5557,560.9545,5.1850,359.7170} // Острова №8 | Доставка транспорта
	},
	{
		{-3785.9038,1186.4735,5.4592,270.2535}, // Острова №9 | Доставка транспорта
		{-3785.8894,1183.2694,5.4633,270.2543}, // Острова №9 | Доставка транспорта
		{-3785.8760,1180.1876,5.4685,270.2549}, // Острова №9 | Доставка транспорта
		{-3785.8616,1176.9629,5.4743,270.2543}, // Острова №9 | Доставка транспорта
		{-3785.8477,1173.7762,5.4793,270.2552}, // Острова №9 | Доставка транспорта
		{-3785.8342,1170.6387,5.4793,270.2552}, // Острова №9 | Доставка транспорта
		{-3785.8203,1167.5228,5.4793,270.2552}, // Острова №9 | Доставка транспорта
		{-3785.8052,1164.0227,5.4793,270.2552}, // Острова №9 | Доставка транспорта
		{-3785.7915,1160.9082,5.4793,270.2552}, // Острова №9 | Доставка транспорта
		{-3783.4700,1154.4850,5.4590,359.5876}, // Острова №9 | Доставка транспорта
		{-3780.1909,1154.4617,5.4590,359.5876}, // Острова №9 | Доставка транспорта
		{-3777.0747,1154.4392,5.4590,359.5876} // Острова №9 | Доставка транспорта
	},
	{
		{-3881.6040,1700.3038,5.1119,270.4086}, // Острова №10 | Доставка транспорта
		{-3881.5808,1697.0652,5.1119,270.4086}, // Острова №10 | Доставка транспорта
		{-3881.5576,1693.8588,5.1187,270.4077}, // Острова №10 | Доставка транспорта
		{-3881.5342,1690.7048,5.1242,270.4070}, // Острова №10 | Доставка транспорта
		{-3881.5112,1687.4244,5.1242,270.4070}, // Острова №10 | Доставка транспорта
		{-3881.4888,1684.3063,5.1242,270.4070}, // Острова №10 | Доставка транспорта
		{-3881.4663,1681.0798,5.1242,270.4070}, // Острова №10 | Доставка транспорта
		{-3881.4446,1678.0472,5.1242,270.4070}, // Острова №10 | Доставка транспорта
		{-3881.4187,1674.5477,5.1243,270.4070}, // Острова №10 | Доставка транспорта
		{-3879.1350,1668.1549,5.1116,359.9501}, // Острова №10 | Доставка транспорта
		{-3875.9238,1668.1521,5.1116,359.9501}, // Острова №10 | Доставка транспорта
		{-3872.7993,1668.1497,5.1116,359.9501} // Острова №10 | Доставка транспорта
	},
	{
		{-3765.7927,2338.9524,4.7846,270.3023}, // Острова №11 | Доставка транспорта
		{-3765.7749,2335.6292,4.7887,270.3018}, // Острова №11 | Доставка транспорта
		{-3765.7583,2332.4873,4.7887,270.3018}, // Острова №11 | Доставка транспорта
		{-3765.7417,2329.2986,4.7887,270.3018}, // Острова №11 | Доставка транспорта
		{-3765.7253,2326.1711,4.7887,270.3018}, // Острова №11 | Доставка транспорта
		{-3765.7078,2322.8245,4.7889,270.3018}, // Острова №11 | Доставка транспорта
		{-3765.6917,2319.7371,4.7889,270.3018}, // Острова №11 | Доставка транспорта
		{-3765.6748,2316.5027,4.7889,270.3018}, // Острова №11 | Доставка транспорта
		{-3765.6582,2313.3464,4.7889,270.3018}, // Острова №11 | Доставка транспорта
		{-3763.3474,2306.8501,4.7841,0.7200}, // Острова №11 | Доставка транспорта
		{-3760.0823,2306.8906,4.7841,0.7200}, // Острова №11 | Доставка транспорта
		{-3756.9463,2306.9294,4.7882,0.7196} // Острова №11 | Доставка транспорта
	},
	{
		{-3680.9124,2864.3650,5.4154,270.2800}, // Острова №12 | Доставка транспорта
		{-3680.8970,2861.1528,5.4154,270.2800}, // Острова №12 | Доставка транспорта
		{-3680.8813,2857.8794,5.4195,270.2795}, // Острова №12 | Доставка транспорта
		{-3680.8665,2854.8491,5.4195,270.2795}, // Острова №12 | Доставка транспорта
		{-3680.8508,2851.6140,5.4195,270.2795}, // Острова №12 | Доставка транспорта
		{-3680.8350,2848.3569,5.4265,270.2802}, // Острова №12 | Доставка транспорта
		{-3680.8191,2845.1746,5.4266,270.2802}, // Острова №12 | Доставка транспорта
		{-3680.8037,2841.9492,5.4266,270.2802}, // Острова №12 | Доставка транспорта
		{-3680.7881,2838.6348,5.4266,270.2802}, // Острова №12 | Доставка транспорта
		{-3678.4900,2832.3325,5.4155,0.1892}, // Острова №12 | Доставка транспорта
		{-3675.1970,2832.3435,5.4155,0.1892}, // Острова №12 | Доставка транспорта
		{-3672.0437,2832.3540,5.4155,0.1892} // Острова №12 | Доставка транспорта
	},
	{
		{-3706.0425,3484.2000,4.8708,270.6710}, // Острова №13 | Доставка транспорта
		{-3706.0056,3481.0444,4.8749,270.6702}, // Острова №13 | Доставка транспорта
		{-3705.9673,3477.7678,4.8749,270.6702}, // Острова №13 | Доставка транспорта
		{-3705.9309,3474.6675,4.8750,270.6702}, // Острова №13 | Доставка транспорта
		{-3705.8943,3471.5022,4.8750,270.6702}, // Острова №13 | Доставка транспорта
		{-3705.8569,3468.2092,4.8793,270.6694}, // Острова №13 | Доставка транспорта
		{-3705.8198,3465.0503,4.8794,270.6694}, // Острова №13 | Доставка транспорта
		{-3705.7827,3461.8938,4.8793,270.6694}, // Острова №13 | Доставка транспорта
		{-3705.7444,3458.6582,4.8793,270.6694}, // Острова №13 | Доставка транспорта
		{-3703.5188,3452.2964,4.8711,0.0523}, // Острова №13 | Доставка транспорта
		{-3700.3538,3452.2993,4.8712,0.0523}, // Острова №13 | Доставка транспорта
		{-3697.2627,3452.3005,4.8712,0.0523} // Острова №13 | Доставка транспорта
	},
	{
		{3710.8079,2668.6709,2.3099,269.9933}, // Острова №14 | Доставка транспорта
		{3710.8079,2671.9551,2.3144,269.9926}, // Острова №14 | Доставка транспорта
		{3710.8079,2675.2004,2.3185,269.9920}, // Острова №14 | Доставка транспорта
		{3710.8079,2678.3418,2.3219,269.9914}, // Острова №14 | Доставка транспорта
		{3710.8079,2681.5178,2.3219,269.9914}, // Острова №14 | Доставка транспорта
		{3710.8079,2684.7817,2.3220,269.9914}, // Острова №14 | Доставка транспорта
		{3710.8079,2687.9973,2.3219,269.9914}, // Острова №14 | Доставка транспорта
		{3710.8079,2691.2273,2.3219,269.9914}, // Острова №14 | Доставка транспорта
		{3710.8079,2694.3728,2.3219,269.9914}, // Острова №14 | Доставка транспорта
		{3714.2495,2700.4312,2.3075,180.0964}, // Острова №14 | Доставка транспорта
		{3717.5234,2700.4363,2.3075,180.0964}, // Острова №14 | Доставка транспорта
		{3720.7493,2700.4414,2.3174,180.0954} // Острова №14 | Доставка транспорта
	},
	{
		{4023.4148,2194.7344,2.4306,270.0204}, // Острова №15 | Доставка транспорта
		{4023.4148,2197.9597,2.4306,270.0204}, // Острова №15 | Доставка транспорта
		{4023.4148,2201.1157,2.4355,270.0208}, // Острова №15 | Доставка транспорта
		{4023.4136,2204.4238,2.4337,270.0209}, // Острова №15 | Доставка транспорта
		{4023.4128,2207.5991,2.4337,270.0209}, // Острова №15 | Доставка транспорта
		{4023.4128,2210.8091,2.4337,270.0209}, // Острова №15 | Доставка транспорта
		{4023.4128,2213.9683,2.4380,270.0213}, // Острова №15 | Доставка транспорта
		{4023.4128,2217.2158,2.4380,270.0213}, // Острова №15 | Доставка транспорта
		{4023.4128,2220.5110,2.4380,270.0213}, // Острова №15 | Доставка транспорта
		{4026.9272,2226.4341,2.4285,179.9585}, // Острова №15 | Доставка транспорта
		{4030.1182,2226.4324,2.4285,179.9585}, // Острова №15 | Доставка транспорта
		{4033.3486,2226.4309,2.4285,179.9585} // Острова №15 | Доставка транспорта
	},
	{
		{4256.7085,1327.9403,2.4962,269.9802}, // Острова №16 | Доставка транспорта
		{4256.7085,1331.2212,2.5014,269.9808}, // Острова №16 | Доставка транспорта
		{4256.7085,1334.4204,2.5015,269.9807}, // Острова №16 | Доставка транспорта
		{4256.7085,1337.5916,2.4998,269.9809}, // Острова №16 | Доставка транспорта
		{4256.7085,1340.7190,2.4999,269.9809}, // Острова №16 | Доставка транспорта
		{4256.7085,1344.0077,2.4999,269.9809}, // Острова №16 | Доставка транспорта
		{4256.7085,1347.0482,2.5050,269.9816}, // Острова №16 | Доставка транспорта
		{4256.7085,1350.2863,2.5050,269.9816}, // Острова №16 | Доставка транспорта
		{4256.7085,1353.4042,2.5050,269.9816}, // Острова №16 | Доставка транспорта
		{4260.1001,1359.8051,2.4939,179.7747}, // Острова №16 | Доставка транспорта
		{4263.4346,1359.7917,2.4939,179.7747}, // Острова №16 | Доставка транспорта
		{4266.5132,1359.7797,2.4939,179.7747} // Острова №16 | Доставка транспорта
	},
	{
		{4556.1113,796.6036,2.6857,269.8737}, // Острова №17 | Доставка транспорта
		{4556.1182,799.8179,2.6908,269.8728}, // Острова №17 | Доставка транспорта
		{4556.1245,803.0415,2.6951,269.8733}, // Острова №17 | Доставка транспорта
		{4556.1328,806.2806,2.6934,269.8734}, // Острова №17 | Доставка транспорта
		{4556.1392,809.5074,2.6934,269.8734}, // Острова №17 | Доставка транспорта
		{4556.1455,812.5962,2.6934,269.8734}, // Острова №17 | Доставка транспорта
		{4556.1528,815.8704,2.6934,269.8734}, // Острова №17 | Доставка транспорта
		{4556.1597,819.2228,2.6934,269.8734}, // Острова №17 | Доставка транспорта
		{4556.1655,822.3329,2.6991,269.8742}, // Острова №17 | Доставка транспорта
		{4559.6431,828.3849,2.6838,179.8263}, // Острова №17 | Доставка транспорта
		{4562.8359,828.3752,2.6881,179.8259}, // Острова №17 | Доставка транспорта
		{4566.0815,828.3654,2.6881,179.8259} // Острова №17 | Доставка транспорта
	},
	{
		{4905.0352,282.2901,2.5063,269.8524}, // Острова №18 | Доставка транспорта
		{4905.0435,285.4982,2.5108,269.8516}, // Острова №18 | Доставка транспорта
		{4905.0513,288.7228,2.5108,269.8515}, // Острова №18 | Доставка транспорта
		{4905.0601,291.9309,2.5134,269.8510}, // Острова №18 | Доставка транспорта
		{4905.0684,295.0903,2.5133,269.8510}, // Острова №18 | Доставка транспорта
		{4905.0747,298.3508,2.5133,269.8510}, // Острова №18 | Доставка транспорта
		{4905.0825,301.5383,2.5133,269.8510}, // Острова №18 | Доставка транспорта
		{4905.0908,304.7771,2.5133,269.8510}, // Острова №18 | Доставка транспорта
		{4905.0977,307.9658,2.5133,269.8510}, // Острова №18 | Доставка транспорта
		{4908.4863,314.0211,2.5044,179.8926}, // Острова №18 | Доставка транспорта
		{4911.6763,314.0151,2.5089,179.8921}, // Острова №18 | Доставка транспорта
		{4914.8921,314.0090,2.5088,179.8921} // Острова №18 | Доставка транспорта
	},
	{
		{5276.1401,-341.8461,2.7248,270.4196}, // Острова №19 | Доставка транспорта
		{5276.1172,-338.6358,2.7289,270.4202}, // Острова №19 | Доставка транспорта
		{5276.0938,-335.4738,2.7336,270.4192}, // Острова №19 | Доставка транспорта
		{5276.0708,-332.1822,2.7319,270.4193}, // Острова №19 | Доставка транспорта
		{5276.0474,-328.9869,2.7319,270.4193}, // Острова №19 | Доставка транспорта
		{5276.0244,-325.7672,2.7319,270.4193}, // Острова №19 | Доставка транспорта
		{5276.0034,-322.5998,2.7319,270.4193}, // Острова №19 | Доставка транспорта
		{5275.9805,-319.3425,2.7319,270.4193}, // Острова №19 | Доставка транспорта
		{5275.9570,-316.1656,2.7319,270.4193}, // Острова №19 | Доставка транспорта
		{5279.6084,-310.1898,2.7231,180.2610}, // Острова №19 | Доставка транспорта
		{5282.8057,-310.1752,2.7231,180.2610}, // Острова №19 | Доставка транспорта
		{5285.9399,-310.1609,2.7293,180.2619} // Острова №19 | Доставка транспорта
	}
};

new Float:delivery_car_pos_pier[3][12][4] = {
	{
		{850.8152, -1830.4197, 11.9715, 86.1821},
		{850.6360, -1833.0839, 12.0665, 86.1804},
		{850.4283, -1836.1840, 12.1686, 86.1805},
		{850.2137, -1839.3928, 12.2748, 86.1798},
		{850.0421, -1841.9574, 12.3530, 86.1798},
		{849.7670, -1846.0708, 12.4785, 86.1798},
		{821.6119, -1825.8596, 12.1006, 277.1055},
		{821.9683, -1828.7153, 12.0983, 277.0857},
		{822.3761, -1831.9884, 12.1524, 277.0801},
		{822.7366, -1834.8796, 12.2119, 277.0806},
		{823.1133, -1837.9017, 12.2741, 277.0800},
		{823.6179, -1841.9523, 12.3523, 277.0748}
	},
	{
		{-1630.3428, 1290.2966, 6.7442, 134.6545},
		{-1633.8477, 1293.8441, 6.7505, 134.6546},
		{-1637.2654, 1297.3035, 6.7498, 134.6547},
		{-1640.8933, 1300.9747, 6.7480, 134.6547},
		{-1644.5042, 1304.6294, 6.7434, 134.6546},
		{-1648.0626, 1308.2311, 6.7435, 134.6543},
		{-1651.6121, 1311.8236, 6.7475, 134.6543},
		{-1655.2157, 1315.4705, 6.7576, 134.6548},
		{-1639.8350, 1280.6078, 6.7443, 314.6436},
		{-1643.1741, 1283.9889, 6.7443, 314.6433},
		{-1646.8523, 1287.7131, 6.7443, 314.6431},
		{-1650.3662, 1291.2710, 6.7443, 314.6429}
	},
	{
		{2281.0166, 605.6320, 10.5252, 269.9446},
		{2281.0173, 608.6971, 10.5252, 269.9446},
		{2281.0186, 611.6132, 10.5301, 269.9441},
		{2281.0188, 614.5985, 10.5348, 269.9448},
		{2281.0195, 617.5273, 10.5348, 269.9448},
		{2281.0222, 621.4205, 10.5350, 269.9445},
		{2293.4648, 621.4205, 10.5256, 90.0108},
		{2293.4648, 617.5273, 10.5336, 90.0114},
		{2293.4648, 614.5985, 10.5336, 90.0114},
		{2293.4648, 611.6132, 10.5335, 90.0114},
		{2293.4648, 608.6971, 10.5335, 90.0114},
		{2293.4648, 605.6320, 10.5335, 90.0114}
	}
};

/*

		House system

*/
#define MAX_TP_AREAS 180
#define MAX_HOUSES	1750
#define MAX_BUSINESS 161
#define MAX_AREAS	4200 // MAX_HOUSES * 2


new teleport_tick[MAX_PLAYERS];


new house_count;

enum _hinfo
{
	h_id,
	h_owner,
	h_owner_name[MAX_PLAYER_NAME-4],
	h_price,
	h_int,
	h_vw,
	Float:h_pos[4],
	Float:h_v_pos[4],
	h_pickup,
	h_exit_pickup,
	h_icon_id,
	h_closed,
	h_rent_price,
	h_payment,
	h_area[2],
	h_renters,
	h_improve[8],
	h_cellar,
	h_safe_code,
	h_safe_data[2],
	h_safe_guns[6],
	h_prods,
	h_seed,
	h_seed_result,

	h_garage,

	h_radio_status,
	h_radio_url[128],
	h_days
};

new h_info[MAX_HOUSES][_hinfo];

new house_classes[4][14] = {
	"Эконом класс",
	"Средний класс",
	"Высокий класс",
	"Элитный класс"
};

#define improve_audio 			0
#define improve_doors 			1
#define improve_freeze 			2
#define improve_wardrobe 		3
#define improve_safe 			4
#define improve_sleeping	 	5
#define improve_subsidies	 	6
#define improve_cellar 			7


new h_improve_price[8] = {10000, 12500, 15000, 20000, 23000, 25000, 27500, 30000};
new h_improve_name[8][64] = {"Аудио система", "Автоматические двери","Холодильник", "Гардероб","Сейф", "Спальные места", "Субсидии для снижения кварт. платы", "Оборудование подвала"};

enum _house_int
{
	hint_class,
	Float:hint_position[4],
	Float:hspawn_position[4],
	hint_int,
	hint_description[54]
};


new house_int[HINTS_COUNT][_house_int] =
{
	{1, {265.7290, 2750.3164, 804.0175, 359.7809}, {265.7479, 2751.9272, 804.0175, 359.7809}, 2, "Эконом класс"},
	{1, {3190.9705, 397.4402, 615.6118, 268.9465}, {3192.5454, 397.4168, 615.6118, 267.6148}, 2, "Средний класс"},
	{1, {-3147.1521, 3204.1270, 560.7055, 270.2781}, {-3145.1226, 3204.1196, 560.7055, 269.6122}, 2, "Высокий класс"},
	{1, {-372.5723, -808.4107, 899.0613, 266.8960}, {-370.4420, -808.4797, 899.0613, 269.0600}, 2, "Особняк"}
};

new Float:house_safe_pos[HINTS_COUNT][3] = {
	{270.1486, 2752.6765, 804.0175},
	{3193.7783, 406.0636, 615.6118},
	{-3142.9338, 3216.7175, 560.7055},
	{-373.8676, -787.5314, 899.0613}
};

new Float:house_freeze_pos[HINTS_COUNT][3] = {
	{261.1102, 2759.9490, 804.0175},
	{3206.5713, 394.7118, 615.6118},
	{-3126.9866, 3211.2024, 560.7055},
	{-357.8584, -784.3525, 899.0613}
};

new Float:house_bike_garage[4][4] = {
	{2167.3567, -371.2406, 1592.1106, 112.6875},
	{2167.3567, -371.2406, 1592.1106, 112.6875},
	{2167.3567, -371.2406, 1592.1106, 112.6875},
	{2167.3567, -371.2406, 1592.1106, 112.6875}
};

new Float:house_veh_garage[4][4] = {
	{2165.7690, -373.2959, 1592.2673, 90.5659},
	{2165.7690, -373.2959, 1592.2673, 90.5659},
	{2165.7690, -373.2959, 1592.2673, 90.5659},
	{2165.7690, -373.2959, 1592.2673, 90.5659}
};



/*

			dynamic areas [teleports]

*/

new Text:td_alt_area[3];
new area_amount;

enum _areas
{
	a_id,
	a_pick,
	a_area[2],
	a_type,
	Float:a_pos[4],
	Float:a_to_pos[4],
	a_virt_world[2],
	a_interior[2],
}

new area_info[MAX_TP_AREAS][_areas];


/*

			business system

*/
#define bizz_type_shop			0
#define bizz_type_gas			1
#define bizz_type_ammo			2
#define bizz_type_tune			3
#define bizz_type_clothes		4
#define bizz_type_carshop		5
#define bizz_type_cafe			6
#define bizz_type_club			7
#define bizz_type_bar			8
#define bizz_type_pharm			9
#define bizz_type_electronic	10


new b_types[11][24]={
	"Магазин 24/7",
	"Заправочная станция",
	"Магазин оружия",
	"Автостанция",
	"Магазин одежды",
	"Авторынок",
	"Кафе",
	"Клуб",
	"Бар",
	"Аптека",
	"Магазин электроники"
};


new b_count = 0;

enum _busines_int
{
	i_interior,
	Float: i_position[4],
	i_map_icon
};

new b_interior[14][_busines_int]=
{
	{18, {-30.9340,-91.7092,1003.5469, 354.9632}, 25},//24/7
	{1, {285.3884, -41.5877, 1001.5156, 180.9659}, 18},//ammo
	{1, {692.3723, -825.4986, 1501.0859, 178.5119}, 55},//car shop
	{9, {364.7781,-11.5667,1001.8516,357.9726}, 14}, //Cluckin Bell
	{5, {372.3280,-133.4172,1001.4922,356.2804}, 29}, //Pizza
	{10, {363.0075,-75.1311,1001.5078,310.3559}, 10}, //Burger Shot
	{1, {2080.6199, 1224.8962, 1019.0800, 356.0}, 45}, //clothes shop
	{0, {1035.6287,-1292.2426,1021.4902,175.4210}, 17}, // cafe.int
	{17, {493.3961,-24.7795,1000.6797,355.5247}, 48}, //Alhambra
	{11, {501.8519,-67.6791,998.7578,177.1488}, 49}, //BAR
	{2, {1204.4211,-13.7329,1000.9219,344.4207}, 48},//strip
	{3, {-2636.5574,1402.5840,906.4609,358.3408}, 49},//Джиззи
	{1, {833.6329,-38.2640,2016.4301,264.7527}, 22},//аптека
 	{22, {1376.7505, -29.9376, 1000.9265, 360.0}, 42} //Магазин электроники
};


enum _busines
{
	b_id,
	b_owner_inc,
	b_owner_name[24],
	b_name[32],
	b_price,
	b_int,
	Float: b_position[4],
	b_area[2],
	b_icon,
	b_close,
	b_money,
	b_product,
	b_type,
	b_cost,
	b_fee,
	b_mafia,
	Text3D:b_label,
	b_cash_today,
	b_maxproduct,
	b_improve[3],
	b_pickup,
	b_family
};

new b_info[MAX_BUSINESS][_busines];

new b_improve_price[3] = {15000, 25000, 30000};
new b_improve_name[3][64] = {"Субсидии для снижения налогов", "Расширение склада", "Медицинское обслуживание"};


new b_electro_price[3] = {250, 1750, 2650};
new b_electro_product[3] = {250, 125, 150};


new b_pharm_price[6] = {275, 150, 175, 140, 1200, 1700};
new b_pharm_product[6] = {75, 20, 35, 30, 90, 120};





new b_shop_price[8] = {100, 150, 350, 400, 150, 70, 90, 550};
new b_shop_product[8] = {20, 35, 35, 80, 45, 10, 15, 85};

new b_bar_price[7] = {35, 40, 75, 90, 100, 120, 150};
new b_bar_product[7] = {20, 25, 30, 35, 45, 50, 50};

new b_cafe_price[6] = {35, 40, 75, 90, 100, 120};
new b_cafe_product[6] = {20, 25, 30, 35, 45, 50};

new b_ammo_guns[8] = {23, 24, 25, 29, 30, 31, 33, 1};
new b_ammo_prices[8] = {35, 60, 70, 30, 60, 60, 70, 50};



new crim_ammo_guns[8] = {24, 25, 29, 30, 31, 33, 1, 5};
new crim_ammo_prices[8] = {120, 140, 60, 120, 120, 140, 200, 150};

/*

			vehicle data

*/

new vehicle_count = 0;


#define vehicle_type_server		1
#define vehicle_type_player		2
#define vehicle_type_job		3
#define vehicle_type_family		4

new player_holding_key_down[MAX_PLAYERS];


enum _vehicle
{
	v_id,
	v_type,
	v_vehicle,
	v_owner,
	v_model,
	v_color[2],
	Float:v_pos[4],
	Float:v_now_pos[4],
	Float:v_millage,
	Float:v_fuel,
	v_plate[12],
	v_rank,
	bool:v_locked,
	Float:v_health,
	v_driver,
	v_component[10],
	v_paint,
	Float:v_velocity[2],
	Float:v_engine_boost,
	Float:v_brake_boost,
	Float:v_stability_boost,
	Float:v_old_speed,
	Float:v_old_zangle,
	v_pt_engine[5],
	v_pt_brake[5],
	v_pt_stability[5],

	bool:v_ems,

	v_sell_price,
	v_sell_carmarket,
	v_sell_slot,
	Text3D:v_sell_text,

	v_gps_tracker,
	v_vw,
	v_int,
	v_cargo,
	v_cargo_object[3],
	v_fine,
	v_door_status[4],
	
	v_pier_status,
	v_pier_time,
	v_pier_island
}

new veh_info[MAX_VEHICLES][_vehicle];

new speed_timer[MAX_PLAYERS],
	speed_one[MAX_PLAYERS];


new engine_ptune[5][44] = {
"Чип-тюнинг",
"Удаление катализаторов",
"Воздушный фильтр нулевого сопротивления",
"Дроссельная заслонка увеличенного диаметра",
"Кованые поршни двигателя"};
new engine_ptune_price[5] = {15000, 10000, 7000, 12000, 14000};
new Float:engine_ptune_boost[5] = {0.12, 0.05, 0.03, 0.05, 0.10};

new brake_ptune[5][44] = {
"Керамические колодки",
"Спортивные тормозные диски",
"Расширенные суппорта",
"Тормозной цилиндр",
"Вакуумный усилитель тормозов"};
new brake_ptune_price[5] = {9000, 10000, 7000, 12000, 14000};
new Float:brake_ptune_boost[5] = {1.5, 1.5, 1.0, 2.0, 3.0};

new stability_ptune[5][44] = {
"Распорки на стойки",
"Амортизаторы",
"Усиленные пружины",
"Стабилизаторы поперечной устойчивости",
"Шарниры подвески"};
new stability_ptune_price[5] = {2500, 7000, 5000, 8000, 6500};
new Float: stability_ptune_boost[5] = {23.0, 23.0, 23.0, 23.0, 23.0};



new Text:td_performance[27];
new PlayerText:ptd_performance[MAX_PLAYERS][6];



new vehicle_name[212][32] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3 50","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring A","Hotring B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","Boxville","Farm Plow","U Trailer"
};

new max_veh_speed[212] = {160,160,200,120,150,165,110,170,110,180,160,240,160,160,140,230,155,200,150,160,180,180,
	165,145,170,200,200,170,170,200,190,130,80,180,200,120,160,160,160,160,160,75,150,150,110,
	165,280,200,190,150,120,240,190,190,190,140,160,160,165,160,200,190,190,190,75,75,160,160,
	190,200,170,160,190,190,160,160,200,200,150,165,200,120,150,120,190,160,100,200,200,170,170,
	160,160,190,220,170,200,200,140,140,160,75,220,220,160,170,230,165,140,120,140,200,200,200,120,
	120,165,165,160,330,330,190,190,190,110,160,160,160,170,160,60,70,140,200,160,160,160,110,110,150,
	160,230,160,165,170,160,160,160,200,160,160,165,160,200,170,180,110,110,200,200,200,200,200,200,75,
	200,160,160,170,110,110,90,60,110,60,160,160,200,110,160,165,190,160,170,120,165,190,200,140,200,110,
	120,200,200,60,190,200,200,200,160,165,110,200,200,160,165,160,160,160,140,160,160};


/*
			fractions
*/

#define max_rank 		16
#define max_fraction	28
new fraction_count;

enum _fractions
{
	f_id,
	f_name[48],
	Float:f_spawn[4],
	f_spawn_int,
	f_spawn_virt,
	f_money,
	f_materials,
	f_drugs,
	f_guns,
	f_dorm_status,
	f_radar_color,
	f_chat_color[8],
	f_leader_name[MAX_PLAYER_NAME],
	f_rank_settings[5],
	f_rank_salary[max_rank],
	f_capture,
	f_money_limit,
};

new f_info[max_fraction][_fractions];

new f_rank[max_fraction][max_rank][24];
new f_skin[max_fraction][2][max_rank];


#define dip_status_neutral 0
#define dip_status_war 1
#define dip_status_alliance 2
#define dip_status_alliance_invite 3
#define dip_status_alliance_get_invite 4


new Float: dorm_pos[8][3] = {
	{2431.6375, -1911.4906, 1518.2054},
	{2431.6375, -1911.4906, 1518.2054},
	{2431.6375, -1911.4906, 1518.2054},
	{2431.6375, -1911.4906, 1518.2054},
	{2431.6375, -1911.4906, 1518.2054},
	{-1471.6904, 306.4484, 1059.9917},
	{-2624.6802, 49.0959, 1960.1409},
	{2033.2272, -1998.5955, 1073.2142}
};

new dorm_area[8];
new Text3D:gdorm_text[8];

new f_diplomacy[8][8];

/*

*/

new Float:jail_spawn[2][4]=
{
	{1451.8975,-1784.5837,3740.8970,0.0},
	{1451.7634,-1775.8505,3740.8970,180.0}
};

new
	ch_line_count,
	second_ch_line_count,
	Text:ch_td[2][10];



/*

		Gangzones

*/
#define gz_type_kills 0
#define gz_type_count 1

new gz_count = 0,
	gz_captured = -1,
	gz_capture_type;


new owner_points = -1,
	attacker_points = -1;

enum _gz_info
{
	gz_id,
	gz_created,
	Float:gz_pos[4],
	gz_owner,
	gz_attacker,
 	gz_battle,
	gz_time,
	gz_timer
}
new gz_info[108][_gz_info];

new capture_gang_cd[5];
new Text:capture_td[18];
new capture_gang_freezed[5];
/*

		Ownable vehicles

*/

new Iterator:player_vehicles[MAX_PLAYERS]<MAX_VEHICLES-1>;


new Float:t_shop_pos[9][7]={
	{ 2334.495, 924.933, 1028.264, 269.454, 2340.308349, 917.910827, 1031.101562},
	{ 2334.495, 924.933, 1028.264, 269.454, 2340.308349, 917.910827, 1031.101562},
	{ 2334.495, 924.933, 1028.264, 269.454, 2340.308349, 917.910827, 1031.101562},
	{ 2334.495, 924.933, 1028.264, 269.454, 2340.308349, 917.910827, 1031.101562},
	{ 2334.495, 924.933, 1028.264, 269.454, 2340.308349, 917.910827, 1031.101562},
	{ 2334.495, 924.933, 1028.264, 269.454, 2340.308349, 917.910827, 1031.101562},// transport last
	{ 2334.495, 924.933, 1028.264, 269.454, 2340.308349, 917.910827, 1031.101562},
	{ 2948.1038, -366.9819, 0.4725, 275.1281, 2968.6902, -355.4181, 3.3571},
	{-1420.3477, -560.6387, 15.1648, 244.7929, -1400.3397, -566.5927, 16.2796}
};
// 1,2,3,4,5,6 -auto| 7 -moto | 8 -boat | 9 -air

new Float:t_shop_respawn[5][5][4]=
{
	{
		// LS
		{545.7891,-1269.7037,17.0252,216.3535},
		{541.4270,-1272.9069,17.0231,217.7584},
		{536.9106,-1276.1445,17.0203,218.1478},
		{532.1589,-1279.5656,17.0215,216.4695},
		{527.7106,-1282.8014,17.0224,217.2521}
	},
	{
		// SF
		{-1988.559,255.393,34.914,270.000},
		{-1988.559,260.374,34.922,270.000},
		{-1988.559,265.089,34.922,270.000},
		{-1988.559,270.041,34.918,270.000},
		{-1988.559,274.580,34.919,270.000}
	},
	{
		// LV
		{2142.283,1397.733,10.555,180.000},
		{2136.037,1397.733,10.563,180.000},
		{2129.554,1397.733,10.557,180.000},
		{2148.697,1397.733,10.555,180.000},
		{2123.173,1397.733,10.555,180.000}
	},
	{
		// boat
		{2948.8997,-340.3694,0.4974,273.8467},
		{2921.7214,-339.8275,0.1782,271.9078},
		{2915.5134,-357.9173,0.3699,179.1762},
		{2922.5032,-391.4181,-0.0272,269.6137},
		{2953.0986,-392.1188,0.3926,269.7669}
	},
	{
		// aircraft
		{-1456.2777,-622.3053,15.0701,327.8458},
		{-1394.8322,-620.4044,15.0675,332.3776},
		{-1331.7809,-622.2115,15.0646,336.1505},
		{-1268.4862,-622.9453,15.0675,335.5498},
		{-1351.0011,-529.1708,15.0675,175.8927}
	}
};

new t_shop_category[9][22] = {
	"4x4",
	"Coupe",
	"Pickup",
	"Sedan",
	"Estate",
	"Van",
	"Bike",
	"Boat",
	"Aircraft"
};



new t_shop_models[42][9] = {
	{400, 401, 422, 405, 404, 413, 522, 446, 469},
	{489, 402, 478, 421, 458, 418, 521, 452, 447},
	{500, 410, 535, 426, 479, 440, 468, 453, 487},
	{579, 411, 543, 445, 459, 482, 463, 454, 513},
	{0, 412, 554, 466, 0, 483, 462, 472, 519},
	{0, 415, 600, 467, 0, 0, 461, 473, 593},
	{0, 419, 0, 492, 0, 0, 471, 484, 0},
	{0, 429, 0, 507, 0, 0, 581, 493, 0},
	{0, 434, 0, 516, 0, 0, 586, 0, 0},
	{0, 436, 0, 529, 0, 0, 0, 0, 0},
	{0, 439, 0, 540, 0, 0, 0, 0, 0},
	{0, 451, 0, 546, 0, 0, 0, 0, 0},
	{0, 474, 0, 547, 0, 0, 0, 0, 0},
	{0, 475, 0, 550, 0, 0, 0, 0, 0},
	{0, 477, 0, 551, 0, 0, 0, 0, 0},
	{0, 480, 0, 560, 0, 0, 0, 0, 0},
	{0, 491, 0, 566, 0, 0, 0, 0, 0},
	{0, 496, 0, 567, 0, 0, 0, 0, 0},
	{0, 506, 0, 580, 0, 0, 0, 0, 0},
	{0, 517, 0, 585, 0, 0, 0, 0, 0},
	{0, 518, 0, 0, 0, 0, 0, 0, 0},
	{0, 526, 0, 0, 0, 0, 0, 0, 0},
	{0, 527, 0, 0, 0, 0, 0, 0, 0},
	{0, 533, 0, 0, 0, 0, 0, 0, 0},
	{0, 534, 0, 0, 0, 0, 0, 0, 0},
	{0, 536, 0, 0, 0, 0, 0, 0, 0},
	{0, 541, 0, 0, 0, 0, 0, 0, 0},
	{0, 542, 0, 0, 0, 0, 0, 0, 0},
	{0, 545, 0, 0, 0, 0, 0, 0, 0},
	{0, 549, 0, 0, 0, 0, 0, 0, 0},
	{0, 555, 0, 0, 0, 0, 0, 0, 0},
	{0, 558, 0, 0, 0, 0, 0, 0, 0},
	{0, 559, 0, 0, 0, 0, 0, 0, 0},
	{0, 562, 0, 0, 0, 0, 0, 0, 0},
	{0, 565, 0, 0, 0, 0, 0, 0, 0},
	{0, 575, 0, 0, 0, 0, 0, 0, 0},
	{0, 576, 0, 0, 0, 0, 0, 0, 0},
	{0, 587, 0, 0, 0, 0, 0, 0, 0},
	{0, 589, 0, 0, 0, 0, 0, 0, 0},
	{0, 602, 0, 0, 0, 0, 0, 0, 0},
	{0, 603, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 0}
};


new Text:td_tshop[20];
new PlayerText:ptd_tshop[MAX_PLAYERS][4];

new Text:td_color_tshop[20];

new t_shop_colors[16]={
	0,1,2,3,4,5,6,
	128,129,130,134,135,136,142,
	159, 152
};
new t_shop_td_colors[16]={
	0x000000FF,0xF5F5F5FF,0x2A77A1FF,0x840410FF,0x263739FF,0x86446EFF,0xD78E10FF,
	0x177517FF,0x210606FF,0x125478FF,0x25225AFF,0x2C89AAFF,0x8A4DBDFF,0x817A26FF,
	0x2C1E08FF,0x1E4C99FF
};

/*
			AD system
*/
#define MAX_ADVERTS 30

enum _ad_info
{
	ad_sender[MAX_PLAYER_NAME],
	ad_id,
	ad_time,
	ad_checker[MAX_PLAYER_NAME],
	ad_checker_id,
	ad_phone_number,
	ad_text[100],
	bool:ad_checked,
	bool:ad_busy,
	bool:ad_checking
}
new ad_info[MAX_ADVERTS][_ad_info];

new ad_cooldown,
	ad_price = 500;

new cas_price[3],
	cas_bank[3];






/*
		Лесопилка
*/
#define GivePVarInt(%0,%1,%2) SetPVarInt(%0,%1,(GetPVarInt(%0,%1) + %2))

new tree_object[30], tree_pick[30], tree_count = 0;


new Float:tree_positions[30][6] = // 618
{
	{-1046.321044, -1678.931152, 75.278297, 0.000000, 0.000000, -84.000000},
	{-1083.677490, -1672.269287, 75.278297, 0.000000, 0.000000, -84.000000},
	{-1060.557983, -1624.768066, 74.790000, 0.000000, 0.000000, 91.000000},
	{-1065.609252, -1612.123779, 74.790000, 0.000000, 0.000000, 91.000000},
	{-1071.737304, -1626.012207, 74.963706, 0.000000, 0.000000, 229.000000},
	{-1018.745300, -1631.464355, 75.605491, 0.000000, 0.000000, 127.000000},
	{-1051.512329, -1615.288452, 74.790000, 0.000000, 0.000000, 91.000000},
	{-1025.740600, -1716.607421, 76.061279, 0.000000, 0.000000, 47.000000},
	{-1013.885620, -1714.684936, 77.259559, 0.000000, 0.000000, 171.000000},
	{-1032.583251, -1694.014404, 77.412986, 0.000000, 0.000000, 91.000000},
	{-1043.486206, -1703.502563, 76.250007, 0.000000, 0.000000, -127.000000},
	{-1000.672424, -1686.668701, 75.553436, 0.000000, 0.000000, 295.000000},
	{-1011.647705, -1616.124145, 75.580329, 0.000000, 0.000000, 193.000000},
	{-986.640380, -1627.489868, 75.480316, 0.000000, 0.000000, 193.000000},
	{-983.886108, -1691.118408, 75.359481, 0.000000, 0.000000, 91.000000},
	{-974.993835, -1674.648803, 75.469543, 0.000000, 0.000000, 171.000000},
	{-1009.973693, -1657.463623, 75.597198, 0.000000, 0.000000, 207.000000},
	{-1025.406494, -1650.667602, 75.518028, 0.000000, 0.000000, 331.000000},
	{-1093.906982, -1684.676269, 75.308303, 0.000000, 0.000000, -84.000000},
	{-997.827087, -1612.287109, 75.530311, 0.000000, 0.000000, 193.000000},
	{-1014.774597, -1648.989013, 75.510299, 0.000000, 0.000000, 193.000000},
	{-1046.014282, -1631.949584, 74.790000, 0.000000, 0.000000, 171.000000},
	{-1033.686645, -1623.002441, 75.565513, 0.000000, 0.000000, 127.000000},
	{-992.471313, -1703.974487, 76.347328, 0.000000, 0.000000, 156.000000},
	{-1032.836547, -1708.046875, 76.250007, 0.000000, 0.000000, -127.000000},
	{-1019.640197, -1722.937377, 76.250007, 0.000000, 0.000000, -127.000000},
	{-1004.408081, -1729.908081, 77.169975, 0.000000, 0.000000, -127.000000},
	{-1080.830200, -1683.301513, 75.308303, 0.000000, 0.000000, -84.000000},
	{-1064.578613, -1685.952270, 75.424919, 0.000000, 0.000000, 0.000000},
	{-1060.624267, -1663.205932, 75.603103, 0.000000, 0.000000, 178.000000}
};

/*
	автошкола
*/

new gExamQuestions[25][90] = {
	"В каком случае разрешен обгон впереди движущегося т/с?","Разрешен ли обгон впереди движущегося т/с по городу?","Какова макс скорость транспортного средства по автомагистрали?","Какова макс скорость транспортного средства по пригороду?",
	"При виде т/с с включенным спец.сигналом, водитель обязан?","В каких случаях разрешен обгон справа?","Какова макс. скорость транспортного средства по городу?","Какого типа установлены перекрестки в штате?",
	"Что такое ДТП?","Что следует делать при возникновении ДТП в первую очередь?","В каком месте водитель имеет право осуществлять парковку?","Что следует делать водителю при проезде перекрестка?",
	"Со скольки лет можно получить водительские права?","В каком случае следует пристегивать ремень безопастности?","Когда можно включать дальний свет фар?","Разрешен ли обгон по двойной сплошной линии?",
	"Можно ли устанавливать спец. Сигнал на личный автомобиль?","Разрешен ли обгон по прерывистой линии?","Стоит ли соблюдать грузоподъемность тягача?","В каком случае можно включать аварийный сигнал?",
	"Обязательна ли остановка перед пешеходным переходом?","Разрешен ли разворот т/c в туннеле?","Необходимо ли смотреть в зеркала заднего вида при маневре задним ходом?","Разрешено ли движение задним ходом на магистрале?","Должны ли быть видны гос.номера автомобиля? "
};
new gExamAnswers[25][4][75] = {
	{"В случае отсутствия очевидной угрозы лобового столкновения.","В случае передвижения за городом.","В случае передвижения по городу.","В случае очевидной угрозы лобового столкновения"}, {"Разрешен всегда","Запрещен обгон слева","Разрешен в случае отсутствия угрозы столкновения","Запрещен всегда"},
	{"60 Км/ч","10 Км/ч","130 Км/ч","150 Км/ч"},{"100 Км/ч","110 Км/ч","60 Км/ч","90 Км/ч"},{"Продолжить движение в прежнем темпе.","Резко остановить транспортное средство.","Снизить скорость транспортного средства до 40 Км/ч","Постепенно снизить скорость и прижаться к обочине."},{"Разрешен всегда","Запрещен","Разрешен в случае поворота впереди движущегося транспортного средства.","Разрешен за городом"},
	{"50 Км/ч","60 Км/ч","70 Км/ч","80 Км/ч"},{"Регулируемые равнозначнен дороги","Регулируемые неравнозначные дороги","Нерегулируемые равнозначные дороги","Нерегулируемые неравнозначные дороги"},{"Дорожно-транспортное происшествие.","Дорожно-транспортное предприятие.","Дорожно-торговое предприятие.","Дорожно-транспортное препятствие."},{"Скрыться с места ДТП.","Оставаться на месте ДТП и Вызвать сотрудников ПО.","Оставаться на месте ДТП и Вызвать службу спасения.","Вызвать сотрудников скорой помощи."},
	{"Посреди дороги","На парковке.","На перекрестке","На тротуаре"},{"Снизить скорость и проехать при отсутствии помех.","Увеличить скорость.","Проехать не изменяя скорость.","Остановиться перед перекрёстком."}, {"16 лет","18 лет","20 лет","25 лет"}, {"При виде сотрудника ПД","При передвижении за городом"," При передвижении в городе ","В любом случае"},{"В городе","В пробке","На трассе","При проезде на перекрестке"},
	{"Только на трассе ","Запрещен","В городе","На перекрестке"},{"Нет, нельзя","Да","Только на внедорожниках","Только на грузовиках"},{"Только для машин со спец.сигналом","Только для велосипедистов","Всегда разрешен","Всегда запрещен"},{"Да, всегда","Нет, не обязательно","Только при погрузке угля","Только при перевозке людей"},
	{"В любом случае","Если надо «Отойти»","При обгоне","При ДТП"}, {"Нет, не обязательно ","Обязательно","Только при виде сотрудников ПД","Только при включенном поворотнике"},{"Нет","Только при включенном аварийном сигнале","Только при виде сотрудников ПД","Только при включенном дальнем свете"},
	{"При включенных фарах","При виде пешехода","Обязательно","Не обязательно"},{"Нет, не разрешен","Да, разрешен","Только при виде сотрудников ПД","Только при включенном правом поворотнике"},{"Нет, не должны","Только сзади","Только спереди","Должны спереди и сзади"}
};
new gExamTrueAnswer[25]={1,3,4,2,4,3,2,3,1,2,2,1,2,4,3,2,1,3,1,4,2,1,3,1,4};




//======================================================================================

new player_rentcar[MAX_PLAYERS];

/*
		Автобусник
*/

#define BUS_ROUTE_COUNT 5

new Float:gBusCPs[BUS_ROUTE_COUNT][162][4]=
{
	{//Лос-Сантос -> Завод
		{1213.8430,-1841.0974,13.5168,182.1121}, // выезд из автобусной станции
		{1310.6799,-1854.9105,13.5180,270.0129}, //
		{1425.6357,-1874.3829,13.5153,270.0474}, //
		{1519.8831,-1875.2521,13.5169,259.7478}, //
		{1538.2036,-2066.2266,33.2290,199.3694}, //
		{1744.6306,-2169.1843,13.5533,267.7776}, //
		{1756.3765,-2182.4395,13.7113,181.0644}, //
		{1651.3114,-2192.1038,13.5079,89.1774}, //
		{1501.8624,-2191.9885,13.5084,89.8033}, //
		{1472.4874,-2226.8076,13.5164,176.2319}, //
		{1427.1946,-2277.7427,13.5205,176.5108}, //
		{1464.8336,-2334.5715,13.5225,268.5304}, //
		{1521.8463,-2300.0850,13.5156,346.2375}, //
		{1563.2815,-2289.7749,13.5158,266.2188}, //
		{1707.0332,-2321.8752,13.5159,270.4418}, // аэропорт остановка
		{1707.0332,-2321.8752,13.5159,270.4418}, // аэропорт остановка
		{1719.4026,-2322.1323,13.5161,269.6680}, //
		{1735.0154,-2265.2744,13.5084,357.3637}, //
		{1573.6792,-2270.8262,13.5074,178.3729}, //
		{1535.7126,-2284.5693,13.5169,88.6630}, //
		{1486.2192,-2238.7996,13.5096,79.1995}, //
		{1477.0500,-2208.0828,13.5247,357.9043}, //
		{1623.1791,-2197.0081,13.5084,269.9208}, //
		{1737.9480,-2197.6248,13.5084,269.7640}, //
		{1764.0051,-2179.2139,13.6951,358.6133}, //
		{1942.4913,-2169.2766,13.5201,269.8950}, //
		{1964.2203,-2063.9766,13.5632,0.5896}, //
		{1963.9813,-1947.0398,13.7314,0.5093}, //
		{1837.5137,-1929.3712,13.5181,89.5402}, //
		{1824.3250,-1899.1582,13.4845,359.0320}, //
		{1786.2510,-1888.2103,13.5273,94.0191}, //
		{1788.2704,-1927.5881,13.5239,271.4389}, //
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1809.5465,-1892.4043,13.5547,270.2137}, //
		{1824.5651,-1828.7217,13.5468,359.0277}, //
		{1824.5173,-1751.8945,13.5166,0.0175}, //
		{1703.3115,-1729.9232,13.5162,89.8630}, //
		{1475.7048,-1729.0171,13.5162,89.2908}, // мэрия остановка
		{1475.7048,-1729.0171,13.5162,89.2908}, // мэрия остановка
		{1434.2461,-1729.2900,13.5172,90.0941}, //
		{1329.3998,-1730.0419,13.5162,90.1796}, //
		{1315.2583,-1557.4753,13.5215,358.6842}, //
		{1354.5428,-1422.0741,13.5219,358.7672}, //
		{1230.7991,-1392.7340,13.3200,89.7257}, //
		{1089.7488,-1393.4016,13.6737,90.6164}, //
		{1060.7452,-1338.3418,13.5147,359.1664}, //
		{965.9194,-1319.9308,13.4966,89.7461}, //
		{918.0005,-1334.4368,13.1016,178.2967}, // автовокзал 1
		{917.3392,-1363.9099,13.1496,178.7145}, // автовокзал 2
		{917.4626,-1400.2883,13.1496,180.8034}, // автовокзал 3
		{943.2152,-1400.3442,13.1496,268.4330}, // автовокзал 4
		{964.1725,-1399.5028,13.1496,268.8510}, // автовокзал 5
		{937.8848,-1336.8842,13.8823,5.5920}, //
		{823.6028,-1318.8063,13.5602,88.8141}, //
		{658.3195,-1317.3076,13.5293,89.9635}, //
		{632.0135,-1237.3215,17.8542,5.2103}, //
		{483.8956,-1283.9414,15.6080,127.7191}, //
		{165.6089,-1527.5896,12.2635,149.6802}, //
		{49.0357,-1523.7233,5.2146,83.1407}, //
		{-147.2209,-1322.0898,2.8318,351.4575}, //
		{-112.3987,-1171.5883,2.8361,335.2519}, // остановка по пути ЛС-СФ
		{-112.3987,-1171.5883,2.8361,335.2519}, // остановка по пути ЛС-СФ
		{-78.3052,-1081.9469,10.0406,352.9839}, //
		{-77.6921,-1077.0912,11.6840,352.5407}, //
		{-111.7444,-995.3487,24.8531,34.3479}, //
		{-93.4325,-935.5747,20.1761,333.2054}, //
		{14.2957,-704.0411,5.5188,337.4404}, //
		{16.8920,-491.2596,7.1709,45.5957}, //
		{-146.1411,-370.8137,1.2604,46.4622}, // завод
		{-146.1411,-370.8137,1.2604,46.4622}, // завод
		{-239.7125,-271.3275,1.2603,38.1906}, //
		{-297.9576,-169.5124,1.2153,19.5513}, //
		{-91.8970,-198.2187,1.8756,259.6765}, //
		{32.1166,-212.0574,1.6109,264.2971}, //
		{168.6312,-214.4927,1.5640,269.5826}, //
		{196.4534,-284.4534,1.5579,267.3447}, //
		{489.9697,-416.2396,28.6633,260.3968}, //
		{612.8344,-417.7964,18.4793,269.9604}, //
		{638.6902,-467.5833,15.9173,181.4433}, //
		{669.9272,-487.4715,15.9145,269.7381}, //
		{679.4371,-523.6382,15.9111,181.0354}, //
		{678.3944,-652.9081,15.9146,180.2149}, //
		{696.4753,-852.1166,42.9591,197.0289}, //
		{791.3955,-943.9438,40.9060,185.1888}, //
		{793.1008,-1072.8481,24.0635,182.7749}, //
		{794.5583,-1185.7837,20.4230,180.9982}, //
		{795.5422,-1313.2510,13.1099,180.4493}, //
		{934.5486,-1328.5531,13.1099,263.8990}, //
		{918.0005,-1334.4368,13.1016,178.2967}, // автовокзал 1
		{917.3392,-1363.9099,13.1496,178.7145}, // автовокзал 2
		{917.4626,-1400.2883,13.1496,180.8034}, // автовокзал 3
		{943.2152,-1400.3442,13.1496,268.4330}, // автовокзал 4
		{964.1725,-1399.5028,13.1496,268.8510}, // автовокзал 5
		{937.8848,-1336.8842,13.8823,5.5920}, //
		{1037.4506,-1328.6191,13.1228,271.3079}, //
		{1056.0385,-1376.5981,13.1709,180.7968}, //
		{1175.5997,-1408.3754,13.0250,269.3830}, //
		{1330.4478,-1408.2255,13.0709,270.1028}, //
		{1386.1495,-1407.6333,13.1099,265.4915}, //
		{1398.8656,-1434.2449,13.1100,189.9643}, //
		{1441.5265,-1443.4822,13.1099,267.7043}, //
		{1427.4857,-1571.8370,13.0812,176.8934}, //
		{1427.3429,-1714.5852,13.1099,180.6119}, //
		{1481.0962,-1734.4026,13.1099,267.6781}, // мэрия остановка
		{1481.0962,-1734.4026,13.1099,267.6781}, // мэрия остановка
		{1519.9120,-1734.6687,13.1099,270.3178}, //
		{1675.2118,-1734.7673,13.1099,270.0012}, //
		{1804.2273,-1735.0618,13.1182,269.6529}, //
		{1818.4425,-1871.9138,13.1412,179.4486}, //
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1810.5164,-1892.5945,13.1402,269.7905}, //
		{1819.8022,-1924.1484,13.1063,178.1825}, //
		{1946.9967,-1935.5492,13.1099,268.8204}, //
		{1959.5957,-2055.0193,13.1100,180.2141}, //
		{1959.3175,-2153.1284,13.1099,177.7565}, //
		{1765.5797,-2164.4265,13.1099,90.0846}, //
		{1755.7759,-2182.8433,13.2958,175.8468}, //
		{1623.1675,-2192.7361,13.1021,90.4688}, //
		{1480.2207,-2192.2551,13.1099,93.2550}, //
		{1471.4183,-2223.8076,13.1099,176.7510}, //
		{1426.6350,-2271.4868,13.1116,171.4945}, //
		{1463.8569,-2334.8152,13.1132,272.9326}, //
		{1522.7249,-2298.4026,13.1150,359.6316}, //
		{1558.5247,-2288.9155,13.1105,269.5410}, //
		{1573.9153,-2314.1377,13.1100,175.0725}, //
		{1707.0332,-2321.8752,13.5159,270.4418}, // аэропорт остановка
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0}
	},
	{// лесопилка
		{1213.8430,-1841.0974,13.5168,182.1121}, // выезд из автобусной станции
		{1310.6799,-1854.9105,13.5180,270.0129}, //
		{1425.6357,-1874.3829,13.5153,270.0474}, //
		{1519.8831,-1875.2521,13.5169,259.7478}, //
		{1538.2036,-2066.2266,33.2290,199.3694}, //
		{1744.6306,-2169.1843,13.5533,267.7776}, //
		{1756.3765,-2182.4395,13.7113,181.0644}, //
		{1651.3114,-2192.1038,13.5079,89.1774}, //
		{1501.8624,-2191.9885,13.5084,89.8033}, //
		{1472.4874,-2226.8076,13.5164,176.2319}, //
		{1427.1946,-2277.7427,13.5205,176.5108}, //
		{1464.8336,-2334.5715,13.5225,268.5304}, //
		{1521.8463,-2300.0850,13.5156,346.2375}, //
		{1563.2815,-2289.7749,13.5158,266.2188}, //
		{1707.0332,-2321.8752,13.5159,270.4418}, // аэропорт остановка
		{1707.0332,-2321.8752,13.5159,270.4418}, // аэропорт остановка
		{1719.4026,-2322.1323,13.5161,269.6680}, //
		{1735.0154,-2265.2744,13.5084,357.3637}, //
		{1573.6792,-2270.8262,13.5074,178.3729}, //
		{1535.7126,-2284.5693,13.5169,88.6630}, //
		{1486.2192,-2238.7996,13.5096,79.1995}, //
		{1477.0500,-2208.0828,13.5247,357.9043}, //
		{1623.1791,-2197.0081,13.5084,269.9208}, //
		{1737.9480,-2197.6248,13.5084,269.7640}, //
		{1764.0051,-2179.2139,13.6951,358.6133}, //
		{1942.4913,-2169.2766,13.5201,269.8950}, //
		{1964.2203,-2063.9766,13.5632,0.5896}, //
		{1963.9813,-1947.0398,13.7314,0.5093}, //
		{1837.5137,-1929.3712,13.5181,89.5402}, //
		{1824.3250,-1899.1582,13.4845,359.0320}, //
		{1786.2510,-1888.2103,13.5273,94.0191}, //
		{1788.2704,-1927.5881,13.5239,271.4389}, //
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1809.5465,-1892.4043,13.5547,270.2137}, //
		{1824.5651,-1828.7217,13.5468,359.0277}, //
		{1824.5173,-1751.8945,13.5166,0.0175}, //
		{1703.3115,-1729.9232,13.5162,89.8630}, //
		{1475.7048,-1729.0171,13.5162,89.2908}, // мэрия остановка
		{1475.7048,-1729.0171,13.5162,89.2908}, // мэрия остановка
		{1434.2461,-1729.2900,13.5172,90.0941}, //
		{1329.3998,-1730.0419,13.5162,90.1796}, //
		{1315.2583,-1557.4753,13.5215,358.6842}, //
		{1354.5428,-1422.0741,13.5219,358.7672}, //
		{1230.7991,-1392.7340,13.3200,89.7257}, //
		{1089.7488,-1393.4016,13.6737,90.6164}, //
		{1060.7452,-1338.3418,13.5147,359.1664}, //
		{965.9194,-1319.9308,13.4966,89.7461}, //
		{918.0005,-1334.4368,13.1016,178.2967}, // автовокзал 1
		{917.3392,-1363.9099,13.1496,178.7145}, // автовокзал 2
		{917.4626,-1400.2883,13.1496,180.8034}, // автовокзал 3
		{943.2152,-1400.3442,13.1496,268.4330}, // автовокзал 4
		{964.1725,-1399.5028,13.1496,268.8510}, // автовокзал 5
		{937.8848,-1336.8842,13.8823,5.5920}, //
		{811.1306,-1318.9496,13.1982,89.9027}, //
		{653.5903,-1316.9351,13.1149,90.1286}, //
		{630.4289,-1229.5701,17.7144,10.7588}, //
		{484.2709,-1283.8257,15.2068,129.0542}, //
		{291.1645,-1401.6104,13.5362,116.2621}, //
		{159.9824,-1534.4052,11.6294,148.6181}, //
		{56.8065,-1524.8636,4.7147,84.2721}, //
		{-10.0345,-1516.0217,1.9397,80.8545}, //
		{-75.5594,-1611.6417,3.0128,121.5095}, //
		{-250.2993,-1708.4520,2.4262,171.4760}, //
		{-283.3094,-1897.9241,26.2633,177.8874}, //
		{-260.1493,-2053.0076,34.2656,188.4289}, //
		{-381.7155,-2179.6157,47.3596,136.3062}, //
		{-536.4543,-2160.2756,47.8712,87.1314}, //
		{-702.8312,-2301.0449,25.8044,159.6756}, //
		{-784.8057,-2456.7866,74.2851,138.5422}, //
		{-951.3232,-2598.9216,88.7400,118.7130}, //
		{-1119.4308,-2575.9363,72.4853,55.3158}, //
		{-1180.4319,-2416.7175,50.7230,351.1302}, //
		{-1117.5021,-2203.7173,32.3333,342.7993}, //
		{-975.9387,-1933.7251,79.7055,339.9514}, //
		{-842.7307,-1846.2357,90.7750,337.0747}, // остановка лесопилка
		{-842.7307,-1846.2357,90.7750,337.0747}, // остановка лесопилка
		{-783.9249,-1766.2086,92.8774,316.0128}, //
		{-756.5179,-1546.7760,93.0027,0.8423}, //
		{-761.1146,-1331.9481,77.3076,358.0033}, //
		{-739.0377,-1273.8057,67.5998,255.1855}, //
		{-717.3920,-1425.7316,59.6791,181.1400}, //
		{-718.4507,-1705.5530,47.3751,187.4189}, //
		{-657.9287,-1559.2620,22.5542,355.9642}, //
		{-650.5244,-1344.6731,18.7148,357.8244}, //
		{-537.0958,-1084.7627,23.1614,329.1794}, //
		{-358.2734,-792.4844,29.2753,335.7093}, //
		{-294.8969,-857.2706,45.9972,153.8116}, //
		{-122.0254,-994.1523,25.1769,222.5404}, //
		{-114.4827,-1158.4548,1.8536,157.1184}, // ЛС-СФ остановка
		{-114.4827,-1158.4548,1.8536,157.1184}, // ЛС-СФ остановка
		{-132.6584,-1204.9232,2.4292,164.2681}, //
		{-151.6033,-1408.3781,2.4224,186.3250}, //
		{-0.7386,-1526.1174,2.5808,261.4606}, //
		{124.3007,-1556.2242,8.4189,238.9974}, //
		{233.6044,-1457.6034,12.9613,316.0394}, //
		{447.9044,-1328.5498,14.7962,303.5712}, //
		{596.6102,-1229.8948,17.5789,291.0213}, //
		{629.7780,-1296.6859,14.6437,178.5232}, //
		{773.0375,-1323.3060,13.1161,268.6078}, //
		{928.0953,-1327.7947,13.1240,271.8894}, //
		{918.0005,-1334.4368,13.1016,178.2967}, // автовокзал 1
		{917.3392,-1363.9099,13.1496,178.7145}, // автовокзал 2
		{917.4626,-1400.2883,13.1496,180.8034}, // автовокзал 3
		{943.2152,-1400.3442,13.1496,268.4330}, // автовокзал 4
		{964.1725,-1399.5028,13.1496,268.8510}, // автовокзал 5
		{937.8848,-1336.8842,13.8823,5.5920}, //
		{1037.4506,-1328.6191,13.1228,271.3079}, //
		{1056.0385,-1376.5981,13.1709,180.7968}, //
		{1175.5997,-1408.3754,13.0250,269.3830}, //
		{1330.4478,-1408.2255,13.0709,270.1028}, //
		{1386.1495,-1407.6333,13.1099,265.4915}, //
		{1398.8656,-1434.2449,13.1100,189.9643}, //
		{1441.5265,-1443.4822,13.1099,267.7043}, //
		{1427.4857,-1571.8370,13.0812,176.8934}, //
		{1427.3429,-1714.5852,13.1099,180.6119}, //
		{1481.0962,-1734.4026,13.1099,267.6781}, // мэрия остановка
		{1481.0962,-1734.4026,13.1099,267.6781}, // мэрия остановка
		{1519.9120,-1734.6687,13.1099,270.3178}, //
		{1675.2118,-1734.7673,13.1099,270.0012}, //
		{1804.2273,-1735.0618,13.1182,269.6529}, //
		{1818.4425,-1871.9138,13.1412,179.4486}, //
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1810.5164,-1892.5945,13.1402,269.7905}, //
		{1819.8022,-1924.1484,13.1063,178.1825}, //
		{1946.9967,-1935.5492,13.1099,268.8204}, //
		{1959.5957,-2055.0193,13.1100,180.2141}, //
		{1959.3175,-2153.1284,13.1099,177.7565}, //
		{1765.5797,-2164.4265,13.1099,90.0846}, //
		{1755.7759,-2182.8433,13.2958,175.8468}, //
		{1623.1675,-2192.7361,13.1021,90.4688}, //
		{1480.2207,-2192.2551,13.1099,93.2550}, //
		{1471.4183,-2223.8076,13.1099,176.7510}, //
		{1426.6350,-2271.4868,13.1116,171.4945}, //
		{1463.8569,-2334.8152,13.1132,272.9326}, //
		{1522.7249,-2298.4026,13.1150,359.6316}, //
		{1558.5247,-2288.9155,13.1105,269.5410}, //
		{1573.9153,-2314.1377,13.1100,175.0725}, //
		{1707.0332,-2321.8752,13.5159,270.4418}, // аэропорт остановка
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0}
	},
	{
		{1213.8430,-1841.0974,13.5168,182.1121}, // выезд из автобусной станции
		{1310.6799,-1854.9105,13.5180,270.0129}, //
		{1425.6357,-1874.3829,13.5153,270.0474}, //
		{1519.8831,-1875.2521,13.5169,259.7478}, //
		{1538.2036,-2066.2266,33.2290,199.3694}, //
		{1744.6306,-2169.1843,13.5533,267.7776}, //
		{1756.3765,-2182.4395,13.7113,181.0644}, //
		{1651.3114,-2192.1038,13.5079,89.1774}, //
		{1501.8624,-2191.9885,13.5084,89.8033}, //
		{1472.4874,-2226.8076,13.5164,176.2319}, //
		{1427.1946,-2277.7427,13.5205,176.5108}, //
		{1464.8336,-2334.5715,13.5225,268.5304}, //
		{1521.8463,-2300.0850,13.5156,346.2375}, //
		{1563.2815,-2289.7749,13.5158,266.2188}, //
		{1707.0332,-2321.8752,13.5159,270.4418}, // аэропорт остановка
		{1707.0332,-2321.8752,13.5159,270.4418}, // аэропорт остановка
		{1719.4026,-2322.1323,13.5161,269.6680}, //
		{1735.0154,-2265.2744,13.5084,357.3637}, //
		{1573.6792,-2270.8262,13.5074,178.3729}, //
		{1535.7126,-2284.5693,13.5169,88.6630}, //
		{1486.2192,-2238.7996,13.5096,79.1995}, //
		{1477.0500,-2208.0828,13.5247,357.9043}, //
		{1623.1791,-2197.0081,13.5084,269.9208}, //
		{1737.9480,-2197.6248,13.5084,269.7640}, //
		{1764.0051,-2179.2139,13.6951,358.6133}, //
		{1942.4913,-2169.2766,13.5201,269.8950}, //
		{1964.2203,-2063.9766,13.5632,0.5896}, //
		{1963.9813,-1947.0398,13.7314,0.5093}, //
		{1837.5137,-1929.3712,13.5181,89.5402}, //
		{1824.3250,-1899.1582,13.4845,359.0320}, //
		{1786.2510,-1888.2103,13.5273,94.0191}, //
		{1788.2704,-1927.5881,13.5239,271.4389}, //
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1809.5465,-1892.4043,13.5547,270.2137}, //
		{1824.5651,-1828.7217,13.5468,359.0277}, //
		{1824.5173,-1751.8945,13.5166,0.0175}, //
		{1703.3115,-1729.9232,13.5162,89.8630}, //
		{1475.7048,-1729.0171,13.5162,89.2908}, // мэрия остановка
		{1475.7048,-1729.0171,13.5162,89.2908}, // мэрия остановка
		{1434.2461,-1729.2900,13.5172,90.0941}, //
		{1329.3998,-1730.0419,13.5162,90.1796}, //
		{1315.2583,-1557.4753,13.5215,358.6842}, //
		{1354.5428,-1422.0741,13.5219,358.7672}, //
		{1230.7991,-1392.7340,13.3200,89.7257}, //
		{1089.7488,-1393.4016,13.6737,90.6164}, //
		{1060.7452,-1338.3418,13.5147,359.1664}, //
		{965.9194,-1319.9308,13.4966,89.7461}, //
		{918.0005,-1334.4368,13.1016,178.2967}, // автовокзал 1
		{917.3392,-1363.9099,13.1496,178.7145}, // автовокзал 2
		{917.4626,-1400.2883,13.1496,180.8034}, // автовокзал 3
		{943.2152,-1400.3442,13.1496,268.4330}, // автовокзал 4
		{964.1725,-1399.5028,13.1496,268.8510}, // автовокзал 5
		{937.8848,-1336.8842,13.8823,5.5920}, //
		{1033.4648,-1328.7191,13.1193,270.4006}, //
		{1060.6157,-1291.3240,13.4436,357.4881}, //
		{1060.6901,-1164.9307,23.4661,1.5495}, //
		{1076.0348,-1148.7672,23.3833,312.7102}, //
		{1085.2631,-1054.6884,30.5044,0.6362}, //
		{1088.3627,-971.1555,41.4448,358.0144}, //
		{1228.9402,-944.2146,42.2828,281.2227}, //
		{1406.3033,-947.0932,34.9612,259.0047}, //
		{1503.0818,-982.5068,37.8681,246.3103}, //
		{1608.6036,-990.4446,48.1841,280.2752}, //
		{1702.3673,-914.6741,52.7610,321.2046}, //
		{1709.5941,-731.3088,49.4074,355.8462}, //
		{1702.5767,-437.2334,33.5960,9.8705}, //
		{1679.9818,-253.1451,42.9517,2.0330}, //
		{1657.8512,-33.9673,36.2019,18.8688}, //
		{1636.3873,170.2199,33.7980,346.1722}, //
		{1700.1146,378.1291,29.7404,340.4160}, //
		{1777.4253,630.6216,19.7807,344.7472}, //
		{1802.6017,816.7848,10.5253,358.6758}, //
		{1664.8518,855.3177,6.7061,89.6406}, //
		{1439.4167,860.4006,6.5638,79.0143}, //
		{1283.6193,942.0801,13.2220,96.9610}, //
		{1155.0503,876.9037,10.4483,126.7299}, //
		{1029.5994,787.9175,10.4479,124.1538}, //
		{782.9067,690.5549,11.0813,110.1595}, //
		{569.1440,693.5566,3.1910,70.8584}, //
		{387.2798,776.1797,5.8799,68.5116}, //
		{301.8780,832.9370,16.1246,39.8221}, //
		{237.6919,952.0884,27.4905,24.5968}, //
		{347.8274,1006.5161,28.5319,281.3705}, //
		{345.9383,905.8948,20.5066,173.2328}, // Шахта остановка
		{345.9383,905.8948,20.5066,173.2328}, // Шахта остановка
		{347.1959,875.4847,20.5001,236.8611}, //
		{369.5680,934.0712,24.6274,352.5422}, //
		{370.5534,992.1411,30.3258,6.5056}, //
		{245.6671,982.4324,28.2966,116.9732}, //
		{280.1982,841.4752,18.6917,203.4811}, //
		{372.9213,667.9229,12.1105,216.9556}, //
		{491.4666,508.0979,19.0225,214.9004}, //
		{614.6872,327.8508,19.6407,203.7117}, //
		{521.2842,246.9752,14.6177,130.9774}, //
		{525.7462,30.2082,22.0995,182.8433}, //
		{525.3859,-117.8899,37.5725,174.7726}, //
		{473.2528,-380.8337,28.2577,165.6904}, //
		{616.4767,-417.7325,17.9663,269.9770}, //
		{638.6308,-470.2724,15.9090,184.4072}, //
		{669.8283,-487.3859,15.9146,272.9427}, //
		{679.4222,-591.1349,15.9135,180.1705}, //
		{683.4139,-788.8630,32.9947,184.0693}, //
		{779.6216,-914.8699,42.9889,227.8125}, //
		{793.2111,-1026.9896,25.3076,179.5797}, //
		{794.8568,-1172.7501,22.1839,181.5364}, //
		{794.2957,-1305.4510,13.1099,178.1163}, //
		{927.4606,-1327.4943,13.1299,270.0660}, //
		{918.0005,-1334.4368,13.1016,178.2967}, // автовокзал 1
		{917.3392,-1363.9099,13.1496,178.7145}, // автовокзал 2
		{917.4626,-1400.2883,13.1496,180.8034}, // автовокзал 3
		{943.2152,-1400.3442,13.1496,268.4330}, // автовокзал 4
		{964.1725,-1399.5028,13.1496,268.8510}, // автовокзал 5
		{937.8848,-1336.8842,13.8823,5.5920}, //
		{1037.4506,-1328.6191,13.1228,271.3079}, //
		{1056.0385,-1376.5981,13.1709,180.7968}, //
		{1175.5997,-1408.3754,13.0250,269.3830}, //
		{1330.4478,-1408.2255,13.0709,270.1028}, //
		{1386.1495,-1407.6333,13.1099,265.4915}, //
		{1398.8656,-1434.2449,13.1100,189.9643}, //
		{1441.5265,-1443.4822,13.1099,267.7043}, //
		{1427.4857,-1571.8370,13.0812,176.8934}, //
		{1427.3429,-1714.5852,13.1099,180.6119}, //
		{1481.0962,-1734.4026,13.1099,267.6781}, // мэрия остановка
		{1481.0962,-1734.4026,13.1099,267.6781}, // мэрия остановка
		{1519.9120,-1734.6687,13.1099,270.3178}, //
		{1675.2118,-1734.7673,13.1099,270.0012}, //
		{1804.2273,-1735.0618,13.1182,269.6529}, //
		{1818.4425,-1871.9138,13.1412,179.4486}, //
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1810.5164,-1892.5945,13.1402,269.7905}, //
		{1819.8022,-1924.1484,13.1063,178.1825}, //
		{1946.9967,-1935.5492,13.1099,268.8204}, //
		{1959.5957,-2055.0193,13.1100,180.2141}, //
		{1959.3175,-2153.1284,13.1099,177.7565}, //
		{1765.5797,-2164.4265,13.1099,90.0846}, //
		{1755.7759,-2182.8433,13.2958,175.8468}, //
		{1623.1675,-2192.7361,13.1021,90.4688}, //
		{1480.2207,-2192.2551,13.1099,93.2550}, //
		{1471.4183,-2223.8076,13.1099,176.7510}, //
		{1426.6350,-2271.4868,13.1116,171.4945}, //
		{1463.8569,-2334.8152,13.1132,272.9326}, //
		{1522.7249,-2298.4026,13.1150,359.6316}, //
		{1558.5247,-2288.9155,13.1105,269.5410}, //
		{1573.9153,-2314.1377,13.1100,175.0725}, //
		{1707.0332,-2321.8752,13.5159,270.4418}, // аэропорт остановка
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0}
	},
	{// автошкола
		{1213.8430,-1841.0974,13.5168,182.1121}, // выезд из автобусной станции
		{1310.6799,-1854.9105,13.5180,270.0129}, //
		{1425.6357,-1874.3829,13.5153,270.0474}, //
		{1519.8831,-1875.2521,13.5169,259.7478}, //
		{1538.2036,-2066.2266,33.2290,199.3694}, //
		{1744.6306,-2169.1843,13.5533,267.7776}, //
		{1756.3765,-2182.4395,13.7113,181.0644}, //
		{1651.3114,-2192.1038,13.5079,89.1774}, //
		{1501.8624,-2191.9885,13.5084,89.8033}, //
		{1472.4874,-2226.8076,13.5164,176.2319}, //
		{1427.1946,-2277.7427,13.5205,176.5108}, //
		{1464.8336,-2334.5715,13.5225,268.5304}, //
		{1521.8463,-2300.0850,13.5156,346.2375}, //
		{1563.2815,-2289.7749,13.5158,266.2188}, //
		{1707.0332,-2321.8752,13.5159,270.4418}, // аэропорт остановка
		{1707.0332,-2321.8752,13.5159,270.4418}, // аэропорт остановка
		{1719.4026,-2322.1323,13.5161,269.6680}, //
		{1735.0154,-2265.2744,13.5084,357.3637}, //
		{1573.6792,-2270.8262,13.5074,178.3729}, //
		{1535.7126,-2284.5693,13.5169,88.6630}, //
		{1486.2192,-2238.7996,13.5096,79.1995}, //
		{1477.0500,-2208.0828,13.5247,357.9043}, //
		{1623.1791,-2197.0081,13.5084,269.9208}, //
		{1737.9480,-2197.6248,13.5084,269.7640}, //
		{1764.0051,-2179.2139,13.6951,358.6133}, //
		{1942.4913,-2169.2766,13.5201,269.8950}, //
		{1964.2203,-2063.9766,13.5632,0.5896}, //
		{1963.9813,-1947.0398,13.7314,0.5093}, //
		{1837.5137,-1929.3712,13.5181,89.5402}, //
		{1824.3250,-1899.1582,13.4845,359.0320}, //
		{1786.2510,-1888.2103,13.5273,94.0191}, //
		{1788.2704,-1927.5881,13.5239,271.4389}, //
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1809.5465,-1892.4043,13.5547,270.2137}, //
		{1824.5651,-1828.7217,13.5468,359.0277}, //
		{1824.5173,-1751.8945,13.5166,0.0175}, //
		{1703.3115,-1729.9232,13.5162,89.8630}, //
		{1475.7048,-1729.0171,13.5162,89.2908}, // мэрия остановка
		{1475.7048,-1729.0171,13.5162,89.2908}, // мэрия остановка
		{1434.2461,-1729.2900,13.5172,90.0941}, //
		{1329.3998,-1730.0419,13.5162,90.1796}, //
		{1315.2583,-1557.4753,13.5215,358.6842}, //
		{1354.5428,-1422.0741,13.5219,358.7672}, //
		{1230.7991,-1392.7340,13.3200,89.7257}, //
		{1089.7488,-1393.4016,13.6737,90.6164}, //
		{1060.7452,-1338.3418,13.5147,359.1664}, //
		{965.9194,-1319.9308,13.4966,89.7461}, //
		{918.0005,-1334.4368,13.1016,178.2967}, // автовокзал 1
		{917.3392,-1363.9099,13.1496,178.7145}, // автовокзал 2
		{917.4626,-1400.2883,13.1496,180.8034}, // автовокзал 3
		{943.2152,-1400.3442,13.1496,268.4330}, // автовокзал 4
		{964.1725,-1399.5028,13.1496,268.8510}, // автовокзал 5
		{937.8848,-1336.8842,13.8823,5.5920}, //
		{937.8848,-1336.8842,13.8823,5.5920}, //
		{823.6028,-1318.8063,13.5602,88.8141}, //
		{658.3195,-1317.3076,13.5293,89.9635}, //
		{632.0135,-1237.3215,17.8542,5.2103}, //
		{483.8956,-1283.9414,15.6080,127.7191}, //
		{165.6089,-1527.5896,12.2635,149.6802}, //
		{49.0357,-1523.7233,5.2146,83.1407}, //
		{-147.2209,-1322.0898,2.8318,351.4575}, //
		{-112.3987,-1171.5883,2.8361,335.2519}, // остановка по пути ЛС-СФ
		{-112.3987,-1171.5883,2.8361,335.2519}, // остановка по пути ЛС-СФ
		{-79.6795,-1091.1952,6.5557,341.7809}, //
		{-114.1198,-994.8091,24.6328,37.5923}, //
		{-304.0611,-868.7036,46.5796,65.5668}, //
		{-441.7059,-833.1285,48.9995,108.6686}, //
		{-587.4579,-958.0215,61.7136,131.5223}, //
		{-739.8021,-1003.8401,75.7894,86.6487}, //
		{-881.7687,-1103.1528,97.7247,168.4305}, //
		{-989.4873,-1012.2916,94.4217,44.6537}, //
		{-1077.9281,-921.0509,79.6886,44.4164}, //
		{-1215.3014,-779.5359,63.7529,47.0556}, //
		{-1354.0007,-812.3049,77.7037,94.1300}, //
		{-1493.7421,-817.9014,63.5211,88.8722}, //
		{-1728.3220,-731.0910,33.4706,59.1466}, //
		{-1759.3016,-599.3633,15.9941,2.3324}, //
		{-1810.5826,-576.5378,16.0876,88.7900}, //
		{-1941.5820,-577.2044,24.1729,90.0584}, //
		{-2106.4116,-535.1607,33.6462,43.1919}, //
		{-2223.5862,-419.6469,50.5945,44.8919}, //
		{-2251.8438,-229.1930,36.2917,359.7997}, //
		{-2250.9529,-93.5185,34.8990,359.3393}, //
		{-2178.6497,-72.1933,34.8990,271.0059}, //
		{-2009.8748,-90.7511,35.1660,183.0187}, // автошкола остановка
		{-2009.8748,-90.7511,35.1660,183.0187}, // автошкола остановка
		{-2008.0400,-156.2095,35.4380,179.3147}, //
		{-2007.7781,-226.8604,35.4380,180.2160}, //
		{-1909.9855,-240.9007,25.1305,272.3540}, //
		{-1814.1073,-238.4113,17.9537,270.5306}, //
		{-1813.6671,-390.5761,16.6715,169.4056}, //
		{-1823.4612,-546.1692,15.3888,186.4960}, //
		{-1779.3074,-585.3051,16.0633,265.3839}, //
		{-1763.4508,-682.6708,23.7063,179.3255}, //
		{-1638.2283,-786.8362,44.8165,245.8096}, //
		{-1471.4757,-823.6951,69.2305,267.3809}, //
		{-1328.8351,-816.3112,74.9342,272.7595}, //
		{-1243.9962,-783.8773,65.4937,299.5293}, //
		{-1126.9221,-879.1119,72.3504,223.4654}, //
		{-981.8031,-1026.7708,95.1993,225.0017}, //
		{-903.9860,-1107.1373,98.3166,224.4155}, //
		{-855.5084,-1049.0074,89.7962,335.3690}, //
		{-703.8616,-1011.4918,73.0267,266.4309}, //
		{-513.1229,-890.2638,54.0877,317.2563}, //
		{-344.7021,-857.1530,46.7184,244.3891}, //
		{-197.6120,-934.2507,35.4465,234.3802}, //
		{-103.2044,-1016.7017,23.7373,215.9036}, //
		{-83.1063,-1087.7490,7.6142,170.0623}, //
		{-114.4827,-1158.4548,1.8536,157.1184}, // ЛС-СФ остановка
		{-114.4827,-1158.4548,1.8536,157.1184}, // ЛС-СФ остановка
		{-132.6584,-1204.9232,2.4292,164.2681}, //
		{-151.6033,-1408.3781,2.4224,186.3250}, //
		{-0.7386,-1526.1174,2.5808,261.4606}, //
		{124.3007,-1556.2242,8.4189,238.9974}, //
		{233.6044,-1457.6034,12.9613,316.0394}, //
		{447.9044,-1328.5498,14.7962,303.5712}, //
		{596.6102,-1229.8948,17.5789,291.0213}, //
		{629.7780,-1296.6859,14.6437,178.5232}, //
		{773.0375,-1323.3060,13.1161,268.6078}, //
		{928.0953,-1327.7947,13.1240,271.8894}, //
		{918.0005,-1334.4368,13.1016,178.2967}, // автовокзал 1
		{917.3392,-1363.9099,13.1496,178.7145}, // автовокзал 2
		{917.4626,-1400.2883,13.1496,180.8034}, // автовокзал 3
		{943.2152,-1400.3442,13.1496,268.4330}, // автовокзал 4
		{964.1725,-1399.5028,13.1496,268.8510}, // автовокзал 5
		{937.8848,-1336.8842,13.8823,5.5920}, //
		{1037.4506,-1328.6191,13.1228,271.3079}, //
		{1056.0385,-1376.5981,13.1709,180.7968}, //
		{1175.5997,-1408.3754,13.0250,269.3830}, //
		{1330.4478,-1408.2255,13.0709,270.1028}, //
		{1386.1495,-1407.6333,13.1099,265.4915}, //
		{1398.8656,-1434.2449,13.1100,189.9643}, //
		{1441.5265,-1443.4822,13.1099,267.7043}, //
		{1427.4857,-1571.8370,13.0812,176.8934}, //
		{1427.3429,-1714.5852,13.1099,180.6119}, //
		{1481.0962,-1734.4026,13.1099,267.6781}, // мэрия остановка
		{1481.0962,-1734.4026,13.1099,267.6781}, // мэрия остановка
		{1519.9120,-1734.6687,13.1099,270.3178}, //
		{1675.2118,-1734.7673,13.1099,270.0012}, //
		{1804.2273,-1735.0618,13.1182,269.6529}, //
		{1818.4425,-1871.9138,13.1412,179.4486}, //
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1810.5164,-1892.5945,13.1402,269.7905}, //
		{1819.8022,-1924.1484,13.1063,178.1825}, //
		{1946.9967,-1935.5492,13.1099,268.8204}, //
		{1959.5957,-2055.0193,13.1100,180.2141}, //
		{1959.3175,-2153.1284,13.1099,177.7565}, //
		{1765.5797,-2164.4265,13.1099,90.0846}, //
		{1755.7759,-2182.8433,13.2958,175.8468}, //
		{1623.1675,-2192.7361,13.1021,90.4688}, //
		{1480.2207,-2192.2551,13.1099,93.2550}, //
		{1471.4183,-2223.8076,13.1099,176.7510}, //
		{1426.6350,-2271.4868,13.1116,171.4945}, //
		{1463.8569,-2334.8152,13.1132,272.9326}, //
		{1522.7249,-2298.4026,13.1150,359.6316}, //
		{1558.5247,-2288.9155,13.1105,269.5410}, //
		{1573.9153,-2314.1377,13.1100,175.0725}, //
		{1707.0332,-2321.8752,13.5159,270.4418}, // аэропорт остановка
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0}
	},
	{//порт
		{1213.8430,-1841.0974,13.5168,182.1121}, // выезд из автобусной станции
		{1189.0250,-1849.6125,13.1307,92.1444}, //
		{1073.8280,-1849.6711,13.1185,87.7909}, //
		{1041.2201,-1804.6443,13.3726,36.4938}, //
		{1039.8851,-1721.6174,13.1099,1.9136}, //
		{1040.1737,-1580.5139,13.1099,0.1111}, //
		{1064.5647,-1421.6473,13.1244,357.7993}, //
		{1060.7104,-1336.3251,13.1099,359.5515}, //
		{938.7539,-1331.0968,13.2844,163.8833}, //
		{918.0005,-1334.4368,13.1016,178.2967}, // автовокзал 1
		{917.3392,-1363.9099,13.1496,178.7145}, // автовокзал 2
		{917.4626,-1400.2883,13.1496,180.8034}, // автовокзал 3
		{943.2152,-1400.3442,13.1496,268.4330}, // автовокзал 4
		{964.1725,-1399.5028,13.1496,268.8510}, // автовокзал 5
		{937.8848,-1336.8842,13.8823,5.5920}, //
		{1035.8025,-1328.6722,13.1200,267.8059}, //
		{1055.7948,-1381.1461,13.2085,175.9522}, //
		{1178.2296,-1407.6797,12.9984,270.2234}, //
		{1338.0435,-1408.3522,13.0814,269.1259}, //
		{1392.8032,-1408.9894,13.1099,267.7824}, //
		{1400.0709,-1438.9984,13.1099,196.4278}, //
		{1441.9796,-1443.8215,13.1099,267.7849}, //
		{1426.7141,-1572.0923,13.0810,170.3428}, //
		{1426.8546,-1712.9070,13.1099,179.8623}, //
		{1481.0962,-1734.4026,13.1099,267.6781}, // мэрия остановка
		{1481.0962,-1734.4026,13.1099,267.6781}, // мэрия остановка
		{1519.9120,-1734.6687,13.1099,270.3178}, //
		{1675.2118,-1734.7673,13.1099,270.0012}, //
		{1804.2273,-1735.0618,13.1182,269.6529}, //
		{1818.4425,-1871.9138,13.1412,179.4486}, //
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1810.5164,-1892.5945,13.1402,269.7905}, //
		{1819.8022,-1924.1484,13.1063,178.1825}, //
		{1946.9967,-1935.5492,13.1099,268.8204}, //
		{1959.5957,-2055.0193,13.1100,180.2141}, //
		{1959.3175,-2153.1284,13.1099,177.7565}, //
		{1765.5797,-2164.4265,13.1099,90.0846}, //
		{1755.7759,-2182.8433,13.2958,175.8468}, //
		{1623.1675,-2192.7361,13.1021,90.4688}, //
		{1480.2207,-2192.2551,13.1099,93.2550}, //
		{1471.4183,-2223.8076,13.1099,176.7510}, //
		{1426.6350,-2271.4868,13.1116,171.4945}, //
		{1463.8569,-2334.8152,13.1132,272.9326}, //
		{1522.7249,-2298.4026,13.1150,359.6316}, //
		{1558.5247,-2288.9155,13.1105,269.5410}, //
		{1573.9153,-2314.1377,13.1100,175.0725}, //
		{1707.0332,-2321.8752,13.5159,270.4418}, // аэропорт остановка
		{1707.0332,-2321.8752,13.5159,270.4418}, // аэропорт остановка
		{1722.0920,-2322.0947,13.1099,269.6165}, //
		{1734.4688,-2262.2383,13.1017,1.9342}, //
		{1591.4392,-2251.5098,13.1014,89.6516}, //
		{1573.9150,-2273.8511,13.0894,179.5573}, //
		{1532.8733,-2283.8037,13.1099,87.3334}, //
		{1486.9033,-2238.4680,13.1167,89.6271}, //
		{1476.9788,-2207.8743,13.1099,357.3456}, //
		{1631.6475,-2197.0447,13.1021,270.4254}, //
		{1741.3912,-2197.4236,13.1021,269.1581}, //
		{1763.0450,-2176.9800,13.2958,355.7468}, //
		{1829.1376,-2169.1123,13.1099,270.6334}, //
		{1948.2498,-2168.9666,13.1171,269.7465}, //
		{1964.2023,-2123.2712,13.1099,2.6439}, //
		{2088.4485,-2112.2834,13.0585,270.0325}, //
		{2187.2944,-2157.1248,13.1099,223.2555}, //
		{2274.0132,-2093.3662,13.2304,315.6739}, //
		{2402.0972,-2203.0471,24.1558,224.6514}, //
		{2526.5286,-2326.6016,22.7471,225.1260}, //
		{2637.7915,-2408.8489,13.0301,270.1828}, // остановка в порту 1
		{2637.7915,-2408.8489,13.0301,270.1828}, // остановка в порту 1
		{2666.5449,-2408.3657,13.0301,269.5586}, //
		{2673.3416,-2522.7446,13.0351,180.1721}, //
		{2721.4819,-2537.6333,13.0301,268.3917}, //
		{2737.7090,-2380.5098,13.0401,0.0474}, //
		{2709.8352,-2363.8865,13.0301,91.1262}, // остановка в порту 2
		{2709.8352,-2363.8865,13.0301,91.1262}, // остановка в порту 2
		{2686.5522,-2364.1265,13.0301,88.7915}, //
		{2673.3816,-2392.8564,13.0351,177.2577}, //
		{2625.6650,-2403.8542,13.0301,96.7612}, //
		{2542.0466,-2336.0403,21.4538,44.2984}, //
		{2376.6201,-2170.1516,22.2168,44.9950}, //
		{2297.8584,-2091.3364,13.0569,44.9651}, //
		{2212.2324,-2148.7810,13.1091,135.7035}, //
		{2123.7190,-2109.8230,13.0727,79.1379}, //
		{1976.2791,-2107.2202,13.0910,90.0800}, //
		{1958.9806,-2152.6770,13.1099,174.9523}, //
		{1776.9598,-2164.0828,13.1099,90.9741}, //
		{1756.6749,-2185.2507,13.3012,175.5283}, //
		{1580.7421,-2192.6479,13.1021,90.1304}, //
		{1480.1373,-2192.4868,13.1105,94.8373}, //
		{1472.3347,-2227.3440,13.1099,181.7209}, //
		{1425.5970,-2275.3796,13.1160,174.0469}, //
		{1461.0791,-2333.8005,13.1121,261.7169}, //
		{1523.0297,-2297.1372,13.1129,355.6403}, //
		{1565.8376,-2288.4038,13.1134,274.8026}, //
		{1573.2599,-2312.8538,13.1100,176.0628}, //
		{1707.0332,-2321.8752,13.5159,270.4418}, // аэропорт остановка
		{1707.0332,-2321.8752,13.5159,270.4418}, // аэропорт остановка
		{1719.4026,-2322.1323,13.5161,269.6680}, //
		{1735.0154,-2265.2744,13.5084,357.3637}, //
		{1573.6792,-2270.8262,13.5074,178.3729}, //
		{1535.7126,-2284.5693,13.5169,88.6630}, //
		{1486.2192,-2238.7996,13.5096,79.1995}, //
		{1477.0500,-2208.0828,13.5247,357.9043}, //
		{1623.1791,-2197.0081,13.5084,269.9208}, //
		{1737.9480,-2197.6248,13.5084,269.7640}, //
		{1764.0051,-2179.2139,13.6951,358.6133}, //
		{1942.4913,-2169.2766,13.5201,269.8950}, //
		{1964.2203,-2063.9766,13.5632,0.5896}, //
		{1963.9813,-1947.0398,13.7314,0.5093}, //
		{1837.5137,-1929.3712,13.5181,89.5402}, //
		{1824.3250,-1899.1582,13.4845,359.0320}, //
		{1786.2510,-1888.2103,13.5273,94.0191}, //
		{1788.2704,-1927.5881,13.5239,271.4389}, //
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1776.2261,-1916.6229,13.5428,179.5173}, // ЖДЛС остановка
		{1809.5465,-1892.4043,13.5547,270.2137}, //
		{1824.5651,-1828.7217,13.5468,359.0277}, //
		{1824.5173,-1751.8945,13.5166,0.0175}, //
		{1703.3115,-1729.9232,13.5162,89.8630}, //
		{1475.7048,-1729.0171,13.5162,89.2908}, // мэрия остановка
		{1475.7048,-1729.0171,13.5162,89.2908}, // мэрия остановка
		{1434.2461,-1729.2900,13.5172,90.0941}, //
		{1329.3998,-1730.0419,13.5162,90.1796}, //
		{1315.2583,-1557.4753,13.5215,358.6842}, //
		{1354.5428,-1422.0741,13.5219,358.7672}, //
		{1230.7991,-1392.7340,13.3200,89.7257}, //
		{1089.7488,-1393.4016,13.6737,90.6164}, //
		{1060.7452,-1338.3418,13.5147,359.1664}, //
		{965.9194,-1319.9308,13.4966,89.7461}, //
		{918.0005,-1334.4368,13.1016,178.2967}, // автовокзал 1
		{917.3392,-1363.9099,13.1496,178.7145}, // автовокзал 2
		{917.4626,-1400.2883,13.1496,180.8034}, // автовокзал 3
		{943.2152,-1400.3442,13.1496,268.4330}, // автовокзал 4
		{964.1725,-1399.5028,13.1496,268.8510}, // автовокзал 5
		{937.8848,-1336.8842,13.8823,5.5920}, //
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0},
		{0.0, 0.0, 0.0, 0.0}
	}
};

new gBusSalary[BUS_ROUTE_COUNT] = {1400, 1600, 1900, 1700, 1600};

/*
		Механик
*/

new Text3D:PlayerMehText[MAX_PLAYERS];


/*
		Тюнинг транспорта
*/

new Text:td_tuning[58];
new Text:td_color[42];
new Text:td_tun_box;


new Float: tuning_camera_positions[12][6] = {
{949.7238, -1754.1227, 1013.8193, 949.3279, -1753.2059, 1013.6812}, //цвет/дефолт
{949.7238, -1754.1227, 1013.8193, 949.3279, -1753.2059, 1013.6812},//покрасочные работы
{947.3459, -1742.3959, 1013.9647, 947.3695, -1743.3945, 1013.7916},//выхлоп
{947.4819, -1753.9993, 1013.9856, 947.4509, -1752.9996, 1013.8124},//кенгурятник
{947.4482, -1752.7498, 1015.5691, 947.4229, -1751.7498, 1015.0807},//Крыша
{947.4819, -1753.9993, 1013.9856, 947.4509, -1752.9996, 1013.8124},//передний бампер
{947.3459, -1742.3959, 1013.9647, 947.3695, -1743.3945, 1013.7916},//задний бампер
{947.3805, -1742.4574, 1016.0004, 947.3859, -1743.4568, 1015.2625}, // спойлер
{951.8182, -1749.1891, 1014.1534, 950.8473, -1748.9481, 1013.9253},//боковые юбки
{950.7748, -1747.6499, 1013.9921, 949.9202, -1748.1700, 1013.7289}, //колёса
{951.8182, -1749.1891, 1014.1534, 950.8473, -1748.9481, 1013.9253},//Гидравлика
{949.7238, -1754.1227, 1013.8193, 949.3279, -1753.2059, 1013.6812} // Нитро
};


new car_colors[42]={
	0,1,2,3,4,5,6,
	128,129,130,134,135,136,142,
	159,152,155,156,160,167,163,
	168,171,173,237,234,235,192,
	199,202,205,211,214,212,217,
	249,246,243,240,239,233,253
};
new td_car_colors[42]={
	0x000000FF,0xF5F5F5FF,0x2A77A1FF,0x840410FF,0x263739FF,0x86446EFF,0xD78E10FF,
	0x177517FF,0x210606FF,0x125478FF,0x25225AFF,0x2C89AAFF,0x8A4DBDFF,0x817A26FF,
	0x2C1E08FF,0x1E4C99FF,0x1E9999FF,0x999976FF,0x142407FF,0x993E4DFF,0x16616FFF,
	0x481A0EFF,0x746D99FF,0x3E190CFF,0x7B3E7EFF,0x16301BFF,0x163012FF,0x999590FF,
	0x3A3A0BFF,0x15371CFF,0x060820FF,0x241663FF,0x516013FF,0x692015FF,0x52888EFF,
	0x4E0E27FF,0x355D8EFF,0x1B8A2FFF,0x319490FF,0x732617FF,0x7E1A6CFF,0x7B7E7DFF

};

new legal_tuns[92][45] = {
{400, 1008, 1009, 1010, 1013, 1018, 1019, 1020, 1021, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{401, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1019, 1020, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{402, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{404, 1000, 1002, 1007, 1008, 1009, 1010, 1013, 1016, 1017, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{405, 1000, 1001, 1008, 1009, 1010, 1014, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{410, 1001, 1003, 1007, 1008, 1009, 1010, 1013, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{411, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{412, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{413, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{415, 1001, 1003, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{418, 1002, 1006, 1008, 1009, 1010, 1016, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{419, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{420, 1001, 1003, 1004, 1005, 1008, 1009, 1010, 1019, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{421, 1000, 1008, 1009, 1010, 1014, 1016, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{422, 1007, 1008, 1009, 1010, 1013, 1017, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{424, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{426, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1019, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{429, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{434, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{436, 1001, 1003, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1019, 1020, 1021, 1022, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{438, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{439, 1001, 1003, 1007, 1008, 1009, 1010, 1013, 1017, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{440, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{442, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{444, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{445, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{451, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{458, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{459, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{466, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{467, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{474, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{475, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{477, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{478, 1004, 1005, 1008, 1009, 1010, 1012, 1013, 1020, 1021, 1022, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{479, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{480, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{482, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{489, 1000, 1002, 1004, 1005, 1006, 1008, 1009, 1010, 1013, 1016, 1018, 1019, 1020, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{490, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{491, 1003, 1007, 1008, 1009, 1010, 1014, 1017, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{492, 1000, 1004, 1005, 1006, 1008, 1009, 1010, 1016, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{494, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{495, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{496, 1001, 1002, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1017, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{500, 1008, 1009, 1010, 1013, 1019, 1020, 1021, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{502, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{503, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{504, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{505, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{506, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{507, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{516, 1000, 1002, 1004, 1007, 1008, 1009, 1010, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{517, 1002, 1003, 1007, 1008, 1009, 1010, 1016, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{518, 1001, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1018, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{526, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{527, 1001, 1007, 1008, 1009, 1010, 1014, 1015, 1017, 1018, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{529, 1001, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{533, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{534, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1100, 1101, 1106, 1122, 1123, 1124, 1125, 1126, 1127, 1178, 1179, 1180, 1185, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{535, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1109, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{536, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1103, 1104, 1105, 1107, 1108, 1128, 1181, 1182, 1183, 1184, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{540, 1001, 1004, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1020, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{541, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{542, 1008, 1009, 1010, 1014, 1015, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1144, 1145, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{543, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{545, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{546, 1001, 1002, 1004, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{547, 1000, 1003, 1008, 1009, 1010, 1016, 1018, 1019, 1020, 1021, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{549, 1001, 1003, 1007, 1008, 1009, 1010, 1011, 1012, 1017, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{550, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1018, 1019, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{551, 1002, 1003, 1005, 1006, 1008, 1009, 1010, 1016, 1018, 1019, 1020, 1021, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{554, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{555, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{558, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1163, 1164, 1165, 1166, 1167, 1168, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{559, 1008, 1009, 1010, 1025, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1158, 1159, 1160, 1161, 1162, 1173, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{560, 1008, 1009, 1010, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1138, 1139, 1140, 1141, 1169, 1170, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{561, 1008, 1009, 1010, 1025, 1026, 1027, 1030, 1031, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1154, 1155, 1156, 1157, 0000, 0000, 0000, 0000},
{562, 1008, 1009, 1010, 1025, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1146, 1147, 1148, 1149, 1171, 1172, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{565, 1008, 1009, 1010, 1025, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1150, 1151, 1152, 1153, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{566, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{567, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1102, 1129, 1130, 1131, 1132, 1133, 1186, 1187, 1188, 1189, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{575, 1008, 1009, 1010, 1025, 1042, 1043, 1044, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1099, 1174, 1175, 1176, 1177, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{576, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1134, 1135, 1136, 1137, 1190, 1191, 1192, 1193, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{579, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{580, 1001, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1020, 1023, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{585, 1000, 1001, 1002, 1003, 1006, 1007, 1008, 1009, 1010, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145},
{587, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{589, 1000, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1016, 1017, 1018, 1020, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1144, 1145, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{600, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1017, 1018, 1020, 1022, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{602, 1008, 1009, 1010, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000},
{603, 1001, 1006, 1007, 1008, 1009, 1010, 1017, 1018, 1019, 1020, 1023, 1024, 1025, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1096, 1097, 1098, 1142, 1143, 1144, 1145, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000, 0000}
};




new spoiler_models[20] = {1000, 1001, 1002, 1003, 1014, 1015, 1016, 1023, 1049, 1050, 1058, 1060, 1138, 1139, 1146, 1147, 1158, 1162, 1163, 1164};
new exhaust_models[29] = {1018, 1019, 1020, 1021, 1022, 1028, 1029, 1034, 1037, 1043, 1044, 1045, 1046, 1059, 1064, 1065, 1066, 1089, 1092, 1104, 1105, 1113, 1114, 1126, 1127, 1129, 1132, 1135, 1136};



new bullbar_models[4] = {1123, 1125, 1109, 1110};
new roof_models[16] = {1032, 1033, 1035, 1038, 1053, 1054, 1055, 1061, 1067, 1068, 1088, 1091, 1103, 1128, 1130, 1131 };

new sideskirt_models[42] = {1007, 1017, 1026, 1027, 1030, 1031, 1036, 1039, 1040, 1041, 1042, 1047, 1048, 1051, 1052, 1056, 1057, 1062, 1063, 1069, 1070, 1071, 1072, 1090, 1093, 1094, 1095, 1099, 1101, 1102, 1106, 1107, 1108, 1118, 1119, 1120, 1121, 1122, 1124, 1133, 1134, 1137};


new front_bumper_models[22] = {1117, 1152, 1153, 1155, 1157, 1160, 1165, 1166, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1179, 1181, 1182, 1185, 1188, 1189, 1190 };
new rear_bumper_models[22] = {1140, 1141, 1148, 1149, 1150, 1151, 1154, 1156, 1159, 1161, 1167, 1168, 1176, 1177, 1178, 1180, 1183, 1184, 1186, 1187, 1192, 1193 };
new tuning_wheels[17] = {1025, 1074, 1076, 1078, 1081, 1082, 1085, 1096, 1097, 1098, 1084, 1073, 1075, 1077, 1079, 1080, 1083};




/*
			ATM system
*/
new atm_count;
#define MAX_ATM 50
enum _atm
{
	atm_id,
	Float: atm_position[6],
	atm_money,
	atm_status,
};

new atm_info[MAX_ATM][_atm];


/*
			Склады
*/
#define DORM_SAWMILL 	0
#define DORM_MINE	 	1
#define DORM_FACTORY	2

#define DORM_FACTORY_MINE	2
#define DORM_FACTORY_WOOD	3
#define DORM_FACTORY_GUNS	4

new Text3D:dorm_text[3];
new dorm_count[5];


new dorm_queue[3][10];
new Text3D:text_dorm_queue[3];



new factory_unloading_area;
new port_unloading_area;



new loading_area[3];
new loading_free_area[3];
new loading_playerid[3];

new loading_cd[3];

new loading_timer[3];
new Text3D:loading_text[3];


#define MINE_UNMELTED	0
#define MINE_MELTED		1

new Text3D:mine_text;
new mine_count[2];


new trailer_count[MAX_VEHICLES];
new trailer_type[MAX_VEHICLES];

new PlayerText:td_db[MAX_PLAYERS][4];
new player_tload_time[MAX_PLAYERS];
new player_leavearea_time[MAX_PLAYERS];


/*

		Скины

*/
new Text:td_skinshop[19];
new PlayerText:td_skinshop_price[MAX_PLAYERS];



new shop_skins[2][72] = {
    {3, 1, 8, 15, 32, 72, 96, 161, 21, 6, 24, 66, 176, 222, 67, 2, 202, 206, 7, 180, 94, 128, 133, 34, 14, 241, 112, 242, 4, 5, 35, 36, 183, 33, 48, 73,
	247, 254, 297, 100, 181, 208, 28, 23, 156, 22, 57, 170, 59, 185, 117, 228, 17, 290, 250, 111, 187, 98, 188, 249, 20, 171, 126, 240,
	19, 189, 223, 296, 46, 186, 294, 0},

	{31, 13, 198, 38, 201, 39, 207, 131, 195, 9, 10, 238, 151, 152, 69, 192, 237, 193, 190, 226, 169, 90, 214, 55, 56, 141, 211, 11, 150, 263, 12, 172,
	194, 91, 216, 219, 93, 233, 0, 0, 0, 0, 0, 0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
};
new shop_skins_price[2][72] = {
	{405600, 5100, 32400, 32400, 65200, 260600, 65200, 17550, 215600, 295600, 215600, 215600, 190200, 17500, 215600, 295600, 32400, 32400, 17500, 215600,
	65200, 7500, 32400, 190200, 32400, 215600, 190200, 215600, 15000, 15000, 32400, 32400, 190200, 320600, 32400, 260600, 85000, 85000, 346600, 85000,
	85000, 260600, 320600, 190200, 190200, 17500, 320600, 125300, 405600, 95000, 415600, 405600, 405600, 320600, 25000, 346600, 415600, 125000,
	125300, 505200, 320600, 460500, 320600, 415600, 320600, 460500, 125000, 505200, 415600, 405600, 545200, 0},

	{5100, 17500, 32400, 17550, 65200, 5100, 17550, 17550, 15000, 15000, 5100, 65200, 17550, 25000, 125300, 260600, 15000, 190200, 65200, 190200, 215600,
	260600, 505200, 215600, 190200, 405600, 260600, 405600, 125000, 320600, 295600, 125000, 415600, 125000, 415600, 125000, 346600, 405600,
	5100, 5100, 5100, 5100, 5100, 5100, 5100, 5100,
	5100, 5100, 5100, 5100, 5100, 5100, 5100, 5100, 5100, 5100, 5100, 5100, 5100, 5100, 5100, 5100, 5100, 5100, 5100, 5100, 5100,
	5100, 5100, 5100, 5100, 5100}
};


/*

*/

new cop_breaks[6] = {1237, 997, 1427, 1424, 1423, 1459};








#define CAR_MARKET_SLOTS 30

new bool:car_market_slotes_toggled[3][CAR_MARKET_SLOTS];
new Float:car_market_pos[3][CAR_MARKET_SLOTS][4]=
{
	{
		{2445.6423,-1520.0132,23.7125,270.4816},
		{2445.6423,-1523.6245,23.7567,270.2728},
		{2445.6423,-1526.9706,23.7484,270.9906},
		{2445.6423,-1530.5907,23.7488,270.5138},
		{2445.6423,-1534.0027,23.7555,270.5844},
		{2445.6423,-1537.4796,23.7523,270.3459},
		{2445.6423,-1540.9618,23.7622,270.9571},
		{2445.6423,-1544.4952,23.7545,271.3389},
		{2445.6423,-1548.0153,23.7589,270.3586},
		{2445.6423,-1551.5918,23.7663,269.8067},
		{2445.6423,-1555.0645,23.7640,270.1209},
		{2445.6423,-1558.4828,23.7591,269.6285},
		{2462.1162,-1525.1730,23.8089,90.2773},
		{2462.1162,-1528.5875,23.8083,90.0430},
		{2462.1162,-1532.0804,23.8069,90.0430},
		{2462.1162,-1535.5612,23.7977,90.2982},
		{2462.1162,-1539.1487,23.7540,90.0626},
		{2462.1162,-1542.5258,23.7232,89.5128},
		{2462.1162,-1546.0610,23.7522,89.4099},
		{2462.1162,-1549.5327,23.7177,90.2523},
		{2462.1162,-1553.1582,23.7295,90.5417},
		{2467.4004,-1524.9764,23.7462,270.5801},
		{2467.4004,-1528.5270,23.7502,270.2659},
		{2467.4004,-1532.0195,23.7663,270.7155},
		{2467.4004,-1535.5331,23.7584,270.2789},
		{2467.4004,-1539.0444,23.7529,270.2789},
		{2467.4004,-1542.6241,23.7606,271.2999},
		{2467.4004,-1546.1119,23.7265,269.7715},
		{2467.4004,-1549.5665,23.7200,271.3564},
		{2467.4004,-1553.0475,23.7188,270.3816}
	},
	{
		{-2543.3904,545.3741,14.3241,180.0013},
		{-2546.9836,545.3741,14.3966,180.7082},
		{-2550.4280,545.3741,14.4067,180.4726},
		{-2553.9673,545.3741,14.3150,179.5300},
		{-2557.4565,545.3741,14.3243,180.3155},
		{-2575.6870,545.3741,14.3430,180.6044},
		{-2579.0789,545.3741,14.3644,179.9874},
		{-2582.6072,545.3741,14.3380,180.5140},
		{-2586.1218,545.3741,14.3262,180.0257},
		{-2589.5759,545.3741,14.3185,180.9681},
		{-2577.2502,532.8030,14.3513,0.6953},
		{-2573.5679,532.8030,14.4186,1.0921},
		{-2569.9919,532.8030,14.4187,0.6932},
		{-2566.3948,532.8030,14.4238,0.5350},
		{-2563.0220,532.8030,14.3381,359.7738},
		{-2559.5420,532.8030,14.3245,0.7949},
		{-2556.0251,532.8030,14.3163,0.9042},
		{-2555.7959,498.3781,14.3313,178.1839},
		{-2559.4788,498.3781,14.5350,180.3421},
		{-2563.0562,498.3781,14.5349,181.1276},
		{-2566.6729,498.3781,14.5348,180.8233},
		{-2570.0349,498.3781,14.3410,181.2946},
		{-2573.5518,498.3781,14.3153,180.7606},
		{-2576.9016,498.3781,14.3194,179.6611},
		{-2589.4399,486.2181,14.3363,359.8143},
		{-2585.9141,486.2181,14.4023,0.5012},
		{-2582.4895,486.2181,14.4074,0.6583},
		{-2579.0259,486.2181,14.4079,0.9724},
		{-2575.4758,486.2181,14.3227,359.5924},
		{-2571.8904,486.2181,14.3154,0.8496}
	},
	{
		{2566.0874,1392.3623,10.4241,0.0000},
		{2569.5222,1392.3623,10.4239,0.0000},
		{2573.0261,1392.3623,10.4238,0.0000},
		{2576.5300,1392.3623,10.4237,0.0000},
		{2580.1191,1392.3623,10.4244,0.0000},
		{2583.5696,1392.3623,10.4233,0.0000},
		{2594.8638,1392.3623,10.4289,0.0000},
		{2598.3982,1392.3623,10.4287,0.0000},
		{2601.9053,1392.3623,10.4290,0.0000},
		{2605.4307,1392.3623,10.4284,0.0000},
		{2608.9080,1392.3623,10.4290,0.0000},
		{2612.3445,1392.3623,10.4295,0.0000},
		{2612.3779,1406.0973,10.4285,180.0000},
		{2608.8013,1406.0973,10.4288,180.0000},
		{2605.2927,1406.0973,10.4284,180.0000},
		{2601.8115,1406.0973,10.4282,180.0000},
		{2598.3394,1406.0973,10.4310,180.0000},
		{2594.8191,1406.0973,10.4323,180.0000},
		{2576.4399,1406.0973,10.4240,180.0000},
		{2572.9678,1406.0973,10.4239,180.0000},
		{2569.3728,1406.0973,10.4238,180.0000},
		{2565.9207,1406.0973,10.4240,180.0000},
		{2576.4995,1412.6124,10.4238,0.0000},
		{2572.9326,1412.6124,10.4245,0.0000},
		{2569.4385,1412.6124,10.4238,0.0000},
		{2565.8733,1412.6124,10.4238,0.0000},
		{2576.4421,1434.6710,10.4266,180.0000},
		{2572.8726,1434.6710,10.4263,180.0000},
		{2569.3838,1434.6710,10.4267,180.0000},
		{2565.9849,1434.6710,10.4262,180.0000}
	}
};


enum _mg_info
{
	mg_name[24],
	mg_ammo,
	mg_guns,
	mg_gunid
}

new mg_info[7][_mg_info]={
{"SD Pistol", 		60,		20,		23},
{"Desert Eagle", 	75,		25, 	24},
{"MP5", 			80,		30, 	29},
{"Shotgun", 		90, 	35,		25},
{"M4", 				100, 	40,		31},
{"AK-47", 			100, 	40,		30},
{"Rifle", 			120, 	40,		33}
};


/*
			Hospital
*/
new Float:hospital_spawn[2][4]=
{
	{1167.6305, -1341.4697, 1015.4130, 360.0},
	{1157.6610, -1342.7739, 1015.4130, 360.0}
};

#define H_BED_AMOUNT 4
new bool: h_bed_toggled[H_BED_AMOUNT][3];
new Float:h_bed_position[H_BED_AMOUNT][4]=
{
	{1161.5107, -1340.0524, 1016.1791, 0.0},
	{1161.4130, -1343.7040, 1016.1791, 0.0},
	{1164.5068, -1345.3141, 1016.1791, 180.0},
	{1164.2183, -1342.1342, 1016.1791, 180.0}
};


/*
		action use
*/

new PlayerText:action_ptd[MAX_PLAYERS][5];
new action_type[MAX_PLAYERS char],
	action_key[MAX_PLAYERS],
	action_step[MAX_PLAYERS char];

enum
{
	ACTION_CELLAR = 1,
	ACTION_FACTORY,
	ACTION_ARMY_GATE,
	ACTION_CLCELLAR,
	ACTION_PHOTOGRAPHER
}

/*
		delivery
*/




new Float:army_unloading[25][3]=
{
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{1527.7662, -1677.8901, 5.8906},
	{-1606.4901, 675.9831, -5.2422},
	{2293.9080,2468.2217,10.8203},
	{-2444.4006, 522.2994, 29.9177},
	{307.0957, 2036.8431, 17.6406},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{0.0, 0.0, 0.0},
	{2504.4016, -1687.4486, 13.5556},
	{1934.1349, -1118.3900, 26.4531},
	{2794.9800, -1619.1652, 10.9219},
	{2730.6379, -1944.5208, 13.5469},
	{2177.4067, -1812.0627, 13.5469},
	{1452.3735,742.9669,11.0234},
	{944.5230, 1730.2561, 8.8516},
	{2629.2458, 1829.4502, 11.0234}
};


new stolen_box_area[12];
new Float:stolen_box_pos[12][3]=
{
	{354.5359,1930.5885,17.6500},
	{354.3797,1942.3481,17.6500},
	{344.4844,1942.6012,17.6500},
	{344.5574,1930.7786,17.6500},
	{364.7988,1930.6425,17.6500},
	{364.7607,1942.7074,17.6500},
	{368.3617,1912.3435,17.6500},
	{368.0274,1924.2855,17.6500},
	{274.8007,2032.3689,17.6406},
	{286.2540,2032.5251,17.6406},
	{356.6519,1986.7073,17.6500},
	{368.0947,1986.8210,17.6500}
};

new stolen_ammo_area[5];
new Float:stolen_ammo_pos[5][3]=
{
	{137.3553,1876.1816,17.8359},
	{129.4599,1899.5139,18.7947},
	{131.9697,1906.4873,18.7947},
	{150.3471,1833.4567,17.6510},
	{143.9672,1835.7906,17.6510}
};

new army_gate[3];
new bool: armdoor = false;
new Float:army_gate_controler_pos[4][3]=
{
	{123.6573,1934.8677,19.2663},
	{141.8920,1947.0181,19.3628},
	{277.1204,1827.4163,17.6406},
	{290.2414,1815.2545,17.6406}
};

new Float:ds_checkpoints[43][3]=
{
	{-2040.4446,-161.9539,35.0319},
	{-2028.7703,-153.2425,35.0321},
	{-2031.4596,-144.9956,35.0320},
	{-2039.9009,-126.7197,35.0456},
	{-2036.0715,-132.0450,35.0322},
	{-2046.7544,-119.4263,35.0450},
	{-2057.7881,-123.8980,35.0322},
	{-2066.2930,-120.0359,35.0323},
	{-2075.3127,-123.7775,35.0382},
	{-2081.5793,-131.2875,35.0323},
	{-2081.8330,-145.9105,36.0483},
	{-2079.4028,-167.2815,35.0590},
	{-2065.6409,-162.7899,35.0326},
	{-2059.3303,-169.9061,35.0323},
	{-2065.1765,-161.5139,35.0320},
	{-2052.4495,-153.3965,35.0318},
	{-2044.9026,-168.1961,35.0322},
	{-2041.6836,-208.0283,35.0442},
	{-2014.8292,-224.9586,35.0443},
	{-2003.2650,-160.0240,35.4528},
	{-2003.6174,-89.4017,35.1744},
	{-2004.2635,-24.8306,34.7821},
	{-2004.2678,13.8757,32.8548},
	{-2044.0023,33.5086,34.9134},
	{-2091.2976,33.1979,34.9134},
	{-2105.1191,58.5210,34.9057},
	{-2104.6523,92.0148,34.9057},
	{-2140.4790,112.0217,34.9143},
	{-2168.3162,65.4082,34.9134},
	{-2169.9961,10.5610,34.9133},
	{-2170.0991,-53.2340,34.9176},
	{-2170.1846,-123.4408,34.9134},
	{-2178.1223,-178.3379,34.9190},
	{-2203.8955,-187.2496,34.9431},
	{-2211.7708,-233.1943,35.0618},
	{-2211.8413,-282.5576,35.0616},
	{-2127.4258,-295.3599,35.1637},
	{-2047.5796,-295.4744,35.1580},
	{-2002.7645,-256.8101,35.2585},
	{-2002.6694,-231.3003,35.4484},
	{-2028.1257,-221.8770,35.0429},
	{-2041.9678,-193.9973,35.0431},
	{-2023.8052,-163.4958,35.0326}
};




new Float:bs_checkpoints[29][3]=
{
	{724.1355,-1525.4814,-0.3640},
	{724.4637,-1585.7218,-0.2766},
	{724.9971,-1650.9967,0.3918},
	{724.9461,-1717.0450,0.5033},
	{723.2521,-1798.2400,0.5596},
	{722.5735,-1871.1986,0.5709},
	{723.7050,-1916.6748,0.6569},
	{732.4649,-1956.0773,-0.3363},
	{755.6094,-1994.3354,-0.2242},
	{779.0854,-2027.5339,-0.2495},
	{809.6031,-2063.8923,-0.4164},
	{833.0500,-2078.5078,-0.2968},
	{865.0323,-2071.7832,-0.3031},
	{872.7847,-2056.3403,-0.0991},
	{869.4617,-2037.7866,-0.1390},
	{852.9979,-2020.6237,-0.1261},
	{834.5461,-2017.1211,-0.3251},
	{807.5188,-2010.8292,-0.3595},
	{779.9054,-1989.3678,-0.1611},
	{753.7164,-1958.4635,-0.0320},
	{738.1425,-1935.5347,-0.2616},
	{725.1609,-1885.2281,0.3213},
	{725.6606,-1834.9681,0.4828},
	{725.5256,-1804.3718,0.5207},
	{725.0092,-1737.1301,0.5612},
	{725.5892,-1680.9425,0.6067},
	{726.9226,-1623.9794,0.6210},
	{726.9692,-1568.6384,0.6307},
	{728.7237,-1511.1298,-0.3605}
};


new Float:ps_checkpoints[11][3]=
{
	{294.6647,2502.4617,17.0389},
	{91.2067,2503.1680,64.6665},
	{-309.1606,2611.0833,116.3137},
	{-635.1066,2698.3398,134.7793},
	{-804.0319,2538.5400,152.6730},
	{-855.4602,2243.5435,152.6992},
	{-519.2455,2223.5273,137.2812},
	{-311.1470,2222.3892,82.8899},
	{-152.1482,2337.9929,82.8851},
	{157.4142,2502.9910,17.2684},
	{304.6811,2459.0957,17.0793}
};

/*

		filling

*/
new Text:filling_td[8];
new PlayerText:filling_ptd[MAX_PLAYERS][3];

new filling_count[MAX_PLAYERS char];


new Text: td_logo[9];


// Выборы

#define election_status_none 		0
#define election_status_register 	1
#define election_status_vote 		2

new election_status = election_status_none;
new election_pickup = -1,
	Text3D:election_text;




// однорукий бандит

/* combo defines */

#define COMBO_DOUBLE_GOLD 				20
#define COMBO_GOLD 						10
#define COMBO_CHERRY 					3
#define COMBO_BELL 						4
#define COMBO_69 						35
#define COMBO_GRAPES 					8
#define COMBO_ONE_CHERRY 				1
#define COMBO_TWO_CHERRY 				2


#define sm_count						6


/* rotation info */

new Float: image_rot[] ={3.00, 23.00, 43.00, 63.00, 83.00, 103.00, 123.00, 143.00, 163.00, 183.00, 203.00, 223.00, 243.00, 263.00, 283.00, 303.00, 323.00, 343.00, 363.00};
new Float: cherry_combo[4]={23.00, 163.00, 223.00, 343.00};
new Float: gold_combo[2]={183.00, 303.00};
new Float: double_gold_combo = 200.0;
new Float: bell_combo[4]={63.00, 103.00, 243.00, 323.00};
new Float: grapes_combo[5]={3.00, 83.00, 143.00, 283.00, 363.00};
new Float: sn_combo[3]={43.00, 123.00, 263.00};

/* Стат автомата */

new bool: sm_used[sm_count];

new sm_timer[MAX_PLAYERS];
new bool:moved_up[MAX_PLAYERS];
new sm_tick_count[MAX_PLAYERS];
/* Ручки автоматов */

new sm_hand[sm_count];
new Float: sm_hand_coord[sm_count][6]={
	{1965.07410, 998.34277, 992.14978, 0.00000, 0.00000, 80.00000},
	{1964.63416, 998.40277, 992.14978, 0.00000, 0.00000, 260.00000},
	{1962.37585, 991.93939, 992.25732, 0.00000, 0.00000, 55.00000},
	{1962.01526, 992.15479, 992.25732, 0.00000, 0.00000, 235.00000},
	{1957.63672, 987.21631, 992.16980, 0.00000, 0.00000, 33.00000},
	{1957.38257, 987.55060, 992.16980, 0.00000, 0.00000, 213.00000}
};

new Float: sm_camera_coord[sm_count][6]={
	{1965.7509, 998.2018, 993.287, 1964.7633, 998.3605, 992.4891},
	{1963.8696, 998.6025, 993.1699, 1964.8552, 998.4293, 992.7406},
	{1963.0175, 991.3584, 993.0868, 1962.2146, 991.9547, 992.7841},
	{1961.3884, 992.6334, 993.2109, 1962.2148, 992.0698, 992.7184},
	{1958.1282, 986.4332, 993.0961, 1957.5635, 987.2585, 992.8457},
	{1957.0419, 988.2104, 993.1271, 1957.5806, 987.3678, 992.6932}
};
/*	Слот-механизмы автоматов */

new sm_slot[sm_count * 3];




new Float: sm_slot_coord[sm_count * 3][6]={
	{1965.02014, 998.23138, 992.90051,   0.00000, 0.00000, 80.00000},
	{1965.04004, 998.33142, 992.90051,   0.00000, 0.00000, 80.00000},
	{1965.06006, 998.43140, 992.90051,   0.00000, 0.00000, 80.00000},

	{1964.73499, 998.50293, 992.90051,   0.00000, 0.00000, 260.00000},
	{1964.71484, 998.40289, 992.90051,   0.00000, 0.00000, 260.00000},
	{1964.69495, 998.30292, 992.90051,   0.00000, 0.00000, 260.00000},

	{1962.29993, 991.85211, 992.90723,   0.00000, 0.00000, 55.00000},
	{1962.35742, 991.93811, 992.90723,   0.00000, 0.00000, 55.00000},
	{1962.41772, 992.02802, 992.90723,   0.00000, 0.00000, 55.00000},

	{1962.15063, 992.21252, 992.90723,   0.00000, 0.00000, 235.00000},
	{1962.08960, 992.13190, 992.90723,   0.00000, 0.00000, 235.00000},
	{1962.02966, 992.04187, 992.90723,   0.00000, 0.00000, 235.00000},

	{1957.52173, 987.17480, 992.90723,   0.00000, 0.00000, 33.00000},
	{1957.61072, 987.23145, 992.90723,   0.00000, 0.00000, 33.00000},
	{1957.70166, 987.29071, 992.90723,   0.00000, 0.00000, 33.00000},

	{1957.51917, 987.56769, 992.90723,   0.00000, 0.00000, 213.00000},
	{1957.42725, 987.50769, 992.90723,   0.00000, 0.00000, 213.00000},
	{1957.34119, 987.45172, 992.90723,   0.00000, 0.00000, 213.00000}
};



/*	Зона использования автомата */

new Float: sm_coord[sm_count][3] = {
	{1965.8781,998.2393,992.4688},
	{1963.8054,998.4794,992.4745},
	{1963.0957,991.5213,992.4688},
	{1961.3147,992.6296,992.4688},
	{1958.1172,986.5425,992.4688},
	{1956.9045,988.2493,992.4688}
};

 /* TextDraws */

 new Text: sm_td[4];
 new PlayerText: sm_ptd[MAX_PLAYERS] = {PlayerText:-1, ...};

/* Кости */
new PlayerText:dice_ptd[MAX_PLAYERS][23];

new Float: dice_positions[4][3] = {
{1944.18994, 1010.70001, 992.00000},
{1944.18994, 1025.00000, 992.00000},
{1938.18994, 1010.70001, 992.00000},
{1938.18994, 1025.00000, 992.00000}};


#define MAX_BONE 4
enum _dice_enum
{
	b_player[5],
	b_bet,
	b_bank,
	b_crupie,
	b_started
}

new dice_info[MAX_BONE][_dice_enum];

/* CAMIKAZE */

new Float: cm_td_pos[35][2] = {
	{167.000000, 303.000000},
	{200.000000, 303.000000},
	{233.000000, 303.000000},
	{266.000000, 303.000000},
	{299.000000, 303.000000},

	{167.000000, 270.000000},
	{200.000000, 270.000000},
	{233.000000, 270.000000},
	{266.000000, 270.000000},
	{299.000000, 270.000000},

	{167.000000, 237.000000},
	{200.000000, 237.000000},
	{233.000000, 237.000000},
	{266.000000, 237.000000},
	{299.000000, 237.000000},

	{167.000000, 204.000000},
	{200.000000, 204.000000},
	{233.000000, 204.000000},
	{266.000000, 204.000000},
	{299.000000, 204.000000},

	{167.000000, 171.000000},
	{200.000000, 171.000000},
	{233.000000, 171.000000},
	{266.000000, 171.000000},
	{299.000000, 171.000000},

	{167.000000, 138.000000},
	{200.000000, 138.000000},
	{233.000000, 138.000000},
	{266.000000, 138.000000},
	{299.000000, 138.000000},

	{167.000000, 105.000000},
	{200.000000, 105.000000},
	{233.000000, 105.000000},
	{266.000000, 105.000000},
	{299.000000, 105.000000}
};

new PlayerText:cm_ptd[MAX_PLAYERS][64];

new roulette_bet[MAX_PLAYERS];
new roulette_number[MAX_PLAYERS];


/*

		port

*/
new Float:army_container_pos[2][6] = {
	{2769.031005, -2353.590332, 13.632966, 0.000007, 0.000000, 179.999969},
	{2788.161865, -2353.590332, 13.632966, 0.000007, 0.000000, 179.999969}
};
new army_container_object[2];



new Float:container_pos_close[20][2][6] = {//	Контейнеры в два ряда(id контейнера -3565):
	{{2690.756103, -2402.624023, 13.632966, 0.000022, 0.000000, 89.999931},	{2690.756103, -2402.624023, 16.332975, 0.000022, 0.000000, 89.999931}},
	{{2690.756103, -2421.546142, 13.632966, 0.000029, 0.000000, 89.999908},	{2690.756103, -2421.546142, 16.332975, 0.000029, 0.000000, 89.999908}},
	{{2690.756103, -2440.756835, 13.632966, 0.000037, 0.000000, 89.999885},	{2690.756103, -2440.756835, 16.332975, 0.000037, 0.000000, 89.999885}},
	{{2690.756103, -2459.733398, 13.632966, 0.000045, 0.000000, 89.999862},	{2690.758544, -2459.733398, 16.332975, 0.000022, 0.000000, 89.999931}},
	{{2690.756103, -2478.939941, 13.632966, 0.000052, 0.000000, 89.999839},	{2690.756103, -2478.939941, 16.332975, 0.000052, 0.000000, 89.999839}},
	{{2690.756103, -2498.074218, 13.632966, 0.000060, 0.000000, 89.999816},	{2690.756103, -2498.074218, 16.332975, 0.000060, 0.000000, 89.999816}},
	{{2705.999755, -2383.340332, 13.632966, 0.000037, 0.000000, 89.999885},	{2705.999755, -2383.340332, 16.332975, 0.000037, 0.000000, 89.999885}},
	{{2705.999755, -2402.624023, 13.632966, 0.000014, 0.000000, 89.999954},	{2705.999755, -2402.624023, 16.332975, 0.000014, 0.000000, 89.999954}},
	{{2705.999755, -2421.546142, 13.632966, 0.000022, 0.000000, 89.999931},	{2705.999755, -2421.546142, 16.332975, 0.000022, 0.000000, 89.999931}},
	{{2705.999755, -2440.756835, 13.632966, 0.000029, 0.000000, 89.999908},	{2705.999755, -2440.756835, 16.332975, 0.000029, 0.000000, 89.999908}},
	{{2705.999755, -2459.733398, 13.632966, 0.000037, 0.000000, 89.999885},	{2705.999755, -2459.733398, 16.332975, 0.000022, 0.000000, 89.999931}},
	{{2705.999755, -2478.939941, 13.632966, 0.000045, 0.000000, 89.999862},	{2705.999755, -2478.939941, 16.332975, 0.000045, 0.000000, 89.999862}},
	{{2705.999755, -2498.074218, 13.632966, 0.000052, 0.000000, 89.999839},	{2705.999755, -2498.074218, 16.332975, 0.000052, 0.000000, 89.999839}},
	{{2705.999755, -2517.210693, 13.632966, 0.000052, 0.000000, 89.999839},	{2705.999755, -2517.210693, 16.332975, 0.000052, 0.000000, 89.999839}},
	{{2720.673828, -2402.624023, 13.632966, 0.000007, 0.000000, 89.999977},	{2720.673828, -2402.624023, 16.332975, 0.000007, 0.000000, 89.999977}},
	{{2720.673828, -2421.546142, 13.632966, 0.000014, 0.000000, 89.999954},	{2720.673828, -2421.546142, 16.332975, 0.000014, 0.000000, 89.999954}},
	{{2720.673828, -2440.756835, 13.632966, 0.000022, 0.000000, 89.999931},	{2720.673828, -2440.756835, 16.332975, 0.000022, 0.000000, 89.999931}},
	{{2720.673828, -2459.733398, 13.632966, 0.000029, 0.000000, 89.999908},	{2720.673828, -2459.733398, 16.332975, 0.000022, 0.000000, 89.999931}},
	{{2720.673828, -2478.939941, 13.632966, 0.000037, 0.000000, 89.999885},	{2720.673828, -2478.939941, 16.332975, 0.000037, 0.000000, 89.999885}},
	{{2720.673828, -2498.074218, 13.632966, 0.000045, 0.000000, 89.999862},	{2720.673828, -2498.074218, 16.332975, 0.000045, 0.000000, 89.999862}}
};


new Float:container_pos_open[20][6] = {
	//	Контейнеры для разгрузки(id контейнера -2669):
	//	I:
	{2690.743652, -2402.635986, 13.526980, 0.000000, 0.000000, 0.000000},		// +5
	{2690.743652, -2421.486083, 13.526980, 0.000000, 0.000000, 180.000000}, 	// +10
	{2690.743652, -2440.849365, 13.526980, 0.000000, 0.000000, 0.000000},		// +15
	{2690.743652, -2459.769287, 13.526980, 0.000000, 0.000000, 180.000000},		// +20
	{2690.743652, -2478.831787, 13.526980, 0.000000, 0.000000, 0.000000},		// +25
	{2690.743652, -2497.941406, 13.526980, 0.000000, 0.000000, 180.000000},		// +30
	//	II:
	{2705.939453, -2383.461914, 13.526980, -0.000000, 0.000007, 0.000000},		// +0
	{2705.939453, -2402.635986, 13.526980, -0.000000, 0.000007, 0.000000},		// +5
	{2705.939453, -2421.486083, 13.526980, 0.000000, -0.000007, 180.000000},	// +10
	{2705.939453, -2440.849365, 13.526980, -0.000000, 0.000007, 0.000000},		// +15
	{2705.939453, -2459.769287, 13.526980, 0.000000, -0.000007, 180.000000},	// +20
	{2705.939453, -2478.831787, 13.526980, -0.000000, 0.000007, 0.000000},		// +25
	{2705.939453, -2497.941406, 13.526980, 0.000000, -0.000007, 180.000000},	// +30
	{2705.939453, -2517.183349, 13.526980, 0.000000, -0.000007, 180.000000},	// +35
	//	III:
	{2720.763671, -2402.635986, 13.526980, -0.000000, 0.000015, 0.000000},		// +5
	{2720.763671, -2421.486083, 13.526980, 0.000000, -0.000015, 180.000000},	// +10
	{2720.763671, -2440.849365, 13.526980, -0.000000, 0.000015, 0.000000},		// +15
	{2720.763671, -2459.769287, 13.526980, 0.000000, -0.000015, 180.000000},	// +20
	{2720.763671, -2478.831787, 13.526980, -0.000000, 0.000015, 0.000000},		// +25
	{2720.763671, -2497.941406, 13.526980, 0.000000, -0.000015, 180.000000}		// +30

};

// Цифры с права от идов контейнеров это прибавка к зарплате за один перенесенный ящик, в зависимости от расстояния...
// ...от разгружаемого ящика до скалад.

/*	//	Ретекстур для контейнеров выше:
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0xFFF0FFFF},
	SetDynamicObjectMaterial(tmpobjid, 2, 10850, "bakerybit2_sfse", "frate64_yellow", 0x00000000},
	SetDynamicObjectMaterial(tmpobjid, 3, 10850, "bakerybit2_sfse", "frate_doors64yellow", 0x00000000},*/



#define MAX_CONTAINERS 20
enum _container_enum
{
	con_status[2],
	con_count,
	con_object[2]
}

new container_info[MAX_CONTAINERS][_container_enum];

new opened_containers,
	closed_containers;



new bool:crane_status[4];


new crane_object[4][6];

new crane_magnit[2];

new Float:porter_pos_take[20][3] = {
	{2690.743652, -2405.635986, 13.526980}, // +5
	{2690.743652, -2424.486083, 13.526980}, // +10
	{2690.743652, -2443.849365, 13.526980}, // +15
	{2690.743652, -2462.769287, 13.526980}, // +20
	{2690.743652, -2481.831787, 13.526980}, // +25
	{2690.743652, -2497.941406, 13.526980}, // +30
	// II:
	{2705.939453, -2386.461914, 13.526980}, // +0
	{2705.939453, -2405.635986, 13.526980}, // +5
	{2705.939453, -2424.486083, 13.526980}, // +10
	{2705.939453, -2443.849365, 13.526980}, // +15
	{2705.939453, -2462.769287, 13.526980}, // +20
	{2705.939453, -2481.831787, 13.526980}, // +25
	{2705.939453, -2500.941406, 13.526980}, // +30
	{2705.939453, -2520.183349, 13.526980}, // +35
	// III:
	{2720.763671, -2405.635986, 13.526980}, // +5
	{2720.763671, -2424.486083, 13.526980}, // +10
	{2720.763671, -2443.849365, 13.526980}, // +15
	{2720.763671, -2462.769287, 13.526980}, // +20
	{2720.763671, -2481.831787, 13.526980}, // +25
	{2720.763671, -2500.941406, 13.526980} // +30
};






new Float:port_trailer_pos[13][6] = {
	{2753.015869, -2395.737548, 14.582303, 0.000045, 0.000000, 89.999862},
	{2753.015869, -2405.932128, 14.582303, 0.000045, 0.000000, 89.999862},
	{2753.015869, -2416.362548, 14.582303, 0.000045, 0.000000, 89.999862},
	{2753.015869, -2425.211425, 14.582303, 0.000045, 0.000000, 89.999862},
	{2753.015869, -2431.513427, 14.582303, 0.000045, 0.000000, 89.999862},
	{2753.015869, -2440.425292, 14.582303, 0.000045, 0.000000, 89.999862},
	{2753.015869, -2450.697021, 14.582303, 0.000045, 0.000000, 89.999862},
	{2753.015869, -2461.057861, 14.582303, 0.000045, 0.000000, 89.999862},
	{2753.015869, -2470.217041, 14.582303, 0.000045, 0.000000, 89.999862},
	{2753.015869, -2476.219238, 14.582303, 0.000045, 0.000000, 89.999862},
	{2753.015869, -2485.177490, 14.582303, 0.000045, 0.000000, 89.999862},
	{2753.015869, -2495.459228, 14.582303, 0.000045, 0.000000, 89.999862},
	{2753.015869, -2505.712890, 14.582303, 0.000045, 0.000000, 89.999862}
};
new bool:port_trailer_status[13];


/*

		Голод

*/

new Text:satiery_td[6];
new PlayerText:satiery_ptd[MAX_PLAYERS][4];

/* тд работ */
new Text:payment_td[2];
new PlayerText:payment_ptd[MAX_PLAYERS][2];


new Text:forklift_td;
new PlayerText:forklift_ptd[MAX_PLAYERS];
new forklift_time[MAX_PLAYERS];
/* ворота/шлагбаумы */

new barrier_object[6];
new Float:barrier_pos[6][2][6] = {
	{{1544.694458, -1630.770507, 12.932816, -0.000038, 360.000000, -89.999893}, {1544.694458, -1630.900634, 13.002816, -0.000038, 270.000000, -89.999893}}, // лcпд
	{{-1701.425048, 687.583068, 24.506523, -0.000015, 360.000000, 89.999977}, {-1701.425048, 687.713195, 24.576522, -0.000015, 270.000000, 89.999977}}, //сфпд верх
	{{-1572.204223, 658.802185, 6.703525, -0.000015, 360.000000, -89.999961}, {-1572.204223, 658.672058, 6.773524, -0.000015, 270.000000, -89.999961}},//сфпд низ открытый
	{{-2436.873779, 495.446838, 29.580486, -0.000052, 360.000000, -154.999664}, {-2436.991943, 495.391662, 29.650485, -0.000052, 270.000000, -154.999664}},
	{{2238.196289, 2450.312255, 10.523241, 180.000000, 180.000000, 450.000000}, {2238.196289, 2450.312255, 10.523241, 180.000000, 90.000000, 450.000000}},
	{{2337.692138, 2446.062744, 5.530446, 0.000048, 360.000000, 59.999935}, {2337.756591, 2446.175048, 5.600445, 0.000048, 270.000000, 59.999935}}
};


/* anti DM zones */

new Text:zz_td[3];
new Text:leave_zz_td[3];

#define MAX_DM_ZONE	33
new Float:anti_dm_pos[MAX_DM_ZONE][5]=
{
	{1391.5, -1863.5, 1578.5, -1602.5},
	{1700.5, -1950.5, 1813.5, -1850.5},
	{2614.5276,-2562.1785, 2812.3604,-2335.2041},
	{2356.9741, -765.3525, 2555.3147, -569.0752},
	{-52.6864,-294.3105, -5.8883,-252.5891},
	{-1130.7028, -1759.6340, -941.0256, -1604.3983},
	{1569.4181,-2368.1838, 1807.1868,-2231.6548},
	{922.0099, -1390.3119, 1048.7323, -1332.7876},
	{-2095.7939,-280.0992, -2011.8822,-102.9060},
	{278.3894, 2527.8135, 440.2766, 2555.4656},
	{691.1740, -1488.6973, 757.5523, -1411.0747},
	{1375.3977, -1131.9771, 1422.3407, -1047.5686},
	{1655.2382, -1000.0820, 1676.6119, -966.8107},
	{-2793.9077, 345.5357, -2754.9885, 427.3586},
	{2432.0286,2345.0627, 2515.2200, 2406.9949},
	{1551.3749,-1593.9440,1625.8014,-1504.0913},
	{1131.9663, -1388.0736, 1216.4728, -1289.8777},
	{-2740.4875, 576.2866, -2602.3850, 697.5250},
	{1577.0034, 1722.7375, 1637.7700, 1867.1422},
	{1137.5331,-1391.4702, 1200.4498,-1287.5688},
	{1137.5331,-1391.4702, 1200.4498,-1287.5688},
	{1137.5331,-1391.4702, 1200.4498,-1287.5688},
	{1894.0317, 983.2147, 2055.6013, 1082.2726},
	{726.4140,-1429.3573,747.0771,-1399.4785},
	{1922.5969,966.493, 1974.2253,1061.8308},
	{-1788.2645,2579.6714, -1741.6569,2631.8381},
	{-1788.2645,2579.6714, -1741.6569,2631.8381},
	{-1788.2645, 2579.6714, -1741.6569, 2631.8381},
	{1282.4235,-1369.6301, 1301.3743,-1332.3817},
	{2425.2229,-2143.8123, 2540.7722,-2066.7798},
	{1516.4185,976.9818, 1557.0284,1042.8929},
	{2798.1978,1224.09243, 2860.3889,2798.1978},
	{-2001.1199,72.2494, -1922.7694,217.6354}
};
new anti_dm_data[MAX_DM_ZONE][2]=
{
	{0, 0},
	{0, 0},
	{0, 0},
	{1, 1},
	{1, 1},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{-1, 1},
	{0, 0},
	{10, 1},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{1, 0},
	{2, 0},
	{3, 0},
	{0, 0},
	{-1, 1},
	{10, 1},
	{1, 1},
	{2, 1},
	{3, 1},
	{5, 1},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0}

};

new anti_dm_area[MAX_DM_ZONE];

new anti_dm_warning[MAX_PLAYERS char];
new is_player_in_dmzone[MAX_PLAYERS char];

/* nonparking zones */
new Text:np_td[3];
new Text:leave_np_td[3];

#define MAX_NONPARKING_ZONES 17
new non_parking_area[MAX_NONPARKING_ZONES];
new Float:non_parking_pos[MAX_NONPARKING_ZONES][4]=
{
	{1391.5, -1863.5, 1578.5, -1602.5},
	{1700.5, -1950.5, 1813.5, -1850.5},
	{520.5, -1317.5, 584.5, -1265.5},
	{-2596.7688, 477.8199, -2536.7046, 553.7369},
	{2556.9045, 1382.9697, 2617.9646, 1463.2864},
	{2440.7141,-1565.0212, 2497.6780, -1513.7098},
	{2614.5276,-2562.1785, 2812.3604,-2335.2041},
	{-1130.7028, -1759.6340, -941.0256, -1604.3983},
	{1569.4181,-2368.1838, 1807.1868,-2231.6548},
	{922.0099, -1390.3119, 1048.7323, -1332.7876},
	{-2095.7939,-280.0992, -2011.8822,-102.9060},
	{1131.9663, -1388.0736, 1216.4728, -1289.8777},
	{-2740.4875, 576.2866, -2602.3850, 697.5250},
	{1577.0034, 1722.7375, 1637.7700, 1867.1422},
	{1894.0317, 983.2147, 2055.6013, 1082.2726},
	{2087.0618,1383.3145,2236.8276,1448.2604},
	{-1997.5977,219.6909,-1885.6005,310.1315}

};
new is_player_nonpark_zone[MAX_PLAYERS char];

/* Штрафстоянка */

new Float:fine_pos[4][4] = {
	{219.1962,-0.3495,2.2854,269.5278},
	{219.7854,7.9567,2.2983,270.9744},
	{219.5111,24.7900,2.3029,269.7401},
	{219.6018,33.3192,2.2967,272.4495}
};

/* Аксесуары */
new Text:acc_td[11];
new PlayerText:acc_ptd[MAX_PLAYERS];


new accessories_items[][] =
{
	{19421,19422,19423,19424,1},
	{19069,19068,19067,19554,18953,18954,1},
	{18968,18967,18969,1},
	{18955,18956,18957,18959,18926,18927,18928,18929,18930,18931,18932,18933,1},
	{19104,19105,19106,19107,19108,19109,1},
	{18925,18922,18923,18924,18921,1},
	{19519,19274,1},
	{19011,19012,19013,19014,19015,19016,19017,19018,19019,19024,19027,19028,19029,19022,19035,19031,19032,19033,1},
	{18911,18912,18913,18914,18915,18916,18917,18918,18919,18920,1},
	{18947,18948,18949,18950,18951,1},
	{19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053,1},
	{3026,371,19559,1},
	{18910, 18909, 18908, 18907, 18906,1}
};



new accessories_items_price[][] =
{
	{5000,5000,5000,5000,1},
	{4500,4500,5000,7000,4000,5000,1},
	{3000,3000,3000,1},
	{2500,2500,2500,3500,3500,2500,6000,6000,4000,3500,3500,5000,1},
	{3500,3500,3500,3500,3500,3500,1},
	{3000,3200,3200,3500,4000,1},
	{4000,4000,1},
	{1500,3000,1500,1700,2200,2800,3800,3800,3800,4000,4000,4000,4000,4000,3000,3100,3100,5000,1},
	{3000,2000,2000,2700,2700,2700,2300,2000,2000,2700,1},
	{3100,3100,3100,3100,3100,1},
	{40000,30000,45000,50000,60000,6000,6000,6000,6000,6500,6000,6200,6400,1},
	{2500,1800,2200,1},
	{3000,3000,3000,3000,3000,1}
};

/*	spectate	*/


new Text:sp_td[7];
new PlayerText:sp_ptd[MAX_PLAYERS][3];


/*	paintball	*/


new Text:PaintTextDraws;
new PlayerText:PaintStats[MAX_PLAYERS];

new TeamPaint[MAX_PLAYERS];
new KillPaint[MAX_PLAYERS];
new DeathPaint[MAX_PLAYERS];

new TimerPaintBall,
	StartPaintBall,
	RedScore,
	BlueScore,
	RedPlayer,
	BluePlayer,
	PaintBallMap;


new SkinPaint[2][2] = {
	{47,48},
	{55, 56}
};
new Float:SpawnBlueTeam[2][10][4] = {
	{
		{-2801.7566,-1558.6439,140.7292,2.1118},
		{-2834.9138,-1553.3436,140.3487,341.5001},
		{-2856.3674,-1570.9919,141.3133,327.8954},
		{-2827.6458,-1579.4283,141.3203,356.1252},
		{-2805.6375,-1580.6309,141.3203,1.3832},
		{-2786.6289,-1579.2703,141.3300,5.9138},
		{-2787.6526,-1605.9459,141.4236,7.6774},
		{-2801.5774,-1604.0116,141.4267,11.7659},
		{-2831.9187,-1603.2332,141.3323,352.9047},
		{-2818.9546,-1620.7930,141.4647,349.9767}
	},
	{
	    {-68.9691,121.3794,3.1172,156.7188},
		{-44.7801,112.6219,3.1172,158.3273},
		{-15.0513,100.9311,3.1172,158.9122},
		{-53.3519,80.2909,3.1096,159.0609},
		{-30.2476,67.7836,3.1172,155.6977},
		{-40.9682,50.1365,5.9923,160.6693},
		{-61.8525,46.1380,6.4766,159.9383},
		{-61.8265,46.7411,3.1103,161.2542},
		{-72.0478,68.6023,3.1172,164.9073},
		{-77.8567,44.8276,3.1172,167.9780}
	}
};
new Float:SpawnRedTeam[2][10][4] = {
	{
		{-2802.6504,-1492.4417,139.1176,175.3973},
		{-2845.9958,-1497.7247,137.5006,194.1175},
		{-2852.4460,-1480.0096,136.1986,192.3640},
		{-2831.8931,-1471.3474,136.4821,185.3390},
		{-2806.7224,-1472.2322,137.7370,183.4304},
		{-2784.2095,-1472.9342,137.3327,160.7703},
		{-2798.7026,-1433.0662,136.2958,179.4868},
		{-2826.6138,-1434.2772,136.5237,183.7270},
		{-2841.1321,-1441.3585,136.4133,181.3916},
		{-2863.4673,-1459.1554,136.0605,200.9771}
	},
	{
		{-158.4504,-93.8332,3.1094,334.6712},
		{-133.6594,-95.3641,3.1181,351.1942},
		{-133.6877,-93.3308,6.4844,351.1944},
		{-108.7194,-99.0294,3.1172,347.2460},
		{-85.5585,-102.3079,3.1181,351.0476},
		{-85.7862,-102.5237,6.4844,351.1941},
		{-67.7109,-106.6384,3.1094,347.3920},
		{-71.8881,-62.2367,3.1172,345.9323},
		{-128.0658,-39.4889,3.1172,339.3523},
		{-90.9633,-37.8057,3.1172,342.8616}
	}
};

new paintball_bank,
	race_bank;


/*	гонки	*/
new RaceCountWinner;
new StartRace;
new PlayerRaceCount;
new TimerRace;
new RaceVehicle;
new RaceMap;


new is_player_race_regged[MAX_PLAYERS];
new player_race_cp[MAX_PLAYERS];
new player_race_vehicle[MAX_PLAYERS];

/*	гонки	*/

new Race_Car[18] = {402, 411, 415, 429, 451, 477, 494, 502, 503, 506, 451, 558, 559, 565, 587, 589, 602, 603};
new Race_Treck_Count_Checkpoint[9] = {45, 38, 43, 63, 100, 42, 44, 56, 37};
new Float:Race_Treck_VehPos_0[2][4] =
{
    {807.201843,1879.722534,4.366361,178.851394}, // 1
	{812.962097,1879.658081,4.362972,178.580398} // 2
};
new Float:Race_Treck_VehPos_1[2][4] =
{
    {1562.411376,18.862539,23.891143,180.705001}, // 1
	{1557.824340,17.127567,23.891136,181.885757} // 2
};
new Float:Race_Treck_VehPos_2[2][4] =
{
	{2331.251953,211.183135,26.063034,89.294441}, // 1
	{2331.250000,216.158004,26.106225,89.103355} // 2
};
new Float:Race_Treck_VehPos_3[2][4] =
{
	{-21.300992,-1526.432739,1.575528,174.734817}, // 1
	{-27.065204,-1525.779174,1.568591,174.250762} // 2
};
new Float:Race_Treck_VehPos_4[2][4] =
{
	{2905.196533,2400.612060,10.374650,180.330444}, // 1
	{2909.790527,2400.595458,10.374657,179.363861} // 2
};
new Float:Race_Treck_VehPos_5[2][4] =
{
	{2710.129150,-1181.385131,68.934043,90.071060}, // 1
	{2710.133300,-1185.830932,68.927246,90.070884} // 2
};
new Float:Race_Treck_VehPos_6[2][4] =
{
	{2051.553466,1644.684082,10.374647,179.429382}, // 1
	{2045.602416,1644.742797,10.374647,179.429382} // 2
};
new Float:Race_Treck_VehPos_7[2][4] =
{
	{2551.688476,39.295196,26.040111,89.814041}, // 1
	{2551.703369,43.882717,26.033029,89.814056} // 2
};
new Float:Race_Treck_VehPos_8[2][4] =
{
	{1245.851196,-2057.724609,59.512710,268.554504}, // 1
	{1245.973266,-2052.898193,59.512989,268.558563} // 2
};

new Float:Race_Treck_Checkpoint_0[45][4] =
{
	{818.621032,1776.861450,3.537571,189.684951}, // 1
	{857.848510,1580.036865,16.698184,162.272491}, // 2
	{775.942077,1452.760620,20.128326,161.028778}, // 3
	{814.508056,1265.857543,25.592201,209.354095}, // 4
	{833.309448,1212.076538,27.364440,184.168502}, // 5
	{690.994628,1098.591918,28.108192,107.065338}, // 6
	{410.037048,1023.715270,28.109409,103.873497}, // 7
	{239.136840,976.393554,27.921108,114.326614}, // 8
	{126.343933,888.782165,21.068332,92.139091}, // 9
	{-3.005907,882.299804,22.033592,107.399810}, // 10
	{-105.672981,831.102050,19.328462,114.777496}, // 11
	{-211.371673,800.023132,19.768730,109.439445}, // 12
	{-281.492187,796.184509,14.920249,51.173736}, // 13
	{-299.860382,854.719848,10.161730,3.514492}, // 14
	{-313.607391,920.846740,10.964136,46.175975}, // 15
	{-417.742401,1019.529296,10.758539,61.902481}, // 16
	{-579.325439,1118.325927,10.591530,41.341411}, // 17
	{-638.025512,1219.135253,11.601399,67.825599}, // 18
	{-744.363830,1249.758789,13.138885,37.811553}, // 19
	{-847.051696,1493.888916,18.119411,354.591613}, // 20
	{-880.095031,1651.555664,26.755475,32.258499}, // 21
	{-942.270812,1725.890258,29.065193,80.500282}, // 22
	{-1163.846557,1788.036621,39.806240,59.792057}, // 23
	{-1232.102416,1890.676025,41.456016,31.149934}, // 24
	{-1336.557861,2010.938354,53.697910,11.255878}, // 25
	{-1371.486450,2218.940917,52.785373,23.035297}, // 26
	{-1433.432006,2464.468505,60.623756,344.560058}, // 27
	{-1342.638427,2638.619628,50.436439,302.965270}, // 28
	{-1170.325805,2692.050292,45.594432,276.094787}, // 29
	{-850.175598,2727.627197,45.523674,273.871246}, // 30
	{-612.853881,2756.498779,59.737918,267.790832}, // 31
	{-478.259063,2715.489501,64.451942,274.867645}, // 32
	{-313.929077,2634.793945,63.153526,264.653503}, // 33
	{-54.081611,2637.471923,63.410232,271.005218}, // 34
	{111.915802,2709.928710,52.193492,318.436584}, // 35
	{262.253082,2739.961181,59.570953,253.299865}, // 36
	{441.583740,2703.837402,61.906501,288.183135}, // 37
	{599.070007,2716.495605,58.837547,262.625061}, // 38
	{785.564025,2704.340576,44.987880,266.651794}, // 39
	{882.257202,2659.802734,29.521224,178.929595}, // 40
	{837.541137,2514.049072,29.280828,127.447807}, // 41
	{742.345703,2390.115966,16.031230,179.413986}, // 42
	{798.287170,2209.223876,8.990077,203.164947}, // 43
	{819.655334,2034.341430,10.121703,177.063247}, // 44
	{809.929809,1879.800048,4.369752,180.488723} // 45
};
new Float:Race_Treck_Checkpoint_1[38][4] =
{
	{1560.447875,-29.835601,21.035236,181.368972}, // 1
	{1526.938720,-176.910049,13.581067,138.017242}, // 2
	{1356.278442,-209.192504,8.419678,76.987030}, // 3
	{1238.609741,-128.903381,38.728260,46.942756}, // 4
	{1105.794555,-59.675655,17.808322,95.087760}, // 5
	{860.561279,-97.272590,26.739103,109.411201}, // 6
	{745.105895,-160.648818,18.734754,127.339294}, // 7
	{660.531677,-197.756256,12.622177,88.333854}, // 8
	{526.518920,-213.153839,15.608560,134.084915}, // 9
	{436.287200,-297.865936,6.448071,103.328186}, // 10
	{294.725219,-381.517547,8.741739,97.347274}, // 11
	{209.239822,-326.396331,1.804781,7.136022}, // 12
	{218.896194,-280.883270,1.156763,311.361267}, // 13
	{232.910491,-165.334854,1.156801,0.829428}, // 14
	{232.715789,-21.165365,1.158749,0.111281}, // 15
	{228.106338,48.524333,2.152965,65.110458}, // 16
	{7.041923,156.066680,1.805228,58.191249}, // 17
	{-147.128585,224.677703,8.422566,74.410331}, // 18
	{-355.470825,273.029022,1.801947,83.169647}, // 19
	{-565.019653,283.060791,1.805222,93.948783}, // 20
	{-718.406372,225.545196,1.908888,125.984420}, // 21
	{-776.604431,150.613769,6.761970,177.888565}, // 22
	{-675.713989,90.628448,23.858663,204.391586}, // 23
	{-745.164672,24.478540,33.379066,99.736763}, // 24
	{-886.031372,-46.001945,34.931060,261.675781}, // 25
	{-737.115112,-3.609969,54.987194,295.919647}, // 26
	{-671.868041,4.349759,70.801322,178.002243}, // 27
	{-797.127624,-107.950721,63.598228,108.994354}, // 28
	{-923.465148,-158.087539,51.583118,149.505706}, // 29
	{-958.442382,-295.741912,36.144039,170.124099}, // 30
	{-1013.941711,-439.823577,35.997604,117.934967}, // 31
	{-1123.033325,-524.935729,30.215595,150.352020}, // 32
	{-1173.349365,-661.138916,45.339443,163.672088}, // 33
	{-1246.741333,-781.192993,65.539627,123.633331}, // 34
	{-1394.892822,-817.160217,81.238739,92.422225}, // 35
	{-1567.325561,-808.689392,51.310260,74.666328}, // 36
	{-1754.504394,-706.262145,27.851587,25.234802}, // 37
	{-1762.239135,-592.530456,16.061582,2.566752} // 38
};
new Float:Race_Treck_Checkpoint_2[43][4] =
{
	{2282.102539,214.303863,21.033411,85.549049}, // 1
	{2081.470947,250.319732,22.844587,82.514541}, // 2
	{2025.565185,312.039215,26.907438,28.823106}, // 3
	{1966.878173,352.496215,23.131483,88.681465}, // 4
	{1831.308959,374.452087,18.611337,73.712615}, // 5
	{1735.430541,386.652038,19.493270,88.229187}, // 6
	{1604.400390,382.628967,19.608657,90.012771}, // 7
	{1510.896362,390.807952,19.609924,80.223060}, // 8
	{1358.376953,454.900573,19.610334,64.220275}, // 9
	{1206.031982,533.088500,19.609920,63.093742}, // 10
	{1092.048461,573.466918,19.609594,107.391403}, // 11
	{1017.268981,469.051483,19.609130,154.406295}, // 12
	{869.766662,351.444305,19.609491,105.304809}, // 13
	{613.031005,307.841735,19.446956,103.107330}, // 14
	{433.156524,166.442169,8.948611,129.366729}, // 15
	{237.057846,50.423191,2.156765,111.075263}, // 16
	{232.827407,-46.413158,1.156749,180.143844}, // 17
	{232.812576,-225.527008,1.160070,178.693984}, // 18
	{219.554168,-281.363616,1.156766,135.681701}, // 19
	{217.775238,-348.328186,4.156592,213.423248}, // 20
	{387.861328,-399.844207,25.300552,260.554016}, // 21
	{495.748596,-414.991455,28.186201,266.519287}, // 22
	{629.529785,-415.439178,16.153821,269.779144}, // 23
	{681.568969,-499.768066,15.916437,182.478134}, // 24
	{681.542236,-692.618164,15.913526,180.518859}, // 25
	{700.804382,-855.194213,42.855587,212.619232}, // 26
	{793.288391,-937.593200,41.538314,186.355270}, // 27
	{795.333435,-1050.838745,24.490922,182.767883}, // 28
	{797.260375,-1169.583129,23.067562,180.174652}, // 29
	{796.884948,-1396.882690,13.187554,179.164718}, // 30
	{767.435424,-1585.518310,13.109895,129.842895}, // 31
	{633.399230,-1586.424316,15.253185,91.384986}, // 32
	{452.896728,-1587.660522,25.031761,92.771896}, // 33
	{328.991729,-1572.364013,32.833831,20.006540}, // 34
	{422.530181,-1469.652465,30.140316,305.364562}, // 35
	{630.461242,-1400.837890,13.051513,270.971038}, // 36
	{885.283752,-1400.437988,12.726941,270.013824}, // 37
	{1189.675781,-1400.415649,12.920578,270.093139}, // 38
	{1343.084106,-1406.985839,13.063844,180.423477}, // 39
	{1317.502075,-1503.791748,13.109927,147.383865}, // 40
	{1297.423339,-1637.748901,13.109911,179.999954}, // 41
	{1297.444213,-1803.948852,13.109918,180.000015}, // 42
	{1297.463500,-1869.538330,13.271520,180.000015} // 43
};
new Float:Race_Treck_Checkpoint_3[63][4] =
{
	{-43.864944,-1584.719848,2.724869,144.259201}, // 1
	{-188.510177,-1631.289306,2.813007,105.699172}, // 2
	{-264.678436,-1797.668579,11.659782,168.044784}, // 3
	{-272.721679,-1944.861083,28.123851,188.675079}, // 4
	{-257.954772,-2072.752929,36.470314,154.968887}, // 5
	{-399.087646,-2195.597656,53.238380,104.888862}, // 6
	{-500.264129,-2169.506347,55.713394,77.026206}, // 7
	{-652.036987,-2205.544433,10.611701,139.198089}, // 8
	{-711.857299,-2333.600097,35.454910,160.615280}, // 9
	{-775.594238,-2452.051269,72.287422,139.629928}, // 10
	{-910.466674,-2579.826171,90.312660,126.003707}, // 11
	{-1023.786621,-2614.927734,82.234153,90.580940}, // 12
	{-1182.363037,-2493.637695,61.636001,11.432506}, // 13
	{-1121.407958,-2208.438720,32.311916,342.489349}, // 14
	{-1011.715026,-2005.474975,68.712791,329.338897}, // 15
	{-980.095397,-1906.779541,79.738197,52.921501}, // 16
	{-1171.104614,-1882.633056,77.063735,53.280498}, // 17
	{-1227.709106,-1764.709838,46.577514,41.866798}, // 18
	{-1559.811523,-1605.108398,37.380550,86.143486}, // 19
	{-1778.451660,-1692.326782,31.683635,124.799407}, // 20
	{-1956.064819,-1820.161376,34.554794,138.116775}, // 21
	{-2104.122070,-2075.256591,62.948463,158.071929}, // 22
	{-2316.367675,-2236.694335,21.800327,115.427474}, // 23
	{-2429.074462,-2281.472412,13.977076,63.208160}, // 24
	{-2500.049316,-2200.889404,28.605022,34.841884}, // 25
	{-2611.967041,-2074.602783,38.213249,56.232910}, // 26
	{-2789.410888,-1946.114501,45.398674,49.307888}, // 27
	{-2881.884277,-1774.523803,30.682174,15.146209}, // 28
	{-2928.815673,-1488.160644,10.389987,2.536124}, // 29
	{-2899.708496,-1152.107299,9.218329,350.578369}, // 30
	{-2859.550537,-818.280822,6.764645,1.462869}, // 31
	{-2790.200683,-494.153747,6.922489,325.256408}, // 32
	{-2585.244628,-350.197570,21.079395,280.967651}, // 33
	{-2327.381103,-344.767089,39.454551,266.320068}, // 34
	{-2057.285156,-350.930725,35.031787,269.686767}, // 35
	{-1881.979248,-299.340881,50.574272,315.798950}, // 36
	{-1886.190551,-116.420028,37.977844,10.140039}, // 37
	{-1881.305541,113.936218,37.924823,353.602294}, // 38
	{-1818.605590,366.016754,38.347297,331.432678}, // 39
	{-1644.068481,557.618469,38.855403,316.258239}, // 40
	{-1416.515014,797.602661,46.928333,316.860961}, // 41
	{-1120.635864,1109.800537,37.566200,316.477813}, // 42
	{-1028.782348,1256.864135,39.326530,318.242919}, // 43
	{-915.169372,1294.435791,36.866710,229.418319}, // 44
	{-947.364501,1229.018798,32.955234,60.501945}, // 45
	{-1056.274169,1371.308227,32.229778,27.742761}, // 46
	{-1105.240234,1565.056518,26.951290,10.386562}, // 47
	{-1179.622558,1679.544067,20.579761,56.659114}, // 48
	{-1402.033447,1739.583862,16.718952,85.397628}, // 49
	{-1607.151733,1829.060302,16.622243,20.814613}, // 50
	{-1629.817626,2044.395874,18.715398,10.290870}, // 51
	{-1755.179687,2229.132568,22.103322,55.154327}, // 52
	{-1897.575317,2405.360107,50.943466,18.653465}, // 53
	{-2017.119750,2616.340576,50.796062,54.161079}, // 54
	{-2253.116210,2677.635498,54.741222,93.658622}, // 55
	{-2603.060058,2670.494873,75.288696,89.753959}, // 56
	{-2748.723876,2591.641601,92.555702,155.761886}, // 57
	{-2760.231201,2348.589111,73.867515,258.943786}, // 58
	{-2701.555908,2374.666992,69.098609,337.738952}, // 59
	{-2642.226318,2503.477050,29.513929,290.885070}, // 60
	{-2501.385498,2415.698242,16.328512,210.824203}, // 61
	{-2466.257324,2318.076171,4.563011,180.562423}, // 62
	{-2465.901123,2237.074707,4.521181,180.085113} // 63
};
new Float:Race_Treck_Checkpoint_4[100][4] =
{
	{2904.642822,2296.488281,10.374790,128.266448}, // 1
	{2847.326171,2290.341552,10.568333,145.255737}, // 2
	{2847.208740,2093.811767,10.377181,180.176254}, // 3
	{2815.273925,1964.817138,10.378288,119.403533}, // 4
	{2607.613769,1953.079345,10.691256,90.441413}, // 5
	{2507.440185,1944.639770,10.408341,179.169128}, // 6
	{2499.149169,1713.059326,10.417989,100.982559}, // 7
	{2327.361083,1704.855346,10.409975,179.242034}, // 8
	{2320.167236,1533.023925,10.437512,88.851356}, // 9
	{2048.951904,1523.692260,10.374626,148.221923}, // 10
	{2048.609375,1354.423950,10.374802,179.868774}, // 11
	{2034.739868,1272.931396,10.374647,86.876647}, // 12
	{1803.618774,1273.237182,13.513648,89.830368}, // 13
	{1650.687866,1270.117553,10.374598,136.588088}, // 14
	{1654.582519,1133.187622,10.443453,270.099029}, // 15
	{1796.135009,1133.234741,13.639816,269.918487}, // 16
	{1867.208007,1125.460937,10.374820,190.190582}, // 17
	{1869.330810,937.707092,10.374606,211.623260}, // 18
	{2004.067871,936.343078,10.374656,314.996520}, // 19
	{2010.739868,970.225952,10.374563,306.013671}, // 20
	{2048.600830,969.738037,10.170540,210.288619}, // 21
	{2039.344238,851.870422,6.433293,122.174911}, // 22
	{1824.883911,852.092529,10.132537,89.745567}, // 23
	{1698.421386,851.953613,7.788749,89.994773}, // 24
	{1489.065673,851.041381,6.515406,88.569602}, // 25
	{1288.303100,938.890686,12.955337,88.955375}, // 26
	{1089.945556,824.663024,10.383641,124.655532}, // 27
	{911.044006,736.125488,10.414832,112.412040}, // 28
	{770.086303,684.147766,10.910332,103.424964}, // 29
	{640.386596,677.607299,6.141993,84.846069}, // 30
	{377.438232,778.468811,5.899756,66.423042}, // 31
	{302.382995,832.080505,16.047641,29.745288}, // 32
	{225.867431,971.098205,27.903129,25.689914}, // 33
	{188.340316,1148.921508,14.390420,334.161834}, // 34
	{306.123992,1273.376220,13.610952,326.594238}, // 35
	{382.860595,1529.652465,12.292238,344.331451}, // 36
	{484.754913,1651.950317,14.256403,300.083160}, // 37
	{643.846862,1767.047729,4.707929,340.936035}, // 38
	{666.181579,2057.014892,12.214195,355.842620}, // 39
	{656.870544,2357.414794,27.270475,9.899023}, // 40
	{653.501647,2509.981201,31.077104,337.444702}, // 41
	{763.676269,2616.532226,17.628107,287.066589}, // 42
	{965.236022,2563.622314,10.400955,238.733062}, // 43
	{1140.772583,2431.950439,10.318408,224.093017}, // 44
	{1208.866333,2266.936767,6.438433,183.854293}, // 45
	{1208.853515,2004.380126,6.440946,179.867660}, // 46
	{1208.206542,1711.945678,6.441006,179.878295}, // 47
	{1208.180053,1376.673950,6.437227,179.228347}, // 48
	{1225.442260,961.512207,6.515450,204.853225}, // 49
	{1314.383666,861.425720,6.515195,240.770324}, // 50
	{1637.582519,834.086303,6.440680,269.563934}, // 51
	{1786.801757,828.873168,10.373290,225.199645}, // 52
	{1776.672485,693.985046,15.520398,169.278869}, // 53
	{1724.359985,509.158905,28.625957,161.241210}, // 54
	{1635.259155,239.640319,29.873891,163.844589}, // 55
	{1601.407958,77.974945,37.393119,187.150772}, // 56
	{1653.962158,-79.078468,35.583946,185.874160}, // 57
	{1668.715454,-369.020751,38.991649,189.078704}, // 58
	{1703.347900,-625.037658,39.866058,176.328796}, // 59
	{1676.060058,-781.105468,54.236843,148.607971}, // 60
	{1606.681762,-878.629272,54.145797,136.080429}, // 61
	{1527.036499,-927.695739,41.229961,109.782051}, // 62
	{1367.735473,-944.725708,33.890254,158.611663}, // 63
	{1350.983642,-1036.230590,25.934209,119.133247}, // 64
	{1152.993530,-1039.656494,31.449575,90.559005}, // 65
	{963.111999,-1043.636962,29.787878,156.291610}, // 66
	{955.956848,-1144.857910,23.659976,105.990669}, // 67
	{798.209289,-1153.562622,23.726898,156.774520}, // 68
	{797.716186,-1314.527221,13.084912,180.481750}, // 69
	{797.381652,-1426.079956,13.097719,179.163558}, // 70
	{760.269958,-1586.458740,13.144408,134.689468}, // 71
	{752.781066,-1666.922607,3.667567,182.168167}, // 72
	{749.231811,-1764.065795,12.594976,103.922149}, // 73
	{663.133911,-1737.877441,13.219007,76.346221}, // 74
	{447.879058,-1705.359008,10.179355,81.989967}, // 75
	{235.785202,-1658.398193,11.188897,40.685985}, // 76
	{91.203186,-1529.399536,5.347433,84.958229}, // 77
	{-86.365966,-1497.806518,2.419368,62.948081}, // 78
	{-152.286819,-1375.159790,2.398074,359.054840}, // 79
	{-98.749542,-1135.537841,0.904029,334.282165}, // 80
	{-89.125671,-1035.132202,23.654760,31.196905}, // 81
	{-169.589767,-949.657043,30.942113,53.096405}, // 82
	{-324.993530,-862.423400,46.604103,66.689788}, // 83
	{-427.240112,-831.110473,48.423603,102.733062}, // 84
	{-565.809326,-942.631530,59.513843,136.820007}, // 85
	{-648.019958,-998.257507,68.147781,107.386314}, // 86
	{-801.622009,-1005.998657,80.993225,109.976600}, // 87
	{-878.917358,-1102.467529,97.407844,158.840713}, // 88
	{-904.361083,-1102.536621,98.197937,44.634548}, // 89
	{-1113.683227,-887.738037,74.089294,44.065540}, // 90
	{-1257.322631,-738.873657,64.312622,43.256702}, // 91
	{-1432.134643,-597.476013,13.851204,82.277351}, // 92
	{-1559.468261,-545.088989,20.360309,46.115730}, // 93
	{-1694.027221,-398.746948,13.837521,9.835154}, // 94
	{-1688.749389,-288.748107,13.849500,350.075653}, // 95
	{-1621.045776,-127.473907,13.848632,318.218505}, // 96
	{-1463.180297,29.781953,13.849139,315.569335}, // 97
	{-1316.229614,176.929229,13.848294,315.432800}, // 98
	{-1193.956665,298.980621,13.851263,314.831359}, // 99
	{-1080.964233,411.326904,13.847523,314.845275} // 100
};
new Float:Race_Treck_Checkpoint_5[42][4] =
{
	{2612.901611,-1184.085449,63.513553,89.907135}, // 1
	{2450.058593,-1183.760498,36.225257,86.262260}, // 2
	{2381.426757,-1174.130615,27.174823,73.106239}, // 3
	{2252.818115,-1142.559326,26.100093,75.614463}, // 4
	{2091.549072,-1099.135620,24.645971,65.870223}, // 5
	{1880.437377,-1046.071044,23.386274,128.169403}, // 6
	{1863.564208,-1178.390625,23.359069,135.969238}, // 7
	{1799.134643,-1175.532836,23.346593,76.913864}, // 8
	{1627.632690,-1160.785034,23.603866,89.871215}, // 9
	{1425.033691,-1158.894775,23.361013,77.472900}, // 10
	{1349.878906,-1142.271118,23.385229,90.150260}, // 11
	{1217.610839,-1144.724487,23.179864,90.058677}, // 12
	{994.901672,-1144.748901,23.622203,89.088294}, // 13
	{805.356018,-1148.023559,23.607313,100.824363}, // 14
	{727.380615,-1192.014770,19.228441,148.781494}, // 15
	{664.180541,-1269.200561,13.160750,178.746627}, // 16
	{661.129882,-1319.818725,13.102153,116.608734}, // 17
	{642.248168,-1401.009399,13.150785,246.088790}, // 18
	{896.844787,-1400.287841,12.823895,270.321228}, // 19
	{1131.698974,-1400.683715,13.156497,270.229309}, // 20
	{1304.286376,-1400.491699,12.941259,269.769775}, // 21
	{1395.662353,-1408.172851,13.085832,234.073074}, // 22
	{1399.325561,-1441.938964,13.085812,225.577468}, // 23
	{1486.909912,-1440.943481,13.085964,271.094238}, // 24
	{1640.667114,-1440.542724,13.085910,270.114501}, // 25
	{1820.061645,-1460.840454,13.056637,269.306945}, // 26
	{1969.321166,-1463.245483,13.093461,269.619995}, // 27
	{2124.293212,-1459.806152,23.523483,303.603424}, // 28
	{2141.498291,-1384.435302,23.538667,275.245422}, // 29
	{2308.142578,-1384.112670,23.566047,269.675079}, // 30
	{2389.276123,-1389.361328,23.585159,205.896560}, // 31
	{2394.159423,-1440.963623,23.539102,227.136367}, // 32
	{2478.295410,-1444.637084,24.939506,270.042449}, // 33
	{2642.916259,-1435.766723,29.981822,359.122192}, // 34
	{2642.916259,-1249.191406,49.550262,359.650848}, // 35
	{2642.384277,-1070.470947,69.153579,0.747360}, // 36
	{2686.662353,-1047.858154,69.116790,270.177062}, // 37
	{2838.518554,-1054.490966,22.968673,216.746658}, // 38
	{2846.409179,-1224.752441,22.701965,188.177124}, // 39
	{2869.422851,-1357.462158,10.608372,188.791000}, // 40
	{2841.819335,-1586.905273,10.624644,153.210388}, // 41
	{2822.169433,-1657.446411,10.399197,176.060607} // 42
};
new Float:Race_Treck_Checkpoint_6[44][4] =
{
	{2048.734130,1514.476074,10.374691,179.936203}, // 1
	{2048.524658,1291.985595,10.374756,180.048461}, // 2
	{2057.242187,1194.735717,10.374214,257.723724}, // 3
	{2066.790771,1324.340820,10.375930,0.506765}, // 4
	{2066.813720,1615.882080,10.378517,359.944061}, // 5
	{2057.365478,1644.105102,10.381402,96.089675}, // 6
	{2048.730224,1603.411621,10.374671,180.428436}, // 7
	{2048.280273,1426.683227,10.374775,179.945816}, // 8
	{2048.656494,1265.248657,10.374707,179.322387}, // 9
	{2057.269531,1198.820556,10.374181,268.101135}, // 10
	{2066.418212,1244.973876,10.374659,359.788787}, // 11
	{2066.881835,1459.282348,10.374830,359.759338}, // 12
	{2057.676025,1643.359985,10.380225,88.908584}, // 13
	{2048.463867,1552.666381,10.374722,180.065628}, // 14
	{2048.517089,1308.394409,10.374787,179.676406}, // 15
	{2057.165771,1198.022949,10.373319,269.456665}, // 16
	{2066.666503,1334.668090,10.377341,0.756242}, // 17
	{2067.198730,1595.400268,10.378211,0.132772}, // 18
	{2057.198974,1644.458251,10.374998,131.411590}, // 19
	{2048.887207,1495.318115,10.374735,179.841659}, // 20
	{2048.408935,1245.248046,10.374676,180.099914}, // 21
	{2056.873779,1199.337402,10.372429,264.886535}, // 22
	{2067.073242,1303.480712,10.374755,359.539855}, // 23
	{2066.734375,1585.745239,10.377992,359.954742}, // 24
	{2057.647460,1644.260498,10.379969,91.624778}, // 25
	{2048.613769,1494.825927,10.374741,180.234909}, // 26
	{2048.476562,1288.101928,10.374840,179.829010}, // 27
	{2057.109863,1198.408447,10.373145,269.548614}, // 28
	{2066.767333,1332.744384,10.377202,0.020153}, // 29
	{2066.995849,1563.258300,10.375169,359.580810}, // 30
	{2057.116210,1646.080566,10.377386,104.523033}, // 31
	{2048.343505,1513.261718,10.374744,179.851943}, // 32
	{2048.203857,1256.485717,10.374738,180.432983}, // 33
	{2057.912597,1197.999511,10.373744,266.558349}, // 34
	{2066.811767,1328.202514,10.377252,359.842224}, // 35
	{2066.525878,1565.657226,10.375506,359.466644}, // 36
	{2081.813476,1734.110961,10.374781,332.796600}, // 37
	{2146.339111,1905.258789,10.375406,358.968078}, // 38
	{2146.499267,2164.657958,10.374801,359.577850}, // 39
	{2156.755126,2273.790283,10.374723,338.274078}, // 40
	{2225.476318,2385.669189,10.381630,348.522644}, // 41
	{2230.848388,2509.709716,10.374642,315.106964}, // 42
	{2344.371093,2513.317871,10.374669,271.096557}, // 43
	{2482.833496,2512.878417,10.522428,269.792968} // 44
};
new Float:Race_Treck_Checkpoint_7[56][4] =
{
	{2498.643554,41.681228,26.038970,90.267539}, // 1
	{2396.677978,43.841205,26.037973,64.124031}, // 2
	{2391.305664,87.874679,26.038669,43.079204}, // 3
	{2317.214599,92.012664,26.039548,90.337059}, // 4
	{2208.973144,86.589462,25.534679,90.988357}, // 5
	{1993.308959,112.118827,29.405635,79.158370}, // 6
	{1858.806274,170.591079,32.321521,54.551441}, // 7
	{1781.712158,197.758728,27.057947,78.896469}, // 8
	{1677.998291,243.478378,13.744983,55.110462}, // 9
	{1629.150634,267.425750,19.345569,81.062980}, // 10
	{1515.799072,243.117004,17.493270,134.059524}, // 11
	{1470.758789,211.657196,18.709493,103.132080}, // 12
	{1366.086914,215.225143,19.109012,64.199729}, // 13
	{1290.860595,245.512557,19.105888,110.179801}, // 14
	{1249.030395,154.372894,19.260387,158.474182}, // 15
	{1249.500000,6.660292,26.688049,191.865478}, // 16
	{1296.586425,-78.590370,36.206241,175.679489}, // 17
	{1207.180786,-149.473937,39.723171,118.355514}, // 18
	{1104.105102,-186.781112,40.783206,91.203193}, // 19
	{941.965759,-178.573486,10.746654,85.060623}, // 20
	{799.892883,-167.054458,18.248605,84.865386}, // 21
	{645.098632,-153.866592,26.336320,85.148956}, // 22
	{530.239807,-143.775146,37.530784,129.760635}, // 23
	{502.601104,-273.993682,39.617279,168.183929}, // 24
	{461.572540,-434.373382,29.438734,165.320144}, // 25
	{410.287048,-613.796203,33.383960,164.367889}, // 26
	{317.390472,-884.538208,15.144602,155.680114}, // 27
	{255.756118,-1014.895812,55.814910,153.166229}, // 28
	{172.662506,-1171.919799,56.545856,151.478576}, // 29
	{165.433746,-1402.882202,46.403209,190.570480}, // 30
	{134.991058,-1451.291503,27.887296,143.242584}, // 31
	{95.376899,-1536.792236,5.598474,208.177505}, // 32
	{136.797225,-1570.920166,10.167567,203.665359}, // 33
	{112.898139,-1636.327514,9.803174,179.486267}, // 34
	{136.213653,-1728.072875,6.855989,218.131927}, // 35
	{256.960205,-1733.015625,3.641697,263.946105}, // 36
	{338.049865,-1742.848876,4.182128,232.926254}, // 37
	{347.073822,-1770.614501,4.770546,219.275878}, // 38
	{419.258453,-1772.820434,4.982056,270.967407}, // 39
	{453.408386,-1766.274414,5.125165,318.071868}, // 40
	{461.991729,-1723.072509,10.214228,303.411376}, // 41
	{591.625671,-1739.279785,12.921956,259.308074}, // 42
	{713.989196,-1769.455322,13.848028,252.417434}, // 43
	{936.498718,-1790.190551,13.350630,260.807922}, // 44
	{1049.245239,-1828.808715,13.330928,244.474761}, // 45
	{1110.222167,-1852.424682,13.085661,269.934020}, // 46
	{1229.424926,-1852.283325,13.085597,269.610565}, // 47
	{1308.380371,-1852.356567,13.087166,271.636199}, // 48
	{1380.671264,-1871.818115,13.087327,266.582336}, // 49
	{1424.655273,-1877.576293,13.085582,223.630645}, // 50
	{1421.560791,-1923.454467,14.926899,123.649871}, // 51
	{1251.621093,-1917.604980,30.647407,158.808395}, // 52
	{1327.737060,-1960.796630,29.311967,258.947662}, // 53
	{1429.707641,-1997.006103,49.968399,189.379531}, // 54
	{1389.705078,-2047.173339,54.646389,106.787849}, // 55
	{1247.688354,-2055.427978,59.473888,88.079147} // 56
};
new Float:Race_Treck_Checkpoint_8[37][4] =
{
	{1313.069580,-2056.850830,57.645011,270.213989}, // 1
	{1431.010620,-2009.911132,50.942489,353.138153}, // 2
	{1313.427124,-1957.892700,28.937969,77.680175}, // 3
	{1254.273437,-1912.692993,30.262428,312.191162}, // 4
	{1336.622924,-1917.806518,21.496725,257.433288}, // 5
	{1426.442871,-1907.180664,13.470962,4.326781}, // 6
	{1431.240356,-1873.101928,13.085583,311.485961}, // 7
	{1526.038452,-1874.231445,13.089228,207.917984}, // 8
	{1529.894653,-1982.021362,22.881677,179.357055}, // 9
	{1545.595214,-2081.123291,33.529426,206.328903}, // 10
	{1649.299926,-2162.371826,21.191764,259.913238}, // 11
	{1873.015991,-2166.738281,13.085631,270.037597}, // 12
	{2072.046875,-2170.720947,13.080975,254.015136}, // 13
	{2144.704589,-2218.888916,13.089191,272.974243}, // 14
	{2212.528076,-2151.659179,13.088269,316.129364}, // 15
	{2288.754394,-2075.378173,13.125308,314.794403}, // 16
	{2362.657226,-2048.841796,13.276062,276.240386}, // 17
	{2515.910156,-2049.124023,24.805316,270.063964}, // 18
	{2697.624511,-2049.455566,12.830335,269.552215}, // 19
	{2854.442382,-2046.369750,10.635921,302.992370}, // 20
	{2855.810791,-1893.036010,10.627944,76.483840}, // 21
	{2700.074218,-1886.051025,10.589282,69.834243}, // 22
	{2643.665283,-1813.264038,10.523666,4.801821}, // 23
	{2643.197021,-1660.473754,10.411271,359.737701}, // 24
	{2642.587158,-1468.030273,29.955043,0.194370}, // 25
	{2642.846923,-1257.427368,49.561706,358.642395}, // 26
	{2642.552001,-1080.343383,69.159927,0.148325}, // 27
	{2637.789062,-1047.934326,69.112174,51.937416}, // 28
	{2538.781250,-1047.972656,69.116409,88.995056}, // 29
	{2420.834716,-1037.435546,51.790340,107.678337}, // 30
	{2325.298828,-1079.119506,49.649742,89.074440}, // 31
	{2226.964599,-1026.373901,58.846477,59.892452}, // 32
	{2107.794921,-989.554504,54.500389,75.065414}, // 33
	{2025.923095,-983.819519,37.813709,116.997817}, // 34
	{1978.973144,-1067.700317,24.246236,170.479721}, // 35
	{1969.725952,-1182.914428,25.568576,181.106552}, // 36
	{1976.410888,-1261.099365,23.522956,179.059127} // 37
};


/*	мопеды аренда	*/

new Float:faggio_spawn[7][4]=
{
	{988.3748,-1311.7435,13.1441,178.9027}, // Позиция спавна мопеда
	{1812.9288,-1874.2194,13.1985,269.6461}, // Позиция спавна мопеда
	{1696.3845,-2311.5034,13.1466,179.4392}, // Позиция спавна мопеда
	{-39.2048,-301.5854,5.0285,180.0000},
	{2617.2539,-2391.5562,13.2236,90.0000},
	{-1997.9347,-252.0874,35.3383,90.0000},
	{-926.2992,-1710.9692,77.9426,180.0000}
};


/*	смайлы	*/

#define SMILE_COUNT (5)
enum e_SMILE_INFO
{
	smInput[5],
	smOutput_M[40],
	smOutput_F[40]
}

new SmileInfo[SMILE_COUNT][e_SMILE_INFO] = {
	{")", "улыбается", "улыбается"},
	{"))", "смеётся", "смеётся"},
	{"(", "расстроился", "расстроилась"},
	{"((", "сильно расстроился", "сильно расстроилась"},
	{"=0", "удивился", "удивилась"}
};

/*	donate roulette */



#define prise_car 1
#define prise_yacht 2
#define prise_money 3
#define prise_donate 4
#define prise_sitety 5
#define prise_skin 6
#define prise_skills 7
#define prise_licenses 8
#define prise_aidkits 9
#define prise_drugs 10
#define prise_guns 11

new Text:dr_td[49];
new PlayerText:dr_ptd[MAX_PLAYERS][6];


new dr_background_color[5] = {-2147483393, 8388863, 41215, -2147450625, -2139062017};


enum e_dr_info
{
	dr_model,
	Float:dr_rot_x,
	Float:dr_rot_y,
	Float:dr_rot_xr,
	Float:dr_rot_yr,
	dr_color_f,
	dr_color_s,
	dr_type,
}

new dr_info[11][e_dr_info] = {
	{451, 0.000000, 0.000000, 30.000000, 1.000000, 1, 1, 1},
	{454, 0.000000, 0.000000, 30.000000, 1.000000, 1, 1, 1},
	{1212, -25.000000, 0.000000, 45.000000, 1.000000, 1, 1, 3},
	{1274, -25.000000, 0.000000, 45.000000, 1.000000, 1, 1, 4},
	{1582, -25.000000, 0.000000, 0.000000, 1.000000, 1, 1, 5},
	{291, 0.000000, 0.000000, 0.000000, 1.000000, 1, 1, 4},
	{348, 0.000000, 0.000000, 70.000000, 1.000000, 1, 1, 2},
	{2684, 180.000000, 180.000000, 0.000000, 1.000000, 1, 1, 2},
	{11738, 0.000000, 0.000000, 0.000000, 1.000000, 1, 1, 5},
	{1575, -35.000000, 0.000000, 0.000000, 1.000000, 1, 1, 5},
	{2061, 0.000000, 0.000000, 0.000000, 1.000000, 1, 1, 5}
};

new donate_skinlist[7] = {291, 292, 293, 270, 264, 86, 149};

new dr_veh_models[8][6] = {
	{462, 471, 543, 404, 478, 479},
	{401, 410, 436, 505, 439, 458},
	{405, 426, 550, 566, 579, 461},
	{462, 471, 543, 404, 478, 479},
	{401, 410, 436, 505, 439, 458},
	{405, 426, 550, 566, 579, 461},
	{560, 562, 480, 559, 421, 565},
	{541, 451, 411, 415, 506, 522}
};






new dr_slot_item[MAX_PLAYERS][5],
	dr_slot_model[MAX_PLAYERS][5],
	dr_veh_slot[MAX_PLAYERS][5],
	dr_timer[MAX_PLAYERS];


new dr_step[MAX_PLAYERS];
// flymode


#define MOVE_SPEED              100.0
#define ACCEL_RATE              0.03

// Players Mode
#define CAMERA_MODE_NONE    	0
#define CAMERA_MODE_FLY     	1

// Key state definitions
#define MOVE_FORWARD    		1
#define MOVE_BACK       		2
#define MOVE_LEFT       		3
#define MOVE_RIGHT      		4
#define MOVE_FORWARD_LEFT       5
#define MOVE_FORWARD_RIGHT      6
#define MOVE_BACK_LEFT          7
#define MOVE_BACK_RIGHT         8

enum noclipenum
{
	cameramode,
	flyobject,
	mode,
	lrold,
	udold,
	lastmove,
	Float:accelmul
}
new noclipdata[MAX_PLAYERS][noclipenum];





/*		training centr		*/

new player_practice[MAX_PLAYERS char];
new player_practice_object[MAX_PLAYERS];
new player_practice_step_timer[MAX_PLAYERS];
new player_practice_timer[MAX_PLAYERS];
new player_practice_points[MAX_PLAYERS];


new Float:practice_steps_pos[3][3] = {
	{979.8824,-30.4307,1125.9558},
	{989.5286,-45.1529,1125.9558},
	{986.5693,-61.3939,1125.9558}
};

new Float:practice_objects_pos[3][7][6]=
{
	{
		{980.88422, -34.90889, 1125.38745,   0.00000, 0.00000, 180.00000},
		{986.78571, -26.57930, 1125.47412,   0.00000, 0.00000, 0.00000},
		{978.64948, -32.41120, 1124.95276,   0.00000, 0.00000, 137.67474},
		{991.92755, -32.15932, 1124.95276,   0.00000, 0.00000, 256.76471},
		{989.66168, -27.11046, 1124.95276,   0.00000, 0.00000, 333.33646},
		{983.60748, -27.38034, 1124.95276,   0.00000, 0.00000, 1.27362},
		{992.26215, -29.97010, 1125.45667,   0.00000, 0.00000, -90.00000}
	},
	{

		{985.36169, -43.51308, 1125.37329,   0.00000, 0.00000, 90.00000},
		{987.64453, -40.30781, 1124.87939,   0.00000, 0.00000, 51.23426},
		{992.84967, -41.91284, 1124.87939,   0.00000, 0.00000, 301.59387},
		{993.52911, -45.13540, 1125.45544,   0.00000, 0.00000, -90.00000},
		{993.02966, -48.74630, 1124.87146,   0.00000, 0.00000, 237.25142},
		{986.46130, -48.58654, 1124.87146,   0.00000, 0.00000, 154.68840},
		{991.80750, -39.17388, 1124.87939,   0.00000, 0.00000, 301.59387}
	},
	{

		{973.16162, -61.47306, 1124.87146,   0.00000, 0.00000, 67.98584},
		{991.51862, -52.62563, 1124.86841,   0.00000, 0.00000, 325.69675},
		{978.59161, -66.82973, 1124.87146,   0.00000, 0.00000, 150.38068},
		{989.98560, -63.69510, 1124.94922,   0.00000, 0.00000, 230.45410},
		{982.62360, -55.20532, 1124.86841,   0.00000, 0.00000, 53.54008},
		{981.39709, -59.15459, 1125.47632,   0.00000, 0.00000, 88.91846},
		{992.29706, -60.48817, 1125.47632,   0.00000, 0.00000, -88.91850}
	}
};
new practice_objects_model[8] = {1584, 1583, 1583, 1584, 1584, 1583, 1583, 1584};


/*		duels		*/

new duel_opponent[MAX_PLAYERS];
new duel_price[MAX_PLAYERS];


new duel_guns[MAX_PLAYERS][12][2];


/*
		Mafia system
*/
new mafia_owner_name[25][32] = {
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"отсутствует",
	"La Cosa Nostra",
	"Русская мафия",
	"Yakuza"
};

/*

		family bizwar

*/

new fam_biz = -1,
	fam_time = -1,
	fam_gangzone = -1,
	Float:fam_quad[4],
	fam_timer = -1;

new fam_owner,
	fam_attacker;

new fam_owner_points = -1,
	fam_attacker_points = -1;

new family_cd;

new Text:Family_War_TD[31];

/*

		mafia bizwar

*/

new mw_biz = -1,
	mw_time = -1,
	mw_gangzone = -1,
	Float:mw_quad[4],
	mw_timer = -1;

new mw_owner,
	mw_attacker;

new mw_owner_points = -1,
	mw_attacker_points = -1;

new mafia_cd;

new Text:mw_td[18];

new mafia_td_name[3][8] = {
	"LCN",
	"RM",
	"Yakuza"
};



// SA zones


enum SAZONE_MAIN
{
	SAZONE_NAME[28],
	Float:SAZONE_AREA[6]
};

new gSAZones[365][SAZONE_MAIN] = {

	{"The Big Ear",	                {-410.00,1403.30,-3.00,-137.90,1681.20,200.00}},
	{"Aldea Malvada",               {-1372.10,2498.50,0.00,-1277.50,2615.30,200.00}},
	{"Angel Pine",                  {-2324.90,-2584.20,-6.10,-1964.20,-2212.10,200.00}},
	{"Arco del Oeste",              {-901.10,2221.80,0.00,-592.00,2571.90,200.00}},
	{"Avispa Country Club",         {-2646.40,-355.40,0.00,-2270.00,-222.50,200.00}},
	{"Avispa Country Club",         {-2831.80,-430.20,-6.10,-2646.40,-222.50,200.00}},
	{"Avispa Country Club",         {-2361.50,-417.10,0.00,-2270.00,-355.40,200.00}},
	{"Avispa Country Club",         {-2667.80,-302.10,-28.80,-2646.40,-262.30,71.10}},
	{"Avispa Country Club",         {-2470.00,-355.40,0.00,-2270.00,-318.40,46.10}},
	{"Avispa Country Club",         {-2550.00,-355.40,0.00,-2470.00,-318.40,39.70}},
	{"Back o Beyond",               {-1166.90,-2641.10,0.00,-321.70,-1856.00,200.00}},
	{"Battery Point",               {-2741.00,1268.40,-4.50,-2533.00,1490.40,200.00}},
	{"Bayside",                     {-2741.00,2175.10,0.00,-2353.10,2722.70,200.00}},
	{"Bayside Marina",              {-2353.10,2275.70,0.00,-2153.10,2475.70,200.00}},
	{"Beacon Hill",                 {-399.60,-1075.50,-1.40,-319.00,-977.50,198.50}},
	{"Blackfield",                  {964.30,1203.20,-89.00,1197.30,1403.20,110.90}},
	{"Blackfield",                  {964.30,1403.20,-89.00,1197.30,1726.20,110.90}},
	{"Blackfield Chapel",           {1375.60,596.30,-89.00,1558.00,823.20,110.90}},
	{"Blackfield Chapel",           {1325.60,596.30,-89.00,1375.60,795.00,110.90}},
	{"Blackfield Intersection",     {1197.30,1044.60,-89.00,1277.00,1163.30,110.90}},
	{"Blackfield Intersection",     {1166.50,795.00,-89.00,1375.60,1044.60,110.90}},
	{"Blackfield Intersection",     {1277.00,1044.60,-89.00,1315.30,1087.60,110.90}},
	{"Blackfield Intersection",     {1375.60,823.20,-89.00,1457.30,919.40,110.90}},
	{"Blueberry",                   {104.50,-220.10,2.30,349.60,152.20,200.00}},
	{"Blueberry",                   {19.60,-404.10,3.80,349.60,-220.10,200.00}},
	{"Blueberry Acres",             {-319.60,-220.10,0.00,104.50,293.30,200.00}},
	{"Caligula's Palace",           {2087.30,1543.20,-89.00,2437.30,1703.20,110.90}},
	{"Caligula's Palace",           {2137.40,1703.20,-89.00,2437.30,1783.20,110.90}},
	{"Calton Heights",              {-2274.10,744.10,-6.10,-1982.30,1358.90,200.00}},
	{"Chinatown",                   {-2274.10,578.30,-7.60,-2078.60,744.10,200.00}},
	{"City Hall",                   {-2867.80,277.40,-9.10,-2593.40,458.40,200.00}},
	{"Come-A-Lot",                  {2087.30,943.20,-89.00,2623.10,1203.20,110.90}},
	{"Commerce",                    {1323.90,-1842.20,-89.00,1701.90,-1722.20,110.90}},
	{"Commerce",                    {1323.90,-1722.20,-89.00,1440.90,-1577.50,110.90}},
	{"Commerce",                    {1370.80,-1577.50,-89.00,1463.90,-1384.90,110.90}},
	{"Commerce",                    {1463.90,-1577.50,-89.00,1667.90,-1430.80,110.90}},
	{"Commerce",                    {1583.50,-1722.20,-89.00,1758.90,-1577.50,110.90}},
	{"Commerce",                    {1667.90,-1577.50,-89.00,1812.60,-1430.80,110.90}},
	{"Conference Center",           {1046.10,-1804.20,-89.00,1323.90,-1722.20,110.90}},
	{"Conference Center",           {1073.20,-1842.20,-89.00,1323.90,-1804.20,110.90}},
	{"Cranberry Station",           {-2007.80,56.30,0.00,-1922.00,224.70,100.00}},
	{"Creek",                       {2749.90,1937.20,-89.00,2921.60,2669.70,110.90}},
	{"Dillimore",                   {580.70,-674.80,-9.50,861.00,-404.70,200.00}},
	{"Doherty",                     {-2270.00,-324.10,-0.00,-1794.90,-222.50,200.00}},
	{"Doherty",                     {-2173.00,-222.50,-0.00,-1794.90,265.20,200.00}},
	{"Downtown",                    {-1982.30,744.10,-6.10,-1871.70,1274.20,200.00}},
	{"Downtown",                    {-1871.70,1176.40,-4.50,-1620.30,1274.20,200.00}},
	{"Downtown",                    {-1700.00,744.20,-6.10,-1580.00,1176.50,200.00}},
	{"Downtown",                    {-1580.00,744.20,-6.10,-1499.80,1025.90,200.00}},
	{"Downtown",                    {-2078.60,578.30,-7.60,-1499.80,744.20,200.00}},
	{"Downtown",                    {-1993.20,265.20,-9.10,-1794.90,578.30,200.00}},
	{"Downtown Los Santos",         {1463.90,-1430.80,-89.00,1724.70,-1290.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1430.80,-89.00,1812.60,-1250.90,110.90}},
	{"Downtown Los Santos",         {1463.90,-1290.80,-89.00,1724.70,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1384.90,-89.00,1463.90,-1170.80,110.90}},
	{"Downtown Los Santos",         {1724.70,-1250.90,-89.00,1812.60,-1150.80,110.90}},
	{"Downtown Los Santos",         {1370.80,-1170.80,-89.00,1463.90,-1130.80,110.90}},
	{"Downtown Los Santos",         {1378.30,-1130.80,-89.00,1463.90,-1026.30,110.90}},
	{"Downtown Los Santos",         {1391.00,-1026.30,-89.00,1463.90,-926.90,110.90}},
	{"Downtown Los Santos",         {1507.50,-1385.20,110.90,1582.50,-1325.30,335.90}},
	{"East Beach",                  {2632.80,-1852.80,-89.00,2959.30,-1668.10,110.90}},
	{"East Beach",                  {2632.80,-1668.10,-89.00,2747.70,-1393.40,110.90}},
	{"East Beach",                  {2747.70,-1668.10,-89.00,2959.30,-1498.60,110.90}},
	{"East Beach",                  {2747.70,-1498.60,-89.00,2959.30,-1120.00,110.90}},
	{"East Los Santos",             {2421.00,-1628.50,-89.00,2632.80,-1454.30,110.90}},
	{"East Los Santos",             {2222.50,-1628.50,-89.00,2421.00,-1494.00,110.90}},
	{"East Los Santos",             {2266.20,-1494.00,-89.00,2381.60,-1372.00,110.90}},
	{"East Los Santos",             {2381.60,-1494.00,-89.00,2421.00,-1454.30,110.90}},
	{"East Los Santos",             {2281.40,-1372.00,-89.00,2381.60,-1135.00,110.90}},
	{"East Los Santos",             {2381.60,-1454.30,-89.00,2462.10,-1135.00,110.90}},
	{"East Los Santos",             {2462.10,-1454.30,-89.00,2581.70,-1135.00,110.90}},
	{"Easter Basin",                {-1794.90,249.90,-9.10,-1242.90,578.30,200.00}},
	{"Easter Basin",                {-1794.90,-50.00,-0.00,-1499.80,249.90,200.00}},
	{"Easter Bay Airport",          {-1499.80,-50.00,-0.00,-1242.90,249.90,200.00}},
	{"Easter Bay Airport",          {-1794.90,-730.10,-3.00,-1213.90,-50.00,200.00}},
	{"Easter Bay Airport",          {-1213.90,-730.10,0.00,-1132.80,-50.00,200.00}},
	{"Easter Bay Airport",          {-1242.90,-50.00,0.00,-1213.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1213.90,-50.00,-4.50,-947.90,578.30,200.00}},
	{"Easter Bay Airport",          {-1315.40,-405.30,15.40,-1264.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1354.30,-287.30,15.40,-1315.40,-209.50,25.40}},
	{"Easter Bay Airport",          {-1490.30,-209.50,15.40,-1264.40,-148.30,25.40}},
	{"Easter Bay Chemicals",        {-1132.80,-768.00,0.00,-956.40,-578.10,200.00}},
	{"Easter Bay Chemicals",        {-1132.80,-787.30,0.00,-956.40,-768.00,200.00}},
	{"El Castillo del Diablo",      {-464.50,2217.60,0.00,-208.50,2580.30,200.00}},
	{"El Castillo del Diablo",      {-208.50,2123.00,-7.60,114.00,2337.10,200.00}},
	{"El Castillo del Diablo",      {-208.50,2337.10,0.00,8.40,2487.10,200.00}},
	{"El Corona",                   {1812.60,-2179.20,-89.00,1970.60,-1852.80,110.90}},
	{"El Corona",                   {1692.60,-2179.20,-89.00,1812.60,-1842.20,110.90}},
	{"El Quebrados",                {-1645.20,2498.50,0.00,-1372.10,2777.80,200.00}},
	{"Esplanade East",              {-1620.30,1176.50,-4.50,-1580.00,1274.20,200.00}},
	{"Esplanade East",              {-1580.00,1025.90,-6.10,-1499.80,1274.20,200.00}},
	{"Esplanade East",              {-1499.80,578.30,-79.60,-1339.80,1274.20,20.30}},
	{"Esplanade North",             {-2533.00,1358.90,-4.50,-1996.60,1501.20,200.00}},
	{"Esplanade North",             {-1996.60,1358.90,-4.50,-1524.20,1592.50,200.00}},
	{"Esplanade North",             {-1982.30,1274.20,-4.50,-1524.20,1358.90,200.00}},
	{"Fallen Tree",                 {-792.20,-698.50,-5.30,-452.40,-380.00,200.00}},
	{"Fallow Bridge",               {434.30,366.50,0.00,603.00,555.60,200.00}},
	{"Fern Ridge",                  {508.10,-139.20,0.00,1306.60,119.50,200.00}},
	{"Financial",                   {-1871.70,744.10,-6.10,-1701.30,1176.40,300.00}},
	{"Fisher's Lagoon",             {1916.90,-233.30,-100.00,2131.70,13.80,200.00}},
	{"Flint Intersection",          {-187.70,-1596.70,-89.00,17.00,-1276.60,110.90}},
	{"Flint Range",                 {-594.10,-1648.50,0.00,-187.70,-1276.60,200.00}},
	{"Fort Carson",                 {-376.20,826.30,-3.00,123.70,1220.40,200.00}},
	{"Foster Valley",               {-2270.00,-430.20,-0.00,-2178.60,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-599.80,-0.00,-1794.90,-324.10,200.00}},
	{"Foster Valley",               {-2178.60,-1115.50,0.00,-1794.90,-599.80,200.00}},
	{"Foster Valley",               {-2178.60,-1250.90,0.00,-1794.90,-1115.50,200.00}},
	{"Frederick Bridge",            {2759.20,296.50,0.00,2774.20,594.70,200.00}},
	{"Gant Bridge",                 {-2741.40,1659.60,-6.10,-2616.40,2175.10,200.00}},
	{"Gant Bridge",                 {-2741.00,1490.40,-6.10,-2616.40,1659.60,200.00}},
	{"Ganton",                      {2222.50,-1852.80,-89.00,2632.80,-1722.30,110.90}},
	{"Ganton",                      {2222.50,-1722.30,-89.00,2632.80,-1628.50,110.90}},
	{"Garcia",                      {-2411.20,-222.50,-0.00,-2173.00,265.20,200.00}},
	{"Garcia",                      {-2395.10,-222.50,-5.30,-2354.00,-204.70,200.00}},
	{"Garver Bridge",               {-1339.80,828.10,-89.00,-1213.90,1057.00,110.90}},
	{"Garver Bridge",               {-1213.90,950.00,-89.00,-1087.90,1178.90,110.90}},
	{"Garver Bridge",               {-1499.80,696.40,-179.60,-1339.80,925.30,20.30}},
	{"Glen Park",                   {1812.60,-1449.60,-89.00,1996.90,-1350.70,110.90}},
	{"Glen Park",                   {1812.60,-1100.80,-89.00,1994.30,-973.30,110.90}},
	{"Glen Park",                   {1812.60,-1350.70,-89.00,2056.80,-1100.80,110.90}},
	{"Green Palms",                 {176.50,1305.40,-3.00,338.60,1520.70,200.00}},
	{"Greenglass College",          {964.30,1044.60,-89.00,1197.30,1203.20,110.90}},
	{"Greenglass College",          {964.30,930.80,-89.00,1166.50,1044.60,110.90}},
	{"Hampton Barns",               {603.00,264.30,0.00,761.90,366.50,200.00}},
	{"Hankypanky Point",            {2576.90,62.10,0.00,2759.20,385.50,200.00}},
	{"Harry Gold Parkway",          {1777.30,863.20,-89.00,1817.30,2342.80,110.90}},
	{"Hashbury",                    {-2593.40,-222.50,-0.00,-2411.20,54.70,200.00}},
	{"Hilltop Farm",                {967.30,-450.30,-3.00,1176.70,-217.90,200.00}},
	{"Hunter Quarry",               {337.20,710.80,-115.20,860.50,1031.70,203.70}},
	{"Idlewood",                    {1812.60,-1852.80,-89.00,1971.60,-1742.30,110.90}},
	{"Idlewood",                    {1812.60,-1742.30,-89.00,1951.60,-1602.30,110.90}},
	{"Idlewood",                    {1951.60,-1742.30,-89.00,2124.60,-1602.30,110.90}},
	{"Idlewood",                    {1812.60,-1602.30,-89.00,2124.60,-1449.60,110.90}},
	{"Idlewood",                    {2124.60,-1742.30,-89.00,2222.50,-1494.00,110.90}},
	{"Idlewood",                    {1971.60,-1852.80,-89.00,2222.50,-1742.30,110.90}},
	{"Jefferson",                   {1996.90,-1449.60,-89.00,2056.80,-1350.70,110.90}},
	{"Jefferson",                   {2124.60,-1494.00,-89.00,2266.20,-1449.60,110.90}},
	{"Jefferson",                   {2056.80,-1372.00,-89.00,2281.40,-1210.70,110.90}},
	{"Jefferson",                   {2056.80,-1210.70,-89.00,2185.30,-1126.30,110.90}},
	{"Jefferson",                   {2185.30,-1210.70,-89.00,2281.40,-1154.50,110.90}},
	{"Jefferson",                   {2056.80,-1449.60,-89.00,2266.20,-1372.00,110.90}},
	{"Julius Thruway East",         {2623.10,943.20,-89.00,2749.90,1055.90,110.90}},
	{"Julius Thruway East",         {2685.10,1055.90,-89.00,2749.90,2626.50,110.90}},
	{"Julius Thruway East",         {2536.40,2442.50,-89.00,2685.10,2542.50,110.90}},
	{"Julius Thruway East",         {2625.10,2202.70,-89.00,2685.10,2442.50,110.90}},
	{"Julius Thruway North",        {2498.20,2542.50,-89.00,2685.10,2626.50,110.90}},
	{"Julius Thruway North",        {2237.40,2542.50,-89.00,2498.20,2663.10,110.90}},
	{"Julius Thruway North",        {2121.40,2508.20,-89.00,2237.40,2663.10,110.90}},
	{"Julius Thruway North",        {1938.80,2508.20,-89.00,2121.40,2624.20,110.90}},
	{"Julius Thruway North",        {1534.50,2433.20,-89.00,1848.40,2583.20,110.90}},
	{"Julius Thruway North",        {1848.40,2478.40,-89.00,1938.80,2553.40,110.90}},
	{"Julius Thruway North",        {1704.50,2342.80,-89.00,1848.40,2433.20,110.90}},
	{"Julius Thruway North",        {1377.30,2433.20,-89.00,1534.50,2507.20,110.90}},
	{"Julius Thruway South",        {1457.30,823.20,-89.00,2377.30,863.20,110.90}},
	{"Julius Thruway South",        {2377.30,788.80,-89.00,2537.30,897.90,110.90}},
	{"Julius Thruway West",         {1197.30,1163.30,-89.00,1236.60,2243.20,110.90}},
	{"Julius Thruway West",         {1236.60,2142.80,-89.00,1297.40,2243.20,110.90}},
	{"Juniper Hill",                {-2533.00,578.30,-7.60,-2274.10,968.30,200.00}},
	{"Juniper Hollow",              {-2533.00,968.30,-6.10,-2274.10,1358.90,200.00}},
	{"K.A.C.C. Military Fuels",     {2498.20,2626.50,-89.00,2749.90,2861.50,110.90}},
	{"Kincaid Bridge",              {-1339.80,599.20,-89.00,-1213.90,828.10,110.90}},
	{"Kincaid Bridge",              {-1213.90,721.10,-89.00,-1087.90,950.00,110.90}},
	{"Kincaid Bridge",              {-1087.90,855.30,-89.00,-961.90,986.20,110.90}},
	{"King's",                      {-2329.30,458.40,-7.60,-1993.20,578.30,200.00}},
	{"King's",                      {-2411.20,265.20,-9.10,-1993.20,373.50,200.00}},
	{"King's",                      {-2253.50,373.50,-9.10,-1993.20,458.40,200.00}},
	{"LVA Freight Depot",           {1457.30,863.20,-89.00,1777.40,1143.20,110.90}},
	{"LVA Freight Depot",           {1375.60,919.40,-89.00,1457.30,1203.20,110.90}},
	{"LVA Freight Depot",           {1277.00,1087.60,-89.00,1375.60,1203.20,110.90}},
	{"LVA Freight Depot",           {1315.30,1044.60,-89.00,1375.60,1087.60,110.90}},
	{"LVA Freight Depot",           {1236.60,1163.40,-89.00,1277.00,1203.20,110.90}},
	{"Las Barrancas",               {-926.10,1398.70,-3.00,-719.20,1634.60,200.00}},
	{"Las Brujas",                  {-365.10,2123.00,-3.00,-208.50,2217.60,200.00}},
	{"Las Colinas",                 {1994.30,-1100.80,-89.00,2056.80,-920.80,110.90}},
	{"Las Colinas",                 {2056.80,-1126.30,-89.00,2126.80,-920.80,110.90}},
	{"Las Colinas",                 {2185.30,-1154.50,-89.00,2281.40,-934.40,110.90}},
	{"Las Colinas",                 {2126.80,-1126.30,-89.00,2185.30,-934.40,110.90}},
	{"Las Colinas",                 {2747.70,-1120.00,-89.00,2959.30,-945.00,110.90}},
	{"Las Colinas",                 {2632.70,-1135.00,-89.00,2747.70,-945.00,110.90}},
	{"Las Colinas",                 {2281.40,-1135.00,-89.00,2632.70,-945.00,110.90}},
	{"Las Payasadas",               {-354.30,2580.30,2.00,-133.60,2816.80,200.00}},
	{"Las Venturas Airport",        {1236.60,1203.20,-89.00,1457.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1203.20,-89.00,1777.30,1883.10,110.90}},
	{"Las Venturas Airport",        {1457.30,1143.20,-89.00,1777.40,1203.20,110.90}},
	{"Las Venturas Airport",        {1515.80,1586.40,-12.50,1729.90,1714.50,87.50}},
	{"Last Dime Motel",             {1823.00,596.30,-89.00,1997.20,823.20,110.90}},
	{"Leafy Hollow",                {-1166.90,-1856.00,0.00,-815.60,-1602.00,200.00}},
	{"Liberty City",                {-1000.00,400.00,1300.00,-700.00,600.00,1400.00}},
	{"Lil' Probe Inn",              {-90.20,1286.80,-3.00,153.80,1554.10,200.00}},
	{"Linden Side",                 {2749.90,943.20,-89.00,2923.30,1198.90,110.90}},
	{"Linden Station",              {2749.90,1198.90,-89.00,2923.30,1548.90,110.90}},
	{"Linden Station",              {2811.20,1229.50,-39.50,2861.20,1407.50,60.40}},
	{"Little Mexico",               {1701.90,-1842.20,-89.00,1812.60,-1722.20,110.90}},
	{"Little Mexico",               {1758.90,-1722.20,-89.00,1812.60,-1577.50,110.90}},
	{"Los Flores",                  {2581.70,-1454.30,-89.00,2632.80,-1393.40,110.90}},
	{"Los Flores",                  {2581.70,-1393.40,-89.00,2747.70,-1135.00,110.90}},
	{"Los Santos International",    {1249.60,-2394.30,-89.00,1852.00,-2179.20,110.90}},
	{"Los Santos International",    {1852.00,-2394.30,-89.00,2089.00,-2179.20,110.90}},
	{"Los Santos International",    {1382.70,-2730.80,-89.00,2201.80,-2394.30,110.90}},
	{"Los Santos International",    {1974.60,-2394.30,-39.00,2089.00,-2256.50,60.90}},
	{"Los Santos International",    {1400.90,-2669.20,-39.00,2189.80,-2597.20,60.90}},
	{"Los Santos International",    {2051.60,-2597.20,-39.00,2152.40,-2394.30,60.90}},
	{"Marina",                      {647.70,-1804.20,-89.00,851.40,-1577.50,110.90}},
	{"Marina",                      {647.70,-1577.50,-89.00,807.90,-1416.20,110.90}},
	{"Marina",                      {807.90,-1577.50,-89.00,926.90,-1416.20,110.90}},
	{"Market",                      {787.40,-1416.20,-89.00,1072.60,-1310.20,110.90}},
	{"Market",                      {952.60,-1310.20,-89.00,1072.60,-1130.80,110.90}},
	{"Market",                      {1072.60,-1416.20,-89.00,1370.80,-1130.80,110.90}},
	{"Market",                      {926.90,-1577.50,-89.00,1370.80,-1416.20,110.90}},
	{"Market Station",              {787.40,-1410.90,-34.10,866.00,-1310.20,65.80}},
	{"Martin Bridge",               {-222.10,293.30,0.00,-122.10,476.40,200.00}},
	{"Missionary Hill",             {-2994.40,-811.20,0.00,-2178.60,-430.20,200.00}},
	{"Montgomery",                  {1119.50,119.50,-3.00,1451.40,493.30,200.00}},
	{"Montgomery",                  {1451.40,347.40,-6.10,1582.40,420.80,200.00}},
	{"Montgomery Intersection",     {1546.60,208.10,0.00,1745.80,347.40,200.00}},
	{"Montgomery Intersection",     {1582.40,347.40,0.00,1664.60,401.70,200.00}},
	{"Mulholland",                  {1414.00,-768.00,-89.00,1667.60,-452.40,110.90}},
	{"Mulholland",                  {1281.10,-452.40,-89.00,1641.10,-290.90,110.90}},
	{"Mulholland",                  {1269.10,-768.00,-89.00,1414.00,-452.40,110.90}},
	{"Mulholland",                  {1357.00,-926.90,-89.00,1463.90,-768.00,110.90}},
	{"Mulholland",                  {1318.10,-910.10,-89.00,1357.00,-768.00,110.90}},
	{"Mulholland",                  {1169.10,-910.10,-89.00,1318.10,-768.00,110.90}},
	{"Mulholland",                  {768.60,-954.60,-89.00,952.60,-860.60,110.90}},
	{"Mulholland",                  {687.80,-860.60,-89.00,911.80,-768.00,110.90}},
	{"Mulholland",                  {737.50,-768.00,-89.00,1142.20,-674.80,110.90}},
	{"Mulholland",                  {1096.40,-910.10,-89.00,1169.10,-768.00,110.90}},
	{"Mulholland",                  {952.60,-937.10,-89.00,1096.40,-860.60,110.90}},
	{"Mulholland",                  {911.80,-860.60,-89.00,1096.40,-768.00,110.90}},
	{"Mulholland",                  {861.00,-674.80,-89.00,1156.50,-600.80,110.90}},
	{"Mulholland Intersection",     {1463.90,-1150.80,-89.00,1812.60,-768.00,110.90}},
	{"North Rock",                  {2285.30,-768.00,0.00,2770.50,-269.70,200.00}},
	{"Ocean Docks",                 {2373.70,-2697.00,-89.00,2809.20,-2330.40,110.90}},
	{"Ocean Docks",                 {2201.80,-2418.30,-89.00,2324.00,-2095.00,110.90}},
	{"Ocean Docks",                 {2324.00,-2302.30,-89.00,2703.50,-2145.10,110.90}},
	{"Ocean Docks",                 {2089.00,-2394.30,-89.00,2201.80,-2235.80,110.90}},
	{"Ocean Docks",                 {2201.80,-2730.80,-89.00,2324.00,-2418.30,110.90}},
	{"Ocean Docks",                 {2703.50,-2302.30,-89.00,2959.30,-2126.90,110.90}},
	{"Ocean Docks",                 {2324.00,-2145.10,-89.00,2703.50,-2059.20,110.90}},
	{"Ocean Flats",                 {-2994.40,277.40,-9.10,-2867.80,458.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-222.50,-0.00,-2593.40,277.40,200.00}},
	{"Ocean Flats",                 {-2994.40,-430.20,-0.00,-2831.80,-222.50,200.00}},
	{"Octane Springs",              {338.60,1228.50,0.00,664.30,1655.00,200.00}},
	{"Old Venturas Strip",          {2162.30,2012.10,-89.00,2685.10,2202.70,110.90}},
	{"Palisades",                   {-2994.40,458.40,-6.10,-2741.00,1339.60,200.00}},
	{"Palomino Creek",              {2160.20,-149.00,0.00,2576.90,228.30,200.00}},
	{"Paradiso",                    {-2741.00,793.40,-6.10,-2533.00,1268.40,200.00}},
	{"Pershing Square",             {1440.90,-1722.20,-89.00,1583.50,-1577.50,110.90}},
	{"Pilgrim",                     {2437.30,1383.20,-89.00,2624.40,1783.20,110.90}},
	{"Pilgrim",                     {2624.40,1383.20,-89.00,2685.10,1783.20,110.90}},
	{"Pilson Intersection",         {1098.30,2243.20,-89.00,1377.30,2507.20,110.90}},
	{"Pirates in Men's Pants",      {1817.30,1469.20,-89.00,2027.40,1703.20,110.90}},
	{"Playa del Seville",           {2703.50,-2126.90,-89.00,2959.30,-1852.80,110.90}},
	{"Prickle Pine",                {1534.50,2583.20,-89.00,1848.40,2863.20,110.90}},
	{"Prickle Pine",                {1117.40,2507.20,-89.00,1534.50,2723.20,110.90}},
	{"Prickle Pine",                {1848.40,2553.40,-89.00,1938.80,2863.20,110.90}},
	{"Prickle Pine",                {1938.80,2624.20,-89.00,2121.40,2861.50,110.90}},
	{"Queens",                      {-2533.00,458.40,0.00,-2329.30,578.30,200.00}},
	{"Queens",                      {-2593.40,54.70,0.00,-2411.20,458.40,200.00}},
	{"Queens",                      {-2411.20,373.50,0.00,-2253.50,458.40,200.00}},
	{"Randolph Industrial Estate",  {1558.00,596.30,-89.00,1823.00,823.20,110.90}},
	{"Redsands East",               {1817.30,2011.80,-89.00,2106.70,2202.70,110.90}},
	{"Redsands East",               {1817.30,2202.70,-89.00,2011.90,2342.80,110.90}},
	{"Redsands East",               {1848.40,2342.80,-89.00,2011.90,2478.40,110.90}},
	{"Redsands West",               {1236.60,1883.10,-89.00,1777.30,2142.80,110.90}},
	{"Redsands West",               {1297.40,2142.80,-89.00,1777.30,2243.20,110.90}},
	{"Redsands West",               {1377.30,2243.20,-89.00,1704.50,2433.20,110.90}},
	{"Redsands West",               {1704.50,2243.20,-89.00,1777.30,2342.80,110.90}},
	{"Regular Tom",                 {-405.70,1712.80,-3.00,-276.70,1892.70,200.00}},
	{"Richman",                     {647.50,-1118.20,-89.00,787.40,-954.60,110.90}},
	{"Richman",                     {647.50,-954.60,-89.00,768.60,-860.60,110.90}},
	{"Richman",                     {225.10,-1369.60,-89.00,334.50,-1292.00,110.90}},
	{"Richman",                     {225.10,-1292.00,-89.00,466.20,-1235.00,110.90}},
	{"Richman",                     {72.60,-1404.90,-89.00,225.10,-1235.00,110.90}},
	{"Richman",                     {72.60,-1235.00,-89.00,321.30,-1008.10,110.90}},
	{"Richman",                     {321.30,-1235.00,-89.00,647.50,-1044.00,110.90}},
	{"Richman",                     {321.30,-1044.00,-89.00,647.50,-860.60,110.90}},
	{"Richman",                     {321.30,-860.60,-89.00,687.80,-768.00,110.90}},
	{"Richman",                     {321.30,-768.00,-89.00,700.70,-674.80,110.90}},
	{"Robada Intersection",         {-1119.00,1178.90,-89.00,-862.00,1351.40,110.90}},
	{"Roca Escalante",              {2237.40,2202.70,-89.00,2536.40,2542.50,110.90}},
	{"Roca Escalante",              {2536.40,2202.70,-89.00,2625.10,2442.50,110.90}},
	{"Rockshore East",              {2537.30,676.50,-89.00,2902.30,943.20,110.90}},
	{"Rockshore West",              {1997.20,596.30,-89.00,2377.30,823.20,110.90}},
	{"Rockshore West",              {2377.30,596.30,-89.00,2537.30,788.80,110.90}},
	{"Rodeo",                       {72.60,-1684.60,-89.00,225.10,-1544.10,110.90}},
	{"Rodeo",                       {72.60,-1544.10,-89.00,225.10,-1404.90,110.90}},
	{"Rodeo",                       {225.10,-1684.60,-89.00,312.80,-1501.90,110.90}},
	{"Rodeo",                       {225.10,-1501.90,-89.00,334.50,-1369.60,110.90}},
	{"Rodeo",                       {334.50,-1501.90,-89.00,422.60,-1406.00,110.90}},
	{"Rodeo",                       {312.80,-1684.60,-89.00,422.60,-1501.90,110.90}},
	{"Rodeo",                       {422.60,-1684.60,-89.00,558.00,-1570.20,110.90}},
	{"Rodeo",                       {558.00,-1684.60,-89.00,647.50,-1384.90,110.90}},
	{"Rodeo",                       {466.20,-1570.20,-89.00,558.00,-1385.00,110.90}},
	{"Rodeo",                       {422.60,-1570.20,-89.00,466.20,-1406.00,110.90}},
	{"Rodeo",                       {466.20,-1385.00,-89.00,647.50,-1235.00,110.90}},
	{"Rodeo",                       {334.50,-1406.00,-89.00,466.20,-1292.00,110.90}},
	{"Royal Casino",                {2087.30,1383.20,-89.00,2437.30,1543.20,110.90}},
	{"San Andreas Sound",           {2450.30,385.50,-100.00,2759.20,562.30,200.00}},
	{"Santa Flora",                 {-2741.00,458.40,-7.60,-2533.00,793.40,200.00}},
	{"Santa Maria Beach",           {342.60,-2173.20,-89.00,647.70,-1684.60,110.90}},
	{"Santa Maria Beach",           {72.60,-2173.20,-89.00,342.60,-1684.60,110.90}},
	{"Shady Cabin",                 {-1632.80,-2263.40,-3.00,-1601.30,-2231.70,200.00}},
	{"Shady Creeks",                {-1820.60,-2643.60,-8.00,-1226.70,-1771.60,200.00}},
	{"Shady Creeks",                {-2030.10,-2174.80,-6.10,-1820.60,-1771.60,200.00}},
	{"Sobell Rail Yards",           {2749.90,1548.90,-89.00,2923.30,1937.20,110.90}},
	{"Spinybed",                    {2121.40,2663.10,-89.00,2498.20,2861.50,110.90}},
	{"Starfish Casino",             {2437.30,1783.20,-89.00,2685.10,2012.10,110.90}},
	{"Starfish Casino",             {2437.30,1858.10,-39.00,2495.00,1970.80,60.90}},
	{"Starfish Casino",             {2162.30,1883.20,-89.00,2437.30,2012.10,110.90}},
	{"Temple",                      {1252.30,-1130.80,-89.00,1378.30,-1026.30,110.90}},
	{"Temple",                      {1252.30,-1026.30,-89.00,1391.00,-926.90,110.90}},
	{"Temple",                      {1252.30,-926.90,-89.00,1357.00,-910.10,110.90}},
	{"Temple",                      {952.60,-1130.80,-89.00,1096.40,-937.10,110.90}},
	{"Temple",                      {1096.40,-1130.80,-89.00,1252.30,-1026.30,110.90}},
	{"Temple",                      {1096.40,-1026.30,-89.00,1252.30,-910.10,110.90}},
	{"The Camel's Toe",             {2087.30,1203.20,-89.00,2640.40,1383.20,110.90}},
	{"The Clown's Pocket",          {2162.30,1783.20,-89.00,2437.30,1883.20,110.90}},
	{"The Emerald Isle",            {2011.90,2202.70,-89.00,2237.40,2508.20,110.90}},
	{"The Farm",                    {-1209.60,-1317.10,114.90,-908.10,-787.30,251.90}},
	{"The Four Dragons Casino",     {1817.30,863.20,-89.00,2027.30,1083.20,110.90}},
	{"The High Roller",             {1817.30,1283.20,-89.00,2027.30,1469.20,110.90}},
	{"The Mako Span",               {1664.60,401.70,0.00,1785.10,567.20,200.00}},
	{"The Panopticon",              {-947.90,-304.30,-1.10,-319.60,327.00,200.00}},
	{"The Pink Swan",               {1817.30,1083.20,-89.00,2027.30,1283.20,110.90}},
	{"The Sherman Dam",             {-968.70,1929.40,-3.00,-481.10,2155.20,200.00}},
	{"The Strip",                   {2027.40,863.20,-89.00,2087.30,1703.20,110.90}},
	{"The Strip",                   {2106.70,1863.20,-89.00,2162.30,2202.70,110.90}},
	{"The Strip",                   {2027.40,1783.20,-89.00,2162.30,1863.20,110.90}},
	{"The Strip",                   {2027.40,1703.20,-89.00,2137.40,1783.20,110.90}},
	{"The Visage",                  {1817.30,1863.20,-89.00,2106.70,2011.80,110.90}},
	{"The Visage",                  {1817.30,1703.20,-89.00,2027.40,1863.20,110.90}},
	{"Unity Station",               {1692.60,-1971.80,-20.40,1812.60,-1932.80,79.50}},
	{"Valle Ocultado",              {-936.60,2611.40,2.00,-715.90,2847.90,200.00}},
	{"Verdant Bluffs",              {930.20,-2488.40,-89.00,1249.60,-2006.70,110.90}},
	{"Verdant Bluffs",              {1073.20,-2006.70,-89.00,1249.60,-1842.20,110.90}},
	{"Verdant Bluffs",              {1249.60,-2179.20,-89.00,1692.60,-1842.20,110.90}},
	{"Verdant Meadows",             {37.00,2337.10,-3.00,435.90,2677.90,200.00}},
	{"Verona Beach",                {647.70,-2173.20,-89.00,930.20,-1804.20,110.90}},
	{"Verona Beach",                {930.20,-2006.70,-89.00,1073.20,-1804.20,110.90}},
	{"Verona Beach",                {851.40,-1804.20,-89.00,1046.10,-1577.50,110.90}},
	{"Verona Beach",                {1161.50,-1722.20,-89.00,1323.90,-1577.50,110.90}},
	{"Verona Beach",                {1046.10,-1722.20,-89.00,1161.50,-1577.50,110.90}},
	{"Vinewood",                    {787.40,-1310.20,-89.00,952.60,-1130.80,110.90}},
	{"Vinewood",                    {787.40,-1130.80,-89.00,952.60,-954.60,110.90}},
	{"Vinewood",                    {647.50,-1227.20,-89.00,787.40,-1118.20,110.90}},
	{"Vinewood",                    {647.70,-1416.20,-89.00,787.40,-1227.20,110.90}},
	{"Whitewood Estates",           {883.30,1726.20,-89.00,1098.30,2507.20,110.90}},
	{"Whitewood Estates",           {1098.30,1726.20,-89.00,1197.30,2243.20,110.90}},
	{"Willowfield",                 {1970.60,-2179.20,-89.00,2089.00,-1852.80,110.90}},
	{"Willowfield",                 {2089.00,-2235.80,-89.00,2201.80,-1989.90,110.90}},
	{"Willowfield",                 {2089.00,-1989.90,-89.00,2324.00,-1852.80,110.90}},
	{"Willowfield",                 {2201.80,-2095.00,-89.00,2324.00,-1989.90,110.90}},
	{"Willowfield",                 {2541.70,-1941.40,-89.00,2703.50,-1852.80,110.90}},
	{"Willowfield",                 {2324.00,-2059.20,-89.00,2541.70,-1852.80,110.90}},
	{"Willowfield",                 {2541.70,-2059.20,-89.00,2703.50,-1941.40,110.90}},
	{"Yellow Bell Station",         {1377.40,2600.40,-21.90,1492.40,2687.30,78.00}},
	// Main Zones
	{"Los Santos",                  {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",                {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",                 {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada",               {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada",               {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",                  {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",                  {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",                {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",                   {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};

/*
		вакансии
*/

enum Vacancy
{
	VacancyCreator,
	bool: VacancyStatus,
	VacancyText[120],
	VacancyFraction,
};
new VacancyInfo[10][Vacancy];

#if defined __anti_godmode
#endinput
#endif

#define __anti_godmode


new player_legal_gun[MAX_PLAYERS];
new player_legal_damage[MAX_PLAYERS];
new player_gm[MAX_PLAYERS];
new player_killed[MAX_PLAYERS];
new player_killed_sync[MAX_PLAYERS];
new Float:player_death_pos [MAX_PLAYERS][3];

stock ClearVehInfo(veh) portInfo[veh] = E_BUREAU_INFO__EOS_;

stock bicycles(vehicleid){
new model = GetVehicleModel(vehicleid); if(model == 481 || model == 509 || model == 510)
return true;return false;}

stock is_russian_text(text[])
{
    if(strfind(text, "а", true) != -1) return 1;
    if(strfind(text, "б", true) != -1) return 1;
    if(strfind(text, "в", true) != -1) return 1;
    if(strfind(text, "г", true) != -1) return 1;
    if(strfind(text, "д", true) != -1) return 1;
    if(strfind(text, "е", true) != -1) return 1;
    if(strfind(text, "ё", true) != -1) return 1;
    if(strfind(text, "ж", true) != -1) return 1;
    if(strfind(text, "з", true) != -1) return 1;
    if(strfind(text, "и", true) != -1) return 1;
    if(strfind(text, "й", true) != -1) return 1;
    if(strfind(text, "к", true) != -1) return 1;
    if(strfind(text, "л", true) != -1) return 1;
    if(strfind(text, "м", true) != -1) return 1;
    if(strfind(text, "н", true) != -1) return 1;
    if(strfind(text, "о", true) != -1) return 1;
    if(strfind(text, "п", true) != -1) return 1;
    if(strfind(text, "р", true) != -1) return 1;
    if(strfind(text, "с", true) != -1) return 1;
    if(strfind(text, "т", true) != -1) return 1;
    if(strfind(text, "у", true) != -1) return 1;
    if(strfind(text, "ф", true) != -1) return 1;
    if(strfind(text, "х", true) != -1) return 1;
    if(strfind(text, "ц", true) != -1) return 1;
    if(strfind(text, "ч", true) != -1) return 1;
    if(strfind(text, "ш", true) != -1) return 1;
    if(strfind(text, "щ", true) != -1) return 1;
    if(strfind(text, "ъ", true) != -1) return 1;
    if(strfind(text, "ы", true) != -1) return 1;
    if(strfind(text, "ь", true) != -1) return 1;
    if(strfind(text, "э", true) != -1) return 1;
    if(strfind(text, "ю", true) != -1) return 1;
    if(strfind(text, "я", true) != -1) return 1;
    if(strfind(text, " ", true) != -1) return 1;
    if(strfind(text, ",", true) != -1) return 1;
    if(strfind(text, "[", true) != -1) return 1;
    if(strfind(text, "]", true) != -1) return 1;
    return 0;
}

stock ArmorDamage(playerid,attackerid,weaponid,Float:ammount)
{
	#pragma unused attackerid
	#pragma unused weaponid

	if(p_t_info[playerid][p_armour]<= 0)
	           return 0;

	if(p_t_info[playerid][p_armour] -ammount <= 0)
	set_armour(playerid,0.0);
	else
	set_armour(playerid,p_t_info[playerid][p_armour] -ammount);

	return 1;
}

stock HealthDamage(playerid,attackerid,weaponid,Float:ammount)
{
	#if defined debug_mode
		printf("HealthDamage");
	#endif
	if((p_t_info[playerid][p_health] -ammount) <= 0.0)
	{
		#if defined debug_mode
			printf("p_t_info[playerid][p_health] -ammount) <= 0.0");
		#endif
		GetPlayerPos(playerid, player_death_pos[playerid][0], player_death_pos[playerid][1], player_death_pos[playerid][2]);
		set_health(playerid, 0.0);
		OnPlayerSyncDeath(playerid, attackerid, weaponid);
		player_killed[playerid] = 1;
	}
	else
	{
		#if defined debug_mode
			printf("set_health");
		#endif
		set_health(playerid,p_t_info[playerid][p_health] -ammount);
	}

    return 1;
}


stock GiveDamageForPlayer(playerid,attackerid,weaponid,Float:ammount)
{
	#if defined debug_mode
		printf("GiveDamageForPlayer");
	#endif
	if(p_t_info[playerid][p_armour] >= 1)
	{
		if(p_t_info[playerid][p_armour] -ammount <= 0)
		{
  			set_armour(playerid, 0.0);
			HealthDamage(playerid,attackerid,weaponid,ammount -p_t_info[playerid][p_armour]);
		}
		else
			ArmorDamage(playerid,attackerid,weaponid,ammount);
	}
	else
		HealthDamage(playerid,attackerid,weaponid,ammount);

	return 1;
}

stock antigm_OnPlayerSpawn(playerid)
{
	SetPlayerTeam(playerid, 1);
	player_killed[playerid] = 0;
	player_killed_sync[playerid] = 0;
	return 1;
}

stock antigm_OnPlayerDeath(playerid, killerid, reason)
{
	#pragma unused killerid
	#pragma unused reason

	player_killed_sync[playerid] = 1;
	return 1;
}

stock antigm_OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
    #pragma unused fX
	#pragma unused fY
	#pragma unused fZ

    if(hittype == BULLET_HIT_TYPE_PLAYER)
	{
		if(IsPlayerStreamedIn(hitid, playerid) && IsPlayerStreamedIn(playerid, hitid))
		{
			if(player_gm[hitid]) return 0;

			if(GetTickCount() -p_t_info[hitid][p_update] > 1000) return 0;

	  		if(player_killed[playerid]) return 0;


	  		if(!ProxDetectorS(150.0, playerid, hitid)) return 0;

	  		player_legal_gun[playerid] = weaponid;
	  		player_legal_damage[playerid] = hitid;

		}
	}

	if(hittype == BULLET_HIT_TYPE_VEHICLE)
	{
		foreach(new i: logged_players)
		{
			if(GetPlayerVehicleID(i) ==  hitid)
			{
				if(IsPlayerStreamedIn(i, playerid) && IsPlayerStreamedIn(playerid, i))
				{
					if(player_gm[i]) return 0;

					if(player_killed[playerid]) return 0;


					if(!ProxDetectorS(150.0, playerid, i)) return 0;

					player_legal_gun[playerid] = weaponid;
					player_legal_damage[playerid] = i;

				}
			}
		}
	}
	return 1;
}


stock antigm_OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart)
{

	#pragma unused bodypart
 	#if defined debug_mode
		printf("[DEBUG] [antigm_OnPlayerGiveDamage] playerid:%d | damagedid:%d | amount:%f | weaponid:%d", playerid, damagedid, amount, weaponid);
	#endif

 	if(weaponid != 43 && weaponid != 9 && GetPlayerSpecialAction(playerid)!= SPECIAL_ACTION_DRINK_SPRUNK &&  GetPlayerSpecialAction(playerid)!= SPECIAL_ACTION_DRINK_WINE && GetPlayerSpecialAction(playerid)!= SPECIAL_ACTION_SMOKE_CIGGY && GetPlayerSpecialAction(playerid)!=SPECIAL_ACTION_DRINK_BEER)
	{
		if(!cop_player(playerid) && ! army_player(playerid) && ! gov_player(playerid) && ! fbi_player(playerid))
		{
			for(new j = 0; j < MAX_DM_ZONE; j ++)
			{
				if(!IsPlayerInQuad(playerid, anti_dm_pos[j][0], anti_dm_pos[j][1], anti_dm_pos[j][2], anti_dm_pos[j][3])) continue;
				anti_dm_warning {playerid} ++;
				show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Предупреждение",""c_white"В этом месте запрещено драться/стрелять.\n\n"c_orange_red"* В случае повторных нарушений Вы можете быть кикнуты.", "Принять", "");
				if(anti_dm_warning {playerid} >= 5)SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey" Вы были кикнуты за попытки "c_orange_red"DM"c_grey" в общественном месте."), kick_player(playerid);
				ApplyAnimation(playerid,"FAT","IDLE_tired",3.0,1,0,0,0,3000,1);
				return 0;
			}
		}
		if(gang_player(playerid) && gang_player(damagedid) && PlayerInfo[playerid][member] == PlayerInfo[damagedid][member]&& duel_opponent[playerid] == INVALID_PLAYER_ID && duel_opponent[damagedid] == INVALID_PLAYER_ID && TeamPaint[playerid] == 0)
		{
			anti_dm_warning {playerid} ++;
			show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Предупреждение",""c_white"Нельзя пытаться нанести урон членам своей банды.\n\n"c_orange_red"* В случае повторных нарушений Вы можете быть кикнуты.", "Принять", "");
			if(anti_dm_warning {playerid} >= 5)
			{
				anti_dm_warning {playerid} = 0;
				SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey" Вы были кикнуты за попытки "c_orange_red"Team-kill"), kick_player(playerid);
			}
			ApplyAnimation(playerid,"FAT","IDLE_tired",3.0,1,0,0,0,3000,1);
		}
	}
	if(PlayerInfo[playerid][jailed] > 0)
	{
		anti_dm_warning {playerid} ++;
		show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Предупреждение",""c_white"В этом месте запрещено драться/стрелять.\n\n"c_orange_red"* В случае повторных нарушений Вы можете быть кикнуты.", "Принять", "");
		if(anti_dm_warning {playerid} >= 5)SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey" Вы были кикнуты за попытки "c_orange_red"DM"c_grey" в общественном месте."), kick_player(playerid);
		ApplyAnimation(playerid,"FAT","IDLE_tired",3.0,1,0,0,0,3000,1);
		return 0;
	}
	if(weaponid == 9)
	{
		if(IsPlayerInRangeOfPoint(playerid, 150.0, -1092.1349, -1643.6737, 76.373) && ! IsPlayerInRangeOfPoint(playerid, 5, tree_positions[GetPVarInt(playerid, #Derevo)][0], tree_positions[GetPVarInt(playerid, #Derevo)][1],tree_positions[GetPVarInt(playerid, #Derevo)][2]))
		{
			anti_dm_warning {playerid} ++;
			show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Предупреждение",""c_white"Запрещено использовать бензопилу не по назначению.\n\n"c_orange_red"* В случае повторных нарушений Вы можете быть кикнуты.", "Принять", "");
			if(anti_dm_warning {playerid} >= 5)SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey" Вы были кикнуты за попытки "c_orange_red"DM"c_grey" в общественном месте."), kick_player(playerid);
			return 0;
		}
	}
    if(((22 <= weaponid <= 34) || weaponid == 38))
	{
		#if defined debug_mode
			printf("22 <= weaponid <= 34) || weaponid == 38");
		#endif
	    if(IsPlayerStreamedIn(damagedid, playerid) && IsPlayerStreamedIn(playerid, damagedid))
		{
			if(pl_afk_time[playerid] > 2) return 1;
	  		if(player_killed[playerid]) return 0;


	  		if(!ProxDetectorS(150.0, playerid, damagedid)) return 1;

	  		if(player_legal_gun[playerid] == weaponid && player_legal_damage[playerid] == damagedid)
			{


			    switch(weaponid)
				{
					case 22: GiveDamageForPlayer(damagedid, playerid, weaponid, 4.0); // Colt
					case 23: GiveDamageForPlayer(damagedid, playerid, weaponid, 14.0); // SD Pistol
					case 24:
					{
					    if(PlayerInfo[playerid][gun_skills][1] < 20)
					    {
					        GiveDamageForPlayer(damagedid, playerid, weaponid, 24.0); // Deagle
						}
						else
						{
							GiveDamageForPlayer(damagedid, playerid, weaponid, 47.0); // Deagle
						}
					}
					case 25:
					{
					    if(amount <= 0.0 || amount > 30.0) amount = 30.0;
						GiveDamageForPlayer(damagedid, playerid, weaponid, amount); // Shotgun
					}
					case 28: GiveDamageForPlayer(damagedid, playerid, weaponid, 6.0);  // Micro-Uzi
					case 29: GiveDamageForPlayer(damagedid, playerid, weaponid, 8.0);  // MP5
					case 30: GiveDamageForPlayer(damagedid, playerid, weaponid, 10.0); // AK-47
					case 31: GiveDamageForPlayer(damagedid, playerid, weaponid, 10.0); // M4A1
					case 33: GiveDamageForPlayer(damagedid, playerid, weaponid, 25.0); // Rifle
					case 34: GiveDamageForPlayer(damagedid, playerid, weaponid, 41.0); // Sniper
					case 38: GiveDamageForPlayer(damagedid, playerid, weaponid, 47.0); // Minigun
					default: return 1;
				}

				player_legal_gun[playerid] = 0;
    			player_legal_damage[playerid] = INVALID_PLAYER_ID;
			}

		}
		return 1;
	}
	else
	{
	    if(player_gm[damagedid]) return 1;

	    if(player_killed[playerid]) return 0;

	    if(amount <= 0.0 || amount > 7.0) return 1;

	    if(!ProxDetectorS(5.0, playerid, damagedid)) return 1;

		#if defined IsAntiFist
  		if(IsAntiFist(playerid)) return 1;
  		#endif

		GiveDamageForPlayer(damagedid, playerid, weaponid, amount);
	}
	return 1;
}

stock antigm_OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
    #pragma unused bodypart

    if(weaponid == 49 || weaponid == 50)
	{
	    if(amount <= 0.0) return 1;

	    if(IsPlayerStreamedIn(issuerid, playerid))
	    {
	    	if(IsPlayerInAnyVehicle(issuerid))
			{
			    if(!player_gm[playerid]) GiveDamageForPlayer(playerid, issuerid, weaponid, amount);
			}
		}
	}
	return 1;
}

stock antigm_OnPlayerConnect(playerid)
{
    player_legal_gun[playerid] = 0;
    player_legal_damage[playerid] = INVALID_PLAYER_ID;
    player_gm[playerid] = 0;
	player_killed[playerid] = 0;
	player_killed_sync[playerid] = 0;
	return 1;
}

stock _DestroyDynamicObject(objectid)
{
	if(objectid < static_object_count) return printf("[STREAMER ERROR] %d objectid destroy warning. Try to destroy static object.");
	return DestroyDynamicObject(objectid);
}

stock _CreateDynamicPickup(modelid, type, Float:x, Float:y, Float:z, worldid = -1, interiorid = -1, playerid = -1)
{
	new pickupid = CreateDynamicPickup(modelid, type, x, y, z, worldid, interiorid, playerid);

	pick_info[pickupid][pick_pos][0] = x;
	pick_info[pickupid][pick_pos][1] = y;
	pick_info[pickupid][pick_pos][2] = z;
	return pickupid;
}
#if defined _ALS_CreateDynamicPickup
    #undef CreateDynamicPickup
#else
    #define _ALS_CreateDynamicPickup
#endif
#define CreateDynamicPickup _CreateDynamicPickup


stock GetVehicleSpeed(vehicleid)
{
    new Float:X, Float:Y, Float:Z, Float:_speed;
    GetVehicleVelocity(vehicleid, X, Y, Z);
    _speed =((floatsqroot((X*X) + (Y*Y))*10) / 1.65)* 30;
    return floatround(_speed, floatround_round);
}
stock GetVehicleSpeed_(vehicleid)
{
    new Float:Px,Float:Py,Float:Pz;
    GetVehicleVelocity(vehicleid,Px,Py,Pz);
    return floatround(floatsqroot(Px*Px+Py*Py+Pz*Pz) * 100.0);
}


stock get_player_veh_count(playerid)
{
	new _veh_count = 0,
		query_string[78];
	format(query_string, sizeof(query_string),"SELECT * FROM users_vehicles WHERE v_owner = '%d'", PlayerInfo[playerid][id]);
	new Cache:result = mysql_query(sql_connection, query_string);
	_veh_count = cache_num_rows();
	cache_delete(result);
	return _veh_count;
}

stock get_player_admin_level(u_a_name[])
{
    new _adm_level = 0, _adm_count = 0, query_string[95];
    format(query_string, sizeof(query_string), "SELECT `u_a_level` FROM `users_admins` WHERE `u_a_name`='%s' LIMIT 1", u_a_name);
    new Cache:result = mysql_query(sql_connection, query_string);
    _adm_count = cache_num_rows();
    if(_adm_count)
	{
		_adm_level = cache_get_field_content_int(0, "u_a_level", sql_connection);
	}
    cache_delete(result);
    return _adm_level;
}

stock get_player_warn_count(playerid)
{
	new _warn_count = 0,
		query_string[78];

	format(query_string, sizeof(query_string),"SELECT * FROM users_warns WHERE w_owner = '%d' AND `w_end` > NOW()", PlayerInfo[playerid][id]);
	new Cache:result = mysql_query(sql_connection, query_string);
	_warn_count = cache_num_rows();
	cache_delete(result);
	return _warn_count;
}

stock get_player_account_id(_pl_name[])
{
    new _account_id = 0, _a_count = 0, query_string[100];
    format(query_string, sizeof(query_string), "SELECT `u_id` FROM `users` WHERE `u_name`='%s' LIMIT 1", _pl_name);
    new Cache:result = mysql_query(sql_connection, query_string);
    _a_count = cache_num_rows();
    if(_a_count) _account_id = cache_get_field_content_int(0, "u_id", sql_connection);
    cache_delete(result);
    return _account_id;
}

stock is_player_fraction_bl(playerid, fractionid)
{
	new _bl_count = 0;

	static query_string[] = "SELECT * FROM `fractions_blacklist` WHERE bl_player = '%d' AND bl_fraction = '%d'";
	new fmt_query[(sizeof(query_string) -4) + 11 * 2];
	format(fmt_query, sizeof(fmt_query), query_string, PlayerInfo[playerid][id], fractionid);
	new Cache:result = mysql_query(sql_connection, fmt_query);
	_bl_count = cache_num_rows();
	cache_delete(result);
	return _bl_count;
}

stock is_player_family_bl(playerid, familyid)
{
    new _bl_count = 0, query_string[125];
    format(query_string, sizeof(query_string), "SELECT `bl_player`,`bl_family` FROM `family_blacklist` WHERE `bl_player`='%d' AND `bl_family`='%d' LIMIT 1", PlayerInfo[playerid][id], familyid);
    new Cache:result = mysql_query(sql_connection, query_string);
    _bl_count = cache_num_rows();
    cache_delete(result);
    return _bl_count;
}

stock find_last_family()
{
    new _fam_count = 0, _fam_id = 0;
    new Cache:result = mysql_query(sql_connection, "SELECT `fam_id` FROM `family` ORDER BY `family`.`fam_id` DESC LIMIT 1");
    _fam_count = cache_num_rows();
    if(_fam_count) _fam_id = cache_get_field_content_int(0, "fam_id", sql_connection);
    cache_delete(result);
    return _fam_id;
}

stock find_family_name(family_name[])
{
    new _fam_count = 0, query_string[110];
    format(query_string, sizeof(query_string), "SELECT `fam_name` FROM `family` WHERE `fam_name`='%s' LIMIT 1", family_name);
    new Cache:result = mysql_query(sql_connection, query_string);
    _fam_count = cache_num_rows();
    cache_delete(result);
    return _fam_count;
}

stock n_ChangeVehicleColor(vehicleID, color1, color2)
{
	veh_info[vehicleID -1][v_color][0] = color1;
	veh_info[vehicleID -1][v_color][1] = color2;
	return ChangeVehicleColor(vehicleID, color1, color2);
}

stock GetVehicleColor(vehicleID, &color1, &color2)
{
	color1 = veh_info[vehicleID -1][v_color][0];
	color2 = veh_info[vehicleID -1][v_color][1];
	return 1;
}


stock _AddStaticVehicle(modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:z_angle, color1, color2)
{
	new vehicleid = AddStaticVehicle(modelid, spawn_x, spawn_y, spawn_z, z_angle, color1, color2);
	veh_info[vehicleid -1][v_model] = modelid;
	veh_info[vehicleid -1][v_color][0] = color1;
	veh_info[vehicleid -1][v_color][1] = color2;
	veh_info[vehicleid -1][v_health] = 1000.0;
	veh_info[vehicleid -1][v_paint] = 3;
	
	veh_info[vehicleid -1][v_pier_time] = 0;
	veh_info[vehicleid -1][v_pier_status] = 0;
	veh_info[vehicleid -1][v_pier_island] = 0;

	return vehicleid;
}
#if defined _ALS_AddStaticVehicle
    #undef AddStaticVehicle
#else
    #define _ALS_AddStaticVehicle
#endif
#define AddStaticVehicle _AddStaticVehicle

stock _SetVehicleToRespawn(vehicleid)
{
	if(veh_info[vehicleid -1][v_model] == 450) return printf("[ERROR] SetVehicleToRespawn %d trailer", vehicleid);
	return SetVehicleToRespawn(vehicleid);
}
#if defined _ALS_SetVehicleToRespawn
    #undef SetVehicleToRespawn
#else
    #define _ALS_SetVehicleToRespawn
#endif
#define SetVehicleToRespawn _SetVehicleToRespawn

stock _AddStaticVehicleEx(modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:z_angle, color1, color2, respawn_delay, addsiren = 0)
{
	new vehicleid = AddStaticVehicleEx(modelid, spawn_x, spawn_y, spawn_z, z_angle, color1, color2, respawn_delay, addsiren);
	veh_info[vehicleid -1][v_model] = modelid;
	veh_info[vehicleid -1][v_color][0] = color1;
	veh_info[vehicleid -1][v_color][1] = color2;
	veh_info[vehicleid -1][v_health] = 1000.0;
	veh_info[vehicleid -1][v_paint] = 3;
	
	veh_info[vehicleid -1][v_pier_time] = 0;
	veh_info[vehicleid -1][v_pier_status] = 0;
	veh_info[vehicleid -1][v_pier_island] = 0;
	
	return vehicleid;
}
#if defined _ALS_AddStaticVehicleEx
    #undef AddStaticVehicleEx
#else
    #define _ALS_AddStaticVehicleEx
#endif
#define AddStaticVehicleEx _AddStaticVehicleEx

stock _CreateVehicle(vehicletype, Float:x, Float:y, Float:z, Float:rotation, color1, color2, respawn_delay, addsiren = 0)
{
	new vehicleid = CreateVehicle(vehicletype, x, y, z, rotation, color1, color2, respawn_delay, addsiren);
	veh_info[vehicleid -1][v_model] = vehicletype;
	veh_info[vehicleid -1][v_color][0] = color1;
	veh_info[vehicleid -1][v_color][1] = color2;
	veh_info[vehicleid -1][v_health] = 1000.0;
	veh_info[vehicleid -1][v_paint] = 3;
	
	veh_info[vehicleid -1][v_pier_time] = 0;
	veh_info[vehicleid -1][v_pier_status] = 0;
	veh_info[vehicleid -1][v_pier_island] = 0;
	
	return vehicleid;
}

#if defined _ALS_CreateVehicle
    #undef CreateVehicle
#else
    #define _ALS_CreateVehicle
#endif
#define CreateVehicle _CreateVehicle


stock _DestroyVehicle(vehicleid)
{
	veh_info[vehicleid -1][v_color][0] = 0;
	veh_info[vehicleid -1][v_color][1] = 0;
	veh_info[vehicleid -1][v_type] = 0;
	veh_info[vehicleid -1][v_vehicle] = INVALID_VEHICLE_ID;
	veh_info[vehicleid -1][v_owner] = 0;
	veh_info[vehicleid -1][v_millage] = 0.0;
	veh_info[vehicleid -1][v_health] = 0.0;
	veh_info[vehicleid -1][v_paint] = 3;
	veh_info[vehicleid -1][v_engine_boost] = 0.0;
	veh_info[vehicleid -1][v_brake_boost] = 0;
	veh_info[vehicleid -1][v_stability_boost] = 0;


	veh_info[vehicleid -1][v_sell_price] = 0;
	veh_info[vehicleid -1][v_sell_slot] = 0;
	veh_info[vehicleid -1][v_sell_carmarket] = 0;

	veh_info[vehicleid -1][v_fine] = 0;

	veh_info[vehicleid -1][v_pos][0] = 0.0;
	veh_info[vehicleid -1][v_pos][1] = 0.0;
	veh_info[vehicleid -1][v_pos][2] = 0.0;
	for(new i; i < 5; i ++)
	{
		veh_info[vehicleid -1][v_pt_engine][i] = 0;
		veh_info[vehicleid -1][v_pt_brake][i] = 0;
		veh_info[vehicleid -1][v_pt_stability][i] = 0;
	}
	if(IsValidDynamic3DTextLabel(veh_info[vehicleid -1][v_sell_text]))
	{
		DestroyDynamic3DTextLabel(veh_info[vehicleid -1][v_sell_text]);
		veh_info[vehicleid -1][v_sell_text] = Text3D:INVALID_3DTEXT_ID;
	}

	for(new i = 0; i < 10; i ++)
	{
		veh_info[vehicleid -1][v_component][i] = 0;
	}
	return DestroyVehicle(vehicleid);
}
#if defined _ALS_DestroyVehicle
    #undef DestroyVehicle
#else
    #define _ALS_DestroyVehicle
#endif
#define DestroyVehicle _DestroyVehicle


stock _SetVehicleHealth(vehicleid, Float:health)
{
    veh_info[vehicleid -1][v_health] = health;
    return SetVehicleHealth(vehicleid, health);
}
#if defined _ALS_SetVehicleHealth
    #undef SetVehicleHealth
#else
    #define _ALS_SetVehicleHealth
#endif
#define SetVehicleHealth _SetVehicleHealth

stock _RepairVehicle(vehicleid)
{
    veh_info[vehicleid -1][v_health] = 1000.0;
    return RepairVehicle(vehicleid);
}
#if defined _ALS_RepairVehicle
    #undef RepairVehicle
#else
    #define _ALS_RepairVehicle
#endif
#define RepairVehicle _RepairVehicle


stock VehicleSpeed(vehicleid)
{
    new Float:X,
		Float:Y,
		Float:Z;

    GetVehicleVelocity(vehicleid, X, Y, Z);
    return floatround(floatsqroot(X * X + Y * Y)* 100.0);
}


stock _PutPlayerInVehicle(playerid, vehicleid, seatid)
{
	player_vehicle[playerid] = vehicleid;
	eev_called {playerid} = 1;
	opev_vehicleid[playerid] = vehicleid;
	used_enter[playerid] = true;

	p_t_info[playerid][last_alt] = GetTickCount();

	if(gotome_player[playerid] != -1)
	{
		DeletePVar(gotome_player[playerid], "player_gotome");
		DeletePVar(playerid, "cuff_x"), DeletePVar(playerid, "cuff_y"), DeletePVar(playerid, "cuff_z");
	}

	return PutPlayerInVehicle(playerid, vehicleid, seatid), true;
}
#if defined _ALS_PutPlayerInVehicle
    #undef PutPlayerInVehicle
#else
    #define _ALS_PutPlayerInVehicle
#endif
#define PutPlayerInVehicle _PutPlayerInVehicle

stock _SetVehiclePos(vehicleid, Float:x, Float:y, Float:z)
{
    foreach(new i: logged_players)
	{
		if(GetPlayerVehicleID(i) == vehicleid)
		{
			p_t_info[i][p_tp_immune_time] = 3;
			p_t_info[i][real_pos][0] = x;
			p_t_info[i][real_pos][1] = y;
			p_t_info[i][real_pos][2] = z;

			p_t_info[i][last_alt] = GetTickCount();
		}
	}
	veh_info[vehicleid -1][v_now_pos][0] = x;
 	veh_info[vehicleid -1][v_now_pos][1] = y;
	veh_info[vehicleid -1][v_now_pos][2] = z;
    SetVehiclePos(vehicleid, x, y, z);
    return 1;
}
#if defined _ALS_SetVehiclePos
    #undef SetVehiclePos
#else
    #define _ALS_SetVehiclePos
#endif
#define SetVehiclePos _SetVehiclePos

stock load_phonebook(playerid)
{
	if(PlayerInfo[playerid][number])
	{
		new sscanf_delimit[60], rows, fields;
		format(sscanf_delimit, 60, "SELECT * FROM `users_phonebook` WHERE `u_id` = '%d'", PlayerInfo[playerid][id]);
		mysql_query(sql_connection, sscanf_delimit);
		cache_get_data(rows, fields);
		PlayerInfo[playerid][phones] = rows;
		for(new i; i < rows; i ++)
		{
			cache_get_field_content(i, "u_phone_name", phone_info[playerid][i], sql_connection, MAX_PLAYER_NAME);
			PlayerInfo[playerid][phone_num][i] = cache_get_field_content_int(i, "u_phone_num", sql_connection);
		}
	}
	return 1;
}

stock _RemovePlayerFromVehicle(playerid)
{
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER && GetPlayerState(playerid) != PLAYER_STATE_PASSENGER) return 0;

    new Float:pos_X, Float:pos_Y, Float:pos_Z;
    GetPlayerPos(playerid, pos_X, pos_Y, pos_Z);

    return SetPlayerPos(playerid, pos_X + 1.5, pos_Y + 1.5, pos_Z);
}
#if defined _ALS_RemovePlayerFromVehicle
    #undef RemovePlayerFromVehicle
#else
    #define _ALS_RemovePlayerFromVehicle
#endif
#define RemovePlayerFromVehicle _RemovePlayerFromVehicle

stock CanWeCheck(playerid)
{
	if((p_t_info[playerid][p_update] -p_t_info[playerid][last_alt]) > 2000) return 1;
	return 0;
}

Float:GetDistanceBetweenPoints(Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2)
{
    return VectorSize(x1-x2, y1-y2, z1-z2);
}

stock clear_player_data(playerid)
{
	player_fon_box[playerid] = 0;
	PlayerTextDrawDestroy(playerid, Loading_PTD[playerid][0]);

    p_t_info[playerid][pickup_time] =
    PlayerInfo[playerid][island] = -1;
    
	p_t_info[playerid][p_pier_status] =
	p_t_info[playerid][p_pier_time] =
    p_t_info[playerid][camera_timer] = 0;

	player_practice {playerid} = 0;
	player_practice_object[playerid] = 0;
	player_practice_step_timer[playerid] = -1;
	player_practice_timer[playerid] = 0;
	player_practice_points[playerid] = 0;

	p_t_info[playerid][lconnect] = false;

	duel_opponent[playerid] = INVALID_PLAYER_ID;
	used_enter[playerid] = false;

	is_adrenaline_effect {playerid} = 0;

	kickout_cooldown[playerid] = 0;
	report_cooldown[playerid] = false;
	PlayerInfo[playerid][donate_roulette] = 0;

	PlayerInfo[playerid][promo_used] = 0;
	opev_vehicleid[playerid] = -1;

	dr_timer[playerid] = -1;
	dr_step[playerid] = 0;

	for(new j = 0; j < 6; j ++)
	{
		dr_ptd[playerid][j] = PlayerText:-1;
	}

	vk_checking {playerid} = google_checking {playerid} = 0;
	noclipdata[playerid][cameramode] 	= CAMERA_MODE_NONE;
	noclipdata[playerid][lrold]	   	 	= 0;
	noclipdata[playerid][udold]   		= 0;
	noclipdata[playerid][mode]   		= 0;
	noclipdata[playerid][lastmove]   	= 0;
	noclipdata[playerid][accelmul]   	= 0.0;

	for(new j = 0; j < 5; j ++)
	{
		dr_slot_model[playerid][j] = 0;
		dr_slot_item[playerid][j] = 0;
		dr_veh_slot[playerid][j] = 0;
		dr_timer[playerid] = -1;
	}

	player_trailer[playerid] = INVALID_VEHICLE_ID;
	p_t_info[playerid][p_logged] = false;

	player_shot_count {playerid} = 0;

	is_player_in_boat[playerid] = 0;

	is_player_in_dmzone {playerid} = 0;
	is_player_nonpark_zone {playerid} = 0;

	AimbotWarningss[playerid] = 0;

	TeamPaint[playerid] = 0;
	is_player_race_regged[playerid] = 0;



	PlayerInfo[playerid][spawnchange] = 0;
	moved_up[playerid] = false;
	sm_tick_count[playerid] = 0;

	roulette_bet[playerid] = 0;
	roulette_number[playerid] = -1;

	anti_dm_warning {playerid} = 0;
	forklift_time[playerid] = 0;


	for(new j = 0; j < 2; j ++)
	{
		payment_ptd[playerid][j] = PlayerText:-1;
	}

	filling_count {playerid} = 0;
	action_type {playerid} = 0;
	action_step {playerid} = 0;
	is_fraction_duty {playerid} = 0;
	is_gps_used {playerid} = 0;
	is_control_chat {playerid} = 0;
	is_tazered {playerid} = 0;
	is_drug_effect {playerid} = 0;
	is_adrenaline_effect {playerid} = 0;



	is_leave_exam_vehicle {playerid} = 0;

	heal_cooldown[playerid] = 0;

	seller_id[playerid] = INVALID_PLAYER_ID;
	buyer_id[playerid] = INVALID_PLAYER_ID;
	sell_item[playerid] = -1;
	sell_price[playerid] = -1;


	p_t_info[playerid][p_armour] = 0;

	for(new j = 0; j < 4; j ++)
	{
		td_db[playerid][j] = PlayerText:-1;
	}
	p_t_info[playerid][p_animation] = false;

	carshot_cheat_count {playerid} = 0;
	gun_skill_up {playerid} = 0;


	player_ssf {playerid} = 0;

	player_tload_time[playerid] = -1;
	player_leavearea_time[playerid] = -1;
	p_t_info[playerid][p_dialog] = -1;

	p_t_info[playerid][p_gun_shots] = 0;
	p_t_info[playerid][p_gun_accuracy] = 0;

	for(new i = 0; i < 13; i ++)
	{
		p_t_info[playerid][p_gun_slot][i] = 0;
		p_t_info[playerid][p_gun_ammo][i] = 0;
	}

	p_t_info[playerid][p_shot_time] = 0;
	p_t_info[playerid][p_shot_warnings] = 0;

	p_t_info[playerid][p_tp_immune_time] = 3;
	p_t_info[playerid][p_gun_immune_time] = 3;

	p_t_info[playerid][p_data][0] = -1;
	p_t_info[playerid][p_data][1] = -1;

	p_t_info[playerid][v_key] = 0;

	PlayerInfo[playerid][admin] = 0;
	PlayerInfo[playerid][level] = 1;
	PlayerInfo[playerid][exp] = 0;
	PlayerInfo[playerid][money] = 0;
	PlayerInfo[playerid][bank] = 0;
	PlayerInfo[playerid][skin] = 0;
	PlayerInfo[playerid][org_skin] = 0;
	PlayerInfo[playerid][warn] = 0;
	PlayerInfo[playerid][mute] = 0;
	PlayerInfo[playerid][wanted] = 0;
	PlayerInfo[playerid][jailed] = 0;
	PlayerInfo[playerid][bail] = 0;
	PlayerInfo[playerid][jail] = 0;

	PlayerInfo[playerid][vip] = 0;

	PlayerInfo[playerid][hospital] = 1;
	PlayerInfo[playerid][google_auth_status] = 0;
	PlayerInfo[playerid][google_auth][0] = EOS;

	PlayerInfo[playerid][job] = job_none;
	PlayerInfo[playerid][timejob] = job_none;
	PlayerInfo[playerid][salary] = job_none;
	PlayerInfo[playerid][hunger] = 100;
	PlayerInfo[playerid][hunger_immune] = 0;
	job_timer[playerid] = -1;

	PlayerInfo[playerid][phones] = 0;

	PlayerInfo[playerid][family] = 0;
	PlayerInfo[playerid][family_rang] = 0;

	PlayerInfo[playerid][family_text] = Text3D:INVALID_3DTEXT_ID;


	PlayerInfo[playerid][house] = -1;
	PlayerInfo[playerid][business] = -1;

	PlayerInfo[playerid][radio] = 0;
	is_ether {playerid} = 0;
	is_ether_calling {playerid} = 0;



	PlayerInfo[playerid][drive_lic] = 0;
	PlayerInfo[playerid][boat_lic] = 0;
	PlayerInfo[playerid][fly_lic] = 0;
	PlayerInfo[playerid][gun_lic] = 0;


	PlayerInfo[playerid][tax_donate] = 0;


	ac_info[playerid] = "clear";
	change_name[playerid] = "none";

	opev_opsc_time_differ[playerid] = 0;

	gotome_player[playerid] = -1;
	pl_afk_time[playerid] = -1;
	speed_timer[playerid] = -1;

	cmd_cooldown[playerid] = 0;

	used_area[playerid] = -1;
	anim_loaded {playerid} = 0;

	big_ears {playerid} = 0;

	p_t_info[playerid][phone_toggled] = true;
	p_t_info[playerid][phone_caller] = 0;
	p_t_info[playerid][phone_id] = INVALID_PLAYER_ID;

	p_t_info[playerid][phone_audition] = 0;

	speed_player[playerid] = 0;
	player_vehicle[playerid] = INVALID_VEHICLE_ID;

	format(reg_info[playerid][reg_password], 6, "n");
	format(reg_info[playerid][reg_referal], 6, "n");
	format(reg_info[playerid][reg_email], 6, "n");

	reg_info[playerid][reg_gender] = 0;
	reg_info[playerid][reg_national] = 0;
	reg_info[playerid][reg_skin] = 0;
	reg_info[playerid][reg_age] = 0;

	player_rentcar[playerid] = INVALID_VEHICLE_ID;
	timer_job_mower[playerid] = 0;

	p_t_info [playerid][pBusRoute] = 0;
	p_t_info [playerid][pBusPos] = 0;
	p_t_info [playerid][pBusPrice] = 0;
	p_t_info [playerid][pBusSpawnTimer] = 0;
	p_t_info [playerid][pBusDemage] = 0;
	p_t_info [playerid][pBusText] = Text3D:INVALID_3DTEXT_ID;


	p_t_info [playerid][pTaxiPrice] = 0;
	p_t_info [playerid][pTaxi3DText] = Text3D:INVALID_3DTEXT_ID;
	p_t_info [playerid][pTaxiGoing] = false;
	p_t_info [playerid][pTaxiPass] = INVALID_PLAYER_ID;
	p_t_info [playerid][pTaxiStart] = 0.0;
	p_t_info [playerid][pTaxiTurn][0] = INVALID_PLAYER_ID;
	p_t_info [playerid][pTaxiTurn][1] = INVALID_PLAYER_ID;

	//casual
	RemoveBuildingForPlayer(playerid, 968, -2436.8125, 495.4688, 29.6797, 0.25);

	// завод
	RemoveBuildingForPlayer(playerid, 941, 2544.1484, -1294.9141, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 941, 2541.7578, -1294.9141, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 941, 2553.5625, -1294.9141, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 941, 2558.2891, -1294.9141, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 941, 2555.9141, -1294.9141, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 934, 2543.1953, -1293.4141, 1044.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 941, 2544.1484, -1291.9766, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 941, 2541.7578, -1291.9766, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 934, 2553.4375, -1293.4141, 1044.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 941, 2553.5625, -1291.9766, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 941, 2558.2891, -1291.9766, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 941, 2555.9141, -1291.9766, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 934, 2558.6875, -1293.4141, 1044.4375, 0.25);
	// дб база
	RemoveBuildingForPlayer(playerid, 1278, -573.0547, -479.9219, 38.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, -552.7656, -479.9219, 38.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, -553.6875, -481.6328, 25.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1441, -537.0391, -469.1172, 25.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, -532.4688, -479.9219, 38.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, -512.1641, -479.9219, 38.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, -491.8594, -479.9219, 38.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, -471.5547, -479.9219, 38.6250, 0.25);

	return 1;
}

stock _SetPlayerPos(playerid, Float:x, Float:y, Float:z)
{
	p_t_info[playerid][real_pos][0] = x;
	p_t_info[playerid][real_pos][1] = y;
	p_t_info[playerid][real_pos][2] = z;

	p_t_info[playerid][old_pos][0] = x;
	p_t_info[playerid][old_pos][1] = y;
	p_t_info[playerid][old_pos][2] = z;
	p_t_info[playerid][last_alt] = GetTickCount();

	p_t_info[playerid][p_tp_immune_time] = 4;

	return SetPlayerPos(playerid, x, y, z);
}
#if defined _ALS_SetPlayerPos
    #undef SetPlayerPos
#else
    #define _ALS_SetPlayerPos
#endif
#define SetPlayerPos _SetPlayerPos

stock SetNextBusCP(playerid,pos)
{
	new type = 0;
	new route = p_t_info [playerid][pBusRoute];
	if(gBusCPs[route][pos][0] == gBusCPs[route][pos+1][0] && gBusCPs[route][pos][1] == gBusCPs[route][pos+1][1]) type = 1;
	SetPlayerRaceCheckpoint(playerid,type,gBusCPs[route][pos][0],gBusCPs[route][pos][1],gBusCPs[route][pos][2],gBusCPs[route][pos+1][0],gBusCPs[route][pos+1][1],gBusCPs[route][pos+1][2],4.0);
	return 1;
}

stock show_dialog(playerid, dialogid, style, caption[], info[], button1[], button2[])
{
	p_t_info[playerid][p_dialog] = dialogid;
	return ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
}
stock kick_player(playerid)
{
	new ms = GetPlayerPing(playerid)> 200 ? 200 : GetPlayerPing(playerid)+ 50;
	return SetTimerEx("fixed_kick", ms, 0, "i", playerid);
}
callback: fixed_kick(playerid)
{
	if(!IsPlayerConnected(playerid)) return 1;
	Kick(playerid);
	return 1;
}

stock set_interior(playerid, interior)
{
	p_t_info[playerid][p_data][0] = interior;
	return SetPlayerInterior(playerid, interior);
}
stock set_world(playerid, world)
{
	p_t_info[playerid][p_data][1] = world;
	if(p_t_info[playerid][p_logged] == true && GetPVarInt(playerid, "exam_vehicle") ==  0 && is_drug_effect {playerid} == 0)
	{
		switch(world)
		{
			case 0:
			{
				new newhour, newminute, newsecond;
				gettime(newhour, newminute, newsecond);
				SetPlayerTime(playerid, newhour, newminute), SetPlayerWeather(playerid, global_weather);
			}
			case 1..9: SetPlayerWeather(playerid, 4), SetPlayerTime(playerid, 18, 0);
			case 10:SetPlayerTime(playerid, 12, 0), SetPlayerWeather(playerid, global_weather);
		}
	}
	if(GetPVarInt(playerid, "p_biz_id")!= 0)SetPlayerWeather(playerid, 4), SetPlayerTime(playerid, 18, 0);
	return SetPlayerVirtualWorld(playerid, world);
}

stock set_race_pos(playerid, Float:x, Float:y, Float:z, Float:angle, interior, world)
{
	if(world == 0 && p_t_info[playerid][p_data][1] != 0 && is_drug_effect {playerid} == 0) SetPlayerWeather(playerid, global_weather), SetPlayerTime(playerid, global_hour, 0);
	if(interior != -1)set_interior(playerid, interior);


	if(world != -1)set_world(playerid, world);


	p_t_info[playerid][p_tp_immune_time] = 4;
	SetPlayerPos(playerid, x, y, z);
	SetPlayerFacingAngle(playerid, angle);
	p_t_info[playerid][p_pos][0] = x;
	p_t_info[playerid][p_pos][1] = y;
	p_t_info[playerid][p_pos][2] = z;
	p_t_info[playerid][p_pos][3] = angle;

	if(gotome_player[playerid] != -1)
	{
		p_t_info[gotome_player[playerid]][p_tp_immune_time] = 2;
		SetPlayerPos(gotome_player[playerid], x, y, z);
		SetPlayerFacingAngle(gotome_player[playerid], angle);
		p_t_info[gotome_player[playerid]][p_pos][0] = x;
		p_t_info[gotome_player[playerid]][p_pos][1] = y;
		p_t_info[gotome_player[playerid]][p_pos][2] = z;
		p_t_info[gotome_player[playerid]][p_pos][3] = angle;
		set_world(gotome_player[playerid], world);
		set_interior(gotome_player[playerid], interior);
	}

	ClearAnimations(playerid, 1);
	SetCameraBehindPlayer(playerid);
	foreach(new i: admin_players)
	{
		if(GetPVarInt(i, "spectate_status")-1 == playerid)
		{
			switch(GetPlayerState(playerid))
			{
				case 1:
				{
					SetPlayerInterior(i, p_t_info[playerid][p_data][0]);
					SetPlayerVirtualWorld(i, p_t_info[playerid][p_data][1]);
					TogglePlayerSpectating(i, true);
					PlayerSpectatePlayer(i, playerid);
				}
				case 2:
				{
					SetPlayerInterior(i, p_t_info[playerid][p_data][0]);
					SetPlayerVirtualWorld(i, p_t_info[playerid][p_data][1]);
					new veh_id = GetPlayerVehicleID(playerid);
					TogglePlayerSpectating(i, true);
					PlayerSpectateVehicle(i, veh_id);
				}
				case 3:
				{
					SetPlayerInterior(i, p_t_info[playerid][p_data][0]);
					SetPlayerVirtualWorld(i, p_t_info[playerid][p_data][1]);
					new veh_id = GetPlayerVehicleID(playerid);
					TogglePlayerSpectating(i, true);
					PlayerSpectateVehicle (i, veh_id);
				}
			}
		}
	}
	return 1;
}

stock Float:GetDistanceBetweenPlayers(p1,p2)
{
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}


stock set_pos(playerid, Float:x, Float:y, Float:z, Float:angle, interior, world)
{
	if(world == 0 && p_t_info[playerid][p_data][1] != 0 && is_drug_effect {playerid} == 0) SetPlayerWeather(playerid, global_weather), SetPlayerTime(playerid, global_hour, 0);
	if(interior != -1)set_interior(playerid, interior);


	toggle_controlable(playerid, false, false);
	SetTimerEx("toggle_controlable", 1750, false, "iii", playerid, true, false);
	if(PlayerInfo[playerid][load_textures] == 1) show_fon_player(playerid);

	if(world != -1)set_world(playerid, world);

	p_t_info[playerid][p_tp_immune_time] = 4;
	SetPlayerPos(playerid, x, y, z);
	SetPlayerFacingAngle(playerid, angle);
	p_t_info[playerid][p_pos][0] = x;
	p_t_info[playerid][p_pos][1] = y;
	p_t_info[playerid][p_pos][2] = z;
	p_t_info[playerid][p_pos][3] = angle;



	p_t_info[playerid][last_alt] = GetTickCount();

	p_t_info [playerid][old_pos][0] = x;
	p_t_info [playerid][old_pos][1] = y;
	p_t_info [playerid][old_pos][2] = z;

	p_t_info[playerid][real_pos][0] = x;
	p_t_info[playerid][real_pos][1] = y;
	p_t_info[playerid][real_pos][2] = z;

//	ClearAnimations(playerid, 1);
	SetCameraBehindPlayer(playerid);
	foreach(new i: admin_players)
	{
		if(GetPVarInt(i, "spectate_status")-1 == playerid)
		{
			switch(GetPlayerState(playerid))
			{
				case 1:
				{
					SetPlayerInterior(i, p_t_info[playerid][p_data][0]);
					SetPlayerVirtualWorld(i, p_t_info[playerid][p_data][1]);
					TogglePlayerSpectating(i, true);
					PlayerSpectatePlayer(i, playerid);
				}
				case 2:
				{
					SetPlayerInterior(i, p_t_info[playerid][p_data][0]);
					SetPlayerVirtualWorld(i, p_t_info[playerid][p_data][1]);
					new veh_id = GetPlayerVehicleID(playerid);
					TogglePlayerSpectating(i, true);
					PlayerSpectateVehicle(i, veh_id);
				}
				case 3:
				{
					SetPlayerInterior(i, p_t_info[playerid][p_data][0]);
					SetPlayerVirtualWorld(i, p_t_info[playerid][p_data][1]);
					new veh_id = GetPlayerVehicleID(playerid);
					TogglePlayerSpectating(i, true);
					PlayerSpectateVehicle (i, veh_id);
				}
			}
		}
	}
	return 1;
}

callback: toggle_controlable(playerid, bool:toggle, bool:draw_status)
{
	if(!toggle)SetPVarInt(playerid, "freeze_status", 1);
	else DeletePVar(playerid, "freeze_status");
	if(draw_status)
	{
/*		if(used_area[playerid] != -1)
		{
			for(new i = 0; i < 2; i ++)	TextDrawShowForPlayer(playerid, td_alt_area[i]);
		}*/
	}
	if(is_tazered {playerid} != 0)is_tazered {playerid} = 0;
	return TogglePlayerControllable(playerid, toggle);
}
callback: clear_anim(playerid) return ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0,0,0,0,0,0,1);



callback:player_timer(playerid)
{
	if(!IsPlayerConnected(playerid)) KillTimer(PlayerInfo[playerid][main_timer]), PlayerInfo[playerid][main_timer] = -1;
	if(PlayerInfo[playerid][mute] > 0)PlayerInfo[playerid][mute] --;
	if(PlayerInfo[playerid][f_mute] > 0)PlayerInfo[playerid][f_mute] --;
	if(PlayerInfo[playerid][fam_mute] > 0) PlayerInfo[playerid][fam_mute] --;
	if(PlayerInfo[playerid][jailed] > 1)PlayerInfo[playerid][jailed] --;
	if(player_practice_timer[playerid] > 0)player_practice_timer[playerid] --;
	
	if(p_t_info[playerid][p_pier_time] > 0)p_t_info[playerid][p_pier_time] --;
	
	if(player_practice_timer[playerid] == 1)
	{

		player_practice {playerid} = 0;
		KillTimer(player_practice_step_timer[playerid]);
		player_practice_step_timer[playerid] = -1;
		DestroyDynamicObject(player_practice_object[playerid]);
		player_practice_object[playerid] = 0;


		set_pos(playerid, 2460.2515, -2120.6069, 13.5530, 354.7014 -180, 0, 0);
		SetPVarInt(playerid, "tp_area_used", 1);

		reset_player_weapon(playerid);
		for(new i = 0; i < 12; i ++)
		{
			give_weapon(playerid, duel_guns[playerid][i][0], duel_guns[playerid][i][1]);
			duel_guns[playerid][i][0] = 0;
			duel_guns[playerid][i][1] = 0;
		}

		player_practice_points[playerid] = 0;
		player_practice_timer[playerid] = 0;

	}
	
	if(p_t_info[playerid][p_pier_status] == 1 && p_t_info[playerid][p_pier_time] == 0)
	{
		new family_id = PlayerInfo[playerid][family];
		set_pos(playerid, delivery_human_island[family_info[family_id -1][fam_house] -1][0], delivery_human_island[family_info[family_id -1][fam_house] -1][1], delivery_human_island[family_info[family_id -1][fam_house] -1][2], delivery_human_island[family_info[family_id -1][fam_house] -1][3], 0, 0);

		SendClientMessage(playerid, col_white, !""scm_info"Вы успешно прибыли на семейный остров. Всего хорошего.");
		p_t_info[playerid][p_pier_status] = 0;
	}

	if(p_t_info[playerid][p_pier_status] > 1 && p_t_info[playerid][p_pier_time] == 0)
	{
		set_pos(playerid, delivery_human_pier[p_t_info[playerid][p_pier_status] -2][0], delivery_human_pier[p_t_info[playerid][p_pier_status] -2][1], delivery_human_pier[p_t_info[playerid][p_pier_status] -2][2], delivery_human_pier[p_t_info[playerid][p_pier_status] -2][3], 0, 0);

		SendClientMessage(playerid, col_white, !""scm_info"Вы успешно прибыли на пирс. Всего хорошего.");
		p_t_info[playerid][p_pier_status] = 0;
	}

	if(CountFloodForPlayer[playerid] > 0) CountFloodForPlayer[playerid] = 0;


	if(forklift_time[playerid] > 0)
	{
		forklift_time[playerid] --;
		new td_string[24];

		format(td_string, 24, "SHIFT_TIME %s", convert_time(forklift_time[playerid]));
		PlayerTextDrawSetString(playerid, forklift_ptd[playerid], td_string);

	}
	else if(forklift_time[playerid] < 0)
	{
		forklift_time[playerid] ++;
		if(forklift_time[playerid] == -1)
		{
			forklift_time[playerid] = 0;
		}
	}
	if(forklift_time[playerid] == 1)
	{

		RemovePlayerFromVehicle(playerid);

		give_money(playerid, PlayerInfo[playerid][salary]);
		insert_money_log(playerid, INVALID_PLAYER_ID, PlayerInfo[playerid][salary], "зп в порту");

		SendClientMessage(playerid, col_white, ""c_green"* "c_white"Ваша рабочая смена завершена, Вам необходим отдых.");
		PlayerInfo[playerid][timejob] = job_none;


		new __t_string[72];
		format(__t_string, sizeof(__t_string), ""c_green"* "c_white"Заработано: "c_green"%d$", PlayerInfo[playerid][salary]);
		SendClientMessage(playerid, col_white, __t_string);
		PlayerInfo[playerid][salary] = 0;


		if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
		else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

		hide_payment(playerid);

		new _v_id = player_rentcar[playerid];
		player_rentcar[playerid] = INVALID_VEHICLE_ID;

		if(player_vehicle[playerid] != INVALID_VEHICLE_ID)RemovePlayerFromVehicle(playerid);
		SetVehicleToRespawn(_v_id);

		if(GetPVarInt(playerid, "fork_object"))
		{
			DestroyDynamicObject(GetPVarInt(playerid, "fork_object"));
			DeletePVar(playerid, "fork_object");
		}
		PlayerTextDrawDestroy(playerid, forklift_ptd[playerid]);
		TextDrawHideForPlayer(playerid, forklift_td);

		forklift_ptd[playerid] = PlayerText:-1;
		forklift_time[playerid] = -600;
	}
	if(is_leave_exam_vehicle {playerid} > 0)
	{
		new t_string[6];
		format(t_string, 6, "~r~%d", is_leave_exam_vehicle {playerid});
		GameTextForPlayer(playerid, t_string, 5000, 6);
		if(is_leave_exam_vehicle {playerid} == 1)
		{
			SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не успели вовремя вернуться в транспорт, экзамен провален.");
			GameTextForPlayer(playerid, "~r~FAILED", 5000, 6);
			new vehicle_id = GetPVarInt(playerid, "leaved_ex_vehicle");

			switch(GetVehicleModel(vehicle_id))
			{
				case 593:set_pos(playerid, 739.3827, -1414.3588, 1500.9509, 176.8004, 1, 3);
				case 473:set_pos(playerid, 739.3827, -1414.3588, 1500.9509, 176.8004, 1, 2);
				case 587:set_pos(playerid, 739.3827, -1414.3588, 1500.9509, 176.8004, 1, 1);
			}
			DestroyVehicle(vehicle_id);
			DeletePVar(playerid, "leaved_ex_vehicle");
			DeletePVar(playerid, "exam_vehicle");
			DisablePlayerRaceCheckpoint(playerid);
			is_leave_exam_vehicle {playerid} = 0;
		}
		else is_leave_exam_vehicle {playerid} --;
	}

	if(is_adrenaline_effect {playerid} > 0)
	{
		is_adrenaline_effect {playerid} --;


		if(is_adrenaline_effect {playerid} <= 1)
		{
			is_adrenaline_effect {playerid} = 0;
			ClearAnimations(playerid);
			ApplyAnimation(playerid,"FAT","IDLE_tired",3.0,1,0,0,0,3000,1);
		}
	}
	if(is_drug_effect {playerid} > 0)
	{
		is_drug_effect {playerid} --;
		if(is_drug_effect {playerid} <= 1)
		{
			switch(GetPlayerVirtualWorld(playerid))
			{
				case 0:
				{
					new newhour, newminute, newsecond;
					gettime(newhour, newminute, newsecond);
					SetPlayerTime(playerid, newhour, newminute), SetPlayerWeather(playerid, global_weather);
				}
				case 1..9: SetPlayerWeather(playerid, 4), SetPlayerTime(playerid, 18, 0);
				case 10:SetPlayerTime(playerid, 12, 0), SetPlayerWeather(playerid, global_weather);

			}
			if(GetPVarInt(playerid, "p_biz_id")!= 0)SetPlayerWeather(playerid, 4), SetPlayerTime(playerid, 18, 0);

			SetPlayerDrunkLevel(playerid, 0);
			is_drug_effect {playerid} = 0;
			GameTextForPlayer(playerid, "~p~Drug effect~n~~w~Gone", 4500, 1);
		}
	}

	if(PlayerInfo[playerid][jailed] == 1)
	{
		if(PlayerInfo[playerid][jail] != 10)
		{
			set_pos(playerid, 1516.1644, -1066.6388, 1025.0168, 52.4618, 0, PlayerInfo[playerid][jail]);
			PlayerInfo[playerid][jailed] = 0;
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы отсидели свой срок заключения и были освобождены.");
			PlayerInfo[playerid][jail] = 0;
			update_int_sql(playerid, "u_jail", PlayerInfo[playerid][jail]);
		}
		else
		{
			PlayerInfo[playerid][jailed] = 0;
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы отсидели свой срок заключения и были освобождены.");
			PlayerInfo[playerid][jail] = 0;
			update_int_sql(playerid, "u_jail", PlayerInfo[playerid][jail]);
			SpawnPlayer(playerid);
		}
		PlayerInfo[playerid][wanted] = 0;
		update_int_sql(playerid, "u_wanted", PlayerInfo[playerid][wanted]);
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][wanted]);
	}
	if(GetPVarInt(playerid, "p_h_bed") > 0)
	{
		new h_bed = GetPVarInt(playerid, "p_h_bed")-1;
		if(!IsPlayerInRangeOfPoint(playerid, 3, h_bed_position[h_bed][0], h_bed_position[h_bed][1], h_bed_position[h_bed][2]))
		{
			h_bed_toggled[h_bed][GetPlayerVirtualWorld(playerid)-1] = false;
			SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы освободили кровать, лечение прервано.");
			DeletePVar(playerid, "p_h_bed");
			ClearAnimations(playerid, 1);
		}
		if(p_t_info[playerid][p_health] >= 100)
		{
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы полностью вылечились и теперь можете покинуть больницу.");
			h_bed_toggled[h_bed][GetPlayerVirtualWorld(playerid)-1] = false;
			DeletePVar(playerid, "p_h_bed");
			DeletePVar(playerid, "p_dead");
			ClearAnimations(playerid, 1);
		}
		if(p_t_info[playerid][p_health] < 100)
		{
			set_health(playerid, p_t_info[playerid][p_health] + 1);
		}
	}
	if(GetPVarInt(playerid, "p_dead") >= 1 && GetPVarInt(playerid, "p_dead") <= 3 && p_t_info[playerid][p_pos][2] > 2000)
	{
		if(p_t_info[playerid][p_health] >= 100)
		{
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы полностью вылечились и теперь можете покинуть больницу.");
			if(GetPVarInt(playerid, "p_h_bed") > 0)h_bed_toggled[GetPVarInt(playerid, "p_h_bed")-1][GetPlayerVirtualWorld(playerid)-1] = false;
			DeletePVar(playerid, "p_dead");
			DeletePVar(playerid, "p_h_bed");
		}
		if(p_t_info[playerid][p_health] < 100)
		{
			set_health(playerid, p_t_info[playerid][p_health] + 0.5);
		}
	}
	else if(GetPVarInt(playerid, "p_dead") == 4)
	{
		if(p_t_info[playerid][p_health] >= 100)
		{
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы полностью вылечились и теперь можете покинуть госпиталь.");
			DeletePVar(playerid, "p_dead");
		}
		if(p_t_info[playerid][p_health] < 100)
		{
			set_health(playerid, p_t_info[playerid][p_health] + 0.5);
		}
	}

	if(player_tload_time[playerid] > 0 && player_trailer[playerid] != INVALID_VEHICLE_ID)
	{
		player_tload_time[playerid] --;
		new _str[16];
		format(_str, 16, "~r~%s", convert_time(player_tload_time[playerid]));
		PlayerTextDrawSetString(playerid, td_db[playerid][0], _str);
		if(player_tload_time[playerid] == 0)
		{
			new vehicleid = player_trailer[playerid];
			trailer_count[vehicleid -1] = 0;
			DestroyVehicle(vehicleid);

			for(new j = 0; j < 3; j ++)
			{
				if(dorm_queue[j][0] == playerid)
				{
					dorm_queue[j][0] = INVALID_PLAYER_ID;
				}
				if(loading_playerid[j] == playerid)
				{
					loading_playerid[j] = INVALID_PLAYER_ID;
					DeletePVar(playerid, "truck_waiting");
				}
			}
			for(new j = 0; j < 4; j ++)
			{
				PlayerTextDrawDestroy(playerid, td_db[playerid][j]);
				td_db[playerid][j] = PlayerText:-1;
			}

			player_trailer[playerid] = INVALID_VEHICLE_ID;
			SendClientMessage(playerid, -1, "Ваше время для прицепления фуры истекло. Деньги вам не будут возвращены.");
			player_tload_time[playerid] = -1;
		}
	}
	if(player_leavearea_time[playerid] > 0 && player_trailer[playerid] != INVALID_VEHICLE_ID)
	{
		player_leavearea_time[playerid] --;
		new _str[16];
		format(_str, 16, "~r~%s", convert_time(player_leavearea_time[playerid]));
		PlayerTextDrawSetString(playerid, td_db[playerid][0], _str);
		if(player_leavearea_time[playerid] == 0)
		{
			new vehicleid = player_trailer[playerid];
			trailer_count[vehicleid -1] = 0;
			DestroyVehicle(vehicleid);
			for(new j = 0; j < 4; j ++)
			{
				PlayerTextDrawDestroy(playerid, td_db[playerid][j]);
				td_db[playerid][j] = PlayerText:-1;
			}

			player_trailer[playerid] = INVALID_VEHICLE_ID;

			SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Ваше время для выезда с зоны загрузки истекло. Деньги Вам не будут возвращены.");
		}
	}


	if(GetVehicleTrailer(GetPlayerVehicleID(playerid)) == player_trailer[playerid]&& player_trailer[playerid] != INVALID_VEHICLE_ID && GetPVarInt(playerid, "truck_waiting")> 0)
	{
		SendClientMessage(playerid, col_gray, "* Вы прицепили фуру. У Вас есть 1 минута, чтобы покинуть место загрузки.");
		player_tload_time[playerid] = -1;
		player_leavearea_time[playerid] = 60;
		DeletePVar(playerid, "truck_waiting");

		SetTimerEx("UpdateTruckerTrailerMinute", 60000, false,"i", playerid);
	}


	if(GetPVarInt(playerid, "spectate_status")!= 0)
	{
		new td_str[98],
			targetid = GetPVarInt(playerid, "spectate_status")-1;

		new Float: player_health;
		GetPlayerHealth(targetid, player_health);
		format(td_str, sizeof(td_str), "%d~n~%d~n~%.2f~n~%.2f~n~%d~n~%d~n~%d~n~%s~n~%d~n~%d$",
		PlayerInfo[targetid][level],
		GetPlayerPing(targetid),
		player_health,
		p_t_info[targetid][p_armour],
		p_t_info[targetid][p_gun_accuracy],
		GetPlayerAmmo(targetid),
		get_speed(targetid),
		p_t_info[targetid][p_ip],
		get_player_warn_count(targetid),
		PlayerInfo[targetid][money]);
		PlayerTextDrawSetString(playerid, sp_ptd[playerid][2], td_str);
		return 1;
	}

	new Float:pos[3];
	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	new distance = floatround(GetPlayerDistanceFromPoint(playerid, p_t_info[playerid][real_pos][0], p_t_info[playerid][real_pos][1], p_t_info[playerid][real_pos][2]));
	new distanceXY = floatround(GetPlayerDistanceFromPoint(playerid, p_t_info[playerid][real_pos][0], p_t_info[playerid][real_pos][1], pos[2]));

	new fixerrorZteleport = 0;
	if(distance < distanceXY+30) fixerrorZteleport = 1;

	if(!fixerrorZteleport && distance > 150) fixerrorZteleport = 1;

	new surf_ = GetPlayerSurfingVehicleID(playerid);

	if(pl_afk_time[playerid] < 1)
	{
		if(surf_ != INVALID_VEHICLE_ID)
		{
			new Float:speed = GetVehicleSpeed(surf_);
			new vehicle_model = GetVehicleModel(surf_);
			switch(vehicle_model)
			{
				case 430,446,452,453,454,472,473,478,484,493,554,543,595,422,605,600,592:{}
				default:
				{
					if(speed > 20)
					{
						new Float:slx, Float:sly, Float:slz;
						GetPlayerPos(playerid, slx, sly, slz);
						SetPlayerPos(playerid, slx, sly, slz + 2.5);
						ApplyAnimation(playerid, "ped", "getup", 4.0, 0, 1, 0, 0, 0,0);
					}
				}
			}
		}
		new pl_state = GetPlayerState(playerid);

		if(pl_state == PLAYER_STATE_PASSENGER &&(GetPlayerWeapon(playerid) ==  24 || GetPlayerWeapon(playerid) ==  25)) SetPlayerArmedWeapon(playerid, 0);

		new Float: now_health,
			Float: now_armour;

		GetPlayerHealth(playerid, now_health);
		GetPlayerArmour(playerid, now_armour);

		if(now_health > p_t_info[playerid][p_health])set_health(playerid, p_t_info[playerid][p_health]);
		if(now_armour > p_t_info[playerid][p_armour])set_armour(playerid, p_t_info[playerid][p_armour]);

	}
	if(GetTickCount() -p_t_info[playerid][p_update] < 1000)
	{
		new pstate = GetPlayerState(playerid);
		new Float:x, Float:y, Float:z;
		if(pstate == 1)
		{
			GetPlayerPos(playerid, x, y, z);
			if(CanWeCheck(playerid))
			{
				p_t_info [playerid][old_pos][0] = x;
				p_t_info [playerid][old_pos][1] = y;
				p_t_info [playerid][old_pos][2] = z;
			}
		}
		else if(pstate == 2)
		{
			new veh = GetPlayerVehicleID(playerid);
			GetVehiclePos(veh, x, y, z);
			
			p_t_info [playerid][old_pos][0] = x;
			p_t_info [playerid][old_pos][1] = y;
			p_t_info [playerid][old_pos][2] = z;
		}
		else if(pstate == 3)
		{
			GetPlayerPos(playerid, x, y, z);
			if((GetTickCount() -p_t_info[playerid][last_unoccup_tick]) > 5000)
			{
				p_t_info [playerid][old_pos][0] = x;
				p_t_info [playerid][old_pos][1] = y;
				p_t_info [playerid][old_pos][2] = z;
			}
		}
	}
	GetPlayerPos(playerid, p_t_info[playerid][p_pos][0], p_t_info[playerid][p_pos][1], p_t_info[playerid][p_pos][2]);

	if(GetPVarInt(playerid,"removetimer"))
	{
	    SetPVarInt(playerid,"removetimer",GetPVarInt(playerid,"removetimer")-1);
	    if(GetPVarInt(playerid,"removetimer") == 1) DeletePVar(playerid,"removetimer");
	}

	if(p_t_info[playerid][p_tp_immune_time] > 0)p_t_info[playerid][p_tp_immune_time] --;
	if(p_t_info[playerid][p_gun_immune_time] > 0)p_t_info[playerid][p_gun_immune_time] --;

	pl_afk_time[playerid] ++;

    if(pl_afk_time[playerid] > 1)
    {
 		new afk_text[20];
		format(afk_text, 20, "[AFK: %s]", convert_time(pl_afk_time[playerid]));
		SetPlayerChatBubble(playerid, afk_text, col_gray, 20.0, 1200);
    }
	if(pl_afk_time[playerid] > 30 && duel_opponent[playerid] != INVALID_PLAYER_ID)
	{
		new _text_string[144];
		format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы одержали победу над "c_green"%s"c_white" и выиграли ставку в размере "c_green"%d$", PlayerInfo[playerid][name], duel_price[playerid]);
		SendClientMessage(duel_opponent[playerid], col_white, _text_string);

        set_health(playerid, 100);
        set_health(duel_opponent[playerid], 100);

		give_money(duel_opponent[playerid], duel_price[playerid]*2);
		insert_money_log(playerid, duel_opponent[playerid], duel_price[playerid], "дуэль");

		SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы проиграли дуэль. Долгое AFK на дуэли.");

		set_pos(duel_opponent[playerid], 2460.2515, -2120.6069, 13.5530, 354.7014, 0, 0);
		SetPVarInt(duel_opponent[playerid], "tp_area_used", 1);

		reset_player_weapon(duel_opponent[playerid]);
		for(new i = 0; i < 12; i ++)
		{
			give_weapon(duel_opponent[playerid], duel_guns[duel_opponent[playerid]][i][0], duel_guns[duel_opponent[playerid]][i][1]);
		}
		duel_price[playerid] = 0;
		duel_price[duel_opponent[playerid]] = 0;
		duel_opponent[duel_opponent[playerid]] = INVALID_PLAYER_ID;
		duel_opponent[playerid] = INVALID_PLAYER_ID;

		SetPVarInt(playerid, "p_dead", 322);
	}
	if(pl_afk_time[playerid] > 900 && PlayerInfo[playerid][admin] == 0 && PlayerInfo[playerid][vip] == 0)
	{
		SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы слишком долго простояли AFK.");
		return kick_player(playerid);
	}

    if(p_t_info[playerid][pickup_time] != -1)
    {
        if(GetPlayerDistanceFromPoint(playerid, pick_info[p_t_info[playerid][pickup_time]][pick_pos][0], pick_info[p_t_info[playerid][pickup_time]][pick_pos][1], pick_info[p_t_info[playerid][pickup_time]][pick_pos][2]) > 3) p_t_info[playerid][pickup_time] = -1;
    }

	if(PlayerInfo[playerid][timejob] == job_factory && ! IsPlayerInRangeOfPoint(playerid, 100.0, -33.730712, -258.069824, 1528.451660))
	{
		SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
		give_money(playerid, PlayerInfo[playerid][salary]);


		SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы покинули территорию завода и завершили рабочую смену.");
		new __t_string[72];
		format(__t_string, sizeof(__t_string), ""c_green"* "c_white"Заработано: "c_green"%d$", PlayerInfo[playerid][salary]);
		SendClientMessage(playerid, col_white, __t_string);
		PlayerInfo[playerid][salary] = 0;

		if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
		else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

		hide_payment(playerid);


		PlayerInfo[playerid][timejob] = job_none;
		DeletePVar(playerid, "have_factory_box");

		RemovePlayerAttachedObject(playerid, 0);
		DisablePlayerCheckpoint(playerid);
	}
	else if((PlayerInfo[playerid][timejob] == job_porter || PlayerInfo[playerid][timejob] == job_forklift) && p_t_info[playerid][p_tp_immune_time] == 0 && ! IsPlayerInQuad(playerid, 2610.3188,-2563.9526, 2863.4382, -2327.9478) && GetPlayerVirtualWorld(playerid) ==  0)
	{
		give_money(playerid, PlayerInfo[playerid][salary]);
		insert_money_log(playerid, INVALID_PLAYER_ID, PlayerInfo[playerid][salary], "зп в порту");

		SendClientMessage(playerid, col_white, !""scm_info"Вы покинули территорию порта и завершили рабочую смену.");
		new __t_string[72];
		format(__t_string, sizeof(__t_string), ""scm_sucess"Заработано: "c_green"%d$", PlayerInfo[playerid][salary]);
		SendClientMessage(playerid, col_white, __t_string);
		
        PlayerInfo[playerid][salary] = 0;
        
		switch(PlayerInfo[playerid][timejob])
		{
		    case job_forklift:
		    {
   				if(forklift_ptd[playerid] != PlayerText:-1)
				{
					PlayerTextDrawDestroy(playerid, forklift_ptd[playerid]);
					TextDrawHideForPlayer(playerid, forklift_td);

					forklift_ptd[playerid] = PlayerText:-1;
					forklift_time[playerid] = -600;
				}
				new _v_id = player_rentcar[playerid];
				player_rentcar[playerid] = INVALID_VEHICLE_ID;

				SetVehicleToRespawn(_v_id);
				if(GetPVarInt(playerid, "fork_object"))
				{
					DestroyDynamicObject(GetPVarInt(playerid, "fork_object"));
					DeletePVar(playerid, "fork_object");
				}
		    }
		    case job_porter:
		    {
				if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
				ClearAnimations(playerid);
				DeletePVar(playerid, "have_factory_box");
		    }
		}
        
		if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
		else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

		hide_payment(playerid);
		
		PlayerInfo[playerid][timejob] = job_none;
		
		DisablePlayerCheckpoint(playerid);
	}
	else if(PlayerInfo[playerid][timejob] == job_miner && ! IsPlayerInRangeOfPoint(playerid, 250.0, 2471.8926,-746.1586,954.1702))
	{
		give_money(playerid, PlayerInfo[playerid][salary]);

		SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы покинули территорию шахты и завершили рабочую смену.");
		new __t_string[72];
		format(__t_string, sizeof(__t_string), ""c_green"* "c_white"Заработано: "c_green"%d$", PlayerInfo[playerid][salary]);
		SendClientMessage(playerid, col_white, __t_string);
		PlayerInfo[playerid][salary] = 0;

		if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
		else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

		hide_payment(playerid);

		PlayerInfo[playerid][timejob] = job_none;

		DeletePVar(playerid, "mining_ex");
		DeletePVar(playerid, "miner_cp");

		DisablePlayerCheckpoint(playerid);

		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
	}
	else if(PlayerInfo[playerid][timejob] == job_sawmil && ! IsPlayerInRangeOfPoint(playerid, 150.0, -1092.1349, -1643.6737, 76.3739))
	{
		give_money(playerid, PlayerInfo[playerid][salary]);

		SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы покинули территорию лесопилки и завершили рабочую смену.");
		new __t_string[72];
		format(__t_string, sizeof(__t_string), ""c_green"* "c_white"Заработано: "c_green"%d$", PlayerInfo[playerid][salary]);
		SendClientMessage(playerid, col_white, __t_string);
		PlayerInfo[playerid][salary] = 0;

		if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
		else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);


		hide_payment(playerid);

		PlayerInfo[playerid][timejob] = job_none;

		RemovePlayerAttachedObject(playerid, 0);
		DisablePlayerCheckpoint(playerid);

		DeletePVar(playerid, #LessProc);
		DeletePVar(playerid, #LessStatus);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
		RemoveWeaponFromSlot(playerid, get_weapon_slot(9));

	}
	return 1;
}

callback: UpdateTruckerTrailerMinute(playerid)
{
	for(new j = 0; j < 3; j ++)
	{
		if(dorm_queue[j][0] == playerid)
		{
			dorm_queue[j][0] = INVALID_PLAYER_ID;
		}
	}
}
callback: drop_tree(playerid)
{
	SetPVarInt(playerid, #LessProc, 0);
	KillTimer(GetPVarInt(playerid, #jobTimer));
	DeletePVar(playerid, #jobTimer);
	DestroyDynamicObject(tree_object[GetPVarInt(playerid, #Derevo)]);
	tree_object [GetPVarInt(playerid, #Derevo)] = -1;
	DisablePlayerCheckpoint(playerid);
	tree_pick[GetPVarInt(playerid, #Derevo)] = CreateDynamicPickup(1463,3, tree_positions[GetPVarInt(playerid, #Derevo)][0], tree_positions[GetPVarInt(playerid, #Derevo)][1], tree_positions[GetPVarInt(playerid, #Derevo)][2] +1.5,-1,-1,playerid);
	pick_info[tree_pick[GetPVarInt(playerid, #Derevo)]][pick_type] = pick_type_server;
	return 0;
}

callback: minute_timer()
{
	new td_str[16], y, day, month, hour, mn;
	getdate(y, month, day);
	format(td_str, sizeof(td_str), "%02d/%02d/2020", day, month);
	TextDrawSetString(Samsung_S20_TD[40], td_str);
	
	td_str[0] = EOS;
	format(td_str, sizeof(td_str), "%02d/%02d/2020", day, month);
	TextDrawSetString(Iphone_TD[33], td_str);
	
	td_str[0] = EOS;
	gettime(hour, mn);
	format(td_str, sizeof(td_str), "%02d:%02d", hour, mn);
	TextDrawSetString(Samsung_S20_TD[24], td_str);

    td_str[0] = EOS;
	format(td_str, sizeof(td_str), "%02d:%02d", hour, mn);
	TextDrawSetString(Iphone_TD[12], td_str);

	if(mine_count[MINE_UNMELTED] >= 30)
	{
		mine_count[MINE_UNMELTED] -= 30;
		mine_count[MINE_MELTED] += 30;

		dorm_count[DORM_MINE] = mine_count[MINE_MELTED];

		new dorm_string[134];
		format(dorm_string, 76, ""c_server"** Металл **\n"c_grey"Кол-во на складе:"c_white" %i кг.", dorm_count[DORM_MINE]);
		UpdateDynamic3DTextLabelText(dorm_text[DORM_MINE], 0xFFCD00FF, dorm_string);



		format(dorm_string, 134, "\
		"c_server"** Переплавка **\n\
		"c_grey"Руда: "c_white"%d кг.\n\
		"c_grey"Металл: "c_white"%d кг.", mine_count[MINE_UNMELTED], mine_count[MINE_MELTED]);
		UpdateDynamic3DTextLabelText(mine_text, -1, dorm_string);

	}


	for(new h = 0; h < house_count; h ++)
	{
		if(h_info[h][h_seed]<= 0) continue;
		h_info[h][h_seed] -= RandomEx(3, 9);
		if(h_info[h][h_seed] < 0)h_info[h][h_seed] = 0;
		h_info[h][h_seed_result] += RandomEx(1, 4);
	}
	for(new h = 0; h < cellar_count; h ++)
	{
		if(cellar_info[h][cl_seed]<= 0) continue;
		cellar_info[h][cl_seed] -= RandomEx(3, 9);
		if(cellar_info[h][cl_seed] < 0)cellar_info[h][cl_seed] = 0;
		cellar_info[h][cl_seed_result] += RandomEx(1, 4);
	}
	foreach(new i: logged_players)
	{
		if(GetPVarInt(i, "p_masked")> 0)
		{
			SetPVarInt(i, "p_masked", GetPVarInt(i, "p_masked")-60);
		}
		else if(GetPVarInt(i, "p_masked") ==  0)DeletePVar(i, "p_masked");

		if(PlayerInfo[i][hunger] >= 1)
		{
			if(PlayerInfo[i][hunger_immune] == 0)PlayerInfo[i][hunger] -= 1;
			if(PlayerInfo[i][hunger] == 25 && GetPVarInt(i, "hunger_td_active") ==  0)
			{
				new Float:text_size_x = 25.416650;
				if(PlayerInfo[i][hunger]<= 25)
				{
					text_size_x = PlayerInfo[i][hunger]* 1.016666;
				}

				new td_line_color = 8388863;
				switch(PlayerInfo[i][hunger])
				{
					case 0..20: td_line_color = -1523963137;
					case 21..49: td_line_color = -5963521;
					case 50..100: td_line_color = 8388863;
				}


				satiery_ptd[i][0] = CreatePlayerTextDraw(i, 38.333286, 305.370391, "LD_SPAC:white");
				PlayerTextDrawLetterSize(i, satiery_ptd[i][0], 0.000000, 0.000000);
				PlayerTextDrawTextSize(i, satiery_ptd[i][0], text_size_x, 6.518517);
				PlayerTextDrawAlignment(i, satiery_ptd[i][0], 1);
				PlayerTextDrawColor(i, satiery_ptd[i][0], td_line_color);
				PlayerTextDrawSetShadow(i, satiery_ptd[i][0], 0);
				PlayerTextDrawSetOutline(i, satiery_ptd[i][0], 0);
				PlayerTextDrawBackgroundColor(i, satiery_ptd[i][0], 255);
				PlayerTextDrawFont(i, satiery_ptd[i][0], 4);
				PlayerTextDrawSetProportional(i, satiery_ptd[i][0], 0);
				PlayerTextDrawSetShadow(i, satiery_ptd[i][0], 0);

				text_size_x = -0.000020;
				if(PlayerInfo[i][hunger] > 25)
				{
					text_size_x =(PlayerInfo[i][hunger] -25)* 1.016666;
					if(PlayerInfo[i][hunger] >= 50)text_size_x = 25 * 1.016666;
				}

				satiery_ptd[i][1] = CreatePlayerTextDraw(i, 65.416664, 305.370391, "LD_SPAC:white");
				PlayerTextDrawLetterSize(i, satiery_ptd[i][1], 0.000000, 0.000000);
				PlayerTextDrawTextSize(i, satiery_ptd[i][1], text_size_x, 6.518517);
				PlayerTextDrawAlignment(i, satiery_ptd[i][1], 1);
				PlayerTextDrawColor(i, satiery_ptd[i][1], td_line_color);
				PlayerTextDrawSetShadow(i, satiery_ptd[i][1], 0);
				PlayerTextDrawSetOutline(i, satiery_ptd[i][1], 0);
				PlayerTextDrawBackgroundColor(i, satiery_ptd[i][1], 255);
				PlayerTextDrawFont(i, satiery_ptd[i][1], 4);
				PlayerTextDrawSetProportional(i, satiery_ptd[i][1], 0);
				PlayerTextDrawSetShadow(i, satiery_ptd[i][1], 0);

				text_size_x = -0.000020;
				if(PlayerInfo[i][hunger] > 50)
				{
					text_size_x =(PlayerInfo[i][hunger] -50)* 1.016666;
					if(PlayerInfo[i][hunger] >= 75)text_size_x = 25 * 1.016666;
				}

				satiery_ptd[i][2] = CreatePlayerTextDraw(i, 92.500015, 305.370391, "LD_SPAC:white");
				PlayerTextDrawLetterSize(i, satiery_ptd[i][2], 0.000000, 0.000000);
				PlayerTextDrawTextSize(i, satiery_ptd[i][2], text_size_x, 6.518517);
				PlayerTextDrawAlignment(i, satiery_ptd[i][2], 1);
				PlayerTextDrawColor(i, satiery_ptd[i][2], td_line_color);
				PlayerTextDrawSetShadow(i, satiery_ptd[i][2], 0);
				PlayerTextDrawSetOutline(i, satiery_ptd[i][2], 0);
				PlayerTextDrawBackgroundColor(i, satiery_ptd[i][2], 255);
				PlayerTextDrawFont(i, satiery_ptd[i][2], 4);
				PlayerTextDrawSetProportional(i, satiery_ptd[i][2], 0);
				PlayerTextDrawSetShadow(i, satiery_ptd[i][2], 0);

				text_size_x = -0.000020;
				if(PlayerInfo[i][hunger] > 75)
				{
					text_size_x =(PlayerInfo[i][hunger] -75)* 1.016666;
				}


				satiery_ptd[i][3] = CreatePlayerTextDraw(i, 119.583358, 305.370422, "LD_SPAC:white");
				PlayerTextDrawLetterSize(i, satiery_ptd[i][3], 0.000000, 0.000000);
				PlayerTextDrawTextSize(i, satiery_ptd[i][3], text_size_x, 6.518517);
				PlayerTextDrawAlignment(i, satiery_ptd[i][3], 1);
				PlayerTextDrawColor(i, satiery_ptd[i][3], td_line_color);
				PlayerTextDrawSetShadow(i, satiery_ptd[i][3], 0);
				PlayerTextDrawSetOutline(i, satiery_ptd[i][3], 0);
				PlayerTextDrawBackgroundColor(i, satiery_ptd[i][3], 255);
				PlayerTextDrawFont(i, satiery_ptd[i][3], 4);
				PlayerTextDrawSetProportional(i, satiery_ptd[i][3], 0);
				PlayerTextDrawSetShadow(i, satiery_ptd[i][3], 0);

				for(new j = 0; j < 6; j ++)
				{
					TextDrawShowForPlayer(i, satiery_td[j]);
					if(j < 4)PlayerTextDrawShow(i, satiery_ptd[i][j]);
				}
				SetPVarInt(i, "hunger_td_active", 1);

				SetTimerEx("clear_hunger_td", 2000, false, "d", i);
				return 1;
			}
			else if(PlayerInfo[i][hunger] == 10 && GetPVarInt(i, "hunger_td_active") ==  0)
			{
				new Float:text_size_x = 25.416650;
				if(PlayerInfo[i][hunger]<= 25)
				{
					text_size_x = PlayerInfo[i][hunger]* 1.016666;
				}

				new td_line_color = 8388863;
				switch(PlayerInfo[i][hunger])
				{
					case 0..20: td_line_color = -1523963137;
					case 21..49: td_line_color = -5963521;
					case 50..100: td_line_color = 8388863;
				}


				satiery_ptd[i][0] = CreatePlayerTextDraw(i, 38.333286, 305.370391, "LD_SPAC:white");
				PlayerTextDrawLetterSize(i, satiery_ptd[i][0], 0.000000, 0.000000);
				PlayerTextDrawTextSize(i, satiery_ptd[i][0], text_size_x, 6.518517);
				PlayerTextDrawAlignment(i, satiery_ptd[i][0], 1);
				PlayerTextDrawColor(i, satiery_ptd[i][0], td_line_color);
				PlayerTextDrawSetShadow(i, satiery_ptd[i][0], 0);
				PlayerTextDrawSetOutline(i, satiery_ptd[i][0], 0);
				PlayerTextDrawBackgroundColor(i, satiery_ptd[i][0], 255);
				PlayerTextDrawFont(i, satiery_ptd[i][0], 4);
				PlayerTextDrawSetProportional(i, satiery_ptd[i][0], 0);
				PlayerTextDrawSetShadow(i, satiery_ptd[i][0], 0);

				text_size_x = -0.000020;
				if(PlayerInfo[i][hunger] > 25)
				{
					text_size_x =(PlayerInfo[i][hunger] -25)* 1.016666;
					if(PlayerInfo[i][hunger] >= 50)text_size_x = 25 * 1.016666;
				}

				satiery_ptd[i][1] = CreatePlayerTextDraw(i, 65.416664, 305.370391, "LD_SPAC:white");
				PlayerTextDrawLetterSize(i, satiery_ptd[i][1], 0.000000, 0.000000);
				PlayerTextDrawTextSize(i, satiery_ptd[i][1], text_size_x, 6.518517);
				PlayerTextDrawAlignment(i, satiery_ptd[i][1], 1);
				PlayerTextDrawColor(i, satiery_ptd[i][1], td_line_color);
				PlayerTextDrawSetShadow(i, satiery_ptd[i][1], 0);
				PlayerTextDrawSetOutline(i, satiery_ptd[i][1], 0);
				PlayerTextDrawBackgroundColor(i, satiery_ptd[i][1], 255);
				PlayerTextDrawFont(i, satiery_ptd[i][1], 4);
				PlayerTextDrawSetProportional(i, satiery_ptd[i][1], 0);
				PlayerTextDrawSetShadow(i, satiery_ptd[i][1], 0);

				text_size_x = -0.000020;
				if(PlayerInfo[i][hunger] > 50)
				{
					text_size_x =(PlayerInfo[i][hunger] -50)* 1.016666;
					if(PlayerInfo[i][hunger] >= 75)text_size_x = 25 * 1.016666;
				}

				satiery_ptd[i][2] = CreatePlayerTextDraw(i, 92.500015, 305.370391, "LD_SPAC:white");
				PlayerTextDrawLetterSize(i, satiery_ptd[i][2], 0.000000, 0.000000);
				PlayerTextDrawTextSize(i, satiery_ptd[i][2], text_size_x, 6.518517);
				PlayerTextDrawAlignment(i, satiery_ptd[i][2], 1);
				PlayerTextDrawColor(i, satiery_ptd[i][2], td_line_color);
				PlayerTextDrawSetShadow(i, satiery_ptd[i][2], 0);
				PlayerTextDrawSetOutline(i, satiery_ptd[i][2], 0);
				PlayerTextDrawBackgroundColor(i, satiery_ptd[i][2], 255);
				PlayerTextDrawFont(i, satiery_ptd[i][2], 4);
				PlayerTextDrawSetProportional(i, satiery_ptd[i][2], 0);
				PlayerTextDrawSetShadow(i, satiery_ptd[i][2], 0);

				text_size_x = -0.000020;
				if(PlayerInfo[i][hunger] > 75)
				{
					text_size_x =(PlayerInfo[i][hunger] -75)* 1.016666;
				}


				satiery_ptd[i][3] = CreatePlayerTextDraw(i, 119.583358, 305.370422, "LD_SPAC:white");
				PlayerTextDrawLetterSize(i, satiery_ptd[i][3], 0.000000, 0.000000);
				PlayerTextDrawTextSize(i, satiery_ptd[i][3], text_size_x, 6.518517);
				PlayerTextDrawAlignment(i, satiery_ptd[i][3], 1);
				PlayerTextDrawColor(i, satiery_ptd[i][3], td_line_color);
				PlayerTextDrawSetShadow(i, satiery_ptd[i][3], 0);
				PlayerTextDrawSetOutline(i, satiery_ptd[i][3], 0);
				PlayerTextDrawBackgroundColor(i, satiery_ptd[i][3], 255);
				PlayerTextDrawFont(i, satiery_ptd[i][3], 4);
				PlayerTextDrawSetProportional(i, satiery_ptd[i][3], 0);
				PlayerTextDrawSetShadow(i, satiery_ptd[i][3], 0);

				for(new j = 0; j < 6; j ++)
				{
					TextDrawShowForPlayer(i, satiery_td[j]);
					if(j < 4)PlayerTextDrawShow(i, satiery_ptd[i][j]);
				}
				SetPVarInt(i, "hunger_td_active", 1);

				SetTimerEx("clear_hunger_td", 2000, false, "d", i);
				return 1;
			}

		}
		else
		{
			if(TeamPaint[i] == 0 && is_player_race_regged[i] == 0 && GetTickCount() -p_t_info[i][p_update] < 1000 && GetPVarInt(i, "p_dead") == 0)
			{
				set_health(i, p_t_info[i][p_health] -2.0);
				PlayerInfo[i][hunger] = 0;
			}
		}


		if(p_t_info[i][phone_id] != INVALID_PLAYER_ID && p_t_info[i][phone_caller] == 0)
		{
			PlayerInfo[i][phone_balance] --;
			if(PlayerInfo[i][phone_balance] < 1)
			{
				SetPlayerSpecialAction(i, SPECIAL_ACTION_STOPUSECELLPHONE);
				SetPlayerSpecialAction(p_t_info[i][phone_id], SPECIAL_ACTION_STOPUSECELLPHONE);
				RemovePlayerAttachedObject(i, 2);
				RemovePlayerAttachedObject(p_t_info[i][phone_id], 2);

				SendClientMessage(p_t_info[i][phone_id], 0x940000FF, "Связь оборвалась...");
				SendClientMessage(i, 0x940000FF, "Разговор прерван. На Вашем балансе закончились средства!");

				p_t_info[p_t_info[i][phone_id]][phone_id] = INVALID_PLAYER_ID;
				p_t_info[p_t_info[i][phone_id]][phone_caller] = 0;

				p_t_info[i][phone_id] = INVALID_PLAYER_ID;
				p_t_info[i][phone_caller] = 0;

			}
		}
	}
	return 1;
}

stock convert_time(seconds)
{
	new time_string[12],
		minutes = floatround(seconds / 60);

	seconds -= minutes * 60;

	format(time_string, sizeof(time_string), "%02d:%02d", minutes, seconds);
	return time_string;
}


stock pay_day_time()
{
    Profiler_Dump();

	for(new j = 0; j < gz_count; j ++)
	{
		if(gz_info[j][gz_owner] == 0) continue;
		f_info[gz_info[j][gz_owner] -1][f_money] += 500;
	}
	for(new b = 0; b < b_count; b ++)
	{
		if(b_info[b][b_family] > 0) family_info[b_info[b][b_family] -1][fam_bank] += 1000;
		if(b_info[b][b_mafia] > 20)
		{
			f_info[b_info[b][b_mafia] -1][f_money] += 2000;
			update_gdorm_text(b_info[b][b_mafia]);
		}
	}

	foreach(new i: logged_players)
	{
		switch(p_t_info[i][p_data][1])
		{
			case 0:
			{
				new newhour, newminute, newsecond;
				gettime(newhour, newminute, newsecond);

				SetPlayerTime(i, newhour, newminute);
				SetPlayerWeather(i, global_weather);
			}
			case 1..9:
			{
				SetPlayerWeather(i, 4);
				SetPlayerTime(i, 18, 0);
			}
			case 10:
			{
				SetPlayerTime(i, 12, 0);
				SetPlayerWeather(i, global_weather);
			}
		}

		if(GetPVarInt(i, !"p_biz_id") != 0)
		{
			SetPlayerWeather(i, 4);
			SetPlayerTime(i, 18, 0);
		}

		if(PlayerInfo[i][hour_played] + floatround(NetStats_GetConnectedTime(i) / 1000) < 600)
		{
			SendClientMessage(i, col_gray, !""scm_error"Для получения зарплаты нужно отыграть "c_orange_red"10 минут");
			continue;
		}

		if(PlayerInfo[i][member] && PlayerInfo[i][admin])
		{
			if(!radio_player(i) && !gang_player(i))
			{
				if(f_info[PlayerInfo[i][member] -1][f_money] > f_info[PlayerInfo[i][member] -1][f_rank_salary][PlayerInfo[i][rank] -1])
				{
					PlayerInfo[i][salary] += f_info[PlayerInfo[i][member] -1][f_rank_salary][PlayerInfo[i][rank] -1];
					f_info[PlayerInfo[i][member] -1][f_money] -= f_info[PlayerInfo[i][member] -1][f_rank_salary][PlayerInfo[i][rank] -1];
				}
			}
			else
			{
				PlayerInfo[i][salary] += f_info[PlayerInfo[i][member] -1][f_rank_salary][PlayerInfo[i][rank] -1];
			}
		}

		if(PlayerInfo[i][wanted] > 0)
		{
			if(PlayerInfo[i][enhancement][1] && PlayerInfo[i][wanted] >= 2)
				PlayerInfo[i][wanted] -= 2;
			else
				PlayerInfo[i][wanted] --;
			update_int_sql(i, "u_wanted", PlayerInfo[i][wanted]);
		}

		SendClientMessage(i, col_white, "");
		SendClientMessage(i, col_white, "------"c_gold"Банковский чек"c_white" ------");

		new newban_count = PlayerInfo[i][bank] + PlayerInfo[i][salary];
		new count_vip = floatround(newban_count * 0.015);
		if(PlayerInfo[i][vip]) newban_count += count_vip;

		if(PlayerInfo[i][salary] > 0) PlayerInfo[i][tax] += floatround(PlayerInfo[i][salary] * 0.05 / PlayerInfo[i][tax_donate]);
		foreach(new veh_id: player_vehicles[i]) PlayerInfo[i][tax] +=  floatround(RandomEx(300, 500) / PlayerInfo[i][tax_donate]);

        new _text_string[128];
        format(_text_string, sizeof(_text_string), "Зарплата: "c_green"%d$", PlayerInfo[i][salary]);
        SendClientMessage(i, col_white, _text_string);
        format(_text_string, sizeof(_text_string), "Налог: "c_orange_red"%d$"c_white". (Подробнее -> "c_gold"/nalog"c_white")", PlayerInfo[i][tax]);
        SendClientMessage(i, col_white, _text_string);

        if(PlayerInfo[i][vip])
		{
	        format(_text_string, sizeof(_text_string), "Полученные средства по банковскому вкладу: "c_green"%d$", count_vip);
	        SendClientMessage(i, col_white, _text_string);
	    }

        if(PlayerInfo[i][rent_house] != -1)
        {
            new h = PlayerInfo[i][rent_house];
            new _rent_price = h_info[h][h_rent_price];
            if(PlayerInfo[i][bank] >= _rent_price)
            {
                PlayerInfo[i][bank] -= _rent_price;

                format(_text_string, sizeof(_text_string), "Аренда жилого помещения: "c_orange_red"-%d$", _rent_price);
                SendClientMessage(i, col_white, _text_string);

                h_info[h][h_safe_data][1] += _rent_price;

                new query_string[145];
                format(query_string, sizeof(query_string), "UPDATE `houses` SET `h_safe_data`='%d|%d|%d|%d|%d|%d|%d|%d' WHERE `h_id`='%d' LIMIT 1", h_info[h][h_safe_data][0], h_info[h][h_safe_data][1], h_info[h][h_safe_guns][0], h_info[h][h_safe_guns][1], h_info[h][h_safe_guns][2], h_info[h][h_safe_guns][3], h_info[h][h_safe_guns][4], h_info[h][h_safe_guns][5], h_info[h][h_id]);
                mysql_query(sql_connection, query_string);
            }
            else
            {
                PlayerInfo[i][rent_house] = -1;
                update_int_sql(i, "u_renthouse", PlayerInfo[i][rent_house]);
                SendClientMessage(i, col_white, !""scm_error"Вы были выселены из арендуемого жилого помещения.");
            }
        }

        format(_text_string, sizeof(_text_string), "Основной счет: "c_green"%d$", newban_count);
        SendClientMessage(i, col_white, _text_string);

		PlayerInfo[i][salary] = 0;
		PlayerInfo[i][bank] = newban_count;

		new admin_lvl = PlayerInfo[i][admin];
		if((1 <= admin_lvl <= 8))
		{
			new salary_admin = salary_administrators[admin_lvl -1];
			format(_text_string, sizeof(_text_string), "Зарплата за администрирования: "c_green"%d$", salary_admin);
			SendClientMessage(i, col_white, _text_string);

			give_money(i, salary_admin);
			insert_money_log(i, INVALID_PLAYER_ID, salary_admin, "зарплата за администрирования");
		}

		SendClientMessage(i, col_white, "-----------------------");

		PlayerInfo[i][exp] += 1 * server_bonus;
		if(PlayerInfo[i][level] >= 3 && PlayerInfo[i][promocode_money] > 0)
		{
			give_money(i, PlayerInfo[i][promocode_money]);
			insert_money_log(i, INVALID_PLAYER_ID, PlayerInfo[i][promocode_money], "промокод бонус");

			PlayerInfo[i][promocode_money] = 0;
			update_int_sql(i, "u_promomoney", PlayerInfo[i][promocode_money]);

			SendClientMessage(i, col_white, !""scm_info"Вы получили денежный бонус за введённый промокод.");
		}

		if(PlayerInfo[i][exp] >= (PlayerInfo[i][level] + 1) * 4)
		{
			PlayerInfo[i][exp] -= (PlayerInfo[i][level] + 1) * 4;
			PlayerInfo[i][level] ++;
			PlayerInfo[i][age] ++;
			SetPlayerScore(i, PlayerInfo[i][level]);
			update_int_sql(i, "u_level", PlayerInfo[i][level]);
			update_int_sql(i, "u_age", PlayerInfo[i][age]);

			SendClientMessage(i, col_white, !""scm_info"Ваш игровой уровень повысился.");

			if(PlayerInfo[i][level] == 3)
			{
				new tquery_string[115];
				format(tquery_string, sizeof(tquery_string), "SELECT `u_id`,`u_name` FROM `users` WHERE `u_name` IN (SELECT `u_referal` FROM `users` WHERE `u_id`='%d')", PlayerInfo[i][id]);
				mysql_tquery(sql_connection, tquery_string, "referal_bonus_callback", "i", i);
			}
		}
		new query_string[130];
		format(query_string, sizeof(query_string), "UPDATE `users` SET `u_exp`='%d',`u_tax`='%d',`u_bank`='%d' WHERE `u_id`='%d' LIMIT 1", PlayerInfo[i][exp], PlayerInfo[i][tax], PlayerInfo[i][bank], PlayerInfo[i][id]);
		mysql_query(sql_connection, query_string);

		PlayerInfo[i][hour_played] = 0;
	}
	return 1;
}

callback:gazon_timer()
{
    foreach(new i: logged_players)
    {
        if(check_taxi_park > 20 || check_verona_beach > 20 || check_medic_ls > 20 || check_mayor_ls > 20 || check_glenpark_1 > 20 || check_glenpark_2 > 20)
		{
        	if(PlayerInfo[i][job] == 7) SendClientMessage(i, -1, ""c_server"* S.INFO: "c_grey"В штате снова выросла трава.");
		}
	}
    if(check_taxi_park > 20 || check_verona_beach > 20 || check_medic_ls > 20 || check_mayor_ls > 20 || check_glenpark_1 > 20 || check_glenpark_2 > 20)
    {
	    check_taxi_park = 0;
	    check_verona_beach = 0;
	    check_medic_ls = 0;
	    check_mayor_ls = 0;
	    check_glenpark_1 = 0;
	    check_glenpark_2 = 0;

        for(new i = 0; i < sizeof(object_park_ls); i++) {
        	DestroyDynamicObject(object_park_ls[i]);
	        object_park_ls[i] = CreateDynamicObject(14468, check_job_mower[i][0], check_job_mower[i][1], check_job_mower[i][2], check_job_mower[i][3],
			check_job_mower[i][4], check_job_mower[i][5], -1, -1);
	        status_check_job_mower[i] = false;
   			status_restore_check_job_mower[i] = false;
		}
	}
	return 1;
}

callback:second_timer() //global timer
{
	new hor,m,s;
	
	foreach(new i: logged_players)
	{
		if(PlayerInfo[i][money] > 999999 && !IsPlayerInAnyVehicle(i) && GetPlayerWeapon(i) == 0) SetPlayerAttachedObject(i, 9, 1210, 5, 0.299999, 0.099999, 0.000000, 0.000000, -83.000000, 0.000000, 1.000000, 1.000000, 1.000000);
		else RemovePlayerAttachedObject(i,9);
		
		if(PlayerInfo[i][pIsOpenAuctionMenu] && bureauInfo[PlayerInfo[i][pBureau]][PlayerInfo[i][pCurrentTake]][bActive])
		{
			new string[47],
				hour, minute, second,
				bureau = PlayerInfo[i][pBureau],
				vehicle = PlayerInfo[i][pCurrentTake];

			ToHHMMSS(bureauInfo[bureau][vehicle][bTime], hour, minute, second);
			format(string, sizeof string, "%02d:%02d:%02d", hour, minute, second);

			PlayerTextDrawSetString(i, AuctionPlayerTextDraws[i][19], string);
			PlayerTextDrawShow(i, AuctionPlayerTextDraws[i][19]);
		}
		
		if(PlayerInfo[i][job] == 7 && GetPVarInt(i, "start_job_mower") && GetPlayerVehicleID(i) == player_rentcar[i]) {
			if(timer_job_mower[i] > 1) {
		        timer_job_mower[i]--;
		        new str[10];
		        format(str, sizeof(str), "~g~ %d", timer_job_mower[i]);
				GameTextForPlayer(i, str, 800, 3);
		    }
		    if(timer_job_mower[i] == 1) {
		        new zp = RandomEx(10, 50);
		        timer_job_mower[i] = 0;
		        TogglePlayerControllable(i, true);
		       	new text_string[128];
		        format(text_string, sizeof(text_string), ""c_server"* S.INFO: "c_grey"Вы убрали куст. За куст Вы заработали "c_server"$%d", zp);
				SendClientMessage(i, -1, text_string);
		        
		        give_money(i, zp);
		        
		        SetPVarInt(i,"gazon_salary", GetPVarInt(i,"gazon_salary") + 300);
			}
		    for(new x = 0; x < sizeof(object_park_ls); x++) {
			    if(IsPlayerInRangeOfPoint(i, 2.0, check_job_mower[x][0], check_job_mower[x][1], check_job_mower[x][2])) {
			        if(status_check_job_mower[x] == false)  {
						if(i <= 32) check_taxi_park++;
						if(i > 32 && i <= 79) check_verona_beach++;
						if(i > 79 && i <= 138) check_medic_ls++;
						if(i > 138 && i <= 176) check_mayor_ls++;
						if(i > 176 && i <= 226) check_glenpark_1++;
						if(i > 226) check_glenpark_2++;
						timer_job_mower[i] = 11;
						TogglePlayerControllable(i, false);
				    	MoveDynamicObject(object_park_ls[x],check_job_mower[x][0], check_job_mower[x][1], check_job_mower[x][2]-1,0.07,
				    	check_job_mower[x][3], check_job_mower[x][4], check_job_mower[x][5]);
	                    status_check_job_mower[x] = true;
	                    status_restore_check_job_mower[x] = false;
					}
		        }
			}
	    }
	}
	
	gettime(hor,m,s);
	if(m == 0 && s >= 11 && s <= 16) pay_day = 0;
   	if(m == 0 && s >= 0 && s <= 10 && pay_day == 0)
   	{
   	    pay_day = 1;
   	    SetWorldTime(hor);
   	    pay_day_time();
		if(hor == 4)
		{
			SendClientMessageToAll(col_yellow, "Происходит технический рестарт сервера. Процесс займет несколько секунд.");
			for(new i = 0; i < MAX_PLAYERS; i ++)
			{
				kick_player(i);
			}

			new _sql_string[156];
			for(new t = 0; t < b_count; t ++)
			{
				format(_sql_string, 112, "INSERT INTO `businesses_history` (`bh_date`,`bh_business`,`bh_count`) VALUES (NOW()-INTERVAL 1 DAY,'%d','%d')",
				b_info[t][b_id], b_info[t][b_cash_today]);
				mysql_query(sql_connection, _sql_string);

				new business_tax = floatround(b_info[t][b_price]/ 150);
				if(b_info[t][b_improve][0]) business_tax = floatround (b_info[t][b_price]/ 250);



				format(_sql_string, 156, "UPDATE `users` SET `u_tax` = `u_tax`+'%d' WHERE `u_id` = '%d' LIMIT 1", business_tax,
																													b_info[t][b_owner_inc]);
				mysql_query(sql_connection, _sql_string);

				b_info[t][b_cash_today] = 0;
				format(_sql_string, 156, "UPDATE `businesses` SET `b_product` = '%d',`b_cost` = '%d',`b_money` = '%d' WHERE `b_id` = '%d' LIMIT 1",
				b_info[t][b_product], b_info[t][b_cost], b_info[t][b_money], b_info[t][b_id]);
				mysql_query(sql_connection, _sql_string);
			}

			format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '1' LIMIT 1", dorm_count[DORM_SAWMILL]);
			mysql_query(sql_connection, _sql_string);

			format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '2' LIMIT 1", dorm_count[DORM_MINE]);
			mysql_query(sql_connection, _sql_string);

			format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '3' LIMIT 1", dorm_count[DORM_FACTORY_GUNS]);
			mysql_query(sql_connection, _sql_string);

			format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '4' LIMIT 1", mine_count[MINE_MELTED]);
			mysql_query(sql_connection, _sql_string);

			format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '5' LIMIT 1", mine_count[MINE_UNMELTED]);
			mysql_query(sql_connection, _sql_string);

			format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '6' LIMIT 1", dorm_count[DORM_FACTORY_MINE]);
			mysql_query(sql_connection, _sql_string);

			format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '7' LIMIT 1", dorm_count[DORM_FACTORY_WOOD]);
			mysql_query(sql_connection, _sql_string);

			format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '8' LIMIT 1", election_status);
			mysql_query(sql_connection, _sql_string);

			for(new h = 0; h < house_count; h ++)
			{
				format(_sql_string, 112, "UPDATE `houses` SET `h_seed` = '%d',`h_seed_result` = '%d' WHERE `h_id` = '%d' LIMIT 1", h_info[h][h_seed], h_info[h][h_seed_result], h_info[h][h_id]);
				mysql_query(sql_connection, _sql_string);

				format(_sql_string, 156, "UPDATE `users` SET `u_tax` = `u_tax`+'%d' WHERE `u_id` = '%d' LIMIT 1",
				floatround(h_info[h][h_price]/ 350), h_info[h][h_owner]);
				mysql_query(sql_connection, _sql_string);
			}

			for(new j = 0; j < fraction_count; j ++)
			{
				format(_sql_string, 146, "UPDATE `fractions` SET `f_money` = '%d',`f_materials`='%d',`f_guns` = '%d' WHERE `f_id` = '%d' LIMIT 1",
				f_info[j][f_money], f_info[j][f_materials], f_info[j][f_guns], j + 1);
				mysql_tquery(sql_connection, _sql_string, "", "");
			}
			
			for(new fi = 0; fi < island_count; fi++)
			{
				new island_tax = floatround(fi_info[fi][fi_price] / 250);
				if(fi_info[fi][fi_improve][fi_improve_subsidies]) island_tax = floatround(fi_info[fi][fi_price] / 500);

				new query_string[130];
				format(query_string, sizeof(query_string), "UPDATE `users` SET `u_tax`=`u_tax`+'%d' WHERE `u_id`='%d' LIMIT 1", island_tax, fi_info[fi][fi_owner]);
				mysql_query(sql_connection, query_string);
			}
			
			SendRconCommand("gmx");
		}
  	}
  	for(new veh = 0; veh < MAX_VEHICLES; veh ++)
	{
		if(GetVehicleModel(veh) == 0) continue;

		if(veh_info[veh -1][v_pier_time] > 0) veh_info[veh -1][v_pier_time] --;

		if(veh_info[veh -1][v_now_pos][0] != 0 && veh_info[veh -1][v_now_pos][1] != 0 && veh_info[veh -1][v_now_pos][2] != 0 && veh_info[veh -1][v_driver] != INVALID_PLAYER_ID)
		{
			new Float:_distance = GetVehicleDistanceFromPoint(veh, veh_info[veh -1][v_now_pos][0], veh_info[veh -1][v_now_pos][1], veh_info[veh -1][v_now_pos][2]);
			if(_distance / 1000 < 5)	veh_info[veh -1][v_millage] += _distance / 1000;
		}
		GetVehiclePos(veh, veh_info[veh -1][v_now_pos][0], veh_info[veh -1][v_now_pos][1], veh_info[veh -1][v_now_pos][2]);
		if(GetEngineStatus(veh) == 1 && ! v_plane(veh))
		{
			if(veh_info[veh -1][v_fuel] > 0)
			{
				if(veh_info[veh -1][v_engine_boost] > 0)
				{
					veh_info[veh -1][v_fuel] -= 0.03 *(veh_info[veh -1][v_engine_boost]* 5)+ 0.01;
				}
				else veh_info[veh -1][v_fuel] -= 0.03;
			}
			if(veh_info[veh -1][v_fuel] > 0.5 && veh_info[veh -1][v_fuel] < 0.6)
			{
				new engine,lights,alarm,doors,bonnet,boot,objective;
				GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, objective);

				SetVehicleParamsEx(veh, VEHICLE_PARAMS_OFF, lights, alarm, doors, bonnet, boot, objective);
				veh_info[veh -1][v_fuel] = 0.0;
			}
		}

		if(veh_info[veh -1][v_pier_status] == 1 && veh_info[veh -1][v_pier_time] == 0)
		{
			new random_car_pos = random(12), island_id = veh_info[veh -1][v_pier_island] -1;
			veh_info[veh -1][v_pos][0] = delivery_car_pos_island[island_id][random_car_pos][0];
			veh_info[veh -1][v_pos][1] = delivery_car_pos_island[island_id][random_car_pos][1];
			veh_info[veh -1][v_pos][2] = delivery_car_pos_island[island_id][random_car_pos][2];
			veh_info[veh -1][v_pos][3] = delivery_car_pos_island[island_id][random_car_pos][3];

			new query_string[190];
			format(query_string, sizeof(query_string), "UPDATE `family_vehicles` SET `sv_pos_x`='%.2f',`sv_pos_y`='%.2f',`sv_pos_z`='%.2f',`sv_pos_a`='%.2f',`sv_vw`='%d',`sv_int`='%d' WHERE `sv_id`='%d'", veh_info[veh -1][v_pos][0], veh_info[veh -1][v_pos][1], veh_info[veh -1][v_pos][2], veh_info[veh -1][v_pos][3], veh_info[veh -1][v_vw], veh_info[veh -1][v_int], veh_info[veh -1][v_id]);
			mysql_query(sql_connection, query_string);

			SetVehiclePos(veh, veh_info[veh -1][v_pos][0], veh_info[veh -1][v_pos][1], veh_info[veh -1][v_pos][2]);
			SetVehicleZAngle(veh, veh_info[veh -1][v_pos][3]);

			LinkVehicleToInterior(veh, 0);
			SetVehicleVirtualWorld(veh, 0);

			veh_info[veh -1][v_pier_status] = 0;
		}

		if(veh_info[veh -1][v_pier_status] > 1 && veh_info[veh -1][v_pier_time] == 0)
		{
			new random_car_pos = random(12);
			veh_info[veh -1][v_pos][0] = delivery_car_pos_pier[veh_info[veh -1][v_pier_status] -2][random_car_pos][0];
			veh_info[veh -1][v_pos][1] = delivery_car_pos_pier[veh_info[veh -1][v_pier_status] -2][random_car_pos][1];
			veh_info[veh -1][v_pos][2] = delivery_car_pos_pier[veh_info[veh -1][v_pier_status] -2][random_car_pos][2];
			veh_info[veh -1][v_pos][3] = delivery_car_pos_pier[veh_info[veh -1][v_pier_status] -2][random_car_pos][3];

			new query_string[190];
			format(query_string, sizeof(query_string), "UPDATE `family_vehicles` SET `sv_pos_x`='%.2f',`sv_pos_y`='%.2f',`sv_pos_z`='%.2f',`sv_pos_a`='%.2f',`sv_vw`='%d',`sv_int`='%d' WHERE `sv_id`='%d'", veh_info[veh -1][v_pos][0], veh_info[veh -1][v_pos][1], veh_info[veh -1][v_pos][2], veh_info[veh -1][v_pos][3], veh_info[veh -1][v_vw], veh_info[veh -1][v_int], veh_info[veh -1][v_id]);
			mysql_query(sql_connection, query_string);

			SetVehiclePos(veh, veh_info[veh -1][v_pos][0], veh_info[veh -1][v_pos][1], veh_info[veh -1][v_pos][2]);
			SetVehicleZAngle(veh, veh_info[veh -1][v_pos][3]);

			LinkVehicleToInterior(veh, 0);
			SetVehicleVirtualWorld(veh, 0);

			veh_info[veh -1][v_pier_status] = 0;
		}
	}

	new newhour, newsecond;

	for(new j = 0; j < 5; j ++)
	{
		if(capture_gang_cd[j] > 0)capture_gang_cd[j] --;
	}
	if(mafia_cd > 0)mafia_cd --;
	if(family_cd > 0)family_cd --;

	if(closed_containers != 0 && opened_containers == 0)
	{
		for(new i = 0; i < MAX_CONTAINERS; i ++)
		{
			if(container_info[i][con_status][0] == 1)
			{
				if(container_info[i][con_status][1] == 1)
				{
					DestroyDynamicObject(container_info[i][con_object][1]);
					container_info[i][con_object][1] = 0;
					container_info[i][con_status][1] = 0;
					closed_containers --;
				}
				DestroyDynamicObject(container_info[i][con_object][0]);
				container_info[i][con_object][0] = CreateDynamicObject(2669,
															container_pos_open[i][0],
															container_pos_open[i][1],
															container_pos_open[i][2],
															container_pos_open[i][3],
															container_pos_open[i][4],
															container_pos_open[i][5], -1, -1, -1, 300.0, 300.0);

				SetDynamicObjectMaterial(container_info[i][con_object][0], 0, -1, "none", "none", 0xFFF0FFFF);
				SetDynamicObjectMaterial(container_info[i][con_object][0], 2, 10850, "bakerybit2_sfse", "frate64_yellow", 0x00000000);
				SetDynamicObjectMaterial(container_info[i][con_object][0], 3, 10850, "bakerybit2_sfse", "frate_doors64yellow", 0x00000000);
				container_info[i][con_count] = 20;

				closed_containers --;
				opened_containers = i + 1;

				foreach(new pl_id: logged_players)
				{
					if(PlayerInfo[pl_id][timejob] == job_porter && ! IsPlayerAttachedObjectSlotUsed(pl_id, 1))
					{
						SetPlayerCheckpoint(pl_id, porter_pos_take[i][0], porter_pos_take[i][1], porter_pos_take[i][2], 2.5);
						job_ac_tick[pl_id] = GetTickCount();
					}
				}
				container_info[i][con_status][0] = 2;
				break;
			}
		}
	}
	
 	if(TimerPaintBall && (StartPaintBall == 1 || StartPaintBall == 2))
 	{
	 	TimerPaintBall--;
 	    if(StartPaintBall == 2)
 	    {
 			new td_str[60];
			format(td_str, sizeof(td_str), "%s~n~Team Red: ~b~~h~%i~n~Team Blue: ~b~~h~%i", convert_time(TimerPaintBall), RedScore, BlueScore);
			TextDrawSetString(PaintTextDraws, td_str);
 	    }
		else if(StartPaintBall == 1)
		{
			if(TimerPaintBall == 5)
			{
				if(!RedPlayer || ! BluePlayer)
				{
					foreach(new i: logged_players)
					{
						if(TeamPaint[i] != 0)
						{
							TeamPaint[i] = 0;
							give_money(i, 500);
							insert_money_log(i, INVALID_PLAYER_ID, 500, "регистрация на мп возврат");
						}
					}
					StartPaintBall =
					RedScore =
					BlueScore =
					RedPlayer =
					BluePlayer = 0;

					SendClientMessageToAll(col_gray, ""c_yellow"* S.INFO: Матч по PaintBall отменен из-за недостаточного количества участников.");
				}
				else
				{
					new spawn;
					foreach(new i: logged_players)
					{
						if(TeamPaint[i])
						{
							set_health(i, 100.0);
							SetPlayerSkin(i, SkinPaint[PlayerInfo[i][gender]][TeamPaint[i] -1]);
							spawn = random(10);
							switch(TeamPaint[i])
							{
								case 1:
								{
									set_pos(i, SpawnBlueTeam[PaintBallMap-1][spawn][0], SpawnBlueTeam[PaintBallMap-1][spawn][1], SpawnBlueTeam[PaintBallMap-1][spawn][2], SpawnBlueTeam[PaintBallMap-1][spawn][3], 0, 45);
									SetPlayerColor(i, 0x33AAFFFF);
								}
								case 2:
								{
									set_pos(i, SpawnRedTeam[PaintBallMap-1][spawn][0], SpawnRedTeam[PaintBallMap-1][spawn][1], SpawnRedTeam[PaintBallMap-1][spawn][2], SpawnRedTeam[PaintBallMap-1][spawn][3], 0, 45);
									SetPlayerColor(i, 0xAA3333FF);
								}
							}
							TextDrawShowForPlayer(i, PaintTextDraws);
							PaintStats[i] = CreatePlayerTextDraw(i, 553.411437, 368.083312, "Kill: ~b~~h~0~n~Death: ~b~~h~0");
							PlayerTextDrawLetterSize(i, PaintStats[i], 0.317293, 1.214999);
							PlayerTextDrawAlignment(i, PaintStats[i], 1);
							PlayerTextDrawColor(i, PaintStats[i], -1);
							PlayerTextDrawSetShadow(i, PaintStats[i], 0);
							PlayerTextDrawSetOutline(i, PaintStats[i], 1);
							PlayerTextDrawBackgroundColor(i, PaintStats[i], 51);
							PlayerTextDrawFont(i, PaintStats[i], 2);
							PlayerTextDrawSetProportional(i, PaintStats[i], 1);
							PlayerTextDrawShow(i, PaintStats[i]);

							TogglePlayerControllable(i, 0);
							reset_player_weapon(i);
							give_weapon(i, 24, 2000);
							give_weapon(i, 25, 2000);
							give_weapon(i, 31, 2000);

							SendClientMessage(i, -1, ""c_server"Для выхода из игры используйте: /exitpaint");
						}
					}
				}
			}
		}
   	}
	if(TimerPaintBall <= 0 && StartPaintBall == 1)
	{
		StartPaintBall = 2;
		TimerPaintBall = 300;
		RedScore =
		BlueScore =
		RedPlayer =
		BluePlayer = 0;
		SendClientMessageToAll(col_gray, ""c_yellow"* S.INFO: Матч по PaintBall начался.");
		foreach(new i: logged_players)
		{
		    if(TeamPaint[i])
		    {
				GameTextForPlayer(i, "~g~~h~~h~START", 2000, 4);
				TogglePlayerControllable(i, 1);
			}
		}
	}


	if(StartPaintBall == 2 && TimerPaintBall <= 0)
	{
		foreach(new i: logged_players)
		{
		    if(TeamPaint[i] > 0)
		    {
			    set_health(i, 100);
	   			reset_player_weapon(i);
	   			SetPlayerSkin(i, PlayerInfo[i][skin]);
				if(is_fraction_duty {i} == 1)SetPlayerColor(i, f_info[PlayerInfo[i][member] -1][f_radar_color]), SetPlayerSkin(i, PlayerInfo[i][org_skin]);
				else SetPlayerColor(i, 0xFFFFFF80), SetPlayerSkin(i, PlayerInfo[i][skin]); // col_white
				set_pos(i, 1298.1658, -1360.8027, 35.8113, 21.7293, 0, 5);
				TextDrawHideForPlayer(i, PaintTextDraws);
				PlayerTextDrawHide(i, PaintStats[i]);
                for(new j = 0; j < 5; j ++)if(!IsPlayerMobile(i)) SendDeathMessageToPlayer(i, 1001, 1001, 200);

				switch(TeamPaint[i])
				{
					case 1:
					{
						if(BlueScore > RedScore)
						{
							if(BluePlayer == 0)BluePlayer = 1;
							if(RedPlayer == 0)RedPlayer = 1;
							new pay_money;
							switch(TeamPaint[i])
							{
								case 1: pay_money = paintball_bank / BluePlayer;
								case 2: pay_money = paintball_bank / RedPlayer;
							}
							give_money(i, pay_money);
							insert_money_log(i, INVALID_PLAYER_ID, pay_money, "выигрыш пеинт");

							new text_string[128];
							format(text_string, 128, ""c_yellow"* S.INFO: Ваша команда победила! Ваш приз составил: %d$.", pay_money);
							SendClientMessage(i, col_gray, text_string);
						}
					}
					case 2:
					{
						if(BluePlayer == 0)BluePlayer = 1;
						if(RedPlayer == 0)RedPlayer = 1;
						if(BlueScore < RedScore)
						{
							new pay_money;
							switch(TeamPaint[i])
							{
								case 1: pay_money = paintball_bank / BluePlayer;
								case 2: pay_money = paintball_bank / RedPlayer;
							}
							give_money(i, pay_money);
							insert_money_log(i, INVALID_PLAYER_ID, pay_money, "выигрыш пеинт");

							new text_string[128];
							format(text_string, 128, ""c_yellow"* S.INFO: Ваша команда победила! Ваш приз составил: %d$.", pay_money);
							SendClientMessage(i, col_gray, text_string);
						}
					}
				}

				TeamPaint[i] = KillPaint[i] = DeathPaint[i] = 0;
			}
		}
		paintball_bank = 0;
		StartPaintBall = RedScore =	BlueScore =	RedPlayer =	BluePlayer = 0;
		SendClientMessageToAll(col_gray, ""c_yellow"* S.INFO: Матч по PaintBall завершен.");
	}





    for(new d; d < MAX_ADVERTS; d ++)
	{
//		printf("%d %d %d %d", ad_info[d][ad_time], ad_info[d][ad_checked], strlen(ad_info[d][ad_text]), IsPlayerConnected(ad_info[d][ad_id]));
		if(ad_info[d][ad_time] > 0)ad_info[d][ad_time] --;
		if(ad_info[d][ad_checked]&& ad_info[d][ad_time] == 0)
		{
		    if(IsPlayerConnected(ad_info[d][ad_id]) && strlen(ad_info[d][ad_text]) > 3)
		    {
				new scm_string[144];
				if(ad_info[d][ad_phone_number] != 0)format(scm_string, 144,"%s. {00CC33}Отправил: %s [%d] (тел. %d)",ad_info[d][ad_text], ad_info[d][ad_sender],ad_info[d][ad_id],ad_info[d][ad_phone_number]);
				else format(scm_string, 144,"%s. {00CC33}Отправил: %s [%d]",ad_info[d][ad_text], ad_info[d][ad_sender],ad_info[d][ad_id]);
				foreach(new i: logged_players)
				{
					SendClientMessage(i, 0x33D65CAA, scm_string);
				}
				if(radio_player(ad_info[d][ad_checker_id]))
				{

					format(scm_string, 128, "  Объявление проверил сотрудник NPR: %s (%i)", ad_info[d][ad_checker], ad_info[d][ad_checker_id]);
					foreach(new i: logged_players)
					{
						SendClientMessage(i, 0x00A329AA, scm_string);
					}
				}
				strdel(ad_info[d][ad_sender],0,24);
				ad_info[d][ad_phone_number] = 0;
				strdel(ad_info[d][ad_text],0,100);
				strdel(ad_info[d][ad_checker],0,24);
				ad_info[d][ad_checker_id] = -1;
				ad_info[d][ad_id] = -1;
				ad_info[d][ad_busy] = false;
				ad_info[d][ad_checked] = false;
				ad_info[d][ad_checking] = false;
				ad_info[d][ad_time] = 0;
			}
			else
			{
   				strdel(ad_info[d][ad_sender],0,24);
				ad_info[d][ad_phone_number] = 0;
				strdel(ad_info[d][ad_text],0,100);
				strdel(ad_info[d][ad_checker],0,24);
				ad_info[d][ad_busy] = false;
				ad_info[d][ad_checker_id] = -1;
				ad_info[d][ad_id] = -1;
				ad_info[d][ad_checked] = false;
				ad_info[d][ad_checking] = false;
				ad_info[d][ad_time] = 0;
			}
		}
	}
	for(new i; i < MAX_BONE; i ++)
	{
		if(dice_info[i][b_started] > 0)
		{
			dice_info[i][b_started] --;
			new gt_string[6];
			foreach(new g: logged_players)
			{
				if(GetPVarInt(g,"Stol")-1 == i && (GetPVarInt(g,"InGame") || dice_info[i][b_crupie] == g))
				{
					if(dice_info[i][b_started] == 0 && GetPVarInt(g, "InGame") ==  1)SetPVarInt(g, "InGame", random(11)+ 2), UpdateBone(i);
					else if(dice_info[i][b_started] > 0)
					{
						format(gt_string, 6, "~g~%i", dice_info[i][b_started]);
						GameTextForPlayer(g, gt_string, 1200, 6);
					}
				}
			}
			if(dice_info[i][b_started] == 0) return ShowItog(i);
		}
	}


	if(newhour == 0 && newsecond == 5)
	{
		mysql_tquery(sql_connection, "UPDATE `users_bans` SET `u_b_days`=`u_b_days` -1 WHERE 1", "", "");
//		mysql_tquery(sql_connection, "UPDATE `users_bans` SET `u_b_days`=`u_b_days` -1 WHERE 1", "", "");
	}
    new hour, minute,second;
	gettime(hour,minute,second);
	if(minute == 15 && second == 0 &&(hour == 12 || hour == 14 || hour == 16 || hour == 18 || hour == 20 || hour == 22 || hour == 0 || hour == 2 || hour == 4 || hour == 6 || hour == 8 || hour == 10) && StartPaintBall == 0)
	{
		TimerPaintBall = 300;
		StartPaintBall = 1;
		RedScore = BlueScore = RedPlayer = BluePlayer = 0;

		if(++ PaintBallMap > 2)PaintBallMap = 1;
		foreach(new i: logged_players)
		{
			if(TeamPaint[i])
			{
				TeamPaint[i] = KillPaint[i] = DeathPaint[i] = 0;
				set_pos(i, 1298.1658, -1360.8027, 35.8113, 21.7293, 0, 5);
			}
		}
		SendClientMessageToAll(col_white, ""c_yellow"* S.INFO: Через 5 минут пройдет мероприятие PaintBall. (/gps > Прочее > Регистрация на мероприятия)");
	}
	if(minute == 15 && second == 0 || minute == 30 && second == 0 || minute == 40 && second == 0  || minute == 55  && second == 0)
	{
 		foreach(new i: logged_players)
		{
			if(PlayerInfo[i][member] == 0)
			{
				SendClientMessage(i, col_white, ""c_yellow"Ещё не устроены в организацию? Введите команду /vacancy, чтобы посмотреть список доступных вакансий!");
			}
		}
	}


	if(minute == 15 && second == 0 &&(hour == 11 || hour == 13 || hour == 15 || hour == 17 || hour == 19 || hour == 21 || hour == 1 || hour == 3 || hour == 5 || hour == 7 || hour == 9) && StartRace == 0)
	{
		TimerRace = 300;
		StartRace = 1;
		RaceCountWinner =
		PlayerRaceCount = 0;

		race_bank = 0;
		RaceVehicle = Race_Car[random(18)];
		if(++RaceMap > 9) RaceMap = 1;
		foreach(new i: logged_players)
		{
			if(is_player_race_regged[i])
			{
				DestroyVehicle(player_race_vehicle[i]);
				player_race_vehicle[i] =
				is_player_race_regged[i] =
				player_race_cp[i] = 0;
				DisableRemoteVehicleCollisions(i, 0);
				set_pos(i, 1298.1658, -1360.8027, 35.8113, 21.7293, 0, 5);
			}
		}
		SendClientMessageToAll(col_white, ""c_yellow"* S.INFO: Через 5 минут пройдет мероприятие \"Гонки\". (/gps > Прочее > Регистрация на мероприятия)");
	}
	if(TimerRace)
 	{
 	    TimerRace--;
 	    switch(TimerRace)
 	    {
 	        case 0:
			{
			    TimerRace = 0;
				SendClientMessageToAll(col_white, ""c_yellow"* S.INFO: Гонки начались.");
				foreach(new i: logged_players)
				{
				    if(is_player_race_regged[i])
				    {
						GameTextForPlayer(i,"~g~~h~START", 2000, 4);
						TogglePlayerControllable(i, 1);
					}
				}
			}
			case 1..5:
			{
				foreach(new i: logged_players)
				{

					if(is_player_race_regged[i])
					{
						new td_str[16];
						format(td_str, 16, "~y~%i", TimerRace);
						GameTextForPlayer(i, td_str, 1100, 4);
					}
				}
			}
			case 10:
			{
				if(PlayerRaceCount < 2)
				{
					foreach(new i: logged_players)
					{
					    if(is_player_race_regged[i])
						{
							is_player_race_regged[i] = 0;

							give_money(i, 500);
							insert_money_log(i, INVALID_PLAYER_ID, 500, "регистрация на мп возврат");
						}
					}
					StartRace =
					TimerRace = 0;
					SendClientMessageToAll(col_white, ""c_yellow"* S.INFO: Гонки отменены из-за недостаточного количества участников.");
				}
				else
				{
				    foreach(new i: logged_players)
				    {
				        if(is_player_race_regged[i])
				        {
				            if(pl_afk_time[i] > 2)
					        {
					            is_player_race_regged[i] = 0;
					            SendClientMessage(i, col_gray,""c_orange_red"* "c_grey"Вы не были допущены до гонки по причине: "c_orange_red"AFK");
					        }
					        else DisableRemoteVehicleCollisions(i, 1);
			        	}
				    }
				}
			}
			case 8:
			{
			    StartRace = 2;
			    new carid, rand;
				foreach(new i: logged_players)
				{
				    if(is_player_race_regged[i])
				    {
		    			rand = random(2);
						switch(RaceMap)
						{
						    case 1:
							{
							    set_race_pos(i, Race_Treck_VehPos_0[rand][0], Race_Treck_VehPos_0[rand][1], Race_Treck_VehPos_0[rand][2], 0.0, 0, 44);
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_0[rand][0], Race_Treck_VehPos_0[rand][1], Race_Treck_VehPos_0[rand][2], Race_Treck_VehPos_0[rand][3], random(126), random(126), -1);
							}
							case 2:
							{
								set_race_pos(i, Race_Treck_VehPos_1[rand][0], Race_Treck_VehPos_1[rand][1], Race_Treck_VehPos_1[rand][2], 0.0, 0, 44);
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_1[rand][0], Race_Treck_VehPos_1[rand][1], Race_Treck_VehPos_1[rand][2], Race_Treck_VehPos_1[rand][3], random(126), random(126), -1);
							}
							case 3:
							{
								set_race_pos(i, Race_Treck_VehPos_2[rand][0], Race_Treck_VehPos_2[rand][1], Race_Treck_VehPos_2[rand][2], 0.0, 0, 44);
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_2[rand][0], Race_Treck_VehPos_2[rand][1], Race_Treck_VehPos_2[rand][2], Race_Treck_VehPos_2[rand][3], random(126), random(126), -1);
							}
							case 4:
							{
								set_race_pos(i, Race_Treck_VehPos_3[rand][0], Race_Treck_VehPos_3[rand][1], Race_Treck_VehPos_3[rand][2], 0.0, 0, 44);
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_3[rand][0], Race_Treck_VehPos_3[rand][1], Race_Treck_VehPos_3[rand][2], Race_Treck_VehPos_3[rand][3], random(126), random(126), -1);
							}
							case 5:
							{
								set_race_pos(i, Race_Treck_VehPos_4[rand][0], Race_Treck_VehPos_4[rand][1], Race_Treck_VehPos_4[rand][2], 0.0, 0, 44);
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_4[rand][0], Race_Treck_VehPos_4[rand][1], Race_Treck_VehPos_4[rand][2], Race_Treck_VehPos_4[rand][3], random(126), random(126), -1);
							}
							case 6:
							{
								set_race_pos(i, Race_Treck_VehPos_5[rand][0], Race_Treck_VehPos_5[rand][1], Race_Treck_VehPos_5[rand][2], 0.0, 0, 44);
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_5[rand][0], Race_Treck_VehPos_5[rand][1], Race_Treck_VehPos_5[rand][2], Race_Treck_VehPos_5[rand][3], random(126), random(126), -1);
							}
							case 7:
							{
								set_race_pos(i, Race_Treck_VehPos_6[rand][0], Race_Treck_VehPos_6[rand][1], Race_Treck_VehPos_6[rand][2], 0.0, 0, 44);
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_6[rand][0], Race_Treck_VehPos_6[rand][1], Race_Treck_VehPos_6[rand][2], Race_Treck_VehPos_6[rand][3], random(126), random(126), -1);
							}
							case 8:
							{
								set_race_pos(i, Race_Treck_VehPos_7[rand][0], Race_Treck_VehPos_7[rand][1], Race_Treck_VehPos_7[rand][2], 0.0, 0, 44);
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_7[rand][0], Race_Treck_VehPos_7[rand][1], Race_Treck_VehPos_7[rand][2], Race_Treck_VehPos_7[rand][3], random(126), random(126), -1);
							}
							case 9:
							{
								set_race_pos(i, Race_Treck_VehPos_8[rand][0], Race_Treck_VehPos_8[rand][1], Race_Treck_VehPos_8[rand][2], 0.0, 0, 44);
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_8[rand][0], Race_Treck_VehPos_8[rand][1], Race_Treck_VehPos_8[rand][2], Race_Treck_VehPos_8[rand][3], random(126), random(126), -1);
							}
						}
						SetVehicleVirtualWorld((carid = player_race_vehicle[i]), 44);
						PutPlayerInVehicle(i, carid, 0);
						TogglePlayerControllable(i, 0);
						SendClientMessage(i, col_gray, ""c_yellow"* S.INFO: Для выхода из гонки используйте: /exitrace");
					}
				}
			}
			case 6:
			{
			    new carid, rand;
				foreach(new i: logged_players)
				{
				    if(is_player_race_regged[i])
				    {
		    			rand = random(2);
		    			DestroyVehicle(player_race_vehicle[i]);
						switch(RaceMap)
						{
						    case 1:
							{
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_0[rand][0], Race_Treck_VehPos_0[rand][1], Race_Treck_VehPos_0[rand][2], Race_Treck_VehPos_0[rand][3], random(126), random(126), -1);
	                            SetPlayerRaceCheckpoint(i, 0, Race_Treck_Checkpoint_0[0][0], Race_Treck_Checkpoint_0[0][1], Race_Treck_Checkpoint_0[0][2], Race_Treck_Checkpoint_0[1][0], Race_Treck_Checkpoint_0[1][1], Race_Treck_Checkpoint_0[1][2], 10.0);
							}
							case 2:
							{
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_1[rand][0], Race_Treck_VehPos_1[rand][1], Race_Treck_VehPos_1[rand][2], Race_Treck_VehPos_1[rand][3], random(126), random(126), -1);
	                            SetPlayerRaceCheckpoint(i, 0, Race_Treck_Checkpoint_1[0][0], Race_Treck_Checkpoint_1[0][1], Race_Treck_Checkpoint_1[0][2], Race_Treck_Checkpoint_1[1][0], Race_Treck_Checkpoint_1[1][1], Race_Treck_Checkpoint_1[1][2], 10.0);
							}
							case 3:
							{
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_2[rand][0], Race_Treck_VehPos_2[rand][1], Race_Treck_VehPos_2[rand][2], Race_Treck_VehPos_2[rand][3], random(126), random(126), -1);
	                            SetPlayerRaceCheckpoint(i, 0, Race_Treck_Checkpoint_2[0][0], Race_Treck_Checkpoint_2[0][1], Race_Treck_Checkpoint_2[0][2], Race_Treck_Checkpoint_2[1][0], Race_Treck_Checkpoint_2[1][1], Race_Treck_Checkpoint_2[1][2], 10.0);
							}
							case 4:
							{
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_3[rand][0], Race_Treck_VehPos_3[rand][1], Race_Treck_VehPos_3[rand][2], Race_Treck_VehPos_3[rand][3], random(126), random(126), -1);
	                            SetPlayerRaceCheckpoint(i, 0, Race_Treck_Checkpoint_3[0][0], Race_Treck_Checkpoint_3[0][1], Race_Treck_Checkpoint_3[0][2], Race_Treck_Checkpoint_3[1][0], Race_Treck_Checkpoint_3[1][1], Race_Treck_Checkpoint_3[1][2], 10.0);
							}
							case 5:
							{
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_4[rand][0], Race_Treck_VehPos_4[rand][1], Race_Treck_VehPos_4[rand][2], Race_Treck_VehPos_4[rand][3], random(126), random(126), -1);
	                            SetPlayerRaceCheckpoint(i, 0, Race_Treck_Checkpoint_4[0][0], Race_Treck_Checkpoint_4[0][1], Race_Treck_Checkpoint_4[0][2], Race_Treck_Checkpoint_4[1][0], Race_Treck_Checkpoint_4[1][1], Race_Treck_Checkpoint_4[1][2], 10.0);
							}
							case 6:
							{
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_5[rand][0], Race_Treck_VehPos_5[rand][1], Race_Treck_VehPos_5[rand][2], Race_Treck_VehPos_5[rand][3], random(126), random(126), -1);
	                            SetPlayerRaceCheckpoint(i, 0, Race_Treck_Checkpoint_5[0][0], Race_Treck_Checkpoint_5[0][1], Race_Treck_Checkpoint_5[0][2], Race_Treck_Checkpoint_5[1][0], Race_Treck_Checkpoint_5[1][1], Race_Treck_Checkpoint_5[1][2], 10.0);
							}
							case 7:
							{
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_6[rand][0], Race_Treck_VehPos_6[rand][1], Race_Treck_VehPos_6[rand][2], Race_Treck_VehPos_6[rand][3], random(126), random(126), -1);
	                            SetPlayerRaceCheckpoint(i, 0, Race_Treck_Checkpoint_6[0][0], Race_Treck_Checkpoint_6[0][1], Race_Treck_Checkpoint_6[0][2], Race_Treck_Checkpoint_6[1][0], Race_Treck_Checkpoint_6[1][1], Race_Treck_Checkpoint_6[1][2], 10.0);
							}
							case 8:
							{
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_7[rand][0], Race_Treck_VehPos_7[rand][1], Race_Treck_VehPos_7[rand][2], Race_Treck_VehPos_7[rand][3], random(126), random(126), -1);
	                            SetPlayerRaceCheckpoint(i, 0, Race_Treck_Checkpoint_7[0][0], Race_Treck_Checkpoint_7[0][1], Race_Treck_Checkpoint_7[0][2], Race_Treck_Checkpoint_7[1][0], Race_Treck_Checkpoint_7[1][1], Race_Treck_Checkpoint_7[1][2], 10.0);
							}
							case 9:
							{
	                            player_race_vehicle[i] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_8[rand][0], Race_Treck_VehPos_8[rand][1], Race_Treck_VehPos_8[rand][2], Race_Treck_VehPos_8[rand][3], random(126), random(126), -1);
	                            SetPlayerRaceCheckpoint(i, 0, Race_Treck_Checkpoint_8[0][0], Race_Treck_Checkpoint_8[0][1], Race_Treck_Checkpoint_8[0][2], Race_Treck_Checkpoint_8[1][0], Race_Treck_Checkpoint_8[1][1], Race_Treck_Checkpoint_8[1][2], 10.0);
							}
						}
						SetVehicleVirtualWorld((carid = player_race_vehicle[i]), 44);
						PutPlayerInVehicle(i, carid, 0);
						TogglePlayerControllable(i, 0);
	                    SetVehicleParamsEx(carid, 1, 1, 0, 1, 0, 0, 0);
					}
				}
			}
		}
	}



	if(hour == 3 && minute == 45 && second == 0)SendClientMessageToAll(col_gray, ""c_yellow"* S.INFO: Через 15 минут произойдет технический рестарт сервера.");


	if(tree_count >= 29)
	{
		for(new i; i < sizeof(tree_positions); i++)
		{
			if(tree_object[i] != -1)DestroyDynamicObject(tree_object[i]);
			tree_object[i] = CreateDynamicObjectEx(618, tree_positions[i][0], tree_positions[i][1], tree_positions[i][2],tree_positions[i][3],tree_positions[i][4],tree_positions[i][5]);
			SetDynamicObjectMaterial(tree_object[i], 0, -1, "none", "none", 0xFFFFFFFF);
		}
		tree_count = 0;
	}




	new _str[20 +(MAX_PLAYER_NAME + 20)* 10 + 30];
	strcat(_str,""c_server"** Очередь на загрузку **\n");
	for(new i; i < 10; i ++)
	{
		if(dorm_queue[DORM_MINE][i] != INVALID_PLAYER_ID && !IsPlayerConnected(dorm_queue[DORM_MINE][i]) || (dorm_queue[DORM_MINE][i] != INVALID_PLAYER_ID &&!GetPVarInt(dorm_queue[DORM_MINE][i], "truck_waiting"))) dorm_queue[DORM_MINE][i] = INVALID_PLAYER_ID;
		if(i != 9 && dorm_queue[DORM_MINE][i] == INVALID_PLAYER_ID && dorm_queue[DORM_MINE][i + 1] != INVALID_PLAYER_ID)
		{
			dorm_queue[DORM_MINE][i] = dorm_queue[DORM_MINE][i + 1];
			dorm_queue[DORM_MINE][i + 1] = INVALID_PLAYER_ID;
		}
		if(dorm_queue[DORM_MINE][i] != INVALID_PLAYER_ID) format(_str, sizeof(_str), "%s\n"c_grey"%i."c_white" %s", _str, i + 1, PlayerInfo[dorm_queue[DORM_MINE][i]][name]);
	}
	UpdateDynamic3DTextLabelText(text_dorm_queue[DORM_MINE], -1, _str);
	_str[0] = EOS;
	strcat(_str,""c_server"** Очередь на загрузку **\n");
	for(new i; i < 10; i ++)
	{
		if(dorm_queue[DORM_SAWMILL][i] != INVALID_PLAYER_ID && !IsPlayerConnected(dorm_queue[DORM_SAWMILL][i]) || (dorm_queue[DORM_SAWMILL][i] != INVALID_PLAYER_ID &&!GetPVarInt(dorm_queue[DORM_SAWMILL][i], "truck_waiting"))) dorm_queue[DORM_SAWMILL][i] = INVALID_PLAYER_ID;
		if(i != 9 && dorm_queue[DORM_SAWMILL][i] == INVALID_PLAYER_ID && dorm_queue[DORM_SAWMILL][i + 1] != INVALID_PLAYER_ID)
		{
			dorm_queue[DORM_SAWMILL][i] = dorm_queue[DORM_SAWMILL][i + 1];
			dorm_queue[DORM_SAWMILL][i + 1] = INVALID_PLAYER_ID;
		}
		if(dorm_queue[DORM_SAWMILL][i] != INVALID_PLAYER_ID) format(_str, sizeof(_str), "%s\n"c_grey"%i."c_white" %s", _str, i + 1, PlayerInfo[dorm_queue[DORM_SAWMILL][i]][name]);
	}
	UpdateDynamic3DTextLabelText(text_dorm_queue[DORM_SAWMILL], -1, _str);
	_str[0] = EOS;
	strcat(_str,""c_server"** Очередь на загрузку **\n");
	for(new i; i < 10; i ++)
	{
		if(dorm_queue[DORM_FACTORY][i] != INVALID_PLAYER_ID && !IsPlayerConnected(dorm_queue[DORM_FACTORY][i]) || (dorm_queue[DORM_FACTORY][i] != INVALID_PLAYER_ID &&!GetPVarInt(dorm_queue[DORM_FACTORY][i], "truck_waiting"))) dorm_queue[DORM_FACTORY][i] = INVALID_PLAYER_ID;
		if(i != 9 && dorm_queue[DORM_FACTORY][i] == INVALID_PLAYER_ID && dorm_queue[DORM_FACTORY][i + 1] != INVALID_PLAYER_ID)
		{
			dorm_queue[DORM_FACTORY][i] = dorm_queue[DORM_FACTORY][i + 1];
			dorm_queue[DORM_FACTORY][i + 1] = INVALID_PLAYER_ID;
		}
		if(dorm_queue[DORM_FACTORY][i] != INVALID_PLAYER_ID) format(_str, sizeof(_str), "%s\n"c_grey"%i."c_white" %s", _str, i + 1, PlayerInfo[dorm_queue[DORM_FACTORY][i]][name]);
	}
	UpdateDynamic3DTextLabelText(text_dorm_queue[DORM_FACTORY], -1, _str);


	loading_cd[DORM_MINE] += 1;
	if(loading_cd[DORM_MINE] == 125)loading_playerid[DORM_MINE] = INVALID_PLAYER_ID;
	if(loading_playerid[DORM_MINE] == INVALID_PLAYER_ID && dorm_queue[DORM_MINE][0] != INVALID_PLAYER_ID)
	{
		loading_playerid[DORM_MINE] = dorm_queue[DORM_MINE][0];
		loading_cd[DORM_MINE] = 0;
		SendClientMessage(dorm_queue[DORM_MINE][0], col_gray, "* Ваша фура загружена. У вас есть 2 минуты, чтобы прицепить её.");
		SendClientMessage(dorm_queue[DORM_MINE][0], col_gray, "* Если вы не успеете, деньги не будут возвращены.");
		new _traile_id = CreateVehicle(450, 596.1334,829.2231,-42.3389,10.2931, 1, 1, -1);
		player_trailer[dorm_queue[DORM_MINE][0]] = _traile_id;

		trailer_type[_traile_id -1] = DORM_MINE;
		trailer_count[_traile_id -1] = GetPVarInt(dorm_queue[DORM_MINE][0], "truck_count");

		player_tload_time[dorm_queue[DORM_MINE][0]] = 120;
		create_trucker_td(dorm_queue[DORM_MINE][0], _traile_id);

		DeletePVar(dorm_queue[DORM_MINE][0], "truck_count");
	}
	loading_cd[DORM_FACTORY] += 1;
	if(loading_cd[DORM_FACTORY] == 125)loading_playerid[DORM_FACTORY] = INVALID_PLAYER_ID;
	if(loading_playerid[DORM_FACTORY] == INVALID_PLAYER_ID && dorm_queue[DORM_FACTORY][0] != INVALID_PLAYER_ID)
	{
		loading_playerid[DORM_FACTORY] = dorm_queue[DORM_FACTORY][0];
		loading_cd[DORM_FACTORY] = 0;
		SendClientMessage(dorm_queue[DORM_FACTORY][0], col_gray, "* Ваша фура загружена. У вас есть 2 минуты, чтобы прицепить её.");
		SendClientMessage(dorm_queue[DORM_FACTORY][0], col_gray, "* Если вы не успеете, деньги не будут возвращены.");
		new _traile_id = CreateVehicle(450, -151.8981,-332.6795,2.0635,178.0456, 1, 1, -1);
		player_trailer[dorm_queue[DORM_FACTORY][0]] = _traile_id;

		trailer_type[_traile_id -1] = DORM_FACTORY;
		trailer_count[_traile_id -1] = GetPVarInt(dorm_queue[DORM_FACTORY][0], "truck_count");

		player_tload_time[dorm_queue[DORM_FACTORY][0]] = 120;
		create_trucker_td(dorm_queue[DORM_FACTORY][0], _traile_id);

		DeletePVar(dorm_queue[DORM_FACTORY][0], "truck_count");
	}
	loading_cd[DORM_SAWMILL] += 1;
	if(loading_cd[DORM_SAWMILL] == 125)loading_playerid[DORM_SAWMILL] = INVALID_PLAYER_ID;
	if(loading_playerid[DORM_SAWMILL] == INVALID_PLAYER_ID && dorm_queue[DORM_SAWMILL][0] != INVALID_PLAYER_ID)
	{
		loading_playerid[DORM_SAWMILL] = dorm_queue[DORM_SAWMILL][0];
		loading_cd[DORM_SAWMILL] = 0;
		SendClientMessage(dorm_queue[DORM_SAWMILL][0], col_gray, "* Ваша фура загружена. У вас есть 2 минуты, чтобы прицепить её.");
		SendClientMessage(dorm_queue[DORM_SAWMILL][0], col_gray, "* Если вы не успеете, деньги не будут возвращены.");
		new _traile_id = CreateVehicle(450, -1100.1698, -1667.6442, 76.9964, 0.8440, 1, 1, -1);
		player_trailer[dorm_queue[DORM_SAWMILL][0]] = _traile_id;
		trailer_type[_traile_id -1] = DORM_SAWMILL;
		trailer_count[_traile_id -1] = GetPVarInt(dorm_queue[DORM_SAWMILL][0], "truck_count");

		player_tload_time[dorm_queue[DORM_SAWMILL][0]] = 120;
		create_trucker_td(dorm_queue[DORM_SAWMILL][0], _traile_id);

		DeletePVar(dorm_queue[DORM_SAWMILL][0], "truck_count");
	}
	
	if(hour == 17 && minute == 45 && second == 0) SendClientMessageToAll(col_gray, ""c_yellow"Через 15 минут начнётся аукцион битых автомобилей в бизнес центре! ((/gps -> Аукцион битых авто))");
	if(hour == 17 && minute == 55 && second == 0) SendClientMessageToAll(col_gray, ""c_yellow"Через 5 минут начнётся аукцион битых автомобилей в бизнес центре! ((/gps -> Аукцион битых авто))");
	
	if(hour == 18 && minute == 00 && second == 0)
	{
		for(new bureau = 0; bureau < MAX_BUREAU; bureau++)
		{
			for(new vehicle = 0; vehicle < MAX_AUCTION_CARS; vehicle++)
			{
				bureauInfo[bureau][vehicle][bCarModel] = AuctionVehiclesList[random(sizeof AuctionVehiclesList)];
				bureauInfo[bureau][vehicle][bSalonPrice] = GetModelPrice(bureauInfo[bureau][vehicle][bCarModel]);
				bureauInfo[bureau][vehicle][bStrengthPercentage] = 10 + random(41);
				bureauInfo[bureau][vehicle][bMaxSpeed] = max_veh_speed[bureauInfo[bureau][vehicle][bCarModel] -400];
				bureauInfo[bureau][vehicle][bAuctionPrice] = bureauInfo[bureau][vehicle][bSalonPrice] * bureauInfo[bureau][vehicle][bStrengthPercentage] / 100;
				bureauInfo[bureau][vehicle][bMileage] = 30 + random(100);
				bureauInfo[bureau][vehicle][bTuning] = bool:(random(2));
				bureauInfo[bureau][vehicle][bPTuning] = bool:(random(2));
				bureauInfo[bureau][vehicle][bTime] = 60;
				bureauInfo[bureau][vehicle][bColor1] = random(257);
				bureauInfo[bureau][vehicle][bColor2] = random(257);
				bureauInfo[bureau][vehicle][bActive] = true;
			}
		}
		runningAuctionsCount = MAX_BUREAU * MAX_AUCTION_CARS;
		SendClientMessageToAll(col_gray, ""c_yellow"Аукцион битых авто в бизнес центре начался! ((/gps -> Аукцион битых авто))");
	}

	if(runningAuctionsCount != 0)
	{
		runningAuctionsCount = 0;

		for(new bureau = 0; bureau < MAX_BUREAU; bureau++)
		{
			for(new vehicleid = 0; vehicleid < MAX_AUCTION_CARS; vehicleid++)
			{
				if(!bureauInfo[bureau][vehicleid][bActive]) continue;
				runningAuctionsCount++;

				if(!(--bureauInfo[bureau][vehicleid][bTime]))
				{
					bureauInfo[bureau][vehicleid][bActive] = false;

					if(bureauInfo[bureau][vehicleid][bCurrentRate] != 0)
					{
						new winner = GetPlayerID(bureauInfo[bureau][vehicleid][bRateInitiator]);
						bureauInfo[bureau][vehicleid][bDeliveryTime] = GetDeliveryTime(bureauInfo[bureau][vehicleid][bStrengthPercentage]);

						if(IsPlayerConnected(winner))
						{
							static const fmt_str[] = "Поздравляем! Вы купили машину "c_white"\"%s\". {2BB000}Машина будет доставлена через "c_white"%d часов";
							new text[sizeof fmt_str + 11 + 2];

							format(text, sizeof text, fmt_str, vehicle_name[bureauInfo[bureau][vehicleid][bCarModel] -400], (bureauInfo[bureau][vehicleid][bDeliveryTime] -gettime()) / 3600);
							SendClientMessage(winner, COLOR_GREEN, text);
						}
						else
						{
							static const fmt_str[] = "{BC2C2C}[Offline info] "c_white"Поздравляем! Вы купили машину \"%s\". Машина будет доставлена через %d часов";
							new text[sizeof fmt_str + 11 + 2], query_string[101 + sizeof text];

							format(text, sizeof text, fmt_str, vehicle_name[bureauInfo[bureau][vehicleid][bCarModel] -400], (bureauInfo[bureau][vehicleid][bDeliveryTime] -gettime()) / 3600);

							format(query_string,sizeof(query_string),"UPDATE `users` SET `u_offmsg_1` = CONCAT(COALESCE(`u_offmsg_1`, ''), '%s', ';') WHERE `u_id` = '%d' LIMIT 1", text, bureauInfo[bureau][vehicleid][bRaterID]);
							mysql_tquery(sql_connection, query_string, "", "");
						}

						unactiveCars++;
						memcpy(portInfo[bureau * MAX_AUCTION_CARS + vehicleid], bureauInfo[bureau][vehicleid], _, sizeof(bureauInfo[][]) * (cellbits / charbits));
					}
				}
			}
		}
	}

	if(unactiveCars != 0)
	{
		unactiveCars = 0;

		for(new veh = 0; veh < sizeof(portInfo); veh++)
		{
			if(portInfo[veh][bDeliveryTime] == gettime()) // машина приехала на порт
			{
				new owner = GetPlayerID(portInfo[veh][bRateInitiator]), text[132], hours;
				portInfo[veh][bActive] = true;
				portInfo[veh][bTime] = GetDeliveryTime(portInfo[veh][bStrengthPercentage]);

				gmtime(portInfo[veh][bTime], _, _, _, hours, _, _);

				if(IsPlayerConnected(owner))
				{
					format(text, sizeof text, ""scm_info"Ваша машина "c_green"\"%s\" "c_white"ждет вас на порту! ((У вас %d часов, чтобы забрать машину))", vehicle_name[portInfo[veh][bCarModel] -400], hours);
					SendClientMessage(owner, col_white, text);
				}
				else
				{
					new query_string[78 + sizeof text];
					format(text, sizeof text, ""scm_info"Ваша машина "c_green"\"%s\" "c_white"ждет вас на порту! У вас %d часов, чтобы забрать машину ((Оффлайн уведомление))", vehicle_name[portInfo[veh][bCarModel] -400], hours);
					format(query_string,sizeof(query_string),"UPDATE `users` SET `u_offmsg_1` = CONCAT(COALESCE(`u_offmsg_1`, ''), '%s', ';') WHERE `u_id` = '%d' LIMIT 1", text, portInfo[veh][bRaterID]);
					mysql_tquery(sql_connection, query_string, "", "");
				}

			}
			else if(portInfo[veh][bTime] == gettime()) // прошло макс. время ожидания, машина все еще на порту
			{
				new owner = GetPlayerID(portInfo[veh][bRateInitiator]);

				new text[138];

				if(IsPlayerConnected(owner))
				{
					format(text, sizeof text, ""scm_info"Ваша машина "c_green"\"%s\" "c_white"была перепродана в аукционе, так как Вы её не забрали вовремя.", vehicle_name[portInfo[veh][bCarModel] -400]);
					SendClientMessage(owner, col_white, text);
				}
				else
				{
					new query_string[78 + sizeof text];
					format(text, sizeof text, ""scm_info"Ваша машина "c_green"\"%s\" "c_white"была перепродана в аукционе, так как Вы её не забрали вовремя. ((Оффлайн уведомление))", vehicle_name[portInfo[veh][bCarModel] -400]);
					format(query_string,sizeof(query_string),"UPDATE `users` SET `u_offmsg_1` = CONCAT(COALESCE(`u_offmsg_1`, ''), '%s', ';') WHERE `u_id` = '%d' LIMIT 1", text, portInfo[veh][bRaterID]);
					mysql_tquery(sql_connection, query_string, "", "");
				}

				new query_string[44];
				format(query_string, sizeof query_string, "DELETE FROM `auction_cars` WHERE `id` = '%d'", veh);
				mysql_tquery(sql_connection, query_string);
				ClearVehInfo(veh);
			}
			else unactiveCars++;
		}
	}
	return 1;
}

stock create_trucker_td(playerid, vehicleid)
{
	td_db[playerid][0] = CreatePlayerTextDraw(playerid, 543.000000, 182.000000, "~r~2:00");
	PlayerTextDrawBackgroundColor(playerid, td_db[playerid][0], 255);
	PlayerTextDrawFont(playerid, td_db[playerid][0], 2);
	PlayerTextDrawLetterSize(playerid, td_db[playerid][0], 0.319999, 1.500000);
	PlayerTextDrawColor(playerid, td_db[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid, td_db[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, td_db[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, td_db[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, td_db[playerid][0], 0);

	td_db[playerid][1] = CreatePlayerTextDraw(playerid, 486.000000, 116.000000, "truck_img");
	PlayerTextDrawBackgroundColor(playerid, td_db[playerid][1], 0);
	PlayerTextDrawFont(playerid, td_db[playerid][1], 5);
	PlayerTextDrawLetterSize(playerid, td_db[playerid][1], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, td_db[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid, td_db[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid, td_db[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, td_db[playerid][1], 1);
	PlayerTextDrawUseBox(playerid, td_db[playerid][1], 0);
	PlayerTextDrawBoxColor(playerid, td_db[playerid][1], 255);
	PlayerTextDrawTextSize(playerid, td_db[playerid][1], 70.000000, 106.000000);
	PlayerTextDrawSetPreviewModel(playerid, td_db[playerid][1], GetVehicleModel(GetPlayerVehicleID(playerid)));
	PlayerTextDrawSetPreviewRot(playerid, td_db[playerid][1], 0.000000, 0.000000, -90.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid, td_db[playerid][1], 0);

	td_db[playerid][2] = CreatePlayerTextDraw(playerid, 534.000000, 111.000000, "trailer_img");
	PlayerTextDrawBackgroundColor(playerid, td_db[playerid][2], 0);
	PlayerTextDrawFont(playerid, td_db[playerid][2], 5);
	PlayerTextDrawLetterSize(playerid, td_db[playerid][2], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, td_db[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid, td_db[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid, td_db[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, td_db[playerid][2], 1);
	PlayerTextDrawUseBox(playerid, td_db[playerid][2], 0);
	PlayerTextDrawBoxColor(playerid, td_db[playerid][2], 255);
	PlayerTextDrawTextSize(playerid, td_db[playerid][2], 100.000000, 120.000000);
	PlayerTextDrawSetPreviewModel(playerid, td_db[playerid][2], 450);
	PlayerTextDrawSetPreviewRot(playerid, td_db[playerid][2], 0.000000, 0.000000, -90.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid, td_db[playerid][2], 0);

	td_db[playerid][3] = CreatePlayerTextDraw(playerid, 583.000000, 157.000000, "0/10000");
	PlayerTextDrawAlignment(playerid, td_db[playerid][3], 2);
	PlayerTextDrawBackgroundColor(playerid, td_db[playerid][3], 0);
	PlayerTextDrawFont(playerid, td_db[playerid][3], 2);
	PlayerTextDrawLetterSize(playerid, td_db[playerid][3], 0.159999, 1.700000);
	PlayerTextDrawColor(playerid, td_db[playerid][3], 255);
	PlayerTextDrawSetOutline(playerid, td_db[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid, td_db[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, td_db[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, td_db[playerid][3], 0);

	new _str[16];
	format(_str, 16, "%d/10000", trailer_count[vehicleid -1]);
	PlayerTextDrawSetString(playerid, td_db[playerid][3], _str);

	for(new i = 0; i < 4; i ++)
	{
		PlayerTextDrawShow(playerid, td_db[playerid][i]);
	}
	return 1;
}

stock GetEngineStatus(vehicleid)
{
	new engine, alarm, doors, bonnet, boot, objective, lights;
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	return engine;
}

stock GetString(param1[], param2[])
{
	return !strcmp(param1, param2, false);
}


stock is_text_invalid(text[])
{
	if(strfind(text, "'", true)!= -1) return 1;
	if(strfind(text, "=", true)!= -1) return 1;
	if(strfind(text, "%", true)!= -1) return 1;
	if(strfind(text, "&", true)!= -1) return 1;
	if(strfind(text, "*", true)!= -1) return 1;
	if(strfind(text, "(", true)!= -1) return 1;
	if(strfind(text, ")", true)!= -1) return 1;
	if(strfind(text, ",", true)!= -1) return 1;
	if(strfind(text, "`", true)!= -1) return 1;
	if(strfind(text, ";", true)!= -1) return 1;
	if(strfind(text, "|", true)!= -1) return 1;
	return 0;
}

stock update_int_sql(playerid, field[], data)
{
	new query_string[78];
	format(query_string,sizeof(query_string),"UPDATE `users` SET `%s` = '%d' WHERE `u_id` = '%d' LIMIT 1", field, data, PlayerInfo[playerid][id]);
	mysql_tquery(sql_connection, query_string, "", "");
	return 1;
}

stock get_weapon_slot(weaponid)
{
	switch(weaponid)
	{
		case 0,1:return 0;
		case 2..9:return 1;
		case 22..24:return 2;
		case 25..27:return 3;
		case 28,29,32:return 4;
		case 30,31:return 5;
		case 33,34:return 6;
		case 35..38:return 7;
		case 16..18,39:return 8;
		case 41..43:return 9;
		case 10..15:return 10;
		case 44..46:return 11;
		case 40:return 12;
	}
	return -1;
}
stock give_weapon(playerid, weaponid, ammo)
{
	p_t_info[playerid][p_gun_immune_time] = 3;
	new slot = get_weapon_slot(weaponid);

	p_t_info[playerid][p_gun_ammo][slot] += ammo;
	p_t_info[playerid][p_gun_slot][slot] = weaponid;
	GivePlayerWeapon(playerid, weaponid, ammo);
	if(IsPlayerInAnyVehicle(playerid)) SetPlayerArmedWeapon(playerid, 0);
	return 1;
}
stock set_player_ammo(playerid, weaponid, ammo)
{

	p_t_info[playerid][p_gun_immune_time] = 3;
	new slot = get_weapon_slot(weaponid);
	p_t_info[playerid][p_gun_ammo][slot] = ammo;
	return SetPlayerAmmo(playerid, weaponid, ammo);
}



stock reset_player_weapon(playerid)
{
 	for(new i = 0; i < 12; i ++)
    {
        p_t_info[playerid][p_gun_ammo][i] = 0;
		p_t_info[playerid][p_gun_slot][i] = 0;
	}
	ResetPlayerWeapons(playerid);
	return 1;
}

stock save_house(houseid)
{
	new sql_string[198];
	format(sql_string, sizeof sql_string, "UPDATE `houses` SET `h_owner` = '%d',`h_ownername` = '%s',`h_closed` = '%d',`h_rent` = '%d' WHERE `h_id` = '%d' LIMIT 1",
	h_info[houseid][h_owner], h_info[houseid][h_owner_name], h_info[houseid][h_closed], h_info[houseid][h_rent_price],
	h_info[houseid][h_id]);
	mysql_tquery(sql_connection, sql_string, "", "");
	return 1;
}

stock save_island(island_id)
{
	new query_string[175];
	format(query_string, sizeof(query_string), "UPDATE `family_island` SET `fi_owner`='%d',`fi_ownername`='%s',`fi_family`='%d',`fi_improve`='%d|%d|%d|%d|%d|%d' WHERE `fi_id`='%d' LIMIT 1", fi_info[island_id][fi_owner], fi_info[island_id][fi_owner_name], fi_info[island_id][fi_family], fi_info[island_id][fi_improve][0], fi_info[island_id][fi_improve][1], fi_info[island_id][fi_improve][2], fi_info[island_id][fi_improve][3], fi_info[island_id][fi_improve][4], fi_info[island_id][fi_improve][5], fi_info[island_id][fi_id]);
	mysql_query(sql_connection, query_string);
	return 1;
}

stock save_cellar(houseid)
{
	new sql_string[148];
	format(sql_string, sizeof sql_string, "UPDATE `cellars` SET `cl_owner` = '%d',`cl_ownername` = '%s',`cl_closed` = '%d' WHERE `cl_id` = '%d' LIMIT 1",
	cellar_info[houseid][cl_owner], cellar_info[houseid][cl_owner_name], cellar_info[houseid][cl_closed],
	cellar_info[houseid][cl_id]);
	mysql_tquery(sql_connection, sql_string, "", "");
	return 1;
}
stock give_money(playerid, amount)
{
	PlayerInfo[playerid][money] += amount;
	GivePlayerMoney(playerid, amount);
	update_int_sql(playerid, "u_money", PlayerInfo[playerid][money]);
	return 1;
}

stock give_donate(playerid, amount)
{
	new query_string[148];
	format(query_string, sizeof(query_string),"UPDATE `users` SET `u_donate` = `u_donate`+'%d' WHERE `u_id` = '%d' LIMIT 1",
	amount, PlayerInfo[playerid][id]);
	mysql_query(sql_connection, query_string);
	return 1;
}

stock insert_money_log(playerid, from_id, money_amount, reason[62])
{
	new query_string[198];

	if(from_id == INVALID_PLAYER_ID)
	{
		format(query_string, sizeof(query_string), "INSERT INTO `money_logs` (`name`,`from_name`,`money`,`reason`,`date`) VALUES ('%s','server','%d','%s',NOW())",
		PlayerInfo[playerid][name], money_amount, reason);
		mysql_tquery(sql_connection, query_string);
	}
	else
	{
		format(query_string, sizeof(query_string), "INSERT INTO `money_logs` (`name`,`from_name`,`money`,`reason`,`date`) VALUES ('%s','%s','%d','%s',NOW())",
		PlayerInfo[playerid][name], PlayerInfo[from_id][name], money_amount, reason);
		mysql_tquery(sql_connection, query_string);
	}
	return 1;
}
stock insert_donate_log(playerid, from_id, donate_amount)
{
	new query_string[198];

	format(query_string, sizeof(query_string), "INSERT INTO `donate_logs` (`name`,`from_name`,`donate`,`date`) VALUES ('%s','%s','%d',NOW())",
	PlayerInfo[playerid][name], PlayerInfo[from_id][name], donate_amount);
	mysql_tquery(sql_connection, query_string);
	return 1;
}
stock insert_cooldown_photographer(const playerid)
{
	static query[] = "INSERT INTO "TABLE_PHOTOGRHAPHER_COOLDOWN" (`user_id`, `user_name`) VALUES ('%d', '%e')";
	new fmt_query[sizeof(query) + MAX_PLAYER_NAME + 1 + 11];
	mysql_format(sql_connection, fmt_query, sizeof(fmt_query), query, PlayerInfo[playerid][id], PlayerInfo[playerid][name]);
	mysql_tquery(sql_connection, fmt_query, "", "");
	return 1;
}
stock check_cooldown_photographer(const playerid, const id_quest)
{
	static query[] = "SELECT * FROM "TABLE_PHOTOGRHAPHER_COOLDOWN" WHERE `user_id` = '%d' LIMIT 1;";
	new fmt_query[sizeof(query) + 11];
	mysql_format(sql_connection, fmt_query, sizeof(fmt_query), query, PlayerInfo[playerid][id]);
	mysql_tquery(sql_connection, fmt_query, "CheckExitsUsersPhotographer", "ii", playerid, id_quest);
	return 1;
}
stock update_cooldown_photographer(const playerid, const id_quest)
{
	if(id_quest < QUEST_OLD_MILITARY)
	{
		static query[] = "UPDATE "TABLE_PHOTOGRHAPHER_COOLDOWN" SET `next_time_quest_building` = NOW() + INTERVAL 30 MINUTE \
						  WHERE `user_id` = '%d' LIMIT 1;";
		new fmt_query[sizeof(query) + 11];
		mysql_format(sql_connection, fmt_query, sizeof(fmt_query), query, PlayerInfo[playerid][id]);
		mysql_tquery(sql_connection, fmt_query, "", "");
	}
	else
	{
		static query[] = "UPDATE "TABLE_PHOTOGRHAPHER_COOLDOWN" SET `next_time_quest_with_actors` = NOW() + INTERVAL 1 HOUR, \
						  											`%e` = NOW() + INTERVAL 1 DAY \
						  WHERE `user_id` = '%d' LIMIT 1;";
		new fmt_query[sizeof(query) + 11 + 20];
		mysql_format(sql_connection, fmt_query, sizeof(fmt_query), query, query_photographer_string[id_quest -QUEST_OLD_MILITARY + 1],
																		  PlayerInfo[playerid][id]);
		mysql_tquery(sql_connection, fmt_query, "", "");
	}
	return 1;
}
stock me_action(playerid, action[], Float:distance = 13.0)
{
	new _t_string[128];
	format(_t_string, sizeof(_t_string), "%s %s", PlayerInfo[playerid][name], action);
	send_world_message(playerid, distance, _t_string, col_light_purple, col_light_purple, col_light_purple, false);
	format(_t_string, sizeof(_t_string), "%s", action);
	SetPlayerChatBubble(playerid, _t_string, col_light_purple, 13, 5000);
	return 1;
}
stock do_action(playerid, action[], Float:distance = 13.0)
{
	new _t_string[128];
	format(_t_string, sizeof(_t_string),"%s (%s)", action, PlayerInfo[playerid][name]);
	send_world_message(playerid, distance, _t_string, col_light_purple, col_light_purple, col_light_purple, false);
	SetPlayerChatBubble(playerid, _t_string, col_light_purple, 13, 5000);
	return 1;
}
stock try_action(playerid, action[], Float:distance = 13.0)
{
	new luck[24];
	if(RandomEx(0,2) == 1) strcat(luck, "{00ff00}Удачно");
	else strcat(luck, "{ff7518}Неудачно");
	new _t_string[128];
	format(_t_string, sizeof(_t_string),"%s %s | %s", PlayerInfo[playerid][name], action, luck);
	send_world_message(playerid, distance, _t_string, col_light_purple, col_light_purple, col_light_purple, false);
	format(_t_string, sizeof(_t_string),"%s | %s", action, luck);
	SetPlayerChatBubble(playerid, _t_string, col_light_purple, 13, 5000);
	return 1;
}

stock send_world_message(pointplayerid, Float:max_radius, text[], color1, color2, color3, bool: chat_buble = false)
{
    new Float:distance;
    SendClientMessage(pointplayerid, color1, text);
    if(Iter_Count (streamed_players[pointplayerid]) == 0) return 1;

	new Float:point_x,
		Float:point_y,
		Float:point_z;
	GetPlayerPos(pointplayerid, point_x, point_y, point_z);

    foreach(new i:streamed_players[pointplayerid])
    {

		if(IsPlayerInRangeOfPoint(i, max_radius, point_x, point_y, point_z) && GetPlayerVirtualWorld(i) ==  GetPlayerVirtualWorld(pointplayerid))
        {
            distance = GetPlayerDistanceFromPoint(i, point_x, point_y, point_z);
            if(distance >= 0.0 && distance < max_radius / 3)SendClientMessage(i, color1, text);
            if(distance >= max_radius / 3 && distance < max_radius / 3 * 2)SendClientMessage(i, color2, text);
            if(distance >= max_radius / 3 * 2 && distance <= max_radius)SendClientMessage(i, color3, text);
        }
    }
	foreach(new i:admin_players)
	{
		if(i == pointplayerid) continue;
		if(GetPVarInt(i, "spectate_status")!= 0)
		{
			if(IsPlayerInRangeOfPoint(i, max_radius, point_x, point_y, point_z) && GetPlayerVirtualWorld(i) ==  GetPlayerVirtualWorld(pointplayerid))
			{
				distance = GetPlayerDistanceFromPoint(i, point_x, point_y, point_z);
				if(distance >= 0.0 && distance < 15.0 / 3)
				{
					if(PlayerInfo[i][settings][3])SendClientMessage(i, color1, text);
					else SendClientMessage(i, color1, text);
				}
				if(distance >= 15.0 / 3 && distance < 15.0 / 3 * 2)
				{
					if(PlayerInfo[i][settings][3])SendClientMessage(i, color2, text);
					else SendClientMessage(i, color2, text);
				}
				if(distance >= 15.0 / 3 * 2 && distance <= 25.0)
				{
					if(PlayerInfo[i][settings][3])SendClientMessage(i, color3, text);
					else SendClientMessage(i, color3, text);
				}
			}
		}
	}
	if(chat_buble)SetPlayerChatBubble(pointplayerid, text, color1, max_radius, 5000);
	return 1;
}

stock SetPlayerSkinEx(playerid, skinid)
{
	for(new j = 0; j < 8; j ++)
	{
		if(PlayerInfo[playerid][accessories_used][j] == 0) continue;
		GiveItem(playerid, PlayerInfo[playerid][accessories][j]);
	}
	SetPlayerSkin(playerid, skinid);
	return 1;
}

#define SetPlayerSkin SetPlayerSkinEx

#include "modules\auction\design\maps.pwn"
#include "modules\auction\design\biznes_centre.pwn"
#include "modules\auction\design\textdraws.pwn"
#include "modules\auction\functions\auction_menu_managment.pwn"
#include "modules\auction\functions\GetPlayerID.pwn"
#include "modules\auction\functions\strfmt.pwn"
#include "modules\auction\functions\TimeConverter.pwn"

stock set_skin(playerid, skinid)
{
	PlayerInfo[playerid][skin] = skinid;


	update_int_sql(playerid, "u_skin", PlayerInfo[playerid][skin]);
	return SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
}

stock is_vehicle_occupied(vehicleid)
{
	foreach(new i: logged_players) if(IsPlayerInVehicle(i, vehicleid)) return i;
	return -1;
}

callback: spawn_cars(playerid)
{
	for(new c = 1; c < MAX_VEHICLES; c ++)
	{
		if(is_vehicle_occupied(c)!= -1) continue;
		if(GetVehicleModel(c) ==  450) continue;
		SetVehicleToRespawn(c);
	}
	foreach(new i: logged_players)SendClientMessage(i, 0xEBC826FF, !"* S.INFO: Незанятый транспорт был успешно зареспавнен.");
	return 1;
}

// -------------------------------[Регистрация / Авторизация] ---------------------------

stock show_register(playerid)
{
	Registration_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 324.1665, 122.4251, "Welcome_to_~b~Elive_Role_Play~w~,~n~Lamar_Wonderful");
	PlayerTextDrawLetterSize(playerid, Registration_PTD[playerid][0], 0.1529, 0.8325);
	PlayerTextDrawTextSize(playerid, Registration_PTD[playerid][0], 0.0000, 233.0000);
	PlayerTextDrawAlignment(playerid, Registration_PTD[playerid][0], 2);
	PlayerTextDrawColor(playerid, Registration_PTD[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, Registration_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, Registration_PTD[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, Registration_PTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, Registration_PTD[playerid][0], 0);

	new frmt_string[38 + MAX_PLAYER_NAME +(-2)];

	format(frmt_string, sizeof(frmt_string), "Welcome_to_~b~Elive_Role_Play~w~,~n~%s", PlayerInfo[playerid][name]);
	PlayerTextDrawSetString(playerid, Registration_PTD[playerid][0], frmt_string);

	PlayerTextDrawShow(playerid, Registration_PTD[playerid][0]);

	for(new i; i < 57; i ++) TextDrawShowForPlayer(playerid, Registration_TD[i]);
    SelectTextDraw(playerid, 0xB0C4DEFF);

	SetPVarInt(playerid, "Registration", 1);

	return 1;
}

stock show_login(playerid)
{
	Autorization_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 321.4998, 182.9880, "Welcome_to_~b~Elive_Role_Play~w~,~n~Lamar_Wonderful");
	PlayerTextDrawLetterSize(playerid, Autorization_PTD[playerid][0], 0.1528, 0.8324);
	PlayerTextDrawTextSize(playerid, Autorization_PTD[playerid][0], 0.0000, 233.0000);
	PlayerTextDrawAlignment(playerid, Autorization_PTD[playerid][0], 2);
	PlayerTextDrawColor(playerid, Autorization_PTD[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, Autorization_PTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, Autorization_PTD[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, Autorization_PTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, Autorization_PTD[playerid][0], 0);
	
	new frmt_string[38 + MAX_PLAYER_NAME +(-2)];

	format(frmt_string, sizeof(frmt_string), "Welcome_to_~b~Elive_Role_Play~w~,~n~%s", PlayerInfo[playerid][name]);
	PlayerTextDrawSetString(playerid, Autorization_PTD[playerid][0], frmt_string);
	
	PlayerTextDrawShow(playerid, Autorization_PTD[playerid][0]);
	
	for(new i = 1; i < 27; i ++) TextDrawShowForPlayer(playerid, Autorization_TD[i]);
    SelectTextDraw(playerid, 0xB0C4DEFF);

	SetPVarInt(playerid, "Autorization", 1);
	
	return 1;
}

// -----------------------------------------------------------------------------------------------

stock show_stats(playerid, toid)
{
	static const mm_gender[][] = {
	"мужчина",
	"женщина"};

	static const job_status[7][22] = {
	"водитель автобуса",
	"таксист",
	"механик",
	"дальнобойщик",
	"развозчик продуктов",
	"развозчик топлива",
	"газонокосильщик"};

	new house_data[12];
	if(PlayerInfo[playerid][house] != -1)
		format(house_data, sizeof(house_data), "дом №%d", PlayerInfo[playerid][house]);
	else
		format(house_data, sizeof(house_data), "отсутствует");

	new business_date[32];
	if(PlayerInfo[playerid][business] != -1)
		format(business_date, 32, "%s (№%d)", b_info[PlayerInfo[playerid][business] -1][b_name], b_info[PlayerInfo[playerid][business] -1][b_id]);
	else
		format(business_date, 32, "отсутствует");

	new job_data[22];
	if(PlayerInfo[playerid][job] != 0 && PlayerInfo[playerid][job] < 50)
		format(job_data, sizeof(job_data), "%s", job_status[PlayerInfo[playerid][job] -1]);
	else
		format(job_data, sizeof(job_data), "отсутствует");

	new fraction_data[32];
	if(PlayerInfo[playerid][member])
		format(fraction_data, sizeof(fraction_data), "%s", f_info[PlayerInfo[playerid][member] -1][f_name]);
	else
		format(fraction_data, sizeof(fraction_data), "отсутствует");

	new rank_data[32];
	if(PlayerInfo[playerid][rank])
		format(rank_data, sizeof(rank_data), "%s", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1]);
	else
		format(rank_data, sizeof(rank_data), "отсутствует");

	format(global_string, 1028, "\
	"c_grey"Имя:\t\t\t\t"c_white"%s\n\
	"c_grey"Номер аккаунта:\t\t"c_white"%d\n\
	"c_grey"Уровень:\t\t\t"c_white"%d\n\
	"c_grey"Очки опыта:\t\t\t"c_white"%d из %d\n\
	"c_grey"Возраст:\t\t\t"c_white"%d\n\
	"c_grey"Предупреждений:\t\t"c_white"%d\n\n\
	"c_grey"Номер телефона:\t\t"c_white"%d\n\
	"c_grey"На счету телефона:\t\t"c_white"%d\n\n\
	"c_grey"Уровень розыска:\t\t"c_white"%d\n\n\
	"c_grey"Пол:\t\t\t\t"c_white"%s\n\
	"c_grey"Работа:\t\t\t\t"c_white"%s\n\
	"c_grey"Организация:\t\t\t"c_white"%s\n\
	"c_grey"Ранг:\t\t\t\t"c_white"%s\n\
	"c_grey"Проживание:\t\t\t"c_white"%s\n\
	"c_grey"Бизнес:\t\t\t\t"c_white"%s\n\
	"c_grey"VIP статус:\t\t\t"c_white"%s\n\n\
	"c_white"Устройство: %s",
	PlayerInfo[playerid][name], PlayerInfo[playerid][id], PlayerInfo[playerid][level],  PlayerInfo[playerid][exp],(PlayerInfo[playerid][level] + 1)* 4, PlayerInfo[playerid][age],
	get_player_warn_count(playerid), PlayerInfo[playerid][number], PlayerInfo[playerid][phone_balance], PlayerInfo[playerid][wanted],
	mm_gender[PlayerInfo[playerid][gender]],
	job_data,
	fraction_data,
	rank_data,
	house_data,
	business_date,
	(! PlayerInfo[playerid][vip] ? ("Не имеется") : (""c_gold"Gold")),
	IsPlayerMobile(playerid) ? ("Android") : ("PC"));
	show_dialog(toid, d_none, DIALOG_STYLE_MSGBOX, !""scm_dialog"Статистика игрока", global_string, !"Закрыть", !"");
	return 1;
}

stock show_security(playerid)// "c_server"2."c_white" Привязка vk.com | %s\n
{
	global_string[0] = EOS;
	format(global_string, 342, "\
	"c_server"1."c_white" Изменить пароль\n\
	"c_server"2."c_white" Привязка Google Authenticator | %s\n\
	"c_server"3."c_white" История подключений",
	(! PlayerInfo[playerid][vk_id][0]) ? (""c_orange_red"Отсутствует") : (""c_green"Активна"),
	(! PlayerInfo[playerid][google_auth]) ? (""c_orange_red"Отключена") : (""c_green"Включена"));
	show_dialog(playerid, d_mm_security, DIALOG_STYLE_LIST, ""c_server"Управление безопасностью аккаунта", global_string, "Выбрать", "Назад");
	return 1;
}

stock show_settings(playerid)
{
    global_string[0] = EOS;
	format(global_string, 530, "\
	"c_server"1 |"c_white" Отображение чата организации\t%s\n\
	"c_server"2 |"c_white" Отображение ников игроков\t%s\n\
	"c_server"3 |"c_white" Отображение действий администрации\t%s\n\
	"c_server"4 |"c_white" Отображение ID игроков в чате\t%s\n\
	"c_server"5 |"c_white" Стиль походки\tСтиль [%d]\n\
	"c_server"6 |"c_white" Стиль разговора\tСтиль [%d]\n\
	"c_server"7 |"c_white" Загрузка текстур\t%s",
	(! PlayerInfo[playerid][settings][0]) ? (""c_orange_red"Выключено") : (""c_green"Включено"),
	(! PlayerInfo[playerid][settings][1]) ? (""c_orange_red"Выключено") : (""c_green"Включено"),
	(! PlayerInfo[playerid][settings][2]) ? (""c_orange_red"Выключено") : (""c_green"Включено"),
	(! PlayerInfo[playerid][settings][3]) ? (""c_orange_red"Выключено") : (""c_green"Включено"),
	PlayerInfo[playerid][walkstyle],
	PlayerInfo[playerid][textstyle],
	(! PlayerInfo[playerid][load_textures]) ? (""c_orange_red"Выключена") : (""c_green"Включена"));
	show_dialog(playerid, d_mm_settings_2, DIALOG_STYLE_TABLIST, !""scm_dialog"Личные настройки", global_string, !"Выбрать", !"Назад");
	return 1;
}

stock show_enhancements(playerid)
{
    global_string[0] = EOS;
	format(global_string, 418, "\
	"c_white"Название улучшения\t\t\t\t"c_white"Стоимость улучшения:\n\
	"c_server"1 |"c_white" Рюкзак "c_green"(20.000$)\t\t\t\t%s\n\
	"c_server"2 |"c_white" Скрытность "c_green"(50.000$)\t\t\t%s\n\
	"c_server"3 |"c_white" Решительность "c_green"(70.000$)\t\t\t%s\n\
	"c_server"4 |"c_white" Мастер маскировки "c_green"(100.000$)\t\t\t%s\n\
	"c_server"Информация по улучшениям",
	(PlayerInfo[playerid][enhancement][0]) ? (""c_green"Приобретено") : (""c_orange_red"Не приобретено"),
	(PlayerInfo[playerid][enhancement][1]) ? (""c_green"Приобретено") : (""c_orange_red"Не приобретено"),
	(PlayerInfo[playerid][enhancement][2]) ? (""c_green"Приобретено") : (""c_orange_red"Не приобретено"),
	(PlayerInfo[playerid][enhancement][3]) ? (""c_green"Приобретено") : (""c_orange_red"Не приобретено"));
	show_dialog(playerid, d_mm_enhancements1, DIALOG_STYLE_TABLIST_HEADERS, !""scm_dialog"Улучшения персонажа", global_string, !"Выбрать", !"Назад");
	return 1;
}

stock show_pass(playerid, show_id)
{
	if(GetPVarInt(show_id, "show_pass") == 1) return SendClientMessage(show_id, col_white, !""scm_error"Вы уже просматриваете паспорт.");

	Passport_PTD[show_id][0] = CreatePlayerTextDraw(show_id, 245.6665, 151.6510, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][0], 40.0000, 58.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][0], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][0], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][0], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][0], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][0], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][0], 0);

	Passport_PTD[show_id][1] = CreatePlayerTextDraw(show_id, 246.6665, 152.8954, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][1], 38.0000, 55.5998);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][1], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][1], 235802367);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][1], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][1], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][1], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][1], 0);

	Passport_PTD[show_id][2] = CreatePlayerTextDraw(show_id, 248.1329, 154.9989, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][2], 34.7695, 51.4696);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][2], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][2], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][2], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][2], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][2], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][2], 0);

	Passport_PTD[show_id][3] = CreatePlayerTextDraw(show_id, 249.1665, 156.2433, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][3], 32.5797, 48.8100);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][3], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][3], 235802367);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][3], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][3], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][3], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][3], 0);

	Passport_PTD[show_id][4] = CreatePlayerTextDraw(show_id, 203.2333, 153.9658, ""); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][4], 124.0000, 145.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][4], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][4], -1);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][4], 5);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][4], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][4], 0);
	PlayerTextDrawSetPreviewModel(show_id, Passport_PTD[show_id][4], GetPlayerSkin(playerid));
	PlayerTextDrawSetPreviewRot(show_id, Passport_PTD[show_id][4], 0.0000, 0.0000, 0.0000, 1.0000);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][4], 0xFFFFFF00);

	Passport_PTD[show_id][5] = CreatePlayerTextDraw(show_id, 248.6665, 304.7369, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][5], 57.0000, -95.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][5], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][5], 235802367);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][5], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][5], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][5], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][5], 0);

	Passport_PTD[show_id][6] = CreatePlayerTextDraw(show_id, 250.5332, 208.2805, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][6], 31.4699, 1.4700);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][6], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][6], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][6], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][6], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][6], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][6], 0);

	Passport_PTD[show_id][7] = CreatePlayerTextDraw(show_id, 250.5332, 206.3804, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][7], 31.2600, 2.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][7], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][7], 235802367);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][7], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][7], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][7], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][7], 0);

	Passport_PTD[show_id][8] = CreatePlayerTextDraw(show_id, 251.6665, 204.9324, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][8], 30.9699, 1.5298);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][8], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][8], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][8], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][8], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][8], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][8], 0);

	Passport_PTD[show_id][9] = CreatePlayerTextDraw(show_id, 250.3663, 156.3547, "PHOTO"); // пусто
	PlayerTextDrawLetterSize(show_id, Passport_PTD[show_id][9], 0.1124, 0.5629);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][9], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][9], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][9], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][9], 1);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][9], 1);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][9], 0);

	Passport_PTD[show_id][10] = CreatePlayerTextDraw(show_id, 292.6672, 155.7250, "NAME:~N~~N~GENDER:~n~~n~AGE:"); // пусто
	PlayerTextDrawLetterSize(show_id, Passport_PTD[show_id][10], 0.2073, 1.0690);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][10], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][10], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][10], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][10], 1);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][10], 1);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][10], 0);

	Passport_PTD[show_id][11] = CreatePlayerTextDraw(show_id, 292.6665, 165.5955, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][11], 94.0000, 1.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][11], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][11], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][11], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][11], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][11], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][11], 0);

	Passport_PTD[show_id][12] = CreatePlayerTextDraw(show_id, 292.6665, 184.5966, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][12], 94.0000, 1.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][12], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][12], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][12], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][12], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][12], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][12], 0);

	Passport_PTD[show_id][13] = CreatePlayerTextDraw(show_id, 292.6665, 203.7978, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][13], 94.0000, 1.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][13], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][13], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][13], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][13], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][13], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][13], 0);

	Passport_PTD[show_id][14] = CreatePlayerTextDraw(show_id, 384.7680, 155.7250, "LAMAR_WONDERFUL~n~~n~MAN~n~~n~24_y.o"); // пусто
	PlayerTextDrawLetterSize(show_id, Passport_PTD[show_id][14], 0.2055, 1.0317);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][14], 3);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][14], -2139062017);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][14], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][14], 1);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][14], 1);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][14], 0);

	Passport_PTD[show_id][15] = CreatePlayerTextDraw(show_id, 245.1672, 215.3773, "YEARS_IN_THE_STATE:~n~~n~ORGANIZATION:~n~~n~POSITION:~n~~n~WASTED:"); // пусто
	PlayerTextDrawLetterSize(show_id, Passport_PTD[show_id][15], 0.2073, 1.0690);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][15], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][15], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][15], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][15], 1);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][15], 1);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][15], 0);

	Passport_PTD[show_id][16] = CreatePlayerTextDraw(show_id, 245.4331, 225.2463, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][16], 141.0000, 1.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][16], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][16], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][16], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][16], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][16], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][16], 0);

	Passport_PTD[show_id][17] = CreatePlayerTextDraw(show_id, 245.4331, 244.3475, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][17], 141.0000, 1.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][17], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][17], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][17], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][17], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][17], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][17], 0);

	Passport_PTD[show_id][18] = CreatePlayerTextDraw(show_id, 245.4331, 263.8489, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][18], 141.0000, 1.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][18], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][18], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][18], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][18], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][18], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][18], 0);

	Passport_PTD[show_id][19] = CreatePlayerTextDraw(show_id, 245.4331, 282.9501, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][19], 141.0000, 1.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][19], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][19], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][19], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][19], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][19], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][19], 0);

	Passport_PTD[show_id][20] = CreatePlayerTextDraw(show_id, 383.9757, 215.3773, "24_years~n~~n~LSPD~n~~n~Sheriffe~n~~n~Nope"); // пусто
	PlayerTextDrawLetterSize(show_id, Passport_PTD[show_id][20], 0.2073, 1.0690);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][20], 3);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][20], -2139062017);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][20], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][20], 1);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][20], 1);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][20], 0);

	Passport_PTD[show_id][21] = CreatePlayerTextDraw(show_id, 234.3334, 296.0744, "particle:lamp_shad_64"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][21], 166.0000, 26.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][21], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][21], -239);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][21], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][21], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][21], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][21], 0);

	Passport_PTD[show_id][22] = CreatePlayerTextDraw(show_id, 283.9996, 295.4075, "LD_Beat:Chit"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][22], 19.0000, 22.7999);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][22], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][22], -1);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][22], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][22], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][22], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][22], 0);

	Passport_PTD[show_id][23] = CreatePlayerTextDraw(show_id, 294.3330, 299.3557, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][23], 43.0000, 15.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][23], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][23], -1);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][23], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][23], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][23], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][23], 0);

	Passport_PTD[show_id][24] = CreatePlayerTextDraw(show_id, 326.6665, 295.4075, "LD_Beat:Chit"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][24], 19.0000, 22.7999);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][24], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][24], -1);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][24], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][24], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][24], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][24], 0);

	Passport_PTD[show_id][25] = CreatePlayerTextDraw(show_id, 314.7666, 302.3297, "CONTINUE"); // пусто
	PlayerTextDrawLetterSize(show_id, Passport_PTD[show_id][25], 0.1999, 0.9362);
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][25], 10.0000, 54.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][25], 2);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][25], 235802367);
	PlayerTextDrawUseBox(show_id, Passport_PTD[show_id][25], 1);
	PlayerTextDrawBoxColor(show_id, Passport_PTD[show_id][25], 0);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][25], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][25], 1);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][25], 1);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][25], 0);
	PlayerTextDrawSetSelectable(show_id, Passport_PTD[show_id][25], true);

	Passport_PTD[show_id][26] = CreatePlayerTextDraw(show_id, 240.6665, 128.4517, "LD_Beat:CHIT"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][26], 13.0000, 16.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][26], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][26], -1);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][26], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][26], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][26], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][26], 0);

	Passport_PTD[show_id][27] = CreatePlayerTextDraw(show_id, 395.3334, 243.7702, "LD_Beat:CHIT"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][27], 9.0000, 11.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][27], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][27], -1);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][27], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][27], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][27], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][27], 0);

	Passport_PTD[show_id][28] = CreatePlayerTextDraw(show_id, 245.6665, 317.3074, "LD_Beat:CHIT"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][28], 6.0000, 6.9299);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][28], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][28], -1);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][28], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][28], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][28], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][28], 0);

	Passport_PTD[show_id][29] = CreatePlayerTextDraw(show_id, 231.1000, 291.0592, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][29], 14.0000, 2.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][29], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][29], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][29], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][29], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][29], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][29], 0);

	Passport_PTD[show_id][30] = CreatePlayerTextDraw(show_id, 243.7666, 290.2145, "LD_Beat:Chit"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][30], 4.0000, 3.5799);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][30], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][30], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][30], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][30], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][30], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][30], 0);

	Passport_PTD[show_id][31] = CreatePlayerTextDraw(show_id, 239.4333, 294.3629, "LD_Beat:Chit"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][31], 4.0000, 3.5799);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][31], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][31], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][31], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][31], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][31], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][31], 0);

	Passport_PTD[show_id][32] = CreatePlayerTextDraw(show_id, 231.1000, 295.2593, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][32], 10.0000, 2.0699);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][32], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][32], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][32], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][32], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][32], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][32], 0);

	Passport_PTD[show_id][33] = CreatePlayerTextDraw(show_id, 242.9335, 294.3629, "LD_Beat:Chit"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][33], 3.0000, 3.6500);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][33], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][33], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][33], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][33], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][33], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][33], 0);

	Passport_PTD[show_id][34] = CreatePlayerTextDraw(show_id, 385.3663, 147.1705, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][34], 14.8297, 2.0000);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][34], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][34], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][34], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][34], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][34], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][34], 0);

	Passport_PTD[show_id][35] = CreatePlayerTextDraw(show_id, 382.9664, 146.2740, "LD_Beat:Chit"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][35], 4.0000, 3.5799);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][35], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][35], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][35], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][35], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][35], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][35], 0);

	Passport_PTD[show_id][36] = CreatePlayerTextDraw(show_id, 390.0332, 141.7778, "LD_SPAC:white"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][36], 10.0000, 2.0699);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][36], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][36], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][36], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][36], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][36], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][36], 0);

	Passport_PTD[show_id][37] = CreatePlayerTextDraw(show_id, 387.4331, 140.8813, "LD_Beat:Chit"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][37], 4.0000, 3.5799);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][37], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][37], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][37], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][37], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][37], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][37], 0);

	Passport_PTD[show_id][38] = CreatePlayerTextDraw(show_id, 384.6329, 140.8813, "LD_Beat:Chit"); // пусто
	PlayerTextDrawTextSize(show_id, Passport_PTD[show_id][38], 3.0000, 3.7300);
	PlayerTextDrawAlignment(show_id, Passport_PTD[show_id][38], 1);
	PlayerTextDrawColor(show_id, Passport_PTD[show_id][38], 505290495);
	PlayerTextDrawBackgroundColor(show_id, Passport_PTD[show_id][38], 255);
	PlayerTextDrawFont(show_id, Passport_PTD[show_id][38], 4);
	PlayerTextDrawSetProportional(show_id, Passport_PTD[show_id][38], 0);
	PlayerTextDrawSetShadow(show_id, Passport_PTD[show_id][38], 0);

	new fraction_data[32];
	if(PlayerInfo[playerid][member])
		format(fraction_data, sizeof(fraction_data), "%s", TranslateText(f_info[PlayerInfo[playerid][member] -1][f_name]));
	else
		format(fraction_data, sizeof(fraction_data), "-");

	new rank_data[32];
	if(PlayerInfo[playerid][rank])
		format(rank_data, sizeof(rank_data), "%s", TranslateText(f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1]));
	else
		format(rank_data, sizeof(rank_data), "-");


	static const mm_gender[][] = {
	"Man",
	"Woman"};

	new td_string[128];

	format(td_string, sizeof(td_string), "%s~n~~n~%s~n~~n~%d_y.o", PlayerInfo[playerid][name], mm_gender[PlayerInfo[playerid][gender]], age);
	PlayerTextDrawSetString(show_id, Passport_PTD[show_id][14], td_string);

	td_string[0] = EOS;

	format(td_string, sizeof(td_string), "%d_years~n~~n~%s~n~~n~%s~n~~n~Nope", PlayerInfo[playerid][level], fraction_data, rank_data);
	PlayerTextDrawSetString(show_id, Passport_PTD[show_id][20], td_string);

	for(new i = 0; i < 39; i++)
	{
	    PlayerTextDrawShow(show_id, Passport_PTD[show_id][i]);
		if(i < 6) TextDrawShowForPlayer(show_id, Passport_TD[i]);
	}

	SelectTextDraw(show_id, 0xB0C4DEFF);

	SetPVarInt(show_id, "show_pass", 1);

	return 1;
}

stock show_cams(playerid, camid)
{
	SetPVarInt(playerid, "police_camid", camid);
	SetPlayerCameraPos(playerid, police_cams[camid][0], police_cams[camid][1], police_cams[camid][2]);
	SetPlayerCameraLookAt(playerid, police_cams[camid][5], police_cams[camid][6], police_cams[camid][7]);
	return 1;
}

stock show_doors(playerid)
{
	new veh_id = GetPlayerVehicleID(playerid);

	format(global_string, 216, "\
	"c_server"1. %s "c_white"дверь водителя\n\
	"c_server"2. %s "c_white"правую переднюю дверь\n\
	"c_server"3. %s "c_white"левую заднюю дверь\n\
	"c_server"4. %s "c_white"правую заднюю дверь",
	(veh_info[veh_id -1][v_door_status][0]) ? (""c_orange_red"Закрыть") : (""c_green"Открыть"),
	(veh_info[veh_id -1][v_door_status][1]) ? (""c_orange_red"Закрыть") : (""c_green"Открыть"),
	(veh_info[veh_id -1][v_door_status][2]) ? (""c_orange_red"Закрыть") : (""c_green"Открыть"),
	(veh_info[veh_id -1][v_door_status][3]) ? (""c_orange_red"Закрыть") : (""c_green"Открыть"));
	show_dialog(playerid, d_carpanel_2, DIALOG_STYLE_LIST, ""c_server"Управление дверьми автомобиля", global_string, "Выбрать", "Назад");
	return 1;
}

stock show_contacts(playerid)
{
	new string[738], str[66];
	strcat(string, ""c_server"Наименование контакта:\t\t"c_server"Номер телефона:\n")
	strcat(string, ""c_grey"Телефонная книга:");
	for(new i; i < 10; i++)
	{
		if(!strcmp(phone_info[playerid][i], "-", true)) continue;
		format(str, sizeof(str), "\n"c_white"%s\t\t"c_server"%d тел.", phone_info[playerid][i], PlayerInfo[playerid][contact_num][i]);
		strcat(string, str);
	}
	SetPVarInt(playerid, "phone_dialog", 3);
	return show_dialog(playerid, d_phone_choose, DIALOG_STYLE_TABLIST_HEADERS, ""c_server"Список контактов", string, "Выбрать", "Назад");
}

stock show_complaints(playerid)
{
	new string[56];
	format(string, 56, "SELECT `u_fromname`, `u_toname` FROM `users_complaints`");
	mysql_query(sql_connection, string);
	new fromname[MAX_PLAYER_NAME], toname[MAX_PLAYER_NAME], str[68], rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, col_white, !""scm_error"Ничего не найдено.");
	global_string[0] = EOS;
	strcat(global_string, ""c_white"От игрока:\t"c_white"На игрока:");
	for(new i; i < rows; i++)
	{
		cache_get_field_content(i, "u_fromname", fromname, sql_connection, MAX_PLAYER_NAME);
		cache_get_field_content(i, "u_toname", toname, sql_connection, MAX_PLAYER_NAME);
		format(str, sizeof(str), "\n"c_white"%s\t"c_grey"%s", fromname, toname);
		strcat(global_string, str);
	}
	show_dialog(playerid, d_complaints_list, DIALOG_STYLE_TABLIST_HEADERS, !""scm_dialog"Список жалоб", global_string, !"Выбрать", !"Закрыть");
	return 1;
}

stock SetPlayerTextStyle(playerid, style)
{
	PlayerInfo[playerid][textstyle] = style;
	update_int_sql(playerid, "u_textstyle", PlayerInfo[playerid][textstyle]);
	return 1;
}

stock SetPlayerWalkingStyle(playerid, style)
{
	PlayerInfo[playerid][walkstyle] = style;
	update_int_sql(playerid, "u_walkstyle", PlayerInfo[playerid][walkstyle]);
	return 1;
}
forward walking_style_callback(playerid);
public walking_style_callback(playerid)
{
    if(!PlayerInfo[playerid][walkstyle]) return 1;
	new keys, updown, leftright;
    GetPlayerKeys(playerid,keys,updown,leftright);
	if((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
    {
        KillTimer(walk_timer[playerid]), walk_timer[playerid] = -1;
		//ApplyAnimation(playerid,"PED","SEAT_down",4.1,0,0,0,1,1,1);
        ApplyAnimation(playerid,"PED", walkInfo[PlayerInfo[playerid][walkstyle] -1],4.1,1,1,1,1,1);
        walk_timer[playerid] = SetTimerEx("walking_style_callback",400,0,"d", playerid);
    }
    else ApplyAnimation(playerid,"PED", walkInfo[PlayerInfo[playerid][walkstyle] -1],4.0,0,0,0,0,1), KillTimer(walk_timer[playerid]), walk_timer[playerid] = -1;
	return 1;
}

stock v_boat(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 472,473,493,595,484,430,452..454,446: return 1;
	}
	return 0;
}

stock show_phone_book(playerid)
{
	if(PlayerInfo[playerid][phones] == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас пустая телефонная книга.");
	new string[555], str[56];//, num = strval(PlayerInfo[playerid][phones]);
	strcat(string, ""c_grey"Телефонная книга:");
	for(new i; i < PlayerInfo[playerid][phones]; i++)
	{
		format(str, sizeof(str), "\n"c_white"%s\t\t"c_server"%d", phone_info[playerid][i], PlayerInfo[playerid][phone_num][i]);
		strcat(string, str);
	}
	return show_dialog(playerid, d_phone_menu, DIALOG_STYLE_LIST, ""c_server"Список контактов", string, "Выбрать", "Назад");
}

stock v_bike(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 448,435,449,450,457,462,464,465,481,485,501,509,510,522,530,564,569,570,584,594,606,607,608,610,611: return 1;
	}
	return 0;
}

stock v_plane(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 487, 488, 497, 592, 577, 511, 512, 593, 520, 553, 476, 519, 460, 513, 548, 425:  return 1;
	}
	return 0;
}

stock v_velo(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 481,509,510:return 1;
	}
	return 0;
}

stock toggle_engine(playerid, vid)
{
	new Float:veh_health;
	GetVehicleHealth(vid, veh_health);
	if(veh_health <= 350) return show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, !""scm_dialog"Уведомление", !""c_white"Транспорт сильно повреждён,\nзапустить двигатель не удалось.", !"Закрыть", !"");
	if(veh_info[vid -1][v_fuel] < 1) return show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, !""scm_dialog"Уведомление", !""c_white"В транспорте закончилось топливо.", !"Закрыть", !"");

	new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(vid, engine, lights, alarm, doors, bonnet, boot, objective);

	if(engine == VEHICLE_PARAMS_UNSET || engine == VEHICLE_PARAMS_OFF)
	{
		if(veh_info[vid -1][v_fuel] < 1)
		{
			SendClientMessage(playerid, col_white, ""c_orange_red"* "c_grey"У Вас закончилось топливо в автомобиле. Используйте "c_white"'/service' "c_grey"чтобы вызвать механика!");
			return SetVehicleParamsEx(vid, VEHICLE_PARAMS_OFF, lights, alarm, doors, bonnet, boot, objective);
		}
		else SetVehicleParamsEx(vid, VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objective);
	}
	else SetVehicleParamsEx(vid, VEHICLE_PARAMS_OFF, lights, alarm, doors, bonnet, boot, objective);
 	if(bicycles(vid))
    {
    veh_info[vid][v_fuel] = 100;
    GetVehicleParamsEx(vid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(vid,VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,
	boot,objective);
    return 1;
    }
	return 1;
}



stock toggle_lights(vehicleid)
{
	new engine,lights,alarm,doors,bonnet,boot,objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine,(lights == VEHICLE_PARAMS_UNSET || lights == VEHICLE_PARAMS_OFF)? VEHICLE_PARAMS_ON : VEHICLE_PARAMS_OFF, alarm, doors, bonnet, boot, objective);
	return 1;
}

stock memset(array[], value, size = sizeof(array))
{
    if(!size)
    {
        print("memset: Не указан размер массива");

        /*
        //размер массива
        #emit ADDR.pri array
        #emit ADD.c 4
        #emit PUSH.pri
        #emit SHL.C.pri 2

        //вызов заного
        #emit LREF.S.alt value
        #emit LCTRL 1
        #emit POP.alt
        #emit JZER
        #emit CALL.pri
        */

        return 0;
    }

    new phys_addr;

    #emit LOAD.S.pri array
    #emit STOR.S.pri phys_addr

    /*return */memfill_byaddr(phys_addr, value, size);
}

stock memfill_byaddr(address, cellsize, value)
{
    new idx;

    #emit LCTRL       6
    #emit MOVE.alt
    #emit LCTRL       0

    #emit ADD
    #emit MOVE.alt

    #emit LCTRL       1
    #emit SUB.alt
    #emit ADD.C       92

    #emit STOR.S.pri  idx
    #emit LOAD.S.pri  cellsize
    #emit SHL.C.pri   2
    #emit SREF.S.pri  idx

    #emit LOAD.S.alt  address
    #emit LOAD.S.pri  value
    #emit FILL        0
}


stock pdcam_status(playerid, bool:status)
{
	if(status == true)
	{
		ptd_policecam[playerid][0] = CreatePlayerTextDraw(playerid, 643.000000, 1.500000, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][0], 0.000000, 2.517900);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][0], -0.500000, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][0], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][0], 0);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][0], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][0], 255);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][0], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][0], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][0], 1);

		ptd_policecam[playerid][1] = CreatePlayerTextDraw(playerid, 641.500000, 423.366699, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][1], 0.000000, 2.517900);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][1], -2.000000, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][1], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][1], 0);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][1], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][1], 255);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][1], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][1], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][1], 1);

		ptd_policecam[playerid][2] = CreatePlayerTextDraw(playerid, 28.000000, 1.500000, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][2], 0.000000, 49.391975);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][2], -2.000000, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][2], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][2], 0);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][2], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][2], 255);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][2], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][2], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][2], 0);

		ptd_policecam[playerid][3] = CreatePlayerTextDraw(playerid, 642.500000, 1.500000, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][3], 0.000000, 49.391975);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][3], 612.500000, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][3], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][3], 0);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][3], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][3], 255);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][3], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][3], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][3], 0);

		ptd_policecam[playerid][4] = CreatePlayerTextDraw(playerid, 567.000000, 35.466636, "ld_pool:ball");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][4], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][4], 10.500000, 11.822235);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][4], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][4], -16776961);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][4], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][4], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][4], 4);

		ptd_policecam[playerid][5] = CreatePlayerTextDraw(playerid, 580.500000, 34.222194, "rec");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][5], 0.319999, 1.320000);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][5], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][5], -1);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][5], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][5], 0);
		PlayerTextDrawBackgroundColor(playerid, ptd_policecam[playerid][5], 51);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][5], 2);
		PlayerTextDrawSetProportional(playerid, ptd_policecam[playerid][5], 1);

		ptd_policecam[playerid][6] = CreatePlayerTextDraw(playerid, 131.500000, 62.844360, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][6], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][6], 2.000000, 143.111129);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][6], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][6], -1);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][6], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][6], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][6], 4);

		ptd_policecam[playerid][7] = CreatePlayerTextDraw(playerid, 131.500000, 244.911224, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][7], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][7], 2.000000, 143.111129);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][7], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][7], -1);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][7], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][7], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][7], 4);

		ptd_policecam[playerid][8] = CreatePlayerTextDraw(playerid, 507.000000, 61.733337, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][8], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][8], 2.000000, 143.111129);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][8], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][8], -1);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][8], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][8], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][8], 4);

		ptd_policecam[playerid][9] = CreatePlayerTextDraw(playerid, 507.000000, 244.422393, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][9], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][9], 2.000000, 143.111129);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][9], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][9], -1);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][9], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][9], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][9], 4);

		ptd_policecam[playerid][10] = CreatePlayerTextDraw(playerid, 131.500000, 60.355499, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][10], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][10], 125.000000, 2.488899);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][10], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][10], -1);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][10], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][10], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][10], 4);

		ptd_policecam[playerid][11] = CreatePlayerTextDraw(playerid, 131.500000, 387.400146, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][11], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][11], 125.000000, 2.488899);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][11], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][11], -1);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][11], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][11], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][11], 4);

		ptd_policecam[playerid][12] = CreatePlayerTextDraw(playerid, 384.000000, 59.866668, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][12], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][12], 125.000000, 2.488899);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][12], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][12], -1);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][12], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][12], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][12], 4);

		ptd_policecam[playerid][13] = CreatePlayerTextDraw(playerid, 384.000000, 387.533447, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][13], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][13], 125.000000, 2.488899);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][13], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][13], -1);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][13], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][13], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][13], 4);

		ptd_policecam[playerid][14] = CreatePlayerTextDraw(playerid, 322.500000, 403.822326, "29/01/2018 15:30");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][14], 0.266500, 1.071111);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][14], 2);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][14], -5940737);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][14], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][14], 0);
		PlayerTextDrawBackgroundColor(playerid, ptd_policecam[playerid][14], 51);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][14], 2);
		PlayerTextDrawSetProportional(playerid, ptd_policecam[playerid][14], 1);

		ptd_policecam[playerid][15] = CreatePlayerTextDraw(playerid, 124.000000, 346.833312, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][15], 0.000000, 4.413583);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][15], 33.000000, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][15], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][15], 0);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][15], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][15], 676429311);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][15], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][15], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][15], 0);

		ptd_policecam[playerid][16] = CreatePlayerTextDraw(playerid, 124.000000, 352.433349, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][16], 0.000000, 3.624071);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][16], 33.000000, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][16], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][16], 0);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][16], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][16], 421075455);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][16], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][16], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][16], 0);

		ptd_policecam[playerid][17] = CreatePlayerTextDraw(playerid, 60.000000, 344.088958, "location");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][17], 0.193500, 0.585777);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][17], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][17], -1);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][17], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][17], 0);
		PlayerTextDrawBackgroundColor(playerid, ptd_policecam[playerid][17], 51);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][17], 2);
		PlayerTextDrawSetProportional(playerid, ptd_policecam[playerid][17], 1);

		ptd_policecam[playerid][18] = CreatePlayerTextDraw(playerid, 103.000000, 377.944458, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][18], 0.000000, 0.582096);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][18], 54.500000, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][18], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][18], 0);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][18], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][18], 102);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][18], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][18], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][18], 0);
		PlayerTextDrawSetSelectable(playerid, ptd_policecam[playerid][18], true);

		ptd_policecam[playerid][19] = CreatePlayerTextDraw(playerid, 61.500000, 377.944458, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][19], 0.000000, 0.501232);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][19], 54.500000, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][19], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][19], 0);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][19], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][19], 676429311);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][19], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][19], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][19], 0);

		ptd_policecam[playerid][20] = CreatePlayerTextDraw(playerid, 68.000000, 375.822296, "exit");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][20], 0.268500, 0.934222);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][20], 92.500000, 8.711111);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][20], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][20], -1);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][20], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][20], 572661504);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][20], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][20], 0);
		PlayerTextDrawBackgroundColor(playerid, ptd_policecam[playerid][20], 51);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][20], 2);
		PlayerTextDrawSetProportional(playerid, ptd_policecam[playerid][20], 1);
		PlayerTextDrawSetSelectable(playerid, ptd_policecam[playerid][20], true);

		ptd_policecam[playerid][21] = CreatePlayerTextDraw(playerid, 121.500000, 360.522216, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][21], 0.000000, 0.858643);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][21], 35.500000, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][21], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][21], 0);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][21], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][21], -2139062017);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][21], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][21], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][21], 0);
		PlayerTextDrawSetPreviewModel(playerid, ptd_policecam[playerid][21], 19132);
		PlayerTextDrawSetPreviewRot(playerid, ptd_policecam[playerid][21], 0.000000, 0.000000, 0.000000, 1.000000);

		ptd_policecam[playerid][22] = CreatePlayerTextDraw(playerid, 120.500000, 361.766662, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][22], 0.000000, 0.582099);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][22], 36.500000, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][22], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][22], 0);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][22], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][22], 421075455);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][22], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][22], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][22], 0);
		PlayerTextDrawSetPreviewModel(playerid, ptd_policecam[playerid][22], 19132);
		PlayerTextDrawSetPreviewRot(playerid, ptd_policecam[playerid][22], 90.000000, 50.000000, 0.000000, 1.000000);

		ptd_policecam[playerid][23] = CreatePlayerTextDraw(playerid, 48.500000, 361.766693, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][23], 0.000000, 0.543824);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][23], 36.500000, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][23], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][23], 0);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][23], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][23], 676429311);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][23], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][23], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][23], 0);
		PlayerTextDrawSetSelectable(playerid, ptd_policecam[playerid][23], true);

		ptd_policecam[playerid][24] = CreatePlayerTextDraw(playerid, 120.500000, 361.522247, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][24], 0.000000, 0.593824);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][24], 108.500000, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][24], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][24], 0);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][24], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][24], 676429311);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][24], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][24], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][24], 0);
		PlayerTextDrawSetSelectable(playerid, ptd_policecam[playerid][24], true);

		ptd_policecam[playerid][25] = CreatePlayerTextDraw(playerid, 39.500000, 358.400085, "<");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][25], 0.240999, 1.257777);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][25], 45.000000, 8.088889);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][25], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][25], -1);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][25], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][25], -256);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][25], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][25], 0);
		PlayerTextDrawBackgroundColor(playerid, ptd_policecam[playerid][25], 51);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][25], 2);
		PlayerTextDrawSetProportional(playerid, ptd_policecam[playerid][25], 1);
		PlayerTextDrawSetSelectable(playerid, ptd_policecam[playerid][25], true);

		ptd_policecam[playerid][26] = CreatePlayerTextDraw(playerid, 112.000000, 358.155639, ">");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][26], 0.240999, 1.257777);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][26], 118.000000, 8.088890);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][26], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][26], -1);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][26], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][26], -256);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][26], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][26], 0);
		PlayerTextDrawBackgroundColor(playerid, ptd_policecam[playerid][26], 51);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][26], 0);
		PlayerTextDrawSetProportional(playerid, ptd_policecam[playerid][26], 1);
		PlayerTextDrawSetSelectable(playerid, ptd_policecam[playerid][26], true);

		ptd_policecam[playerid][27] = CreatePlayerTextDraw(playerid, 49.500000, 361.144409, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][27], 0.000000, 0.658643);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][27], 44.500000, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][27], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][27], 0);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][27], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][27], -2139062017);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][27], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][27], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][27], 0);

		ptd_policecam[playerid][28] = CreatePlayerTextDraw(playerid, 112.500000, 361.522186, "usebox");
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][28], 0.000000, 0.658643);
		PlayerTextDrawTextSize(playerid, ptd_policecam[playerid][28], 107.500000, 0.000000);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][28], 1);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][28], 0);
		PlayerTextDrawUseBox(playerid, ptd_policecam[playerid][28], true);
		PlayerTextDrawBoxColor(playerid, ptd_policecam[playerid][28], -2139062017);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][28], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][28], 0);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][28], 0);

		ptd_policecam[playerid][29] = CreatePlayerTextDraw(playerid, 79.500000, 359.644500, "_"); // Название фракции
		PlayerTextDrawSetString(playerid, ptd_policecam[playerid][29], f_info[PlayerInfo[playerid][member] -1][f_name]);
		PlayerTextDrawLetterSize(playerid, ptd_policecam[playerid][29], 0.215499, 0.965333);
		PlayerTextDrawAlignment(playerid, ptd_policecam[playerid][29], 2);
		PlayerTextDrawColor(playerid, ptd_policecam[playerid][29], -1);
		PlayerTextDrawSetShadow(playerid, ptd_policecam[playerid][29], 0);
		PlayerTextDrawSetOutline(playerid, ptd_policecam[playerid][29], 0);
		PlayerTextDrawBackgroundColor(playerid, ptd_policecam[playerid][29], 51);
		PlayerTextDrawFont(playerid, ptd_policecam[playerid][29], 2);
		PlayerTextDrawSetProportional(playerid, ptd_policecam[playerid][29], 1);

		SelectTextDraw(playerid, 0xB0C4DEFF);
		for(new j = 0; j < 30; j ++)
		{
			PlayerTextDrawShow(playerid, ptd_policecam[playerid][j]);
		}
		for(new i; i < 4; i++)last_coord[playerid][i] = p_t_info[playerid][p_pos][i];
		TogglePlayerSpectating(playerid, true);
		SetPVarInt(playerid, "last_interior", GetPlayerInterior(playerid));
		SetPVarInt(playerid, "last_virtualworld", GetPlayerVirtualWorld(playerid));
		//
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		//
		return show_cams(playerid, 0);
	}
	else
	{
		for(new j = 0; j < 30; j ++)
		{
			PlayerTextDrawHide(playerid, ptd_policecam[playerid][j]);

			PlayerTextDrawDestroy(playerid, ptd_policecam[playerid][j]);
			ptd_policecam[playerid][j] = PlayerText:-1;
		}
		if(is_fraction_duty {playerid} == 1)SetPVarInt(playerid, "stop_comp", 1);
		TogglePlayerSpectating(playerid, false);
	}
	return 1;
}

stock speedometr_status(playerid, bool:status)
{
	if(status == true)
	{
		if(!speed_one[playerid]) createspeed(playerid);

		PlayerTextDrawSetString(playerid, TextDrawSpeedP[playerid][0], vehicle_name[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);

		for(new j = 0; j < 55; j++)
		{
			if(j < 8) PlayerTextDrawShow(playerid, TextDrawSpeedP[playerid][j]);
			TextDrawShowForPlayer(playerid, TextDrawSpeed[j]);
		}
	}
	else
	{
		for(new j = 0; j < 55; j++)
		{
			if(j < 8) PlayerTextDrawHide(playerid, TextDrawSpeedP[playerid][j]);
			TextDrawHideForPlayer(playerid, TextDrawSpeed[j]);
		}
	}
	return 1;
}

stock destroyspeed(playerid)
{
	for(new j = 0; j < 8; j ++)
	{
		PlayerTextDrawDestroy(playerid, TextDrawSpeedP[playerid][j]);
		TextDrawSpeedP[playerid][j] = PlayerText:-1;
	}
	speed_one[playerid] = 0;
}

stock createspeed(playerid)
{
	TextDrawSpeedP[playerid][0] = CreatePlayerTextDraw(playerid, 336.7329, 392.9113, "INFERNUS"); // Name Car
	PlayerTextDrawLetterSize(playerid, TextDrawSpeedP[playerid][0], 0.1550, 0.5960);
	PlayerTextDrawAlignment(playerid, TextDrawSpeedP[playerid][0], 2);
	PlayerTextDrawColor(playerid, TextDrawSpeedP[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, TextDrawSpeedP[playerid][0], 255);
	PlayerTextDrawFont(playerid, TextDrawSpeedP[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, TextDrawSpeedP[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, TextDrawSpeedP[playerid][0], 0);

	TextDrawSpeedP[playerid][1] = CreatePlayerTextDraw(playerid, 289.4625, 404.1889, "LD_Beat:Chit"); // Engine
	PlayerTextDrawTextSize(playerid, TextDrawSpeedP[playerid][1], 5.0000, 6.3400);
	PlayerTextDrawAlignment(playerid, TextDrawSpeedP[playerid][1], 1);
	PlayerTextDrawColor(playerid, TextDrawSpeedP[playerid][1], 8388863);
	PlayerTextDrawBackgroundColor(playerid, TextDrawSpeedP[playerid][1], 255);
	PlayerTextDrawFont(playerid, TextDrawSpeedP[playerid][1], 4);
	PlayerTextDrawSetProportional(playerid, TextDrawSpeedP[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, TextDrawSpeedP[playerid][1], 0);

	TextDrawSpeedP[playerid][2] = CreatePlayerTextDraw(playerid, 354.6666, 404.1889, "LD_Beat:Chit"); // Lock
	PlayerTextDrawTextSize(playerid, TextDrawSpeedP[playerid][2], 5.0000, 6.5398);
	PlayerTextDrawAlignment(playerid, TextDrawSpeedP[playerid][2], 1);
	PlayerTextDrawColor(playerid, TextDrawSpeedP[playerid][2], -347323649);
	PlayerTextDrawBackgroundColor(playerid, TextDrawSpeedP[playerid][2], 255);
	PlayerTextDrawFont(playerid, TextDrawSpeedP[playerid][2], 4);
	PlayerTextDrawSetProportional(playerid, TextDrawSpeedP[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, TextDrawSpeedP[playerid][2], 0);

	TextDrawSpeedP[playerid][3] = CreatePlayerTextDraw(playerid, 323.8646, 404.1889, "LD_Beat:Chit"); // Lamp
	PlayerTextDrawTextSize(playerid, TextDrawSpeedP[playerid][3], 5.1399, 6.1599);
	PlayerTextDrawAlignment(playerid, TextDrawSpeedP[playerid][3], 1);
	PlayerTextDrawColor(playerid, TextDrawSpeedP[playerid][3], -347323649);
	PlayerTextDrawBackgroundColor(playerid, TextDrawSpeedP[playerid][3], 255);
	PlayerTextDrawFont(playerid, TextDrawSpeedP[playerid][3], 4);
	PlayerTextDrawSetProportional(playerid, TextDrawSpeedP[playerid][3], 0);
	PlayerTextDrawSetShadow(playerid, TextDrawSpeedP[playerid][3], 0);

	TextDrawSpeedP[playerid][4] = CreatePlayerTextDraw(playerid, 262.1000, 398.3482, "100"); // Speed
	PlayerTextDrawLetterSize(playerid, TextDrawSpeedP[playerid][4], 0.4059, 1.8322);
	PlayerTextDrawAlignment(playerid, TextDrawSpeedP[playerid][4], 2);
	PlayerTextDrawColor(playerid, TextDrawSpeedP[playerid][4], -1);
	PlayerTextDrawSetOutline(playerid, TextDrawSpeedP[playerid][4], 1);
	PlayerTextDrawBackgroundColor(playerid, TextDrawSpeedP[playerid][4], 901119311);
	PlayerTextDrawFont(playerid, TextDrawSpeedP[playerid][4], 3);
	PlayerTextDrawSetProportional(playerid, TextDrawSpeedP[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, TextDrawSpeedP[playerid][4], 0);

	TextDrawSpeedP[playerid][5] = CreatePlayerTextDraw(playerid, 262.0997, 427.8641, "00000_k?"); // Mileage
	PlayerTextDrawLetterSize(playerid, TextDrawSpeedP[playerid][5], 0.1351, 0.8574);
	PlayerTextDrawAlignment(playerid, TextDrawSpeedP[playerid][5], 2);
	PlayerTextDrawColor(playerid, TextDrawSpeedP[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, TextDrawSpeedP[playerid][5], 255);
	PlayerTextDrawFont(playerid, TextDrawSpeedP[playerid][5], 2);
	PlayerTextDrawSetProportional(playerid, TextDrawSpeedP[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, TextDrawSpeedP[playerid][5], 0);

	TextDrawSpeedP[playerid][6] = CreatePlayerTextDraw(playerid, 298.3331, 421.1368, "fuel:_100%"); // Gas Station
	PlayerTextDrawLetterSize(playerid, TextDrawSpeedP[playerid][6], 0.1366, 0.6915);
	PlayerTextDrawAlignment(playerid, TextDrawSpeedP[playerid][6], 1);
	PlayerTextDrawColor(playerid, TextDrawSpeedP[playerid][6], -1);
	PlayerTextDrawBackgroundColor(playerid, TextDrawSpeedP[playerid][6], 255);
	PlayerTextDrawFont(playerid, TextDrawSpeedP[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, TextDrawSpeedP[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, TextDrawSpeedP[playerid][6], 0);

	TextDrawSpeedP[playerid][7] = CreatePlayerTextDraw(playerid, 326.7329, 421.9521, "LD_SPAC:white"); // Fuel
	PlayerTextDrawTextSize(playerid, TextDrawSpeedP[playerid][7], 37.0000, 3.0000);
	PlayerTextDrawAlignment(playerid, TextDrawSpeedP[playerid][7], 1);
	PlayerTextDrawColor(playerid, TextDrawSpeedP[playerid][7], 1234959871);
	PlayerTextDrawBackgroundColor(playerid, TextDrawSpeedP[playerid][7], 255);
	PlayerTextDrawFont(playerid, TextDrawSpeedP[playerid][7], 4);
	PlayerTextDrawSetProportional(playerid, TextDrawSpeedP[playerid][7], 0);
	PlayerTextDrawSetShadow(playerid, TextDrawSpeedP[playerid][7], 0);

	speed_one[playerid] = 1;
}


StrToHex(string[])
{
    new i, value;
    if(string [0] == '0' && (string [1] == 'x' || string [1] == 'X')) i = 2;
    while(string[i])
    {
        value <<= 4;
        switch (string [i])
        {
            case '0' .. '9': value |= string [i] -'0';
            case 'A' .. 'F': value |= string [i] -'A' + 10;
            case 'a' .. 'f': value |= string [i] -'a' + 10;
            default: return 0;
        }
        ++i;
    }
    return value;
}

stock cop_player(playerid)
{
	if(PlayerInfo[playerid][member] >= 4 && PlayerInfo[playerid][member]<= 6) return 1;
	if(PlayerInfo[playerid][member] == 11 && PlayerInfo[playerid][rank] == 7) return 1;
	return 0;
}

stock fbi_player(playerid)
{
	if(PlayerInfo[playerid][member] == 7) return 1;
	return 0;
}

stock army_player(playerid)
{
	if(PlayerInfo[playerid][member] == 8) return 1;
	if(PlayerInfo[playerid][member] == 11 && PlayerInfo[playerid][rank] == 8) return 1;
	return 0;
}

stock gov_player(playerid)
{
	if(PlayerInfo[playerid][member] == 11) return 1;
	return 0;
}

stock medic_player(playerid)
{
	if(PlayerInfo[playerid][member] >= 15 && PlayerInfo[playerid][member]<= 17) return 1;
	if(PlayerInfo[playerid][member] == 11 && PlayerInfo[playerid][rank] == 6) return 1;
	return 0;
}

stock gang_player(playerid)
{
	if(PlayerInfo[playerid][member] >= 18 && PlayerInfo[playerid][member]<= 22) return 1;
	return 0;
}

stock mafia_player(playerid)
{
	if(PlayerInfo[playerid][member] >= 23 && PlayerInfo[playerid][member]<= 25) return 1;
	return 0;
}

stock radio_player(playerid)
{
	if(PlayerInfo[playerid][member] >= 26 && PlayerInfo[playerid][member]<= 28) return 1;
	return 0;
}
stock SendGangMessage(text_color, text[])
{
	foreach(new i: logged_players)
	{
		if(PlayerInfo[i][member] < 18 || PlayerInfo[i][member] > 22) continue;
		SendClientMessage(i, text_color, text);
	}
	return 1;
}
stock SendMafiaMessage(text_color, text[])
{
	foreach(new i: logged_players)
	{
		if(!mafia_player(i)) continue;
		SendClientMessage(i, text_color, text);
	}
	return 1;
}
stock SetPlayerFaceToPoint(playerid, Float:X, Float:Y)
{
    new Float:angle;
	new Float:misc = 5.0;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	angle = 180.0-atan2(x-X,y-Y);
	angle += misc;
	misc *= -1;
	SetPlayerFacingAngle(playerid, angle+misc);
    return 1;
}

stock ShiftCords(&Float:x, &Float:y,Float:a, Float:distance)
{
    x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	return 1;
}
stock move_animation(playerid, Float:X, Float:Y, Float:Z)
{
	if(IsPlayerInAnyVehicle(playerid)) return 0;
	if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z))
	{
	    ApplyAnimation(playerid, "PED", "IDLE_STANCE", 4.1, 0, 1, 1, 0, 0, 1);
	    return 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z))
	{
	    ApplyAnimation(playerid, "PED", "WALK_PLAYER", 4.1, 0, 1, 1, 0, 0, 1);
	    return 2;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 7.0, X, Y, Z))
	{
	    ApplyAnimation(playerid, "PED", "RUN_GANG1", 4.1, 0, 1, 1, 0, 0, 1);
	    return 3;
	}
	ApplyAnimation(playerid, "PED", "SPRINT_PANIC", 4.1, 0, 1, 1, 0, 0, 1);
	return 4;
}


stock GetPlayerNearestVehicle(playerid)
{
    if(IsPlayerInAnyVehicle(playerid)) return GetPlayerVehicleID(playerid);
	new closest_vehicle = INVALID_VEHICLE_ID;
	foreach(new i:streamed_vehicles[playerid])
	{
		if(!IsValidVehicle(i)) continue;
		if(GetVehicleDistanceFromPoint(i, p_t_info[playerid][p_pos][0], p_t_info[playerid][p_pos][1], p_t_info[playerid][p_pos][2]) > 4) continue;
		if(closest_vehicle == INVALID_VEHICLE_ID)
		{
			closest_vehicle = i;
			continue;
		}
		if(GetVehicleDistanceFromPoint(i, p_t_info[playerid][p_pos][0], p_t_info[playerid][p_pos][1], p_t_info[playerid][p_pos][2]) < GetVehicleDistanceFromPoint(closest_vehicle, p_t_info[playerid][p_pos][0], p_t_info[playerid][p_pos][1], p_t_info[playerid][p_pos][2]))
        {
            closest_vehicle = i;
        }
    }
    return closest_vehicle;
}

stock GetVehicleFreeSeat(vehicleid)
{
	if(!vehicleid) return -1;
	new model = GetVehicleModel(vehicleid);
	new maxs = GetMaxSeat(model) -1;
	new bool:seat[3], cnt;
	foreach(new i : logged_players)
	{
		if(player_vehicle[i] != vehicleid) continue;
		new pseat = GetPlayerVehicleSeat(i);
		if(pseat < 1 || pseat > 3) continue;
		seat[pseat-1] = true;
		cnt++;
		if(cnt >= maxs) return -1;
	}
	for(new i; i < 3; i++) if(!seat[i]) return i+1;
	return -1;
}

stock GetMaxSeat(modelid)
{
	switch(modelid)
	{
		case 596..598, 427, 490: return 4;
		case 599, 497, 528: return 2;
	}
	return -1;
}


stock ShowWantedList(playerid)
{
	new line_string[50 + MAX_PLAYER_NAME],
		wanted_count;

	global_string[0] = EOS;
	strcat(global_string, "{FFE8AD}Внимание, розыск:\n\n");

	foreach(new i: logged_players)
	{
		if(PlayerInfo[i][wanted] > 0)
		{
			format(line_string, sizeof(line_string), ""c_white"%d. %s[%d] -{FFE8AD}%d уровень розыска\n", wanted_count + 1, PlayerInfo[i][name], i, PlayerInfo[i][wanted]);
			strcat(global_string, line_string);

			wanted_count ++;
			if(wanted_count == 30) break;
		}
	}

	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Список разыскиваемых", global_string, "Закрыть", "");
	return 1;
}


stock add_cheater(playerid, _line)
{
    new line_string[6];
    if(_line == 1)
    {
        format(line_string, sizeof(line_string), "%d", playerid);
        TextDrawSetString(ch_td[_line][ch_line_count], line_string);
        ch_line_count++;
        if(ch_line_count > 9) ch_line_count = 0;
    }
    else
    {
        format(line_string, sizeof(line_string), "%d", playerid);
        TextDrawSetString(ch_td[_line][second_ch_line_count], line_string);
        second_ch_line_count++;
        if(second_ch_line_count > 9) second_ch_line_count = 0;
    }
    return 1;
}

stock get_speed(playerid)
{
	new Float:x, Float:y, Float:z;
	if(IsPlayerInAnyVehicle(playerid))GetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z);
	else GetPlayerVelocity(playerid, x, y, z);
	return floatround(floatsqroot(x * x + y * y + z * z)* 195);
}

stock get_speed_float(playerid, &Float:speed_)
{
	new Float:x, Float:y, Float:z;
	if(IsPlayerInAnyVehicle(playerid))GetVehicleVelocity(GetPlayerVehicleID(playerid), x, y, z);
	else GetPlayerVelocity(playerid, x, y, z);
	speed_ = floatsqroot(x * x + y * y + z * z)* 195;
	return 1;
}

stock not_flying(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 20.0, 1968.3948,-1198.0753,17.4500)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 2310.9861,-1412.8881,21.6151)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 1241.1094,-2379.7263,8.3145)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 225.6394,-1187.0551,73.4500)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 193.2040,-1224.7693,76.5034)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 196.0067,-1232.3684,76.5034)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 512.7349,-1104.1942,78.8238)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 1283.7939,-806.5845,86.1230)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 20.0, 2531.6001,1568.4032,8.4171)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 60.0, 2105.2651,1916.6781,9.5989)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 150.0, -792.4582,2173.0356,40.0821)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 150.0, 1993.5868,1601.2623,9.2979)) return 1;
	return 0;
}


stock is_on_ground(playerid)
{
    new Float:x, Float:y, Float:z;
    GetPlayerVelocity(playerid, x, y, z);
    return floatabs(z)> 0.0 ?(false):(true);
}

stock GetPlayerSpeed(playerid)
{
	new Float:x, Float:y, Float:z;
	GetVehicleVelocity(player_vehicle[playerid], x, y, z);
	return floatround(floatsqroot(x * x + y * y + z * z)* 295);
}

stock GetGangZoneColor(fractionid)
{
	if(fractionid == 0) return 0xFFFFFF55;
	else return f_info[fractionid -1][f_radar_color];
}

stock IsPlayerInGangZone(playerid, gangzoneid)
{
	new Float:pos_x,
		Float:pos_y,
		Float:pos_z;

	GetPlayerPos(playerid, pos_x, pos_y, pos_z);
	if(pos_x >= gz_info[gangzoneid][gz_pos][0]&& pos_x <= gz_info[gangzoneid][gz_pos][2]&& pos_y >= gz_info[gangzoneid][gz_pos][1]&& pos_y <= gz_info[gangzoneid][gz_pos][3]) return 1;
	else return 0;
}



stock IsPlayerInRangeOfQuad(playerid, Float: quad_x, Float: quad_y)
{
	new Float:pos_x,
		Float:pos_y,
		Float:pos_z;

	GetPlayerPos(playerid, pos_x, pos_y, pos_z);

	new Float:_distance;

	if(quad_x > pos_x)_distance = quad_x -pos_x;
	else _distance = pos_x -quad_x ;

	if(quad_y > pos_y)_distance += quad_y -pos_y;
	else _distance += pos_y -quad_y ;

	return floatround(_distance);
}



stock IsPlayerInQuad(playerid, Float:q_minx, Float:q_miny, Float:q_maxx, Float:q_maxy)
{
	new Float:pos_x,
		Float:pos_y,
		Float:pos_z;

	GetPlayerPos(playerid, pos_x, pos_y, pos_z);
	if(pos_x >= q_minx && pos_x <= q_maxx && pos_y >= q_miny && pos_y <= q_maxy) return 1;
	else return 0;
}

stock IsVehicleInQuad(Float:veh_x, Float:veh_y, Float:q_minx, Float:q_miny, Float:q_maxx, Float:q_maxy)
{
	if(veh_x >= q_minx && veh_x <= q_maxx && veh_y >= q_miny && veh_y <= q_maxy) return 1;
	else return 0;
}


stock SaveGangZone(gangzoneid)
{
	new query_string[76];
    format(query_string, 76, "UPDATE `gangzones` SET `gz_owner`= '%d' WHERE `gz_id` = '%d' LIMIT 1", gz_info[gangzoneid][gz_owner], gz_info[gangzoneid][gz_id]);
	mysql_tquery(sql_connection, query_string, "", "");
	return 1;
}

stock set_health(playerid, Float:health)
{
	p_t_info[playerid][p_health] = health;
	return SetPlayerHealth(playerid, p_t_info[playerid][p_health]);
}

stock set_armour(playerid, Float:armour)
{
	p_t_info[playerid][p_armour] = armour;
	return SetPlayerArmour(playerid, armour);
}


stock GetModelPrice(model)
{
 	new model_price;
 	switch(model)
 	{
		case 466:model_price=25500;
		case 542:model_price=17000;
		case 492:model_price=34000;
		case 517:model_price=24500;
		case 516:model_price=43000;
		case 467:model_price=33000;
		case 600:model_price=18500;
		case 549:model_price=22100;
		case 529:model_price=39400;
		case 404:model_price=19500;
		case 474:model_price=18450;
		case 410:model_price=13500;
		case 422:model_price=24500;
		case 439:model_price=27400;
		case 479:model_price=49600;
		case 535:model_price=25200;
		case 543:model_price=17000;
		case 575:model_price=42400;

		case 400:model_price=169000;
		case 401:model_price=64500;
		case 405:model_price=105000;
		case 421:model_price=126200;
		case 426:model_price=130000;
		case 436:model_price=82600;
		case 445:model_price=142000;
		case 458:model_price=159000;
		case 505:model_price=175000;
		case 500:model_price=116500;
		case 526:model_price=84000;
		case 527:model_price=87500;
		case 546:model_price=122500;
		case 540:model_price=133600;
		case 550:model_price=126000;
		case 547:model_price=125000;
		case 585:model_price=117500;
		case 579:model_price=215000;
		case 562:model_price=310000;

		case 418:model_price=146200;
		case 475:model_price=83000;
		case 496:model_price=225000;
		case 533:model_price=243000;
		case 536:model_price=154000;
		case 567:model_price=195000;
		case 566:model_price=168900;
		case 580:model_price=260000;
		case 589:model_price=355700;
		case 555:model_price=133000;
		case 534:model_price=285600;
		case 576:model_price=235000;
		case 412:model_price=235000;

		case 415:model_price=1850000;
		case 451:model_price=2100000;
		case 402:model_price=860000;
		case 477:model_price=820000;
		case 480:model_price=810000;
		case 429:model_price=730000;
		case 560:model_price=610000;
		case 541:model_price=1290000;
		case 559:model_price=680000;
		case 506:model_price=760000;
		case 565:model_price=654000;
		case 587:model_price=540000;
		case 602:model_price=290000;
		case 603:model_price=400000;
		case 411:model_price=2850000;

		case 462:model_price=23500;
		case 468:model_price=58000;
		case 586:model_price=85000;
		case 521:model_price=165000;
		case 463:model_price=99999;
		case 581:model_price=126000;
		case 461:model_price=145000;
		case 471:model_price=195500;

		case 413: model_price = floatround(1.5 * 225000);
		case 419: model_price = floatround(1.5 * 225000);
		case 424: model_price = floatround(1.5 * 450000);
		case 434: model_price = floatround(1.5 * 625000);
		case 440: model_price = floatround(1.5 * 300000);
		case 446: model_price = floatround(1.5 * 1000000);
		case 452: model_price = floatround(1.5 * 850000);
		case 453: model_price = floatround(1.5 * 1200000);
		case 454: model_price = floatround(1.5 * 1400000);
		case 459: model_price = floatround(1.5 * 300000);
		case 473: model_price = floatround(1.5 * 130000);
		case 472: model_price = floatround(1.5 * 350000);
		case 478: model_price = floatround(1.5 * 60000);
		case 481: model_price = floatround(1.5 * 5000);
		case 482: model_price = floatround(1.5 * 290000);
		case 483: model_price = floatround(1.5 * 250000);
		case 484: model_price = floatround(1.5 * 1800000);
		case 489: model_price = floatround(1.5 * 225000);
		case 491: model_price = floatround(1.5 * 225000);
		case 493: model_price = floatround(1.5 * 900000);
		case 507: model_price = floatround(1.5 * 150000);
		case 509: model_price = floatround(1.5 * 4000);
		case 510: model_price = floatround(1.5 * 10000);
		case 518: model_price = floatround(1.5 * 275000);
		case 522: model_price = floatround(1.5 * 650000);
		case 545: model_price = floatround(1.5 * 375000);
		case 551: model_price = floatround(1.5 * 200000);
		case 554: model_price = floatround(1.5 * 95000);
		case 558: model_price = floatround(1.5 * 200000);
		case 561: model_price = floatround(1.5 * 175000);
		case 595: model_price = floatround(1.5 * 800000);
		case 469:model_price = floatround(1.5 * 900000);
		case 447:model_price = floatround(1.5 * 750000);
		case 487:model_price = floatround(1.5 * 1200000);
		case 513:model_price = floatround(1.5 * 1000000);
		case 519:model_price = floatround(1.5 * 2100000);
		case 593:model_price = floatround(1.5 * 900000);
		default: model_price = floatround(1.5 * 150000);
 	}
 	return model_price;
}


stock GetVehicleID()
{
	new veh_id = AddStaticVehicleEx(400, -100, -100, -100, 0, 0, 0, 0);
	DestroyVehicle(veh_id);
	return veh_id;
}

stock isNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
 	{
  		if(string[i] > '9' || string[i] < '0') return 1;
    }
    return 0;
}

stock FixHour(hour)
{
	hour = 0 + hour;
	if(hour < 0)hour = hour + 24;
	else if(hour > 23)hour = hour -24;
	global_hour = hour;
	return 1;
}

stock ShowElectronicDialog(playerid)
{
	new b = GetPVarInt(playerid, "p_biz_id")-1;
	format(global_string, 256,
	""c_white"Товар:\t"c_white"Цена:\n\
	"c_server"1 | "c_white"Мобильные телефоны\t"c_green"->\n\
	"c_server"2 | "c_white"Покупка SIM-карты\t"c_green"%d$",
	b_electro_price[0] + floatround(b_electro_price[0]*(float(b_info[b][b_cost]) / 100)));

	return show_dialog(playerid, d_electroshop, DIALOG_STYLE_TABLIST_HEADERS, !""scm_dialog"Магазин электроники", global_string, !"Купить", !"Закрыть");
}

stock ShowPharmDialog(playerid)
{
	new b = GetPVarInt(playerid, "p_biz_id")-1;
	format(global_string, 428,
	""c_white"Товар:\t"c_white"Цена:\n\
	"c_server"1 | "c_white"Аптечка\t"c_green"%d$\n\
	"c_server"2 | "c_white"Бинты\t"c_green"%d$\n\
	"c_server"3 | "c_white"Шина\t"c_green"%d$\n\
	"c_server"4 | "c_white"Аспирин\t"c_green"%d$\n\
	"c_server"5 | "c_white"Морфий\t"c_green"%d$\n\
	"c_server"6 | "c_white"Адреналин\t"c_green"%d$",
	b_pharm_price[0] + floatround(b_pharm_price[0]*(float(b_info[b][b_cost]) / 100)),
	b_pharm_price[1] + floatround(b_pharm_price[1]*(float(b_info[b][b_cost]) / 100)),
	b_pharm_price[2] + floatround(b_pharm_price[2]*(float(b_info[b][b_cost]) / 100)),
	b_pharm_price[3] + floatround(b_pharm_price[3]*(float(b_info[b][b_cost]) / 100)),
	b_pharm_price[4] + floatround(b_pharm_price[4]*(float(b_info[b][b_cost]) / 100)),
	b_pharm_price[5] + floatround(b_pharm_price[5]*(float(b_info[b][b_cost]) / 100)));

	return show_dialog(playerid, d_pharmshop, DIALOG_STYLE_TABLIST_HEADERS, !""scm_dialog"Аптека", global_string, !"Купить", !"Закрыть");
}


stock ShowShopDialog(playerid)
{
	new b = GetPVarInt(playerid, "p_biz_id")-1;
	format(global_string, 628,
	""c_white"Товар:\t"c_white"Цена:\n\
	"c_server"1 | "c_white"Справочник\t"c_green"%d$\n\
	"c_server"2 | "c_white"Универсальная аптечка\t"c_green"%d$\n\
	"c_server"3 | "c_white"Набор инструментов\t"c_green"%d$\n\
	"c_server"4 | "c_white"GPS-трекер для авто\t"c_green"%d$\n\
	"c_server"5 | "c_white"Маска\t"c_green"%d$\n\
	"c_server"6 | "c_white"Верёвка\t"c_green"%d$\n\
	"c_server"7 | "c_white"Цветы\t"c_green"%d$\n\
	"c_server"8 | "c_white"Фотоаппарат\t"c_green"%d$",
	b_shop_price[0] + floatround(b_shop_price[0]*(float(b_info[b][b_cost]) / 100)),
	b_shop_price[1] + floatround(b_shop_price[1]*(float(b_info[b][b_cost]) / 100)),
	b_shop_price[2] + floatround(b_shop_price[2]*(float(b_info[b][b_cost]) / 100)),
	b_shop_price[3] + floatround(b_shop_price[3]*(float(b_info[b][b_cost]) / 100)),
	b_shop_price[4] + floatround(b_shop_price[4]*(float(b_info[b][b_cost]) / 100)),
	b_shop_price[5] + floatround(b_shop_price[5]*(float(b_info[b][b_cost]) / 100)),
	b_shop_price[6] + floatround(b_shop_price[6]*(float(b_info[b][b_cost]) / 100)),
	b_shop_price[7] + floatround(b_shop_price[7]*(float(b_info[b][b_cost]) / 100)));

	return show_dialog(playerid, d_shop, DIALOG_STYLE_TABLIST_HEADERS, !""scm_dialog"Магазин 24/7", global_string, !"Купить", !"Закрыть");
}

stock ShowBarDialog(playerid)
{
	new b = GetPVarInt(playerid, "p_biz_id")-1;
	format(global_string, 298,
	""c_white"Товар:\t"c_white"Цена:\n\
	"c_server"1 | "c_white"Сода\t"c_green"%d$\n\
	"c_server"2 | "c_white"Кока-кола\t"c_green"%d$\n\
	"c_server"3 | "c_white"Пиво\t"c_green"%d$\n\
	"c_server"4 | "c_white"Водка\t"c_green"%d$\n\
	"c_server"5 | "c_white"Коньяк\t"c_green"%d$\n\
	"c_server"6 | "c_white"Абсент\t"c_green"%d$",
	b_bar_price[0] + floatround(b_bar_price[0]*(float(b_info[b][b_cost]) / 100)),
	b_bar_price[1] + floatround(b_bar_price[1]*(float(b_info[b][b_cost]) / 100)),
	b_bar_price[2] + floatround(b_bar_price[2]*(float(b_info[b][b_cost]) / 100)),
	b_bar_price[3] + floatround(b_bar_price[3]*(float(b_info[b][b_cost]) / 100)),
	b_bar_price[4] + floatround(b_bar_price[4]*(float(b_info[b][b_cost]) / 100)),
	b_bar_price[5] + floatround(b_bar_price[5]*(float(b_info[b][b_cost]) / 100)),
	b_bar_price[6] + floatround(b_bar_price[6]*(float(b_info[b][b_cost]) / 100)));
	return show_dialog(playerid, d_bar, DIALOG_STYLE_TABLIST_HEADERS, !""scm_dialog"Бар", global_string, !"Купить", !"Закрыть");
}

stock ShowCafeDialog(playerid)
{
	new b = GetPVarInt(playerid, "p_biz_id")-1;
	format(global_string, 298,
	""c_white"Товар:\t"c_white"Цена:\n\
	"c_server"1 | "c_white"Мороженое\t"c_green"%d$\n\
	"c_server"2 | "c_white"Бургер\t"c_green"%d$\n\
	"c_server"3 | "c_white"Хот Дог\t"c_green"%d$\n\
	"c_server"4 | "c_white"Салат\t"c_green"%d$\n\
	"c_server"5 | "c_white"Пицца\t"c_green"%d$\n\
	"c_server"6 | "c_white"Курица с картошкой\t"c_green"%d$",
	b_bar_price[0] + floatround(b_bar_price[0]*(float(b_info[b][b_cost]) / 100)),
	b_bar_price[1] + floatround(b_bar_price[1]*(float(b_info[b][b_cost]) / 100)),
	b_bar_price[2] + floatround(b_bar_price[2]*(float(b_info[b][b_cost]) / 100)),
	b_bar_price[3] + floatround(b_bar_price[3]*(float(b_info[b][b_cost]) / 100)),
	b_bar_price[4] + floatround(b_bar_price[4]*(float(b_info[b][b_cost]) / 100)),
	b_bar_price[5] + floatround(b_bar_price[5]*(float(b_info[b][b_cost]) / 100)));
	return show_dialog(playerid, d_cafe, DIALOG_STYLE_TABLIST_HEADERS, !""scm_dialog"Закусочная", global_string, !"Купить", !"Закрыть");
}

stock show_gps(playerid)
{
	show_dialog(playerid, d_gps, DIALOG_STYLE_LIST, ""scm_dialog"GPS - Навигатор", "\
	"c_server"1 | "c_white"Важные места\n\
	"c_server"2 | "c_white"По работе\n\
	"c_server"3 | "c_white"Официальные организации\n\
	"c_server"4 | "c_white"Нелегальные организации\n\
	"c_server"5 | "c_white"Автосалоны и автосервисы\n\
	"c_server"6 | "c_white"Прочее\n\
	"c_server"7 | "c_white"Пирсы "c_silver"(Семейные острова)\n\
	"c_server"8 | "c_white"Аукцион битых авто\n\
	"c_server"9 | "c_white"Аптеки\n\
	"c_server"10 | {cccc99}Найти ближайший банкомат\n\
	"c_server"11 | {cccc99}Найти ближайший 24/7\n\
	"c_server"12 | {cccc99}Найти ближайшую заправку\n\
	"c_server"13 | {cccc99}Найти транспорт", "Выбрать", "Закрыть");
	return 1;
}

stock show_nmenu(playerid)
{
	new str[328];
	format(str, sizeof(str), "\
	"c_server"1 | %s "c_white"эфир\n\
	"c_server"2 | "c_white"Добавить человека в эфир\n\
	"c_server"3 | "c_white"Удалить человека из эфира\n\
	"c_server"4 | %s "c_white"телефон грячей линии\n\
	"c_server"5 | "c_white"Установить номер прямого эфира\n\
	"c_server"6 | "c_white"Редакция объявлений\n\
	"c_server"7 | "c_white"Статистика слушателей",
	(is_ether {playerid})?(""c_red"Остановить"):(""c_green"Начать"),
	(cas_price[PlayerInfo[playerid][member] -26] == 0)?(""c_green"Включить"):(""c_red"Выключить"));
	show_dialog(playerid, d_news_menu, DIALOG_STYLE_LIST, ""scm_dialog"Новостная панель", str, "Выбрать", "Закрыть");
	return 1;
}

PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid, animlib, "null", 0.0, 0, 0, 0, 0, 0);
}


callback: main_jobs_timer(playerid)
{
	if(PlayerInfo[playerid][timejob] == job_miner)
	{
		DeletePVar(playerid, "mining_ex");
		ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0,0,0,1,5150);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		SetPlayerAttachedObject(playerid, 2, 905, 5, 0.020944, 0.039285, -0.035010, 0.000000, 0.000000, 0.000000, 0.301603, 0.125763, 0.233199);
		SetPlayerAttachedObject(playerid,3, 906, 6, -0.032336, 0.111448, 0.001745, 0.000000, 0.000000, 0.000000, 0.026124, 0.048238, 0.048593);
		job_timer[playerid] = SetTimerEx("_miner_timer", 5700, false, "i", playerid);
	}
	else if(PlayerInfo[playerid][timejob] == job_factory)
	{
		RemovePlayerAttachedObject(playerid, 0);
		RemovePlayerAttachedObject(playerid, 1);

		ClearAnimations(playerid);
		table_area_toggled[GetPVarInt(playerid, "factory_table_id")] = INVALID_PLAYER_ID;
		DestroyDynamicObject(GetPVarInt(playerid, "factory_object"));
		DeletePVar(playerid, "factory_object");
		if(!IsPlayerInDynamicArea(playerid, table_area[GetPVarInt(playerid, "factory_table_id")]))
		{
			DeletePVar(playerid, "factory_table_id");
			return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Запчасть оказалась бракованной. Пожалуйста, повторите попытку."), action_td_status(playerid, false);
		}
		DeletePVar(playerid, "factory_table_id");
		if(random(100)> 5)
		{
			SetPlayerAttachedObject(playerid, 0, 2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
			SendClientMessage (playerid, col_white , ""c_green"* "c_white"Вы собрали запчасти. Отнесите их на склад.");

			p_t_info[playerid][p_animation] = true;
			SetPlayerCheckpoint(playerid, -31.4789, -261.0728, 1528.6615, 4.0);
			ApplyAnimation(playerid,"CARRY","crry_prtial", 4.1, 0, 1, 1, 1, 1);
			SetTimerEx("carry_timer", 500, false, "d", playerid);
		}
		else SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Запчасть оказалась бракованной. Пожалуйста, повторите попытку сбора.");
	}
	return 1;
}
callback: _miner_timer(playerid)// выдача телеги
{
	new cp_id = GetPVarInt(playerid, "miner_cp");
	DeletePVar(playerid, "miner_cp");
	if(!IsPlayerInRangeOfPoint(playerid, 5.5, miner_cp[cp_id][0], miner_cp[cp_id][1], miner_cp[cp_id][2]))
	{
		SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы разроняли всё добытое железо.");

		RemovePlayerAttachedObject(playerid,2);
		RemovePlayerAttachedObject(playerid,3);
		DisablePlayerCheckpoint(playerid);

		if(job_timer[playerid] != -1)KillTimer(job_timer[playerid]);

		new _random = random(6);
		SetPlayerCheckpoint(playerid, miner_cp[_random][0], miner_cp[_random][1], miner_cp[_random][2], 2.5);
		SetPVarInt(playerid, "miner_cp", _random);
		SetPlayerAttachedObject(playerid, 1, 18634, 14, 0.333391, 0.000000, 0.042249, 358.219909, 268.014739, 170.032974, 2.003867, 1.764811, 1.579773);

		ClearAnimations(playerid);
		return 1;
	}


	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
	SetPlayerAttachedObject(playerid, 2, 1458, 1, -1.034844, 1.116571, -0.065124, 76.480148, 75.781570, 280.952545, 0.575599, 0.604554, 0.624122);
	SetPlayerAttachedObject(playerid, 3, 905, 1, -0.275758, 1.305280, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
	SetPlayerCheckpoint(playerid, 2468.5256, -699.7646, 955.1261, 2.0);
	new _mine_count_ = RandomEx(30, 60);
	SetPVarInt(playerid, "_mine_count", _mine_count_);
	new _t_string[32];
	format(_t_string, sizeof(_t_string), "Вы добыли %d кг руды.", _mine_count_);
	SendClientMessage(playerid, -1, _t_string);



	return 1;
}


stock show_ad_list(playerid)
{
	if(ad_info[0][ad_busy] == false) return SendClientMessage(playerid, col_gray, "Нет объявлений, нуждающихся в обработке.");
	global_string[0] = EOS;
	strcat(global_string, ""c_white"");
	for(new i; i < MAX_ADVERTS; i ++)
	{
		new line_string[68];

		if(ad_info[i][ad_busy])
		{
			if(ad_info[i][ad_checking]) format(line_string, sizeof(line_string),"%i. %s [{FFFF00}Проверяется (ID: %d)"c_white"]\n", i + 1, ad_info[i][ad_sender], ad_info[i][ad_checker_id]);
			if(ad_info[i][ad_checked]) format(line_string, sizeof(line_string),"%i. %s [{33AA33}Проверено"c_white"]\n", i + 1, ad_info[i][ad_sender]);
			if(!ad_info[i][ad_checked]&& ! ad_info[i][ad_checking])format(line_string, sizeof(line_string),"%i. %s\n", i + 1, ad_info[i][ad_sender]);

			strcat(global_string, line_string);
		}
		else continue;
	}
	show_dialog(playerid, d_ad_list, DIALOG_STYLE_LIST, ""c_server"Объявления", global_string[0], "Принять", "Отмена");
	return 1;
}


stock SetPlayerSkills(playerid)
{
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, PlayerInfo[playerid][gun_skills][0]* 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[playerid][gun_skills][1]* 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PlayerInfo[playerid][gun_skills][2]* 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PlayerInfo[playerid][gun_skills][3]* 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PlayerInfo[playerid][gun_skills][4]* 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PlayerInfo[playerid][gun_skills][5]* 10);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, PlayerInfo[playerid][gun_skills][6]* 10);
	return 1;
}

stock ToDevelopSkills(slashes, points)
{
	new _str[149], Slash[2] = "|", Point[2] = ".";
	for(new i = 0; i < slashes; i++) strcat(_str, Slash);
	for(new i = 0; i < points; i++) strcat(_str, Point);
	return _str;
}






stock RemoveWeaponFromSlot(playerid, weapon_slot)
{
	new weapons[13][2];
	for(new i = 0; i < 13; i++)
	    GetPlayerWeaponData(playerid, i, weapons[i][0], weapons[i][1]);

	weapons[weapon_slot][0] = 0;

	ResetPlayerWeapons(playerid);

	for(new i = 0; i < 13; i++)
	    GivePlayerWeapon(playerid, weapons[i][0], weapons[i][1]);

	return 1;
}


stock driving_license(carid)
{
	switch(GetVehicleModel(carid))
	{
		case 400..416,418..424,426..429,431..445,449,451,455,456,458,459,461: return 1;
		case 463,466..468,470,471,474,475,477..480,482,483,485,486,489..492,494..496,498..508: return 1;
		case 514..518,521..531,533..537,539..547,549..551,554..562,564..568,572..576,578..583,585..589,596..605,609: return 1;
	}
	return 0;
}



ShowTestQuestion(playerid,begin,end,dialogid,q=-1)
{
	if(q == -1) q = RandomEx(begin,end);
	SetPVarInt(playerid,"pTestQNumber", q+1);
	global_string[0] = EOS;
	format(global_string, 300,""c_server"%s\n"c_white"* %s\n* %s\n* %s\n* %s",gExamQuestions[q],gExamAnswers[q][0],gExamAnswers[q][1],gExamAnswers[q][2],gExamAnswers[q][3]);
	show_dialog(playerid, dialogid, 2,""c_server"Школа вождения", global_string, "Далее", "Отмена");
	return 1;
}











callback: BusStop(playerid)
{
	new pos = p_t_info [playerid][pBusPos];
	new route = p_t_info [playerid][pBusRoute];
	if(pos == 161 || gBusCPs[route][pos+1][0] == 0.0)
	{
		p_t_info [playerid][pBusPos] = 10;
		PlayerInfo[playerid][salary] += gBusSalary[route];

		new __t_string[47];
		format(__t_string, sizeof(__t_string), ""c_green"* "c_white"Заработано: "c_green"%d$.", PlayerInfo[playerid][salary]);
		SendClientMessage(playerid, col_white, __t_string);
	}
	else p_t_info [playerid][pBusPos] ++;
	SetNextBusCP(playerid,p_t_info [playerid][pBusPos]);
	return 1;
}

callback: BusSpawn(playerid)
{
	DisablePlayerRaceCheckpoint(playerid);
	player_rentcar[playerid] = INVALID_VEHICLE_ID;
	p_t_info [playerid][pBusRoute] = 0;
	p_t_info [playerid][pBusPos] = 0;
	p_t_info [playerid][pBusPrice] = 0;
	if(IsValid3DTextLabel(p_t_info [playerid][pBusText])) DestroyDynamic3DTextLabel (p_t_info [playerid][pBusText]);
	p_t_info [playerid][pBusText] = Text3D:INVALID_3DTEXT_ID;

	new __t_string[42];
	format(__t_string, sizeof(__t_string), ""c_green"* "c_white"Заработано: "c_green"%d$", PlayerInfo[playerid][salary]);
	SendClientMessage(playerid, col_white, __t_string);

	return 1;
}


stock IsValid3DTextLabel(Text3D:textid)
{
	if(textid != Text3D:INVALID_3DTEXT_ID) return 1;
	else return 0;
}



find_available_spoiler_slot(modelid, stage, bool:type)
{
	if(type)
	{
		new point = 0;
		for(new i = 0; i <= 91; i ++)
		{
			if(modelid == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		if(point == 0) return 0;
		for(new i = 0; i <= 19; i ++)
		{
			for(new j = 0; j <= 44; j ++)
			{
				if(i <= stage) continue;
		        if(legal_tuns[point][j] == spoiler_models[i]) return i + 1;
			}
		}
		for(new i = 0; i <= 19; i ++)
		{
	 		for(new j = 0; j <= 44; j ++)
			{
	       		if(legal_tuns[point][j] == spoiler_models[i]) return i + 1;
	       	}
		}
	}
	else
	{
		new point = 0;
		for(new i = 0; i <= 91; i ++)
		{
			if(modelid == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		if(point == 0) return 0;
		for(new i = 19; i != 0; i --)
		{
			for(new j = 0; j <= 44; j ++)
			{
				if(i >= stage) continue;
		        if(legal_tuns[point][j] == spoiler_models[i]) return i + 1;
			}
		}
		for(new i = 19; i != 0; i --)
		{
	 		for(new j = 0; j <= 44; j ++)
			{
	       		if(legal_tuns[point][j] == spoiler_models[i]) return i + 1;
	       	}
		}
	}
	return 0;
}



find_available_exhaust_slot(modelid, stage, bool:type)
{
	if(type)
	{
		new point = 0;
		for(new i = 0; i <= 91; i ++)
		{
			if(modelid == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		if(point == 0) return 0;
		for(new i = 0; i <= 28; i ++)
		{
			for(new j = 0; j <= 44; j ++)
			{
				if(i <= stage) continue;
		        if(legal_tuns[point][j] == exhaust_models[i]) return i + 1;
			}
		}
		for(new i = 0; i <= 28; i ++)
		{
	 		for(new j = 0; j <= 44; j ++)
			{
	       		if(legal_tuns[point][j] == exhaust_models[i]) return i + 1;
	       	}
		}
	}
	else
	{
		new point = 0;
		for(new i = 0; i <= 91; i ++)
		{
			if(modelid == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		if(point == 0) return 0;
		for(new i = 28; i != 0; i --)
		{
			for(new j = 0; j <= 44; j ++)
			{
				if(i >= stage) continue;
		        if(legal_tuns[point][j] == exhaust_models[i]) return i + 1;
			}
		}
		for(new i = 28; i != 0; i --)
		{
	 		for(new j = 0; j <= 44; j ++)
			{
	       		if(legal_tuns[point][j] == exhaust_models[i]) return i + 1;
	       	}
		}
	}
	return 0;
}



find_available_bullbar_slot(modelid, stage, bool:type)
{
	if(type)
	{
		new point = 0;
		for(new i = 0; i <= 91; i ++)
		{
			if(modelid == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		if(point == 0) return 0;
		for(new i = 0; i <= 3; i ++)
		{
			for(new j = 0; j <= 44; j ++)
			{
				if(i <= stage) continue;
		        if(legal_tuns[point][j] == bullbar_models[i]) return i + 1;
			}
		}
		for(new i = 0; i <= 3; i ++)
		{
	 		for(new j = 0; j <= 44; j ++)
			{
	       		if(legal_tuns[point][j] == bullbar_models[i]) return i + 1;
	       	}
		}
	}
	else
	{
		new point = 0;
		for(new i = 0; i <= 91; i ++)
		{
			if(modelid == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		if(point == 0) return 0;
		for(new i = 3; i != 0; i --)
		{
			for(new j = 0; j <= 44; j ++)
			{
				if(i >= stage) continue;
		        if(legal_tuns[point][j] == bullbar_models[i]) return i + 1;
			}
		}
		for(new i = 3; i != 0; i --)
		{
	 		for(new j = 0; j <= 44; j ++)
			{
	       		if(legal_tuns[point][j] == bullbar_models[i]) return i + 1;
	       	}
		}
	}
	return 0;
}


find_available_roof_slot(modelid, stage, bool:type)
{
	if(type)
	{
		new point = 0;
		for(new i = 0; i <= 91; i ++)
		{
			if(modelid == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		if(point == 0) return 0;
		for(new i = 0; i <= 15; i ++)
		{
			for(new j = 0; j <= 44; j ++)
			{
				if(i <= stage) continue;
		        if(legal_tuns[point][j] == roof_models[i]) return i + 1;
			}
		}
		for(new i = 0; i <= 15; i ++)
		{
	 		for(new j = 0; j <= 44; j ++)
			{
	       		if(legal_tuns[point][j] == roof_models[i]) return i + 1;
	       	}
		}
	}
	else
	{
		new point = 0;
		for(new i = 0; i <= 91; i ++)
		{
			if(modelid == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		if(point == 0) return 0;
		for(new i = 15; i != 0; i --)
		{
			for(new j = 0; j <= 44; j ++)
			{
				if(i >= stage) continue;
		        if(legal_tuns[point][j] == roof_models[i]) return i + 1;
			}
		}
		for(new i = 15; i != 0; i --)
		{
	 		for(new j = 0; j <= 44; j ++)
			{
	       		if(legal_tuns[point][j] == roof_models[i]) return i + 1;
	       	}
		}
	}
	return 0;
}

find_available_fb_slot(modelid, stage, bool:type)
{
	if(type)
	{
		new point = 0;
		for(new i = 0; i <= 91; i ++)
		{
			if(modelid == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		if(point == 0) return 0;
		for(new i = 0; i <= 21; i ++)
		{
			for(new j = 0; j <= 44; j ++)
			{
				if(i <= stage) continue;
		        if(legal_tuns[point][j] == front_bumper_models[i]) return i + 1;
			}
		}
		for(new i = 0; i <= 21; i ++)
		{
	 		for(new j = 0; j <= 44; j ++)
			{
	       		if(legal_tuns[point][j] == front_bumper_models[i]) return i + 1;
	       	}
		}
	}
	else
	{
		new point = 0;
		for(new i = 0; i <= 91; i ++)
		{
			if(modelid == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		if(point == 0) return 0;
		for(new i = 21; i != 0; i --)
		{
			for(new j = 0; j <= 44; j ++)
			{
				if(i >= stage) continue;
		        if(legal_tuns[point][j] == front_bumper_models[i]) return i + 1;
			}
		}
		for(new i = 21; i != 0; i --)
		{
	 		for(new j = 0; j <= 44; j ++)
			{
	       		if(legal_tuns[point][j] == front_bumper_models[i]) return i + 1;
	       	}
		}
	}
	return 0;
}

find_available_rear_bumper_slot(modelid, stage, bool:type)
{
	if(type)
	{
		new point = 0;
		for(new i = 0; i <= 91; i ++)
		{
			if(modelid == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		if(point == 0) return 0;
		for(new i = 0; i <= 21; i ++)
		{
			for(new j = 0; j <= 44; j ++)
			{
				if(i <= stage) continue;
		        if(legal_tuns[point][j] == rear_bumper_models[i]) return i + 1;
			}
		}
		for(new i = 0; i <= 21; i ++)
		{
	 		for(new j = 0; j <= 44; j ++)
			{
	       		if(legal_tuns[point][j] == rear_bumper_models[i]) return i + 1;
	       	}
		}
	}
	else
	{
		new point = 0;
		for(new i = 0; i <= 91; i ++)
		{
			if(modelid == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		if(point == 0) return 0;
		for(new i = 21; i != 0; i --)
		{
			for(new j = 0; j <= 44; j ++)
			{
				if(i >= stage) continue;
		        if(legal_tuns[point][j] == rear_bumper_models[i]) return i + 1;
			}
		}
		for(new i = 21; i != 0; i --)
		{
	 		for(new j = 0; j <= 44; j ++)
			{
	       		if(legal_tuns[point][j] == rear_bumper_models[i]) return i + 1;
	       	}
		}
	}
	return 0;
}


find_available_sideskirt_slot(modelid, stage, bool:type)
{
	if(type)
	{
		new point = 0;
		for(new i = 0; i <= 91; i ++)
		{
			if(modelid == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		if(point == 0) return 0;
		for(new i = 0; i <= 41; i ++)
		{
			for(new j = 0; j <= 44; j ++)
			{
				if(i <= stage) continue;
		        if(legal_tuns[point][j] == sideskirt_models[i]) return i + 1;
			}
		}
		for(new i = 0; i <= 41; i ++)
		{
	 		for(new j = 0; j <= 44; j ++)
			{
	       		if(legal_tuns[point][j] == sideskirt_models[i]) return i + 1;
	       	}
		}
	}
	else
	{
		new point = 0;
		for(new i = 0; i <= 91; i ++)
		{
			if(modelid == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		if(point == 0) return 0;
		for(new i = 41; i != 0; i --)
		{
			for(new j = 0; j <= 44; j ++)
			{
				if(i >= stage) continue;
		        if(legal_tuns[point][j] == sideskirt_models[i]) return i + 1;
			}
		}
		for(new i = 41; i != 0; i --)
		{
	 		for(new j = 0; j <= 44; j ++)
			{
	       		if(legal_tuns[point][j] == sideskirt_models[i]) return i + 1;
	       	}
		}
	}
	return 0;
}
find_available_wheels_slot(modelid, stage, bool:type)
{
	if(type)
	{
		new point = 0;
		for(new i = 0; i <= 91; i ++)
		{
			if(modelid == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		if(point == 0) return 0;
		for(new i = 0; i <= 16; i ++)
		{
			for(new j = 0; j <= 44; j ++)
			{
				if(i <= stage) continue;
		        if(legal_tuns[point][j] == tuning_wheels[i]) return i + 1;
			}
		}
		for(new i = 0; i <= 16; i ++)
		{
	 		for(new j = 0; j <= 44; j ++)
			{
	       		if(legal_tuns[point][j] == tuning_wheels[i]) return i + 1;
	       	}
		}
	}
	else
	{
		new point = 0;
		for(new i = 0; i <= 91; i ++)
		{
			if(modelid == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		if(point == 0) return 0;
		for(new i = 16; i != 0; i --)
		{
			for(new j = 0; j <= 44; j ++)
			{
				if(i >= stage) continue;
		        if(legal_tuns[point][j] == tuning_wheels[i]) return i + 1;
			}
		}
		for(new i = 16; i != 0; i --)
		{
	 		for(new j = 0; j <= 44; j ++)
			{
	       		if(legal_tuns[point][j] == tuning_wheels[i]) return i + 1;
	       	}
		}
	}
	return 0;
}


stock paintjob_available(model)
{
	switch(model)
	{
		case 562,565,559,561,560,575,534,567,536,535,576,558: return 1;
		default: return 0;
	}
	return 0;
}


stock GiveItem(playerid,item)
{
	new skinid = GetPlayerSkin(playerid);
	switch(item)
	{
		case 19042..19053: SetAttachToSkin(playerid, 15, skinid, item);
		case 19421..19424://Наушники
		{
			SetAttachToSkin(playerid, 14, skinid, item);
		}
		case 18911..18920: //банданы
		{
			SetAttachToSkin(playerid, 13, skinid, item);
		}
		case 19011..19019,19024,19027,19028,19029,19022,19035,19031,19032,19033://Очки
		{
			SetAttachToSkin(playerid, 12, skinid, item);
		}
		case 19069,19068,19067://Шапки
		{
			SetAttachToSkin(playerid, 1, skinid, item);
		}
		case 19554: //Шапка баллас
		{
			SetAttachToSkin(playerid, 3, skinid, item);
		}
		case 18953,18954: //Тёплые шапки
		{
			SetAttachToSkin(playerid, 2, skinid, item);
		}
		case 18968,18967,18969://Панамки
		{
			SetAttachToSkin(playerid, 4, skinid, item);
		}
		case 18955,18956,18957,18959://Кепки на зад
		{
			SetAttachToSkin(playerid, 5, skinid, item);
		}
		case 18926,18927,18928,18929,18930,18931,18932,18933: //Кепки наперёд
		{
			SetAttachToSkin(playerid, 6, skinid, item);
		}
		case 19104,19105,19106,19107,19108,19109://Каски
		{
			SetAttachToSkin(playerid, 9, skinid, item);
		}
		case 19519://Парики 1
		{
			SetAttachToSkin(playerid, 10, skinid, item);
		}
		case 19274://Парики 2
		{
			SetAttachToSkin(playerid, 11, skinid, item);
		}
		case 18925,18922,18923,18924,18921: //Береты
		{
			SetAttachToSkin(playerid, 8, skinid, item);
		}
		case 18947,18948,18949,18950,18951: //Шляпы
		{
			SetAttachToSkin(playerid, 7, skinid, item);
		}
		//Рюкзаки
		case 3026:
		{
			SetAttachToSkin(playerid, 16, skinid, item);
		}
		case 371:
		{
			SetAttachToSkin(playerid, 17, skinid, item);
		}
		case 19559:
		{
			SetAttachToSkin(playerid, 18, skinid, item);
		}
		//Вип
		//Шляпы 1
		case 18970, 18973, 18972, 18971:
		{
			SetAttachToSkin(playerid, 19, skinid, item);
		}
		//Шляпы 2
		case 19487, 19352:
		{
			SetAttachToSkin(playerid, 20, skinid, item);
		}
		//Банданы на голову
		case 18910, 18909, 18908, 18907, 18906:
		{
			SetAttachToSkin(playerid, 21, skinid, item);
		}
		//Усы
		case 19351:
		{
			SetAttachToSkin(playerid, 22, skinid, item);
		}
		//Усы
		case 19350:
		{
			SetAttachToSkin(playerid, 24, skinid, item);
		}
		//Гитары
		case 19319, 19318, 19317:
		{
			SetAttachToSkin(playerid, 23, skinid, item);
		}
		case 19064..19066://шапки новогоднии
		{
			SetAttachToSkin(playerid, 25, skinid, item);
		}
		case 19085://повязка
		{
			SetAttachToSkin(playerid, 26, skinid, item);
		}
		case 19054..19058://новогодний рюкзак
		{
			SetAttachToSkin(playerid, 27, skinid, item);
		}
		case 881://Ёлка
		{
			SetAttachToSkin(playerid, 28, skinid, item);
		}
		case 19624: //Чемодан
		{
			SetAttachToSkin(playerid, 29, skinid, item);
		}
	}
	return 1;
}
stock SetAttachToSkin(playerid, type, skinid, setobject)
{
	if(type == 1)
	{
		switch (skinid)//†расные шапки
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.187000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138998,0.016000,-0.002001, 0.000000,90.000000,89.900016, 1.217999,1.033000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.004999,0.000998, 0.000000,90.000000,95.899993, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098997,0.000999,0.000998, 0.000000,90.000000,95.899993, 1.175000,1.000000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115997,0.006999,0.000998, 0.000000,90.000000,95.899993, 1.092000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115997,-0.006000,0.000998, 0.000000,90.000000,95.899993, 1.137000,1.050999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127997,0.021999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104998,-0.013999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.017000,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123997,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138998,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126997,-0.000999,0.001998, 0.000000,90.000000,95.899993, 1.137000,1.091999,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126997,0.017000,0.001998, 0.000000,90.000000,95.899993, 0.987000,1.091999,0.866999);
			case 26: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126997,0.017000,0.001998, 0.000000,90.000000,95.899993, 1.122000,1.091999,0.866999);
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136997,0.021000,0.001998, 0.000000,90.000000,95.899993, 1.181999,1.091999,0.866999);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130997,0.017000,-0.003001, 0.000000,90.000000,95.899993, 1.181999,1.091999,0.866999);
			case 39: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.074997,0.006000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103997,0.027000,-0.003001, 0.000000,90.000000,95.899993, 0.981000,1.091999,0.866999);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103997,0.009000,-0.003001, 0.000000,90.000000,95.899993, 1.071000,1.091999,0.866999);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129997,0.022000,-0.003001, 0.000000,90.000000,95.899993, 1.071000,1.091999,0.866999);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129997,0.022000,-0.003001, 0.000000,90.000000,95.899993, 1.125999,1.091999,0.866999);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147997,-0.002999,-0.003001, 0.000000,90.000000,95.899993, 1.125999,1.091999,0.866999);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110997,0.024000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127997,0.035999,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,-0.014000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,-0.014000,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158998,0.014999,-0.003001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.005999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145998,0.007999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132998,0.002999,-0.002001, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 62: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132998,0.012999,0.008999, 0.000000,90.000000,95.899993, 0.964999,1.091999,0.866999);
			case 63: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.000999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
			case 64: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.007999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.025999,0.004999, 0.000000,90.000000,95.899993, 1.104999,1.091999,0.866999);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.024999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,-0.004000,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.019999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.005999,0.004999, 0.000000,90.000000,95.899993, 0.958999,1.091999,0.866999);
			case 75: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115997,0.015000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115997,0.003000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,0.034000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,0.016000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,0.016000,-0.000001, 0.000000,90.000000,95.400001, 1.151999,1.069000,1.000000);
			case 85: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,0.016000,-0.010001, 0.000000,90.000000,95.400001, 1.151999,1.240999,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,0.016000,-0.004000, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,0.027000,-0.004000, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 89: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.007000,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.007000,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,-0.001999,0.005999, 0.000000,90.000000,95.400001, 1.151999,1.048999,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.100998,-0.003999,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,0.005000,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107998,-0.011999,0.005999, 0.000000,90.000000,95.400001, 0.967999,1.048999,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122997,0.032000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.009000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,0.009000,0.005999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.002000,0.003999, 0.000000,90.000000,95.400001, 1.117999,1.048999,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.002000,-0.002000, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101997,0.002000,-0.002000, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137997,0.002000,0.002999, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114997,0.012000,0.003999, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117997,0.019000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,0.004000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.048999,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,0.004000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118997,0.010000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136997,0.007000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136997,0.007000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129997,0.000000,-0.000001, 0.000000,90.000000,95.400001, 0.980999,1.147000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,-0.003999,0.000999, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,-0.003999,0.000999, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.026000,-0.010001, 0.000000,90.000000,95.400001, 1.009999,1.147000,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.100998,0.016000,-0.004000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
			case 130: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.065998,0.019000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.035998,0.005000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
			case 138: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,0.005000,-0.001000, 0.000000,90.000000,95.400001, 1.009999,0.949999,1.000000);
			case 144: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.173998,-0.007999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,-0.001999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,-0.001999,-0.001000, 0.000000,90.000000,95.400001, 1.009999,1.087000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,-0.004999,0.010999, 0.000000,90.000000,95.400001, 1.176999,1.087000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109998,0.009000,0.000999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,-0.002999,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.012000,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.012000,0.005999, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.012000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,-0.007999,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.011000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133998,0.008000,-0.000000, 0.000000,90.000000,95.400001, 1.028999,1.087000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.182998,-0.009999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.000000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154998,-0.003999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111998,0.026000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120998,0.014000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.004000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110998,-0.006999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110998,0.006000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.006000,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 190: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142998,-0.001999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142998,-0.001999,-0.000000, 0.000000,90.000000,95.400001, 1.062999,1.087000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,0.004999,0.002998, 0.000000,90.000000,96.400009, 1.207000,1.000000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,0.001000,0.002998, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.001000,-0.001001, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145998,0.004000,-0.009001, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154998,-0.021999,0.001999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154998,-0.021999,0.001999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158998,0.011000,-0.004000, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142997,0.015000,0.000999, 0.000000,90.000000,96.400009, 0.946999,1.000000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150997,0.015000,0.000999, 0.000000,90.000000,96.400009, 1.231999,1.000000,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,0.005000,0.000999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107998,-0.001999,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.076998,-0.001999,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.095998,0.010000,0.001999, 0.000000,90.000000,96.400009, 0.948999,1.000000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.010000,0.001999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.010000,0.001999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.010000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.003000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.003000,0.005999, 0.000000,90.000000,96.400009, 1.099999,1.000000,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.095998,0.022000,-0.003000, 0.000000,90.000000,96.400009, 0.964999,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,0.010000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,0.010000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,-0.009999,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.079000,1.000000);
			case 268: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,0.004000,-0.001000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138998,0.004000,-0.005000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.100998,0.004000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.025000,-0.003000, 0.000000,90.000000,96.400009, 0.987999,1.159999,1.000000);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.019000,-0.003000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.013000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,0.015000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.162998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119997,0.009000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,-0.005999,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150998,0.007000,0.001999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.007000,0.007999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.007000,0.007999, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.014000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.003000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,0.003000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
			default: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,0.003000,-0.004000, 0.000000,90.000000,96.400009, 1.058999,1.159999,1.000000);
		}
	}
	else if(type == 2)
	{
		switch (skinid)//У™плые шапки
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142998,0.016000,-0.002001, 0.000000,-0.799996,-8.600006, 1.000000,1.000000,1.050999);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.022000,0.008999, 2.000010,-5.999990,5.400008, 1.000000,1.042000,1.079000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.169998,0.018000,-0.000001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.169998,0.018000,-0.000001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141997,0.032000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106997,0.017000,-0.004001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106997,0.007000,-0.002001, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.079000);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117997,0.032000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098997,0.008000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120997,0.020000,0.003998, 2.000010,2.000011,1.000008, 1.000000,1.042000,1.146000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097998,0.016000,0.003998, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.004000,0.000998, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116998,0.014000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.023000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.042000,1.146000);
			case 26: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.026000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.131000,1.206000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.026000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.131000,1.206000);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.005000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.052000,1.206000);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.063998,0.015000,-0.000001, 2.000010,2.000011,-17.799989, 1.000000,1.052000,1.206000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.100998,0.027000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.909000,1.206000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.100998,0.005000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.974000,1.206000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111998,0.040000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.017000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,0.004000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097998,0.020000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104998,-0.000999,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104998,-0.000999,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,0.025000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,1.070000,1.206000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,0.014000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.953000,0.969000);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152998,0.006000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.953000,0.969000);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.006000,-0.004000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 62: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.025000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.023000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.023000,0.005999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.030000,-0.000000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.173998,0.024000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.001000,0.006999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.001000,0.003999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114998,0.020000,0.003999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114998,0.010000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,0.029000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.009000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121998,0.018000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109998,0.013000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,0.013000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146998,0.005000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121998,0.020000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127998,0.000000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127998,0.000000,0.000999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.084000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,0.005000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,0.013000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,0.021000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.014000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142998,0.025000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,-0.000999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154998,-0.009999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111998,0.024000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132998,0.017000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.011000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.011000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.018000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.018000,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,-0.003999,0.002999, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.017000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,0.967000,1.166000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.009000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.005000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.009000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.005000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104998,0.018000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104998,0.018000,-0.001000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104998,0.018000,-0.003000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127998,0.018000,-0.002000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127998,0.000000,-0.002000, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103998,0.005000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103998,0.011000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.003000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 190: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.001000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.007000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.007000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 199: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.008000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,1.043000,1.166000);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.020000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114998,0.012000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114998,0.004000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.010000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.021000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 218: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.015000,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154998,-0.012999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150998,-0.017999,0.001999, 2.000010,2.000011,-17.799989, 1.000000,0.970000,1.166000);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150998,0.014000,0.001999, 2.000010,2.000011,-26.199983, 1.000000,0.970000,1.166000);
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122998,0.003000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,0.970000,1.166000);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,0.029000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,0.970000,1.166000);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,0.023000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.132000,1.166000);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105998,0.011000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105998,-0.002999,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.073998,0.010000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098998,0.010000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133998,0.015000,0.001999, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 243: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.091998,0.023000,0.001998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.023000,-0.004001, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.005000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.019000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.010000,0.003998, 2.000010,2.000011,-10.499980, 1.000000,1.013000,1.166000);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107998,0.027000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107998,0.015000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107998,0.013000,-0.002001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107998,0.007999,0.002998, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.000000);
			case 268: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107998,0.007999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098998,0.019000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.000000,1.085999);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.020000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,0.020000,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,0.003999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.085999);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,0.003999,-0.001001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.131999);
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122998,0.021000,-0.003001, 0.000000,0.899997,-5.699998, 1.000000,1.075999,1.131999);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,0.030000,-0.003001, 0.000000,0.899997,-23.200000, 1.000000,1.075999,1.131999);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,0.013000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.885999,1.131999);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,0.013000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.885999,1.131999);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,0.021000,-0.003001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.131999);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
			default: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,0.021000,-0.000001, 0.000000,0.899997,-7.599999, 1.000000,0.909999,1.034999);
		}
	}
	else if(type == 3)
	{
		switch (skinid)//°апки баллас
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.009999,0.001998, 0.400000,-3.699999,12.699994, 1.114999,1.000000,1.238999);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.013000,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.181997,0.000999,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.181997,0.000999,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154997,0.025000,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144997,0.007999,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144997,-0.000000,0.004998, 0.400000,-3.699999,12.699994, 1.114999,1.245000,1.238999);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141997,-0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.238999);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141997,-0.025000,0.004998, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.238999);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141997,0.011999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114997,-0.025000,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153997,0.005000,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114997,-0.003999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.165997,-0.014999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150997,-0.003999,0.000998, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135997,0.010000,0.006999, 0.400000,-3.699999,-0.400006, 1.114999,1.245000,1.297000);
			case 26: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150997,0.004000,0.006999, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134997,0.011000,-0.004001, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134997,0.005000,-0.004001, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134997,-0.018999,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.344000,1.297000);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.108997,-0.009000,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.132000,1.297000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.108997,0.011999,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.132000,1.297000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120997,-0.008000,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.132000,1.297000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152997,0.006999,0.007999, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152997,0.000999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152997,-0.014000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109997,0.007999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125997,-0.010000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125997,-0.020000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157997,0.013999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110997,0.000999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.214000,1.367000);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.164997,-0.002000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.311000,1.367000);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144997,-0.002000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144997,0.004999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138997,0.003999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138997,0.017999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138997,-0.010000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138997,0.013999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138997,0.007999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138997,-0.016000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.367000);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.195997,0.004999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.195997,-0.006000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.195997,-0.006000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126997,-0.012000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.164000,1.145000);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126997,-0.001000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.264000);
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138997,-0.015000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.264000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138997,-0.023000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.137000,1.264000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138997,0.001999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.137000,1.264000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138997,-0.005000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.137000,1.264000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138997,0.012999,-0.002001, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151997,-0.008000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151997,-0.008000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.163997,-0.008000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148997,-0.003000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.247000,1.264000);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.314000);
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.356000,1.314000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.108000,1.314000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133997,-0.003000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,0.987000,1.314000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.166997,-0.005000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.166997,-0.005000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.166997,-0.005000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121997,0.010999,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121997,0.010999,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126997,0.007999,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126997,0.003999,0.004999, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.314000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126997,0.003999,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.374000);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126997,-0.000000,0.003998, 0.400000,-3.699999,-0.400006, 1.114999,1.204000,1.374000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143997,-0.002000,-0.000001, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143997,-0.002000,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122997,0.008999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131997,0.000999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131997,0.000999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142997,0.007999,0.001998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123997,-0.011000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123997,-0.010000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.278000,1.374000);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147997,-0.019000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.371001,1.374000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110997,-0.001000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.207000,1.374000);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.170997,-0.023000,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.207000,1.374000);
			case 157: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117997,0.009999,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.207000,1.374000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117997,0.000999,0.005998, 0.400000,-3.699999,-0.400006, 1.114999,1.018000,1.294000);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136997,0.003999,0.005998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.294000);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,0.008999,0.005998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.294000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,0.005999,0.005998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.294000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136997,0.003999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136997,0.003999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136997,-0.014000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136997,0.000999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.114001,1.352999);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141997,-0.005000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151997,-0.009000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151997,-0.009000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151997,-0.004000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151997,-0.010000,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121997,0.006999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121997,0.001999,0.002998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121997,0.010999,-0.002001, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154997,-0.006000,0.000998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139997,-0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.188999,1.230001,1.352999);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158997,-0.007000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158997,-0.012000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158997,-0.012000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158997,-0.012000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140997,-0.012000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.383001,1.428999);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140997,0.019999,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.071001,1.250999);
			case 207: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,-0.002000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.071001,1.250999);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,0.003999,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.071001,1.250999);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,0.003999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.177001,1.327999);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142997,-0.003000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.177001,1.327999);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161997,-0.015000,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.257001,1.429999);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148997,-0.015000,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.257001,1.429999);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153997,0.012999,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.386001,1.429999);
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117997,-0.020000,0.006998, 0.400000,-3.699999,-0.400006, 1.268999,1.386001,1.429999);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147997,0.018999,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.128001,1.429999);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147997,0.004999,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.288001,1.429999);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118997,-0.005000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.429999);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118997,-0.015000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.429999);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.096997,-0.007000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.283999);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120997,-0.002000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.091001,1.283999);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.264001,1.283999);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148997,-0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.264001,1.283999);
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.182997,-0.004000,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146997,0.004999,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146997,-0.008999,0.002998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146997,-0.008999,0.007998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.283999);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146997,-0.004999,0.007998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.411999);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146997,-0.008999,0.007998, 0.400000,-3.699999,-0.400006, 1.268999,1.323001,1.411999);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112997,0.007000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112997,0.007000,0.003998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132997,0.000000,-0.004001, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132997,-0.008999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 268: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132997,-0.008999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149997,-0.001999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127997,-0.004999,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117997,0.002000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117997,0.002000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144997,0.002000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132997,0.001000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.146001,1.411999);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132997,0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.057001,1.208999);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144997,0.011000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.057001,1.208999);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144997,0.006000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.057001,1.208999);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159997,0.010000,0.004998, 0.400000,-3.699999,-0.400006, 1.268999,1.278001,1.319999);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128997,0.001000,-0.001001, 0.400000,-3.699999,-0.400006, 1.268999,1.014001,1.137000);
			case 293: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128997,0.001000,-0.001001, 0.400000,-3.699999,-0.400006, 1.268999,1.014001,1.216000);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156997,0.008000,0.000998, 0.400000,-3.699999,-0.400006, 1.268999,1.231001,1.216000);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135997,0.001000,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.231001,1.295000);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135997,-0.006999,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.363001,1.295000);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156997,-0.000999,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.363001,1.295000);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.178997,0.011000,0.005998, 0.400000,-3.699999,-0.400006, 1.268999,1.363001,1.295000);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135997,0.007000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.101001,1.295000);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135997,0.007000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.101001,1.295000);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135997,0.007000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137997,0.012000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137997,0.006000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137997,0.006000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137997,0.001000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137997,0.000000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
			default: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137997,0.000000,-0.000001, 0.400000,-3.699999,-0.400006, 1.134999,1.179001,1.295000);
		}
	}
	else if(type == 4)
	{
		switch (skinid)//Њанамки
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.016000,-0.005001, 0.000000,90.000000,93.500007, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.007999,0.001998, 0.000000,90.000000,93.500007, 1.000000,1.000000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,0.015000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161998,0.004999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161998,0.018000,-0.000001, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127997,0.006999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127997,0.006999,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127997,0.012000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127997,-0.000000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,0.027000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,-0.013000,0.001998, 0.000000,90.000000,93.500007, 1.043999,1.123999,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.016000,0.002998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.013000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.013000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.009999,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138998,0.014000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,0.014000,0.000998, 0.000000,90.000000,93.699989, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,0.014000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,-0.003000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.081998,0.017999,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.029000,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098998,0.008999,-0.002001, 0.000000,90.000000,93.699989, 1.000000,1.074000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.037999,-0.001001, 0.000000,90.000000,93.699989, 1.078999,1.074000,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.023000,-0.001001, 0.000000,90.000000,93.699989, 1.078999,1.074000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.004999,-0.005000, 0.000000,90.000000,93.699989, 1.078999,1.138000,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.020999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.043999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.004999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.004999,-0.005000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.031999,-0.004000, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.017999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,0.024999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,0.024999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 62: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,0.026999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,0.019999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,0.019999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.032999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.014999,0.000999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.032999,0.008999, 0.199999,91.999984,97.199958, 1.078999,1.138000,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.032999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.032999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133998,0.002999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.006999,0.001999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121998,0.006999,0.006999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.182998,0.025999,0.003999, 0.199999,91.999984,90.599967, 0.977999,0.991000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.163998,0.020999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.163998,0.020999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.011999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.032999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.010999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.005999,0.003999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 94: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.022999,0.001999, 0.199999,91.999984,90.599967, 1.071999,0.991000,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102998,0.001999,0.001999, 0.199999,91.999984,90.599967, 0.934999,0.991000,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.015999,-0.000000, 0.199999,91.999984,90.599967, 0.986999,1.020000,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.010999,-0.000000, 0.199999,91.999984,90.599967, 0.986999,1.020000,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.035999,-0.003000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,0.015999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.015999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.015999,-0.005000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.016999,-0.006001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.016999,-0.001000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.016999,-0.005001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.016999,-0.005001, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132998,0.017999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,0.014999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,0.014999,0.000999, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,0.014999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.020000,1.000000);
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,0.014999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.020999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.020999,-0.004000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.020999,-0.002000, 0.199999,91.999984,90.599967, 1.025999,1.041000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.006999,0.003999, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142998,0.006999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142998,0.011999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.012999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154998,0.033999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.089998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 130: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.069998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 131: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103998,0.030999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 146: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.171998,-0.002000,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,-0.001000,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127998,0.017999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.007999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.007999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.174998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132998,0.020999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,0.017999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,0.009999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.002999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.011999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,0.014999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 195: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 196: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.096998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 199: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.108998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 202: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.016999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.008999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 211: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.010999,-0.000000, 0.199999,91.999984,90.599967, 1.025999,1.094000,1.000000);
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.021999,-0.000000, 0.199999,91.999984,90.599967, 0.855999,1.005000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.018999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 214: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 216: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.015999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 218: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.015999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 219: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.008999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.173998,0.001999,-0.001001, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156998,-0.007000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.179998,0.021999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 224: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.004000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 225: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.002000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.009000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,0.022999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.166998,0.012999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116998,0.000999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 230: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102998,0.015999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 233: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.100998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.080998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103998,0.007999,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 237: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,-0.002000,0.000999, 0.199999,91.999984,90.599967, 0.947999,1.044000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.017999,0.000999, 0.199999,91.999984,90.599967, 1.002999,1.090000,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.016000,0.001998, 0.000000,90.000000,82.699989, 1.000000,1.057000,1.000000);
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 251: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110998,0.027000,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.020999,-0.004001, 0.000000,90.000000,82.699989, 1.153000,1.136999,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.088998,0.030000,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 263: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,0.004999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111998,0.008999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111998,0.005999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111998,0.005999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.007999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.014999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.021999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.011999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.166998,0.013999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111998,0.013999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.167998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.016999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145998,-0.003000,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.160998,0.009999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.009999,0.001998, 0.000000,90.000000,82.699989, 0.936000,1.136999,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.172998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,0.026999,0.001998, 0.000000,90.000000,82.699989, 1.037000,1.136999,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.016000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115997,0.007999,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115997,0.015000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
			default: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115997,0.015000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
		}
	}
	else if(type == 5)//†епки назад
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105997,0.034000,0.000998, 6.799999,90.000000,97.500000, 0.925999,1.092999,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,0.034000,-0.005001, 8.500000,89.899986,76.199981, 1.024999,1.115999,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139997,0.034000,0.006998, 8.500000,89.899986,99.799995, 1.090999,1.115999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139997,0.034000,0.006998, 8.500000,89.899986,99.799995, 1.090999,1.115999,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129997,0.045000,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116997,0.016999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.093997,0.016999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104997,0.028999,-0.001001, 8.500000,89.899986,81.099990, 1.016000,1.055999,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094997,0.015999,-0.004001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120997,0.037000,-0.004001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106997,-0.001999,-0.005001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120997,0.031000,-0.002001, 8.500000,89.899986,81.099990, 1.037000,1.123999,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.085997,0.019000,0.000998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139997,0.014000,0.000998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127998,0.027000,-0.004001, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.027000,0.004998, 8.500000,89.899986,81.099990, 0.947000,1.123999,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120998,0.029000,-0.002001, 8.500000,89.899986,81.099990, 1.047000,1.030999,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120998,0.029000,-0.007001, 8.500000,89.899986,81.099990, 1.047000,1.088999,1.000000);
			case 39: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.082997,0.023000,-0.004000, 8.500000,89.899986,81.099990, 1.047000,1.088999,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101997,0.023000,-0.003001, 8.500000,89.899986,81.099990, 1.047000,1.156999,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.058998,0.026000,-0.009001, 8.500000,89.899986,81.099990, 0.913000,0.994999,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.083997,0.036000,0.002998, 8.500000,89.899986,81.099990, 0.913000,0.994999,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.088998,0.027000,-0.003001, 8.500000,89.899986,81.099990, 0.988000,1.017999,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118997,0.045999,-0.003001, 8.500000,89.899986,81.099990, 1.016000,1.113999,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118997,0.035000,-0.006001, 8.500000,89.899986,81.099990, 1.016000,1.113999,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127997,0.018000,-0.009001, 8.500000,89.899986,81.099990, 1.091000,1.150999,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097997,0.046000,-0.009001, 8.500000,89.899986,81.099990, 1.091000,1.150999,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097997,0.056999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.049999,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109997,0.010999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.049999,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109997,0.010999,-0.003001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144997,0.037999,-0.007001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.090997,0.017999,-0.007001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.026999,-0.004001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.026999,-0.005001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 62: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105998,0.036999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.037999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107998,0.033999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107998,0.036999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116998,0.025999,-0.006001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116998,0.040999,0.006998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109998,0.040999,-0.002001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109998,0.018999,-0.002001, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142998,0.035999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142998,0.018999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142998,0.018999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.081999,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097998,0.013999,-0.003001, 8.500000,89.899986,81.099990, 1.002000,1.011999,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097998,0.049999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.011999,1.000000);
			case 89: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121998,0.007999,-0.001001, 8.500000,89.899986,81.099990, 1.002000,1.065999,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111998,0.027999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111998,0.022999,0.000998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.022999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.093998,0.009999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111998,0.031999,0.001998, 8.500000,89.899986,81.099990, 1.002000,1.123999,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092998,0.028999,0.001998, 8.500000,89.899986,81.099990, 1.042000,1.123999,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110998,0.044999,-0.005001, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.033999,-0.005001, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.028999,0.004999, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,0.019999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,0.023999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,0.037999,-0.004000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.031999,-0.006000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120998,0.030999,-0.002000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107998,0.029999,-0.002000, 8.500000,89.899986,81.099990, 1.042000,1.016999,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122998,0.029999,-0.005000, 8.500000,89.899986,81.099990, 1.042000,1.059999,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109998,0.036999,-0.003000, 8.500000,89.899986,81.099990, 0.935000,0.948999,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109998,0.036999,-0.003000, 8.500000,89.899986,81.099990, 0.935000,0.948999,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.032999,-0.005000, 8.500000,89.899986,81.099990, 0.935000,1.012999,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,0.017999,-0.005000, 8.500000,89.899986,81.099990, 0.980000,1.012999,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.016000,0.004999, 0.000000,90.000000,115.000000, 1.000000,1.000000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.024000,-0.005001, 0.000000,90.000000,115.000000, 1.057999,1.191999,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,0.030000,-0.001000, 0.000000,90.000000,93.100013, 1.057999,1.102999,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.034000,-0.001000, 0.000000,90.000000,93.100013, 0.913999,1.102999,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.013000,-0.001000, 0.000000,90.000000,93.100013, 0.970999,1.102999,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.027000,0.000999, 0.000000,90.000000,93.100013, 1.066999,1.102999,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.046000,-0.008000, 0.000000,90.000000,93.100013, 1.099999,1.102999,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105998,0.028000,0.000999, 0.000000,90.000000,93.100013, 0.797999,0.900999,1.000000);
			case 130: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.078998,0.028000,-0.004000, 0.000000,90.000000,93.100013, 0.797999,0.900999,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.006000,-0.000000, 0.000000,90.000000,93.100013, 0.850999,0.943999,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146998,0.000000,-0.000000, 0.000000,90.000000,93.100013, 0.850999,0.943999,1.000000);
			case 150: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138998,0.013000,-0.000000, 0.000000,90.000000,93.100013, 0.913999,0.943999,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153998,0.002000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 152: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126997,0.002000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103997,0.006000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.166997,0.001000,-0.000000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 157: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116997,0.021000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.100997,0.027000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120997,0.031000,0.002999, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116997,0.031000,-0.003000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112997,0.022000,-0.003000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112997,0.032000,-0.004000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106997,0.032000,-0.004000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141997,-0.002999,-0.005000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139997,0.025000,-0.005000, 0.000000,90.000000,93.100013, 0.924999,0.998999,1.024999);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139997,0.016000,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132997,0.016000,-0.000000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149997,0.016000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154997,0.021999,-0.004000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123997,0.021999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147997,0.013999,-0.009000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110997,0.025999,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110997,0.025999,-0.002000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118997,0.025999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126997,0.025999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136997,0.016999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104997,0.016999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104997,0.024000,-0.001000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137997,0.018999,-0.000000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155997,0.012999,-0.005000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155997,0.018999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142997,0.023000,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142997,0.023000,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127997,0.021999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127997,0.044999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 207: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.083997,0.033999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115997,0.043999,-0.003000, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.084997,0.027999,0.002999, 0.000000,90.000000,93.100013, 1.000999,0.998999,1.024999);
			case 211: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112997,0.027999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112997,0.027999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
			case 214: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112997,0.019999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115997,0.031999,-0.001000, 0.000000,90.000000,93.100013, 1.000999,1.021999,1.024999);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147997,0.015999,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147997,0.004999,0.000999, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147997,0.034000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107997,0.014000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129997,0.048000,-0.004000, 0.000000,90.000000,93.100013, 1.000999,1.121999,1.024999);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128997,0.034000,-0.000000, 0.000000,90.000000,93.100013, 1.076999,1.121999,1.024999);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094997,0.019000,-0.000000, 0.000000,90.000000,93.100013, 0.934999,1.003999,1.024999);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.099997,0.005000,-0.000000, 0.000000,90.000000,93.100013, 0.934999,1.003999,1.024999);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.073998,0.020000,-0.001001, 0.000000,90.000000,101.900001, 1.000000,1.000000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.084998,0.032999,0.000998, 0.000000,90.000000,101.900001, 1.000000,1.000000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.031999,-0.000001, 0.000000,90.000000,101.900001, 1.059000,1.115999,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.020999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155998,0.027999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122997,0.027999,-0.004001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 251: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118997,0.027999,-0.001001, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116997,0.026999,0.007998, 0.000000,90.000000,101.900001, 1.067000,1.068000,1.047000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116997,0.031999,0.002998, 0.000000,90.000000,101.900001, 1.067000,1.123000,1.047000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112997,0.025999,0.003998, 0.000000,90.000000,101.900001, 1.067000,1.123000,1.047000);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110997,0.041999,-0.004001, 0.000000,90.000000,101.900001, 0.963000,0.953000,1.047000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110997,0.020999,-0.004001, 0.000000,90.000000,101.900001, 0.963000,0.953000,1.047000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110997,0.020999,-0.002001, 0.000000,90.000000,101.900001, 0.963000,0.996000,1.047000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110997,0.020999,0.000998, 0.000000,90.000000,101.900001, 0.963000,0.996000,1.047000);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136997,0.020999,0.000998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.096997,0.025999,0.000998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107997,0.026999,0.003998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107997,0.026999,0.003998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116998,0.024999,0.001998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.029999,0.001998, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.029999,-0.003001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.029999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,0.034999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,0.996000,1.047000);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119997,0.024999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127997,0.032999,-0.001001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.090997,0.028999,-0.003001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126997,0.028999,-0.000001, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126997,0.023999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,0.005999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,0.015999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.035999,0.000998, 0.000000,90.000000,101.900001, 1.011000,1.086000,1.047000);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.022999,0.000998, 0.000000,90.000000,101.900001, 0.877000,1.012000,1.047000);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.029999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.029999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.029999,-0.000001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107997,0.024999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107997,0.027999,-0.002001, 0.000000,90.000000,101.900001, 0.908000,1.012000,1.047000);
			default: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115997,0.015000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
		}
	}
	else if(type == 6)//†епки впер™д
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.016000,-0.014001, -175.400024,173.999984,-178.299957, 1.000000,1.000000,1.072000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.016000,-0.014001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.173998,0.009999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.173998,0.009999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.167999,1.139000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,0.020000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.002000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.002000,-0.015001, -175.400024,173.999984,-178.299957, 1.000000,1.099000,1.064999);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.002000,-0.019001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.022000,-0.007000, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123997,-0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.014000,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109998,0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.004999,-0.011001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.012000,-0.016001, -175.400024,173.999984,-178.299957, 1.000000,1.163000,1.153999);
			case 24: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.012000,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,0.968000,1.044999);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.012000,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,0.968000,1.044999);
			case 26: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,0.012999,-0.010001, -175.400024,173.999984,-178.299957, 1.000000,1.120000,1.075000);
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.000999,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,-0.011000,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,-0.024000,-0.018001, -175.400024,173.999984,164.000030, 1.000000,1.120000,1.218999);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.093998,-0.004000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,0.989000,1.042999);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,0.016999,-0.010001, -175.400024,173.999984,164.000030, 0.954999,0.989000,1.042999);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113998,-0.010000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156997,-0.006000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156997,-0.006000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.042999);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156997,-0.031000,-0.022001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132997,0.003999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136997,0.014999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141997,-0.033000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134997,-0.033000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.177997,0.000999,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.049000,1.146000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123997,-0.013000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,0.982000,1.019999);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.167997,-0.013000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.126000,1.019999);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140997,-0.001000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.126000,1.019999);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133997,0.005999,-0.011001, -175.400024,173.999984,164.000030, 0.954999,1.005999,1.019999);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142997,0.003999,-0.011001, -175.400024,173.999984,164.000030, 0.954999,0.952999,1.019999);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134997,0.007999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,0.952999,1.019999);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136997,-0.023000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136997,0.012999,-0.004000, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127997,0.021999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.019999);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137997,-0.026000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.186997,0.000999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.187997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.187997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147997,-0.014000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147997,-0.027000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 93: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143997,-0.024000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127997,-0.024000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140997,-0.004000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152997,0.003999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.166997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157997,-0.022000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156997,-0.028000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154997,-0.028000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154997,-0.021000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151997,-0.002000,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151997,-0.002000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151997,-0.009000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142997,-0.005000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.061000,1.054000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119997,-0.005000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,0.959000,0.932000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.167997,-0.016000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,0.959000,0.932000);
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.167997,-0.016000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,0.971000);
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.167997,-0.016000,-0.020001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125997,0.005999,-0.020001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125997,0.005999,-0.015001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.028000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125997,0.005999,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150997,-0.022000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133997,-0.018000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156997,-0.018000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.167997,-0.018000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141997,0.000999,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151997,-0.024000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151997,-0.010000,-0.009000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.163997,0.019999,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 138: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 139: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 141: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132997,-0.024000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 145: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144997,-0.014000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 146: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144997,-0.014000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148997,-0.033000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 150: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148997,-0.022000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.178997,-0.028000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.179997,-0.042000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 157: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135997,-0.014000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114997,0.002999,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152997,-0.001000,-0.019001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129997,-0.001000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123997,0.000999,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132997,-0.005000,-0.008000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132997,-0.005000,-0.008000, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132997,-0.022000,-0.013001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145997,-0.009000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.163997,-0.025000,-0.017001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142998,-0.016000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.167998,-0.029000,-0.016001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,-0.016000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.028000,1.059000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,-0.021000,-0.018001, -175.400024,173.999984,164.000030, 0.954999,1.128000,1.059000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,-0.003000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.015999,1.009000);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,-0.003000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.015999,1.009000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,-0.006000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.068999,1.009000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,-0.012000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150998,-0.016000,-0.014001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,-0.022000,-0.004000, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,-0.001000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155998,-0.016000,-0.012001, -175.400024,173.999984,164.000030, 0.954999,1.109999,1.009000);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155998,-0.028000,-0.016001, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155998,-0.037000,-0.020000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155998,-0.023000,-0.017000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155998,-0.033000,-0.019000, -175.400024,173.999984,153.500061, 0.954999,1.109999,1.070000);
			case 195: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.162998,-0.041000,-0.019000, -175.400024,173.999984,153.500061, 1.074999,1.109999,1.146000);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,-0.023000,-0.019000, -175.400024,173.999984,153.500061, 1.074999,1.109999,1.146000);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,-0.002000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 207: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,-0.004000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.002999,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,-0.018000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 211: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,-0.033000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142998,-0.025000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142998,-0.019000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 219: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142998,-0.045000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.014999,1.043999);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.175998,-0.039000,-0.006000, -175.400024,173.999984,153.500061, 1.074999,1.139999,1.159999);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146998,-0.041000,-0.013000, -175.400024,173.999984,153.500061, 1.074999,1.139999,1.159999);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.165998,0.010999,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114998,-0.015000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158998,0.012999,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158998,-0.003000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,-0.006000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 233: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,-0.009000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.178999,1.187999);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,-0.018000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102998,-0.011000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102998,-0.004000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
			case 237: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,-0.018000,-0.013000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.038999);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155998,-0.009000,-0.015000, -175.400024,173.999984,169.400070, 1.074999,1.056999,1.068999);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154998,-0.011000,-0.015000, -175.400024,173.999984,169.400070, 1.074999,1.101999,1.106000);
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.187998,-0.023000,-0.011000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.183000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,-0.010000,-0.020000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
			case 251: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,-0.013000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153998,-0.029000,-0.011000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.075000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,-0.019000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.137000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,-0.030000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,1.101999,1.137000);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,-0.004000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,0.955999,0.924000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,-0.016000,-0.014000, -175.400024,173.999984,158.000030, 1.074999,0.955999,0.924000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,-0.021000,-0.014000, -175.400024,173.999984,158.000030, 1.074999,1.033999,1.004000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,-0.027000,-0.012000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,-0.008000,-0.012000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,-0.012000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,-0.006000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,1.087999,1.044000);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,-0.011000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,-0.013000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,-0.021000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,-0.018000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,-0.018000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,-0.019000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.176998,-0.031000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127998,-0.015000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.160998,-0.028000,-0.013000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.032000,-0.016000, -175.400024,173.999984,158.000030, 1.074999,0.970999,1.044000);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.072000,-0.016000, -175.400024,173.999984,139.900024, 1.074999,0.970999,1.044000);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.163998,-0.020000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,-0.005000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.166998,0.001999,-0.016000, -175.400024,173.999984,160.200042, 1.074999,1.187999,1.098000);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145998,-0.010000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145998,-0.010000,-0.016000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145998,-0.010000,-0.012000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 306: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154998,-0.036000,-0.017000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 307: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146998,-0.028000,-0.017000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 308: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154998,-0.036000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 309: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154998,-0.036000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,-0.011000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,-0.011000,-0.014000, -175.400024,173.999984,160.200042, 1.074999,0.985999,1.020999);
			default: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115997,0.015000,0.000998, 0.000000,90.000000,85.500000, 1.000000,1.000000,1.000000);
		}
	}
	else if(type == 7)//°л§пы
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,-0.014000,-0.001001, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.070000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,-0.014000,-0.001001, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.070000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,-0.014000,-0.008000, 0.000000,179.400024,-154.400009, 1.000000,1.000000,1.126000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,0.014000,-0.002001, 0.000000,0.600003,13.600016, 1.000000,1.000000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,0.014000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,-0.001000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146998,0.000999,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146998,0.000999,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146998,-0.008000,-0.002001, 0.000000,0.600003,-0.099983, 1.000000,1.000000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146998,0.007000,0.003998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119997,-0.027000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,0.001000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,-0.007999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152998,-0.007999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152998,-0.004999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133998,0.005000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,0.000000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.015000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.011000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,-0.006999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.099998,0.000000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.024000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,-0.004999,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142998,0.016000,-0.000001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.037000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161998,-0.008999,-0.002001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,0.013000,-0.002001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,0.028000,0.000998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,-0.009999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,-0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161998,0.010000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.180998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,0.017000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.017000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.006999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.196998,0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.180998,0.002999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.180998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146998,-0.010000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,-0.012000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153998,0.011000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153998,-0.000000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.163998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.173998,-0.008000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.173998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.173998,-0.013000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.173998,0.003999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.173998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.173998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.169998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 116: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.169998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122998,0.016000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122998,0.023000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,0.006999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.003000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.004000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.000999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.010999,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,-0.005000,-0.001001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,-0.005000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.174998,0.007999,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,-0.011000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,-0.011000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.167998,-0.012000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127998,-0.012000,0.001998, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.174998,-0.022000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122998,0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154998,0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132998,0.000999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.016000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.007000,-0.005001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158998,-0.008999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,-0.001999,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.007000,-0.003001, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.003000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,-0.011000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,-0.011000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.005000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.004999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.164998,-0.010999,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,0.003000,0.002999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 207: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132998,0.009000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111998,0.001000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 214: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,-0.010999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152998,-0.005999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.169998,-0.010999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.169998,-0.020000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.176998,0.017000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,-0.012999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.166998,0.003000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.095998,-0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109998,-0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150998,-0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.160998,-0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.000000,1.069000);
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.188998,0.001999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,0.001999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,-0.010000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,-0.010000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156998,-0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.069000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156998,-0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,1.031999,1.146000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,-0.002999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,-0.002999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121998,0.011000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,0.007000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.956999,1.049000);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.168998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133998,0.004000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,0.012000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,0.000000,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,-0.008999,0.001999, 0.000000,0.600003,-6.399982, 1.000000,0.990999,1.049000);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.003999,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152998,-0.007999,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,0.020000,0.001999, 0.000000,0.600003,-6.399982, 1.075999,1.065999,1.049000);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146999,0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.800999,0.970000);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146999,0.002000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154999,0.006000,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150999,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150999,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
			default: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150999,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
		}
	}
	else if(type == 8)//љереты
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150998,0.000999,-0.010001, 0.199998,-5.700015,-8.800018, 1.000000,1.000000,1.085000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156998,-0.000000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.181998,-0.005000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.181998,-0.015000,-0.001001, 0.199998,-5.700015,-8.800018, 1.000000,1.042000,1.189000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154998,0.011999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,-0.013000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,0.011000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,-0.021999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,0.002000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.163998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.163998,-0.005999,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.011000,-0.001001, 0.199998,-5.700015,-8.800018, 1.214000,1.042000,1.196000);
			case 26: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.011000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.011000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.006000,-0.008001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,-0.016999,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,1.137000,1.219000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120998,0.015000,-0.002001, 0.199998,-5.700015,-8.800018, 1.214000,0.947999,1.029000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.076999,1.029000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158998,0.008000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.076999,1.029000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158998,0.006000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.172999,1.123000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158998,-0.011999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.172999,1.200000);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138998,0.012000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138998,0.017000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138998,-0.002999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138998,-0.011999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.181998,0.004000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132998,-0.005999,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156998,0.002000,-0.002001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156998,-0.004999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156998,0.008000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156998,0.001000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,0.013000,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.006999,-0.004001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,0.012000,0.001998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,0.012000,0.001998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,0.012000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.022999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,-0.022999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.005999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,-0.014999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146998,0.001000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146998,0.001000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146998,0.015000,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.170998,-0.003999,-0.003001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.170998,-0.007999,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.170998,-0.007999,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150998,0.002000,0.000998, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150998,-0.002999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.164998,0.000000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.004000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161998,-0.014999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161998,-0.010999,-0.000001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161998,-0.001999,-0.008001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161998,-0.001999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,0.002000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.003999,-0.006001, 0.199998,-5.700015,-8.800018, 1.074000,1.026999,1.125000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,0.005000,-0.009000, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,0.018000,-0.009000, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.020999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.012999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 150: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.015999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.015999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.140999,1.169000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127998,-0.003999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,1.027999,1.079000);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.171998,-0.013999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,1.208999,1.217000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122998,0.009000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.160998,0.009000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.008999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.008999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,0.002000,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,-0.003999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,-0.009999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,-0.009999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,-0.005999,-0.003000, 0.199998,-5.700015,-8.800018, 1.074000,0.956999,1.109000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,-0.008999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.183998,-0.008999,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158998,0.001000,-0.007001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158998,-0.013999,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,0.002000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,0.006000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,0.006000,-0.009001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,0.002000,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.163998,-0.012999,-0.005001, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,-0.012999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,-0.004999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.164998,-0.010999,0.000999, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.164998,-0.005999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,-0.010999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,-0.002999,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,0.012000,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,0.012000,-0.004000, 0.199998,-5.700015,-8.800018, 1.074000,1.108999,1.138000);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132998,-0.003999,0.001999, 0.199998,-5.700015,-8.800018, 1.074000,0.936999,0.979000);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146998,0.003000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
			case 214: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,-0.001999,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.002000,-0.002000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.135000);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.177998,-0.007999,0.004999, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.175998,-0.019999,-0.000000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161998,0.012000,-0.000000, 0.199998,-5.700015,-8.800018, 1.074000,1.087999,1.222000);
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,-0.015999,-0.000000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.165998,0.012000,-0.002000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.165998,0.000000,-0.005000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,-0.018999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,-0.006999,-0.001000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.005999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,0.005000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.169998,-0.009999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.164998,-0.000999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.164998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121998,0.012000,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,-0.001999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.004999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.087999,1.222000);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.000999,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,0.981999,1.143000);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,0.007000,-0.003000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.171998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161998,0.003000,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,-0.009999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,-0.017999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.181998,-0.007999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153998,-0.007999,-0.006000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.179998,-0.007999,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
			default: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,0.004000,-0.004000, 0.199998,-5.500015,-8.800018, 1.074000,1.055999,1.211000);
		}
	}
	else if(type == 9)//†аски
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156998,-0.007000,0.012999, 0.000000,173.499969,-154.900054, 1.151999,1.000000,1.145000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156998,-0.015000,0.012999, 0.000000,173.499969,-149.600036, 1.205000,1.089999,1.200000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.183998,-0.015000,0.012999, 0.000000,173.499969,-149.600036, 1.205000,1.089999,1.200000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.166998,-0.026000,0.008998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,-0.013000,0.008998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,-0.023000,0.009998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145998,-0.023000,0.009998, 0.000000,173.499969,-149.600036, 1.123000,1.089999,1.200000);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,-0.023000,0.006998, 0.000000,177.799987,-149.600036, 1.123000,1.089999,1.200000);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,-0.023000,0.006998, 0.000000,177.799987,-149.600036, 1.123000,1.089999,1.200000);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154998,-0.003000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,-0.026000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,0.002999,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121998,-0.002000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156998,-0.002000,-0.003001, -177.599960,177.799987,169.899948, 1.123000,1.089999,1.200000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.156998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 26: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,-0.002000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,0.004999,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,-0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 39: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,-0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133998,-0.012999,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.095998,-0.012999,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,0.008000,0.000998, -177.599960,179.399978,169.899948, 1.123000,1.089999,1.200000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.169998,-0.019999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143998,-0.007999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 50: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155998,-0.020000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,-0.020000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,-0.020000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.173998,-0.001000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,-0.001000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,0.007999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,0.003999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,-0.010000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,0.000999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 78: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.018000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132998,-0.012000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155998,0.001999,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.003000,-0.004001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.003000,-0.009001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.003000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.175998,0.002999,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146998,-0.002000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146998,-0.002000,-0.006001, -177.599960,179.399978,169.899948, 1.204000,1.089999,1.200000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,-0.011000,-0.005001, -177.599960,179.399978,169.899948, 1.196000,1.089999,1.130000);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.162998,-0.011000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.163998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.325999,1.204999,1.345000);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.016000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.007000,-0.005001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147998,-0.024000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152998,-0.002000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152998,-0.007000,0.001998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,-0.007000,-0.008001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,-0.007000,0.002998, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.166998,-0.007000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.174998,-0.025000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.174998,-0.025000,-0.003001, -177.599960,179.399978,169.899948, 1.247000,1.058999,1.216000);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,-0.012000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,-0.002000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,-0.002000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.008000,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151998,-0.019999,-0.003001, -177.599960,179.399978,169.899948, 1.228000,1.058999,1.356000);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.165998,0.013000,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.165998,-0.001999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.165998,-0.001999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.281000,1.058999,1.356000);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,-0.017999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,-0.017999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132998,-0.007999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.231000,1.058999,1.273000);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161998,-0.002999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.169998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.012999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.166998,-0.021999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.166998,-0.021999,-0.003001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.166998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.305000,1.058999,1.273000);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158998,-0.007999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158998,-0.019999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.164998,0.001000,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.168998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,-0.002999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154998,-0.008999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154998,-0.009999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161998,-0.009999,-0.005001, -177.599960,179.399978,169.899948, 1.197000,1.058999,1.191000);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.197998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.332000,1.058999,1.191000);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.000000,-0.00001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
			default: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.000000,-0.005001, -177.599960,179.399978,169.899948, 1.054000,1.029999,1.130000);
		}
	}
	else if(type == 10)//Њарик 1 19519
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079997,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079997,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.096998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.069998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.069998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.069998,0.013000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.069998,-0.004999,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.069998,0.015000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.069998,-0.011999,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.069998,0.016000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.056998,-0.001000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.070998,-0.001000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.093998,0.010999,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.083998,0.012000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 26: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.070998,0.025000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.073998,0.015000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 39: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.060998,0.015000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.023998,0.003000,0.008999, 0.000000,1.400019,-8.699986, 1.000000,0.953999,0.939999);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.067998,0.023000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.047998,0.015000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.065998,0.015000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.062998,0.008000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.074998,-0.003999,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.074998,0.010000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.070998,0.016000,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.056998,-0.014999,0.004998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110998,0.022000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.075998,-0.016999,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.096998,0.013000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.071998,0.004000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.071998,0.004000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.071998,0.021000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.071998,0.012000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.071998,0.008000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.060998,0.016000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102998,0.016000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102998,0.009000,0.006998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102998,0.009000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.080998,-0.014999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 89: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.068998,-0.001999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.068998,-0.001999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.068998,-0.001999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.068998,-0.018999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.086998,0.002000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.086998,-0.000999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.074998,0.011000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.074998,0.011000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.074998,0.007000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.063998,-0.000999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.063998,-0.000999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.044998,-0.004999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.084998,-0.004999,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.060998,0.011000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.060998,0.011000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.077998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.077998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.077998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.077998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.077998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.018000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.087998,0.018000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.087998,0.018000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.067998,0.011000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.067998,0.009000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.065998,0.004000,0.001998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.075998,0.004000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.075998,0.026000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.075998,0.039000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.075998,0.018000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.065998,0.018000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 231: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.065998,0.018000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 232: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.065998,-0.023999,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.065998,-0.013999,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.043998,-0.010999,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.043998,-0.002999,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.060998,0.009000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.059998,0.009000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.059998,0.009000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.059998,0.009000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.059998,0.014000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.059998,0.014000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.059998,0.014000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.059998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.084998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.084998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.061998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.061998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.072998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.005000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.012000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.067998,0.012000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 293: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.067998,0.006000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.067998,0.016000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.067998,0.012000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.089998,0.000000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.065998,0.002000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.066998,-0.012999,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.088998,0.025000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.076998,0.008000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.076998,0.008000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.076998,0.008000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.076998,0.008000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.076998,0.008000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.076998,0.012000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.070998,0.004000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.070998,0.004000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
			default: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.070998,0.004000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
		}
	}
	else if(type == 11)//Њарик 19274
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.086998,-0.008000,0.006998, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119997,-0.012000,0.006998, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,-0.017000,0.006998, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116998,-0.017000,-0.000001, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.093998,-0.017000,-0.000001, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.093998,-0.017000,-0.000001, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.093998,-0.008000,-0.000001, 0.000000,-8.500098,4.799988, 0.871999,0.842000,0.850999);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.082998,-0.033000,-0.000001, 0.000000,-8.500098,-12.200008, 0.871999,0.740000,0.807999);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.082998,0.005000,-0.000001, 0.000000,-8.500098,-12.200008, 0.871999,0.740000,0.807999);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.740000,0.807999);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.740000,0.807999);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.740000,0.807999);
			case 26: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097998,0.002000,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.821000,0.807999);
			case 39: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,0.002000,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.821000,0.807999);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.043998,-0.013999,-0.000001, 0.000000,-3.300096,1.899989, 0.871999,0.821000,0.807999);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.086998,-0.008999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.086998,-0.008999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.086998,0.004000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.086998,0.004000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.096998,0.004000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.089998,-0.005999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.089998,0.016000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.084998,-0.008999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.091998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.081998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.081998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.081998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.081998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.100998,-0.025999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.095998,0.006000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.095998,0.006000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.086998,-0.020999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104998,-0.010999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.087998,0.004000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103998,-0.000999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103998,-0.008999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103998,-0.021999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103998,-0.005999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094998,-0.014999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094998,-0.003999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.090998,-0.010999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.080998,-0.014999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107998,-0.010999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.082998,-0.019999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098998,-0.001999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098998,-0.012999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098998,-0.015999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098998,-0.008999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098998,-0.008999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098998,-0.002999,-0.003001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.081998,-0.010999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.095998,0.000000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,-0.007999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105998,-0.007999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105998,-0.007999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105998,-0.002999,-0.004001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105998,-0.002999,-0.004001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105998,-0.009999,-0.004001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105998,-0.009999,-0.004001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105998,-0.015999,-0.004001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.088998,-0.020999,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.088998,-0.010999,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.088998,-0.010999,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097998,0.001000,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,-0.001999,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.093998,-0.018999,0.001999, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.079998,-0.018999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.088998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103998,-0.005999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103998,-0.005999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,0.002000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,0.002000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,0.002000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.096998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.088998,-0.031999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.066998,-0.031999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.077998,-0.019999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.089998,-0.002999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.089998,-0.005999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.089998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.081998,0.006000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.081998,0.006000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.081998,0.006000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.081998,-0.017999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.081998,-0.022999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.081998,-0.022999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.091998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.083998,-0.016999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,0.004000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.082998,-0.014999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.100998,0.001000,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.084998,-0.004999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101998,-0.011999,-0.000001, 0.000000,-3.300096,1.899989, 0.786999,0.793000,0.807999);
			default: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.070998,0.004000,0.003998, 0.000000,1.400019,-8.699986, 1.000000,0.890000,0.939999);
  		}
  	}
	else if(type == 12)//Эчки
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.102998,0.030999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.092998,0.039999,-0.001001, 0.000000,90.000000,90.500007, 1.000000,1.058000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.104998,0.044999,-0.000001, 0.000000,90.000000,90.500007, 1.000000,1.099000,1.080000);
			case 4: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.128998,0.026999,-0.001000, 76.200012,73.100074,15.000033, 1.000000,1.130000,1.080000);
			case 5: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.128998,0.037999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.217000,1.080000);
			case 6: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.105997,0.029999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.017000,1.080000);
			case 7: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.098997,0.054999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 8: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.088997,0.040999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 9: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.066997,0.034999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 10: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.081997,0.039999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 11: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.076998,0.039999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 12: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.076998,0.035999,0.001999, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 13: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.082998,0.031999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.134000,1.080000);
			case 14: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.094998,0.056999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 15: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.079998,0.019999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 17: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.098998,0.035999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 19: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.081998,0.035999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 20: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.102998,0.030999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 21: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.093998,0.047999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 22: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.093998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 23: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.102998,0.047999,-0.007000, 138.500000,87.300071,-47.999965, 1.000000,1.166000,1.080000);
			case 24: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.090998,0.037999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.085000,1.080000);
			case 25: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.091998,0.034999,0.000999, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 26: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.086998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 27: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.096998,0.036999,-0.003000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 28: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.096998,0.046999,-0.006000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 29: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.090998,0.051999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 31: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.090998,0.052999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 39: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.080998,0.034999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 40: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.071998,0.030999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 41: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.079998,0.042999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 42: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.091998,0.036999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.145000,1.080000);
			case 44: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.088998,0.041999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,1.029000,1.027000);
			case 46: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.095998,0.059999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 49: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.093998,0.035999,-0.004000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 50: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.105998,0.012999,-0.008000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 54: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.085998,0.052999,-0.000000, 138.500000,87.300071,-47.999965, 1.000000,1.155000,1.027000);
			case 58: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.092998,0.028999,-0.002000, 138.500000,87.300071,-47.999965, 1.000000,0.994000,1.027000);
			case 59: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.092998,0.036999,-0.001000, 138.500000,87.300071,-47.999965, 1.000000,1.100000,1.027000);
			case 60: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.092998,0.050999,-0.005000, 138.500000,87.300071,-47.999965, 1.000000,1.130000,1.027000);
			case 61: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.087998,0.048999,-0.004000, 138.500000,87.300071,-47.999965, 0.880000,0.993001,1.027000);
			case 66: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.097998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 67: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.097998,0.041999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 68: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.091998,0.051999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 69: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.070998,0.048999,-0.002000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 70: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.090998,0.055999,0.005999, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 71: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.090998,0.033999,-0.000000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 72: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.090998,0.053999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 73: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.090998,0.045999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.076001,1.027000);
			case 76: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.072998,0.041999,-0.001000, 138.500000,87.300071,-47.999965, 0.880000,1.127000,1.027000);
			case 78: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.114998,0.023999,0.007999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
			case 79: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.094998,0.036999,0.009999, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
			case 83: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.088998,0.042999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,0.983000,1.027000);
			case 90: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.076998,0.046999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 91: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.071998,0.040999,-0.000000, -121.799896,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 93: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.071998,0.051999,-0.001000, -121.799896,96.400039,-147.299835, 0.880000,1.139000,1.027000);
			case 94: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.045998,0.024999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.950000,1.027000);
			case 95: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.084998,0.013999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,0.982000,1.027000);
			case 96: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.106998,0.041999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
			case 97: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.060998,0.040999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.019000,1.027000);
			case 98: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.094998,0.068999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 101: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.089998,0.042999,0.000999, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 102: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.089998,0.056999,-0.001000, -121.599906,96.400039,-147.299835, 0.880000,1.069000,1.027000);
			case 103: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.116000,1.027000);
			case 105: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.089998,0.050999,-0.000000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
			case 106: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.098998,0.050999,-0.003000, -121.599906,96.400039,-147.299835, 0.880000,1.150000,1.027000);
			case 107: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.100998,0.039999,-0.003000, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
			case 108: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.085998,0.037999,0.002999, -121.599906,96.400039,-147.299835, 1.020000,1.150000,1.027000);
			case 109: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.147000,1.027000);
			case 110: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.085998,0.044999,-0.004000, -121.599906,96.400039,-147.299835, 1.020000,1.126000,1.027000);
			case 111: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.108998,0.029999,-0.003000, -92.899909,88.200088,-176.599822, 1.020000,1.079000,1.027000);
			case 112: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.095998,0.027999,-0.003000, -92.899909,88.200088,-176.599822, 0.904000,0.976999,1.027000);
			case 113: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.109998,0.051999,-0.001000, -92.899909,88.200088,-176.599822, 0.904000,1.115000,1.027000);
			case 117: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
			case 118: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.085998,0.050999,-0.001000, -92.899909,90.100112,-176.599822, 0.904000,1.115000,1.027000);
			case 119: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.091998,0.044999,-0.001000, -92.899909,94.700088,-176.599822, 0.904000,1.115000,1.027000);
			case 120: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.091998,0.040999,0.001999, -92.899909,92.700088,-176.599822, 0.904000,1.115000,1.027000);
			case 121: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.091998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.279000,1.162999);
			case 122: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.088998,0.029999,0.001999, -92.899909,100.800102,-176.599822, 1.055000,1.122000,1.093999);
			case 124: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.101998,0.033999,-0.002001, -92.899909,96.000068,-176.599822, 1.055000,1.122000,1.093999);
			case 125: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.090998,0.033999,-0.002001, -92.899909,92.200057,-174.999862, 1.025000,1.062000,1.093999);
			case 126: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.090998,0.033999,-0.000001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
			case 127: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.101998,0.041999,-0.001001, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
			case 128: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.101998,0.047999,-0.003000, -92.899909,92.200057,-175.999877, 1.025000,1.062000,1.093999);
			case 134: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.082998,0.029999,0.001999, -92.899909,103.300056,-179.899917, 0.871000,1.031000,1.093999);
			case 135: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.071998,0.037999,-0.002000, -92.899909,103.300056,-174.699890, 0.871000,1.031000,1.093999);
			case 136: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.086998,0.025999,-0.002000, -92.899909,103.300056,-173.099945, 0.871000,1.031000,1.093999);
			case 142: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.086998,0.049999,-0.005001, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
			case 147: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.086998,0.031999,0.005999, -92.899909,103.300056,-176.499954, 0.871000,1.085999,1.093999);
			case 148: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.060998,0.045999,0.003999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
			case 150: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.066998,0.043999,0.002999, -92.899909,97.400032,-176.499954, 0.871000,1.085999,1.093999);
			case 153: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.077998,0.023999,0.007999, -92.899909,105.900032,-176.499954, 0.871000,1.085999,1.093999);
			case 154: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.058998,0.040999,-0.002001, -92.899909,96.300025,-176.099960, 0.871000,1.085999,1.093999);
			case 155: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.087998,0.052999,-0.005001, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
			case 160: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.100998,0.028999,-0.001000, -92.899909,96.300025,-177.899948, 0.871000,1.085999,1.093999);
			case 163: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.096998,0.030999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
			case 164: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,97.100036,-177.899948, 0.871000,1.085999,1.093999);
			case 165: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.075998,0.046999,-0.000001, -92.899909,97.100036,-174.299972, 0.871000,1.085999,1.093999);
			case 166: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.074998,0.043999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
			case 169: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.067998,0.040999,-0.000001, -92.899909,97.100036,-175.899978, 0.871000,1.085999,1.093999);
			case 170: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.091998,0.053999,-0.005001, -92.899909,92.100044,-175.899978, 0.871000,1.069999,1.093999);
			case 171: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.091998,0.042999,-0.001000, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
			case 172: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.067998,0.044999,0.001999, -92.899909,92.100044,-175.899978, 0.871000,1.116999,1.093999);
			case 176: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.095998,0.047999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 177: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.095998,0.041999,-0.007001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 179: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.095998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 180: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.099998,0.043999,-0.005001, -92.899909,92.100044,-175.899978, 0.980000,1.186999,1.093999);
			case 181: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.122998,0.036999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
			case 182: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.079998,0.033999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
			case 183: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.093998,0.028999,-0.003000, -92.899909,92.100044,-175.899978, 0.980000,1.043999,1.093999);
			case 184: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.089998,0.050999,-0.006001, -92.899909,92.100044,-175.899978, 0.980000,1.078999,1.093999);
			case 186: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.089998,0.034999,0.000999, -92.899909,92.100044,-176.700012, 0.980000,1.078999,1.093999);
			case 187: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.075998,0.023999,0.004999, -92.899909,105.300056,-176.700012, 0.980000,1.119999,1.093999);
			case 188: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.088998,0.034999,-0.000001, -92.899909,105.300056,-173.700042, 0.980000,1.119999,1.093999);
			case 189: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.092998,0.033999,0.000999, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 190: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 191: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.092998,0.040999,-0.003000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 192: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.087998,0.040999,-0.002000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 193: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 194: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.087998,0.037999,-0.001000, -92.899909,92.900062,-173.700042, 0.980000,1.119999,1.093999);
			case 195: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.087998,0.036999,0.000999, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
			case 200: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.095998,0.037999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,1.119999,1.093999);
			case 202: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 206: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.102998,0.041999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 210: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.084998,0.022999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 211: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.070998,0.040999,-0.001000, -92.899909,92.900062,-176.100021, 0.980000,0.981999,1.093999);
			case 212: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.096998,0.035999,-0.001000, -92.899909,92.900062,-176.100021, 0.839000,0.981999,1.093999);
			case 213: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.098998,0.048999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 214: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.063998,0.045999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 216: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.063998,0.044999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 217: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.093998,0.048999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 219: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.068998,0.044999,-0.003001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 220: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.054998,0.059999,-0.002001, -92.899909,92.900062,-176.100021, 0.839000,1.098999,1.093999);
			case 221: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.096998,0.046999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
			case 222: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.089998,0.053999,-0.001001, -92.899909,92.900062,-176.100021, 0.839000,1.161999,1.093999);
			case 223: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.089998,0.071999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 224: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 225: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 226: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.061998,0.045999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 227: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.109998,0.057999,-0.000001, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 228: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.101998,0.068999,-0.000000, -92.899909,90.000053,-176.100021, 0.839000,1.161999,1.093999);
			case 229: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.073998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,1.161999,1.093999);
			case 230: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.055998,0.035999,-0.000000, -92.899909,103.200050,-176.100021, 0.839000,0.999000,1.093999);
			case 233: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.064998,0.048999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
			case 235: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.053998,0.027999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,0.999000,1.093999);
			case 236: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.084998,0.038999,-0.000000, -92.899909,93.900032,-176.100021, 0.839000,1.093000,1.093999);
			case 239: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.101998,0.021999,0.004999, -92.899909,106.200004,-176.100021, 0.839000,0.959000,1.093999);
			case 240: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.089998,0.051999,0.000999, -92.899909,87.499969,-176.100021, 0.839000,1.129000,1.093999);
			case 247: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.099998,0.051999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.129000,1.093999);
			case 248: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.088998,0.062999,-0.001000, -92.899909,96.499946,-176.100021, 0.839000,1.182000,1.093999);
			case 250: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.088998,0.054999,-0.004000, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
			case 252: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.088998,0.045999,0.000999, -92.899909,96.499946,-176.100021, 0.839000,1.033000,1.093999);
			case 254: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.097998,0.048999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,1.134000,1.093999);
			case 255: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.079998,0.031999,0.005999, -92.899909,96.499946,-176.100021, 0.839000,0.972000,0.954999);
			case 258: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
			case 259: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.086998,0.057999,0.001999, -92.899909,96.499946,-176.100021, 0.839000,1.079000,1.113999);
			case 261: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.094998,0.023999,-0.001001, -92.899909,96.499946,-176.100021, 0.839000,0.945999,1.113999);
			case 262: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.081998,0.048999,-0.002001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
			case 265: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.094997,0.037999,-0.000001, -92.899909,88.299957,-177.600051, 0.839000,1.070999,1.113999);
			case 266: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.103997,0.034999,-0.005001, -92.899909,88.299957,-177.600051, 0.839000,1.097000,1.113999);
			case 267: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.094997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
			case 270: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.093997,0.036999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
			case 272: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.093997,0.050999,-0.001001, -92.899909,97.999961,-175.800079, 0.839000,1.097000,1.113999);
			case 273: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.079997,0.041999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
			case 274: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.088997,0.035999,-0.003001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
			case 275: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.086997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.113999);
			case 276: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.086997,0.033999,-0.001001, -92.899909,91.199951,-177.200103, 0.839000,1.097000,1.027999);
			case 280: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.086997,0.037999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 281: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.085997,0.036999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 282: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.087997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 283: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.082997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 286: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.085997,0.035999,-0.002001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 287: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.072997,0.056999,0.007999, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 288: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.086997,0.034999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 291: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.091998,0.050999,-0.000001, -92.899909,91.199951,-177.200103, 0.839000,1.060999,1.027999);
			case 292: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.075997,0.032000,-0.005001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.083997,0.038999,-0.008001, 97.999969,81.400047,-4.900008, 0.878000,1.000000,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.079997,0.045999,-0.000001, 95.799949,87.600059,-4.900008, 0.878000,1.087000,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.079997,0.040999,-0.000001, 95.799949,67.300048,-4.900008, 0.878000,1.087000,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.090997,0.044999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.090997,0.033999,-0.004001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.090997,0.052999,-0.000001, 95.799949,81.400077,-4.900008, 0.878000,1.087000,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.083997,0.033999,-0.002001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.087997,0.033999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.087997,0.033999,-0.001001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 307: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.066997,0.048999,-0.004001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.066997,0.048999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
			default: SetPlayerAttachedObject (playerid, 8, setobject, 2,  0.086997,0.030999,-0.003001, 95.799949,89.500076,-3.500008, 0.878000,1.042000,1.000000);
		}
	}
	else if(type == 13)//љанданы
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.093999,0.018000,0.001999, -86.200012,-1.500002,-96.000038, 1.029999,1.000000,1.006999);
			case 2: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.083999,0.029000,0.001999, -86.200012,-1.500002,-96.000038, 1.029999,1.000000,1.006999);
			case 3: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.104999,0.024000,0.001999, -86.200012,-1.500002,-96.000038, 1.083999,1.000000,1.107000);
			case 4: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.131999,0.012999,0.001999, -84.100021,5.999998,-96.600036, 1.268999,1.000000,1.107000);
			case 5: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.106999,0.023999,0.001999, -84.100021,5.999998,-96.600036, 1.354999,1.000000,1.107000);
			case 6: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.097999,0.006999,0.001999, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 7: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.076999,0.028999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 8: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.076999,0.020999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 9: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.059999,0.010999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 10: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.059999,0.024999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 11: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.059999,0.018999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 12: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.059999,0.009999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 13: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.059999,0.014999,-0.001000, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 14: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.083999,0.030999,0.000999, -84.100021,5.999998,-96.600036, 1.129999,1.000000,1.041000);
			case 15: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.067999,-0.004000,-0.002000, -84.100021,6.599998,-95.200027, 1.123999,1.000000,1.032000);
			case 17: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.071999,0.018999,-0.002000, -84.100021,6.599998,-95.200027, 1.123999,1.000000,1.032000);
			case 18: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.051999,0.014999,-0.004000, -87.500000,2.199998,-95.200027, 1.123999,1.000000,1.032000);
			case 19: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.062999,0.007999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 20: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.069999,0.005999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 21: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.069999,0.023999,-0.001000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 22: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.057999,0.027999,-0.004000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 23: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.022999,-0.004000, -87.500000,16.199996,-95.200027, 1.123999,1.000000,1.032000);
			case 24: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.003999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.032000);
			case 25: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.008999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
			case 26: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.017999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
			case 27: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.017999,-0.002000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,0.976000);
			case 28: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.025999,-0.006000, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.039000);
			case 29: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.067999,0.034999,0.000999, -87.500000,16.199996,-95.200027, 1.024999,1.000000,1.039000);
			case 30: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.051999,0.019999,-0.007000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.112000);
			case 31: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.051999,0.022999,-0.006000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.112000);
			case 32: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.051999,-0.008000,-0.003000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.975000);
			case 33: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.013999,0.009999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 35: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 36: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 37: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.011999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 38: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.032999,-0.000000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 39: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.056999,0.018999,-0.002000, -87.500000,16.199996,-95.200027, 0.963999,1.000000,0.975000);
			case 40: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.056999,0.006999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.975000);
			case 43: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.012999,0.014999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.884000);
			case 44: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.065999,0.034999,-0.001000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.884000);
			case 45: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.031999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 1.030999,1.000000,0.934000);
			case 46: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.066999,0.033000,-0.004000, -87.500000,16.199996,-95.200027, 1.098999,1.000000,1.053000);
			case 47: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.050999,0.025000,-0.004000, -87.500000,16.199996,-95.200027, 1.098999,1.000000,1.053000);
			case 48: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.059999,0.018000,-0.004000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,1.102000);
			case 49: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.064999,0.014000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
			case 57: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.086999,0.024000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
			case 58: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.067999,0.004000,-0.001000, -87.500000,16.199996,-95.200027, 1.062999,1.000000,0.977000);
			case 59: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.061999,0.017000,-0.001000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
			case 60: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.067999,0.022000,-0.006000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
			case 66: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.067999,0.011000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,0.977000);
			case 67: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.067999,0.015000,-0.000000, -87.500000,16.199996,-95.200027, 1.069999,1.000000,0.930000);
			case 68: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.067999,0.022000,-0.000000, -87.500000,16.199996,-95.200027, 0.967999,1.000000,0.930000);
			case 69: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.048999,0.024000,0.000999, -87.500000,16.199996,-95.200027, 1.033999,1.000000,0.930000);
			case 70: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.060999,0.021000,0.002999, -87.500000,16.199996,-95.200027, 1.033999,1.000000,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.060999,0.026000,0.002999, -87.500000,16.199996,-95.200027, 0.940999,1.000000,0.944000);
			case 73: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.060999,0.026000,0.002999, -87.500000,16.199996,-95.200027, 0.940999,1.000000,0.944000);
			case 78: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.087999,0.009000,0.007999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 79: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.009000,0.007999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 83: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.022000,0.002999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 84: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.018000,0.002999, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 86: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.078999,0.008000,-0.002000, -87.500000,16.199996,-95.200027, 0.983999,1.000000,0.944000);
			case 90: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.047999,0.017999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.020000);
			case 91: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.047999,0.010999,-0.000000, -87.500000,16.199996,-95.200027, 1.031999,1.000000,1.020000);
			case 93: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.047999,0.018999,-0.000000, -87.500000,16.199996,-95.200027, 1.031999,1.000000,1.020000);
			case 95: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,-0.002000,-0.000000, -87.500000,16.199996,-95.200027, 0.877999,1.000000,0.965000);
			case 96: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.066999,0.021999,-0.000000, -87.500000,16.199996,-95.200027, 0.877999,1.000000,0.965000);
			case 97: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.045999,0.007999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,0.965000);
			case 98: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.035000,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
			case 100: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.022999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
			case 101: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.015999,-0.000000, -87.500000,16.199996,-95.200027, 0.986999,1.000000,1.048000);
			case 102: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.015999,-0.000000, -87.500000,16.199996,-95.200027, 1.043999,1.000000,1.048000);
			case 103: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 104: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 105: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.024000,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 106: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 107: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 108: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 109: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 110: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.124999,1.000000,1.048000);
			case 111: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.010999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.984000);
			case 112: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.003999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.917000);
			case 113: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.031999,-0.000000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.008000);
			case 114: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.027999,-0.005000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 115: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.024999,-0.004000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 116: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.055999,0.024999,-0.007000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 117: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.055999,0.013999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 118: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.055999,0.013999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,1.046000);
			case 119: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.055999,0.019999,-0.002000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.968000);
			case 120: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.055999,0.019999,-0.003000, -87.500000,16.199996,-95.200027, 0.987999,1.000000,0.968000);
			case 121: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.072999,1.000000,1.123000);
			case 122: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.072999,1.000000,1.123000);
			case 123: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.055999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.117999,1.000000,1.177000);
			case 124: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.010999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,1.177000);
			case 125: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.064999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 126: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.064999,0.016999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 127: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.064999,0.024999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 128: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.064999,0.035999,0.000999, -87.500000,16.199996,-95.200027, 1.023999,1.000000,0.996000);
			case 134: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.064999,0.010999,0.000999, -87.500000,16.199996,-95.200027, 0.912999,1.000000,0.925000);
			case 135: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.055999,0.023999,0.000999, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
			case 137: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,-0.002000,-0.004000, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
			case 141: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035999,0.020999,0.000999, -87.500000,16.199996,-95.200027, 0.920999,1.000000,0.925000);
			case 142: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.066999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 0.997999,1.000000,1.059000);
			case 143: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.057999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 147: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.064999,0.009999,0.005999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 148: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 150: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 152: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.046999,0.006999,0.000999, -87.500000,16.199996,-95.200027, 1.084999,1.000000,1.059000);
			case 153: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.062999,0.014999,0.000999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.927000);
			case 154: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.039999,0.014999,-0.002000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.927000);
			case 155: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.061999,0.023999,-0.006000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,1.068000);
			case 160: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.071999,0.024999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 163: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.076999,0.016999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 164: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.076999,0.016999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 165: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.031999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 166: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.020999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 169: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.020999,0.001999, -87.500000,16.199996,-95.200027, 0.992999,1.000000,0.903000);
			case 170: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.065999,0.018999,-0.006000, -87.500000,16.199996,-95.200027, 0.992999,1.000000,1.045000);
			case 171: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.065999,0.012999,-0.004000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 172: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.039999,0.014999,0.000999, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 173: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.068999,0.030999,0.000999, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 174: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 175: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 176: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 177: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.068999,0.022999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 179: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.068999,0.025999,-0.002000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 180: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.068999,0.020999,-0.004000, -87.500000,16.199996,-95.200027, 1.056999,1.000000,1.045000);
			case 181: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.098999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 182: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.040999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 183: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.069999,0.009999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 184: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.069999,0.026999,-0.004000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 185: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.046999,0.018999,-0.001000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 186: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.059999,0.013999,-0.001000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,1.014000);
			case 187: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.059999,0.013999,0.007999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 188: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.050999,0.025999,0.002999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 189: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.050999,0.016999,-0.001000, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 190: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.050999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 191: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.050999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 193: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.050999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 1.035999,1.000000,1.014000);
			case 194: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.050999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 195: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.059999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 200: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.066999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 202: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.019999,0.000999, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 203: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 204: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.070999,0.019999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 206: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.082000,0.020999,-0.004000, -87.500000,16.199996,-95.200027, 0.990999,1.000000,1.014000);
			case 208: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.046999,0.018999,-0.003000, -87.500000,16.199996,-95.200027, 0.892999,1.000000,1.014000);
			case 210: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.061999,0.007999,-0.000000, -87.500000,16.199996,-95.200027, 0.995999,1.000000,0.883000);
			case 211: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.045999,0.026999,-0.002000, -87.500000,16.199996,-95.200027, 0.995999,1.000000,0.883000);
			case 212: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.072999,0.024999,-0.003000, -87.500000,16.199996,-95.200027, 0.859000,1.000000,0.883000);
			case 213: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.072999,0.038999,-0.003000, -87.500000,16.199996,-95.200027, 0.962999,1.000000,0.883000);
			case 214: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.043999,0.019999,-0.000000, -87.500000,16.199996,-95.200027, 1.060999,1.000000,0.894000);
			case 217: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.068999,0.022999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,0.894000);
			case 220: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.015000,0.029999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
			case 221: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.051999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
			case 222: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.051999,0.015999,0.000999, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.113000);
			case 223: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.051999,0.025999,-0.002000, -87.500000,16.199996,-95.200027, 0.953999,1.000000,1.205000);
			case 227: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.075999,0.021999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,1.087000);
			case 228: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.075999,0.030999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,1.087000);
			case 229: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.059999,0.010999,-0.000999, -87.500000,16.199996,-95.200027, 1.115999,1.000000,0.965000);
			case 233: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.051999,0.018999,0.000000, -87.500000,16.199996,-95.200027, 1.033999,1.000000,0.965000);
			case 234: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.051999,-0.004000,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 235: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.030999,0.003999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 236: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.050999,0.028999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 237: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.050999,0.009999,0.000000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 239: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.081999,0.015999,0.009000, -87.500000,16.199996,-95.200027, 0.905999,1.000000,0.914000);
			case 240: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.067999,0.016999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 247: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.067999,0.016999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 248: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.067999,0.032999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 249: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.058999,0.032999,0.000000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 250: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.058999,0.023999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 252: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.055999,0.019999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 254: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.071999,0.020999,-0.001999, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 255: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.003999,0.005000, -87.500000,16.199996,-95.200027, 1.009999,1.000000,1.047000);
			case 258: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.010999,0.005000, -87.500000,16.199996,-95.200027, 1.129998,1.000000,1.158000);
			case 259: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.063999,0.010999,0.005000, -87.500000,16.199996,-95.200027, 1.129998,1.000000,1.158000);
			case 262: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.041999,0.014999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.052999,0.006999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.061999,-0.000000,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.061999,0.008999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 269: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.061999,0.012999,-0.001999, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 270: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.061999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 271: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.078999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.979998,1.000000,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.078999,0.019999,0.000000, -87.500000,16.199996,-95.200027, 1.079998,1.000000,1.043000);
			case 273: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 1.079998,1.000000,1.043000);
			case 274: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 275: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.006999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 276: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 280: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 281: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 282: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 283: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.012999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.949000);
			case 284: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.024999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 285: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.016999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 286: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,-0.001000,-0.002999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 287: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.010999,0.008000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,1.064000);
			case 288: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.005999,-0.000999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 289: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.005999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 290: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.013999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 291: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.027999,0.004000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 292: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.053999,0.007999,-0.003999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 293: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.069999,0.011999,-0.006999, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 294: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.061999,0.012999,0.003000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 295: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.061999,0.020999,0.001000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 296: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.078999,0.020999,0.000000, -87.500000,16.199996,-95.200027, 0.973998,1.000000,0.982000);
			case 297: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.078999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
			case 298: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.078999,0.008999,0.000000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
			case 299: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.078999,0.017999,0.003000, -87.500000,16.199996,-95.200027, 1.062998,1.000000,1.082000);
			case 300: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 301: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 302: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 303: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 304: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 305: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.061999,0.011999,0.001000, -87.500000,16.199996,-95.200027, 0.955998,1.000000,0.975000);
			case 306: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.046999,0.017999,0.001000, -87.500000,16.199996,-95.200027, 1.059998,1.000000,1.062000);
			case 307: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
			case 308: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
			case 309: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.046999,0.017999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,1.062000);
			case 310: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.046999,0.006999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,0.949000);
			case 311: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.046999,0.011999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,0.949000);
			default: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.046999,0.011999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,0.949000);
		}
	}
	else if(type == 14)//Наушники
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.286000,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
			case 2: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.303999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
			case 3: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.293999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
			case 4: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.334999,0.089000,-0.006000, -90.599975,-121.999969,92.599967, 1.040000,1.044999,1.000000);
			case 5: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.355999,0.071000,0.005000, -81.499992,-113.599922,94.599967, 1.099000,1.044999,1.000000);
			case 6: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.347999,0.090000,0.000000, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
			case 7: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.323998,0.104999,-0.008999, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
			case 8: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.301999,0.112999,0.001999, -90.599975,-121.999969,92.599967, 1.000000,1.000000,1.000000);
			case 9: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.314998,0.089999,0.001999, -90.599975,-108.399971,91.199943, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.243998,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 11: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.333998,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.313999,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 13: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.361999,0.084000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 14: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.338999,0.102000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 15: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.325999,0.096000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 16: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.367999,0.096000,-0.006000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 17: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.346999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.299998,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 19: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.354999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.336999,0.096000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.336999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 22: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.357999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 23: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 24: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.333999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.349999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 27: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.338999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 28: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.343999,0.096000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.342999,0.102000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 33: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.294999,0.092000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 34: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.348999,0.108000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 35: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.328999,0.108000,-0.004999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 36: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.324999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 37: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.324999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 38: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.251999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 39: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.251999,0.101000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 40: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.298999,0.086000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 43: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.277999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 44: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.277999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 45: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.299999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 46: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.323999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 47: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.334999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 48: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.343999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 57: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.354999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 58: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.278999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 59: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.319999,0.100000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 60: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.344999,0.109000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 61: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.319999,0.109000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 66: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 67: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 68: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 69: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 70: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.327999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 71: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.333999,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 72: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.320999,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 73: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.320999,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 76: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.329998,0.094000,0.001000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 78: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.380998,0.109999,0.003000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 79: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.364998,0.109999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 90: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.337998,0.100000,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 91: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.337998,0.100000,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 93: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.328998,0.094999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 94: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.260998,0.094999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 95: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.266998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 96: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.360998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 97: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.311998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 98: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.318998,0.098999,0.000000, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 100: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.341998,0.098999,-0.002999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 102: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.331998,0.102999,-0.008999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 105: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.366998,0.082000,-0.000999, -90.599975,-104.999977,92.599967, 1.000000,1.000000,1.000000);
			case 106: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.326998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 107: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.326998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 108: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 109: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 110: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.334998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 111: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.360998,0.100999,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 112: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.309998,0.084999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 113: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.332998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 114: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.339998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 115: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.335998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 116: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.335998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 117: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.304998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 118: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.304998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 119: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.327998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 120: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.327998,0.087999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 121: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.339998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 122: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.329998,0.091999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 123: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.329998,0.091999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 124: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.337998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 125: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.335998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 126: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.335998,0.097999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 127: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.335998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 128: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.316998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 134: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.247998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 136: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.247998,0.099999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 137: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.319998,0.089999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 141: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.319998,0.089999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 142: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.339998,0.097999,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 143: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.348998,0.109000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 147: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.322998,0.109000,0.007000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 148: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.322998,0.095000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 150: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.322998,0.095000,0.002000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 153: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.322998,0.110000,0.008000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 154: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.312998,0.110000,-0.004999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 155: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.340998,0.110000,-0.010999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 156: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.327998,0.110000,-0.005999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 160: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.303998,0.098000,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 163: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.361998,0.098000,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 164: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.355998,0.107000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 165: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.271998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 166: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.271998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 170: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 171: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 172: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.340998,0.092000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 173: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 174: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 175: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 176: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 177: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 179: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 180: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.337998,0.102000,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 181: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.337998,0.086000,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 182: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.326998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 183: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.333998,0.103999,-0.001999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 184: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.340998,0.103999,-0.006999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 185: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.330998,0.090999,-0.006999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 186: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.330998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 187: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.329998,0.111999,0.013000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 188: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.329998,0.099999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 189: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.326998,0.099999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 190: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 191: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 193: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 194: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.340998,0.090999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 195: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.358998,0.101999,0.000000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 200: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.331998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 202: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.324998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 206: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.324998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 208: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.318998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 210: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.256998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 211: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.330998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 212: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.252998,0.098999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 217: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.327998,0.103999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 219: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.322998,0.091999,0.003000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 220: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.322998,0.091999,0.003000, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 221: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.351998,0.111999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 222: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.351998,0.111999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 223: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.337998,0.092999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 227: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.361998,0.096999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 228: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.331998,0.109999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 229: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.274998,0.109999,-0.003999, -90.599975,-104.999977,92.599967, 1.033000,1.000000,1.000000);
			case 230: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.301998,0.101999,-0.003999, -90.599975,-104.999977,92.599967, 1.109000,1.000000,1.000000);
			case 233: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.336998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
			case 234: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.277998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
			case 235: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.268998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 0.950000,0.974000,1.000000);
			case 236: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.274998,0.093999,-0.003999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 239: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.387998,0.111999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 240: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.325998,0.087999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 247: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.345998,0.103999,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 248: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.345998,0.103999,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 250: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.334998,0.103999,-0.002999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 252: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.334998,0.103999,-0.005999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 254: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.334998,0.103999,-0.005999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 255: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.332998,0.103999,0.009000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 258: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.348998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 259: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.348998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 261: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.276998,0.103999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 262: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.317998,0.083999,0.001000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 265: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.317998,0.083999,-0.004999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 266: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.304998,0.070999,-0.004999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 267: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.531998,0.082000,-0.039000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 269: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.368998,0.068000,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 270: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.355998,0.091000,-0.007999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 271: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.339998,0.094000,0.002000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 272: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.334998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 273: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.315998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 274: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 275: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 276: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 280: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 281: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 282: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 283: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.342998,0.094000,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 284: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.342998,0.104999,-0.001999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 285: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.342998,0.090999,0.002000, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 286: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.337998,0.086999,-0.003999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 287: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.345998,0.097999,-0.000999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 288: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.341998,0.097999,-0.000999, -90.599975,-104.999977,92.599967, 1.022999,0.974000,1.000000);
			case 289: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.307996,0.097000,-0.000999, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 290: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.307996,0.097000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 291: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.307996,0.097000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 292: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.328996,0.074000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 293: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.338996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 294: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.338996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 295: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.260996,0.084000,0.002001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 296: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.260996,0.093999,0.007001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 297: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.318996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 298: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.312996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 300: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 301: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 302: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 303: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 304: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 305: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.331996,0.099999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 306: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 307: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 308: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 309: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 310: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			case 311: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
			default: SetPlayerAttachedObject(playerid, 9, setobject, 1, 0.326996,0.093999,0.000001, -94.199966,-113.199882,85.200004, 1.000000,1.000000,1.000000);
		}
	}
	else if(type == 15)//Дасы
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.003998,-0.001999, 51.200016,53.199977,142.800018, 0.963999,0.916999,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.001999,-0.005999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.001999,-0.007999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.001999,-0.012999, 51.200016,53.199977,142.800018, 1.226999,1.173999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.018998,-0.000999, 51.200016,70.499969,142.800018, 1.354999,1.441999,1.000000);
			case 8: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.003998,-0.011999, 51.200016,70.499969,142.800018, 1.354999,1.441999,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 13: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011000,-0.007998,-0.001999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.002998,-0.015999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.010998,-0.012999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.102999,1.100999,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 23: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.006998,-0.006999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 24: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.018999,-0.009998,-0.011999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.008998,-0.008999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.008998,-0.008999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.008998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.003998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 31: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.003998,-0.005999, 51.200016,70.499969,142.800018, 1.236999,1.188999,1.000000);
			case 32: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.003998,0.008001, 51.200016,70.499969,142.800018, 0.964999,0.921999,1.000000);
			case 34: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.010999,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 35: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.054000,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 36: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.054000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 37: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.054000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 38: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.024000,-0.003998,-0.015999, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.024000,-0.003998,-0.010998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 41: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.005998,0.001001, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 42: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.005998,-0.012998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.005998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.005998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.015998,-0.008998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,-0.008998,-0.008998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.004000,0.001001,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,0.001001,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.007998,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 51: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.010998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 52: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.010998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 53: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.003998,-0.011998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.003998,-0.001998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.003998,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.026999,0.005001,-0.003998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003000,-0.003998,-0.007998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003000,-0.011998,-0.004998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003000,-0.002998,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 61: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.011999,-0.014998,-0.000998, 51.200016,70.499969,142.800018, 1.078999,1.170999,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.007998, 51.200016,70.499969,142.800018, 1.271999,1.359999,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.007998, 51.200016,70.499969,142.800018, 1.271999,1.359999,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.010998,-0.004998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
			case 78: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 0.990999,1.040999,1.000000);
			case 79: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.014998,-0.005998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.014998,-0.005998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,0.001001,-0.028998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.004998,-0.007998, 51.200016,70.499969,142.800018, 1.145999,0.990999,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
			case 94: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.009998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.001998,-0.004998, 51.200016,70.499969,142.800018, 0.925999,0.990999,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.017998,-0.008998, 51.200016,70.499969,142.800018, 1.093999,1.223999,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.040998,-0.008998, 51.200016,70.499969,142.800018, 1.093999,1.223999,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.002998,0.001001, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.002998,-0.002998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.007998,-0.006998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.003998,-0.004998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 104: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,0.001001,-0.001998, 51.200016,70.499969,142.800018, 1.216999,1.287999,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.026999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.363999,1.386999,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.026999,0.000001,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 107: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.014999,0.000001,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.014999,-0.003998,0.005001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.022999,-0.008998,-0.012998, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.001001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 116: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.001001, 51.200016,70.499969,142.800018, 1.281999,1.385999,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.006000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.128999,1.127999,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.004999,-0.007998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.004999,-0.001998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.004999,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.004999,-0.010998,-0.003998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.007000,-0.010998,-0.010998, 51.200016,70.499969,142.800018, 1.232999,1.381999,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.007000,-0.004998,-0.005998, 51.200016,70.499969,142.800018, 1.232999,1.202999,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.024999,-0.005998,-0.005998, 51.200016,70.499969,142.800018, 1.232999,1.202999,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,-0.011998,0.013001, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
			case 133: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,-0.005998,-0.008998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
			case 134: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,-0.012998,-0.005998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
			case 142: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.004998,-0.001998, 51.200016,70.499969,142.800018, 1.088000,0.977999,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.004998,-0.001998, 51.200016,70.499969,142.800018, 0.984000,0.977999,1.000000);
			case 149: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.015998,-0.001998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.010998,-0.005998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.013998,-0.005998, 51.200016,70.499969,142.800018, 1.120999,1.087999,1.000000);
			case 155: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.000998,-0.005998, 51.200016,70.499969,142.800018, 1.250000,1.087999,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.009999,-0.000998,-0.009998, 51.200016,70.499969,142.800018, 1.064000,1.210999,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.009998,-0.008998, 51.200016,70.499969,142.800018, 1.064000,1.210999,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.212000,1.210999,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.009998,-0.003998, 51.200016,70.499969,142.800018, 1.212000,1.210999,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.004998,-0.004998, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.001998,-0.004998, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
			case 167: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.021000,-0.010998,-0.013999, 51.200016,70.499969,142.800018, 1.310000,1.304999,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.005998,-0.004998, 51.200016,70.499969,142.800018, 1.016000,1.304999,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.005998,0.002001, 51.200016,70.499969,142.800018, 1.292000,1.304999,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.005998,-0.007998, 51.200016,70.499969,142.800018, 1.292000,1.304999,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.008998,0.001001, 51.200016,70.499969,142.800018, 0.956000,1.095999,1.000000);
			case 173: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.006998,0.000001, 51.200016,70.499969,142.800018, 1.195000,1.197999,1.000000);
			case 174: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.195000,1.197999,1.000000);
			case 175: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.450000,1.353999,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.000001, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 181: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.017998,-0.008998, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.011998,-0.001998, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.008998,-0.010999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.001998,0.000000, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.008999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.008999, 51.200016,70.499969,142.800018, 1.205000,1.137999,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 195: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.007998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 196: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 198: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.014998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.021999,-0.008998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 201: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.021999,-0.008998,-0.000999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 202: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,-0.004999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 209: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,0.008000, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.007998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 211: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.011998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 214: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.011998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 215: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.006998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 216: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.006998,-0.003999, 51.200016,70.499969,142.800018, 1.041000,1.137999,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.003998,-0.003999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 220: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.010998,-0.003999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 224: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 225: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.219999,1.255999,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.005998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.003998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 231: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.003998,-0.006999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 233: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.006998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.006998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.074999,1.255999,1.000000);
			case 239: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.012998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.009998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.002998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 255: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.008998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 263: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.004998,-0.002999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 269: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.003999,-0.015998,-0.005999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 270: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.004998,0.005001, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 271: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.009000,-0.008998,-0.006999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.020000,-0.013998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.008000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 283: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.005998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 285: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.001000,-0.002998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 287: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.008998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 288: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 289: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.015000,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 7, setobject, 6, 0.001999,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.050999,-0.003998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.028999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 307: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
			default: SetPlayerAttachedObject (playerid, 7, setobject, 6, -0.003999,-0.004998,-0.009999, 51.200016,70.499969,142.800018, 1.234999,1.255999,1.000000);
		}
	}
	else if(type == 16)//Цюкзаки 1
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.204000,-0.064999,-0.002999 ,  -0.600000,-1.100000,0.000000 ,  1.075999,0.918998,0.905000);
			case 2: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.237000,-0.064999,-0.002999 ,  -0.600000,-1.100000,0.000000 ,  1.075999,0.918998,0.905000);
			case 3: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.228000,-0.062999,-0.002999 ,  -0.600000,-1.100000,0.000000 ,  1.075999,0.918998,0.905000);
			case 4: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.194000,-0.056999,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,0.918998,0.905000);
			case 5: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.194000,-0.117999,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,1.000998,0.905000);
			case 6: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.194000,-0.079999,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,1.000998,0.905000);
			case 7: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.219000,-0.057999,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  1.075999,1.000998,0.905000);
			case 8: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.207000,-0.061999,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.962998,0.834000);
			case 9: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.207000,-0.058999,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.962998,0.834000);
			case 10: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.262000,-0.071999,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.962998,0.834000);
			case 11: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.189000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 12: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.184000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 13: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.116000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 14: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.158000,-0.068000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 15: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.153999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 17: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.156000,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 18: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.184999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 19: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.129999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 20: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.159999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 21: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.159999,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 22: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.243000,-0.077000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 23: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.167000,-0.077000,-0.014999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 24: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.145000,-0.077000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 25: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.145000,-0.077000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 28: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.145000,-0.077000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 29: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.188000,-0.103000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 30: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.188000,-0.103000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 31: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.239000,-0.103000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 32: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.173000,-0.068999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 33: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.199000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 34: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.150000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 35: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.161000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 36: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.161000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 37: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.161000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 38: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.222000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 39: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.222000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 40: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.172000,-0.080999,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 41: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.172000,-0.067000,-0.017999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 42: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.172000,-0.067000,-0.017999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 43: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.196000,-0.067000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 44: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.203000,-0.067000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 45: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.171999,-0.067000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 46: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 47: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 48: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 49: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 50: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.151999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 53: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.218999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 54: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.232999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 55: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.174999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 56: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.174999,-0.074000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 57: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.116999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 58: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.202999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 59: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 60: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 61: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 62: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 65: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.115999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 66: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 67: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 68: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 69: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.141999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 70: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.146999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 71: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.146999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 72: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.155999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 73: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.167999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 76: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.162999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 77: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.207999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 78: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.118999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 79: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.143999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 82: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.156999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 83: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.136999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 84: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.136999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.834000);
			case 86: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.153999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  1.049000,0.911998,0.888999);
			case 88: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.124999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.911998,0.753999);
			case 89: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.124999,-0.085000,-0.010999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.911998,0.753999);
			case 90: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.048999,-0.057000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.999998,0.826000);
			case 91: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.048999,-0.057000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000);
			case 93: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.048999,-0.067000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000);
			case 94: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.122999,-0.067000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000);
			case 95: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.113999,-0.067000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000);
			case 96: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.022999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000);
			case 97: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.071999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.696000);
			case 98: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.058999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.806000);
			case 100: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.046999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.719998,0.806000);
			case 101: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.046999,-0.112000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.853998,0.900000);
			case 102: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.055999,-0.081000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.840000,0.853998,0.900000);
			case 103: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.055999,-0.123000,-0.008999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000);
			case 104: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.097999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000);
			case 105: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.035999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000);
			case 106: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.088999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000);
			case 107: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.093999,-0.101000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000);
			case 108: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000);
			case 109: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000);
			case 110: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000);
			case 111: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.051999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.987000);
			case 112: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.107999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 113: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.085999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 114: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 115: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.082999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 116: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.082999,-0.069000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 117: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.105999,-0.080000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 118: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.105999,-0.080000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 119: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.105999,-0.080000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 120: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.105999,-0.080000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 121: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.084999,-0.101000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 122: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.084999,-0.101000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 123: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.098999,-0.101000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 124: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.096999,-0.076000,-0.015999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 125: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.096999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 126: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.096999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 127: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.105999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 128: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.112999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 129: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.186999,-0.076000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 130: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.153999,-0.085000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 131: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.078999,-0.069000,-0.003999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 132: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.175999,-0.069000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 133: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.089999,-0.078000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 134: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.156999,-0.064000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 135: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.093999,-0.094000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.881000);
			case 136: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.161999,-0.082000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 137: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.111999,-0.086000,-0.006999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 142: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.076999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 143: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.084999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 144: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.084999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 146: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.084999,-0.094000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 147: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.099999,-0.068000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 148: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.099999,-0.068000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 150: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.099999,-0.060000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 151: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.099999,-0.081000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 152: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.115999,-0.064000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 153: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.089999,-0.072000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 154: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.107999,-0.072000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 155: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.077999,-0.086000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 156: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.083999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 157: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.089999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 158: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.089999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 159: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.089999,-0.086000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 160: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.105999,-0.065000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 161: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.067999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 162: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 163: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.050999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 164: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.050999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 165: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.127999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 166: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.127999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 170: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.065999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 171: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.084999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 172: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.095999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 173: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 174: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 175: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 176: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 177: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 179: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.081999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 180: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.079999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 181: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.066999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 182: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.088999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 183: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.088999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 184: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.078999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 185: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.092999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 186: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.092999,-0.072000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 187: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.092999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 188: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.083999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 189: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.094999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 190: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.058999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 191: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.058999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 192: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.065999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 193: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.065999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 194: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 195: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.044999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 198: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.075999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 200: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.078999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 201: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.078999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 202: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 203: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.077999,-0.072000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 204: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.077999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 206: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.075999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 207: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 208: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.095999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 210: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.154999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 211: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.063999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 212: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.148999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 213: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.078999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 214: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 215: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 216: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.092999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 217: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.078999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 219: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.083999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 220: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 221: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 222: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 223: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 224: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 225: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.085999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 226: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.103999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 227: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.043999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 228: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.068999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 229: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.139999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 230: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.103999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 233: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.067999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 234: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.131999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 235: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.131999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 236: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.131999,-0.072000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 239: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.045999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 240: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.085999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 247: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.072999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 248: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.075999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 250: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.078999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 252: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.063999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 253: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.113999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 254: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.062999,-0.078000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 255: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.077999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 258: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.077999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 259: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.077999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 261: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.130999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 262: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.082999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 263: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.088999,-0.078000,-0.002999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 265: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.089999,-0.078000,-0.011999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 266: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.097999,-0.078000,-0.011999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 267: SetPlayerAttachedObject (playerid, 6, setobject, 1,   0.121000,-0.078000,-0.030000 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 269: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.064999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 270: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.064999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 271: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 272: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.102999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 273: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.109999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 274: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.066999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 275: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.066999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 276: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.066999,-0.102000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 280: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.065999,-0.090000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 281: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.073999,-0.090000,-0.012999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 282: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.080999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 283: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.080999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 284: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.088999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 285: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.069999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 286: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.069999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 287: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.073999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 288: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.073999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 289: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.079999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 290: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.079999,-0.090000,-0.005999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 291: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.084999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 292: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.057999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 293: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.060999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 294: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.070999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 295: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.135999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 296: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.130999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 297: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.082999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 298: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.082999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 299: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.050999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 300: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 301: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 302: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 303: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 304: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 305: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.090000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 306: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 307: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 308: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 309: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 310: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			case 311: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
			default: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
		}
	}
	else if(type == 17)//Цюкзаки 2
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.008999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 2: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.087999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 3: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.041999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 4: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.005999,-0.116999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 5: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.005999,-0.181999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 6: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.012000,-0.139999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 7: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.008999,-0.139999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 8: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.019000,-0.122999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 9: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.000999,-0.107999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 10: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.077999,-0.127999,-0.013000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 11: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.030000,-0.105999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 12: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.033999,-0.099999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 13: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.048000,-0.099999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 14: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.010000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 15: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.010000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 17: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 18: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 19: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 20: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.019000,-0.091999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 21: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 22: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 23: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 24: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 25: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 28: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.019000,-0.108999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 29: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.021999,-0.126999,-0.007999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 30: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 32: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 33: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 34: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 35: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 36: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 37: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.007000,-0.114999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 40: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 41: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 42: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.007000,-0.105999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 43: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.007000,-0.098999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 44: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.018999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 45: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.018999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 46: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.011000,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 47: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.011000,-0.118999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 48: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.032000,-0.118999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 49: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.032000,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 53: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.066999,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 54: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.066999,-0.109999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 55: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.008999,-0.097999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 56: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.008999,-0.087999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 57: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.037000,-0.125999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 58: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.038999,-0.099999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 59: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.011000,-0.099999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 60: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.033000,-0.117999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 61: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.007999,-0.117999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 62: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.020999,-0.106999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 65: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.010000,-0.103999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 66: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.010000,-0.122999,-0.003000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 67: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.010000,-0.122999,-0.003000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 68: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.010000,-0.122999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 69: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.031000,-0.115999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 70: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.013999,-0.115999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 71: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.046000,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 72: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.007999,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 73: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.002000,-0.123999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 76: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.017999,-0.116999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 77: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.051999,-0.116999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 78: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.048000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 79: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.008999,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 82: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.024000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 83: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.039000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 84: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.039000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 85: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.002000,-0.113999,-0.010999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 86: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.023999,-0.121999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 88: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.049999,-0.111999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 90: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.009000,-0.094999,-0.005999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 93: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.009000,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 94: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.067999,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 95: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.030999,-0.109999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 96: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.045000,-0.120999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 97: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.004000,-0.107999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 98: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.004000,-0.107999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 100: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.023000,-0.101999,-0.006999, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 101: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.023000,-0.140999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 102: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.026999,-0.131999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 103: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.026999,-0.159999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 104: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.044999,-0.156999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 105: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.012999,-0.170999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 106: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.049999,-0.147999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 107: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.049999,-0.147999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 108: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.033000,-0.096999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 109: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.008000,-0.114999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 110: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.008000,-0.114999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 111: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.008000,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 112: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.022999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 113: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.041999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 114: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.005999,-0.123999,-0.012000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 115: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.005999,-0.135999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 116: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.005999,-0.135999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 117: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 118: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 119: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 120: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 121: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.005999,-0.126999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 122: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.005999,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 123: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.005999,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 124: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.029000,-0.102999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 125: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.029000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 126: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.029000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 127: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.004000,-0.102999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 128: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.023000,-0.093999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 132: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.050999,-0.093999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 133: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.017000,-0.094999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 134: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.035999,-0.091999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 135: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.035999,-0.127999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 136: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.035999,-0.098999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 137: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.018999,-0.089999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 141: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.018000,-0.084999,-0.004000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 142: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.006999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 143: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.006999,-0.084999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 147: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.006999,-0.100999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 148: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.006999,-0.100999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 150: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.006999,-0.087999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 151: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.006999,-0.135999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 152: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 153: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 154: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.006999,-0.095999,-0.014000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 155: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.006999,-0.122999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 157: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.001000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 158: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.001000,-0.105999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 159: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.001000,-0.105999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 160: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.001000,-0.093999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 161: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.023000,-0.102999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 163: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.042000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 164: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.042000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 165: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.045999,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 166: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.045999,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 167: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.004000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 168: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.004000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 169: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.004000,-0.086999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 170: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.004000,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 171: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.004000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 172: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.004000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 173: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 174: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 175: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.022000,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 176: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.022000,-0.119999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 177: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.022000,-0.119999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 179: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.022000,-0.106999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 180: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.022000,-0.107999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 181: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.035000,-0.106999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 182: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 183: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 184: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 185: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 186: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.000999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 187: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 188: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 189: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.000999,-0.109999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 190: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.040000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 191: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.040000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 192: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 193: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 194: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 195: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.023000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 196: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.047999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 198: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.030000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 199: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.067999,-0.101999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 200: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.007000,-0.101999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 201: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.021000,-0.094999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 202: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 206: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 208: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 210: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 211: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.021000,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 212: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.033999,-0.100999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 213: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.033999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 214: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 215: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 216: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 217: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.015999,-0.108999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 219: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.004000,-0.103999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 220: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 221: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 222: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.027999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 223: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.035000,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 226: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.024999,-0.087999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 227: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.018000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 228: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.018000,-0.099999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 229: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.030999,-0.085999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 230: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.003999,-0.085999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 233: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.024000,-0.093999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 234: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 235: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 236: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.013999,-0.080999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 239: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.026000,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 240: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.003999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 241: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.003999,-0.124999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 242: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.003999,-0.124999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 243: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.003999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 247: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.031999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 248: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.004999,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 250: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.008000,-0.110999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 252: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.068000,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 253: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.010999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 254: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.023999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 255: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.023999,-0.098999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 258: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.016000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 259: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.002999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 261: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.039999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 262: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.039999,-0.111999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 265: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.022999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 266: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.022999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 267: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.231000,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 268: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.004999,-0.120999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 269: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.004999,-0.157999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 270: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.004999,-0.129999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 271: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.004999,-0.129999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 272: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.033000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 273: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.010000,-0.116999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 274: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 275: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 276: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.051999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 280: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.040999,-0.123999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 281: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 282: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 283: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.040999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 284: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.005999,-0.117999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 285: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.019999,-0.130999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 286: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.002000,-0.136999,-0.008000, 0.000000,87.699974,0.000000, 1.075999,1.079998,1.029000);
			case 287: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.054000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 288: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.054000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 289: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.018000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 290: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.018000,-0.133000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 291: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.001000,-0.127999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 292: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.048000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 293: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.055000,-0.119000,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 294: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.041000,-0.130999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 295: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.073999,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 296: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.073999,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 297: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.008000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 298: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.048000,-0.106999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 299: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.048000,-0.123999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 300: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 301: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 302: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 303: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 304: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 305: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.033000,-0.117999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 306: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 307: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 308: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 309: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.033000,-0.108999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 310: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.018000,-0.120999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			case 311: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.018000,-0.120999,0.000000, 0.000000,90.000000,0.000000, 1.052999,0.896999,0.982001);
			default: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
		}
	}
	else if(type == 18)//Цюкзаки 3
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.089999,-0.054999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.120000,1.079998,1.029000);
			case 2: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.085000,-0.054999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.120000,1.079998,1.029000);
			case 3: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.085000,-0.054999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.120000,1.079998,1.029000);
			case 4: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.099000,-0.046999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.067000,1.079998,1.029000);
			case 5: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.078000,-0.047999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.330000,1.319998,1.228000);
			case 6: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.095000,-0.047999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.978000,1.154998,1.164000);
			case 7: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.049000,-0.039000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.084000,1.154998,1.164000);
			case 9: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.062000,-0.039000,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.942000,1.184998,1.164000);
			case 11: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.077000,-0.039000,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.942000,1.184998,1.164000);
			case 12: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.052000,-0.048999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.869000,1.184998,1.164000);
			case 13: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.093000,-0.035999,-0.006000 ,  0.000000,90.000000,0.000000 ,  0.869000,1.184998,1.164000);
			case 14: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.078000,-0.044999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.005000,1.184998,1.164000);
			case 15: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.078000,-0.044999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.005000,1.184998,1.164000);
			case 17: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.078000,-0.039999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.005000,1.184998,1.164000);
			case 18: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.078000,-0.039999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.979000,1.042998,1.093000);
			case 19: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.108000,-0.039999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.979000,1.042998,1.093000);
			case 20: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082000,-0.014999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.979000,1.042998,1.093000);
			case 21: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082000,-0.014999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.012000,1.071998,1.093000);
			case 22: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.078000,1.071998,1.093000);
			case 23: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  0.951000,1.071998,1.093000);
			case 24: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.062000,1.173999,1.093000);
			case 25: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082000,-0.025999,-0.002000 ,  0.000000,90.000000,0.000000 ,  1.062000,1.173999,1.093000);
			case 28: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082000,-0.033999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.119000,1.173999,1.093000);
			case 30: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082000,-0.033999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.119000,1.173999,1.093000);
			case 32: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082000,-0.058000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.885001,1.006999,1.093000);
			case 34: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.885001,1.006999,1.093000);
			case 35: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.068001,1.003999,1.093000);
			case 36: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.068001,1.003999,1.093000);
			case 37: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.068001,1.003999,1.093000);
			case 43: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.965001,0.922999,0.975000);
			case 44: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082000,-0.027000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.917001,0.961999,0.894000);
			case 45: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.103000,-0.017000,-0.008000 ,  0.000000,90.000000,0.000000 ,  0.917001,0.961999,0.894000);
			case 46: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.103000,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.100000,1.024998,0.999000);
			case 47: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.090000,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.100000,1.024998,0.999000);
			case 48: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.090000,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.100000,1.024998,0.999000);
			case 57: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.146999,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.962001,0.902998,0.999000);
			case 58: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.057999,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.851001,0.902998,0.999000);
			case 59: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.057999,-0.030000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.972001,1.047998,1.178999);
			case 60: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.057999,-0.009000,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.972001,1.047998,1.178999);
			case 61: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.040999,-0.029000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.036001,0.948998,1.219999);
			case 68: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.040999,-0.020000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.036001,0.948998,1.219999);
			case 70: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.063999,-0.020000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.082001,1.035998,1.219999);
			case 71: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.063999,-0.031000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.082001,1.035998,1.219999);
			case 72: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.063999,-0.040000,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.082001,1.035998,1.219999);
			case 73: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.091000,-0.050999,0.000000 ,  0.000000,90.000000,0.000000 ,  1.096999,0.971998,1.035001);
			case 78: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.102999,-0.031999,0.008000 ,  0.000000,90.000000,0.000000 ,  1.096999,0.971998,1.138001);
			case 79: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.085999,-0.036998,0.008000 ,  0.000000,90.000000,0.000000 ,  1.096999,1.117999,1.138001);
			case 86: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.085999,-0.072999,0.002999 ,  0.000000,90.000000,0.000000 ,  1.096999,1.117999,1.138001);
			case 94: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.022999,-0.043999,0.002999 ,  0.000000,90.000000,0.000000 ,  0.933999,1.000999,1.138001);
			case 95: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.022999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  0.901998,1.000999,1.138001);
			case 96: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.065999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  1.039999,1.176999,1.394001);
			case 97: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.020999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  1.039999,1.176999,1.394001);
			case 98: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.020999,-0.043999,-0.005000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001);
			case 100: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.020999,-0.043999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001);
			case 101: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.031999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001);
			case 102: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.020999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.176999,1.394001);
			case 104: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.020999,-0.034999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.177999,1.176999,1.394001);
			case 106: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.198999,1.176999,1.394001);
			case 107: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.198999,1.176999,1.394001);
			case 108: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.026999,1.176999,1.394001);
			case 109: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001);
			case 110: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.020999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001);
			case 111: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.026999,-0.044999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001);
			case 112: SetPlayerAttachedObject (playerid, 6, setobject, 1, -0.018000,-0.066999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001);
			case 114: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.016999,-0.066999,-0.007000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001);
			case 115: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.016999,-0.066999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.331999,1.394001);
			case 116: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.016999,-0.066999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.144999,1.436999,1.394001);
			case 119: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.016999,-0.066999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.224999,1.394001);
			case 120: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.224999,1.394001);
			case 121: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.100999,1.224999,1.394001);
			case 122: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.948999,1.224999,1.394001);
			case 123: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.256999,1.394001);
			case 124: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.265999,1.394001);
			case 125: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.265999,1.394001);
			case 126: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.265999,1.394001);
			case 127: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.016999,-0.046999,0.001999 ,  0.000000,90.000000,0.000000 ,  1.123998,1.363999,1.394001);
			case 134: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.016999,-0.046999,0.001999 ,  0.000000,90.000000,0.000000 ,  0.980999,1.067999,1.082000);
			case 135: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.067999,1.432999,1.372001);
			case 136: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.016999,-0.046999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.939999,0.939999,1.126001);
			case 137: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.064999,-0.046999,-0.007000 ,  0.000000,90.000000,0.000000 ,  0.869999,0.939999,1.126001);
			case 147: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.064999,-0.046999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.044999,1.166999,1.199001);
			case 153: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.064999,-0.046999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.044999,1.166999,1.199001);
			case 154: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.064999,-0.046999,-0.000000 ,  0.000000,90.000000,0.000000 ,  1.044999,1.166999,1.199001);
			case 155: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.154999,1.391999,1.199001);
			case 156: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.080999,1.245999,1.199001);
			case 160: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.870999,1.104999,1.199001);
			case 161: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.064999,-0.066999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.979999,1.306999,1.199001);
			case 163: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.080999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.487999,1.199001);
			case 164: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.080999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.487999,1.199001);
			case 165: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.001999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.190999,1.199001);
			case 166: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.001999,-0.066999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.190999,1.199001);
			case 170: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.062999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.190999,1.199001);
			case 171: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.062999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.088999,1.270001);
			case 173: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.046999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001);
			case 174: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.046999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001);
			case 175: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.046999,-0.040999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001);
			case 179: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.046999,-0.040999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001);
			case 181: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.068999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001);
			case 182: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.053999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001);
			case 183: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.053999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001);
			case 184: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.053999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001);
			case 185: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.044999,-0.047999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.049999,1.239999,1.270001);
			case 186: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.104999,1.239999,1.270001);
			case 187: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.104999,1.239999,1.270001);
			case 188: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001);
			case 189: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.030999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001);
			case 191: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.072999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001);
			case 192: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.072999,-0.047999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001);
			case 193: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.072999,-0.050999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001);
			case 194: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.072999,-0.050999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001);
			case 195: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.072999,-0.043999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001);
			case 200: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.049999,-0.069999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001);
			case 202: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.049999,-0.069999,-0.009000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001);
			case 206: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.049999,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001);
			case 208: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.039999,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001);
			case 210: SetPlayerAttachedObject (playerid, 6, setobject, 1, -0.006000,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.985999,1.239999,1.270001);
			case 211: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.058999,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.892999,1.239999,1.270001);
			case 212: SetPlayerAttachedObject (playerid, 6, setobject, 1, -0.016000,-0.059999,-0.001000 ,  0.000000,90.000000,0.000000 ,  0.892999,1.239999,1.270001);
			case 213: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.041999,-0.040999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.077999,1.239999,1.270001);
			case 217: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.041999,-0.040999,-0.010000 ,  0.000000,90.000000,0.000000 ,  0.950999,1.239999,1.270001);
			case 220: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.041999,-0.021999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.054999,1.239999,1.270001);
			case 221: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.034999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001);
			case 222: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.034999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001);
			case 223: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.017999,-0.043999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001);
			case 227: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.078999,-0.080999,-0.010000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001);
			case 228: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.027999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.095999,1.239999,1.270001);
			case 229: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.027999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001);
			case 230: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.027999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001);
			case 234: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.010999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001);
			case 235: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.010999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001);
			case 236: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.010999,-0.042999,-0.011000 ,  0.000000,90.000000,0.000000 ,  0.895999,1.019999,1.270001);
			case 239: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.072999,-0.057999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.039998,1.337998,1.324001);
			case 240: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.033999,-0.057999,-0.004000 ,  0.000000,90.000000,0.000000 ,  0.982998,1.153998,1.324001);
			case 247: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.033999,-0.057999,-0.018000 ,  0.000000,90.000000,0.000000 ,  1.090999,1.460998,1.324001);
			case 248: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.033999,-0.077999,-0.018000 ,  0.000000,90.000000,0.000000 ,  1.090999,1.460998,1.324001);
			case 250: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.033999,-0.077999,-0.018000 ,  0.000000,90.000000,0.000000 ,  1.090999,1.460998,1.324001);
			case 252: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.049999,-0.068999,0.003999 ,  0.000000,90.000000,0.000000 ,  1.009999,1.295998,1.324001);
			case 254: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.049999,-0.030999,-0.013000 ,  0.000000,90.000000,0.000000 ,  1.097998,1.295998,1.324001);
			case 255: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.049999,-0.030999,-0.004000 ,  0.000000,90.000000,0.000000 ,  1.045999,1.053998,1.249001);
			case 258: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.052999,-0.005999,-0.009000 ,  0.000000,90.000000,0.000000 ,  1.239999,1.130998,1.372001);
			case 259: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.042999,-0.012999,-0.014000 ,  0.000000,90.000000,0.000000 ,  1.239999,1.130998,1.372001);
			case 261: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.029999,-0.038999,-0.010000 ,  0.000000,90.000000,0.000000 ,  0.867999,0.918998,1.073001);
			case 265: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.040999,-0.015999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.042998,1.238001);
			case 266: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.040999,-0.051999,-0.008000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001);
			case 267: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.245999,-0.034999,-0.011000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001);
			case 270: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.062999,-0.034999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001);
			case 271: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.048999,-0.048999,-0.006000 ,  0.000000,90.000000,0.000000 ,  1.082999,1.113998,1.238001);
			case 272: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.036999,-0.011999,-0.017000 ,  0.000000,90.000000,0.000000 ,  1.216999,1.113998,1.238001);
			case 273: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.036999,-0.009999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.026999,0.996998,1.238001);
			case 274: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001);
			case 275: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001);
			case 276: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001);
			case 280: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001);
			case 281: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001);
			case 282: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001);
			case 283: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.062999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001);
			case 284: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.037999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001);
			case 285: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.073999,-0.034999,-0.009999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001);
			case 286: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.064999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.096999,0.996998,1.238001);
			case 287: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.064999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.082999,0.974998,1.238001);
			case 288: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.064999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.082999,0.974998,1.238001);
			case 289: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.037999,-0.036999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.128999,1.172998,1.238001);
			case 290: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.048999,-0.051999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.128999,1.172998,1.238001);
			case 291: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.048999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.128999,1.172998,1.238001);
			case 292: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.089999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.964999,1.172998,1.238001);
			case 293: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.089999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.964999,1.172998,1.238001);
			case 294: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.079999,-0.057999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.964999,1.172998,1.238001);
			case 295: SetPlayerAttachedObject (playerid, 6, setobject, 1, -0.009000,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.038999,1.172998,1.238001);
			case 296: SetPlayerAttachedObject (playerid, 6, setobject, 1, -0.009000,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001);
			case 297: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.048999,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001);
			case 299: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.074999,-0.054999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001);
			case 300: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001);
			case 301: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001);
			case 302: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001);
			case 303: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001);
			case 304: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001);
			case 305: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.085999,1.220998,1.238001);
			case 306: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001);
			case 307: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001);
			case 308: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001);
			case 309: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  0.881999,1.220998,1.238001);
			case 310: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.076999,1.220998,1.238001);
			case 311: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.059999,-0.062999,-0.006999 ,  0.000000,90.000000,0.000000 ,  1.076999,1.220998,1.238001);
			default: SetPlayerAttachedObject (playerid, 6, setobject, 1,   -0.074999,-0.086000,-0.009999 ,  -0.600000,-1.100000,2.399999 ,  0.894000,0.853998,0.809000);
		}
	}
	else if(type == 19)//ђип °л§пы 1
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.029000,-0.003001, 0.000000,90.000000,91.799987, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.029000,-0.003001, 0.000000,90.000000,91.799987, 1.000000,1.000000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,0.024000,-0.001001, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157998,0.024000,-0.001001, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138997,0.032999,-0.006001, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116997,0.028999,0.002999, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111997,0.024999,0.002999, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.024999,0.002999, 0.000000,90.000000,91.799987, 1.000000,1.093999,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.013999,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.045000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109998,0.005000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,0.027000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.087998,0.027000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128998,0.027000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.027000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107998,0.034000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145998,0.044000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,0.039000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 39: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104998,0.039000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109997,0.024000,0.002998, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.074997,0.032000,0.002998, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098997,0.050000,0.002998, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098997,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117997,0.045000,-0.000001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117997,0.045000,-0.003001, 0.000000,90.000000,91.799987, 1.040000,1.093999,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130997,0.020999,-0.006001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107997,0.054999,-0.006001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107997,0.029000,-0.006001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107997,0.022000,-0.006001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.052999,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092998,0.037000,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128997,0.043000,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128997,0.043000,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118997,0.043000,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118997,0.043000,-0.002001, 0.000000,90.000000,91.799987, 1.080000,1.142999,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118997,0.043000,-0.002001, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118997,0.025000,-0.002001, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118997,0.039999,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118997,0.039999,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118997,0.039999,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.014000,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 80: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098998,0.024000,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 81: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098998,0.024000,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155998,0.047000,0.001999, 0.000000,90.000000,91.799987, 0.934000,1.142999,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134997,0.037000,0.001999, 0.000000,90.000000,91.799987, 1.101000,1.142999,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134997,0.037000,0.001999, 0.000000,90.000000,91.799987, 1.101000,1.142999,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.012000,0.001999, 0.000000,90.000000,91.799987, 0.891000,0.925999,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.031000,0.001999, 0.000000,90.000000,91.799987, 0.955000,0.974999,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.020000,0.001999, 0.000000,90.000000,91.799987, 0.955000,0.974999,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.020000,0.001999, 0.000000,90.000000,91.799987, 0.955000,0.974999,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120998,0.010000,0.001999, 0.000000,90.000000,91.799987, 0.955000,0.974999,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.032000,-0.003001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.032000,-0.003001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138998,0.045000,-0.003001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138998,0.029000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.158998,0.031000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.031000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.166998,0.031000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.166998,0.028000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.160998,0.021000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.032000,-0.000001, 0.000000,90.000000,91.799987, 0.955000,1.033999,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.036000,-0.000001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124998,0.019000,-0.001001, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.027000,0.000998, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.027000,0.000998, 0.000000,90.000000,91.799987, 1.021000,1.055000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.027000,-0.006001, 0.000000,90.000000,91.799987, 1.137000,1.146999,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.040000,-0.006001, 0.000000,90.000000,91.799987, 1.137000,1.146999,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.040000,-0.006001, 0.000000,90.000000,91.799987, 0.972000,1.046999,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.026000,0.003998, 0.000000,90.000000,91.799987, 0.972000,1.046999,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.026000,0.003998, 0.000000,90.000000,91.799987, 0.972000,1.046999,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.168998,0.048999,0.003998, 0.000000,90.000000,91.799987, 0.972000,1.046999,1.000000);
			case 131: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.095998,0.035000,0.003998, 0.000000,90.000000,91.799987, 0.972000,1.046999,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.038998,0.023000,-0.001001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.023000,0.005998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123998,0.019000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152998,0.018000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.100998,0.028000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.173998,0.014000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.032000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110998,0.032000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.035000,0.001998, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.035000,-0.006001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.035000,-0.006001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.035000,-0.006001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126998,0.035000,-0.006001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.014999,-0.001001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.026000,-0.001001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.019999,-0.001001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.019999,-0.001001, -1.599999,90.000000,91.399993, 0.972000,1.046999,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135998,0.026000,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.164998,0.033999,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.033999,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134998,0.022999,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.100998,0.038999,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,0.038999,-0.005001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118998,0.038999,-0.008001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,0.029999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,0.021999,0.002998, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111998,0.016999,0.002998, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111998,0.032999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,0.025999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153998,0.024999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153998,0.024999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153998,0.024999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153998,0.024999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153998,0.035999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127998,0.039999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.026999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.037999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133998,0.037999,-0.000001, -1.599999,90.000000,91.399993, 1.019000,1.083999,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145998,0.020999,0.001998, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145998,0.013999,0.001998, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.168998,0.039999,0.001998, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.014999,0.001998, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129998,0.044999,0.001998, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152998,0.035999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.108998,0.022999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.166999,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.108998,0.014999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.001999,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.077998,0.014999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.001999,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.100998,0.027999,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.001999,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144998,0.037999,0.000998, -1.599999,90.000000,91.399993, 1.019000,1.001999,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139998,0.029000,-0.001001, -1.599999,90.000000,91.399993, 1.019000,1.001999,1.000000);
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.163998,0.036000,-0.002001, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119998,0.036000,-0.002001, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.028000,-0.002001, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.028000,-0.002001, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,0.028000,0.001998, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130998,0.025000,0.001998, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.096998,0.041999,0.001998, -1.599999,90.000000,91.399993, 1.046000,1.094000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.096998,0.031000,-0.000001, -1.599999,90.000000,91.399993, 0.957000,1.094000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109998,0.031000,-0.000001, -1.599999,90.000000,91.399993, 0.957000,1.094000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109998,0.031000,-0.000001, -1.599999,90.000000,91.399993, 0.957000,1.094000,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.037999,-0.002001, -1.599999,90.000000,91.399993, 0.957000,1.137000,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117998,0.020999,-0.002001, -1.599999,90.000000,91.399993, 0.957000,1.137000,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105998,0.031999,-0.002001, -1.599999,90.000000,91.399993, 0.957000,1.137000,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105998,0.031999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105998,0.031999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110998,0.035999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110998,0.035999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110998,0.035999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110998,0.035999,-0.002001, -1.599999,90.000000,91.399993, 0.977999,1.008000,1.000000);
			case 290: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122998,0.031999,0.001998, -1.599999,90.000000,91.399993, 0.977999,1.104000,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161998,0.040999,0.001998, -1.599999,90.000000,91.399993, 0.977999,1.104000,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116998,0.030999,0.001998, -1.599999,90.000000,91.399993, 0.977999,1.104000,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140998,0.035999,-0.006001, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,0.027999,-0.002001, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125998,0.005999,-0.002001, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.028999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136998,0.028999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 1.037000,1.104000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.035999,0.002998, -1.599999,90.000000,91.399993, 0.898000,0.969000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.027999,-0.000001, -1.599999,90.000000,91.399993, 0.898000,1.016000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.106998,0.027999,-0.000001, -1.599999,90.000000,91.399993, 0.898000,1.016000,1.000000);
			default: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150999,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
		}
	}
	else if(type == 20)//ђип °л§пы 2
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101999,0.004999,0.000000, 0.499999,87.200019,91.700004, 1.072000,1.068000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119999,0.010999,0.002000, 0.499999,87.200019,91.700004, 1.163999,1.109000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148000,0.001999,0.002000, 0.499999,87.200019,91.700004, 1.163999,1.109000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134999,-0.001000,-0.003000, 0.499999,87.200019,91.700004, 1.163999,1.130000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115999,0.021999,-0.003000, 0.499999,87.200019,91.700004, 1.163999,1.130000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.085999,0.000999,-0.003000, 0.499999,87.200019,91.700004, 1.163999,1.130000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.100999,0.003999,-0.003000, 0.499999,87.200019,91.700004, 1.039999,1.032000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107999,0.009999,-0.003000, 0.499999,87.200019,91.700004, 1.039999,1.032000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120999,-0.003000,-0.003000, 0.499999,87.200019,91.700004, 1.039999,1.032000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137999,0.010999,0.000000, 0.499999,87.200019,91.700004, 1.039999,1.097000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097999,-0.018000,0.000000, 0.499999,87.200019,91.700004, 1.039999,1.097000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115999,0.003999,0.000000, -78.300010,113.100013,-13.799970, 1.039999,1.097000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109999,-0.003000,-0.003999, -78.300010,113.100013,-13.799970, 1.039999,1.097000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109999,-0.003000,0.000000, -78.300010,113.100013,-13.799970, 1.114999,1.097000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109999,-0.003000,0.000000, -78.300010,113.100013,-13.799970, 1.114999,1.097000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094999,0.014999,0.004000, -78.300010,113.100013,-13.799970, 1.114999,1.097000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092000,0.012999,0.002000, -78.300010,103.000015,-13.799970, 1.233999,1.090000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092000,0.011999,-0.006999, -78.300010,103.000015,-13.799970, 1.190000,1.202000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092000,-0.001000,-0.003999, -78.300010,103.000015,-13.799970, 1.190000,1.202000,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.031000,0.006999,-0.003999, -78.300010,103.000015,-13.799970, 1.063999,1.144000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.080000,0.024999,0.002000, -78.300010,103.000015,-13.799970, 1.013999,1.013000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094000,-0.002000,0.000000, -78.300010,103.000015,-13.799970, 1.013999,1.013000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112000,0.017999,-0.002999, -78.300010,103.000015,-13.799970, 1.110000,1.071000,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112000,0.009999,-0.002999, -78.300010,103.000015,-13.799970, 1.170000,1.099000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129000,-0.014000,-0.004999, -78.300010,103.000015,-13.799970, 1.170000,1.099000,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092000,0.022999,0.002000, -78.300010,103.000015,-13.799970, 1.170000,1.099000,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092000,-0.007000,0.002000, -78.300010,103.000015,-13.799970, 1.170000,1.099000,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092000,-0.012000,0.007000, -78.300010,103.000015,-13.799970, 1.341000,1.138000,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132000,0.011999,0.001000, -78.300010,103.000015,-13.799970, 1.243999,1.178000,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.088000,-0.000000,0.001000, -78.300010,103.000015,-13.799970, 1.009999,0.943000,0.814999);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107000,0.002999,-0.007999, -78.300010,108.500007,-13.799970, 1.091999,1.096000,0.814999);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111999,0.013000,0.000000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111999,0.013000,0.000000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111999,0.013000,0.000000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122999,-0.011000,0.000000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122999,0.008999,0.006000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.108999,0.013999,0.001000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118999,0.013999,0.001000, 83.900001,67.399971,0.000000, 1.036000,1.000000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118999,-0.012000,-0.002999, 83.900001,67.399971,0.000000, 1.137000,1.054999,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097999,0.030000,-0.002999, 83.900001,67.399971,0.000000, 1.250000,1.192000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097999,0.011999,-0.002999, 83.900001,67.399971,0.000000, 1.263000,1.166000,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097999,0.011999,-0.002999, 83.900001,67.399971,0.000000, 1.263000,1.166000,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.080999,-0.014000,0.002000, 83.900001,67.399971,0.000000, 1.164000,1.059000,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.080999,-0.014000,0.002000, 83.900001,67.399971,0.000000, 1.164000,1.059000,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.108999,0.006999,0.002000, 83.900001,67.399971,0.000000, 1.164000,1.059000,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.108999,-0.004000,0.002000, 83.900001,67.399971,0.000000, 1.164000,1.059000,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116999,0.019999,0.002000, 83.900001,81.599967,0.000000, 1.164000,1.059000,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116999,-0.001000,0.004000, 83.900001,81.599967,0.000000, 1.164000,1.101000,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129999,0.005999,0.004000, 83.900001,81.599967,0.000000, 1.164000,1.101000,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129999,0.005999,0.004000, 83.900001,81.599967,0.000000, 1.164000,1.101000,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151000,-0.003000,0.004000, 83.900001,81.599967,0.000000, 1.164000,1.101000,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116000,-0.004000,-0.001999, 83.900001,81.599967,0.000000, 1.285000,1.145000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104000,0.009999,-0.001999, 83.900001,81.599967,0.000000, 1.069000,1.012000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104000,0.009999,-0.001999, 83.900001,81.599967,0.000000, 1.069000,1.012000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143000,0.005999,0.001000, 83.900001,81.599967,0.000000, 1.069000,1.096000,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143000,-0.000000,0.001000, 83.900001,67.899978,0.000000, 1.069000,1.096000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.084000,0.021999,0.001000, 83.900001,67.899978,0.000000, 1.069000,1.096000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.084000,0.021999,0.001000, 83.900001,67.899978,0.000000, 1.069000,1.096000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109000,0.007999,-0.003999, 83.900001,67.899978,0.000000, 1.088001,1.096000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132000,-0.017000,0.001000, 83.900001,67.899978,0.000000, 1.088001,1.096000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121000,-0.007000,0.001000, 83.900001,67.899978,0.000000, 1.088001,1.096000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121000,-0.005000,-0.001999, 83.900001,67.899978,0.000000, 1.201001,1.245000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121000,-0.005000,-0.001999, 83.900001,67.899978,0.000000, 1.201001,1.245000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.095000,0.011999,-0.001999, 83.900001,67.899978,0.000000, 1.038001,1.037000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113000,-0.007000,0.006000, 83.900001,67.899978,0.000000, 1.151000,1.146000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113000,-0.001000,0.006000, 83.900001,67.899978,0.000000, 1.151000,1.146000,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.024000,0.000999,0.001000, 83.900001,67.899978,0.000000, 0.996000,0.988000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094000,-0.015000,0.010000, 83.900001,67.899978,0.000000, 1.064000,1.090000,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.094000,-0.015000,0.004000, 83.900001,67.899978,0.000000, 1.260000,1.090000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118000,-0.015000,0.004000, 83.900001,67.899978,0.000000, 1.260000,1.090000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.073000,-0.002000,0.004000, 83.900001,67.899978,3.199999, 1.154000,1.075000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146000,-0.024000,0.004000, 83.900001,67.899978,3.199999, 1.154000,1.202000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.080000,0.016999,0.004000, 83.900001,67.899978,3.199999, 1.024000,1.102000,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115000,0.003999,0.004000, 83.900001,67.899978,3.199999, 1.024000,1.102000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102000,0.003999,0.004000, 83.900001,67.899978,3.199999, 1.024000,1.102000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102000,0.003999,0.002000, 83.900001,67.899978,3.199999, 1.024000,1.102000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102000,0.003999,0.002000, 83.900001,67.899978,3.199999, 1.111000,1.102000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102000,0.003999,0.002000, 83.900001,67.899978,3.199999, 1.111000,1.102000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114000,-0.027000,0.002000, 83.900001,67.899978,3.199999, 1.180000,1.102000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114000,0.002999,-0.002999, 83.900001,67.899978,3.199999, 1.108000,1.106000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123000,-0.008000,0.001000, 83.900001,67.899978,3.199999, 1.195000,1.106000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.099000,-0.002000,0.001000, 83.900001,67.899978,3.199999, 1.195000,1.106000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.099000,-0.002000,-0.006999, 83.900001,67.899978,3.199999, 1.195000,1.106000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112000,0.002999,-0.006999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145000,-0.017000,-0.002999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098000,0.008999,-0.002999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098000,0.008999,-0.002999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098000,0.008999,-0.002999, 83.900001,67.899978,3.199999, 1.113000,1.106000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.121000,-0.002000,0.005000, 83.900001,67.899978,3.199999, 1.188000,1.129000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097000,-0.002000,-0.001999, 83.900001,67.899978,3.199999, 1.188000,1.129000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097000,-0.002000,0.005000, 83.900001,67.899978,3.199999, 1.188000,1.129000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097000,-0.002000,0.005000, 83.900001,67.899978,3.199999, 1.188000,1.129000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097000,0.001999,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 190: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135000,-0.009000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135000,-0.009000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135000,-0.009000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135000,-0.009000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.157000,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129000,-0.005000,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.070000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111000,0.001999,0.001000, 83.900001,67.899978,3.199999, 1.188000,1.070000,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111000,0.021999,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.093000,0.004999,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 208: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114000,0.012999,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 209: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.088000,0.008999,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.088000,-0.008000,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.070000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133000,-0.003000,0.001000, 83.900001,67.899978,3.199999, 1.000000,1.138000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124000,0.002999,0.001000, 83.900001,67.899978,3.199999, 1.120000,1.138000,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143000,-0.020000,0.005000, 83.900001,67.899978,3.199999, 1.120000,1.238000,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107000,-0.015000,0.005000, 83.900001,67.899978,3.199999, 1.293000,1.238000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125000,0.006999,0.005000, 83.900001,67.899978,3.199999, 1.329000,1.055001,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.090000,-0.015000,-0.001999, 83.900001,67.899978,3.199999, 1.232000,1.192001,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116000,0.016999,-0.001999, 83.900001,67.899978,3.199999, 1.140000,1.131000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122000,0.005999,-0.001999, 83.900001,67.899978,3.199999, 1.206000,1.205001,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092000,-0.009000,-0.001999, 83.900001,67.899978,3.199999, 1.115000,1.071000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112000,-0.021000,0.002000, 83.900001,67.899978,3.199999, 1.021000,0.924000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.069000,-0.009000,-0.001999, 83.900001,67.899978,3.199999, 1.021000,0.924000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097000,-0.002000,0.003000, 83.900001,67.899978,3.199999, 1.092000,1.010000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128000,-0.007000,0.003000, 83.900001,67.899978,3.199999, 1.136000,1.116000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097000,0.001999,-0.001999, 83.900001,67.899978,3.199999, 1.136000,1.116000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118000,-0.009000,0.004000, 83.900001,67.899978,3.199999, 1.169000,1.116000,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118000,-0.002000,0.004000, 83.900001,67.899978,3.199999, 1.169000,1.116000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131000,-0.002000,0.004000, 83.900001,67.899978,3.199999, 1.169000,1.116000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.131000,-0.014000,0.004000, 83.900001,67.899978,3.199999, 1.169000,1.116000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.086000,0.010999,-0.002999, 83.900001,67.899978,3.199999, 1.029000,1.033000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107000,-0.004000,-0.002999, 83.900001,67.899978,3.199999, 1.029000,1.033000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107000,-0.008000,-0.002999, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 268: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107000,-0.008000,-0.002999, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135000,-0.002000,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.095000,-0.002000,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113000,0.000999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113000,0.000999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092000,0.008999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101000,0.011999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101000,0.006999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101000,0.014999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101000,0.007999,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.157000,-0.001000,0.002000, 83.900001,67.899978,3.199999, 1.078999,1.103000,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.085000,0.005999,-0.003999, 83.900001,67.899978,3.199999, 1.078999,0.962000,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144000,0.002999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.100000,-0.002000,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118000,-0.023000,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152000,-0.016000,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102000,0.006999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102000,0.002999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102000,0.002999,0.001000, 83.900001,67.899978,3.199999, 1.107999,1.071000,1.000000);
			default: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150999,-0.004999,0.001999, 0.000000,0.600003,-6.399982, 1.051999,0.849999,0.970000);
		}
	}
	else if(type == 21)//љанданы на голову
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120000,-0.001000,0.000000, -92.499984,-7.199993,-98.099990, 1.114999,1.000000,0.901000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120000,0.006999,0.007000, -92.499984,-7.199993,-98.099990, 1.188999,1.256000,1.157000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141999,-0.000000,0.001999, -92.499984,-7.199993,-98.099990, 1.175999,1.256000,1.083999);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141999,-0.000000,0.001999, -92.499984,-7.199993,-98.099990, 1.175999,1.256000,1.083999);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.123000,0.017000,0.001999, -84.299972,-5.799993,-98.099990, 1.216999,1.256000,1.011999);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.091000,0.003000,0.001999, -84.299972,-5.799993,-98.099990, 1.237999,1.256000,1.057999);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104000,0.013000,0.006000, -91.399986,-5.799993,-92.200004, 1.262999,1.256000,1.122999);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.071000,-0.015999,-0.000000, -91.399986,-5.799993,-92.200004, 1.181999,1.256000,0.974999);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.100000,0.009000,-0.000000, -91.399986,-5.799993,-92.200004, 1.262999,1.256000,0.974999);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.085999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 0.994999,1.256000,1.021000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 1.037999,1.256000,1.094000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116999,0.003000,-0.000000, -91.399986,-5.799993,-92.200004, 1.132999,1.256000,1.094000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116999,0.003000,0.004000, -91.399986,-5.799993,-92.200004, 1.157999,1.056999,0.877000);
			case 26: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116999,0.003000,0.004000, -91.399986,-5.799993,-92.200004, 1.005999,1.056999,1.086000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116999,0.003000,-0.002000, -91.399986,-5.799993,-92.200004, 1.277999,1.056999,1.107000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097999,0.016000,-0.000000, -91.399986,-5.799993,-92.200004, 1.022999,1.056999,0.863000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097999,-0.002999,-0.000000, -91.399986,-5.799993,-92.200004, 1.022999,1.056999,1.034000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120999,0.020000,-0.000000, -91.399986,-5.799993,-92.200004, 1.135999,1.056999,1.154000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120999,0.011000,-0.000000, -91.399986,-5.799993,-92.200004, 1.135999,1.056999,1.154000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130999,-0.004999,-0.000000, -91.399986,-5.799993,-92.200004, 1.189999,1.056999,1.195000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130999,0.024000,-0.000000, -91.399986,-5.799993,-92.200004, 1.189999,1.056999,1.195000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092000,0.002000,-0.000000, -91.399986,-5.799993,-92.200004, 1.002999,1.056999,0.939000);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126999,0.006000,-0.000000, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,1.119000);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107999,0.001000,-0.000000, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107999,0.001000,0.000999, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107999,0.027000,0.000999, -91.399986,-5.799993,-92.200004, 1.115999,1.301999,0.950000);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107999,-0.017999,0.003999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,0.950000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107999,0.012000,0.004999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,0.950000);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.107999,-0.019999,0.004999, -91.399986,-5.799993,-92.200004, 1.160999,1.301999,1.005000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.096000,-0.010999,0.000999, -91.399986,-5.799993,-92.200004, 1.084999,1.358999,0.969000);
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.096000,-0.010999,0.007000, -91.399986,-5.799993,-92.200004, 1.206999,1.358999,1.074000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.096000,-0.010999,-0.000000, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114000,0.004000,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092000,-0.004999,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,0.977000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.099000,0.021000,0.001999, -91.399986,-5.799993,-92.200004, 1.095999,1.358999,1.086000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.133999,1.358999,1.158000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115000,0.003000,0.001999, -91.399986,-5.799993,-92.200004, 1.133999,1.358999,1.158000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115000,-0.001999,-0.004000, -91.399986,-5.799993,-92.200004, 1.318998,1.358999,1.158000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.197998,1.126999,0.946000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.086000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.055998,1.126999,0.946000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.126999,1.101000);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.080998,1.126999,0.975000);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.080998,1.126999,0.975000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.105000,0.010000,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,0.975000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120000,-0.005999,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,1.113000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120000,0.000000,0.001999, -91.399986,-5.799993,-92.200004, 1.167998,1.126999,1.113000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120000,0.000000,-0.002000, -91.399986,-5.799993,-92.200004, 1.242998,1.126999,1.113000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120000,0.000000,-0.002000, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120000,0.008000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129000,-0.009999,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129000,0.008000,0.001999, -91.399986,-5.799993,-92.200004, 1.179998,1.157999,1.061000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.119998,1.157999,1.061000);
			case 148: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.181998,1.157999,1.135000);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.095000,-0.003999,0.006000, -91.399986,-5.799993,-92.200004, 1.449998,1.497999,1.211000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.095000,-0.003999,0.001999, -91.399986,-5.799993,-92.200004, 1.075998,1.218000,1.063000);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116000,-0.002999,0.001999, -91.399986,-5.799993,-92.200004, 1.325998,1.434000,1.209000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.084000,0.015000,0.001999, -91.399986,-5.799993,-92.200004, 1.171998,1.086000,0.945000);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.171998,1.086000,0.945000);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116000,0.007000,0.001999, -91.399986,-5.799993,-92.200004, 1.000998,1.086000,0.897000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116000,0.002000,0.001999, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116000,0.002000,0.001999, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116000,0.010000,0.005000, -91.399986,-5.799993,-92.200004, 1.037998,1.086000,1.023000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116000,0.010000,-0.001999, -91.399986,-5.799993,-92.200004, 1.091998,1.086000,1.215000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132000,-0.007999,0.003000, -91.399986,-5.799993,-92.200004, 1.091998,1.086000,1.142000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132000,-0.007999,0.003000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112000,0.006000,0.003000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139000,-0.006000,0.000000, -91.399986,-5.799993,-92.200004, 1.157998,1.086000,1.142000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.044998,1.086000,1.035000);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.044998,1.086000,1.035000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103000,0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.135000,-0.002999,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.124000,-0.010000,0.000000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103000,-0.010000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103000,-0.001000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125000,-0.008000,0.007000, -91.399986,-5.799993,-92.200004, 1.115998,1.086000,1.088000);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.160998,1.306000,1.239000);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.160998,1.306000,1.239000);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125000,-0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.222998,1.306000,1.103000);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116000,0.020999,0.001000, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
			case 207: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.087000,0.006999,-0.000999, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
			case 210: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.087000,-0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.038998,1.306000,0.880000);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109000,-0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.180998,1.306000,0.950000);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116000,0.006000,0.002000, -91.399986,-5.799993,-92.200004, 1.180998,1.306000,0.950000);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116000,0.002000,0.002000, -91.399986,-5.799993,-92.200004, 1.301998,1.306000,1.174000);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116000,-0.007999,0.002000, -91.399986,-5.799993,-92.200004, 1.301998,1.306000,1.204000);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128000,0.017000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128000,0.017000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128000,0.004000,0.002000, -91.399986,-5.799993,-92.200004, 1.122998,1.306000,1.145000);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.097000,-0.009999,0.002000, -91.399986,-5.799993,-92.200004, 1.200998,1.306000,1.009000);
			case 234: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.116000,-0.020999,0.002000, -91.399986,-5.799993,-92.200004, 0.980998,1.115000,0.973000);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.064000,-0.004999,0.002000, -91.399986,-5.799993,-92.200004, 1.021999,1.115000,0.973000);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.095000,-0.003999,0.002000, -91.399986,-5.799993,-92.200004, 1.051999,1.115000,1.028000);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128000,0.010000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.131999,1.115000,1.182000);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128000,0.001000,0.002000, -91.399986,-5.799993,-92.200004, 1.237999,1.115000,1.182000);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104000,-0.002999,0.002000, -91.399986,-5.799993,-92.200004, 1.302999,1.267000,1.182000);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.093000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.099999,1.267000,1.007000);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.093000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.099999,1.267000,1.007000);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.093000,0.002000,-0.000999, -91.399986,-5.799993,-92.200004, 1.200999,1.267000,0.945000);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.100000,-0.008999,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122000,0.000000,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.081000,0.003000,0.001000, -91.399986,-5.799993,-92.200004, 1.152999,1.267000,0.993000);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.092000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102000,0.012000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102000,0.016000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.102000,0.004000,0.001000, -91.399986,-5.799993,-92.200004, 1.148999,1.267000,0.966000);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110000,0.011000,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110000,0.005000,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110000,-0.002999,0.001000, -91.399986,-5.799993,-92.200004, 1.058999,1.267000,0.956000);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110000,0.002000,0.001000, -91.399986,-5.799993,-92.200004, 1.177999,1.267000,1.027000);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117000,-0.017999,0.001000, -91.399986,-5.799993,-92.200004, 1.177999,1.267000,1.027000);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.267000,0.925000);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117000,0.006000,-0.000999, -91.399986,-5.799993,-92.200004, 1.137999,1.160000,0.918000);
			default: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.046999,0.011999,-0.001999, -87.500000,16.199996,-95.200027, 0.962998,1.000000,0.949000);
		}
	}
	else if(type == 22)//Фсы
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025999,0.108000,0.003000, 0.000000,0.000000,-81.399993, 1.000000,1.000000,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025999,0.117000,0.003000, 0.000000,0.000000,-60.399993, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028999,0.130000,0.000999, 0.000000,0.000000,-60.399993, 1.000000,1.000000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.076999,0.126000,-0.000000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.058000,0.125000,-0.002000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 6: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.039000,0.112000,0.001999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.026000,0.127000,-0.002000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 7, setobject, 2, -0.001999,0.105000,-0.001000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.017000,0.119000,-0.001000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.005000,0.109000,-0.001000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 13: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.023000,0.114000,0.000999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.021000,0.136000,0.000999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.004000,0.097000,-0.002000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029000,0.110000,0.001999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.002000,0.113000,0.001999, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 19: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025000,0.118000,-0.003000, 0.000000,0.000000,-91.300003, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.026000,0.107000,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028000,0.130000,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 22: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.034000,0.125000,-0.006000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 23: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025000,0.123000,-0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 24: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029999,0.108000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029999,0.104000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.018999,0.118000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.022999,0.124000,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 29: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028999,0.125000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028999,0.130000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 31: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028999,0.129000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 32: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.016999,0.094000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 33: SetPlayerAttachedObject (playerid, 7, setobject, 2, -0.013999,0.101000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 34: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.038000,0.119000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 39: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.017999,0.117000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.009999,0.107000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.019999,0.135000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.019999,0.121000,-0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.005999,0.104000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.005999,0.104000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.049999,0.122000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025999,0.109000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.008999,0.112000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025999,0.124000,-0.004999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 61: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025999,0.114000,-0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029999,0.109000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.037999,0.109000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.002999,0.111000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.014999,0.117000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.007999,0.110000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 79: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028999,0.108000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033999,0.124000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027999,0.115000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.044999,0.111000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.002999,0.111000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.002999,0.104000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.005999,0.111000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 94: SetPlayerAttachedObject (playerid, 7, setobject, 2, -0.006000,0.088000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.022999,0.083000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.037999,0.118000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.002999,0.111000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.019999,0.133000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.026999,0.120000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.022999,0.109999,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.031999,0.123000,-0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 104: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.031999,0.129000,-0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.031999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.031999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 107: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.031999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.031999,0.116999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.019999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.019999,0.123999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.030999,0.104999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029999,0.095999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027999,0.121999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025999,0.121999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 115: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027999,0.121999,-0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 116: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.023999,0.123999,-0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.014999,0.117999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.014999,0.117999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.020999,0.115999,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.020999,0.113999,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.030999,0.118000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035999,0.119999,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.023999,0.125999,-0.004999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.034999,0.122999,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.034999,0.100000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.020999,0.105999,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.032999,0.119999,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 7, setobject, 2, -0.019000,0.098999,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 135: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.012999,0.109999,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 136: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033999,0.098000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 137: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.019999,0.087000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 141: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.001999,0.105000,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 143: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029999,0.124000,-0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029999,0.108000,0.006999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 150: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.004999,0.106000,0.004999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.017999,0.114000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 153: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033999,0.104000,0.005999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.001999,0.107000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 155: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027999,0.124000,-0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.021999,0.124000,0.003999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.036999,0.104000,0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 161: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.036999,0.116000,0.003999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028999,0.111000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035999,0.109000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.037999,0.109000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.007999,0.109000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.010999,0.106000,-0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.010999,0.106000,0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.024999,0.123000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.022999,0.107000,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.003999,0.110000,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027999,0.125000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027999,0.125000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027999,0.125000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027999,0.125000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 181: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.056999,0.118000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.009999,0.106999,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.036999,0.106999,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.024999,0.121999,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.024999,0.108999,-0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.017999,0.108999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033999,0.118999,0.008000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033999,0.121999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 190: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.026999,0.113999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025999,0.113999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025999,0.113999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025999,0.113999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 198: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.012999,0.114999,0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.032999,0.109999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 202: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.037999,0.119999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.037999,0.119999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.003999,0.109999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 208: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.021999,0.115999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.021999,0.097999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 211: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.006999,0.112999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 212: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.039999,0.101999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035999,0.114999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 216: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.002999,0.104999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.036999,0.110999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.018999,0.135999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.007999,0.104999,0.003999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.044999,0.125999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029999,0.134999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029999,0.108999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 230: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.005999,0.104999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.022999,0.079999,0.002999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 7, setobject, 2, -0.005000,0.088999,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 239: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.057999,0.104000,0.007000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.013999,0.111000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 243: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.002999,0.111000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027999,0.116000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 248: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.019999,0.122000,-0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 249: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.030999,0.122000,0.006000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028999,0.121000,-0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 251: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.004999,0.116000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.019999,0.109000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029999,0.113000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 255: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027999,0.100000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027999,0.129000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027999,0.129000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 261: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.032999,0.094000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.007999,0.107000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.020999,0.105000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 266: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.038999,0.098000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 267: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029999,0.107000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 270: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033999,0.109000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 271: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.045999,0.114000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 272: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033999,0.119000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 275: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.019999,0.095000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 276: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.023999,0.101000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 280: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.023999,0.100000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 281: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.023999,0.098000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 282: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029999,0.099000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 283: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.024999,0.099000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 284: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035999,0.131000,0.005000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 287: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.008999,0.118000,0.009000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 288: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.022999,0.095000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 289: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.034999,0.101000,0.004000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 290: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.018999,0.104000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 291: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.021999,0.114000,0.000000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 292: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.019999,0.105000,-0.001999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 293: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.021999,0.110000,-0.006000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 294: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025999,0.106000,-0.000999, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 295: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.010999,0.115000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 296: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.046999,0.127000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 297: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033999,0.125000,0.001000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 298: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.038999,0.110000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 299: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035999,0.125000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 300: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.023999,0.096000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 301: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.023999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 302: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 303: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 304: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 305: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.031999,0.098000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 306: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.007999,0.114000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 307: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.007999,0.114000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 308: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.007999,0.114000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 309: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.007999,0.114000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 310: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025999,0.100000,0.003000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025999,0.099000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
			default: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025999,0.099000,0.002000, 0.000000,0.000000,-79.300033, 1.000000,1.000000,1.000000);
		}
	}
	else if(type == 23)//vитары
	{
		switch (skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.080000,-0.118999,-0.045999, 0.000000,113.100006,0.000000, 0.717999,1.000000,0.702999);
			case 2: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.023000,-0.130000,-0.034000, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 3: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.023000,-0.127000,-0.034000, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 4: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.063000,-0.119000,-0.034000, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 5: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082999,-0.159000,-0.052999, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 6: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082999,-0.148999,-0.052999, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 7: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.082999,-0.120999,-0.052999, 0.000000,119.000015,0.000000, 0.688000,1.000000,0.696000);
			case 9: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.095999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 12: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.076999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 13: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.084999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 14: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.089999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 15: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.111999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 17: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.096999,-0.052999, 8.699999,119.000015,-3.999999, 0.688000,1.000000,0.696000);
			case 18: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.108999,-0.052999, -8.800000,119.000007,8.100000, 0.688000,1.000000,0.696000);
			case 19: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.108999,-0.052999, 2.799998,119.000007,0.900001, 0.688000,1.000000,0.696000);
			case 20: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.110999,-0.052999, 10.099999,119.000007,-6.299997, 0.688000,1.000000,0.696000);
			case 21: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.119999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 22: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.142999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 23: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.129999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 24: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.117999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 25: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.117999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 28: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.106999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 29: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.145999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 30: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.105999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 32: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.079999,-0.052999, 8.299997,120.000000,-6.299997, 0.688000,1.000000,0.696000);
			case 33: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.102999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 34: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.102999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 35: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.113999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 36: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.113999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 37: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.112999,-0.113999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 43: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.094999,-0.112999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 44: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.094999,-0.092999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 45: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.134999,-0.106999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 46: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.134999,-0.134999,-0.052999, -2.700004,113.800003,4.400001, 0.688000,1.000000,0.696000);
			case 47: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.086000,-0.120999,-0.052999, 10.799995,114.099998,-4.700001, 0.688000,1.000000,0.696000);
			case 48: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.086000,-0.109999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 57: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.086000,-0.109999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 58: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.086000,-0.082999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 59: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.086000,-0.128999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 60: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.086000,-0.128999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 61: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.086000,-0.103999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 66: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.086000,-0.126999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 67: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.086000,-0.126999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 68: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.086000,-0.099999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 70: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.086000,-0.105999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 71: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.107000,-0.121999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 72: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.107000,-0.097999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 73: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.107000,-0.097999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 78: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.107000,-0.134999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 79: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.107000,-0.129999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 82: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.107000,-0.110999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 83: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.107000,-0.110999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 84: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.107000,-0.130999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 86: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.107000,-0.130999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 94: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.107000,-0.095999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 95: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.107000,-0.088999,-0.024999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 96: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.150000,-0.118999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 97: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.150000,-0.106999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 98: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.150000,-0.123999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 100: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.150000,-0.111999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 101: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.150000,-0.137999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 102: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.150000,-0.116999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 103: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.099000,-0.157000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 104: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.099000,-0.140999,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 105: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.099000,-0.163000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 106: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.099000,-0.134000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 107: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.099000,-0.134000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 108: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.099000,-0.104000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 109: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 110: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 111: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 112: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 113: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 114: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.099000,-0.109000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 115: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.099000,-0.117000,-0.014999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 116: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.099000,-0.130000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 119: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.121000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 120: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.132000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 121: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.141000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 122: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.108000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 123: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.123000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 124: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.083000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 125: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.109000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 126: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.123000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 127: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.127000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 128: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.097000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 132: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.090000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 133: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.099000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 134: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.087000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 135: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.120000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 136: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.084000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 137: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.087000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 141: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.083000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 142: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.141000,-0.135000,-0.032999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 143: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.058000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 144: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.058000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 147: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.058000,-0.102000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 148: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.088000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 150: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.077000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 153: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.098000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 154: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.112000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 155: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.139000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 156: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.105000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 158: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.105000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 159: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.105000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 160: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.089000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 161: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.109000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 162: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.101000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 164: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.103000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 165: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 166: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 167: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 168: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 169: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.083000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 170: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.116000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 171: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.110000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 172: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.076000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 173: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 174: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 175: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 176: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.134000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 177: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.134000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 179: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 180: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.122000,-0.130000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 181: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.162000,-0.096000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 182: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.070000,-0.120000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 183: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.070000,-0.099000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 184: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.114000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 185: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.114000,-0.126000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 186: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.114000,-0.126000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 187: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.102000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 188: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.100000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 189: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.119000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 200: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.107000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 202: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.102000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 203: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 204: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 206: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.101000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 208: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.122999,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 212: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.082000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 213: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.114000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 217: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.097000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 220: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 221: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.106000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 222: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.106000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 223: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.133000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 227: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.128000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 228: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.128000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 230: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.083000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 231: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.105000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 234: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.085000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 235: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.098000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 236: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.086000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 239: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.118000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 240: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.124000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 241: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.139000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 242: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.137000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 247: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.106000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 248: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.106000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 249: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.113000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 250: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.113000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 254: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 255: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.104000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 258: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.131000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 259: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.131000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 261: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 262: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 265: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.137000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 266: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.092000,-0.137000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 267: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.292000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 269: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.052000,-0.178000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 270: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.133000,-0.127000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 271: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.116000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 272: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.116000,-0.134000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 273: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.116000,-0.111000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 274: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 275: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 276: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 280: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 281: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 282: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 283: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 284: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.116000,-0.121000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 286: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.116000,-0.135000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 288: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.116000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 289: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.116000,-0.128000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 290: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.116000,-0.124000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 291: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.116000,-0.124000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 292: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.176000,-0.108000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 294: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.176000,-0.128000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 295: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.059000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 296: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.059000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 297: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.094000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 299: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.131000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 300: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 301: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 302: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 303: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 304: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 305: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.114000,-0.123000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 306: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.114000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 307: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.114000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 308: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.114000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 309: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.114000,-0.090000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 310: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.114000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			case 311: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.114000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
			default: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.114000,-0.122000,-0.052999, 4.199994,119.299995,-4.700001, 0.688000,1.000000,0.696000);
		}
	}
	else if(type == 24)//Фсы 2
	{
		switch(skinid)
		{
			case 1: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.036998,0.113999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033998,0.126999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 3: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035998,0.137999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 4: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.081998,0.137999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 5: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.064998,0.135999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 6: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.050998,0.116999,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 7: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.034998,0.139000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 9: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.003998,0.121000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 10: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.023998,0.129000,-0.002000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 11: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.012998,0.119000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 12: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.015998,0.118000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 14: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.031998,0.148000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 15: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.012998,0.108000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 17: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035998,0.121000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 18: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.005998,0.124000,-0.002000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 19: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.031998,0.127000,-0.002000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 20: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.031998,0.117000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 21: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035998,0.139000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 22: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035998,0.134000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 23: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035998,0.133000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 24: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035998,0.123000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 25: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035998,0.118000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 26: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.026998,0.125000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 27: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.031998,0.128000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 28: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.031998,0.135000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 29: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033998,0.139000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 30: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029998,0.143000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 31: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033998,0.139000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 32: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027998,0.102000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 33: SetPlayerAttachedObject (playerid, 7, setobject, 2, -0.006001,0.111000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 34: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.044998,0.130000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 35: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.044998,0.114000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 36: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.042998,0.120000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 37: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.042998,0.118000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 38: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.047998,0.136000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 39: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028998,0.127000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 40: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.018998,0.118000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 41: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.018998,0.125000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 44: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.037998,0.130000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 45: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.010998,0.120000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 46: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027998,0.143000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 47: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.026998,0.137000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 48: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.030998,0.130000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 55: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.016998,0.117000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 56: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.015998,0.117000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 57: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.055998,0.137000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 58: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.032998,0.123000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 59: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.018998,0.124000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 60: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028998,0.136000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 61: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028998,0.127000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 62: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028998,0.130000,0.005999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 66: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.041998,0.122000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 67: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.041998,0.120000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 69: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.009998,0.125000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 70: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.024998,0.130000,0.005999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 71: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029998,0.104000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 72: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035998,0.123000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 73: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035998,0.122000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 76: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.010998,0.116000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 78: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.072998,0.120000,0.006999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 79: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.034998,0.120000,0.006999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 82: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.038998,0.136000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 83: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033998,0.121000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 84: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.038998,0.120000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 86: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.054998,0.122000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 90: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.011998,0.124000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 91: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.011998,0.117000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 93: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.011998,0.124000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 94: SetPlayerAttachedObject (playerid, 7, setobject, 2, -0.003001,0.102000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 95: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028998,0.099000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 96: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.042998,0.125000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 97: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.004998,0.122000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 98: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.026998,0.143000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 100: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.034998,0.132000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 101: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029998,0.124000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 103: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035998,0.133000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 104: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.037998,0.135000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 105: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033998,0.132000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 108: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.034998,0.132000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 111: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.039998,0.115000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 112: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.039998,0.105000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 114: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028998,0.137000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 115: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028998,0.137000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 116: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028998,0.137000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 117: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.018998,0.127000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 118: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.018998,0.127000,-0.004000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 119: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.024998,0.127000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 120: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.024998,0.123000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 121: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.037998,0.129000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 122: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.042998,0.131000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 123: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.034998,0.137000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 124: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.040998,0.133000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 125: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.040998,0.109000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 126: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028998,0.116000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 127: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.039998,0.131000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 132: SetPlayerAttachedObject (playerid, 7, setobject, 2, -0.014001,0.115000,-0.000000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 135: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.017998,0.127000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 137: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029998,0.098000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 141: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.010998,0.118000,0.001999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 143: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.034998,0.134000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 147: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.040998,0.124000,0.003999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 148: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.008998,0.116000,0.003999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 150: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.008998,0.116000,0.003999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 151: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.024998,0.128000,-0.002000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 152: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.024998,0.110000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 153: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.039998,0.117000,0.006999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 154: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.005998,0.122000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 155: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.037998,0.134000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 156: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025998,0.134000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 158: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.039998,0.125000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 159: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027998,0.128000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 160: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.045998,0.114000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 161: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.041998,0.129000,0.004999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 163: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.041998,0.123000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 164: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.041998,0.121000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 165: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.017998,0.123000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 166: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.017998,0.122000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 169: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.013998,0.116000,0.002999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 170: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.031998,0.134000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 171: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.031998,0.121000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 172: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.014998,0.125000,0.000999, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 176: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.038998,0.134000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 180: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035998,0.134000,-0.005000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 181: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.060998,0.130000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 182: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.017998,0.119000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 183: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.042998,0.119000,-0.001000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 184: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033998,0.136000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 185: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.023998,0.125000,-0.003000, 0.000000,0.000000,67.699974, 1.000000,1.000000,0.771000);
			case 186: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.023998,0.125000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.771000);
			case 187: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.039998,0.125000,0.005999, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 188: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.039998,0.129000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 191: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027998,0.124000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 192: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.032998,0.124000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 193: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.032998,0.124000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 194: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.032998,0.124000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 195: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.032998,0.126000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 200: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.032998,0.119000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 202: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.043998,0.130000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 206: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.044998,0.130000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 207: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.008998,0.117000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 208: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028998,0.128000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 211: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.011998,0.123000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 212: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.044998,0.112000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 213: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.044998,0.128000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 214: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.011998,0.116000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 215: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.008998,0.116000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 216: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.008998,0.116000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 217: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.039998,0.123000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 219: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.005998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 223: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.016998,0.150000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 224: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.006998,0.119000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 225: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.006998,0.119000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 226: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.012998,0.119000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 227: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.052998,0.137000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 228: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.034998,0.148000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 229: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.032998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 230: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.001998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 231: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.038998,0.145000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 234: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.030998,0.099000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 235: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.001998,0.109000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 239: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.064998,0.113000,0.005999, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 240: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.015998,0.124000,0.002999, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 241: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.012998,0.134000,0.002999, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 242: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.004998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.000000,1.000000,0.816000);
			case 243: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.008998,0.120000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 247: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.038998,0.126000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 248: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025998,0.134000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 249: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.041998,0.134000,0.005999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 250: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.031998,0.136000,-0.004000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 252: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.025998,0.123000,0.003999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 254: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.039998,0.125000,0.001999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 255: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.036998,0.115000,0.006999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 258: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.036998,0.143000,0.002999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 259: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033998,0.143000,0.002999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 261: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.039998,0.108000,0.002999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 262: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.019998,0.124000,-0.003000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 265: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033998,0.111000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 266: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.039998,0.110000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 267: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.036998,0.116000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 271: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.054998,0.126000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 272: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.042998,0.131000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 275: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029998,0.108000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 276: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029998,0.108000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 280: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029998,0.110000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 281: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027998,0.111000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 282: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.034998,0.108000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 283: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.028998,0.109000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 284: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.039998,0.140000,0.006999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 286: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.033998,0.107000,-0.001000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 287: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.016998,0.129000,0.004999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 288: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029998,0.108000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 289: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.042998,0.115000,0.003999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 290: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.021998,0.118000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 291: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.027998,0.125000,0.000999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 292: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.024998,0.118000,-0.004000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 293: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029998,0.120000,-0.004000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 294: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029998,0.117000,0.001999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 295: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.014998,0.124000,0.001999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 296: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.045998,0.138000,0.001999, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 298: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.045998,0.122000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 299: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.043998,0.134000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 300: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.030998,0.112000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 301: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029998,0.113000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 302: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.035998,0.108000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 303: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029998,0.111000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 304: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.029998,0.111000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 305: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.037998,0.111000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 306: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.012998,0.126000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 307: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.008998,0.127000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 308: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.008998,0.127000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 309: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.008998,0.127000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 310: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.030998,0.109000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			case 311: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.030998,0.109000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
			default: SetPlayerAttachedObject (playerid, 7, setobject, 2, 0.030998,0.109000,-0.000000, 0.000000,0.000000,76.999992, 1.111000,0.927000,0.816000);
		}
	}
	else if(type == 25)
	{
		switch (skinid)//Ќовогодние шапки (19064 19065 19066)
		{
			case 1: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120999,0.000000,-0.000000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140000,0.001999,-0.000000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161000,0.001999,-0.000000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152000,-0.004000,-0.000000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152000,0.007999,-0.003000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118000,0.000999,-0.003000, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118000,0.000999,0.001999, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118000,-0.018000,0.001999, 3.400000,87.100013,88.299980, 1.000000,1.116000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118000,0.019999,0.001999, 3.400000,87.100013,88.299980, 1.014000,1.183000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.111000,-0.022000,0.001999, 3.400000,87.100013,88.299980, 0.920000,1.077000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 0.920000,1.077000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 1.010999,1.077000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 1.010999,1.077000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127000,0.004999,0.001999, 3.400000,87.100013,88.299980, 1.010999,1.077000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127000,0.015999,0.004000, 3.400000,87.100013,88.299980, 1.010999,1.077000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127000,0.015999,0.004000, 3.400000,87.100013,88.299980, 1.095999,1.077000,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127000,0.024999,-0.001000, 3.400000,87.100013,88.299980, 1.172999,1.160000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.127000,0.016999,0.000999, 3.400000,87.100013,88.299980, 1.172999,1.160000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113000,-0.008000,0.003999, 3.400000,87.100013,88.299980, 1.172999,1.178000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113000,0.018999,0.003999, 3.400000,87.100013,88.299980, 0.858999,0.969000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113000,-0.012000,0.003999, 3.400000,87.100013,88.299980, 0.858999,0.990000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144000,0.010999,0.003999, 3.400000,87.100013,88.299980, 0.959999,1.083999,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.144000,-0.000000,0.003999, 3.400000,87.100013,88.299980, 0.959999,1.122000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151000,-0.008000,-0.002000, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113000,0.009999,0.004999, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113000,0.028999,0.004999, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 55: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113000,-0.011000,0.004999, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 56: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113000,-0.011000,0.004999, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 57: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147000,0.022999,0.004999, 3.400000,87.100013,88.299980, 1.074999,1.185000,1.000000);
			case 58: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109000,0.000999,0.004999, 3.400000,87.100013,88.299980, 0.882999,0.963999,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.152000,-0.001000,0.000999, 3.400000,87.100013,88.299980, 1.024999,1.054999,1.001000);
			case 60: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129000,0.006999,0.000999, 3.400000,87.100013,88.299980, 1.024999,1.054999,1.001000);
			case 66: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129000,0.006999,0.000999, 3.400000,87.100013,88.299980, 1.024999,1.054999,1.001000);
			case 67: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129000,0.006999,0.000999, 3.400000,87.100013,88.299980, 1.024999,1.054999,1.001000);
			case 68: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129000,0.025999,0.001999, 3.400000,87.100013,88.299980, 0.942998,0.978999,1.001000);
			case 69: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129000,-0.012000,0.002999, 3.400000,87.100013,88.299980, 0.942998,1.102999,1.001000);
			case 70: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129000,0.006999,0.007000, 3.400000,87.100013,88.299980, 0.942998,1.102999,1.001000);
			case 72: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129000,0.006999,0.008000, 3.400000,87.100013,88.299980, 0.942998,1.102999,1.001000);
			case 73: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117000,0.014999,-0.001000, 3.400000,87.100013,88.299980, 0.997998,1.126000,1.001000);
			case 76: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.130000,-0.013000,-0.001000, 3.400000,87.100013,88.299980, 1.016998,1.159000,1.001000);
			case 79: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112000,0.009999,0.008000, 3.400000,87.100013,88.299980, 0.954998,1.135000,1.001000);
			case 82: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.180000,0.009999,0.008000, 3.400000,87.100013,88.299980, 0.976998,1.135000,1.001000);
			case 83: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.172000,0.001999,0.008000, 3.400000,87.100013,88.299980, 1.003998,1.135000,1.001000);
			case 84: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.175000,-0.001000,0.008000, 3.400000,87.100013,88.299980, 1.005998,1.018000,1.001000);
			case 86: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 1.005998,1.018000,1.001000);
			case 90: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 1.108998,1.145000,1.001000);
			case 91: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117000,-0.001000,0.001999, 3.400000,87.100013,88.299980, 1.135998,1.145000,1.044000);
			case 95: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117000,-0.013000,0.001999, 3.400000,87.100013,88.299980, 0.939998,1.133000,1.044000);
			case 96: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117000,0.016999,0.003000, 3.400000,87.100013,88.299980, 1.019998,1.160000,1.044000);
			case 97: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.117000,0.001999,0.003000, 3.400000,87.100013,88.299980, 1.055998,1.104000,1.044000);
			case 98: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132000,0.019999,0.003000, 3.400000,87.100013,88.299980, 1.055998,1.104000,1.044000);
			case 100: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132000,0.011999,0.005000, 3.400000,87.100013,88.299980, 1.116998,1.189000,1.044000);
			case 101: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132000,0.008999,0.005000, 3.400000,87.100013,88.299980, 1.116998,1.189000,1.044000);
			case 102: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129000,0.008999,-0.000999, 3.400000,87.100013,88.299980, 1.116998,1.320001,1.044000);
			case 103: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132000,0.003999,0.001000, 3.400000,87.100013,88.299980, 1.116998,1.184001,1.044000);
			case 105: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.132000,0.003999,0.001000, 3.400000,87.100013,88.299980, 1.116998,1.184001,1.044000);
			case 106: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147000,-0.010000,0.001000, 3.400000,87.100013,88.299980, 1.116998,1.184001,1.044000);
			case 108: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.138000,0.001999,0.001000, 3.400000,87.100013,88.299980, 1.116998,1.184001,1.044000);
			case 109: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139000,0.006999,0.001000, 3.400000,87.100013,88.299980, 1.116998,1.184001,1.044000);
			case 111: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134000,0.009000,0.000000, 1.699999,90.200042,89.400001, 1.000000,1.000000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.099000,0.009000,0.000000, 1.699999,90.200042,89.400001, 1.000000,1.000000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145999,0.005000,0.000000, 1.699999,90.200042,89.400001, 1.012999,1.100999,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.145999,0.005000,0.000000, 1.699999,90.200042,89.400001, 1.062999,1.139999,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112000,0.018999,0.000000, 1.699999,90.200042,89.400001, 0.937999,1.009999,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112000,0.018999,0.000000, 1.699999,90.200042,89.400001, 0.937999,1.009999,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133999,0.010999,0.000999, 1.699999,90.200042,89.400001, 0.937999,1.099999,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133999,-0.003000,0.000999, 1.699999,90.200042,89.400001, 1.072000,1.099999,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133999,0.000999,0.000999, 1.699999,90.200042,89.400001, 1.072000,1.148000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133999,0.000999,0.000999, 1.699999,90.200042,89.400001, 0.972000,1.061000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141000,0.000999,-0.003000, 1.699999,90.200042,89.400001, 1.165000,1.223000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141000,0.006999,0.003999, 1.699999,90.200042,89.400001, 1.056000,1.085000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.120999,0.006999,-0.000000, 1.699999,90.200042,89.400001, 1.056000,1.085000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134000,0.000999,-0.000000, 1.699999,90.200042,89.400001, 1.056000,1.106000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134000,0.010999,-0.000000, 1.699999,90.200042,89.400001, 1.056000,1.106000,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150000,0.010999,-0.000000, 1.699999,90.200042,89.400001, 1.056000,1.106000,1.000000);
			case 131: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.109000,0.010999,-0.000000, 1.699999,90.200042,89.400001, 1.056000,1.106000,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.042000,0.000999,-0.000000, 1.699999,90.200042,89.400001, 0.942000,0.921000,1.000000);
			case 142: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133000,0.000999,-0.001000, 1.699999,90.200042,89.400001, 0.942000,1.146000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.129000,-0.013000,0.008999, 1.699999,90.200042,89.400001, 0.942000,1.009000,1.000000);
			case 150: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139000,-0.024000,0.008999, 1.699999,90.200042,89.400001, 0.942000,1.129000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.139000,-0.029000,0.000999, 1.699999,90.200042,89.400001, 0.992000,1.235000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113000,-0.007000,0.000999, 1.699999,90.200042,89.400001, 0.992000,1.029000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.165000,-0.034000,0.000999, 1.699999,90.200042,89.400001, 0.992000,1.198000,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118000,-0.000000,0.000999, 1.699999,90.200042,89.400001, 1.047000,1.198000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.118000,0.003999,0.000999, 1.699999,90.200042,89.400001, 0.854000,0.962999,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147000,0.003999,0.000999, 1.699999,90.200042,89.400001, 0.854000,0.962999,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128000,0.003999,0.000999, 1.699999,90.200042,89.400001, 0.854000,0.962999,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128000,0.003999,-0.001000, 1.699999,90.200042,89.400001, 0.854000,0.962999,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.128000,0.003999,-0.001000, 1.699999,90.200042,89.400001, 0.886000,1.061999,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126000,0.003999,-0.001000, 1.699999,90.200042,89.400001, 0.886000,1.061999,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126000,-0.013000,-0.001000, 1.699999,90.200042,89.400001, 1.030000,1.197999,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126000,0.001999,-0.001000, 1.699999,90.200042,89.400001, 0.985000,1.197999,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.141000,-0.005000,-0.001000, 1.699999,90.200042,89.400001, 1.070000,1.092000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136000,-0.005000,-0.001000, 4.000000,90.900016,84.900016, 1.070000,1.179999,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136000,-0.000000,-0.001000, 4.000000,90.900016,84.900016, 1.070000,1.179999,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.137000,0.004999,-0.001000, 4.000000,90.900016,84.900016, 1.070000,1.179999,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.159000,-0.009000,-0.003000, 4.000000,90.900016,84.900016, 1.070000,1.179999,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119000,0.007999,0.000999, 4.000000,90.900016,84.900016, 0.909000,1.015999,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119000,0.007999,0.000999, 4.000000,90.900016,84.900016, 0.992000,1.106999,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126000,0.004999,0.000999, 4.000000,90.900016,84.900016, 0.992000,1.112000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.149000,-0.009000,0.000999, 4.000000,90.900016,84.900016, 0.992000,1.112000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.148000,-0.009000,0.000999, 4.000000,90.900016,84.900016, 0.992000,1.112000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.112000,-0.009000,0.004999, 4.000000,90.900016,84.900016, 0.992000,1.112000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122000,0.004999,0.004999, 4.000000,90.900016,84.900016, 0.992000,1.112000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.136000,-0.000000,0.004999, 4.000000,90.900016,84.900016, 1.079001,1.112000,1.070999);
			case 191: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153000,-0.015000,0.004999, 4.000000,90.900016,84.900016, 1.126001,1.186000,1.070999);
			case 192: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153000,-0.015000,0.004999, 4.000000,90.900016,84.900016, 1.126001,1.186000,1.070999);
			case 193: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153000,-0.006000,0.004999, 4.000000,90.900016,84.900016, 1.126001,1.186000,1.070999);
			case 194: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.153000,-0.006000,0.000999, 4.000000,90.900016,84.900016, 1.126001,1.186000,1.070999);
			case 200: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140000,-0.006000,0.000999, 4.000000,90.900016,84.900016, 1.126001,1.186000,1.070999);
			case 206: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140000,0.020999,0.000999, 4.000000,90.900016,84.900016, 0.903001,1.018000,1.070999);
			case 207: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.090000,0.005999,0.000999, 4.000000,90.900016,84.900016, 0.903001,1.018000,1.070999);
			case 212: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.113000,0.007999,0.000999, 4.000000,90.900016,84.900016, 0.903001,1.018000,1.070999);
			case 213: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.126000,0.007999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.116000,1.070999);
			case 217: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.140000,0.007999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.116000,1.070999);
			case 220: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103000,0.023999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.116000,1.070999);
			case 221: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.154000,-0.011000,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.283000,1.070999);
			case 222: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.151000,-0.024000,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.283000,1.070999);
			case 223: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.161000,0.002999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.113000,1.070999);
			case 226: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122000,-0.016000,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.182000,1.070999);
			case 227: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122000,0.026999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.182000,1.070999);
			case 228: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.147000,0.001999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.182000,1.070999);
			case 229: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.101000,0.001999,0.000999, 4.000000,90.900016,84.900016, 1.023001,1.182000,1.070999);
			case 235: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.067000,0.007999,0.000999, 4.000000,90.900016,84.900016, 0.900001,1.023000,1.070999);
			case 236: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.110000,-0.001000,0.000999, 4.000000,90.900016,84.900016, 0.900001,1.023000,1.070999);
			case 240: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146000,-0.001000,0.000999, 4.000000,90.900016,84.900016, 0.995001,1.180000,1.070999);
			case 247: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.146000,-0.003000,0.000999, 4.000000,90.900016,84.900016, 1.114001,1.180000,1.070999);
			case 248: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.174000,-0.003000,0.000999, 4.000000,90.900016,84.900016, 1.114001,1.180000,1.070999);
			case 250: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.125000,0.007999,-0.007000, 4.000000,90.900016,84.900016, 1.022000,1.180000,1.070999);
			case 252: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.134000,0.004999,-0.007000, 4.000000,90.900016,84.900016, 1.149001,1.213000,1.070999);
			case 254: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142000,0.000999,-0.001000, 4.000000,90.900016,84.900016, 1.149001,1.213000,1.070999);
			case 258: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142000,0.000999,-0.001000, 4.000000,90.900016,84.900016, 1.149001,1.213000,1.070999);
			case 259: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.142000,0.000999,-0.001000, 4.000000,90.900016,84.900016, 1.149001,1.213000,1.070999);
			case 262: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.122000,0.009999,-0.001000, 4.000000,90.900016,84.900016, 0.954001,1.015000,1.070999);
			case 265: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.103000,0.009999,-0.001000, 4.000000,90.900016,84.900016, 0.954001,1.015000,1.070999);
			case 266: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114000,0.009999,-0.001000, 4.000000,90.900016,84.900016, 0.954001,1.190000,1.070999);
			case 267: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.104000,0.002999,-0.001000, 4.000000,90.900016,84.900016, 1.005001,1.190000,1.070999);
			case 268: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.114000,0.002999,-0.001000, 4.000000,90.900016,84.900016, 1.005001,1.190000,1.070999);
			case 272: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.133000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.005001,1.190000,1.070999);
			case 273: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.099000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 274: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 275: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 276: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 280: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 281: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 282: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 286: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.115000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.060001,1.131000,1.070999);
			case 291: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.150000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 1.141000,1.131000,1.070999);
			case 292: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.098000,0.015999,-0.001000, 4.000000,90.900016,84.900016, 0.912000,1.110000,1.070999);
			case 294: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143000,0.004999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.110000,1.070999);
			case 295: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119000,0.004999,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.110000,1.070999);
			case 296: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.143000,-0.021000,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.110000,1.070999);
			case 297: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155000,-0.010000,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.182000,1.070999);
			case 299: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.155000,0.012999,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.182000,1.070999);
			case 300: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119000,0.012999,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.182000,1.070999);
			case 301: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119000,0.012999,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.182000,1.070999);
			case 302: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119000,0.014999,0.001999, 4.000000,90.900016,84.900016, 1.040000,1.182000,1.070999);
			case 303: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119000,0.014999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.090000,1.070999);
			case 304: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119000,0.014999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.090000,1.070999);
			case 305: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119000,0.014999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.194000,1.070999);
			case 310: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119000,0.014999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.194000,1.070999);
			case 311: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119000,0.014999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.194000,1.070999);
			default: SetPlayerAttachedObject (playerid, 5, setobject, 2, 0.119000,0.014999,-0.001000, 4.000000,90.900016,84.900016, 1.040000,1.194000,1.070999);
		}
	}
	else if(type == 26)
	{
		switch (skinid)//ѕиратска¤ пов¤зка (19085)
		{
			case 1: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.102999,0.020000,-0.003999, -2.900000,91.700050,94.000015, 0.911999,1.068999,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.087999,0.038000,-0.003999, -2.900000,91.700050,94.000015, 0.911999,1.068999,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.094999,0.036000,-0.003999, -2.900000,91.700050,94.000015, 0.987000,1.141999,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.121000,0.023000,-0.004999, -52.799995,103.800048,143.000045, 0.987000,1.141999,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.102000,0.025000,-0.004999, -52.799995,103.800048,143.000045, 1.080000,1.207999,1.000000);
			case 6: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.076000,0.035000,-0.003999, -52.799995,103.800048,142.700042, 0.952000,1.031999,0.780000);
			case 7: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.076999,0.048999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 8: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.068000,0.033999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 9: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.042000,0.033999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 10: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.050000,0.036999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 11: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.050000,0.040999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 12: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.050000,0.034999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 13: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.063999,0.032999,-0.006999, -52.799995,103.800048,142.700042, 0.952000,1.151999,0.866000);
			case 14: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.078999,0.038999,0.002000, -52.799995,103.800048,142.700042, 1.049000,1.184000,0.866000);
			case 15: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.058000,0.001999,-0.005999, -52.799995,103.800048,142.700042, 1.049000,1.184000,0.866000);
			case 17: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.068999,0.028000,-0.005999, -52.799995,103.800048,142.700042, 1.049000,1.184000,0.866000);
			case 19: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.068999,0.028000,-0.005999, -52.799995,103.800048,142.700042, 1.049000,1.184000,0.866000);
			case 20: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.074000,0.024000,-0.005999, -57.499988,103.800048,145.000152, 1.049000,1.184000,0.866000);
			case 21: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.074000,0.034000,-0.005999, -57.499988,103.800048,145.000152, 1.049000,1.184000,0.866000);
			case 22: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.074000,0.034000,-0.005999, -57.499988,103.800048,145.000152, 1.049000,1.184000,0.866000);
			case 23: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.078000,0.032000,-0.005999, -57.499988,103.800048,145.000152, 1.049000,1.184000,0.866000);
			case 24: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.071000,0.033000,0.003000, -57.499988,103.800048,145.000152, 0.945000,1.044000,0.866000);
			case 25: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.071000,0.030000,0.003000, -57.499988,103.800048,145.000152, 0.945000,1.044000,0.866000);
			case 26: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.064999,0.033000,-0.000999, -57.499988,103.800048,145.000152, 0.948000,1.050999,0.866000);
			case 28: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.071999,0.039000,-0.000999, -57.499988,103.800048,145.000152, 0.916000,1.050999,0.866000);
			case 29: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.080999,0.048000,0.000000, -57.499988,103.800048,145.000152, 0.916000,1.050999,0.866000);
			case 31: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.071999,0.050000,0.000000, -57.499988,103.800048,145.000152, 0.916000,1.050999,0.866000);
			case 33: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.013999,0.017000,0.000000, -57.499988,103.800048,145.000152, 0.916000,0.944999,0.755000);
			case 35: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.075999,0.028000,0.002000, -57.499988,103.800048,145.000152, 0.916000,0.944999,0.755000);
			case 36: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.075999,0.028000,0.002000, -57.499988,103.800048,145.000152, 0.916000,0.944999,0.755000);
			case 37: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.075999,0.028000,0.002000, -57.499988,103.800048,145.000152, 0.964000,0.976999,0.755000);
			case 40: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.052000,0.028000,0.002000, -57.499988,103.800048,145.000152, 0.964000,0.976999,0.755000);
			case 44: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.073000,0.035000,-0.003999, -57.499988,103.800048,145.000152, 0.848000,1.011999,0.814999);
			case 46: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.071000,0.066000,-0.003999, -57.499988,103.800048,145.000152, 0.848000,1.111000,0.814999);
			case 56: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.055000,0.037000,-0.003999, -57.499988,103.800048,145.000152, 0.848000,1.111000,0.814999);
			case 58: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.072999,0.026000,-0.003999, -57.499988,103.800048,145.000152, 0.848000,1.018000,0.814999);
			case 59: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.063000,0.046000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 60: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.075999,0.049000,-0.006999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 61: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.067999,0.040000,-0.006999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 66: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.078999,0.036000,0.000000, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 67: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.078999,0.036000,0.000000, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 68: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.066999,0.040000,0.000000, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 69: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.055999,0.044000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 70: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.064999,0.045000,0.004000, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 71: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.064999,0.030000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 72: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.067999,0.052000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 73: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.067999,0.052000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 76: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.055999,0.041000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.093999,0.814999);
			case 78: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.093999,0.021000,0.004000, -57.499988,103.800048,145.000152, 0.870000,0.997999,0.814999);
			case 79: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.068999,0.031000,0.004000, -57.499988,103.800048,145.000152, 0.870000,0.997999,0.814999);
			case 83: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.076999,0.037000,-0.001999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 90: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.048999,0.045000,-0.001999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 91: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.048999,0.040000,-0.001999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 93: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.048999,0.046000,-0.007999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 95: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.070999,0.010000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 96: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.081999,0.034000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 97: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.047999,0.032000,-0.007999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 98: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.072999,0.062000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 101: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.072999,0.039000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 102: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.072999,0.044000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 103: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.082999,0.044000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 105: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.082999,0.046000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 106: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.082999,0.046000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 107: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.082999,0.046000,-0.006999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 108: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.079000,0.033000,-0.004999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 109: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.079000,0.046000,-0.007999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 110: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.079000,0.046000,-0.007999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 111: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.079000,0.035000,-0.007999, -57.499988,103.800048,145.000152, 0.870000,1.127999,0.814999);
			case 112: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.075000,0.025000,-0.003999, -57.499988,103.800048,145.000152, 0.870000,1.007999,0.814999);
			case 113: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.085999,0.047000,-0.003999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 114: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.069000,0.042000,-0.002999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 117: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.059000,0.042000,-0.002999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 118: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.059000,0.042000,-0.002999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 119: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.073999,0.038000,-0.005999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 120: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.068999,0.038000,-0.005999, -57.499988,103.800048,145.000152, 0.890999,1.152999,0.814999);
			case 121: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.068999,0.039000,-0.003999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 122: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.071000,0.039000,-0.003999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 124: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.079999,0.039000,-0.006999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 125: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.076999,0.035000,-0.006999, -57.499988,103.800048,145.000152, 0.890999,1.089999,0.814999);
			case 126: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.076999,0.035000,-0.006999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 127: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.076999,0.045000,-0.006999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 128: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.082000,0.052000,-0.006999, -57.499988,103.800048,145.000152, 0.890999,1.191999,0.814999);
			case 132: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.010999,0.015000,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.059999,0.814999);
			case 133: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.084000,0.042000,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.059999,0.814999);
			case 134: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.076000,0.022000,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.059999,0.814999);
			case 135: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.057000,0.033000,-0.000999, -57.499988,103.800048,145.000152, 0.843999,1.019999,0.814999);
			case 136: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.070000,0.023000,0.001000, -57.499988,103.800048,145.000152, 0.843999,1.019999,0.814999);
			case 137: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.052000,0.011000,0.001000, -57.499988,103.800048,145.000152, 0.843999,1.019999,0.814999);
			case 142: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.087000,0.048999,-0.002999, -57.499988,103.800048,145.000152, 0.843999,1.019999,0.814999);
			case 147: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.080000,0.028000,0.004000, -57.499988,103.800048,145.000152, 0.843999,1.019999,0.857000);
			case 153: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.066000,0.022999,0.004000, -57.499988,103.800048,145.000152, 0.843999,0.962999,0.857000);
			case 154: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.045000,0.040999,-0.006999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 155: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.082000,0.044999,-0.004999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 157: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.057000,0.050999,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 158: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.067000,0.032999,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 159: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.067000,0.039999,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 160: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.079000,0.023999,-0.002999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 161: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.084000,0.042999,0.007000, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 162: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.084000,0.047999,0.000000, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 163: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.075000,0.035999,-0.005999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 164: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.077000,0.032999,-0.005999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 165: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.066000,0.044999,-0.004999, -57.499988,103.800048,145.000152, 0.843999,1.005999,0.857000);
			case 166: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.058000,0.036999,-0.002999, -57.499988,103.800048,145.000152, 0.922999,1.066999,0.857000);
			case 170: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.070000,0.045999,-0.009999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 171: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.070000,0.033999,-0.005999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 172: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.044000,0.039999,-0.005999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 173: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.071000,0.039999,-0.005999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 175: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.071000,0.039999,-0.005999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 176: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.084000,0.039999,-0.008999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 177: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.084000,0.039999,-0.008999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 179: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.079000,0.039999,-0.008999, -57.499988,103.800048,145.000152, 0.922999,1.115999,0.857000);
			case 180: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.083000,0.039999,-0.008999, -57.499988,103.800048,145.000152, 0.922999,1.168999,0.857000);
			case 181: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.107000,0.039999,-0.005999, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 182: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.063000,0.042999,-0.005999, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 183: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.080999,0.034999,-0.005999, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 184: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.080999,0.051999,-0.007999, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 186: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.074999,0.043999,-0.000999, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 187: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.073999,0.033999,0.005000, -57.499988,103.800048,145.000152, 0.822999,1.092998,0.857000);
			case 188: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.084999,0.040999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.048999,0.857000);
			case 189: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.070999,0.043999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 190: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.070999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 191: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.070999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 192: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.070999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 193: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.070999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 194: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.070999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 195: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.070999,0.044999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 200: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.080999,0.025999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 202: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.089999,0.047999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 206: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.089999,0.047999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 207: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.042999,0.039999,-0.004999, -57.499988,103.800048,145.000152, 0.822999,1.103999,0.857000);
			case 210: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.070999,0.022999,-0.003999, -57.499988,103.800048,145.000152, 0.822999,1.006999,0.857000);
			case 211: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.050999,0.054999,-0.003999, -57.499988,103.800048,145.000152, 0.822999,1.006999,0.857000);
			case 212: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.072999,0.030999,-0.003999, -57.499988,103.800048,145.000152, 0.822999,1.006999,0.857000);
			case 213: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.086999,0.039999,0.002000, -57.499988,103.800048,145.000152, 0.843999,1.047999,0.857000);
			case 217: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.080999,0.037999,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.047999,0.857000);
			case 220: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.033999,0.052999,-0.001999, -57.499988,103.800048,145.000152, 0.843999,1.047999,0.857000);
			case 221: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.074999,0.038999,-0.001999, -57.499988,103.800048,145.000152, 0.902999,1.143998,0.857000);
			case 222: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.074999,0.038999,-0.001999, -57.499988,103.800048,145.000152, 0.902999,1.143998,0.857000);
			case 223: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.074999,0.061999,-0.003999, -57.499988,103.800048,145.000152, 0.899999,1.153998,0.857000);
			case 227: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.089999,0.050999,-0.007999, -57.499988,103.800048,145.000152, 0.899999,1.127998,0.857000);
			case 228: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.086999,0.057999,-0.004999, -57.499988,103.800048,145.000152, 0.899999,1.127998,0.857000);
			case 229: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.070999,0.025999,-0.004999, -57.499988,103.800048,145.000152, 0.899999,1.127998,0.857000);
			case 230: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.035999,0.030999,-0.002999, -57.499988,103.800048,145.000152, 0.899999,1.013998,0.759999);
			case 235: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.034999,0.017999,-0.005999, -57.499988,103.800048,145.000152, 0.899999,1.032998,0.759999);
			case 236: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.066999,0.028999,-0.001999, -57.499988,103.800048,145.000152, 0.899999,1.070998,0.759999);
			case 239: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.098999,0.014999,0.000000, -57.499988,103.800048,145.000152, 0.899999,1.026998,0.759999);
			case 247: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.086999,0.036999,-0.000999, -57.499988,103.800048,145.000152, 0.899999,1.104998,0.867999);
			case 248: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.074999,0.049999,-0.000999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 251: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.052999,0.046999,-0.004999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 252: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.081999,0.038999,-0.004999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 254: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.084999,0.037999,0.000000, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 255: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.062999,0.014999,0.000000, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 258: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.071999,0.047999,-0.001999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 259: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.071999,0.047999,-0.001999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 262: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.059999,0.034999,-0.006999, -57.499988,103.800048,145.000152, 0.899999,1.141998,0.867999);
			case 265: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.068999,0.025999,-0.003999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 266: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.084999,0.017999,-0.003999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 267: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.074999,0.023999,-0.003999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 270: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.078999,0.031999,-0.003999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 272: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.088999,0.036999,-0.003999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 273: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.057999,0.033999,-0.001999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 274: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 275: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 276: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 280: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 281: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 282: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 283: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.066999,0.025999,-0.006999, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 285: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.083999,0.034999,0.004000, -57.499988,103.800048,145.000152, 0.905000,1.073998,0.867999);
			case 287: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.055999,0.036999,0.007000, -57.499988,103.800048,145.000152, 0.905000,1.056998,0.867999);
			case 288: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.065999,0.019999,-0.002999, -57.499988,103.800048,145.000152, 0.948000,1.056998,0.867999);
			case 291: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.080999,0.034999,-0.002999, -57.499988,103.800048,145.000152, 0.948000,1.056998,0.867999);
			case 292: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.061999,0.021999,-0.006999, -57.499988,103.800048,145.000152, 0.948000,1.056998,0.867999);
			case 293: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.070999,0.029999,-0.008999, -57.499988,103.800048,145.000152, 0.977999,1.027998,0.867999);
			case 295: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.056999,0.026999,-0.001999, -57.499988,103.800048,145.000152, 1.076999,1.143998,0.867999);
			case 296: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.090999,0.012999,-0.001999, -57.499988,103.800048,145.000152, 1.076999,1.143998,0.867999);
			case 297: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.078999,0.021999,-0.000999, -57.499988,103.800048,145.000152, 1.163999,1.255998,0.867999);
			case 299: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.078999,0.034999,-0.005999, -57.499988,103.800048,145.000152, 1.052999,1.174998,0.867999);
			case 300: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.064999,0.024999,-0.005999, -57.499988,103.800048,145.000152, 0.945999,1.057998,0.867999);
			case 301: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.064999,0.024999,-0.005999, -57.499988,103.800048,145.000152, 0.945999,1.057998,0.867999);
			case 302: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.064999,0.024999,-0.005999, -57.499988,103.800048,145.000152, 0.945999,1.057998,0.867999);
			case 303: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.064999,0.029999,-0.005999, -57.499988,103.800048,145.000152, 0.895999,1.057998,0.867999);
			case 304: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.064999,0.029999,-0.005999, -57.499988,103.800048,145.000152, 0.895999,1.057998,0.867999);
			case 305: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.064999,0.029999,-0.005999, -57.499988,103.800048,145.000152, 0.895999,1.057998,0.867999);
			case 306: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.050999,0.037999,-0.006999, -57.499988,103.800048,145.000152, 0.981998,1.121998,0.867999);
			case 307: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.050999,0.037999,-0.006999, -57.499988,103.800048,145.000152, 0.981998,1.121998,0.867999);
			case 308: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.050999,0.037999,-0.006999, -57.499988,103.800048,145.000152, 0.981998,1.121998,0.867999);
			case 309: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.050999,0.033999,-0.006999, -57.499988,103.800048,145.000152, 0.981998,1.121998,0.867999);
			case 310: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.071999,0.028999,-0.004999, -57.499988,103.800048,145.000152, 0.923998,1.033998,0.867999);
			case 311: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.071999,0.028999,-0.004999, -57.499988,103.800048,145.000152, 0.923998,1.033998,0.867999);
			default: SetPlayerAttachedObject (playerid, 8, setobject, 2, 0.071999,0.028999,-0.004999, -57.499988,103.800048,145.000152, 0.923998,1.033998,0.867999);
		}
	}
	else if(type == 27)
	{
		switch (skinid)//Ќовогодний рюкзак (19054 19055 19056 19057 19058)
		{
			case 1..4: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.078000,-0.128999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 5: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.078000,-0.213999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 6..8: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.078000,-0.195999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 9: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.078000,-0.170999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 10: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.009999,-0.181999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 11: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.115000,-0.140999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 12: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.051999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 13: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.108999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 14: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 16: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 17: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 18: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 19: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 20: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.063999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 21: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 22: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 23: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 24: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 25: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 28: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.063999,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 29: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.063999,-0.191999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 30: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.063999,-0.174999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 32: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.063999,-0.152999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 33: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.063999,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 34: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.083999,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 35: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.083999,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 36: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.060999,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 37: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.060999,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 38: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.018999,-0.153999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 39: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.018999,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 40: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.079999,-0.150999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 41: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.102999,-0.146999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 42: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.069999,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 43: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.043999,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 44: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.043999,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 45: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.077999,-0.165999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 46: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.107999,-0.169999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 47: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.107999,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 48: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.107999,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 49: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.107999,-0.158999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 55: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.058999,-0.142999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 56: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.058999,-0.142999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 57: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.144999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 58: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.065999,-0.151999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 59: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.124999,-0.151999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 60: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.092999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 61: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.092999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 62: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.115999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 65: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.115999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 66: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.115999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 67: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.115999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 68: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.115999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 69: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.115999,-0.154999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 70: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.115999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 71: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.115999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 72: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.092999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 73: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.092999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 74: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.092999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 76: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.092999,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 77: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.066000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 78: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.127000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 79: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.127000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 82: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.117000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 83: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.117000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 84: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.117000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 85: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.117000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 86: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.117000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 90: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.117000,-0.148999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 91: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.075000,-0.148999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 93: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.110000,-0.152999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 94: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.026000,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 95: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.065000,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 96: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.143999,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 97: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.100000,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 98: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.100000,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 100: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.100000,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 101: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.153000,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 102: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.097000,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 103: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.097000,-0.201999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 104: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.060000,-0.201999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 105: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.110000,-0.201999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 106: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.110000,-0.201999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 107: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.110000,-0.201999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 108: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 109: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 110: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 111: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 112: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 113: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 114: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 115: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 116: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.110000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 117: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 118: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 119: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 120: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.182999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 121: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.209999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 122: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.196999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 123: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.196999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 124: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 125: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.171999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 126: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.189999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 127: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.189999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 128: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.167999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 132: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.160999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 133: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.108000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 134: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.108000,-0.172999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 135: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.108000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 136: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.053000,-0.162999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 137: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.162999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 141: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.162999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 142: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.184999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 143: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.178999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 144: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.080000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 147: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.101000,-0.151999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 148: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.101000,-0.160999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 149: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.101000,-0.206999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 150: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.101000,-0.155999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 151: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.101000,-0.184999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 152: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.101000,-0.153999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 153: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.082000,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 154: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.082000,-0.173999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 155: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.082000,-0.191999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 156: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.082000,-0.181999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 158: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.082000,-0.181999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 159: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.082000,-0.181999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 160: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.082000,-0.155999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 161: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.082000,-0.177999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 162: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.127000,-0.177999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 163: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.112000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 164: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.112000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 165: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.033000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 166: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.033000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 167: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.104000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 168: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.104000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 170: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.104000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 171: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.104000,-0.186999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 172: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.104000,-0.156999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 173: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.104000,-0.179999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 174: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.104000,-0.179999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 175: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.104000,-0.179999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 176: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.073000,-0.194999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 177: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.073000,-0.194999,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 179: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.110000,-0.167998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 180: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.110000,-0.184998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 181: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.110000,-0.164998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 182: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.098000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 183: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.098000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 184: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.098000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 185: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.098000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 186: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.098000,-0.182998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 187: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.098000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 188: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.098000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 189: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.098000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 190: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.098000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 191: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.098000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 192: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.145000,-0.159998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 193: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.145000,-0.159998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 194: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.145000,-0.159998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 195: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.125000,-0.163998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 196: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.001000,-0.173998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 197: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.043000,-0.187998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 198: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.156000,-0.157998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 199: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.046000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 200: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.117000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 201: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.117000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 202: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.117000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 206: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.117000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 207: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.117000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 208: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.117000,-0.187998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 211: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.117000,-0.153998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 212: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.074000,-0.153998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 213: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.074000,-0.185998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 217: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.074000,-0.185998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 219: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.108000,-0.153998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 220: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.066000,-0.182998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 221: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.066000,-0.182998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 222: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.066000,-0.182998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 223: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.120000,-0.182998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 224: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.120000,-0.151998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 225: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.120000,-0.151998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 226: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.076000,-0.151998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 227: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.135000,-0.186998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 228: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.135000,-0.186998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 229: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.078000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 230: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.078000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 233: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.097000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 234: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.097000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 235: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.097000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 236: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.097000,-0.156998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 239: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.128000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 240: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.090000,-0.176998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 241: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.090000,-0.192998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 242: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.090000,-0.192998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 243: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.090000,-0.174998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 247: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.090000,-0.179998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 248: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.090000,-0.192998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 249: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.090000,-0.178998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 250: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.090000,-0.186998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 252: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.090000,-0.167998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 254: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.090000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 255: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.090000,-0.172998,0.000000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 256: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.107000,-0.165998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 257: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.107000,-0.165998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 258: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.107000,-0.165998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 259: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.107000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 260: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.107000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 261: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.046000,-0.164998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 262: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.088000,-0.175998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 264: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.088000,-0.175998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 265: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.088000,-0.187998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 266: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.088000,-0.187998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 267: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.239000,-0.187998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 268: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.122000,-0.187998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 269: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.089000,-0.223998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 270: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.101000,-0.185998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 271: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.101000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 272: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.058000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 273: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.058000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 274: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.118000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 275: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.118000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 276: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.118000,-0.198998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 277: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.118000,-0.210998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 278: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.118000,-0.210998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 280: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 281: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 282: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 283: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 284: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 285: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.118000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 286: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 287: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 288: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 289: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 290: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 291: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 292: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.096000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 293: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.137000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 294: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.137000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 295: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.058000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 296: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.058000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 297: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.058000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 298: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.149000,-0.180998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 299: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 300: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 301: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 302: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 303: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 304: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 305: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.149000,-0.190998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 306: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.149000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 307: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.104000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 308: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.104000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 309: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.104000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 310: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.104000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			case 311: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.104000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
			default: SetPlayerAttachedObject (playerid, 6, setobject, 1,  0.104000,-0.155998,-0.001000, 0.000000,85.899986,0.000000, 0.240000,0.181000,0.398999);
		}
	}
	else if(type == 28)
	{
		switch (skinid)//Ќовогодн¤¤ Єлка (881)
		{
			case 1: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.286000,-0.134000,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 2: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.286000,-0.134000,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 3: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.286000,-0.134000,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 4: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.286000,-0.134000,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 5: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.229000,-0.171000,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 6: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.274999,-0.171000,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 7: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.274999,-0.171000,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 8: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.274999,-0.171000,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 9: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.273999,-0.094999,-0.045999, 7.900006,84.100006,17.700008, 0.379999,0.286998,0.195998);
			case 12: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.273999,-0.134999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 13: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.220999,-0.134999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 14: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.286999,-0.116999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 15: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.286999,-0.116999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 16: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.116999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 17: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.113999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 18: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.113999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 19: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 20: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 21: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 22: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 23: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 24: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 25: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 28: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 29: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.163999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 30: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.135999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 32: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.105999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 33: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.105999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 34: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.105999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 35: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 36: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 37: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.127999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 40: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.110999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 42: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.252999,-0.110999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.286998,0.195998);
			case 43: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.327000,-0.110999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.258998,0.195998);
			case 44: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.327000,-0.110999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.258998,0.195998);
			case 45: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.310000,-0.110999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.258998,0.195998);
			case 46: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.310000,-0.153999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.258998,0.195998);
			case 47: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.272000,-0.153999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.258998,0.195998);
			case 48: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.272000,-0.138999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.258998,0.195998);
			case 49: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.272000,-0.128999,0.117001, 10.100007,100.700004,17.700008, 0.379999,0.258998,0.195998);
			case 50: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.238000,-0.140999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 54: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.238000,-0.119999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 55: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.238000,-0.119999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 56: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.238000,-0.119999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 57: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.238000,-0.119999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 58: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.238000,-0.112999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 59: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.238000,-0.112999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 60: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.220000,-0.126999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 61: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.259000,-0.126999,0.117001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 62: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.126999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 65: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.121999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 67: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.121999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 68: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.121999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 69: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.121999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 70: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.121999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 71: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.121999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 72: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.121999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 73: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.121999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 76: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.113999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 77: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.113999,0.132001, 10.100007,100.700004,-59.800003, 0.379999,0.258998,0.195998);
			case 78: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.152999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 79: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.152999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 80: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.152999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 81: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.152999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 82: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 83: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 84: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 85: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 86: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.236999,-0.159999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 89: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.283999,-0.153999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 90: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.239999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 91: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.239999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 93: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.239999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 94: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.239999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 95: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.239999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 96: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.239999,-0.150999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 97: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.243999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 98: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.243999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 99: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.243999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 100: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.243999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 101: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.243999,-0.167999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 102: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.243999,-0.156999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 103: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.183999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 104: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.167999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 105: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.167999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 106: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.167999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 107: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.167999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 108: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 109: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 110: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 111: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 112: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 113: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 114: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 115: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 116: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 117: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.146999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 118: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.146999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 119: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.146999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 120: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.155999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 121: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.167999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 122: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.132999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 123: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.145999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 124: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.113999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 125: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.129999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 126: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.149999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 127: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.151999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 128: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.125999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 129: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.117999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 130: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.129999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 131: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.112999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 132: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.112999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 133: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.130999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 134: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.125999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 135: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.227999,-0.139999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 136: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.281999,-0.110999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 137: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.281999,-0.125999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 138: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.281999,-0.106999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 139: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.107999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 140: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.107999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 141: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.107999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 142: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.160999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 143: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.160999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 144: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.160999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 145: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.105999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 146: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.140999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 147: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.128999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 148: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.121999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 149: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.205999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 150: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.124999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 151: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.139999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 152: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 153: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.132999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 154: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.138999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 155: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.158999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 156: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.138999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 157: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.110999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 158: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.135999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 159: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.135999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 160: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.126999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 161: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.134999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 162: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.134999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 163: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.134999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 164: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.131999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 165: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.142999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 166: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.142999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 167: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.142999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 168: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.142999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 169: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.122999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 170: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.136999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 171: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.136999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 172: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.118999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 173: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.138999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 176: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.163999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 177: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.163999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 179: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 180: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.151999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 181: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.129999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 182: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.149999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 183: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.125999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 184: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.135999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 185: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.135999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 186: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.135999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 187: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.135999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 188: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.135999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 189: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.135999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 190: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.113999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 191: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.111999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 192: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.114999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 193: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.107999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 194: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 195: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.122999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 196: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.108999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 197: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.130999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 198: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.113999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 199: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.126999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 200: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.126999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 201: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.126999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 202: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.126999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 203: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.136999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 204: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.136999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 206: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.136999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 207: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.136999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 208: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.150999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 209: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.116999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 210: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.116999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 211: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.116999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 212: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.116999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 213: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.149999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 214: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.116999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 215: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.116999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 216: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.116999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 217: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.130999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 218: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.130999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 219: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 220: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.147999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 221: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.138999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 222: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.138999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 223: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.155999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 224: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 225: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 226: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 227: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.158999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 228: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.142999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 229: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.117999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 230: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.117999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 231: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.128999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 232: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.139999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 234: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 235: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 236: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 237: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 238: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.115999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 239: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.157999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 240: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.145999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 241: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.165999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 242: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.165999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 243: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.146999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 244: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.130999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 247: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 248: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 249: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 250: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.143999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 251: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.112999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 252: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.122999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 253: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.122999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 254: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.137999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 255: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.130999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 256: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.120999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 258: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.155999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 259: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.155999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 260: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.155999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 261: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.125999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 262: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.144999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 263: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.116999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 264: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.156999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 265: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.156999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 266: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.253999,-0.156999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 267: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.149999,-0.156999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 268: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.156999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 269: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.201999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 280: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.159999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 281: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.151999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 282: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.151999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 283: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.151999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 284: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.151999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 285: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.151999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 286: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.167999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 287: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.194999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 289: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.154999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 290: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.154999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 291: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.154999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 292: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.154999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 293: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.146999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 294: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.161999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 295: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.149999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 296: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.149999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 297: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.149999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 298: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.149999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 299: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.158999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 300: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.150999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 301: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.150999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 302: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.150999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 303: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.150999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 304: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.150999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 305: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.150999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 306: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.114999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 307: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.114999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 308: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.114999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 309: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.114999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 310: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.142999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			case 311: SetPlayerAttachedObject (playerid, 6, setobject, 1,  -0.309999,-0.142999,0.132001, 10.100007,110.399986,-17.700010, 0.379999,0.258998,0.195998);
			default: SetPlayerAttachedObject (playerid, 6, setobject, 1, 0.071999,0.028999,-0.004999, -57.499988,103.800048,145.000152, 0.923998,1.033998,0.867999);
		}
	}
	else if(type == 29)
	{
		switch (skinid)//„имодан (19624)
		{
			case 1: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.069000,0.025000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 2: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.068000,0.025000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 3: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.068000,0.025000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 4: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.109000,0.025000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 5: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.132000,0.013000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 6: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.013000,0.010999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 7: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 8: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 9: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 10: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 11: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 12: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 13: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 14: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 15: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.069000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 16: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.069000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 17: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.069000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 18: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.074000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 19: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.074000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 20: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.074000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 21: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 22: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 23: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 24: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 25: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 26: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 27: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 28: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 29: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 30: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 31: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 32: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.029000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 33: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.022000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 34: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.031000,0.022000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 35: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.063000,0.031000,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 36: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.063000,0.031000,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 37: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.063000,0.031000,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 38: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.080000,0.010999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 39: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.080000,0.010999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 40: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.080000,0.010999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 41: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.080000,0.010999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 42: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.080000,0.026000,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 43: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.080000,0.021999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 44: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 45: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 46: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 47: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 48: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 49: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.015999,0.008999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 50: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.015999,-0.002000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 51: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.015999,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 52: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.015999,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 53: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.015999,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 54: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.015999,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 59: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 60: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 61: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 62: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 63: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 64: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 65: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 66: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 67: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 68: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 69: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 70: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 71: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.089000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 72: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.089000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 73: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.089000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 74: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.089000,0.047000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 75: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.015000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 76: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.015000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 77: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 78: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 79: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 80: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 81: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 82: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 83: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.023000,0.028000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 84: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 85: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.083000,0.023000,0.016000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 86: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 87: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 88: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,-0.009999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 89: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,-0.009999, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 90: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 91: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 92: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 93: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 94: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 95: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 96: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 97: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 98: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 99: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 100: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 101: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 102: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 103: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 104: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 105: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 106: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 107: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 108: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 109: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 110: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 111: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 112: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 113: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 114: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 115: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 116: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 117: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 118: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.086000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 119: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.079000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 120: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 121: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 122: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 123: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 124: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 125: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 126: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.010000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 127: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.024000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 128: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.007000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 129: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.007000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 130: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.007000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 131: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.007000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 132: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.020000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 133: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.020000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 134: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.020000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 135: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.087000,0.023000,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 136: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.076000,0.023000,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 137: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 138: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 139: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 140: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 141: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 142: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.023000,0.030000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 143: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 144: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.023000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 145: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.032000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 146: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.108000,0.032000,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 147: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.104000,0.036999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 148: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.104000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 149: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.094000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 150: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.101000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 151: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.101000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 152: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.101000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 153: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.081000,0.016999,0.003000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 154: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.102000,0.016999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 155: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.102000,0.016999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 156: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.102000,0.016999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 157: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.091000,0.009999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 158: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.077000,0.009999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 159: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.018999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 160: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.089000,0.018999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 161: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.097000,0.018999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 162: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.014000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 163: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 164: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 165: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 166: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 167: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 168: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 169: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 170: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.020000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 171: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 172: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 173: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 174: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 175: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 176: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 177: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 178: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 179: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.022000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 180: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.015000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 181: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.015000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 182: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.090000,0.026999,0.015000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 183: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.081000,0.026999,0.009000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 184: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.021000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 185: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.021000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 186: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 187: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 188: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 189: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 190: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 191: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 192: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 193: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 194: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 195: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 196: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 197: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 198: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 199: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.005000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 200: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 201: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 202: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 203: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 204: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 205: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 206: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 207: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.013000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 208: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.077000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 209: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.077000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 210: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.077000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 211: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.077000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 212: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.093000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 213: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.093000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 214: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.093000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 215: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.111000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 216: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.111000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 217: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 218: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 219: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.099000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 220: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.109000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 221: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 222: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 223: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 224: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 225: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 226: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 227: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 228: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.106000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 229: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 230: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 231: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 232: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 233: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 234: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 235: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 236: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 237: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 238: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 239: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 240: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 241: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 242: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 243: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 244: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 245: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 246: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.012000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 247: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 248: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 249: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 250: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 251: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 252: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 253: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 254: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 255: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 256: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 257: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 258: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 259: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 260: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.088000,0.026999,0.017000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 261: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.070000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 262: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.070000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 263: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.070000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 264: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.070000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 265: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.102000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 266..310: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.077000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			case 311: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.077000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
			default: SetPlayerAttachedObject (playerid, 9, setobject, 5,  0.077000,0.026999,0.008000, 0.000000,-89.999992,0.000000, 1.000000,1.000000,1.000000);
		}
	}

	return 1;
}




stock GetSpeed(playerid)
{
	new Float:_v_velocity[3];
	if(IsPlayerInAnyVehicle(playerid))
	{
		GetVehicleVelocity(GetPlayerVehicleID(playerid),_v_velocity[0],_v_velocity[1],_v_velocity[2]);
	}
	else
	{
		GetPlayerVelocity(playerid,_v_velocity[0],_v_velocity[1],_v_velocity[2]);
	}
	return floatround(floatsqroot(floatpower(floatabs(_v_velocity[0]), 2.0) + floatpower(floatabs(_v_velocity[1]), 2.0) + floatpower(floatabs(_v_velocity[2]), 2.0)) * 100.3);
}

stock SetVehicleSpeed(vehicleid, Float:speed)
{
    new Float:_v_velocity[4];
    GetVehicleZAngle(vehicleid, _v_velocity[0]);
    GetVehicleVelocity(vehicleid, _v_velocity[1], _v_velocity[2], _v_velocity[3]);
    SetVehicleVelocity(vehicleid, floatsin(-_v_velocity[0],degrees)*(speed/99), floatcos(-_v_velocity[0],degrees)*(speed/99), _v_velocity[3]);
    return 1;
}


stock GetVehicleRotation(vehicleid,&Float:rx,&Float:ry,&Float:rz){
	new Float:qw,Float:qx,Float:qy,Float:qz;
	GetVehicleRotationQuat(vehicleid,qw,qx,qy,qz);
	rx = asin(2*qy*qz-2*qx*qw);
	ry = -atan2(qx*qz+qy*qw,0.5-qx*qx-qy*qy);
	rz = -atan2(qx*qy+qz*qw,0.5-qx*qx-qz*qz);
}

stock IsVehicleDrivingBackwards(vehicleid)
{
    new Float:float_var[3];
    if(GetVehicleVelocity(vehicleid, float_var[1], float_var[2], float_var[0]))
	{
        GetVehicleZAngle(vehicleid, float_var[0]);
        if(float_var[0] < 90) {
            if(float_var[1] > 0 && float_var[2] < 0) return 1;
        }
        else if(float_var[0] < 180) {
            if(float_var[1] > 0 && float_var[2] > 0) return 1;
        }
        else if(float_var[0] < 270) {
            if(float_var[1] < 0 && float_var[2] > 0) return 1;
        }
        else if(float_var[1] < 0 && float_var[2] < 0) return 1;
    }
    return 0;
}



callback: untazer_timer(playerid)
{
   	ClearAnimations(playerid);
 	TogglePlayerControllable(playerid, 1);
 	is_tazered {playerid} = 0;
	return 1;
}

callback: un_ems_timer(vehicleid)
{
	veh_info[vehicleid -1][v_ems] = false;
	return 1;
}


stock update_gdorm_text(fractionid)
{
	if(fractionid < 18) return 1;
	new t_string[232];
	format(t_string,sizeof(t_string),"\
	*** Общак ***\n\n\
	"c_grey"Наркотики:"c_white" \t%d/10000 гр.\n\
	"c_grey"Боеприпасы:"c_white" \t%d/300000 пт.\n\
	"c_grey"Ед.оружия:"c_white" \t%d/300000\n\
	"c_grey"Деньги:"c_white" \t%d$",
	f_info[fractionid -1][f_drugs],
	f_info[fractionid -1][f_materials],
	f_info[fractionid -1][f_guns],
	f_info[fractionid -1][f_money]);

	UpdateDynamic3DTextLabelText(gdorm_text[fractionid -18], col_blue, t_string);
	return 1;
}

stock IsPlayerToSquare(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid,xxp,yyp,zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return 1;
	return 0;
}

stock action_td_status(playerid, bool:status)
{
	if(status)
	{
		SendClientMessage(playerid, col_gray,""c_grey"* Для выхода нажмите -"c_white"F"c_grey".");
		toggle_controlable(playerid, false, false);


		action_ptd[playerid][0] = CreatePlayerTextDraw(playerid, 234.166610, 315.740783, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, action_ptd[playerid][0], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, action_ptd[playerid][0], 170.833282, 37.629592);
		PlayerTextDrawAlignment(playerid, action_ptd[playerid][0], 1);
		PlayerTextDrawColor(playerid, action_ptd[playerid][0], 269488383);
		PlayerTextDrawSetShadow(playerid, action_ptd[playerid][0], 0);
		PlayerTextDrawSetOutline(playerid, action_ptd[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, action_ptd[playerid][0], 255);
		PlayerTextDrawFont(playerid, action_ptd[playerid][0], 4);
		PlayerTextDrawSetProportional(playerid, action_ptd[playerid][0], 0);
		PlayerTextDrawSetShadow(playerid, action_ptd[playerid][0], 0);

		action_ptd[playerid][1] = CreatePlayerTextDraw(playerid, 236.666671, 337.000091, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, action_ptd[playerid][1], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, action_ptd[playerid][1], 165.416595, 12.740738);
		PlayerTextDrawAlignment(playerid, action_ptd[playerid][1], 1);
		PlayerTextDrawColor(playerid, action_ptd[playerid][1], 522133503);
		PlayerTextDrawSetShadow(playerid, action_ptd[playerid][1], 0);
		PlayerTextDrawSetOutline(playerid, action_ptd[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, action_ptd[playerid][1], 255);
		PlayerTextDrawFont(playerid, action_ptd[playerid][1], 4);
		PlayerTextDrawSetProportional(playerid, action_ptd[playerid][1], 0);
		PlayerTextDrawSetShadow(playerid, action_ptd[playerid][1], 0);

		action_ptd[playerid][2] = CreatePlayerTextDraw(playerid, 236.666671, 337.000091, "LD_SPAC:white");
		PlayerTextDrawLetterSize(playerid, action_ptd[playerid][2], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, action_ptd[playerid][2], 0, 12.740738);
		PlayerTextDrawAlignment(playerid, action_ptd[playerid][2], 1);
		PlayerTextDrawColor(playerid, action_ptd[playerid][2], 524379391);
		PlayerTextDrawSetShadow(playerid, action_ptd[playerid][2], 0);
		PlayerTextDrawSetOutline(playerid, action_ptd[playerid][2], 0);
		PlayerTextDrawBackgroundColor(playerid, action_ptd[playerid][2], 255);
		PlayerTextDrawFont(playerid, action_ptd[playerid][2], 4);
		PlayerTextDrawSetProportional(playerid, action_ptd[playerid][2], 0);
		PlayerTextDrawSetShadow(playerid, action_ptd[playerid][2], 0);

		action_ptd[playerid][3] = CreatePlayerTextDraw(playerid, 319.583343, 321.185180, "PRESS:_Y");
		PlayerTextDrawLetterSize(playerid, action_ptd[playerid][3], 0.280833, 1.216295);
		PlayerTextDrawAlignment(playerid, action_ptd[playerid][3], 2);
		PlayerTextDrawColor(playerid, action_ptd[playerid][3], -1);
		PlayerTextDrawSetShadow(playerid, action_ptd[playerid][3], 0);
		PlayerTextDrawSetOutline(playerid, action_ptd[playerid][3], 0);
		PlayerTextDrawBackgroundColor(playerid, action_ptd[playerid][3], 255);
		PlayerTextDrawFont(playerid, action_ptd[playerid][3], 1);
		PlayerTextDrawSetProportional(playerid, action_ptd[playerid][3], 1);
		PlayerTextDrawSetShadow(playerid, action_ptd[playerid][3], 0);

		action_ptd[playerid][4] = CreatePlayerTextDraw(playerid, 318.333435, 337.259277, "0/10");
		PlayerTextDrawLetterSize(playerid, action_ptd[playerid][4], 0.280833, 1.216295);
		PlayerTextDrawAlignment(playerid, action_ptd[playerid][4], 2);
		PlayerTextDrawColor(playerid, action_ptd[playerid][4], -1);
		PlayerTextDrawSetShadow(playerid, action_ptd[playerid][4], 0);
		PlayerTextDrawSetOutline(playerid, action_ptd[playerid][4], 0);
		PlayerTextDrawBackgroundColor(playerid, action_ptd[playerid][4], 255);
		PlayerTextDrawFont(playerid, action_ptd[playerid][4], 1);
		PlayerTextDrawSetProportional(playerid, action_ptd[playerid][4], 1);
		PlayerTextDrawSetShadow(playerid, action_ptd[playerid][4], 0);

		switch(random(5))
		{
			case 0..2:action_key[playerid] = KEY_YES, PlayerTextDrawSetString(playerid, action_ptd[playerid][3], "PRESS:_Y");
			case 3..5:action_key[playerid] = KEY_NO, PlayerTextDrawSetString(playerid, action_ptd[playerid][3], "PRESS:_N");
		}
		for(new i = 0; i < 5; i ++)
		{
			PlayerTextDrawShow(playerid, action_ptd[playerid][i]);
		}

	}
	else
	{
		toggle_controlable(playerid, true, false);
		for(new i = 0; i < 5; i ++)
		{
			PlayerTextDrawDestroy(playerid, action_ptd[playerid][i]);
			action_ptd[playerid][i] = PlayerText:-1;
		}
		action_type {playerid} = 0;
		action_step {playerid} = 0;
		action_key[playerid] = 0;
	}
	return 1;
}


stock GetCoordBootVehicle(vehicleid, & Float:x, & Float:y, & Float:z)
{
    new Float:angle,Float:distance;
    GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);
    distance = distance/2 + 0.1;
    GetVehiclePos(vehicleid, x, y, z);
    GetVehicleZAngle(vehicleid, angle);
    x += (distance * floatsin(-angle+180, degrees));
    y += (distance * floatcos(-angle+180, degrees));
    return 1;
}


stock family_message(family_stk, color, text[])
{
    foreach(new i: logged_players)
    {
        if(PlayerInfo[i][family] != family_stk) continue;
        SendClientMessage(i, color, text);
    }
    return 1;
}




callback: sm_hand_back(playerid, objectid, i)
{
	MoveDynamicObject(objectid, sm_hand_coord[i][0], sm_hand_coord[i][1], sm_hand_coord[i][2], 2, sm_hand_coord[i][3], sm_hand_coord[i][4], sm_hand_coord[i][5]);
	i =((i + 1)* 2 +((i + 1)-2)) -1;
	SetTimerEx("sm_move", 348, false, "id", playerid, i);
	return 1;
}

callback: sm_move(playerid, i)
{
	sm_timer[playerid] = SetTimerEx("prespin_moving", 100, true, "id", playerid, i);
	return 1;
}

callback:prespin_moving(playerid, i)
{
	new Float:rxL, Float:ryL, Float:rzL;
	new Float:rxM, Float:ryM, Float:rzM;
	new Float:rxR, Float:ryR, Float:rzR;
	GetDynamicObjectRot(sm_slot[i],rxL, ryL, rzL);
	GetDynamicObjectRot(sm_slot[i + 1], rxM, ryM, rzM);
	GetDynamicObjectRot(sm_slot[i + 2], rxR, ryR, rzR);

	sm_tick_count[playerid] ++;
    if(moved_up[playerid] == false)
	{
	    MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2] + 0.0005,0.04,rxL + 120.0, sm_slot_coord[i][4], sm_slot_coord[i][5]);
	    MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2] + 0.0005,0.04,rxM + 120.0, sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
		MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2] + 0.0005,0.04,rxR + 120.0, sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
		moved_up[playerid] = true;

	}
	else
	{
	    MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2] -0.0005,0.04,rxL + 120.0, sm_slot_coord[i][4], sm_slot_coord[i][5]);
	    MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2] -0.0005,0.04,rxM + 120.0, sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
		MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2] -0.0005,0.04,rxR + 120.0, sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
		moved_up[playerid] = false;
	}
	if(sm_tick_count[playerid] == 35)
	{
		KillTimer(sm_timer[playerid]);
		new Float: obj_pos_z,
			win_chanse = random(13500),
			move_time;

		GetDynamicObjectPos(sm_slot[i], obj_pos_z, obj_pos_z, obj_pos_z);

		sm_tick_count[playerid] = 0;
		if(win_chanse == 4777)
		{
			if(sm_slot_coord[i][2] != obj_pos_z)
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2], 0.1, sn_combo[0],  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2], 0.1, sn_combo[0], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2], 0.1, sn_combo[0], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
			else
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2] + 0.02, 0.1, sn_combo[0],  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2] + 0.02, 0.1, sn_combo[0], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2] + 0.02, 0.1, sn_combo[0], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
		}
		else if(3000 > win_chanse > 2000)
		{
			if(sm_slot_coord[i][2] != obj_pos_z)
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2], 0.1, image_rot[random(sizeof(image_rot))],  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2], 0.1, image_rot[random(sizeof(image_rot))], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2], 0.1, cherry_combo[0], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
			else
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2] + 0.02, 0.1, image_rot[random(sizeof(image_rot))],  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2] + 0.02, 0.1, cherry_combo[0], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2] + 0.02, 0.1, image_rot[random(sizeof(image_rot))], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
		}
		else if(1900 > win_chanse > 1100)
		{
			if(sm_slot_coord[i][2] != obj_pos_z)
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2], 0.1, cherry_combo[0],  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2], 0.1, image_rot[random(sizeof(image_rot))], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2], 0.1, cherry_combo[0], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
			else
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2] + 0.02, 0.1, image_rot[random(sizeof(image_rot))],  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2] + 0.02, 0.1, cherry_combo[0], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2] + 0.02, 0.1, cherry_combo[0], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
		}
		else if(240 > win_chanse > 0)
		{
			if(sm_slot_coord[i][2] != obj_pos_z)
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2], 0.1, cherry_combo[0],  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2], 0.1, cherry_combo[0], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2], 0.1, cherry_combo[0], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
			else
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2] + 0.02, 0.1, cherry_combo[0],  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2] + 0.02, 0.1, cherry_combo[0], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2] + 0.02, 0.1, cherry_combo[0], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
		}
		else if(4950 > win_chanse > 4900)
		{
			if(sm_slot_coord[i][2] != obj_pos_z)
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2], 0.1, bell_combo[0],  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2], 0.1, bell_combo[0], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2], 0.1, bell_combo[0], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
			else
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2] + 0.02, 0.1, bell_combo[0],  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2] + 0.02, 0.1, bell_combo[0], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2] + 0.02, 0.1, bell_combo[0], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
		}
		else if(4990 > win_chanse > 4950)
		{
			if(sm_slot_coord[i][2] != obj_pos_z)
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2], 0.1, grapes_combo[0],  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2], 0.1, grapes_combo[0], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2], 0.1, grapes_combo[0], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
			else
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2] + 0.02, 0.1, grapes_combo[0],  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2] + 0.02, 0.1, grapes_combo[0], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2] + 0.02, 0.1, grapes_combo[0], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
		}
		else if(825 > win_chanse > 800)
		{
			if(sm_slot_coord[i][2] != obj_pos_z)
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2], 0.1, gold_combo[0],  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2], 0.1, gold_combo[0], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2], 0.1, gold_combo[0], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
			else
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2] + 0.02, 0.1, gold_combo[0],  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2] + 0.02, 0.1, gold_combo[0], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2] + 0.02, 0.1, gold_combo[0], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
		}
		else if(1020 > win_chanse > 1000)
		{
			if(sm_slot_coord[i][2] != obj_pos_z)
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2], 0.1, double_gold_combo,  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2], 0.1, double_gold_combo, sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2], 0.1, double_gold_combo, sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
			else
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2] + 0.02, 0.1, double_gold_combo,  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2] + 0.02, 0.1, double_gold_combo, sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2] + 0.02, 0.1, double_gold_combo, sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
		}
		else
		{
			if(sm_slot_coord[i][2] != obj_pos_z)
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2], 0.1, image_rot[random(sizeof(image_rot))],  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2], 0.1, image_rot[random(sizeof(image_rot))], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2], 0.1, image_rot[random(sizeof(image_rot))], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
			else
			{
				move_time = MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2] + 0.02, 0.1, image_rot[random(sizeof(image_rot))],  sm_slot_coord[i][4], sm_slot_coord[i][5]);
				MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2] + 0.02, 0.1, image_rot[random(sizeof(image_rot))], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
				MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2] + 0.02, 0.1, image_rot[random(sizeof(image_rot))], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
			}
		}
		SetTimerEx("sm_check", move_time + 100, false, "iddd", playerid, sm_slot[i], sm_slot[i + 1], sm_slot[i + 2]);
	}
	return 1;
}

callback: sm_check(playerid, obj_1, obj_2, obj_3)
{
	if(GetPVarInt(playerid, "sm_bet") ==  0) return 1;
	new result = get_result(obj_1, obj_2, obj_3);
	if(!result)
	{
		give_money(playerid, -GetPVarInt(playerid, "sm_bet"));
		insert_money_log(playerid, INVALID_PLAYER_ID, -GetPVarInt(playerid, "sm_bet"), "однорукий бандит");
		new gt_string[18];
		format(gt_string, 18, "~r~LOSE: %d$", GetPVarInt(playerid, "sm_bet"));
		GameTextForPlayer(playerid, gt_string, 5000, 3);
		
		new td_string[64];
		format(td_string, 64, "bet:  %d$          cash:  %d$", GetPVarInt(playerid, "sm_bet"), PlayerInfo[playerid][money]);
		PlayerTextDrawSetString(playerid, sm_ptd[playerid], td_string);
	}
	else
	{
		new win_cash = GetPVarInt(playerid, "sm_bet")* result;
		give_money(playerid, win_cash);
		insert_money_log(playerid, INVALID_PLAYER_ID, win_cash, "однорукий бандит");

		new gt_string[18];
		format(gt_string, 18, "~g~WIN: %d$", win_cash);
		GameTextForPlayer(playerid, gt_string, 5000, 3);

		new td_string[64];
		format(td_string, 64, "bet:  %d$          cash:  %d$", GetPVarInt(playerid, "sm_bet"), PlayerInfo[playerid][money]);
		PlayerTextDrawSetString(playerid, sm_ptd[playerid], td_string);
	}
	DeletePVar(playerid, "sm_started");
	return 1;
}


stock get_result(obj_1, obj_2, obj_3)
{
	new Float: rot_pos[4];
	GetDynamicObjectRot(obj_1, rot_pos[0], rot_pos[3], rot_pos[3]);
    GetDynamicObjectRot(obj_2, rot_pos[1], rot_pos[3], rot_pos[3]);
    GetDynamicObjectRot(obj_3, rot_pos[2], rot_pos[3], rot_pos[3]);

	if(rot_pos[0] == rot_pos[1]&& rot_pos[0] == rot_pos[2]&& rot_pos[0]&& rot_pos[0] == double_gold_combo) return COMBO_DOUBLE_GOLD;
	new combo_points = 0;

	for(new i = 0; i < sizeof(cherry_combo); i++)
	{
		for(new f = 0; f < sizeof(rot_pos)-1; f++)
		{
			if(rot_pos[f] == cherry_combo[i])combo_points ++;
	    }
	}
	if(combo_points == 3) return COMBO_CHERRY;
	if(combo_points == 2) return COMBO_TWO_CHERRY;

	combo_points = 0;
	for(new i = 0; i < sizeof(gold_combo); i++)
	{
		for(new f = 0; f < sizeof(rot_pos)-1; f++)
		{
			if(rot_pos[f] == gold_combo[i])combo_points ++;
	    }
	}
	if(combo_points == 3) return COMBO_GOLD;
	combo_points = 0;
	for(new i = 0; i < sizeof(bell_combo); i++)
	{
		for(new f = 0; f < sizeof(rot_pos)-1; f++)
		{
			if(rot_pos[f] == bell_combo[i])combo_points ++;
	    }
	}
	if(combo_points == 3) return COMBO_BELL;
	combo_points = 0;
	for(new i = 0; i < sizeof(grapes_combo); i++)
	{
		for(new f = 0; f < sizeof(rot_pos)-1; f++)
		{
			if(rot_pos[f] == grapes_combo[i])combo_points ++;
	    }
	}
	if(combo_points == 3) return COMBO_GRAPES;
	combo_points = 0;
	for(new i = 0; i < sizeof(sn_combo); i++)
	{
		for(new f = 0; f < sizeof(rot_pos)-1; f++)
		{
			if(rot_pos[f] == sn_combo[i])combo_points ++;
	    }
	}
	if(combo_points == 3) return COMBO_69;
	return 0;
}

stock CreateCasinoTD(playerid)
{
	dice_ptd[playerid][0] = CreatePlayerTextDraw(playerid, 467.000000, 167.000000, "LD_SPAC:WHITE");
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][0], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][0], 4);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][0], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][0], 488514303);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][0], 1);
	PlayerTextDrawUseBox(playerid, dice_ptd[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, dice_ptd[playerid][0], 558012159);
	PlayerTextDrawTextSize(playerid, dice_ptd[playerid][0], 124.000000, 168.000000);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][0], 0);

	dice_ptd[playerid][1] = CreatePlayerTextDraw(playerid, 463.000000, 162.000000, "LD_SPAC:WHITE");
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][1], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][1], 4);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][1], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][1], 927687935);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][1], 1);
	PlayerTextDrawUseBox(playerid, dice_ptd[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid, dice_ptd[playerid][1], 558012159);
	PlayerTextDrawTextSize(playerid, dice_ptd[playerid][1], 132.000000, 22.000000);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][1], 0);

	new table[14];
	if(GetPVarInt(playerid,"Stol") == 1)table="dice table 1";
	else if(GetPVarInt(playerid,"Stol") == 2)table="dice table 2";
	else if(GetPVarInt(playerid,"Stol") == 3)table="dice table 3";
	else if(GetPVarInt(playerid,"Stol") == 4)table="dice table 4";

	dice_ptd[playerid][2] = CreatePlayerTextDraw(playerid, 494.000000, 166.000000, table);
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][2], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][2], 2);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][2], 0.300000, 1.400000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][2], 0);





	new Player1[30],Player2[30],Player3[30],Player4[30],Player5[30];

    if(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][0] ==INVALID_PLAYER_ID){
		if(GetPVarInt(playerid,"Krupje") == 0)dice_info[GetPVarInt(playerid,"Stol")-1][b_player][0]=playerid,SetPVarInt(playerid,"Mesto",1),format(Player1,sizeof(Player1),"1. %s",PlayerInfo[dice_info[GetPVarInt(playerid,"Stol")-1][b_player][0]][name]);
		//else if(PlayerInfo[playerid][pCasino] !=0&&PlayerInfo[playerid][pRank] !=2)dice_info[GetPVarInt(playerid,"Stol")-1][b_player][0]=playerid,SetPVarInt(playerid,"Mesto",1),format(Player1,sizeof(Player1),"1. %s",PlayerInfo[dice_info[GetPVarInt(playerid,"Stol")-1][b_player][0]][name]);
		else if(GetPVarInt(playerid,"Krupje") == 1)format(Player1,sizeof(Player1),"1. -----");
	}
	else if(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][0] !=playerid)format(Player1,sizeof(Player1),"1. %s",PlayerInfo[dice_info[GetPVarInt(playerid,"Stol")-1][b_player][0]][name]);
	else if(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][0] ==INVALID_PLAYER_ID)format(Player1,sizeof(Player1),"1. -----");

	if(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][1] ==INVALID_PLAYER_ID&&dice_info[GetPVarInt(playerid,"Stol")-1][b_player][0] !=playerid){
		if(GetPVarInt(playerid,"Krupje") == 0)dice_info[GetPVarInt(playerid,"Stol")-1][b_player][1]=playerid,SetPVarInt(playerid,"Mesto",2),format(Player2,sizeof(Player2),"2. %s",PlayerInfo[dice_info[GetPVarInt(playerid,"Stol")-1][b_player][1]][name]);
		//else if(PlayerInfo[playerid][pCasino] !=0&&PlayerInfo[playerid][pRank] !=2)dice_info[GetPVarInt(playerid,"Stol")-1][b_player][1]=playerid,SetPVarInt(playerid,"Mesto",2),format(Player2,sizeof(Player2),"2. %s",PlayerInfo[dice_info[GetPVarInt(playerid,"Stol")-1][b_player][1]][name]);
        else if(GetPVarInt(playerid,"Krupje") == 1)format(Player2,sizeof(Player2),"2. -----");
	}
	else if(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][1] !=playerid&&dice_info[GetPVarInt(playerid,"Stol")-1][b_player][1] !=INVALID_PLAYER_ID)format(Player2,sizeof(Player2),"2. %s",PlayerInfo[dice_info[GetPVarInt(playerid,"Stol")-1][b_player][1]][name]);
	else if(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][1] ==INVALID_PLAYER_ID)format(Player2,sizeof(Player2),"2. -----");

	if(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][2] ==INVALID_PLAYER_ID&&dice_info[GetPVarInt(playerid,"Stol")-1][b_player][0] !=playerid&&dice_info[GetPVarInt(playerid,"Stol")-1][b_player][1] !=playerid){
		if(GetPVarInt(playerid,"Krupje") == 0)dice_info[GetPVarInt(playerid,"Stol")-1][b_player][2]=playerid,SetPVarInt(playerid,"Mesto",3),format(Player3,sizeof(Player3),"3. %s",PlayerInfo[dice_info[GetPVarInt(playerid,"Stol")-1][b_player][2]][name]);
		//else if(PlayerInfo[playerid][pCasino] !=0&&PlayerInfo[playerid][pRank] !=2)dice_info[GetPVarInt(playerid,"Stol")-1][b_player][2]=playerid,SetPVarInt(playerid,"Mesto",3),format(Player3,sizeof(Player3),"3. %s",PlayerInfo[dice_info[GetPVarInt(playerid,"Stol")-1][b_player][2]][name]);
        else if(GetPVarInt(playerid,"Krupje") == 1)format(Player3,sizeof(Player3),"3. -----");
	}
	else if(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][2] !=playerid&&dice_info[GetPVarInt(playerid,"Stol")-1][b_player][2] !=INVALID_PLAYER_ID)format(Player3,sizeof(Player3),"3. %s",PlayerInfo[dice_info[GetPVarInt(playerid,"Stol")-1][b_player][2]][name]);
	else if(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][2] ==INVALID_PLAYER_ID)format(Player3,sizeof(Player3),"3. -----");

	if(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][3] ==INVALID_PLAYER_ID&&dice_info[GetPVarInt(playerid,"Stol")-1][b_player][0] !=playerid&&dice_info[GetPVarInt(playerid,"Stol")-1][b_player][1] !=playerid&&dice_info[GetPVarInt(playerid,"Stol")-1][b_player][2] !=playerid){
		if(GetPVarInt(playerid,"Krupje") == 0)dice_info[GetPVarInt(playerid,"Stol")-1][b_player][3]=playerid,SetPVarInt(playerid,"Mesto",4),format(Player4,sizeof(Player4),"4. %s",PlayerInfo[dice_info[GetPVarInt(playerid,"Stol")-1][b_player][3]][name]);
		//else if(PlayerInfo[playerid][pCasino] !=0&&PlayerInfo[playerid][pRank] !=2)dice_info[GetPVarInt(playerid,"Stol")-1][b_player][3]=playerid,SetPVarInt(playerid,"Mesto",4),format(Player4,sizeof(Player4),"4. %s",PlayerInfo[dice_info[GetPVarInt(playerid,"Stol")-1][b_player][3]][name]);
        else if(GetPVarInt(playerid,"Krupje") == 1)format(Player4,sizeof(Player4),"4. -----");
	}
	else if(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][3] !=playerid&&dice_info[GetPVarInt(playerid,"Stol")-1][b_player][3] !=INVALID_PLAYER_ID)format(Player4,sizeof(Player4),"4. %s",PlayerInfo[dice_info[GetPVarInt(playerid,"Stol")-1][b_player][3]][name]);
	else if(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][3] ==INVALID_PLAYER_ID)format(Player4,sizeof(Player4),"4. -----");

	if(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][4] ==INVALID_PLAYER_ID&&dice_info[GetPVarInt(playerid,"Stol")-1][b_player][0] !=playerid&&dice_info[GetPVarInt(playerid,"Stol")-1][b_player][1] !=playerid&&dice_info[GetPVarInt(playerid,"Stol")-1][b_player][2] !=playerid&&dice_info[GetPVarInt(playerid,"Stol")-1][b_player][3] !=playerid){
		if(GetPVarInt(playerid,"Krupje") == 0)dice_info[GetPVarInt(playerid,"Stol")-1][b_player][4]=playerid,SetPVarInt(playerid,"Mesto",5),format(Player5,sizeof(Player5),"5. %s",PlayerInfo[dice_info[GetPVarInt(playerid,"Stol")-1][b_player][4]][name]);
		//else if(PlayerInfo[playerid][pCasino] !=0&&PlayerInfo[playerid][pRank] !=2)dice_info[GetPVarInt(playerid,"Stol")-1][b_player][4]=playerid,SetPVarInt(playerid,"Mesto",5),format(Player5,sizeof(Player5),"5. %s",PlayerInfo[dice_info[GetPVarInt(playerid,"Stol")-1][b_player][4]][name]);
        else if(GetPVarInt(playerid,"Krupje") == 1)format(Player5,sizeof(Player5),"5. -----");
	}
	else if(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][4] !=playerid&&dice_info[GetPVarInt(playerid,"Stol")-1][b_player][4] !=INVALID_PLAYER_ID)format(Player5,sizeof(Player5),"5. %s",PlayerInfo[dice_info[GetPVarInt(playerid,"Stol")-1][b_player][4]][name]);
	else if(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][4] ==INVALID_PLAYER_ID)format(Player5,sizeof(Player5),"5. -----");

	dice_ptd[playerid][3] = CreatePlayerTextDraw(playerid, 469.000000, 193.000000, Player1);
	dice_ptd[playerid][4] = CreatePlayerTextDraw(playerid, 469.000000, 208.000000, Player2);
	dice_ptd[playerid][5] = CreatePlayerTextDraw(playerid, 469.000000, 223.000000, Player3);
	dice_ptd[playerid][6] = CreatePlayerTextDraw(playerid, 469.000000, 238.000000, Player4);
	dice_ptd[playerid][7] = CreatePlayerTextDraw(playerid, 469.000000, 253.000000, Player5);

	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][3], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][3], 2);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][3], 0.170000, 1.100000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][4], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][4], 2);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][4], 0.170000, 1.100000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][4], -1);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][5], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][5], 2);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][5], 0.170000, 1.100000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][5], -1);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][5], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][6], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][6], 2);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][6], 0.170000, 1.100000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][6], -1);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][6], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][7], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][7], 2);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][7], 0.170000, 1.100000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][7], -1);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][7], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][7], 0);





	dice_ptd[playerid][8] = CreatePlayerTextDraw(playerid, 581.000000, 193.000000, "0");
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][8], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][8], 2);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][8], 0.170000, 1.100000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][8], -1);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][8], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][8], 0);

	dice_ptd[playerid][9] = CreatePlayerTextDraw(playerid, 581.000000, 208.000000, "0");
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][9], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][9], 2);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][9], 0.170000, 1.100000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][9], -1);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][9], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][9], 0);

	dice_ptd[playerid][10] = CreatePlayerTextDraw(playerid, 581.000000, 223.000000, "0");
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][10], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][10], 2);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][10], 0.170000, 1.100000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][10], -1);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][10], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][10], 1);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][10], 0);

	dice_ptd[playerid][11] = CreatePlayerTextDraw(playerid, 581.000000, 238.000000, "0");
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][11], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][11], 2);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][11], 0.170000, 1.100000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][11], -1);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][11], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][11], 1);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][11], 0);

	dice_ptd[playerid][12] = CreatePlayerTextDraw(playerid, 581.000000, 253.000000, "0");
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][12], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][12], 2);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][12], 0.170000, 1.100000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][12], -1);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][12], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][12], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][12], 1);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][12], 0);




	new string[42];
	format(string, sizeof(string), "Bet:%d$~n~bank:%d$", dice_info[GetPVarInt(playerid,"Stol")-1][b_bet], dice_info[GetPVarInt(playerid,"Stol")-1][b_bank]);

	dice_ptd[playerid][13] = CreatePlayerTextDraw(playerid, 469.000000, 268.000000, string);
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][13], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][13], 2);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][13], 0.170000, 1.100000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][13], -1);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][13], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][13], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][13], 1);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][13], 0);

	dice_ptd[playerid][14] = CreatePlayerTextDraw(playerid, 474.000000, 294.000000, "LD_SPAC:WHITE");
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][14], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][14], 4);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][14], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][14], 656879615);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][14], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][14], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][14], 1);
	PlayerTextDrawUseBox(playerid, dice_ptd[playerid][14], 1);
	PlayerTextDrawBoxColor(playerid, dice_ptd[playerid][14], 558012159);
	PlayerTextDrawTextSize(playerid, dice_ptd[playerid][14], 52.000000, 16.000000);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][14], 1);

	dice_ptd[playerid][15] = CreatePlayerTextDraw(playerid, 530.000000, 294.000000, "LD_SPAC:WHITE");
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][15], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][15], 4);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][15], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][15], 656879615);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][15], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][15], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][15], 1);
	PlayerTextDrawUseBox(playerid, dice_ptd[playerid][15], 1);
	PlayerTextDrawBoxColor(playerid, dice_ptd[playerid][15], 558012159);
	PlayerTextDrawTextSize(playerid, dice_ptd[playerid][15], 52.000000, 16.000000);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][15], 1);

	dice_ptd[playerid][16] = CreatePlayerTextDraw(playerid, 488.000000, 296.000000, "set bet");
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][16], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][16], 2);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][16], 0.170000, 1.100000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][16], -1);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][16], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][16], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][16], 1);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][16], 0);

	dice_ptd[playerid][17] = CreatePlayerTextDraw(playerid, 549.000000, 296.000000, "dice");
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][17], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][17], 2);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][17], 0.170000, 1.100000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][17], -1);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][17], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][17], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][17], 1);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][17], 0);

	dice_ptd[playerid][18] = CreatePlayerTextDraw(playerid, 503.000000, 314.000000, "LD_SPAC:WHITE");
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][18], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][18], 4);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][18], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][18], 656879615);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][18], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][18], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][18], 1);
	PlayerTextDrawUseBox(playerid, dice_ptd[playerid][18], 1);
	PlayerTextDrawBoxColor(playerid, dice_ptd[playerid][18], 558012159);
	PlayerTextDrawTextSize(playerid, dice_ptd[playerid][18], 52.000000, 16.000000);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][18], 1);

	dice_ptd[playerid][19] = CreatePlayerTextDraw(playerid, 522.000000, 316.000000, "exit");
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][19], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][19], 2);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][19], 0.170000, 1.100000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][19], -1);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][19], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][19], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][19], 1);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][19], 0);

	dice_ptd[playerid][20] = CreatePlayerTextDraw(playerid, 474.000000, 294.000000, "LD_SPAC:WHITE");
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][20], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][20], 4);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][20], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][20], 927687935);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][20], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][20], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][20], 1);
	PlayerTextDrawUseBox(playerid, dice_ptd[playerid][20], 1);
	PlayerTextDrawBoxColor(playerid, dice_ptd[playerid][20], 558012159);
	PlayerTextDrawTextSize(playerid, dice_ptd[playerid][20], 4.000000, 16.000000);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][20], 0);

	dice_ptd[playerid][21] = CreatePlayerTextDraw(playerid, 530.000000, 294.000000, "LD_SPAC:WHITE");
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][21], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][21], 4);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][21], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][21], 927687935);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][21], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][21], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][21], 1);
	PlayerTextDrawUseBox(playerid, dice_ptd[playerid][21], 1);
	PlayerTextDrawBoxColor(playerid, dice_ptd[playerid][21], 558012159);
	PlayerTextDrawTextSize(playerid, dice_ptd[playerid][21], 4.000000, 16.000000);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][21], 0);

	dice_ptd[playerid][22] = CreatePlayerTextDraw(playerid, 503.000000, 314.000000, "LD_SPAC:WHITE");
	PlayerTextDrawBackgroundColor(playerid, dice_ptd[playerid][22], 0);
	PlayerTextDrawFont(playerid, dice_ptd[playerid][22], 4);
	PlayerTextDrawLetterSize(playerid, dice_ptd[playerid][22], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, dice_ptd[playerid][22], 927687935);
	PlayerTextDrawSetOutline(playerid, dice_ptd[playerid][22], 0);
	PlayerTextDrawSetProportional(playerid, dice_ptd[playerid][22], 1);
	PlayerTextDrawSetShadow(playerid, dice_ptd[playerid][22], 1);
	PlayerTextDrawUseBox(playerid, dice_ptd[playerid][22], 1);
	PlayerTextDrawBoxColor(playerid, dice_ptd[playerid][22], 558012159);
	PlayerTextDrawTextSize(playerid, dice_ptd[playerid][22], 4.000000, 16.000000);
	PlayerTextDrawSetSelectable(playerid, dice_ptd[playerid][22], 0);

	for(new i = 0; i < 23; i ++)PlayerTextDrawShow(playerid, dice_ptd[playerid][i]);

	SelectTextDraw(playerid, 0xB0C4DEFF);



	return 1;
}


stock ExitBone(playerid)
{
	new null[2] = 0;
	if(GetPVarInt(playerid,"InGame") && dice_info[GetPVarInt(playerid,"Stol")-1][b_started] <= 0)
	{
		give_money(playerid, dice_info[GetPVarInt(playerid,"Stol")-1][b_bet]);
		dice_info[GetPVarInt(playerid,"Stol")-1][b_bank] -=dice_info[GetPVarInt(playerid,"Stol")-1][b_bet];
	}
	foreach(new i: logged_players)
	{
		if(GetPVarInt(i,"Stol") == GetPVarInt(playerid,"Stol") && i != playerid && GetPVarInt(i,"InGame") == 1) null[0] ++;
		if(GetPVarInt(i,"Stol") == GetPVarInt(playerid,"Stol") && i != playerid && GetPVarInt(i,"InGame") > 1) null[1] ++;
	}
	if(null[0] == 0 && null[1] > 0) ShowItog(GetPVarInt(playerid,"Stol")-1);
	if(dice_info[GetPVarInt(playerid,"Stol")-1][b_crupie] == playerid) dice_info[GetPVarInt(playerid,"Stol")-1][b_crupie] = INVALID_PLAYER_ID;
	for(new i_ = 0; i_ != 5; i_++) if(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][i_] == playerid) dice_info[GetPVarInt(playerid,"Stol")-1][b_player][i_] = INVALID_PLAYER_ID;
	UpdateBone(GetPVarInt(playerid,"Stol")-1);


	for(new i = 0; i < 23; i ++)
	{
		PlayerTextDrawDestroy(playerid, dice_ptd[playerid][i]);
		dice_ptd[playerid][i] = PlayerText:-1;
	}
	DeletePVar(playerid,"Stol");
	DeletePVar(playerid,"InGame");
	CancelSelectTextDraw(playerid);
	return 1;
}

stock UpdateBone(idx)
{
	foreach(new i: logged_players)
	{
		if(GetPVarInt(i,"Stol") -1 == idx)
		{
			new td_str[42];
			format(td_str, sizeof(td_str), "Bet:%d$~n~bank:%d$", dice_info[GetPVarInt(i,"Stol")-1][b_bet], dice_info[GetPVarInt(i,"Stol")-1][b_bank]);
			PlayerTextDrawSetString(i, dice_ptd[i][13], td_str);

			for(new i_ = 0; i_ < 5; i_ ++)
			{
				if(dice_info[idx][b_player][i_] != INVALID_PLAYER_ID)
				{
					format(td_str,sizeof(td_str),"%d. %s", i_ + 1, PlayerInfo[dice_info[idx][b_player][i_]][name]);
					PlayerTextDrawSetString(i, dice_ptd[i][i_ + 3], td_str);

					new in_game_stat = GetPVarInt(dice_info[idx][b_player][i_], "InGame");
					if(in_game_stat > 1)
					{
						format(td_str,sizeof(td_str),"%d", in_game_stat);
						PlayerTextDrawSetString(i, dice_ptd[i][i_ + 8], td_str);
					}
					else PlayerTextDrawSetString(i, dice_ptd[i][i_ + 8], "0");
				}
				else
				{
					format(td_str,sizeof(td_str),"%d. -----", i_ + 1);
					PlayerTextDrawSetString(i, dice_ptd[i][i_ + 3], td_str);

					PlayerTextDrawSetString(i, dice_ptd[i][i_ + 8], "0");
				}
			}
		}
	}
	return 1;
}

stock ShowItog(idx)
{
	new itog[3] = -1;

	itog[0] = -1; itog[1] = -1; itog[2] = -1;
	foreach(new i: logged_players)
	{
		if(GetPVarInt(i,"Stol")-1 == idx && GetPVarInt(i,"InGame") > 1 && GetPVarInt(i,"InGame") > itog[0]) itog[0] = GetPVarInt(i,"InGame"), itog[1] = i;
		if(GetPVarInt(i,"Stol")-1 == idx && GetPVarInt(i,"InGame") > 1 && i != itog[1] && GetPVarInt(i,"InGame") == itog[0]) itog[2] = i;
	}
	if(itog[2] > -1)
	{
		foreach(new i: logged_players)
		{
			if(GetPVarInt(i,"Stol")-1 == idx && GetPVarInt(i,"InGame") > 1 && GetPVarInt(i,"InGame") == itog[0]) SetPVarInt(i,"InGame",1), dice_info[idx][b_started] = 30, SendClientMessage(i,col_succes,"Вы попали в следующий раунд. У вас есть 30 секунд, чтобы бросить кости.");
			else if(GetPVarInt(i,"Stol")-1 == idx) DeletePVar(i,"InGame");
		}
		UpdateBone(idx);
	}
	else if(itog[1] > -1 && dice_info[idx][b_bank] > 0)
	{
		new  string[65 + MAX_PLAYER_NAME];
		format(string, sizeof(string), "%s побеждает. Колличество очков: %i. Банк составил %d$", PlayerInfo[itog[1]][name], itog[0], dice_info[idx][b_bank]);
		if(dice_info[idx][b_crupie] != INVALID_PLAYER_ID)
		{
			give_money(dice_info[idx][b_crupie],500);
			insert_money_log(dice_info[idx][b_crupie], INVALID_PLAYER_ID, 500, "крупье кости");
		}



		give_money(itog[1],dice_info[idx][b_bank] -(dice_info[idx][b_bank]/10));
		insert_money_log(itog[1], INVALID_PLAYER_ID, dice_info[idx][b_bank] -(dice_info[idx][b_bank]/10), "победа кости");

//		SendClientMessage(itog[1], col_succes, string);

		dice_info[idx][b_started] = 0;
		dice_info[idx][b_bet] = 0;
		dice_info[idx][b_bank] = 0;


		foreach(new i:logged_players)
		{
			if(GetPVarInt(i,"Stol")-1 == idx)
			{
				SendClientMessage(i, col_succes, string);
				DeletePVar(i, "InGame");
				UpdateBone(idx);
			}
			if(GetPVarInt(i, "Stol")-1 == idx && IsPlayerNearDice(i)!= idx)
			{
				if(GetPVarInt(i,"InGame") && dice_info[GetPVarInt(i,"Stol")-1][b_started] <= 0)
				{
					give_money(i, dice_info[GetPVarInt(i,"Stol")-1][b_bet]);
					dice_info[GetPVarInt(i,"Stol")-1][b_bank] -=dice_info[GetPVarInt(i,"Stol")-1][b_bet];
				}
				if(dice_info[GetPVarInt(i,"Stol")-1][b_crupie] == i) dice_info[GetPVarInt(i,"Stol")-1][b_crupie] = INVALID_PLAYER_ID;
				for(new i_ = 0; i_ != 5; i_++) if(dice_info[GetPVarInt(i,"Stol")-1][b_player][i_] == i) dice_info[GetPVarInt(i,"Stol")-1][b_player][i_] = INVALID_PLAYER_ID;
				UpdateBone(GetPVarInt(i,"Stol")-1);

				for(new j=0;j<23;j++)
				{
					PlayerTextDrawDestroy(i, dice_ptd[i][j]);
					dice_ptd[i][j] = PlayerText:-1;
				}
				DeletePVar(i,"Stol");
				DeletePVar(i,"InGame");
				CancelSelectTextDraw(i);
			}
		}
	}
	return 1;
}
stock IsPlayerNearDice(playerid)
{
	for(new i; i < sizeof(dice_positions); i ++)if(IsPlayerInRangeOfPoint(playerid, 2.0, dice_positions[i][0], dice_positions[i][1], dice_positions[i][2])) return i;
	return -1;
}





stock cm_status(playerid, bool:status)
{
	if(status)
	{
		SetPVarInt(playerid, "cm_used", 1);
		cm_ptd[playerid][0] = CreatePlayerTextDraw(playerid, 165.000000, 82.000000, "LD_SPAC:white");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][0], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][0], 4);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][0], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][0], 488514303);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][0], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][0], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][0], 1);
		PlayerTextDrawUseBox(playerid, cm_ptd[playerid][0], 0);
		PlayerTextDrawBoxColor(playerid, cm_ptd[playerid][0], 255);
		PlayerTextDrawTextSize(playerid, cm_ptd[playerid][0], 166.000000, 254.000000);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][0], 0);

		cm_ptd[playerid][1] = CreatePlayerTextDraw(playerid, 336.000000, 82.000000, "LD_SPAC:white");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][1], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][1], 4);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][1], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][1], 488514303);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][1], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][1], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][1], 1);
		PlayerTextDrawUseBox(playerid, cm_ptd[playerid][1], 0);
		PlayerTextDrawBoxColor(playerid, cm_ptd[playerid][1], 255);
		PlayerTextDrawTextSize(playerid, cm_ptd[playerid][1], 137.000000, 254.000000);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][1], 0);


		for(new j = 2; j < 37; j ++)
		{
			cm_ptd[playerid][j] = CreatePlayerTextDraw(playerid, cm_td_pos[j -2][0], cm_td_pos[j -2][1], "LD_SPAC:white");
			PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][j], 0);
			PlayerTextDrawFont(playerid, cm_ptd[playerid][j], 4);
			PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][j], 0.500000, 1.000000);
			PlayerTextDrawColor(playerid, cm_ptd[playerid][j], 656879615);
			PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][j], 0);
			PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][j], 1);
			PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][j], 1);
			PlayerTextDrawUseBox(playerid, cm_ptd[playerid][j], 0);
			PlayerTextDrawBoxColor(playerid, cm_ptd[playerid][j], 255);
			PlayerTextDrawTextSize(playerid, cm_ptd[playerid][j], 30.000000, 30.000000);
			PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][j], 1);
		}


		cm_ptd[playerid][37] = CreatePlayerTextDraw(playerid, 392.000000, 310.000000, "LD_SPAC:white");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][37], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][37], 4);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][37], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][37], 656879615);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][37], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][37], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][37], 1);
		PlayerTextDrawUseBox(playerid, cm_ptd[playerid][37], 1);
		PlayerTextDrawBoxColor(playerid, cm_ptd[playerid][37], 255);
		PlayerTextDrawTextSize(playerid, cm_ptd[playerid][37], 67.000000, 18.000000);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][37], 1);

		cm_ptd[playerid][38] = CreatePlayerTextDraw(playerid, 340.000000, 314.000000, "1.20               stop 1.20");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][38], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][38], 2);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][38], 0.270000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][38], -1);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][38], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][38], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][38], 1);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][38], 0);

		cm_ptd[playerid][39] = CreatePlayerTextDraw(playerid, 392.000000, 276.000000, "LD_SPAC:white");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][39], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][39], 4);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][39], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][39], 656879615);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][39], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][39], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][39], 1);
		PlayerTextDrawUseBox(playerid, cm_ptd[playerid][39], 0);
		PlayerTextDrawBoxColor(playerid, cm_ptd[playerid][39], 255);
		PlayerTextDrawTextSize(playerid, cm_ptd[playerid][39], 67.000000, 18.000000);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][39], 1);

		cm_ptd[playerid][40] = CreatePlayerTextDraw(playerid, 340.000000, 280.000000, "1.50               stop 1.50");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][40], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][40], 2);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][40], 0.270000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][40], -1);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][40], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][40], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][40], 1);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][40], 0);

		cm_ptd[playerid][41] = CreatePlayerTextDraw(playerid, 392.000000, 242.000000, "LD_SPAC:white");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][41], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][41], 4);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][41], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][41], 656879615);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][41], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][41], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][41], 1);
		PlayerTextDrawUseBox(playerid, cm_ptd[playerid][41], 0);
		PlayerTextDrawBoxColor(playerid, cm_ptd[playerid][41], 255);
		PlayerTextDrawTextSize(playerid, cm_ptd[playerid][41], 67.000000, 18.000000);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][41], 1);

		cm_ptd[playerid][42] = CreatePlayerTextDraw(playerid, 340.000000, 246.000000, "2.00              stop 2.00");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][42], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][42], 2);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][42], 0.270000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][42], -1);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][42], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][42], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][42], 1);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][42], 0);

		cm_ptd[playerid][43] = CreatePlayerTextDraw(playerid, 392.000000, 209.000000, "LD_SPAC:white");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][43], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][43], 4);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][43], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][43], 656879615);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][43], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][43], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][43], 1);
		PlayerTextDrawUseBox(playerid, cm_ptd[playerid][43], 0);
		PlayerTextDrawBoxColor(playerid, cm_ptd[playerid][43], 255);
		PlayerTextDrawTextSize(playerid, cm_ptd[playerid][43], 67.000000, 18.000000);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][43], 1);

		cm_ptd[playerid][44] = CreatePlayerTextDraw(playerid, 340.000000, 213.000000, "2.50              stop 2.50");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][44], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][44], 2);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][44], 0.270000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][44], -1);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][44], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][44], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][44], 1);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][44], 0);

		cm_ptd[playerid][45] = CreatePlayerTextDraw(playerid, 392.000000, 176.000000, "LD_SPAC:white");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][45], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][45], 4);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][45], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][45], 656879615);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][45], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][45], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][45], 1);
		PlayerTextDrawUseBox(playerid, cm_ptd[playerid][45], 0);
		PlayerTextDrawBoxColor(playerid, cm_ptd[playerid][45], 255);
		PlayerTextDrawTextSize(playerid, cm_ptd[playerid][45], 67.000000, 18.000000);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][45], 1);

		cm_ptd[playerid][46] = CreatePlayerTextDraw(playerid, 340.000000, 180.000000, "3.00              stop 3.00");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][46], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][46], 2);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][46], 0.270000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][46], -1);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][46], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][46], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][46], 1);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][46], 0);

		cm_ptd[playerid][47] = CreatePlayerTextDraw(playerid, 392.000000, 143.000000, "LD_SPAC:white");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][47], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][47], 4);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][47], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][47], 656879615);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][47], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][47], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][47], 1);
		PlayerTextDrawUseBox(playerid, cm_ptd[playerid][47], 0);
		PlayerTextDrawBoxColor(playerid, cm_ptd[playerid][47], 255);
		PlayerTextDrawTextSize(playerid, cm_ptd[playerid][47], 67.000000, 18.000000);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][47], 1);

		cm_ptd[playerid][48] = CreatePlayerTextDraw(playerid, 340.000000, 147.000000, "3.50              stop 3.50");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][48], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][48], 2);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][48], 0.270000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][48], -1);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][48], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][48], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][48], 1);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][48], 0);

		cm_ptd[playerid][49] = CreatePlayerTextDraw(playerid, 392.000000, 110.000000, "LD_SPAC:white");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][49], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][49], 4);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][49], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][49], 656879615);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][49], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][49], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][49], 1);
		PlayerTextDrawUseBox(playerid, cm_ptd[playerid][49], 0);
		PlayerTextDrawBoxColor(playerid, cm_ptd[playerid][49], 255);
		PlayerTextDrawTextSize(playerid, cm_ptd[playerid][49], 67.000000, 18.000000);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][49], 1);

		cm_ptd[playerid][50] = CreatePlayerTextDraw(playerid, 340.000000, 114.000000, "4.50              stop 4.50");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][50], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][50], 2);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][50], 0.270000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][50], -1);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][50], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][50], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][50], 1);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][50], 0);

		cm_ptd[playerid][51] = CreatePlayerTextDraw(playerid, 165.000000, 82.000000, "LD_SPAC:white");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][51], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][51], 4);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][51], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][51], 927687935);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][51], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][51], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][51], 1);
		PlayerTextDrawUseBox(playerid, cm_ptd[playerid][51], 0);
		PlayerTextDrawBoxColor(playerid, cm_ptd[playerid][51], 255);
		PlayerTextDrawTextSize(playerid, cm_ptd[playerid][51], 308.000000, 19.000000);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][51], 0);

		cm_ptd[playerid][52] = CreatePlayerTextDraw(playerid, 229.000000, 84.000000, "KAMIKAZE");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][52], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][52], 2);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][52], 0.267082, 1.540001);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][52], -1);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][52], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][52], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][52], 1);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][52], 0);

		cm_ptd[playerid][53] = CreatePlayerTextDraw(playerid, 410.000000, 84.000000, "LD_SPAC:white");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][53], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][53], 4);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][53], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][53], 656879615);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][53], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][53], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][53], 1);
		PlayerTextDrawUseBox(playerid, cm_ptd[playerid][53], 0);
		PlayerTextDrawBoxColor(playerid, cm_ptd[playerid][53], 255);
		PlayerTextDrawTextSize(playerid, cm_ptd[playerid][53], 50.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][53], 1);

		cm_ptd[playerid][54] = CreatePlayerTextDraw(playerid, 424.000000, 87.000000, "exit");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][54], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][54], 2);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][54], 0.270000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][54], -1);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][54], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][54], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][54], 1);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][54], 0);

/*		cm_ptd[playerid][55] = CreatePlayerTextDraw(playerid, 167.000000, 303.000000, "LD_SPAC:white");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][55], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][55], 5);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][55], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][55], -1);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][55], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][55], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][55], 1);
		PlayerTextDrawUseBox(playerid, cm_ptd[playerid][55], 1);
		PlayerTextDrawBoxColor(playerid, cm_ptd[playerid][55], 255);
		PlayerTextDrawTextSize(playerid, cm_ptd[playerid][55], 30.000000, 30.000000);
		PlayerTextDrawSetPreviewModel(playerid, cm_ptd[playerid][55], 1654);
		PlayerTextDrawSetPreviewRot(playerid, cm_ptd[playerid][55], 0.000000, 0.000000, 90.000000, 1.000000);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][55], 1);*/

		cm_ptd[playerid][55] = CreatePlayerTextDraw(playerid, 349.000000, 84.000000, "LD_SPAC:white");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][55], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][55], 4);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][55], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][55], 656879615);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][55], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][55], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][55], 1);
		PlayerTextDrawUseBox(playerid, cm_ptd[playerid][55], 0);
		PlayerTextDrawBoxColor(playerid, cm_ptd[playerid][55], 255);
		PlayerTextDrawTextSize(playerid, cm_ptd[playerid][55], 50.000000, 16.000000);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][55], 1);

		cm_ptd[playerid][56] = CreatePlayerTextDraw(playerid, 364.000000, 87.000000, "BET");
		PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][56], 0);
		PlayerTextDrawFont(playerid, cm_ptd[playerid][56], 2);
		PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][56], 0.270000, 1.000000);
		PlayerTextDrawColor(playerid, cm_ptd[playerid][56], -1);
		PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][56], 0);
		PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][56], 1);
		PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][56], 1);
		PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][56], 0);

		for(new i = 0; i < 57; i ++)PlayerTextDrawShow(playerid, cm_ptd[playerid][i]);
		TogglePlayerControllable(playerid, false);
		SelectTextDraw(playerid, 0xB0C4DEFF);
		roulette_bet[playerid] = 0;
		roulette_number[playerid] = 0;
	}
	else
	{
		for(new i = 0; i < 57; i ++)
		{
			PlayerTextDrawDestroy(playerid, cm_ptd[playerid][i]);
			cm_ptd[playerid][i] = PlayerText:-1;
		}
		for(new i = 57; i < 64; i ++)
		{
			if(cm_ptd[playerid][i] != PlayerText:-1)
			{
				PlayerTextDrawDestroy(playerid, cm_ptd[playerid][i]);
				cm_ptd[playerid][i] = PlayerText:-1;
			}
		}

		TogglePlayerControllable(playerid, true);
		roulette_bet[playerid] = 0;
		roulette_number[playerid] = -1;
		DeletePVar(playerid, "cm_used");
		CancelSelectTextDraw(playerid);
	}
	return 1;
}

callback: kamikaze_reset(playerid)
{
	for(new i = 57; i < 64; i ++)
	{
		if(cm_ptd[playerid][i] != PlayerText:-1)
		{
			PlayerTextDrawDestroy(playerid, cm_ptd[playerid][i]);
			cm_ptd[playerid][i] = PlayerText:-1;
		}
	}
	return 1;
}

stock show_payment(playerid)
{
	payment_ptd[playerid][0] = CreatePlayerTextDraw(playerid, 25.416666, 204.000030, "PAYMENT:_0$");
	PlayerTextDrawLetterSize(playerid, payment_ptd[playerid][0], 0.252916, 1.055554);
	PlayerTextDrawAlignment(playerid, payment_ptd[playerid][0], 1);
	PlayerTextDrawColor(playerid, payment_ptd[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, payment_ptd[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, payment_ptd[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, payment_ptd[playerid][0], 255);
	PlayerTextDrawFont(playerid, payment_ptd[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, payment_ptd[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, payment_ptd[playerid][0], 0);

	PlayerTextDrawShow(playerid, payment_ptd[playerid][0]);

	payment_ptd[playerid][1] = CreatePlayerTextDraw(playerid, 121.249923, 204.000030, "~gr~+0$");
	PlayerTextDrawLetterSize(playerid, payment_ptd[playerid][1], 0.252916, 1.055554);
	PlayerTextDrawAlignment(playerid, payment_ptd[playerid][1], 3);
	PlayerTextDrawColor(playerid, payment_ptd[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, payment_ptd[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, payment_ptd[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, payment_ptd[playerid][1], 255);
	PlayerTextDrawFont(playerid, payment_ptd[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, payment_ptd[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, payment_ptd[playerid][1], 0);

	for(new j = 0; j < 2; j ++)
	{
		TextDrawShowForPlayer(playerid, payment_td[j]);
	}
	return 1;
}

stock hide_payment(playerid)
{
	for(new j = 0; j < 2; j ++)
	{
		TextDrawHideForPlayer(playerid, payment_td[j]);
		PlayerTextDrawDestroy(playerid, payment_ptd[playerid][j]);
		payment_ptd[playerid][j] = PlayerText:-1;
	}
	return 1;
}

stock update_payment(playerid, money_count)
{
	new td_string[28];
	format(td_string, sizeof(td_string), "PAYMENT:_%d$", PlayerInfo[playerid][salary]);
	PlayerTextDrawSetString(playerid, payment_ptd[playerid][0], td_string);
	format(td_string, sizeof(td_string), "~gr~+%d$", money_count);
	PlayerTextDrawSetString(playerid, payment_ptd[playerid][1], td_string);
	PlayerTextDrawShow(playerid, payment_ptd[playerid][1]);
	SetTimerEx("hide_payment_timer", 2000, false, "d", playerid);
	return 1;
}

callback: hide_payment_timer(playerid)
{
	if(payment_ptd[playerid][1] != PlayerText:-1)
	{
		PlayerTextDrawHide(playerid, payment_ptd[playerid][1]);
	}
	return 1;
}


stock get_accessorie_name(modelid)
{
	new model_name[28];
	switch(modelid)
	{
		case 18947:strcat(model_name, "Чёрная шляпа");
		case 18948:strcat(model_name, "Синяя шляпа");
		case 18949:strcat(model_name, "Зелёная шляпа");
		case 18950:strcat(model_name, "Красная шляпа");
		case 18951:strcat(model_name, "Жёлтая шляпа");
		case 18970:strcat(model_name, "Тигровая шляпа");
		case 18973:strcat(model_name, "Леопардовая шляпа");
		case 18972:strcat(model_name, "Жёлто-чёрная шляпа");
		case 18971:strcat(model_name, "Чёрно-белая шляпа");
		case 19421:strcat(model_name, "Серые наушники");
		case 19422:strcat(model_name, "Чёрные наушники");
		case 18910:strcat(model_name, "Бандана цвета лавы");
		case 18909:strcat(model_name, "Бандана цвета воды");
		case 18908:strcat(model_name, "Бандана с синими узорами");
		case 18907:strcat(model_name, "Бандана разноцветная");
		case 18906:strcat(model_name, "Серо-красная бандана");
		case 19423:strcat(model_name, "Красные наушники");
		case 19424:strcat(model_name, "Синие наушники");
		case 19069:strcat(model_name, "Серо-чёрная шапка");
		case 19519:strcat(model_name, "Серый парик");
		case 19274:strcat(model_name, "Красный парик");
		case 19068:strcat(model_name, "Серо-чёрная шапка с узором");
		case 19104:strcat(model_name, "Шлем цвета хаки с затяжками");
		case 19105:strcat(model_name, "Армейский шлем с затяжками");
		case 19106:strcat(model_name, "Армейский шлем");
		case 19107:strcat(model_name, "Тусклый армейский шлем");
		case 19108:strcat(model_name, "Армейский шлем цвета хаки");
		case 19109:strcat(model_name, "Яркий армейский шлем");
		case 19067:strcat(model_name, "Красно-чёрная шапка");
		case 19554:strcat(model_name, "Серый берет");
		case 18953:strcat(model_name, "Чёрная шапка в полоску");
		case 18954:strcat(model_name, "Серая шапка в полоску");
		case 18968:strcat(model_name, "Сине-серая панамка");
		case 18967:strcat(model_name, "Чёрная панамка");
		case 18969:strcat(model_name, "Серо-красная панамка");
		case 18955:strcat(model_name, "Серо-красная кепка");
		case 18956 :strcat(model_name, "Серо-красная кепка");
		case 18957:strcat(model_name, "Синяя кепка с узором");
		case 18959:strcat(model_name, "Армейская кепка");
		case 18926:strcat(model_name, "Кепка цвета хаки");
		case 18927:strcat(model_name, "Синяя кепка с узором");
		case 18928:strcat(model_name, "Цветная кепка");
		case 18929:strcat(model_name, "Серая кепка с узором");
		case 18930:strcat(model_name, "Кепка цвета лавы");
		case 18932:strcat(model_name, "Серо-красная кепка");
		case 18933:strcat(model_name, "Белая кепка с узором");
		case 18911:strcat(model_name, "Чёрная маска");
		case 18912:strcat(model_name, "Чёрная маска с узором");
		case 18913:strcat(model_name, "Зелёная маска с узором");
		case 18914:strcat(model_name, "Армейская маска");
		case 18915:strcat(model_name, "Розовая маска с узором");
		case 18916:strcat(model_name, "Цветная маска");
		case 18917:strcat(model_name, "Маска с изображением молнии");
		case 18918:strcat(model_name, "Серая маска с узором");
		case 18919:strcat(model_name, "Белая маска с узором");
		case 18920:strcat(model_name, "Жёлто-коричневая маска");
		case 19011:strcat(model_name, "Очки с изображением спирали");
		case 19012:strcat(model_name, "Чёрные очки");
		case 19013:strcat(model_name, "Очки с изображением глаз");
		case 19014:strcat(model_name, "Очки «Deal with it»");
		case 19015:strcat(model_name, "Очки без линз");
		case 19016:strcat(model_name, "Очки «X-RAY VISION»");
		case 19017:strcat(model_name, "Жёлтые очки");
		case 19018:strcat(model_name, "Оранжевые очки");
		case 19019:strcat(model_name, "Красные очки");
		case 19024:strcat(model_name, "Очки с фиолетовыми линзами");
		case 19027:strcat(model_name, "Очки с оранжевыми линзами");
		case 19028:strcat(model_name, "Очки с жёлтыми линзами");
		case 19029:strcat(model_name, "Очки с зелёными линзами");
		case 19022:strcat(model_name, "Очки с серыми линзами");
		case 19035:strcat(model_name, "Очки с синими линзами");
		case 19031:strcat(model_name, "Очки с ярко-жёлтыми линзами");
		case 19032:strcat(model_name, "Очки с красными линзами");
		case 19033:strcat(model_name, "Очки с чёрными линзами");
		case 19042:strcat(model_name, "Золотые часы");
		case 19041:strcat(model_name, "Бронзовые часы");
		case 19040:strcat(model_name, "Серебряные часы");
		case 19039:strcat(model_name, "Золотые часы");
		case 19043:strcat(model_name, "Серебряные часы");
		case 19044:strcat(model_name, "Розовые часы");
		case 19045:strcat(model_name, "Красные часы");
		case 19046:strcat(model_name, "Зелёные часы");
		case 19048:strcat(model_name, "Синие часы");
		case 19049:strcat(model_name, "Цветные часы");
		case 19050:strcat(model_name, "Синие часы с узором");
		case 19051:strcat(model_name, "Жёлто-чёрные часы");
		case 19053:strcat(model_name, "Часы из змеиной кожи");
		case 3026:strcat(model_name, "Походный рюкзак");
		case 18931:strcat(model_name, "Черно-синяя кепка");
		default:strcat(model_name, "Неизвестный предмет");
	}
	return model_name;
}


callback: clear_zz_td(playerid)
{
	DeletePVar(playerid, "zz_td_status");
	for(new j = 0; j < 3; j ++)
	{
		TextDrawHideForPlayer(playerid, zz_td[j]);
	}
	return 1;
}
callback: clear_np_td(playerid)
{
	DeletePVar(playerid, "np_td_status");
	for(new j = 0; j < 3; j ++)
	{
		TextDrawHideForPlayer(playerid, np_td[j]);
	}
	return 1;
}

callback: clear_leave_zz_td(playerid)
{
	DeletePVar(playerid, "leavezz_td_status");
	for(new j = 0; j < 3; j ++)
	{
		TextDrawHideForPlayer(playerid, leave_zz_td[j]);
	}
	return 1;
}
callback: clear_leave_np_td(playerid)
{
	DeletePVar(playerid, "leavenp_td_status");
	for(new j = 0; j < 3; j ++)
	{
		TextDrawHideForPlayer(playerid, leave_np_td[j]);
	}
	return 1;
}

stock get_passenger_count(playerid)
{
	new passenger_count = 0,
		vehicleid = GetPlayerVehicleID(playerid);

	foreach(new i:streamed_players[playerid])
	{
		if(GetPlayerState(i) ==  PLAYER_STATE_PASSENGER && GetPlayerVehicleID(i) ==  vehicleid)passenger_count ++;
	}
	return passenger_count;
}

stock IsARPName(Name[])
{
	new simb_, RP_Name[2][24];
	new playerid;
	for(new i = 0;i < strlen(Name);i ++)
	{
	    if(Name[i] == '_') simb_ ++;
	}
	if(simb_ != 1) return 0;
	sscanf(Name,"p<_>s[24]s[24]",RP_Name[0],RP_Name[1]);
	if(!IsAGoodName(RP_Name[0]) || !IsAGoodName(RP_Name[1])) return 0;
	if(IsPlayerNPC(playerid)) return 1;
	return 1;
}
stock IsAGoodName(Name[])
{
	new playerid;
	new NameChars;
	if(IsPlayerNPC(playerid)) return 1;
	if(strlen(Name) < 2) return 0;
	if(Name[0] < 'A' || Name[0] > 'Z') return 0;
	for(new i = 1;i < strlen(Name);i ++)
	{
	    if(Name[i] < 'a' || Name[i] > 'z')
		{
		    if(Name[i] >= 'A' && Name[i] <= 'Z') NameChars ++;
		    else return 0;
		}
	    if(NameChars > 1) return 0;
	}
	return 1;
}

stock check_advertise(playerid, string[])
{
	if(is_ip_found(string)|| IsMessageReklama(string))
	{
		new text_string[144];
		format(text_string, 144, ""c_orange_red"* REPORT РЕКЛАМА %s [%d]:"c_white" %s", PlayerInfo[playerid][name], playerid, string);
		foreach(new i: admin_players) SendClientMessage(i, col_white, text_string);
		return 1;
	}
	return 0;
}


stock is_ip_found(string[])
{
    new len = strlen(string), blocks, digits;
    for(new pos, bool: LastCharWasDigit; pos < len; pos++)
    {
        switch(string[pos])
        {
            case '0'..'9':
            {
                digits ++;
                if(!LastCharWasDigit) blocks ++, LastCharWasDigit = true;
            }
            default: if(LastCharWasDigit) LastCharWasDigit = false;
        }
    }
    return (digits >= 8 && blocks >= 4) ? (true) : (false);
}

stock IsMessageReklama(string[])
{
	if(strfind(string, "http",true) != -1||strfind(string, ".com",true) != -1||strfind(string, ".ru",true) != -1||strfind(string, "www.",true) != -1||strfind(string, "/q",true) != -1||strfind(string, "/quit",true) != -1||strfind(string, "mq",true) != -1
	||strfind(string, ".net",true) != -1||strfind(string, ". com",true) != -1||strfind(string, ". net",true) != -1||strfind(string, ". ru",true) != -1||strfind(string, ".ua",true) != -1||strfind(string, "маму",true) != -1||strfind(string, "мамашу",true) != -1
	||strfind(string, ". ua",true) != -1||strfind(string, "мамку",true) != -1||strfind(string, "мамку",true) != -1
	||strfind(string, "мамаша",true) != -1||strfind(string, "мамаша",true) != -1
	||strfind(string, "матуха",true) != -1||strfind(string, "матуху",true) != -1
	||strfind(string, "qm",true) != -1
	||strfind(string, "mamawa",true) != -1
	||strfind(string, "mamsha",true) != -1
	||strfind(string, "мама",true) != -1
	||strfind(string, "mama",true) != -1
	||strfind(string, "mamka",true) != -1
	||strfind(string, "мать ебал",true) != -1
	||strfind(string, "ебал мать",true) != -1
	||strfind(string, "address",true) != -1||strfind(string, "мамка",true) != -1||strfind(string, "мамке",true) != -1||strfind(string, "маме",true) != -1||strfind(string, "мамаше",true) != -1||strfind(string, "mamke",true) != -1||strfind(string, "mamku",true) != -1
	||strfind(string, "mamawu",true) != -1||strfind(string, "mamawe",true) != -1||strfind(string, "mamashu",true) != -1||strfind(string, "mamashe",true) != -1||strfind(string, "mat'",true) != -1||strfind(string, "matb",true) != -1||strfind(string, ". su",true) != -1
	||strfind(string, "q m",true) != -1||strfind(string, "q m",true) != -1||strfind(string, "rcon",true) != -1)
	{
		return 1;
	}
	return 0;
}

stock IsPlayerAiming(playerid)
{
	new anim = GetPlayerAnimationIndex(playerid);
	if(((anim >= 1160) && (anim <= 1163)) || (anim == 1167) || (anim == 1365) || (anim == 1643) || (anim == 1453) || (anim == 220)) return 1;
	return 0;
}

callback: death_sync(playerid)
{
	set_health(playerid, 10);
	return 1;
}
callback: OnPlayerSyncDeath(playerid, killerid, reason)
{
	SetTimerEx("death_sync", 3000, false, "i", playerid);
	foreach(new i: admin_players)
	{
	    if(!IsPlayerMobile(i)) SendDeathMessageToPlayer(i, killerid, playerid, reason);
	}

	if(TeamPaint[playerid] != 0)
	{
		switch(StartPaintBall)
		{
			case 1:
			{
				switch(TeamPaint[playerid])
				{
					case 1: BluePlayer --;
					case 2: RedPlayer --;
				}
				TeamPaint[playerid]=
				KillPaint[playerid]=
				DeathPaint[playerid] = 0;
				SendClientMessage(playerid, col_gray, ""c_yellow"* S.INFO: Вы были дисквалифицированы.");
			}
			case 2:
			{
				if(TeamPaint[killerid] != 0 && TeamPaint[killerid] != TeamPaint[playerid])
				{
					DeathPaint[playerid] ++;
					KillPaint[killerid] ++;
					set_health(killerid, 100.0);
					if(TeamPaint[killerid] == 1)BlueScore++;
					else RedScore++;
					new string[40];
					format(string, sizeof(string), "Kill: ~b~~h~%i~n~Death: ~b~~h~%i", KillPaint[playerid], DeathPaint[playerid]);
					PlayerTextDrawSetString(playerid, PaintStats[playerid], string);
					format(string, sizeof(string), "Kill: ~b~~h~%i~n~Death: ~b~~h~%i", KillPaint[killerid], DeathPaint[killerid]);
					PlayerTextDrawSetString(killerid, PaintStats[killerid], string);


					format(string, sizeof(string),"~r~~h~Killed by %s", PlayerInfo[killerid][name]);
					GameTextForPlayer(playerid, string, 4000, 3);
					GameTextForPlayer(killerid, "~g~+1 Kill", 2000, 1);

					foreach(new i: logged_players)
					{
						if(TeamPaint[i] != 0)
						{
							if(!IsPlayerMobile(i)) SendDeathMessageToPlayer(i, killerid, playerid, reason);
						}
					}
				}
			}
		}
	}


	if(player_killed[playerid]) return 1;

	if(fam_gangzone != -1)
	{
		if(PlayerInfo[playerid][family] && PlayerInfo[killerid][family] && PlayerInfo[killerid][family] != PlayerInfo[playerid][family])
		{
			if(PlayerInfo[killerid][family] == fam_attacker && PlayerInfo[playerid][family] == fam_owner)
			{
				foreach(new i: logged_players)
				{
					if(!PlayerInfo[i][family]) continue;
					if(!IsPlayerMobile(i)) SendDeathMessageToPlayer(i, killerid, playerid, reason);
				}
				fam_attacker_points ++;

				new query_string[8];
				format(query_string, 8, "%d", fam_attacker_points);
				TextDrawSetString(Family_War_TD[23], query_string);
			}
			if(PlayerInfo[killerid][family] == fam_owner && PlayerInfo[playerid][family] == fam_attacker)
			{
				foreach(new i: logged_players)
				{
					if(!PlayerInfo[i][family]) continue;
					if(!IsPlayerMobile(i)) SendDeathMessageToPlayer(i, killerid, playerid, reason);
				}
				fam_owner_points ++;

				new query_string[8];

				format(query_string, 8, "%d", fam_owner_points);
				TextDrawSetString(Family_War_TD[24], query_string);
			}
			update_activity(killerid);
		}
	}

	if(mw_gangzone != -1)
	{
		if(mafia_player(playerid) && mafia_player(killerid) && PlayerInfo[killerid][member] != PlayerInfo[playerid][member])
		{
			if(PlayerInfo[killerid][member] == mw_attacker && PlayerInfo[playerid][member] == mw_owner)
			{
				foreach(new i: logged_players)
				{
					if(!mafia_player(i)) continue;
					if(!IsPlayerMobile(i)) SendDeathMessageToPlayer(i, killerid, playerid, reason);
				}
				mw_attacker_points ++;

				new query_string[8];
				format(query_string, 8, "%d", mw_attacker_points);
				TextDrawSetString(mw_td[17], query_string);
			}
			if(PlayerInfo[killerid][member] == mw_owner && PlayerInfo[playerid][member] == mw_attacker)
			{
				foreach(new i: logged_players)
				{
					if(!mafia_player(i)) continue;
					if(!IsPlayerMobile(i)) SendDeathMessageToPlayer(i, killerid, playerid, reason);
				}
				mw_owner_points ++;

				new query_string[8];

				format(query_string, 8, "%d", mw_owner_points);
				TextDrawSetString(mw_td[16], query_string);
			}
			update_activity(killerid);
		}
	}
	if(gz_captured != -1)
	{
		if((IsPlayerInGangZone(playerid, gz_captured) || (IsPlayerInRangeOfQuad(playerid, gz_info[gz_captured][gz_pos][2], gz_info[gz_captured][gz_pos][3]) < 200 || IsPlayerInRangeOfQuad(playerid, gz_info[gz_captured][gz_pos][0], gz_info[gz_captured][gz_pos][1]) < 200)) &&(PlayerInfo[playerid][member] >= 18 && PlayerInfo[playerid][member]<= 22) &&(PlayerInfo[killerid][member] >= 18  && PlayerInfo[playerid][member]<= 22) && PlayerInfo[killerid][member] != PlayerInfo[playerid][member])
		{
			if(PlayerInfo[killerid][member] == gz_info[gz_captured][gz_attacker]&& PlayerInfo[playerid][member] == gz_info[gz_captured][gz_owner])
			{
				foreach(new i: logged_players)
				{
					if(!gang_player(i)) continue;
					if(!IsPlayerMobile(i)) SendDeathMessageToPlayer(i, killerid, playerid, reason);
				}
				if(gz_capture_type == gz_type_kills)
				{
					attacker_points ++;
					new query_string[98];
					format(query_string,sizeof(query_string),"UPDATE `users` SET `u_capture_kills` = `u_capture_kills`+1 WHERE `u_id` = '%d' LIMIT 1", PlayerInfo[killerid][id]);
					mysql_tquery(sql_connection, query_string, "", "");

					format(query_string, 8, "%d", attacker_points);
					TextDrawSetString(capture_td[17], query_string);
				}
			}
			if(PlayerInfo[killerid][member] == gz_info[gz_captured][gz_owner]&& PlayerInfo[playerid][member] == gz_info[gz_captured][gz_attacker])
			{
				foreach(new i: logged_players)
				{
					if(!gang_player(i)) continue;
					if(!IsPlayerMobile(i)) SendDeathMessageToPlayer(i, killerid, playerid, reason);
				}
				if(gz_capture_type == gz_type_kills)
				{
					owner_points ++;
					new query_string[98];
					format(query_string,sizeof(query_string),"UPDATE `users` SET `u_capture_kills` = `u_capture_kills`+1 WHERE `u_id` = '%d' LIMIT 1", PlayerInfo[killerid][id]);
					mysql_tquery(sql_connection, query_string, "", "");

					format(query_string, 8, "%d", owner_points);
					TextDrawSetString(capture_td[16], query_string);

				}
			}
			update_activity(killerid);
		}
	}

	if(PlayerInfo[playerid][wanted] > 0)
	{
		if(cop_player(killerid)|| fbi_player(killerid))
		{
			PlayerInfo[playerid][jailed]=((PlayerInfo[playerid][wanted]* 10)* 60);
			PlayerInfo[playerid][jail] = PlayerInfo[killerid][member] -3;
			if(fbi_player(killerid))PlayerInfo[playerid][jail] = 1;
			PlayerInfo[playerid][wanted] = 0;
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][wanted]);
			SendClientMessage(playerid, col_light_red, "Вы были посажены в камеру.");
			update_int_sql(playerid, "u_wanted", PlayerInfo[playerid][wanted]);
			update_int_sql(playerid, "u_jail", PlayerInfo[playerid][jail]);
			update_activity(killerid);
			foreach(new i : logged_players)
			{
				if(cop_player(i)|| fbi_player(i))
				{
					new query_string[128];
					format(query_string, sizeof(query_string), "[Внимание] %s %s нейтрализовал преступника '%s'", f_rank[PlayerInfo[killerid][member] -1][PlayerInfo[killerid][rank] -1], PlayerInfo[killerid][name], PlayerInfo[playerid][name]);
					SendClientMessage(i, col_light_red, query_string);
				}
			}
		}
	}


	return 1;
}

callback: ProxDetectorS(Float:radi, playerid, targetid)
{
	if(IsPlayerConnected(playerid) &&IsPlayerConnected(targetid))
	{
		if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(targetid))
		{
			new Float:posx, Float:posy, Float:posz;
			new Float: olsposx, Float: olsposy, Float: olsposz;
			new Float:tempposx, Float:tempposy, Float:tempposz;
			GetPlayerPos(playerid,  olsposx,  olsposy,  olsposz);
			GetPlayerPos(targetid, posx, posy, posz);
			tempposx =(olsposx -posx);
			tempposy =(olsposy -posy);
			tempposz =(olsposz -posz);
			if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
			{
				return 1;
			}
		}
	}
	return 0;
}

stock GetBoatDoorPos(vehicleid, &Float:x, &Float:y, &Float:z)
{
	new Float:v_angle,
		Float:v_distance_d,
		Float:v_distance_a;

	switch(GetVehicleModel(vehicleid))
	{
		case 454:x = -0.6802, y = -2.6828, z = 0.8636;
		case 446:x = -0.1356, y = 0.9229, z = 1.6700;
		case 484:x = -0.0601, y = -1.4653, z = 1.6859;
		case 493:x = -0.6802, y = -2.6828, z = 0.8636;
	}
    x += 0.20;



	v_distance_d = floatsqroot((x * x)+(y * y));
    v_distance_a = atan2(x, y);


    GetVehicleZAngle(vehicleid, v_angle);
    GetVehiclePos(vehicleid, x, y, z);
	x += v_distance_d * floatsin(v_distance_a -v_angle, degrees);
	y += v_distance_d * floatcos(v_distance_a -v_angle, degrees);
    return 1;
}

stock v_boat_int(vehicleid)
{
	switch(veh_info[vehicleid -1][v_model])
	{
		case 454, 446, 484, 493: return 1;
	}
	return 0;
}

stock GetMoveDirectionFromKeys(ud, lr)
{
	new direction = 0;

    if(lr < 0)
	{
		if(ud < 0) 		direction = MOVE_FORWARD_LEFT; 	// Up & Left key pressed
		else if(ud > 0) direction = MOVE_BACK_LEFT; 	// Back & Left key pressed
		else            direction = MOVE_LEFT;          // Left key pressed
	}
	else if(lr > 0) 	// Right pressed
	{
		if(ud < 0)      direction = MOVE_FORWARD_RIGHT;  // Up & Right key pressed
		else if(ud > 0) direction = MOVE_BACK_RIGHT;     // Back & Right key pressed
		else			direction = MOVE_RIGHT;          // Right key pressed
	}
	else if(ud < 0) 	direction = MOVE_FORWARD; 	// Up key pressed
	else if(ud > 0) 	direction = MOVE_BACK;		// Down key pressed

	return direction;
}
stock MoveCamera(playerid)
{
	new Float:FV[3], Float:CP[3];
	GetPlayerCameraPos(playerid, CP[0], CP[1], CP[2]);          // 	Cameras position in space
    GetPlayerCameraFrontVector(playerid, FV[0], FV[1], FV[2]);  //  Where the camera is looking at

	// Increases the acceleration multiplier the longer the key is held
	if(noclipdata[playerid][accelmul] <= 1) noclipdata[playerid][accelmul] += ACCEL_RATE;

	// Determine the speed to move the camera based on the acceleration multiplier
	new Float:speed = MOVE_SPEED * noclipdata[playerid][accelmul];

	// Calculate the cameras next position based on their current position and the direction their camera is facing
	new Float:X, Float:Y, Float:Z;
	GetNextCameraPosition(noclipdata[playerid][mode], CP, FV, X, Y, Z);
	MovePlayerObject(playerid, noclipdata[playerid][flyobject], X, Y, Z, speed);

	// Store the last time the camera was moved as now
	noclipdata[playerid][lastmove] = GetTickCount();
	return 1;
}
stock GetNextCameraPosition(move_mode, Float:CP[3], Float:FV[3], &Float:X, &Float:Y, &Float:Z)
{
    // Calculate the cameras next position based on their current position and the direction their camera is facing
    #define OFFSET_X (FV[0]*6000.0)
	#define OFFSET_Y (FV[1]*6000.0)
	#define OFFSET_Z (FV[2]*6000.0)
	switch(move_mode)
	{
		case MOVE_FORWARD:
		{
			X = CP[0] +OFFSET_X;
			Y = CP[1] +OFFSET_Y;
			Z = CP[2] +OFFSET_Z;
		}
		case MOVE_BACK:
		{
			X = CP[0] -OFFSET_X;
			Y = CP[1] -OFFSET_Y;
			Z = CP[2] -OFFSET_Z;
		}
		case MOVE_LEFT:
		{
			X = CP[0] -OFFSET_Y;
			Y = CP[1] +OFFSET_X;
			Z = CP[2];
		}
		case MOVE_RIGHT:
		{
			X = CP[0] +OFFSET_Y;
			Y = CP[1] -OFFSET_X;
			Z = CP[2];
		}
		case MOVE_BACK_LEFT:
		{
			X = CP[0] +(-OFFSET_X -OFFSET_Y);
 			Y = CP[1] +(-OFFSET_Y + OFFSET_X);
		 	Z = CP[2] -OFFSET_Z;
		}
		case MOVE_BACK_RIGHT:
		{
			X = CP[0] +(-OFFSET_X + OFFSET_Y);
 			Y = CP[1] +(-OFFSET_Y -OFFSET_X);
		 	Z = CP[2] -OFFSET_Z;
		}
		case MOVE_FORWARD_LEFT:
		{
			X = CP[0] +(OFFSET_X  -OFFSET_Y);
			Y = CP[1] +(OFFSET_Y  + OFFSET_X);
			Z = CP[2] +OFFSET_Z;
		}
		case MOVE_FORWARD_RIGHT:
		{
			X = CP[0] +(OFFSET_X  + OFFSET_Y);
			Y = CP[1] +(OFFSET_Y  -OFFSET_X);
			Z = CP[2] +OFFSET_Z;
		}
	}
}
stock CancelFlyMode(playerid)
{
	DeletePVar(playerid, "FlyMode");
	CancelEdit(playerid);
	TogglePlayerSpectating(playerid, false);

	DestroyPlayerObject(playerid, noclipdata[playerid][flyobject]);
	noclipdata[playerid][cameramode] = CAMERA_MODE_NONE;
	return 1;
}
stock FlyMode(playerid)
{
	// Create an invisible object for the players camera to be attached to
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	noclipdata[playerid][flyobject] = CreatePlayerObject(playerid, 19300, X, Y, Z, 0.0, 0.0, 0.0);

	// Place the player in spectating mode so objects will be streamed based on camera location
	TogglePlayerSpectating(playerid, true);
	// Attach the players camera to the created object
	AttachCameraToPlayerObject(playerid, noclipdata[playerid][flyobject]);

	SetPVarInt(playerid, "FlyMode", 1);
	noclipdata[playerid][cameramode] = CAMERA_MODE_FLY;


	return 1;
}



callback: practice_next_step(playerid)
{
	player_practice_step_timer[playerid] = -1;
	player_practice_step_timer[playerid] = SetTimerEx("practice_next_step", 4000, 0, "ii", playerid, true);
	DestroyPlayerObject(playerid, player_practice_object[playerid]);

	new object_cell = random(7);
	player_practice_object[playerid] = CreatePlayerObject(playerid, practice_objects_model[random(8)], practice_objects_pos[GetPracticeStep(playerid)][object_cell][0],
																			practice_objects_pos[GetPracticeStep(playerid)][object_cell][1],
																			practice_objects_pos[GetPracticeStep(playerid)][object_cell][2],
																			practice_objects_pos[GetPracticeStep(playerid)][object_cell][3],
																			practice_objects_pos[GetPracticeStep(playerid)][object_cell][4],
																			practice_objects_pos[GetPracticeStep(playerid)][object_cell][5],
																			150.0);


	return 1;
}


stock GetPracticeStep(playerid)
{
	new _step = 0,
		Float:_distance;

	_distance = GetPlayerDistanceFromPoint(playerid, practice_steps_pos[0][0], practice_steps_pos[0][1], practice_steps_pos[0][2]);
	for(new i = 0; i < 3; i ++)
	{
		if(GetPlayerDistanceFromPoint(playerid, practice_steps_pos[i][0], practice_steps_pos[i][1], practice_steps_pos[i][2]) > _distance) continue;
		_distance = GetPlayerDistanceFromPoint(playerid, practice_steps_pos[i][0], practice_steps_pos[i][1], practice_steps_pos[i][2]);
		_step = i;
	}
	return _step;
}


stock update_activity(playerid)
{
	new _query_string[128];
	format(_query_string, 128, "UPDATE `users` SET `u_activity` = `u_activity`+'0.05' WHERE `u_id` = '%d' LIMIT 1",
	PlayerInfo[playerid][id]);
	mysql_tquery(sql_connection, _query_string);
	return 1;
}

stock available_gz_pos(Float:x, Float:y)
{
	if(x < -2860 || x > 881 || y > 2860 || y < 746 || (y < 2139 && x < -1852) || (y < 1776 && x < -1712) || (y < 1654 && x < -1240) || (y < 1077 && x < -960)) return 0;
	return 1;
}

stock get_gz_pos(Float:x, Float:y, Float:radius, &Float:minx, &Float:miny, &Float:maxx, &Float:maxy)
{
	minx = x -radius;
	miny = y -radius;
	maxx = x + radius;
	maxy = y + radius;
	return 1;
}

stock GetPlayer2DZone(playerid, zone[], len)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
 	for(new i = 0; i != 365; i++)
 	{
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4])
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
	}
	return 0;
}


stock SpeedVehicle(playerid)
{
	new Float:ST[4];
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	GetVehicleVelocity(GetPlayerVehicleID(playerid),ST[0],ST[1],ST[2]);
	else return 0;
	ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 100.3;
	return floatround(ST[3]);
}

stock UseCarDriver(carid)
{
	foreach(new i : logged_players)
	{
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER && GetPlayerVehicleID(i) == carid) return 1;
	}
	return 0;
}


stock IsPlayerSurfing(playerid)
{
    new surf = GetPlayerSurfingVehicleID(playerid);
	if(surf == INVALID_VEHICLE_ID || surf == 0) return 0;
	if(GetVehicleModel(surf) == 478 || GetVehicleModel(surf) == 578 || v_boat(surf)|| v_plane(surf))
	{
	    return 2;
	}

	return 1;
}

stock get_real_speed(const playerid, bool: check3d)
{
	new Float:coord[3];
	GetPlayerVelocity(playerid, coord[0], coord[1], coord[2]);
	return floatround(floatsqroot((check3d)?(coord[0]*coord[0] + coord[1]*coord[1] +coord[2]*coord[2]) :(coord[0]*coord[0] + coord[1]*coord[1]))*100.0*1.6);
}

stock IsVehicleInRangeOfPoint(vehicleid,Float:range,Float:x,Float:y,Float:z)
{
    if(vehicleid == INVALID_VEHICLE_ID) return 0;

    new Float:DistantaCar = GetVehicleDistanceFromPoint(vehicleid, x, y, z);

    if(DistantaCar <= range) return 1;
    return 0;
}













new Float:rcm_pos_z[MAX_PLAYERS];


const PLAYER_SYNC = 207;
IPacket:PLAYER_SYNC(playerid, BitStream:bs)
{
    new onFootData[PR_OnFootSync];

    BS_IgnoreBits(bs, 8);
    BS_ReadOnFootSync(bs, onFootData);

	if(onFootData[PR_surfingVehicleId] == 2001 || ! IsValidVehicle(onFootData[PR_surfingVehicleId]))
	{
		onFootData[PR_surfingVehicleId] = 0;

        BS_SetWriteOffset(bs, 8);
        BS_WriteOnFootSync(bs, onFootData);
	}
	if((onFootData[PR_position][2] -rcm_pos_z[playerid] > 5 || onFootData[PR_position][2] -rcm_pos_z[playerid] < -5) && onFootData[PR_position][2] == -10.00)
	{
		new Float:pl_pos_z;
		GetPlayerPos(playerid, pl_pos_z, pl_pos_z, pl_pos_z);
		onFootData[PR_position][2] = pl_pos_z;

        BS_SetWriteOffset(bs, 8);
        BS_WriteOnFootSync(bs, onFootData);
	}
	rcm_pos_z[playerid] = onFootData[PR_position][2];
	return 1;
}



stock update_quest_data(playerid)
{
	new query_string[198];
	format(query_string, sizeof(query_string), "UPDATE `users` SET `u_quest_status`='%d|%d|%d|%d|%d|%d|%d|%d', `u_quest_progress`='%d|%d|%d|%d|%d|%d|%d|%d' WHERE `u_id`='%d' LIMIT 1",
	quest_status[playerid][0],
	quest_status[playerid][1],
	quest_status[playerid][2],
	quest_status[playerid][3],
	quest_status[playerid][4],
	quest_status[playerid][5],
	quest_status[playerid][6],
	quest_status[playerid][7],
	quest_progress[playerid][0],
	quest_progress[playerid][1],
	quest_progress[playerid][2],
	quest_progress[playerid][3],
	quest_progress[playerid][4],
	quest_progress[playerid][5],
	quest_progress[playerid][6],
	quest_progress[playerid][7],
	PlayerInfo[playerid][id]);
	mysql_tquery(sql_connection, query_string);
	return 1;
}



stock Float:PointToPoint2D(Float:x1,Float:y1,Float:x2,Float:y2) return floatsqroot(floatadd(floatpower(x2-x1,2),floatpower(y2-y1,2)));
stock Float:GetPlayerDistanceToPlayer(playerid, targetid)
{
    new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
    GetPlayerPos(playerid, x, y, z);
    GetPlayerPos(targetid, x2, y2, z2);
    return PointToPoint2D(x, y, x2, y2);
}
ShiftIndexArray(const playerid, const quest_id)
{
	new listitem = GetPVarInt(playerid, "photographer_quest_id");
	#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
		printf("ShiftIndexArray | quest_id: %d | listitem: %d", quest_id, listitem);
	#endif
	if(listitem == 2 && (QUEST_OLD_MILITARY + 1 <= quest_id <= QUEST_DEPUTY + 1))
	    return 1;
	else if(listitem == 3 && (QUEST_DEPUTY <= quest_id <= QUEST_DEPUTY + 1))
 		return 3;
	else if(listitem == 4 || listitem == 5 || listitem == 6)
		return 4;
	return 0;
}
stock IsPlayerInPickup(playerid, pickupid)
{
	if(pickupid < 0)
	    return 0;
	new Float:x, Float:y, Float:z, Float:dist;
	GetPlayerPos(playerid, x, y, z);
	new type = Streamer_GetIntData(STREAMER_TYPE_PICKUP, pickupid, E_STREAMER_TYPE);
	Streamer_GetDistanceToItem(x, y, z, STREAMER_TYPE_PICKUP, pickupid, dist);

	if(type != 14)
	{
		if(dist <= 3.0)
			return 1;
	}
	else
	{
		if(dist <= 9.0)
			return 1;
	}
	return 0;
}
stock GivePlayerPhotographerSalary(const playerid)
{
    new
		id_quest = quest_photographer_id[playerid],
		photographer_salary;
	if(id_quest < QUEST_OLD_MILITARY)
	{
        photographer_salary = salary_photographer_quest[0];
	}
	else
	{
        photographer_salary = salary_photographer_quest[id_quest -QUEST_OLD_MILITARY + 1];
	}
	return photographer_salary;
}



stock SendMessagePhtographerSalary(const playerid)
{
	new give_money_photographer_job = GivePlayerPhotographerSalary(playerid);
	give_money(playerid, give_money_photographer_job);
	insert_money_log(playerid, INVALID_PLAYER_ID, give_money_photographer_job, "За работу в бюро фотографов");
	static const str[] = "Вот твои %d$. Спасибо за работу!";
	new fmt_str[sizeof(str) -2 + 11];
	format(fmt_str, sizeof(fmt_str), str, give_money_photographer_job);
	return SendClientMessage(playerid, col_blue, fmt_str);
}
stock EndJobPhotographer(playerid)
{
	if(dynamic_area_photographer_job[playerid] != -1)
		DestroyDynamicArea(dynamic_area_photographer_job[playerid]);
	if(dynamic_sphere_photographer[playerid] != -1)
		DestroyDynamicArea(dynamic_sphere_photographer[playerid]);
	if(cylinder_photo_point[playerid] != -1)
		DestroyDynamicArea(cylinder_photo_point[playerid]);
	if(map_icon_photographer[playerid] != -1)
		DestroyDynamicMapIcon(map_icon_photographer[playerid]);
	DestroyDynamicCP(gps_point_photographer[playerid]);
	DeletePVar(playerid, "photographer_quest_id");

	dynamic_area_photographer_job[playerid] = dynamic_sphere_photographer[playerid]
											= cylinder_photo_point[playerid]
											= map_icon_photographer[playerid]
											= gps_point_photographer[playerid]
											= quest_photographer_id[playerid]
											= step_photographer_job[playerid]
											= -1;
	return 1;
}

public OnPlayerCommandReceived(playerid, cmd[], params[], flags)
{
 	#if defined debug_mode
		printf("[DEBUG] [OnPlayerCommandReceived] playerid: %d | cmd:%s", playerid, cmd);
	#endif
	if(p_t_info[playerid][p_logged] == false) return SendClientMessage(playerid, col_white, !""scm_error"Вы не авторизованы."), false;
 	if(p_t_info[playerid][p_dialog] != -1) return SendClientMessage(playerid, col_white, !""scm_error"У Вас открыт диалог, Вы не можете использовать команды."), false;
 	if(dr_ptd [playerid][5] != PlayerText:-1 || GetPVarInt(playerid, "cm_used")|| GetPVarInt(playerid,"Stol") || GetPVarInt(playerid, "p_sm_used")) return SendClientMessage(playerid, col_white, !""scm_error"У Вас открыта рулетка, Вы не можете использовать команды."), false;

	if(vk_checking {playerid} == 1 || google_checking {playerid} == 1) return SendClientMessage(playerid, col_white, !""scm_error"Вы не авторизовались."), false;


	if(GetTickCount() -cmd_cooldown[playerid] < 500)
	{
	    if(CountFloodForPlayer[playerid] >= 2) return 0;
		CountFloodForPlayer[playerid] ++;
		SendClientMessage(playerid, col_white, !""scm_error"Не флудите.");
		return 0;
	}
	cmd_cooldown[playerid] = GetTickCount();

	return 1;
}
public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
	if(result == -1) return SendClientMessage(playerid, col_white, !""scm_error"Данная команда не существует. Используйте "c_orange_red"/menu"c_white", чтобы узнать список команд сервера.");
    return 1;
}

CMD:clearcheatline(playerid)
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	
    ch_line_count =
	second_ch_line_count = 0;
	
    for(new i; i < 10; i++)
    {
        TextDrawSetString(ch_td[0][i], "-1");
        TextDrawSetString(ch_td[1][i], "-1");
	}
	SendClientMessage(playerid, col_white, !""scm_sucess"Читерская панель очищена.");
	
 	return 1;
}

cmd:gotopos(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	
	new Float:g_x,
		Float:g_y,
		Float:g_z,
		int_id;

	if(sscanf(params, "p<,>fffd", g_x, g_y, g_z, int_id)) return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /gotopos [x] [y] [z] [interior]");
	set_pos(playerid, g_x, g_y, g_z, 0.0, int_id, 0);
	SendClientMessage(playerid, col_white, !""scm_sucess"Вы телепортировались на указанные координаты.");
	return 1;
}
alias:gotopos("tpcoord");


cmd:id(playerid, params[])
{
	new cmd_name[MAX_PLAYER_NAME],
		pl_id = 0,
		scm_string[52];

    if(sscanf(params,"s[24]",cmd_name)) return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /id [Ник игрока]");
	SendClientMessage(playerid, col_lblue, !"Игроки онлайн:");

	if(!isNumeric(cmd_name))
	{
	    new targetid = strval(cmd_name);
		if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, col_white, !""scm_error"Совпадений не найдено.");
		format(scm_string, sizeof(scm_string), "%s (ID: %d) %s", PlayerInfo[targetid][name], targetid,(pl_afk_time[playerid] > 0)?(""c_orange_red"[AFK]"c_white""):(""));
	    SendClientMessage(playerid, -1, scm_string);
	    return 1;
	}
	foreach(new i: Player)
	{
		if(!IsPlayerConnected(i)) continue;
		if(strfind(PlayerInfo[i][name], cmd_name, true)!= -1)
		{
			if(pl_id > 5) break;
			format(scm_string, sizeof(scm_string), "%s (ID: %d) %s", PlayerInfo[i][name], i,(pl_afk_time[playerid] > 0)?(""c_orange_red"[AFK]"c_white""):(""));
			SendClientMessage(playerid, -1, scm_string);
			pl_id ++;
		}
	}
	return 1;
}

cmd:n(playerid, params[])
{
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string ), "У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 0;
	}
	if(sscanf(params, "s[108]", params[0])) return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /n [текст]");
 	check_advertise(playerid, params[0]);
 	new scm_string[128];
	format(scm_string, sizeof(scm_string ), "((%s[%d]: %s))", PlayerInfo[playerid][name], playerid, params[0]);
	send_world_message(playerid, 20.0, scm_string, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF, false);
	format(scm_string, sizeof(scm_string ), "((%s))", params[0]);
	SetPlayerChatBubble(playerid, scm_string, 0xCCCC99FF, 20, 5000);
	return 1;
}


alias:whisper("w");
cmd:whisper(playerid, params[])
{
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string ),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 0;
	}
	if(sscanf(params, "s[128]", params[0])) return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /w [текст]");
 	check_advertise(playerid, params[0]);
 	new scm_string[144];
	format(scm_string, sizeof(scm_string), "%s[%d] шепчет: %s", PlayerInfo[playerid][name], playerid, params[0]);
	send_world_message(playerid, 2.0, scm_string, 0xCCCC99FF, 0xCCCC99FF, 0xCCCC99FF, false);
	return 1;
}

cmd:s(playerid, params[])
{
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string ),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 0;
	}
	if(sscanf(params, "s[108]", params[0])) return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /s [текст]");
	check_advertise(playerid, params[0]);
 	new scm_string[128];
	format(scm_string, sizeof(scm_string ), "%s крикнул: %s!!.", PlayerInfo[playerid][name], params[0]);
	send_world_message(playerid, 50.0, scm_string, col_white, col_white, col_gray, false);
	format(scm_string, sizeof(scm_string ), "крикнул: %s!!.", params[0]);
	SetPlayerChatBubble(playerid, scm_string, col_white, 45, 5000);
	return 1;
}

cmd:do(playerid, params[])
{
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string ),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 0;
	}
	if(sscanf(params, "s[128]", params[0])) return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /do [текст]");
	do_action(playerid, params[0]);
	update_activity(playerid);
	return 1;
}
cmd:try(playerid, params[])
{
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string ),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 0;
	}
	if(sscanf(params, "s[128]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /try [текст]");
	try_action(playerid, params[0]);
	update_activity(playerid);
	return 1;
}
cmd:me(playerid, params[])
{
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string ),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 0;
	}
  	if(sscanf(params, "s[128]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /me [текст]");
	me_action(playerid, params[0]);
	update_activity(playerid);
	return 1;
}

cmd:flip(playerid)
{
    if(PlayerInfo[playerid][money]<= 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет ни одной монеты.");

    static const    coin_str0[] = " подбросил монетку, выпал",
                    coin_str1[] = "а \"решка\".", coin_str2[] = " \"орёл\".";

	new string[MAX_PLAYER_NAME +(sizeof(coin_str0)-1)+(sizeof(coin_str1)-1)+ 1];

    strcat(string, coin_str0);
    strcat(string, (random(2)) ? (coin_str1) : (coin_str2));

	me_action(playerid, string);
	update_activity(playerid);
    return 1;
}

CMD:test(playerid)
{
	if(GetPVarInt(playerid, "boot") == 1)
	{
	    for(new i; i < 27; i++)
		{
			TextDrawHideForPlayer(playerid, Trunk_TD[i]);
			if(i < 11) PlayerTextDrawHide(playerid, Trunk_PTD[playerid][i]);
		}
		CancelSelectTextDraw(playerid);
		
		SetPVarInt(playerid, "boot", 0);
	    return 1;
	}
	for(new i; i < 27; i++) TextDrawShowForPlayer(playerid, Trunk_TD[i]);
	/*
		    PlayerTextDrawSetPreviewModel(playerid, td_inventory_p[playerid][td], 1649);
		    PlayerTextDrawSetPreviewRot(playerid, td_inventory_p[playerid][td], 0.000000, 0.000000, 90.000000, 2.0);
			PlayerTextDrawFont(playerid , td_inventory_p[playerid][td], 5);
	*/
	Trunk_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 272.6660, 178.6223, "COUNT:_0.5_KG_/_10_KG"); // Count
	PlayerTextDrawLetterSize(playerid, Trunk_PTD[playerid][0], 0.1586, 0.8988);
	PlayerTextDrawTextSize(playerid, Trunk_PTD[playerid][0], 0.0000, 52.0000);
	PlayerTextDrawAlignment(playerid, Trunk_PTD[playerid][0], 2);
	PlayerTextDrawColor(playerid, Trunk_PTD[playerid][0], -1);
	PlayerTextDrawUseBox(playerid, Trunk_PTD[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, Trunk_PTD[playerid][0], 610122751);
	PlayerTextDrawBackgroundColor(playerid, Trunk_PTD[playerid][0], 610122751);
	PlayerTextDrawFont(playerid, Trunk_PTD[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, Trunk_PTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, Trunk_PTD[playerid][0], 0);

	Trunk_PTD[playerid][1] = CreatePlayerTextDraw(playerid, 239.1331, 199.0681, ""); // 1-5 Model
	PlayerTextDrawTextSize(playerid, Trunk_PTD[playerid][1], 32.0000, 34.0000);
	PlayerTextDrawAlignment(playerid, Trunk_PTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, Trunk_PTD[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, Trunk_PTD[playerid][1], 168430335);
	PlayerTextDrawFont(playerid, Trunk_PTD[playerid][1], 5);
	PlayerTextDrawSetProportional(playerid, Trunk_PTD[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, Trunk_PTD[playerid][1], 0);
	PlayerTextDrawSetSelectable(playerid, Trunk_PTD[playerid][1], true);
	PlayerTextDrawSetPreviewModel(playerid, Trunk_PTD[playerid][1], 1649);
	PlayerTextDrawSetPreviewRot(playerid, Trunk_PTD[playerid][1], 0.000000, 0.000000, 90.000000, 2.0);

	Trunk_PTD[playerid][2] = CreatePlayerTextDraw(playerid, 272.2661, 199.0681, ""); // 1-5 Model
	PlayerTextDrawTextSize(playerid, Trunk_PTD[playerid][2], 32.0000, 34.0000);
	PlayerTextDrawAlignment(playerid, Trunk_PTD[playerid][2], 1);
	PlayerTextDrawColor(playerid, Trunk_PTD[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, Trunk_PTD[playerid][2], 168430335);
	PlayerTextDrawFont(playerid, Trunk_PTD[playerid][2], 5);
	PlayerTextDrawSetProportional(playerid, Trunk_PTD[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, Trunk_PTD[playerid][2], 0);
	PlayerTextDrawSetSelectable(playerid, Trunk_PTD[playerid][2], true);
	PlayerTextDrawSetPreviewModel(playerid, Trunk_PTD[playerid][2], 1649);
	PlayerTextDrawSetPreviewRot(playerid, Trunk_PTD[playerid][2], 0.000000, 0.000000, 90.000000, 2.0);

	Trunk_PTD[playerid][3] = CreatePlayerTextDraw(playerid, 305.7664, 198.9532, ""); // 1-5 Model
	PlayerTextDrawTextSize(playerid, Trunk_PTD[playerid][3], 32.0000, 34.0000);
	PlayerTextDrawAlignment(playerid, Trunk_PTD[playerid][3], 1);
	PlayerTextDrawColor(playerid, Trunk_PTD[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, Trunk_PTD[playerid][3], 168430335);
	PlayerTextDrawFont(playerid, Trunk_PTD[playerid][3], 5);
	PlayerTextDrawSetProportional(playerid, Trunk_PTD[playerid][3], 0);
	PlayerTextDrawSetShadow(playerid, Trunk_PTD[playerid][3], 0);
	PlayerTextDrawSetSelectable(playerid, Trunk_PTD[playerid][3], true);
	PlayerTextDrawSetPreviewModel(playerid, Trunk_PTD[playerid][3], 1649);
	PlayerTextDrawSetPreviewRot(playerid, Trunk_PTD[playerid][3], 0.000000, 0.000000, 90.000000, 2.0);

	Trunk_PTD[playerid][4] = CreatePlayerTextDraw(playerid, 339.0997, 198.9532, ""); // 1-5 Model
	PlayerTextDrawTextSize(playerid, Trunk_PTD[playerid][4], 32.0000, 34.0000);
	PlayerTextDrawAlignment(playerid, Trunk_PTD[playerid][4], 1);
	PlayerTextDrawColor(playerid, Trunk_PTD[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid, Trunk_PTD[playerid][4], 168430335);
	PlayerTextDrawFont(playerid, Trunk_PTD[playerid][4], 5);
	PlayerTextDrawSetProportional(playerid, Trunk_PTD[playerid][4], 0);
	PlayerTextDrawSetShadow(playerid, Trunk_PTD[playerid][4], 0);
	PlayerTextDrawSetSelectable(playerid, Trunk_PTD[playerid][4], true);
	PlayerTextDrawSetPreviewModel(playerid, Trunk_PTD[playerid][4], 1649);
	PlayerTextDrawSetPreviewRot(playerid, Trunk_PTD[playerid][4], 0.000000, 0.000000, 90.000000, 2.0);

	Trunk_PTD[playerid][5] = CreatePlayerTextDraw(playerid, 372.2997, 198.9384, ""); // 1-5 Model
	PlayerTextDrawTextSize(playerid, Trunk_PTD[playerid][5], 32.0000, 34.0000);
	PlayerTextDrawAlignment(playerid, Trunk_PTD[playerid][5], 1);
	PlayerTextDrawColor(playerid, Trunk_PTD[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, Trunk_PTD[playerid][5], 168430335);
	PlayerTextDrawFont(playerid, Trunk_PTD[playerid][5], 5);
	PlayerTextDrawSetProportional(playerid, Trunk_PTD[playerid][5], 0);
	PlayerTextDrawSetShadow(playerid, Trunk_PTD[playerid][5], 0);
	PlayerTextDrawSetSelectable(playerid, Trunk_PTD[playerid][5], true);
	PlayerTextDrawSetPreviewModel(playerid, Trunk_PTD[playerid][5], 1649);
	PlayerTextDrawSetPreviewRot(playerid, Trunk_PTD[playerid][5], 0.000000, 0.000000, 90.000000, 2.0);

	Trunk_PTD[playerid][6] = CreatePlayerTextDraw(playerid, 239.1331, 234.9696, ""); // 6-10 Model
	PlayerTextDrawTextSize(playerid, Trunk_PTD[playerid][6], 32.0000, 34.0000);
	PlayerTextDrawAlignment(playerid, Trunk_PTD[playerid][6], 1);
	PlayerTextDrawColor(playerid, Trunk_PTD[playerid][6], -1);
	PlayerTextDrawBackgroundColor(playerid, Trunk_PTD[playerid][6], 168430335);
	PlayerTextDrawFont(playerid, Trunk_PTD[playerid][6], 5);
	PlayerTextDrawSetProportional(playerid, Trunk_PTD[playerid][6], 0);
	PlayerTextDrawSetShadow(playerid, Trunk_PTD[playerid][6], 0);
	PlayerTextDrawSetSelectable(playerid, Trunk_PTD[playerid][6], true);
	PlayerTextDrawSetPreviewModel(playerid, Trunk_PTD[playerid][6], 1649);
	PlayerTextDrawSetPreviewRot(playerid, Trunk_PTD[playerid][6], 0.000000, 0.000000, 90.000000, 2.0);

	Trunk_PTD[playerid][7] = CreatePlayerTextDraw(playerid, 272.2661, 234.9696, ""); // 6-10 Model
	PlayerTextDrawTextSize(playerid, Trunk_PTD[playerid][7], 32.0000, 34.0000);
	PlayerTextDrawAlignment(playerid, Trunk_PTD[playerid][7], 1);
	PlayerTextDrawColor(playerid, Trunk_PTD[playerid][7], -1);
	PlayerTextDrawBackgroundColor(playerid, Trunk_PTD[playerid][7], 168430335);
	PlayerTextDrawFont(playerid, Trunk_PTD[playerid][7], 5);
	PlayerTextDrawSetProportional(playerid, Trunk_PTD[playerid][7], 0);
	PlayerTextDrawSetShadow(playerid, Trunk_PTD[playerid][7], 0);
	PlayerTextDrawSetSelectable(playerid, Trunk_PTD[playerid][7], true);
	PlayerTextDrawSetPreviewModel(playerid, Trunk_PTD[playerid][7], 1649);
	PlayerTextDrawSetPreviewRot(playerid, Trunk_PTD[playerid][7], 0.000000, 0.000000, 90.000000, 2.0);

	Trunk_PTD[playerid][8] = CreatePlayerTextDraw(playerid, 305.7664, 234.8546, ""); // 6-10 Model
	PlayerTextDrawTextSize(playerid, Trunk_PTD[playerid][8], 32.0000, 34.0000);
	PlayerTextDrawAlignment(playerid, Trunk_PTD[playerid][8], 1);
	PlayerTextDrawColor(playerid, Trunk_PTD[playerid][8], -1);
	PlayerTextDrawBackgroundColor(playerid, Trunk_PTD[playerid][8], 168430335);
	PlayerTextDrawFont(playerid, Trunk_PTD[playerid][8], 5);
	PlayerTextDrawSetProportional(playerid, Trunk_PTD[playerid][8], 0);
	PlayerTextDrawSetShadow(playerid, Trunk_PTD[playerid][8], 0);
	PlayerTextDrawSetSelectable(playerid, Trunk_PTD[playerid][8], true);
	PlayerTextDrawSetPreviewModel(playerid, Trunk_PTD[playerid][8], 1649);
	PlayerTextDrawSetPreviewRot(playerid, Trunk_PTD[playerid][8], 0.000000, 0.000000, 90.000000, 2.0);

	Trunk_PTD[playerid][9] = CreatePlayerTextDraw(playerid, 339.0997, 234.8546, ""); // 6-10 Model
	PlayerTextDrawTextSize(playerid, Trunk_PTD[playerid][9], 32.0000, 34.0000);
	PlayerTextDrawAlignment(playerid, Trunk_PTD[playerid][9], 1);
	PlayerTextDrawColor(playerid, Trunk_PTD[playerid][9], -1);
	PlayerTextDrawBackgroundColor(playerid, Trunk_PTD[playerid][9], 168430335);
	PlayerTextDrawFont(playerid, Trunk_PTD[playerid][9], 5);
	PlayerTextDrawSetProportional(playerid, Trunk_PTD[playerid][9], 0);
	PlayerTextDrawSetShadow(playerid, Trunk_PTD[playerid][9], 0);
	PlayerTextDrawSetSelectable(playerid, Trunk_PTD[playerid][9], true);
	PlayerTextDrawSetPreviewModel(playerid, Trunk_PTD[playerid][9], 1649);
	PlayerTextDrawSetPreviewRot(playerid, Trunk_PTD[playerid][9], 0.000000, 0.000000, 90.000000, 2.0);

	Trunk_PTD[playerid][10] = CreatePlayerTextDraw(playerid, 372.2997, 234.8399, ""); // 6-10 Model
	PlayerTextDrawTextSize(playerid, Trunk_PTD[playerid][10], 32.0000, 34.0000);
	PlayerTextDrawAlignment(playerid, Trunk_PTD[playerid][10], 1);
	PlayerTextDrawColor(playerid, Trunk_PTD[playerid][10], -1);
	PlayerTextDrawBackgroundColor(playerid, Trunk_PTD[playerid][10], 168430335);
	PlayerTextDrawFont(playerid, Trunk_PTD[playerid][10], 5);
	PlayerTextDrawSetProportional(playerid, Trunk_PTD[playerid][10], 0);
	PlayerTextDrawSetShadow(playerid, Trunk_PTD[playerid][10], 0);
	PlayerTextDrawSetSelectable(playerid, Trunk_PTD[playerid][10], true);
	PlayerTextDrawSetPreviewModel(playerid, Trunk_PTD[playerid][10], 1649);
	PlayerTextDrawSetPreviewRot(playerid, Trunk_PTD[playerid][10], 0.000000, 0.000000, 90.000000, 2.0);
	
	for(new i; i < 11; i ++)PlayerTextDrawShow(playerid, Trunk_PTD[playerid][i]);
	
	SelectTextDraw(playerid, 0xB0C4DEFF);
	
	SetPVarInt(playerid, "boot", 1);
	return 1;
}

cmd:ame(playerid, params[])
{
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string ),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 0;
	}
  	if(sscanf(params, "s[108]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /ame [текст]");
	new scm_string[128];
	format(scm_string, sizeof(scm_string ),">> %s", params[0]);
	SendClientMessage(playerid, col_light_purple, scm_string);
	SetPlayerChatBubble(playerid, scm_string, col_light_purple, 13.0, 7000);
	update_activity(playerid);
	return 1;
}
cmd:ado(playerid, params[])
{
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string ),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 0;
	}
  	if(sscanf(params, "s[108]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /ado [текст]");
	new scm_string[128];
	format(scm_string, sizeof(scm_string ),">> %s", params[0]);
	SendClientMessage(playerid, col_light_purple, scm_string);
	SetPlayerChatBubble(playerid, scm_string, col_light_purple, 13.0, 7000);
	return 1;
}
cmd:todo(playerid, params[])
{
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string ),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 0;
	}
	new text[64], pldo[64];
	if(sscanf(params, "p<*>s[64]s[64]", text, pldo)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /todo [речь в чат*действие]");
	new scm_string[128];
	format(scm_string, sizeof(scm_string ), "{C2A2DA}-"c_white"%s {C2A2DA}-сказал %s, {C2A2DA}%s", text, PlayerInfo[playerid][name], pldo);
	send_world_message(playerid, 50.0, scm_string, col_white, col_white, col_gray, true);
	SetPlayerChatBubble(playerid, scm_string, col_white, 50, 5000);
	return 1;
}

cmd:paygang(playerid, params[])
{
	if(!gang_player(playerid)|| ! PlayerInfo[playerid][leader]) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Используйте: /paygang [сумма]");
	if(params[0] < 1 || params[0] > 1000000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Сумма не может быть меньше 1$ или больше 1.000.000$");

	new num = 0;
	foreach(new i : logged_players)
	{
		if(PlayerInfo[i][member] != PlayerInfo[playerid][member] || playerid == i) continue;
		num++;
	}
	new str[83];
	format(str, sizeof(str), ""c_white"Вы действительно хотите выдать %d$ игрокам, состоящим в Вашей банде?\n\n\
	"c_grey"* Сумма может измениться при изменении онлайна организации.", params[0]* num);
	show_dialog(playerid, d_paygang, DIALOG_STYLE_MSGBOX, ""c_server"Выдача заработной платы", str, "Да", "Нет");
	SetPVarInt(playerid, "gangpay_sum", params[0]);
	return 1;
}

cmd:pay(playerid, params[])
{
	if(duel_opponent[playerid] != INVALID_PLAYER_ID) return 1;

 	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /pay [ид] [сумма]");
	if(!IsPlayerConnected(params[0])  || params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");


	if(PlayerInfo[params[0]][level] < 2 && params[1] > 500) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете передать деньги игроку 1-го уровня больше 500$");
	if(params[1] < 1 || params[1] > 10000) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Можно передавать от 1 до 10000$");
	if(params[1] > PlayerInfo[playerid][money]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Недостаточно денег для передачи.");

	if(GetString(p_t_info[params[0]][p_ip], p_t_info[playerid][p_ip]))
	{
		new scm_string[128];
		format(scm_string, sizeof(scm_string), ""c_orange_red"* A.WARNING: "c_grey"%s[%d] передаёт средства %s[%d] | same ip", PlayerInfo[playerid][name], playerid, PlayerInfo[params[0]][name], params[0]);
		foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);

		SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Невозможно передать средства данному игроку.");
		return 1;
	}


	give_money(playerid, -params[1]);
	give_money(params[0], params[1]);

	new scm_string[128];
	format(scm_string, sizeof(scm_string), ""c_green"* "c_white"%s передал вам "c_green"%d$"c_white".", PlayerInfo[playerid][name], params[1]);

	SendClientMessage(params[0], col_white, scm_string);

	format(scm_string, sizeof(scm_string), ""c_green"* "c_white"Вы передали игроку %s "c_green"%d$"c_white".", PlayerInfo[params[0]][name], params[1]);
	SendClientMessage(playerid, col_white, scm_string);

	format(scm_string, sizeof(scm_string), "достал деньги и передал их %s", PlayerInfo[params[0]][name]);
	me_action(playerid, scm_string);

	insert_money_log(params[0], playerid, params[1], "команда /pay");
	return 1;
}



cmd:createarea(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return SendClientMessage(playerid, col_gray,"Данная команда не существует.");
	GetPlayerFacingAngle(playerid, p_t_info[playerid][p_pos][3]);
	for(new i = 0; i < 4; i ++)
	{
		new pvar_string[28];
		format(pvar_string, sizeof(pvar_string ), "area_pos_%d", i);
		SetPVarFloat(playerid, pvar_string, p_t_info[playerid][p_pos][i]);
	}
	SendClientMessage(playerid, col_lblue, "Переходите к следующему этапу создания ((/endarea))");
	return 1;
}



cmd:endarea(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 6) return SendClientMessage(playerid, col_gray,"Данная команда не существует.");
	if(area_amount >= sizeof(area_info)) return SendClientMessage(playerid, col_white, "Ошибка создания телепорта. Выход за пределы area_info.");
	if(sscanf(params, "dddds[32]", params[0], params[1], params[2], params[3], params[4])) return SendClientMessage(playerid, col_gray,"Используйте: /endarea [virtual_world] [interior] [to_vw] [to_int] [название]");
	GetPlayerFacingAngle(playerid, p_t_info[playerid][p_pos][3]);
	area_amount ++;
	area_info[area_amount -1][a_id] = area_amount + 1;
	for(new i = 0; i < 4; i ++)
	{
		new pvar_string[28];
		format(pvar_string, sizeof(pvar_string ), "area_pos_%d", i);
		area_info[area_amount -1][a_pos][i] = GetPVarFloat(playerid, pvar_string);
		DeletePVar(playerid, pvar_string);
		area_info[area_amount -1][a_to_pos][i] = p_t_info[playerid][p_pos][i];
	}

	area_info[area_amount -1][a_pick] = 1318;
	area_info[area_amount -1][a_virt_world][0] = params[0];
	area_info[area_amount -1][a_virt_world][1] = params[2];

	area_info[area_amount -1][a_interior][0] = params[1];
	area_info[area_amount -1][a_interior][1] = params[3];







	area_info[area_amount -1][a_area][0] = CreateDynamicPickup(1318, 23, area_info[area_amount -1][a_pos][0 ], area_info[area_amount -1][a_pos][1 ], area_info[area_amount -1][a_pos][2 ], area_info[area_amount -1][a_virt_world][0]);
	area_info[area_amount -1][a_area][1] = CreateDynamicPickup(1318, 23, area_info[area_amount -1][a_to_pos][0 ], area_info[area_amount -1][a_to_pos][1 ], area_info[area_amount -1][a_to_pos][2 ], area_info[area_amount -1][a_virt_world][1]);

	pick_info[area_info[area_amount -1][a_area][0]][pick_type] = pick_type_teleportation;
	pick_info[area_info[area_amount -1][a_area][1]][pick_type] = pick_type_teleportation;


	new insert_string[512];
	format(insert_string, sizeof insert_string, "INSERT INTO `teleport_areas`(`area_x`, `area_y`, `area_z`, `area_c`, `area_to_x`, `area_to_y`, `area_to_z`, `area_to_c`, `area_virtual_world`, `area_to_virtual_world`, `area_interior`, `area_to_interior`, `area_name`)VALUES('%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%d', '%d', '%d', '%d', '%s')",
	area_info[area_amount -1][a_pos][0 ], area_info[area_amount -1][a_pos][1 ], area_info[area_amount -1][a_pos][2 ], area_info[area_amount -1][a_pos][3 ],
	area_info[area_amount -1][a_to_pos][0 ], area_info[area_amount -1][a_to_pos][1 ], area_info[area_amount -1][a_to_pos][2 ], area_info[area_amount -1][a_to_pos][3 ],
	params[0 ], params[2 ], params[1 ], params[3], params[4]);
	mysql_tquery(sql_connection, insert_string, "", "");

	SendClientMessage(playerid, col_lblue, "Динамический вход успешно создан.");
	return 1;
}






cmd:gotohint(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /gotohint [инт]");
	new hint = params[0] -1;
	set_pos(playerid, house_int[hint][hint_position][0], house_int[hint][hint_position][1], house_int[hint][hint_position][2], house_int[hint][hint_position][3], house_int[hint][hint_int], 3223);
	return 1;
}


cmd:createhouse(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	if(sscanf(params, "ddd", params[0], params[1], params[2])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /createhouse [инт][цена][гараж]");
	if(params[1] < 1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Цена дома не может быть меньше 1$.");
	GetPlayerPos(playerid, h_info[house_count][h_pos][0], h_info[house_count][h_pos][1], h_info[house_count][h_pos][2]);
	GetPlayerFacingAngle(playerid, h_info[house_count][h_pos][3]);

	h_info[house_count][h_id] = house_count + 1;
	strcat(h_info[house_count][h_owner_name], "Собственность штата");
	h_info[house_count][h_owner] = -1;
	h_info[house_count][h_price] = params[1];
	h_info[house_count][h_garage] = params[2];
	h_info[house_count][h_int] = params[0];
	h_info[house_count][h_vw] = p_t_info[playerid][p_data][1];

	h_info[house_count][h_pickup] = CreateDynamicPickup(1273, 23, h_info[house_count][h_pos][0], h_info[house_count][h_pos][1], h_info[house_count][h_pos][2], h_info[house_count][h_vw], -1);

	if(!h_info[house_count][h_vw]) h_info[house_count][h_icon_id] = CreateDynamicMapIcon(h_info[house_count][h_pos][0], h_info[house_count][h_pos][1], h_info[house_count][h_pos][2], 31, 0, 0, 0, -1, 300.0);

	new hint = h_info[house_count][h_int] -1;

	h_info[house_count][h_exit_pickup] = CreateDynamicPickup(1318, 23, house_int[hint][hint_position][0], house_int[hint][hint_position][1], house_int[hint][hint_position][2], h_info[house_count][h_id], house_int[hint][hint_int]);

	pick_info [h_info[house_count][h_pickup]][pick_type] = pick_type_hentrance;
	pick_info[h_info[house_count][h_exit_pickup]][pick_type] = pick_type_hexit;



	new query_string[246];

	format(query_string, 68, "Вы успешно создали недвижимость | Дом №%d.", h_info[house_count][h_id]);
	SendClientMessage(playerid, col_white, query_string);

	mysql_format(sql_connection, query_string, sizeof(query_string ),"INSERT INTO `houses` (`h_pos_x`,`h_pos_y`,`h_pos_z`,`h_pos_c`,`h_price`,`h_vw`,`h_int`,`h_garage`) VALUES ('%f','%f','%f','%f','%d','%d','%d','%d')",
	h_info[house_count][h_pos][0], h_info[house_count][h_pos][1], h_info[house_count][h_pos][2], h_info[house_count][h_pos][3],
	params[1], h_info[house_count][h_vw], params[0], params[2]);
	mysql_tquery(sql_connection, query_string, "", "");

	house_count ++;
	return 1;
}

cmd:createisland(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	extract params -> new island_type, island_price; else return SendClientMessage(playerid, col_gray, !"Используйте: "c_white"/createisland [тип острова] [стоимость]");
	if(island_price < 1) return SendClientMessage(playerid, col_white, !""scm_error"Стоимость острова не может быть меньше 1$.");

	GetPlayerPos(playerid, fi_info[island_count][fi_pos][0], fi_info[island_count][fi_pos][1], fi_info[island_count][fi_pos][2]);
	GetPlayerFacingAngle(playerid, fi_info[island_count][fi_pos][3]);

	fi_info[island_count][fi_id] = island_count + 1;
	strcat(fi_info[island_count][fi_owner_name], "Собственность штата");
	fi_info[island_count][fi_owner] = -1;
	fi_info[island_count][fi_price] = island_price;
	fi_info[island_count][fi_int] = island_type;
	fi_info[island_count][fi_vw] = p_t_info[playerid][p_data][1];

	fi_info[island_count][fi_pickup] = CreateDynamicPickup(19132, 23, fi_info[island_count][fi_pos][0], fi_info[island_count][fi_pos][1], fi_info[island_count][fi_pos][2], fi_info[island_count][fi_vw], -1);

	new fint = fi_info[island_count][fi_int] -1;
	fi_info[island_count][fi_exit_pickup] = CreateDynamicPickup(19132, 23, family_int[fint][fint_position][0], family_int[fint][fint_position][1], family_int[fint][fint_position][2], fi_info[island_count][fi_id], family_int[fint][fint_int]);

	pick_info[fi_info[island_count][fi_pickup]][pick_type] = pick_type_fientrance;
	pick_info[fi_info[island_count][fi_exit_pickup]][pick_type] = pick_type_fiexit;

	new text_string[120];
	format(text_string, sizeof(text_string), "Семейный остров №%d\nВладелец: "c_orange_red"отсутствует", fi_info[island_count][fi_id]);
	fi_info[island_count][fi_text] = CreateDynamic3DTextLabel(text_string, col_white, fi_info[island_count][fi_pos][0], fi_info[island_count][fi_pos][1], fi_info[island_count][fi_pos][2], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);

	format(text_string, sizeof(text_string), ""scm_info"Вы успешно создали семейный остров | "c_gold"Семейный остров №%d", fi_info[island_count][fi_id]);
	SendClientMessage(playerid, col_white, text_string);

	new query_string[215];
	mysql_format(sql_connection, query_string, sizeof(query_string), "INSERT INTO `family_island` (`fi_pos_x`,`fi_pos_y`,`fi_pos_z`,`fi_pos_a`,`fi_price`,`fi_vw`,`fi_int`) VALUES ('%f','%f','%f','%f','%d','%d','%d')", fi_info[island_count][fi_pos][0], fi_info[island_count][fi_pos][1], fi_info[island_count][fi_pos][2], fi_info[island_count][fi_pos][3], island_price, fi_info[island_count][fi_vw], island_type);
	mysql_query(sql_connection, query_string);

	island_count++;
	return 1;
}

cmd:createcellar(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /createcellar [цена]");
	if(params[1] < 1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Цена подвала не может быть меньше 1$.");
	GetPlayerPos(playerid, cellar_info[cellar_count][cl_pos][0], cellar_info[cellar_count][cl_pos][1], cellar_info[cellar_count][cl_pos][2]);
	GetPlayerFacingAngle(playerid, cellar_info[cellar_count][cl_pos][3]);

	cellar_info[cellar_count][cl_id] = cellar_count + 1;
	strcat(cellar_info[cellar_count][cl_owner_name], "Собственность штата");
	cellar_info[cellar_count][cl_owner] = -1;
	cellar_info[cellar_count][cl_price] = params[0];

	cellar_info[cellar_count][cl_pickup] = CreateDynamicPickup(1318, 23, cellar_info[cellar_count][cl_pos][0], cellar_info[cellar_count][cl_pos][1], cellar_info[cellar_count][cl_pos][2], 0, -1);

	pick_info [cellar_info[cellar_count][cl_pickup]][pick_type] = pick_type_clentrance;

	new query_string[246];
	format(query_string, 68, "Вы успешно создали подвал | Подвал №%d.", cellar_info[cellar_count][cl_id]);
	SendClientMessage(playerid, col_white, query_string);

	mysql_format(sql_connection, query_string, sizeof(query_string ),"INSERT INTO `cellars` (`cl_pos_x`,`cl_pos_y`,`cl_pos_z`,`cl_pos_c`,`cl_price`) VALUES ('%f','%f','%f','%f','%d')",
	cellar_info[cellar_count][cl_pos][0], cellar_info[cellar_count][cl_pos][1], cellar_info[cellar_count][cl_pos][2], cellar_info[cellar_count][cl_pos][3],
	params[0]);
	mysql_tquery(sql_connection, query_string, "", "");

	cellar_count ++;
	return 1;
}
cmd:hgarage(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /hgarage [ид дома] [тип гаража]");

	if(params[0] < 1 || params[0] > house_count) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Неверный ИД дома.");
	if(GetPlayerState(playerid)!= 2) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нужно находиться в транспорте.");

	new veh_id = GetPlayerVehicleID(playerid);

	GetVehiclePos(veh_id, h_info[params[0] -1][h_v_pos][0], h_info[params[0] -1][h_v_pos][1], h_info[params[0] -1][h_v_pos][2]);
	GetVehicleZAngle(veh_id, h_info[params[0] -1][h_v_pos][3]);

	h_info[params[0] -1][h_garage] = params[1];

	new scm_string[168];
	format(scm_string, 70, "Вы установили новые координаты гаража для %d дома.", params[0]);
	SendClientMessage(playerid, col_white, scm_string);

	format(scm_string, 168, "UPDATE `houses` SET `h_v_pos_x` = '%.2f', `h_v_pos_y` = '%.2f', `h_v_pos_z` = '%.2f',`h_v_pos_c` = '%.2f',`h_garage` = '%d' WHERE `h_id` = '%d'",
	h_info[params[0] -1][h_v_pos][0], h_info[params[0] -1][h_v_pos][1], h_info[params[0] -1][h_v_pos][2],
	h_info[params[0] -1][h_v_pos][3], params[1], params[0]);
	mysql_tquery(sql_connection, scm_string);

	return 1;
}
/* Islands */

cmd:island(playerid)
{
	if(PlayerInfo[playerid][island] == -1) return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет семейного острова.");
	return show_dialog(playerid, d_island, DIALOG_STYLE_LIST, !""scm_dialog"Семейный остров", !""c_server"1 | "c_white"Информация об острове\n"c_server"2 | "c_white"Улучшения", !"Выбрать", !"Закрыть");
}

cmd:sellisland(playerid)
{
	if(PlayerInfo[playerid][island] == -1) return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет семейного острова.");

	new dialog_string[110];
	format(dialog_string, sizeof(dialog_string), ""c_white"Вы действительно хотите продать семейный остров?\nСтоимость: "c_green"%d$", (fi_info[PlayerInfo[playerid][island] -1][fi_price] / 100) * 50);
	return show_dialog(playerid, d_sellisland, DIALOG_STYLE_MSGBOX, !""scm_dialog"Семейный остров", dialog_string, !"Далее", !"Закрыть");
}

cmd:iradio(playerid)
{
	if(PlayerInfo[playerid][island] == -1) return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет семейного острова.");

	new fi = PlayerInfo[playerid][island] -1;
	if(fi_info[fi][fi_improve][fi_improve_audio]) return SendClientMessage(playerid, col_white, !""scm_error"В доме не установлено улучшение \"Акустическая система\".");
	if(!IsPlayerInRangeOfPoint(playerid, 30, family_int[fi_info[fi][fi_int] -1][fint_position][0], family_int[fi_info[fi][fi_int] -1][fint_position][1], family_int[fi_info[fi][fi_int] -1][fint_position][2]) && GetPlayerVirtualWorld(playerid) != fi_info[fi][fi_id]) return SendClientMessage(playerid, col_white, !""scm_error"Вы должны находиться в доме.");

	if(fi_info[fi][fi_radio_status] == 0)
		show_dialog(playerid, d_island_radio_url, DIALOG_STYLE_INPUT, !""scm_dialog"Акустическая система", !""c_white"Введите URL ссылку на поток:", !"Далее", !"Закрыть");
	else
	{
		fi_info[fi][fi_radio_status] = 0;

		new query_string[98];
		format(query_string, sizeof(query_string), "UPDATE `family_island` SET `fi_radio_status`='%d' WHERE `fi_id`='%d' LIMIT 1", fi_info[fi][fi_radio_status], PlayerInfo[playerid][island]);
		mysql_query(sql_connection, query_string);

		foreach(new i: streamed_players[playerid]) StopAudioStreamForPlayer(i);
		StopAudioStreamForPlayer(playerid);

		SendClientMessage(playerid, col_white, !""scm_info"Акустическая система успешно выключена.");
	}
	return 1;
}

cmd:sellhouse(playerid, params[])
{
	if(PlayerInfo[playerid][house] == -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас в собственности нет недвижимости.");
	new dialog_string[108];
	format(dialog_string, sizeof(dialog_string),""c_white"Вы действительно хотите продать недвижимость государству?\n\t\t\tЦена продажи: "c_server"%d$", h_info[PlayerInfo[playerid][house] -1][h_price]/ 2);
	show_dialog(playerid, d_sellhouse, DIALOG_STYLE_MSGBOX, ""c_server"Продажа недвижимости", dialog_string, "Продать", "Закрыть");
	return 1;
}

/*cmd:home(playerid)
{
	if(PlayerInfo[playerid][house] == -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас в собственности нет недвижимости.");
	new s_house_id = PlayerInfo[playerid][house] -1;
	SetPlayerCheckpoint(playerid, h_info[s_house_id][h_pos][0], h_info[s_house_id][h_pos][1], h_info[s_house_id][h_pos][2], 4.0);
	SendClientMessage(playerid, col_white, ""c_green"* "c_white"Ваш дом обозначен на карте красной меткой.");
	SetPVarInt(playerid,"checkpoint_status", 1);
	return 1;
}*/

cmd:changehouse(playerid, params[])
{
	if(PlayerInfo[playerid][house] == -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас в собственности нет недвижимости.");
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /changehouse [ид] [цена]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[1] < 1 || params[1] > 25000000) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Цена не может быть меньше 1$ и больше 25.000.000$.");
	if(!IsPlayerInRangeOfPoint(params[0], 5, p_t_info[playerid][p_pos][0],
													p_t_info[playerid][p_pos][1],
													p_t_info[playerid][p_pos][2])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(params[0] == playerid) return 	SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете продать дом самому себе.");

	SetPVarInt(playerid, "h_sell_id", params[0]);
	SetPVarInt(params[0], "h_seller_id", playerid);
	SetPVarInt(params[0], "h_seller_price", params[1]);

	new dialog_string[90 + MAX_PLAYER_NAME + 32 + 1 + 6];
	format(dialog_string, sizeof(dialog_string ), ""c_server"%s "c_white"предлагает Вам приобрести дом номер "c_server"%d"c_white" за "c_server"%d$", PlayerInfo[playerid][name], PlayerInfo[playerid][house], params[1]);
	show_dialog(params[0], d_h_sell_accept, DIALOG_STYLE_MSGBOX, ""c_server"Покупка недвижимости", dialog_string, "Купить", "Отмена");

	format(dialog_string, 118, ""c_green"* "c_white"Вы предложили "c_green"%s"c_white" приобрести Ваш дом за %d$",
	PlayerInfo[params[0]][name], params[1]);
	SendClientMessage(playerid, col_white, dialog_string);


	return 1;
}

cmd:intlist(playerid)
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Интерьеры бизнесов", ""c_white"\
	1. 24/7\n\
	2. Аммуниция\n\
	3. Авторынок\n\
	4. Cluckin Bell\n\
	5. Well Stacked Pizza\n\
	6. Burger Shot\n\
	7. Магазин одежды\n\
	8. Кафе\n\
	9. Альхамбра\n\
	10. Интерьер бара\n\
	11. Стрип\n\
	12. Джиззи\n\
	13. Аптека\n\
	14. Магазин электроники", "Закрыть", "");
	return 1;
}

cmd:createbusiness(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	if(sscanf(params, "ddds[32]", params[0], params[1], params[2], params[3])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /createbusiness [тип][цена][инт][название]" ),
																						SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Магазин -0 тип, заправка -1 тип, магазин оружия -2 тип, тюнинг -3 тип, магазин одежды -4 тип."),
																						SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Авторынок -5 тип, закусочная -6 тип, клуб -7 тип, бар -8 тип, аптека -9 тип, магазин электроники -10 тип | интерьеры -/intlist");

	GetPlayerPos(playerid, b_info[b_count][b_position][0], b_info[b_count][b_position][1], b_info[b_count][b_position][2]);
	GetPlayerFacingAngle(playerid, b_info[b_count][b_position][3]);

	b_info[b_count][b_id] = b_count + 1;
	strcat(b_info[b_count][b_owner_name], "собственность штата");
	b_info[b_count][b_owner_inc] = -1;
	b_info[b_count][b_price] = params[1];
	b_info[b_count][b_type] = params[0];
	b_info[b_count][b_maxproduct] = 15000;
	format(b_info[b_count][b_name], 32, "%s", params[3]);

	new bis_int = params[2] -1;


	if(b_info[b_count][b_type] == bizz_type_shop || b_info[b_count][b_type] == bizz_type_pharm || b_info[b_count][b_type] == bizz_type_electronic || b_info[b_count][b_type] == bizz_type_clothes || b_info[b_count][b_type] == bizz_type_carshop || b_info[b_count][b_type] == bizz_type_cafe || b_info[b_count][b_type] == bizz_type_club || b_info[b_count][b_type] == bizz_type_bar)
	{
		b_info[b_count][b_pickup] = CreateDynamicPickup(1318, 23, b_info[b_count][b_position][0], b_info[b_count][b_position][1], b_info[b_count][b_position][2], 0, 0);
		pick_info[b_info[b_count][b_pickup]][pick_type] = pick_type_bentrance;


		new pickup_biz = CreateDynamicPickup(1318, 23, b_interior[bis_int][i_position][0], b_interior[bis_int][i_position][1], b_interior[bis_int][i_position][2], b_info[b_count][b_id] + 1000, b_interior[bis_int][i_interior]);
		pick_info[pickup_biz][pick_type] = pick_type_bexit;


		new label_string[228];
		format(label_string, sizeof(label_string ), ""c_server"%s\n"c_white"Цена: %d$\nКонтроль: отсутствует\nБизнес продаётся", b_types[b_info[b_count][b_type]], b_info[b_count][b_price]);
		b_info[b_count][b_label] = CreateDynamic3DTextLabel(label_string, -1,  b_info[b_count][b_position][0], b_info[b_count][b_position][1], b_info[b_count][b_position][2] + 0.7, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	}
	else if(b_info[b_count][b_type] == bizz_type_ammo)
	{
		b_info[b_count][b_pickup] = CreateDynamicPickup(1318, 23, b_info[b_count][b_position][0], b_info[b_count][b_position][1], b_info[b_count][b_position][2], 0, 0);
		pick_info[b_info[b_count][b_pickup]][pick_type] = pick_type_bentrance;


		new pickup_biz = CreateDynamicPickup(1318, 23, b_interior[bis_int][i_position][0], b_interior[bis_int][i_position][1], b_interior[bis_int][i_position][2], b_info[b_count][b_id] + 1000, b_interior[bis_int][i_interior]);
		pick_info[pickup_biz][pick_type] = pick_type_bexit;

		new actorid = CreateActor(179, 296.4053, -40.2153, 1001.5156, 1.6147);
		SetActorVirtualWorld(actorid, b_info[b_count][b_id] + 1000);

		new label_string[228];
		format(label_string, sizeof(label_string ), ""c_server"%s\n"c_white"Цена: %d$\nСемья: отсутствует\nБизнес продаётся", b_types[b_info[b_count][b_type]], b_info[b_count][b_price]);
		b_info[b_count][b_label] = CreateDynamic3DTextLabel(label_string, -1,  b_info[b_count][b_position][0], b_info[b_count][b_position][1], b_info[b_count][b_position][2] + 0.7, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);

	}
	else if(b_info[b_count][b_type] == bizz_type_gas)
	{
		new label_string[228];
		format(label_string, sizeof(label_string ), ""c_server"%s\n"c_grey"Стоимость: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Бизнес продаётся (/buygas)", b_types[b_info[b_count][b_type]], mafia_owner_name[b_info[b_count][b_mafia] -1], b_info[b_count][b_price]);
		b_info[b_count][b_label] = CreateDynamic3DTextLabel(label_string, -1,  b_info[b_count][b_position][0], b_info[b_count][b_position][1], b_info[b_count][b_position][2] + 0.7, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	}
	else if(b_info[b_count][b_type] == bizz_type_tune)
	{
		new label_string[228];
		format(label_string, sizeof(label_string ), ""c_server"%s\n"c_grey"Стоимость: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Автостанция продается (/buytune)", b_types[b_info[b_count][b_type]], mafia_owner_name[b_info[b_count][b_mafia] -1], b_info[b_count][b_price]);
		b_info[b_count][b_label] = CreateDynamic3DTextLabel(label_string, -1,  b_info[b_count][b_position][0], b_info[b_count][b_position][1], b_info[b_count][b_position][2] + 0.7, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
	}

	if(bis_int >= 0)
	{
 		CreateDynamicMapIcon(b_info[b_count][b_position][0], b_info[b_count][b_position][1], b_info[b_count][b_position][2], b_interior[bis_int][i_map_icon], 0, 0, 0, -1, 300.0);
	}
	else
	{
		switch(b_info[b_count][b_type])
		{
			case bizz_type_tune:CreateDynamicMapIcon(b_info[b_count][b_position][0], b_info[b_count][b_position][1], b_info[b_count][b_position][2], 27, 0, 0, 0, -1, 300.0);
			case bizz_type_gas:CreateDynamicMapIcon(b_info[b_count][b_position][0], b_info[b_count][b_position][1], b_info[b_count][b_position][2], 47, 0, 0, 0, -1, 300.0);
		}
	}

	new query_string[236];
	mysql_format(sql_connection, query_string, sizeof(query_string ),"INSERT INTO `businesses` (`b_pos_x`,`b_pos_y`,`b_pos_z`,`b_pos_c`,`b_price`,`b_type`,`b_int`,`b_name`) VALUES ('%f','%f','%f','%f','%d','%d','%d','%e')",
	b_info[b_count][b_position][0], b_info[b_count][b_position][1], b_info[b_count][b_position][2], b_info[b_count][b_position][3],
	params[1], b_info[b_count][b_type], bis_int + 1, b_info[b_count][b_name]);
	mysql_tquery(sql_connection, query_string, "", "");

	b_count ++;
	return 1;
}

cmd:buygas(playerid, params[])
{
	if(PlayerInfo[playerid][business] != -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас уже есть бизнес.");
	new bool:_gas = false;
	for(new b = 0; b < b_count; b ++)
	{
		if(b_info[b][b_type] != bizz_type_gas) continue;
		if(b_info[b][b_owner_inc] != -1) continue;
		if(!IsPlayerInRangeOfPoint(playerid, 5, b_info[b][b_position][0], b_info[b][b_position][1], b_info[b][b_position][2])) continue;
		_gas = true;
		SetPVarInt(playerid, "p_biz_id", b + 1);
		new dialog_string[120];
		format(dialog_string, sizeof(dialog_string ),
		""c_white"Название: %s\n\
		Контроль: мафия\n\
		Цена: %d$", b_info[b][b_name], b_info[b][b_price]);
		show_dialog(playerid, d_b_buy, DIALOG_STYLE_MSGBOX, ""c_server"Информация о АЗС", dialog_string, "Купить", "Закрыть");
	}
	if(_gas == false) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не находитесь возле заправочной станции, которую можно купить.");
	return 1;
}


cmd:buytune(playerid, params[])
{
	if(PlayerInfo[playerid][business] != -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас уже есть бизнес.");
	new bool:_gas = false;
	for(new b = 0; b < b_count; b ++)
	{
		if(b_info[b][b_type] != bizz_type_tune) continue;
		if(b_info[b][b_owner_inc] != -1) continue;
		if(!IsPlayerInRangeOfPoint(playerid, 5, b_info[b][b_position][0], b_info[b][b_position][1], b_info[b][b_position][2])) continue;
		_gas = true;
		SetPVarInt(playerid, "p_biz_id", b + 1);
		new dialog_string[120];
		format(dialog_string, sizeof(dialog_string ),
		""c_white"Название: %s\n\
		Контроль: мафия\n\
		Цена: %d$", b_info[b][b_name], b_info[b][b_price]);
		show_dialog(playerid, d_b_buy, DIALOG_STYLE_MSGBOX, ""c_server"Информация о автомастерской", dialog_string, "Купить", "Закрыть");
	}
	if(_gas == false) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не находитесь возле заправочной станции, которую можно купить.");
	return 1;
}

cmd:bpanel(playerid)
{
	if(PlayerInfo[playerid][business] == -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет бизнеса.");
	show_bpanel(playerid);
	return 1;
}

cmd:home(playerid)
{
	if(PlayerInfo[playerid][house] == -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет дома.");
	new h = PlayerInfo[playerid][house] -1;
	if(!IsPlayerInRangeOfPoint(playerid, 30, house_int[h_info[h][h_int] -1][hint_position][0], house_int[h_info[h][h_int] -1][hint_position][1], house_int[h_info[h][h_int] -1][hint_position][2]) && GetPlayerVirtualWorld(playerid)!= h_info[h][h_id]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны находиться в своём жилье.");
	show_hmenu(playerid);
	return 1;
}

cmd:hradio(playerid)
{
	if(PlayerInfo[playerid][house] == -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет дома.");
	new h = PlayerInfo[playerid][house] -1;
	if(!IsPlayerInRangeOfPoint(playerid, 30, house_int[h_info[h][h_int] -1][hint_position][0], house_int[h_info[h][h_int] -1][hint_position][1], house_int[h_info[h][h_int] -1][hint_position][2]) && GetPlayerVirtualWorld(playerid)!= h_info[h][h_id]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны находиться в своём жилье.");

	if(h_info[h][h_radio_status] == 0)show_dialog(playerid, d_h_radio, DIALOG_STYLE_LIST, ""c_server"Аудио система", ""c_server"1."c_green" Включить аудио", "Выбрать", "Закрыть");
	else show_dialog(playerid, d_h_radio, DIALOG_STYLE_LIST, ""c_server"Аудио система", ""c_server"1."c_orange_red" Выключить аудио", "Выбрать", "Закрыть");

	return 1;
}


cmd:hlock(playerid)
{
	if(PlayerInfo[playerid][house] == -1 && PlayerInfo[playerid][rent_house] == -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет дома и Вы не арендуете жильё.");
	new h = PlayerInfo[playerid][house] -1;
	if(h == -1)h = PlayerInfo[playerid][rent_house] -1;


	if(!IsPlayerInRangeOfPoint(playerid, 4.00, h_info[h][h_pos][0], h_info[h][h_pos][1], h_info[h][h_pos][2]) &&
	(! IsPlayerInRangeOfPoint(playerid, 30, house_int[h_info[h][h_int] -1][hint_position][0], house_int[h_info[h][h_int] -1][hint_position][1], house_int[h_info[h][h_int] -1][hint_position][2]) && GetPlayerVirtualWorld(playerid)!= h_info[h][h_id])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы слишком далеко от своего жилья.");

	if(h_info[h][h_closed] == 0)
	{
		h_info[h][h_closed] = 1;
		GameTextForPlayer(playerid,"~r~closed", 2000, 3);
	}
	else
	{
		h_info[h][h_closed] = 0;
		GameTextForPlayer(playerid, "~g~opened", 2000, 3);
	}
	new query_string[78];
	format(query_string, sizeof(query_string), "UPDATE `houses` SET `h_closed` = '%d' WHERE `h_id` = '%d'", h_info[h][h_closed], h + 1);
	mysql_tquery(sql_connection, query_string);

	return 1;
}




stock show_hmenu(playerid)
{
	new house_id = PlayerInfo[playerid][house] -1;
	if(h_info[house_id][h_closed] == 1)
	{
		if(h_info[house_id][h_garage] == 0)
		{
			show_dialog(playerid, d_hmenu, DIALOG_STYLE_LIST, ""c_server"Управление домом",
			""c_server"1."c_green" Открыть двери дома\n"c_server"2."c_white" Информация о доме\n"c_server"3."c_white" Улучшения\n"c_server"4."c_white" Гардероб\n"c_server"5."c_white" Подселить человека\n"c_server"6."c_white" Подвальное помещение\n"c_grey"7. Выйти в гараж", "Выбрать", "Закрыть");
		}
		else
		{
			show_dialog(playerid, d_hmenu, DIALOG_STYLE_LIST, ""c_server"Управление домом",
			""c_server"1."c_green" Открыть двери дома\n"c_server"2."c_white" Информация о доме\n"c_server"3."c_white" Улучшения\n"c_server"4."c_white" Гардероб\n"c_server"5."c_white" Подселить человека\n"c_server"6."c_white" Подвальное помещение\n"c_server"7."c_white" Выйти в гараж", "Выбрать", "Закрыть");
		}
	}
	else
	{
		if(h_info[house_id][h_garage] == 0)
		{
			show_dialog(playerid, d_hmenu, DIALOG_STYLE_LIST, ""c_server"Управление домом",
			""c_server"1."c_orange_red" Закрыть двери дома\n"c_server"2."c_white" Информация о доме\n"c_server"3."c_white" Улучшения\n"c_server"4."c_white" Гардероб\n"c_server"5."c_white" Подселить человека\n"c_server"6."c_white" Подвальное помещение\n"c_grey"7. Выйти в гараж", "Выбрать", "Закрыть");
		}
		else
		{
			show_dialog(playerid, d_hmenu, DIALOG_STYLE_LIST, ""c_server"Управление домом",
			""c_server"1."c_orange_red" Закрыть двери дома\n"c_server"2."c_white" Информация о доме\n"c_server"3."c_white" Улучшения\n"c_server"4."c_white" Гардероб\n"c_server"5."c_white" Подселить человека\n"c_server"6."c_white" Подвальное помещение\n"c_server"7."c_white" Выйти в гараж", "Выбрать", "Закрыть");
		}
	}
	return 1;
}

cmd:cellarlock(playerid)
{
	if(PlayerInfo[playerid][cellar] == -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет дома и Вы не арендуете жильё.");
	new h = PlayerInfo[playerid][cellar] -1;


	if(!IsPlayerInRangeOfPoint(playerid, 4.00, cellar_info[h][cl_pos][0], cellar_info[h][cl_pos][1], cellar_info[h][cl_pos][2]) &&
	(! IsPlayerInRangeOfPoint(playerid, 30, 1400.0562, -9.9276, 1000.9152) && GetPlayerVirtualWorld(playerid)!= cellar_info[h][cl_id] + house_count)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы слишком далеко от своего подвала.");

	if(cellar_info[h][cl_closed] == 0)
	{
		cellar_info[h][cl_closed] = 1;
		GameTextForPlayer(playerid,"~r~closed", 2000, 3);
	}
	else
	{
		cellar_info[h][cl_closed] = 0;
		GameTextForPlayer(playerid, "~g~opened", 2000, 3);
	}
	new query_string[78];
	format(query_string, sizeof(query_string), "UPDATE `cellars` SET `cl_closed` = '%d' WHERE `cl_id` = '%d'", cellar_info[h][cl_closed], h + 1);
	mysql_tquery(sql_connection, query_string);

	return 1;
}
cmd:cellarmenu(playerid)
{
	if(PlayerInfo[playerid][cellar] == -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет дома и Вы не арендуете жильё.");
	new h = PlayerInfo[playerid][cellar] -1;
	if(!IsPlayerInRangeOfPoint(playerid, 4.00, cellar_info[h][cl_pos][0], cellar_info[h][cl_pos][1], cellar_info[h][cl_pos][2]) &&
	(! IsPlayerInRangeOfPoint(playerid, 30, 1400.0562, -9.9276, 1000.9152) && GetPlayerVirtualWorld(playerid)!= cellar_info[h][cl_id] + house_count)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы слишком далеко от своего подвала.");
	show_cellarmenu(playerid);
	return 1;
}





stock show_cellarmenu(playerid)
{
	if(PlayerInfo[playerid][cellar] == -1) return 1;
	if(cellar_info[PlayerInfo[playerid][cellar] -1][cl_closed] == 1)
	{
		show_dialog(playerid, d_cellarmenu, DIALOG_STYLE_LIST, ""c_server"Управление подвалом",
		""c_server"1."c_green" Открыть двери подвала\n"c_server"2."c_white" Улучшения\n"c_server"3."c_white" Склад", "Выбрать", "Закрыть");
	}
	else
	{
		show_dialog(playerid, d_cellarmenu, DIALOG_STYLE_LIST, ""c_server"Управление подвалом",
		""c_server"1."c_orange_red" Закрыть двери подвала\n"c_server"2."c_white" Улучшения\n"c_server"3."c_white" Склад", "Выбрать", "Закрыть");
	}
	return 1;
}




stock show_bpanel(playerid)
{
	new b = PlayerInfo[playerid][business] -1;
	if(b_info[b][b_type] == bizz_type_ammo || b_info[b][b_type] == bizz_type_shop || b_info[b][b_type] == bizz_type_pharm || b_info[b][b_type] == bizz_type_electronic || b_info[b][b_type] == bizz_type_clothes || b_info[b][b_type] == bizz_type_cafe || b_info[b][b_type] == bizz_type_club || b_info[b][b_type] == bizz_type_bar)
	{
		show_dialog(playerid, d_b_panel, DIALOG_STYLE_LIST, !""scm_dialog"Управление бизнесом",
		!""c_server"1 |"c_white" Управление кассой\n\
		"c_server"2 |"c_white" Заказать продукты\n\
		"c_server"3 |"c_white" Информация\n\
		"c_server"4 |"c_white" Улучшения\n\
		"c_server"5 |"c_white" Открыть / Закрыть\n\
		"c_server"6 |"c_white" Установить цену за вход\n\
		"c_server"7 |"c_white" Установить наценку на товар\n\
		"c_server"8 |"c_white" Доходы\n\
		"c_server"9 |"c_white" Продать бизнес", !"Выбрать", !"Закрыть");
	}
	else if(b_info[b][b_type] == bizz_type_gas)
	{
		show_dialog(playerid, d_b_panel, DIALOG_STYLE_LIST, !""scm_dialog"Управление заправочной станцией",
		!""c_server"1 |"c_white" Управление кассой\n\
		"c_server"2 |"c_white" Заказать бензин\n\
		"c_server"3 |"c_white" Информация\n\
		"c_server"4 |"c_white" Улучшения\n\
		"c_server"5 |"c_white" Открыть / Закрыть\n\
		"c_server"6 |"c_white" Установить цену за литр\n\
		"c_server"7 |"c_white" Доходы\n\
		"c_server"8 |"c_white" Продать заправочную станцию", !"Выбрать", !"Закрыть");
	}
	else if(b_info[b][b_type] == bizz_type_tune)
	{
		show_dialog(playerid, d_b_panel, DIALOG_STYLE_LIST, !""scm_dialog"Управление автосервисом",
		!""c_server"1 |"c_white" Управление кассой\n\
		"c_server"2 |"c_white" Заказать запчасти\n\
		"c_server"3 |"c_white" Информация\n\
		"c_server"4 |"c_white" Улучшения\n\
		"c_server"5 |"c_white" Открыть / Закрыть\n\
		"c_server"6 |"c_white" Установить наценку на товар\n\
		"c_server"7 |"c_white" Доходы\n\
		"c_server"8 |"c_white" Продать бизнес", !"Выбрать", !"Закрыть");
	}
	else if(b_info[b][b_type] == bizz_type_carshop)
	{
		show_dialog(playerid, d_b_panel, DIALOG_STYLE_LIST, !""scm_dialog"Управление бизнесом",
		!""c_server"1 |"c_white" Управление кассой\n\
		"c_server"2 |"c_white" Заказать бланки\n\
		"c_server"3 |"c_white" Информация\n\
		"c_server"4 |"c_white" Улучшения\n\
		"c_server"5 |"c_white" Открыть / Закрыть\n\
		"c_server"6 |"c_white" Установить цену за вход\n\
		"c_server"7 |"c_white" Стоимость размещения транспорта\n\
		"c_server"8 |"c_white" Доходы\n\
		"c_server"9 |"c_white" Продать бизнес", !"Выбрать", !"Закрыть");

	}
	return 1;
}

alias:menu("mn", "mm");
cmd:menu(playerid)
{
	show_dialog(playerid, d_mm, DIALOG_STYLE_LIST, !""scm_dialog"Игровое меню", !"\
	"c_server"1 | "c_white"Статистика персонажа\n\
	"c_server"2 | "c_white"Команды сервера\n\
	"c_server"3 | "c_white"Настройки аккаунта\n\
	"c_server"4 | "c_white"Связь с администрацией\n\
	"c_server"5 | "c_white"Улучшение персонажа\n\
	"c_server"6 | "c_white"Изменить nonRP ник\n\
	"c_server"7 | "c_white"Игровой магазин\n\
	"c_server"8 | "c_white"Промокод", !"Выбрать", !"Закрыть");
	return 1;
}

cmd:play(playerid)
{
	show_dialog(playerid, d_radio_list, DIALOG_STYLE_LIST, ""c_server"Выбор радиостанции", ""c_server"1. "c_white"Europa Plus\n"c_server"2. "c_white"Радио Рекорд\n"c_orange_red"Отключить радио", "Выбрать", "Закрыть");
	return 1;
}


cmd:flymode(playerid)
{
	if(PlayerInfo[playerid][admin] < 1) return 1;
	if(GetPVarType(playerid, "FlyMode")) CancelFlyMode(playerid);
	else FlyMode(playerid);
	return 1;
}


cmd:alogin(playerid)
{
	if(PlayerInfo[playerid][admin])
	{
		new text_string[95];
		format(text_string, sizeof(text_string), ""c_server"* A.INFO:"c_grey" %s[%d] вышел из панели администратора", PlayerInfo[playerid][name], playerid);
		foreach(new i: admin_players) SendClientMessage(i, col_gray, text_string);

		Iter_Remove(admin_players, playerid);
		PlayerInfo[playerid][admin] = 0;
		for(new i; i < 10; i++) TextDrawHideForPlayer(playerid, ch_td[0][i]), TextDrawHideForPlayer(playerid, ch_td[1][i]);
		return 1;
	}
	new tquery_string[85];
	mysql_format(sql_connection, tquery_string, sizeof(tquery_string), "SELECT * FROM `users_admins` WHERE `u_a_name`='%s' LIMIT 1", PlayerInfo[playerid][name]);
	mysql_tquery(sql_connection, tquery_string, "alogin_step_one", "i", playerid);
	return 1;
}

callback: alogin_step_one(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	
    if(!rows) return 1;

    new admin_pass[32];
    cache_get_field_content(0, "u_a_password", admin_pass, sql_connection, 32);

    if(GetString(admin_pass, "n"))
    	show_dialog(playerid, d_alogin_reg, DIALOG_STYLE_INPUT, !""scm_dialog"Регистрация", !""c_white"Введите пароль, который будет использоваться для авторизации\n"c_grey"Примечание:\n\t"c_grey"-Пароль должен состоять из латинских букв и цифр\n\t"c_grey"-Размер пароля от 6 до 15 символов.", !"Далее", !"Отмена");
    else
    	show_dialog(playerid, d_alogin, DIALOG_STYLE_INPUT, !""scm_dialog"Авторизация", !""c_white"Введите Ваш пароль от панели администратора:", !"Далее", !"Отмена");
    	
	return 1;
}

callback: alogin_step_two(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);

    PlayerInfo[playerid][admin] = cache_get_field_content_int(0, "u_a_level", sql_connection);
    PlayerInfo[playerid][admin_played] = cache_get_field_content_int(0, "u_a_online", sql_connection);

	if(!rows)
	{
		new _text_string[120];
		format(_text_string, sizeof(_text_string), ""c_server"* A.INFO:"c_grey" Администратор %s[%d] неудачно авторизовался [%s]", PlayerInfo[playerid][name], playerid, p_t_info[playerid][p_ip]);
		foreach(new i: admin_players) SendClientMessage(i, col_white, _text_string);

		PlayerInfo[playerid][admin] = 0;
		return 1;
	}
	Iter_Add(admin_players, playerid);

	new _text_string[144];
	format(_text_string, sizeof(_text_string), ""c_server"* A.INFO:"c_grey" Администратор %s[%d] успешно авторизовался в панели, как администратор %d уровня", PlayerInfo[playerid][name], playerid, PlayerInfo[playerid][admin]);
	foreach(new i: admin_players) SendClientMessage(i, col_white, _text_string);
	
	for(new i; i < 10; i++) TextDrawShowForPlayer(playerid, ch_td[0][i]), TextDrawShowForPlayer(playerid, ch_td[1][i]);
	return 1;
}


cmd:iwep(playerid,params[])
{
    if(PlayerInfo[playerid][admin] < 2) return 1;
    if(sscanf(params,"u",params[0])) return	SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /iwep [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок оффлайн!");
    global_string[0] = EOS;
    new Gun[13], Ammo[13];
    for(new i = 0; i < 12; i++)
    {
        GetPlayerWeaponData(params[0], i, Gun[i], Ammo[i]);
        format(global_string, 2000, "%s"c_white"Slot: %i\t Weaponid: %i\t Ammo: %i\n", global_string, i, Gun[i], Ammo[i]);
        if(i == 12) format(global_string, 2000, "%s\n",global_string);
    }
	strcat(global_string, "\n"c_server"Информация сервера:\n\n"c_grey"");
    for(new slot = 0; slot <= 12; slot++)
    {
    	format(global_string, 2000, "%s"c_server"Слот %i\t Weaponid: %i\t Ammo: %i\n",global_string, slot, p_t_info[params[0]][p_gun_slot][slot], p_t_info[params[0]][p_gun_ammo][slot]);
	}
    show_dialog(playerid,d_none,DIALOG_STYLE_MSGBOX, PlayerInfo[params[0]][name], global_string, "Закрыть", "");
    return 1;
}

cmd:afklist(playerid)
{
    if(PlayerInfo[playerid][admin] < 2) return 1;

	global_string[0] = EOS;

	new _count = 0;
    foreach(new i : logged_players)
    {
		if(pl_afk_time[i] < 3) continue;
		new line_string[MAX_PLAYER_NAME + 62 + 16 + 10];
		format(line_string, sizeof(line_string), ""c_server"%s[%d] "c_white"| %d уровень | IP:%s | "c_server"AFK: %d\n", PlayerInfo[i][name], i, PlayerInfo[i][level], p_t_info[i][p_ip], pl_afk_time[i]);
		strcat(global_string, line_string);
		_count ++;
	}
	if(_count == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нет игроков AFK.");
    else show_dialog(playerid, d_none,DIALOG_STYLE_MSGBOX, ""c_server"Игроки AFK", global_string, "Закрыть", "");
	return 1;
}

cmd:clearsd(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /clearsd [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден!");

	p_t_info[params[0]][p_gun_shots] = 0;
	p_t_info[params[0]][p_gun_accuracy] = 0;
	SendClientMessage(playerid, col_gray, ""c_grey"* Статистика выстрелов игрока обновлена.");
	return 1;
}


cmd:sd(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /sd [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден!");

	if(p_t_info[params[0]][p_gun_shots] > 0)
	{
		new _dialog_string[74 + MAX_PLAYER_NAME + 12];
		format(_dialog_string, sizeof(_dialog_string), ""c_server"%s\n\n"c_white"Выстрелы: %d\nПопадания: %d\nТочность: %d процентов.",
		PlayerInfo[params[0]][name], p_t_info[params[0]][p_gun_shots], p_t_info[params[0]][p_gun_accuracy],
		p_t_info[params[0]][p_gun_accuracy]* 100 / p_t_info[params[0]][p_gun_shots]);
		show_dialog(playerid, d_none,DIALOG_STYLE_MSGBOX, ""c_server"Статистика выстрелов", _dialog_string, "Закрыть", "");
	}
	else return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок ещё не произвел ни одного выстрела.");
	return 1;
}

cmd:setstat(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 7) return 1;
	extract params -> new player:targetid; else return SendClientMessage(playerid, col_gray, !"Используйте: "c_white"/setstat [id игрока]");

	SetPVarInt(playerid, !"target_id", targetid);

	new header_string[45];
	format(header_string, sizeof(header_string), ""scm_dialog"%s", PlayerInfo[targetid][name]);
	show_dialog(playerid, d_setstat, DIALOG_STYLE_LIST, header_string, !"\
	"c_server"1 | "c_white"Ник\n\
	"c_server"2 | "c_white"Уровень\n\
	"c_server"3 | "c_white"EXP\n\
	"c_server"4 | "c_white"Лицензии\n\
	"c_server"5 | "c_white"Навыки владения оружием\n\
	"c_server"6 | "c_white"Игровая валюта\n\
	"c_server"7 | "c_white"Донат", !"Выбрать", !"Закрыть");
	return 1;
}

cmd:kick(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2) return 1;
	if(sscanf(params, "us[24]", params[0], params [1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /kick [ид] [причина]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	new scm_string[144];
	format(scm_string, sizeof(scm_string ), "Администратор %s кикнул игрока %s. Причина: %s", PlayerInfo[playerid][name], PlayerInfo[params[0]][name], params[1]);
	foreach(new i: logged_players) if(PlayerInfo[i][settings][2]) SendClientMessage(i, col_light_red, scm_string);

	format(scm_string,sizeof(scm_string),"UPDATE `users_admins` SET `u_a_kicks` = `u_a_kicks`+1 WHERE `u_a_name` = '%s' LIMIT 1", PlayerInfo[playerid][name]);
	mysql_tquery(sql_connection, scm_string, "", "");

	kick_player(params[0]);
 	return 1;
}

cmd:setbproduct(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
 	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /setbproduct [id] [кол-во]");
	if(params[0] > b_count || params[0] < 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Некорректный номер бизнеса.");
	if(params[1] > 50000 || params[0] < 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Некорректное количество продуктов.");


	b_info[params[0] -1][b_product] = params[1];

	new scm_string[128];
	format(scm_string, sizeof(scm_string), ""c_server"* A.INFO: "c_grey"%s[%d] установил бизнесу %s %d продуктов.", PlayerInfo[playerid][name], playerid, b_info[params[0] -1][b_name], params[1]);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, scm_string);
	return 1;
}
cmd:setbmoney(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
 	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /setbmoney [id] [кол-во]");
	if(params[0] > b_count || params[0] < 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Некорректный номер бизнеса.");
	if(params[1] > 50000 || params[0] < 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Некорректное количество денег.");


	b_info[params[0] -1][b_money] = params[1];

	new scm_string[128];
	format(scm_string, sizeof(scm_string), ""c_server"* A.INFO: "c_grey"%s[%d] установил бизнесу %s %d$.", PlayerInfo[playerid][name], playerid, b_info[params[0] -1][b_name], params[1]);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, scm_string);
	return 1;
}

cmd:warn(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "us[32]", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /warn [ид/имя] [причина]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	
	if(PlayerInfo[params[0]][admin] >= 5) return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете выдать ему наказание.");

	if(get_player_warn_count(params[0]) == 2)
	{
		new scm_string[238];
		format(scm_string, 144, "Администратор %s заблокировал %s [3 предупреждения]. Срок: 3 дня. Причина: %s", PlayerInfo[playerid][name], PlayerInfo[params[0]][name], params[1]);
		foreach(new i: logged_players) if(PlayerInfo[i][settings][2]) SendClientMessage(i, col_light_red, scm_string);

		mysql_format(sql_connection, scm_string, sizeof(scm_string ), "INSERT INTO `users_bans` (`u_b_admin`,`u_b_name`,`u_b_reason`,`u_b_date`,`u_b_ndate`,`u_b_days`) VALUES('%s', '%s', '%s', NOW() + INTERVAL 3 DAY, NOW(), '3')", PlayerInfo[playerid][name], PlayerInfo[params[0]][name], params[1]);
		mysql_query(sql_connection, scm_string);


		format(scm_string,sizeof(scm_string),"UPDATE `users_admins` SET `u_a_warns` = `u_a_warns`+1 WHERE `u_a_name` = '%s' LIMIT 1", PlayerInfo[playerid][name]);
		mysql_tquery(sql_connection, scm_string, "", "");



		format(scm_string, sizeof scm_string, "UPDATE `users_warns` SET `w_end`=NOW() WHERE `w_owner`='%d'", PlayerInfo[params[0]][id]);
		mysql_tquery(sql_connection, scm_string);

		format(scm_string, sizeof scm_string, "SELECT * FROM `users_bans` WHERE `u_b_name` = '%s' AND `u_b_date` > NOW()LIMIT 1", PlayerInfo[params[0]][name]);
		mysql_tquery(sql_connection, scm_string, "check_player_banned", "i", params[0]);

	}
	else
	{
		new scm_string[238];
		format(scm_string, 144, "Администратор %s выдал предупреждение игроку %s. Причина: %s", PlayerInfo[playerid][name], PlayerInfo[params[0]][name], params[1]);
		foreach(new i: logged_players) if(PlayerInfo[i][settings][2]) SendClientMessage(i, col_light_red, scm_string);

		format(scm_string,sizeof(scm_string),"UPDATE `users_admins` SET `u_a_warns` = `u_a_warns`+1 WHERE `u_a_name` = '%s' LIMIT 1", PlayerInfo[playerid][name]);
		mysql_tquery(sql_connection, scm_string, "", "");

		format(scm_string, sizeof(scm_string ), "INSERT INTO `users_warns` (`w_admin_name`,`w_owner`,`w_reason`,`w_date`,`w_end`) VALUES('%s', '%d', '%s', NOW(), NOW() + INTERVAL 5 DAY)", PlayerInfo[playerid][name], PlayerInfo[params[0]][id], params[1]);
		mysql_tquery(sql_connection, scm_string);

		PlayerInfo[params[0]][leader] = 0;
		PlayerInfo[params[0]][member] = 0;
		PlayerInfo[params[0]][rank] = 0;
		PlayerInfo[params[0]][org_skin] = 0;




		update_int_sql(params[0], "u_leader", PlayerInfo[params[0]][leader]);
		update_int_sql(params[0], "u_member", PlayerInfo[params[0]][member]);
		update_int_sql(params[0], "u_rank", PlayerInfo[params[0]][rank]);
		kick_player(params[0]);
	}
 	return 1;
}


cmd:unwarn(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /unwarn [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");

	if(get_player_warn_count(params[0]) == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У игрока нет предупреждений.");


	new scm_string[238];
	format(scm_string, 128, ""c_server"* A.INFO: "c_grey"%s снял с %s предупреждения.", PlayerInfo[playerid][name], PlayerInfo[params[0]][name]);
	foreach(new i: admin_players) if(PlayerInfo[i][settings][2]) SendClientMessage(i, col_gray, scm_string);

	format(scm_string, 128, "UPDATE `users_warns` SET `w_end`=NOW() WHERE `w_owner`='%d'", PlayerInfo[params[0]][id]);
	mysql_tquery(sql_connection, scm_string);
	return 1;
}

cmd:warnlist(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /warnhistory [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");

	new scm_string[144];
	format(scm_string, sizeof scm_string, "SELECT * FROM `users_warns` WHERE `w_owner` = '%d' AND `w_end` > NOW()LIMIT 3", PlayerInfo[params[0]][id]);
	mysql_tquery(sql_connection, scm_string, "warnlist_callback", "i", playerid);
	return 1;
}

cmd:mywarn(playerid, params[])
{
	new scm_string[144];
	format(scm_string, sizeof scm_string, "SELECT * FROM `users_warns` WHERE `w_owner` = '%d' AND `w_end` > NOW()LIMIT 3", PlayerInfo[playerid][id]);
	mysql_tquery(sql_connection, scm_string, "warnlist_callback", "i", playerid);
	return 1;
}

cmd:warnhistory(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /warnlist [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");

	new scm_string[144];
	format(scm_string, sizeof scm_string, "SELECT * FROM `users_warns` WHERE `w_owner` = '%d'", PlayerInfo[params[0]][id]);
	mysql_tquery(sql_connection, scm_string, "warnlist_callback", "i", playerid);
	return 1;
}

callback: warnlist_callback(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		global_string[0] = EOS;
		strcat(global_string, ""c_white"");
		for(new j = 0; j < rows; j ++)
		{
			new admin_name[MAX_PLAYER_NAME],
				warn_reason[32],
				warn_date[22], line_string[98];

			cache_get_field_content(j, "w_admin_name", admin_name, sql_connection, MAX_PLAYER_NAME);
			cache_get_field_content(j, "w_reason", warn_reason, sql_connection, 32);
			cache_get_field_content(j, "w_date", warn_date, sql_connection, 22);


			format(line_string, sizeof(line_string), "%s\t%s\t%s\n", warn_date, admin_name, warn_reason);
			strcat(global_string, line_string);
		}
		show_dialog(playerid, d_none, DIALOG_STYLE_TABLIST, ""c_server"Список предупреждений", global_string, "Закрыть", "");
	}
	if(!rows) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Предупреждения отсутствуют.");
	return 1;
}

CMD:carmenu(playerid)
{
	if(Iter_Count(player_vehicles[playerid]) == 0) return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет транспорта или он находится на штрафстоянке.");
	new line_str[78];

	global_string[0] = EOS;
	foreach(new veh_id:player_vehicles[playerid])
	{
		format(line_str, 78, ""c_white"-%s\t"c_grey"%s\n", vehicle_name[GetVehicleModel(veh_id)-400], veh_info[veh_id -1][v_plate]);
		strcat(global_string, line_str);
	}
	show_dialog(playerid, d_carmenu, DIALOG_STYLE_TABLIST, !""scm_dialog"Меню транспорта", global_string, !"Выбрать", !"Закрыть");
	return 1;
}

CMD:setint(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /setint [id]");
	set_interior(playerid, params[0]);
	SendClientMessage(playerid, col_white, !""scm_sucess"Вы переместились в указанный интерьер.");
	return 1;
}

CMD:setvw(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /setvw [id]");
	set_world(playerid, params[0]);
	SendClientMessage(playerid, col_white, !""scm_sucess"Вы переместились в указанный виртуальный мир.");
	return 1;
}

CMD:redpanel(playerid)
{
	if(PlayerInfo[playerid][admin] < 7) return 1;

	return show_dialog(playerid, d_redpanel, DIALOG_STYLE_LIST, !""scm_dialog"Панель управления сервером",
	""c_white"Разблокировать все забаненные аккаунты\n\
	"c_white"Разблокировать все забаненные IP адреса\n\
	"c_white"Разварнивать все заварненные аккаунты\n\
	"c_white"Выпустить всех из тюрьмы\n\
	"c_white"Продавать все дома на сервере\n\
	"c_white"Продавать все бизнесы на сервере\n\
	"c_white"Включить Акцию x2\n\
	"c_white"Выдать PayDay\n\
	"c_white"Распределение\n\
	"c_red"Делать досрочный рестарт сервера", "Выбрать", "Отменить");
}

CMD:asellbiz(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 7) return true;

	new b, isMsg;
	if(sscanf(params, "dD(1)", b, isMsg)) return SendClientMessage(playerid, col_white, !"Введите: /asellbiz [id бизнеса]");

	if(!(0 < b < b_count))
	{
		printf("%d", b);
		return SendClientMessage(playerid, col_gray, !"Указан неизвестный бизнес");
	}

	new b_owner = GetPlayerID(b_info[b-1][b_owner_name]);

	if(b_info[b-1][b_owner_inc] == -1)
		return SendClientMessage(playerid, col_gray, !"Бизнес находится в госсе");

	if(IsPlayerConnected(b_owner))
	{
		update_int_sql(b_owner, "u_business", -1);
		PlayerInfo[b_owner][business] = -1;
		SendClientMessage(b_owner, col_light_red, "Администратор продал Ваш бизнес");
	}
	else
	{
		new query_string[87];
		format(query_string,sizeof(query_string),"UPDATE `users` SET `u_business` = '-1' WHERE `u_id` = '%d' LIMIT 1", b_info[b-1][b_owner_inc]);
		mysql_tquery(sql_connection, query_string, "", "");
	}

	b_info[b-1][b_owner_inc] = -1;
	strfmt(b_info[b-1][b_owner_name], "The State");

	if(isMsg == 1) SendClientMessage(playerid, col_white, "Бизнес успешно продан");

	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	new query_string[200 + MAX_PLAYER_NAME + 1];
	format(query_string, 136,"UPDATE `businesses` SET `b_owner_inc` = '-1', `b_owner_name` = 'The State' WHERE `b_id` = '%d' LIMIT 1", b_info[b-1][b_id]);
	mysql_tquery(sql_connection, query_string);

	if(b_info[b-1][b_type] == bizz_type_bar || b_info[b-1][b_type] == bizz_type_club || b_info[b-1][b_type] == bizz_type_cafe || b_info[b-1][b_type] == bizz_type_pharm || b_info[b-1][b_type] == bizz_type_electronic || b_info[b-1][b_type] == bizz_type_shop || b_info[b-1][b_type] == bizz_type_clothes || b_info[b-1][b_type] == bizz_type_carshop)
	{
		format(query_string, sizeof(query_string), ""c_server"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Бизнес продаётся", b_types[b_info[b-1][b_type]], b_info[b-1][b_price], f_info[b_info[b-1][b_mafia] -1][f_name]);
		UpdateDynamic3DTextLabelText(b_info[b-1][b_label], -1, query_string);
	}

	else if(b_info[b-1][b_type] == bizz_type_gas)
	{
		format(query_string, sizeof(query_string), ""c_server"%s\n"c_grey"Стоимость: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Бизнес продаётся (/buygas)", b_types[b_info[b-1][b_type]], b_info[b-1][b_price], f_info[b_info[b-1][b_mafia] -1][f_name]);
		UpdateDynamic3DTextLabelText(b_info[b-1][b_label], -1, query_string);
	}
	else if(b_info[b-1][b_type] == bizz_type_ammo)
	{
		format(query_string, sizeof(query_string), ""c_server"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Бизнес продаётся", b_types[b_info[b-1][b_type]], b_info[b-1][b_price], family_info[b_info[b-1][b_family] -1][fam_name]);
		UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
	}
	else if(b_info[b-1][b_type] == bizz_type_tune)
	{
		format(query_string, sizeof(query_string), ""c_server"%s\n"c_grey"Стоимость: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Автостанция продаётся (/buytune)", b_types[b_info[b-1][b_type]], b_info[b-1][b_price], f_info[b_info[b-1][b_mafia] -1][f_name]);
		UpdateDynamic3DTextLabelText(b_info[b-1][b_label], -1, query_string);
	}

	return 1;
}

CMD:asellhouse(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 7) return true;

	new house_id, isMsg;
	if(sscanf(params, "dD(1)", house_id, isMsg)) return SendClientMessage(playerid, col_white, !"Введите: /asellhouse [id дома]");

	if(!(0 < house_id < house_count))
		return SendClientMessage(playerid, col_gray, !"Указан неизвестный дом");

	new s_house_id = house_id -1;

	if(h_info[s_house_id][h_owner] == -1)
		return SendClientMessage(playerid, col_gray, !"Дом находится в госсе");

	new h_owner_id = GetPlayerID(h_info[s_house_id][h_owner_name]);

	if(IsPlayerConnected(h_owner_id))
	{
		PlayerInfo[h_owner_id][house] = -1;
		update_int_sql(h_owner_id, "u_house", PlayerInfo[h_owner_id][house]);

		PlayerInfo[h_owner_id][spawnchange] = 0;
		update_int_sql(h_owner_id, "u_spawnchange", PlayerInfo[h_owner_id][spawnchange]);

		SendClientMessage(h_owner_id, col_light_red, !"Администратор продал Ваш дом");
	}
	else
	{
		new query_string[91];
		format(query_string,sizeof(query_string),"UPDATE `users` SET `u_house` = '-1', `u_spawnchange` = '-1' WHERE `u_id` = '%d' LIMIT 1", h_info[s_house_id][h_owner]);
		mysql_tquery(sql_connection, query_string, "", "");
	}

	strfmt(h_info[s_house_id][h_owner_name], "Собственность штата");
	h_info[s_house_id][h_owner] = -1;
	h_info[s_house_id][h_closed] = 0;
	DestroyDynamicPickup(h_info[s_house_id][h_pickup]);
	if(!h_info[s_house_id][h_vw])DestroyDynamicMapIcon(h_info[s_house_id][h_icon_id]);
	h_info[s_house_id][h_pickup] = CreateDynamicPickup(1273, 23, h_info[s_house_id][h_pos][0], h_info[s_house_id][h_pos][1], h_info[s_house_id][h_pos][2], h_info[s_house_id][h_vw], -1);
	if(!h_info[s_house_id][h_vw])h_info[s_house_id][h_icon_id] = CreateDynamicMapIcon(h_info[s_house_id][h_pos][0], h_info[s_house_id][h_pos][1], h_info[s_house_id][h_pos][2], 31, 0, 0, 0, -1, 50.0);

	save_house(s_house_id);

	new data[48], query[128];
	for(new i;i<8;i++)
	{
		h_info[s_house_id][h_improve][i] = 0;
		if(!i)format(data, sizeof(data),"%d", h_info[s_house_id][h_improve][i]);
		else format(data, sizeof(data),"%s|%d", data, h_info[s_house_id][h_improve][i]);
	}
	format(query,sizeof(query),"UPDATE `houses` SET `h_improve` = '%s' WHERE `h_id` = '%d'", data, house_id);
	mysql_tquery(sql_connection, query);

    h_info[s_house_id][h_safe_code] = 0;
 	format(query, sizeof query, "UPDATE `houses` SET `h_safe_code` = '0000' WHERE `h_id` = '%d' LIMIT 1",h_info[s_house_id][h_id]);
	mysql_tquery(sql_connection, query);

	if(isMsg == 1) SendClientMessage(playerid, col_white, "Недвижимость успешно продана государству.");
	return 1;
}

CMD:asettings(playerid)
{
	if(PlayerInfo[playerid][admin] < 8) return 1;

    pAntiCheatSettingsPage{playerid} = 1; // Присваиваем переменной, хранящей номер страницы, на который находится игрок, значение 1 (т.е, теперь игрок на 1-ой странице)
    return ShowPlayer_AntiCheatSettings(playerid); // Показываем игрок главный диалог настроек анти-чита
}

stock ShowPlayer_AntiCheatSettings(playerid)
{
    static
        dialog_string_t[128 + 32 -8 + (AC_MAX_CODE_LENGTH + AC_MAX_CODE_NAME_LENGTH + AC_MAX_TRIGGER_TYPE_NAME_LENGTH + 10)*AC_MAX_CODES_ON_PAGE] = EOS;

    new
        triggeredCount = 0,
        page = pAntiCheatSettingsPage{playerid},
        next = 0,
        index = 0;

    dialog_string_t = ""c_white"Название\t"c_white"Наказание\t"c_white"Кол-во срабатываний\n";

    for(new i = 0; i < AC_MAX_CODES; i++)
    {
        if(i >= (page * AC_MAX_CODES_ON_PAGE) && i < (page * AC_MAX_CODES_ON_PAGE) + AC_MAX_CODES_ON_PAGE)
            next++;

        if(i >= (page -1) * AC_MAX_CODES_ON_PAGE && i < ((page -1) * AC_MAX_CODES_ON_PAGE) + AC_MAX_CODES_ON_PAGE)
        {
            triggeredCount = AC_CODE_TRIGGERED_COUNT[i];

            format(dialog_string_t, sizeof(dialog_string_t), "%s"c_server"%s |"c_white" %s\t%s\t"c_orange_red"%d\n",
                dialog_string_t,
                AC_CODE[i],
                AC_CODE_NAME[i],
                AC_TRIGGER_TYPE_NAME[AC_CODE_TRIGGER_TYPE[i]],
                triggeredCount);

            pAntiCheatSettingsMenuListData[playerid][index++] = i;
        }
    }

    if(next)
        strcat(dialog_string_t, ""AC_DIALOG_NEXT_PAGE_TEXT"\n");

    if(page > 1)
        strcat(dialog_string_t, AC_DIALOG_PREVIOUS_PAGE_TEXT);

    return show_dialog(playerid, d_anticheat_settings, DIALOG_STYLE_TABLIST_HEADERS, !""scm_dialog"Настройки анти-чита", dialog_string_t, !"Выбрать", !"Отмена");
}

// Функция показа меню редактирования типа срабатывания определённого кода в анти-чите
stock ShowPlayer_AntiCheatEditCode(playerid, code)
{
    new
        dialog_header[22 -4 + AC_MAX_CODE_LENGTH + AC_MAX_CODE_NAME_LENGTH],
        dialog_string[AC_MAX_TRIGGER_TYPE_NAME_LENGTH*AC_MAX_TRIGGER_TYPES];

    format(dialog_header, sizeof(dialog_header), ""scm_dialog"Античит: [%s] %s", AC_CODE[code], AC_CODE_NAME[code]);

    for(new i = 0; i < AC_MAX_TRIGGER_TYPES; i++)
    {
        strcat(dialog_string, AC_TRIGGER_TYPE_NAME[i]);

        if(i + 1 != AC_MAX_TRIGGER_TYPES)
            strcat(dialog_string, "\n");
    }

    return show_dialog(playerid, d_anticheat_edit_code, DIALOG_STYLE_LIST, dialog_header, dialog_string, !"Выбрать", !"Назад");
}

cmd:fullinfo(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 6) return 1;
	extract params -> new string:u_name[20]; else return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /fullinfo [ник игрока]");

	new query_string[62];
	format(query_string, sizeof query_string, "SELECT * FROM `users` WHERE `u_name` = '%s'", u_name);
	mysql_tquery(sql_connection, query_string, "GetOfflinePlayerInfo", "ds", playerid, u_name);

	return 1;
}

callback: GetOfflinePlayerInfo(playerid, target[])
{
	if(!cache_num_rows()) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден");

	new o_id;
	o_id = cache_get_field_content_int(0, "u_id", sql_connection);
	SetPVarInt(playerid, "offline_target_id", o_id);
	SetPVarString(playerid, "offline_target", target);

	return show_dialog(playerid, d_afainfo, DIALOG_STYLE_LIST, !""scm_dialog"Подробная информация", !"\
	"c_server"1 | "c_white"Основная информация\n\
	"c_server"2 | "c_white"Рег. данные\n\
	"c_server"3 | "c_white"История предупреждений\n\
	"c_server"4 | "c_white"История блокировки аккаунта\n\
	"c_server"5 | "c_white"История финансов", !"Выбрать", !"Закрыть");
}

callback: GetOfflineStats(playerid)
{
	new const mm_gender[][] = {
	"мужчина",
	"женщина"};

	new const job_status[7][22] = {
	"водитель автобуса",
	"таксист",
	"механик",
	"дальнобойщик",
	"развозчик продуктов",
	"развозчик топлива",
	"газонокосильщик"};

	new oid, ohouse, obiz, omember, orank, olvl, oexp, oage, ophone, opbalance, owanted, osex, ojob, ogoogle[30], otarget[20];

	oid = cache_get_field_content_int(0, "u_id", sql_connection);
	cache_get_field_content(0, "u_name", otarget, sql_connection);
	cache_get_field_content(0, "u_googleauth", ogoogle, sql_connection);
	ohouse = cache_get_field_content_int(0, "u_house", sql_connection);
	obiz = cache_get_field_content_int(0, "u_business", sql_connection);
	omember = cache_get_field_content_int(0, "u_member", sql_connection);
	orank = cache_get_field_content_int(0, "u_rank", sql_connection);
	olvl = cache_get_field_content_int(0, "u_level", sql_connection);
	oexp = cache_get_field_content_int(0, "u_exp", sql_connection);
	oage = cache_get_field_content_int(0, "u_age", sql_connection);
	ophone = cache_get_field_content_int(0, "u_number", sql_connection);
	opbalance = cache_get_field_content_int(0, "u_phohe_balance", sql_connection);
	owanted = cache_get_field_content_int(0, "u_wanted", sql_connection);
	osex = cache_get_field_content_int(0, "u_gender", sql_connection);
	ojob = cache_get_field_content_int(0, "u_job", sql_connection);

	new house_data[12];
	if(ohouse != -1)
		format(house_data, sizeof(house_data), "дом №%d", ohouse);
	else
		format(house_data, sizeof(house_data), "отсутствует");

	new business_date[32];
	if(obiz != -1)
		format(business_date, 32, "%s (%d)", b_info[obiz -1][b_name], obiz -1);
	else
		format(business_date, 32, "отсутствует");

	new job_data[22];
	if(ojob != 0 && ojob < 50)
		format(job_data, sizeof(job_data), "%s", job_status[ojob -1]);
	else
		format(job_data, sizeof(job_data), "отсутствует");

	new fraction_data[32];
	if(omember)
		format(fraction_data, sizeof(fraction_data), "%s", f_info[omember -1][f_name]);
	else
		format(fraction_data, sizeof(fraction_data), "отсутствует");

	new rank_data[32];
	if(orank)
		format(rank_data, sizeof(rank_data), "%s", f_rank[orank -1][orank -1]);
	else
		format(rank_data, sizeof(rank_data), "отсутствует");

	format(global_string, 1028, "\
	"c_grey"Имя:\t\t\t\t"c_white"%s %s\n\
	"c_grey"Номер аккаунта:\t\t"c_white"%d\n\
	"c_grey"Google Authenticator:\t\t"c_white"%s\n\
	"c_grey"Уровень:\t\t\t"c_white"%d\n\
	"c_grey"Очки опыта:\t\t\t"c_white"%d из %d\n\
	"c_grey"Возраст:\t\t\t"c_white"%d\n\
	"c_grey"Активные предупреждения:\t"c_white"%d\n\n\
	"c_grey"Номер телефона:\t\t"c_white"%d\n\
	"c_grey"На счету телефона:\t\t"c_white"%d\n\n\
	"c_grey"Уровень розыска:\t\t"c_white"%d\n\n\
	"c_grey"Пол:\t\t\t\t"c_white"%s\n\
	"c_grey"Работа:\t\t\t\t"c_white"%s\n\
	"c_grey"Организация:\t\t\t"c_white"%s\n\
	"c_grey"Ранг:\t\t\t\t"c_white"%s\n\
	"c_grey"Проживание:\t\t\t"c_white"%s\n\
	"c_grey"Бизнес:\t\t\t"c_white"%s",

	otarget, (IsPlayerConnected(GetPlayerID(otarget))) ? ""c_green"[Online]" : ""c_orange_red"[Offline]", oid,
	(!strcmp(ogoogle, "0", true, 33)) ? (""c_orange_red"Отключена") : (""c_green"Активирован"),
	olvl,  oexp,(olvl+ 1)* 4, oage,
	get_player_warn_count_off(oid), ophone, opbalance, owanted,
	mm_gender[osex],
	job_data,
	fraction_data,
	rank_data,
	house_data,
	business_date);
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, !""scm_dialog"Статистика игрока", global_string, !"Закрыть", !"");
}

stock get_player_warn_count_off(acc_id)
{
	new _warn_count = 0, query_string[78];
	format(query_string, sizeof(query_string), "SELECT * FROM `users_warns` WHERE `w_owner`='%d' AND `w_end` > NOW()", acc_id);
	new Cache:result = mysql_query(sql_connection, query_string);
	_warn_count = cache_num_rows();
	cache_delete(result);
	return _warn_count;
}

CMD:nalog(playerid)
{
	new str_frmt[320];
	
	format(str_frmt, sizeof(str_frmt), "\n\n"c_gold"-"c_white"В данный момент ваша задолженность составляет: "c_green"%d$\n\n\
	"scm_info"Для того, чтобы погасить налоги вам нужно обратиться в ближайшее банковское отделение или банкомат.\n\
	"scm_info"При неоплате налогов ваше имущество будет продано государству. Спасибо за внимание!\n\n", PlayerInfo[playerid][tax]);
	
	return show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, !""scm_dialog"Информация о ваших налогах", str_frmt, "Закрыть", "");
}

CMD:distributeghetto(playerid)
{
	if(PlayerInfo[playerid][admin] < 7) return 1;

	new gangzone_id;

	for(new i = 0; i < sizeof gang_zones; i++)
	{
		for(new j = 0; j < sizeof gang_zones[]; j++)
		{
			gangzone_id = gang_zones[i][j] -1;
			gz_info[gangzone_id][gz_owner] = i + 18;
			GangZoneHideForAll(gz_info[gangzone_id][gz_created]);
			GangZoneShowForAll(gz_info[gangzone_id][gz_created], GetGangZoneColor(gz_info[gangzone_id][gz_owner]));
			SaveGangZone(gangzone_id);
		}
	}

	GangZoneHideForAll(gz_info[0][gz_created]);
	GangZoneShowForAll(gz_info[0][gz_created], GetGangZoneColor(gz_info[0][gz_owner]));

	gangzone_id = 26;
	gz_info[gangzone_id][gz_owner] = 19;
	GangZoneHideForAll(gz_info[gangzone_id][gz_created]);
	GangZoneShowForAll(gz_info[gangzone_id][gz_created], GetGangZoneColor(gz_info[gangzone_id][gz_owner]));
	SaveGangZone(gangzone_id);

	format(global_string, sizeof(global_string), ""c_server"A.INFO:"c_grey" %s[%d] распределил территории гетто между банд", PlayerInfo[playerid][name], playerid);
	foreach(new i: admin_players) if(PlayerInfo[i][admin] >= 7) SendClientMessage(i, col_gray, global_string);
	global_string[0] = EOS;

	return SendClientMessage(playerid, col_green, "Гетто распределено");
}

CMD:distributemafia(playerid)
{
	if(PlayerInfo[playerid][admin] < 7) return 1;

	new query_string[228], b;

	for(new i = 0; i < 3; i++)
	{
		for(new j = 0; j < b_count / 3; j++)
		{
			b = i * (b_count / 3) + j;

			b_info[b][b_mafia] = i + 23;

			if(b_info[b][b_type] == bizz_type_shop || b_info[b][b_type] == bizz_type_pharm || b_info[b][b_type] == bizz_type_electronic || b_info[b][b_type] == bizz_type_clothes || b_info[b][b_type] == bizz_type_carshop || b_info[b][b_type] == bizz_type_cafe || b_info[b][b_type] == bizz_type_club || b_info[b][b_type] == bizz_type_bar)
			{
				format(query_string, sizeof(query_string), ""c_server"%s\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
				b_types[b_info[b][b_type]], b_info[b][b_owner_name], b_info[b][b_price], f_info[b_info[b][b_mafia] -1][f_name],(! b_info[b][b_close])?("{1a9616}Открыт"):("{e11010}Закрыт"));
				UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
			}

			else if(b_info[b][b_type] == bizz_type_gas)
			{
				format(query_string, sizeof(query_string), ""c_server"%s\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль:"c_white" %s\n"c_grey"Состояние: "c_white"%s",
				b_types[b_info[b][b_type]], b_info[b][b_owner_name], b_info[b][b_price], f_info[b_info[b][b_mafia] -1][f_name],(! b_info[b][b_close])?("{1a9616}Открыт"):("{e11010}Закрыт"));
				UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
			}
			else if(b_info[b][b_type] == bizz_type_ammo)
			{
				format(query_string, sizeof(query_string), ""c_server"%s\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
				b_types[b_info[b][b_type]], b_info[b][b_owner_name], b_info[b][b_price], family_info[b_info[b][b_family] -1][fam_name], (! b_info[b][b_close])?("{1a9616}Открыт"):("{e11010}Закрыт"));
				UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
			}
			else if(b_info[b][b_type] == bizz_type_tune)
			{
				format(query_string, sizeof(query_string), ""c_server"%s\n"c_white"Владелец: %s\nКонтроль: %s\nСостояние: %s",
				b_types[b_info[b][b_type]], b_info[b][b_owner_name], f_info[b_info[b][b_mafia] -1][f_name],(! b_info[b][b_close])?("{1a9616}Открыт"):("{e11010}Закрыт"));
				UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
			}

			format(query_string, 118,"UPDATE `businesses` SET `b_mafia` = '%d' WHERE `b_id` = '%d' LIMIT 1", b_info[b][b_mafia], b_info[b][b_id]);
			mysql_tquery(sql_connection, query_string);
		}
	}

	format(global_string, sizeof(global_string), ""c_server"* A.INFO:"c_grey" %s[%d] распределил бизнесы между мафий", PlayerInfo[playerid][name], playerid);
	foreach(new i: admin_players) if(PlayerInfo[i][admin] >= 7) SendClientMessage(i, col_gray, global_string);
	global_string[0] = EOS;

	return SendClientMessage(playerid, col_green, "Все бизнесы распределены");
}

cmd:banhistory(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "s[24]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /banhistory [имя]");

	new scm_string[144];
	format(scm_string, sizeof scm_string, "SELECT * FROM `users_bans` WHERE `u_b_name` = '%s'", params[0]);
	mysql_tquery(sql_connection, scm_string, "banhistory_callback", "i", playerid);
	return 1;
}

callback: banhistory_callback(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		global_string[0] = EOS;
		strcat(global_string, ""c_white"");
		for(new j = 0; j < rows; j ++)
		{
			new admin_name[MAX_PLAYER_NAME],
				warn_reason[32],
				warn_date[22], line_string[98];


			cache_get_field_content(j, "u_b_admin", admin_name, sql_connection, MAX_PLAYER_NAME);
			cache_get_field_content(j, "u_b_reason", warn_reason, sql_connection, 32);
			cache_get_field_content(j, "u_b_date", warn_date, sql_connection, 22);


			format(line_string, sizeof(line_string), "%s\t%s\t%s\n", warn_date, admin_name, warn_reason);
			strcat(global_string, line_string);
		}
		show_dialog(playerid, d_none, DIALOG_STYLE_LIST, !""scm_dialog"Список блокировок", global_string, !"Закрыть", !"");
	}
	if(!rows) return SendClientMessage(playerid, col_white, !""scm_error"Информация о блокировках не найдена.");
	return 1;
}

cmd:mute(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2)
		return 1;
	if(sscanf(params, "uds[42]", params[0], params[1], params[2]))
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /mute [ид] [минуты] [причина]");
	if(!IsPlayerConnected(params[0]))
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(PlayerInfo[params[0]][mute] > 1)
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У игрока уже есть бан чата.");
		
	if(PlayerInfo[params[0]][admin] >= 5) return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете выдать ему наказание.");
		
	new scm_string[144];
	format(scm_string,sizeof(scm_string ), "Администратор %s выдал бан чата игроку %s на %d минут. Причина: %s", PlayerInfo[playerid][name], PlayerInfo[params[0]][name], params[1], params[2]);
	foreach(new i: logged_players) if(PlayerInfo[i][settings][2]) SendClientMessage(i, col_light_red, scm_string);

	format(scm_string,sizeof(scm_string),"UPDATE `users_admins` SET `u_a_mute` = `u_a_mute`+1 WHERE `u_a_name` = '%s' LIMIT 1", PlayerInfo[playerid][name]);
	mysql_tquery(sql_connection, scm_string, "", "");

	PlayerInfo[params[0]][mute] = params [1]*60;
	return 1;
}

cmd:unmute(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2)
		return 1;
	if(sscanf(params, "u", params[0]))
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /unmute [ид]");
	if(!IsPlayerConnected(params[0]))
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(PlayerInfo[params[0]][mute] == 0)
	    return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У игрока нет мута!");
	PlayerInfo[params[0]][mute] = 0;
	new scm_string[128];
	format(scm_string, sizeof(scm_string ), "Администратор %s снял затычку игроку %s", PlayerInfo[playerid][name], PlayerInfo[params[0]][name]);
	foreach(new i: logged_players) if(PlayerInfo[i][settings][2]) SendClientMessage(i, col_light_red, scm_string);
	return 1;
}

cmd:offmute(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	new
		mname[MAX_PLAYER_NAME],
		mtime,
		reason[32];
	if(sscanf(params, "s[24]ds[32]", mname, mtime, reason)) return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /offmute [имя игрока] [минуты] [причина]");
	if(!(0 < mtime <= 180)) return SendClientMessage(playerid, col_white, !""scm_error"Время мута не должно быть меньше 1 и больше 180 минут.");

	new player = GetPlayerID(mname);
	
	if(IsPlayerConnected(player)) return SendClientMessage(playerid, col_white, !""scm_error"В данный момент игрок в сети, используйте: /mute.");

	new sql_string[50 + MAX_PLAYER_NAME];
	format(sql_string, sizeof sql_string, "SELECT * FROM `users` WHERE `u_name` = '%s' LIMIT 1", mname);
	mysql_tquery(sql_connection, sql_string, "offmute_check_callback", "isds", playerid, mname, mtime, reason);
	return 1;
}

cmd:mutelist(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2) return 1;
	new rows_amount;
	foreach(new i: logged_players)
	{
		if(PlayerInfo[i][mute])
		{
			new scm_string[92];
			format(scm_string, sizeof(scm_string ), "%s[%i] | %d секунд(ы).", PlayerInfo[i][name], i, PlayerInfo[i][mute]);
			SendClientMessage(playerid, col_white, scm_string);
			rows_amount ++;
		}
	}
	new scm_string[48];
	format(scm_string, sizeof(scm_string ), "Игроков найдено: %d.", rows_amount);
	SendClientMessage(playerid, col_white, scm_string);
	return 1;
}

cmd:skick(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /skick [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	new scm_string[128];
	format(scm_string, sizeof(scm_string ), ""c_server"* A.INFO: "c_grey"%s[%d] тихо кикнул игрока %s[%d].", PlayerInfo[playerid][name], playerid, PlayerInfo[params[0]][name], params[0]);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, scm_string);
	kick_player(params[0]);
 	return 1;
}


cmd:offleaders(playerid)
{
    if(PlayerInfo[playerid][admin] < 4) return 1;

    SetPVarInt(playerid, !"ofm_list_page", 1);
    mysql_tquery(sql_connection, "SELECT `u_name`,`u_last_date`,`u_leader` FROM `users` WHERE `u_leader`>'0'", "callback_offleaders", "i", playerid);
    return 1;
}

callback: callback_offleaders(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
    if(!rows)
    {
        SendClientMessage(playerid, col_white, !""scm_error"Игроки с данными параметрами не найдены.");
        return DeletePVar(playerid, !"ofm_list_page");
    }

    new rows_list = GetPVarInt(playerid, !"ofm_list_page") -1;
    SetPVarInt(playerid, !"ofm_list_rows", rows);

    dlobal_string[0] = EOS;
    strcat(dlobal_string, ""c_grey"Предыдущая страница\n"c_grey"Следующая страница\n"c_white"");
    for(new i = rows_list * 10; i < rows_list * 10 + 10; i ++)
    {
        if(i >= rows) break;

        new pl_ofm_name[24], pl_ofm_online[24], pl_leader;
        cache_get_field_content(i, "u_name", pl_ofm_name, sql_connection, 24);
        cache_get_field_content(i, "u_last_date", pl_ofm_online, sql_connection, 24);
        pl_leader = cache_get_field_content_int(i, "u_leader", sql_connection);

        new pvar_string[8];
        format(pvar_string, sizeof(pvar_string), "ofm_%d", i -rows_list * 10);
        SetPVarString(playerid, pvar_string, pl_ofm_name);

        new line_string[100];
        format(line_string, sizeof(line_string), ""c_white"%s -"c_silver"%s"c_white" -%s\n", pl_ofm_name, f_info[pl_leader -1][f_name], pl_ofm_online);
        strcat(dlobal_string, line_string);
    }
    return show_dialog(playerid, d_offleaders, DIALOG_STYLE_LIST, !""scm_dialog"Список лидеров", dlobal_string, !"Выбрать", !"Назад");
}

callback: callback_offleaders_info(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new last_date[16], fraction_date[24], pl_leader;
		pl_leader = cache_get_field_content_int(0, "u_leader", sql_connection);
		cache_get_field_content(0, "u_last_date", last_date, sql_connection, 24);
		cache_get_field_content(0, "u_fraction_date", fraction_date, sql_connection, 24);

		new pvar_string[38], pl_name[MAX_PLAYER_NAME];
		format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
		GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

		new dialog_string[256];
		format(dialog_string, sizeof(dialog_string), ""c_white"Имя: "c_server"%s\n"c_white"Организация: %s\n"c_white"На посту: "c_silver"%s\n"c_white"Последний вход: "c_silver"%s", pl_name, f_info[pl_leader -1][f_name], fraction_date, last_date);
		show_dialog(playerid, d_offleaders_menu_info, DIALOG_STYLE_MSGBOX, !""scm_dialog"Информация об игроке", dialog_string, !"Назад", !"");
	}
	if(!rows)
	{
		DeletePVar(playerid, !"ofm_listitem");
		if(!GetPVarInt(playerid, !"ofm_type"))
		{
			mysql_tquery(sql_connection, "SELECT `u_name`,`u_last_date`,`u_leader` FROM `users` WHERE `u_leader`>'0'", "callback_offamily", "i", playerid);
			return 1;
		}
	}
	return 1;
}

cmd:offadmins(playerid)
{
    if(PlayerInfo[playerid][admin] < 6) return 1;

    SetPVarInt(playerid, !"ofm_list_page", 1);
    mysql_tquery(sql_connection, "SELECT `u_a_name`,`u_a_date`,`u_a_level` FROM `users_admins`", "callback_offadmins", "i", playerid);
    return 1;
}

callback: callback_offadmins(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		SendClientMessage(playerid, col_white, !""scm_error"Игроки с данными параметрами не найдены.");
		return DeletePVar(playerid, !"ofm_list_page");
	}

	new rows_list = GetPVarInt(playerid, !"ofm_list_page") -1;
	SetPVarInt(playerid, !"ofm_list_rows", rows);

	dlobal_string[0] = EOS;
	strcat(dlobal_string, ""c_grey"Предыдущая страница\n"c_grey"Следующая страница\n"c_white"");
	for(new i = rows_list * 10; i < rows_list * 10 + 10; i ++)
	{
		if(i >= rows) break;

		new pl_ofm_name[24], pl_ofm_online[24], a_level;

		cache_get_field_content(i, "u_a_name", pl_ofm_name, sql_connection, 24);
		cache_get_field_content(i, "u_a_date", pl_ofm_online, sql_connection, 24);
		a_level = cache_get_field_content_int(i, "u_a_level", sql_connection);

		new pvar_string[8];
		format(pvar_string, sizeof(pvar_string), "ofm_%d", i -rows_list * 10);
		SetPVarString(playerid, pvar_string, pl_ofm_name);

		new line_string[80];
		format(line_string, sizeof(line_string), ""c_white"%s -"c_silver"%d-й уровень"c_white" -%s\n", pl_ofm_name, a_level, pl_ofm_online);
		strcat(dlobal_string, line_string);
	}
	return show_dialog(playerid, d_offadmins, DIALOG_STYLE_LIST, !""scm_dialog"Список администрации", dlobal_string, !"Выбрать", !"Назад");
}

callback: callback_offadmins_info(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new pl_ofm_online[24], pl_ofm_issued[24], a_level, a_online, a_jails, a_warns, a_bans, a_kicks, a_mute;
		cache_get_field_content(0, "u_a_date", pl_ofm_online, sql_connection, 24);
		cache_get_field_content(0, "u_a_issued", pl_ofm_issued, sql_connection, 24);
		a_level = cache_get_field_content_int(0, "u_a_level", sql_connection);
		a_online = cache_get_field_content_int(0, "u_a_online", sql_connection);
		a_jails = cache_get_field_content_int(0, "u_a_jails", sql_connection);
		a_warns = cache_get_field_content_int(0, "u_a_warns", sql_connection);
		a_bans = cache_get_field_content_int(0, "u_a_bans", sql_connection);
		a_kicks = cache_get_field_content_int(0, "u_a_kicks", sql_connection);
		a_mute = cache_get_field_content_int(0, "u_a_mute", sql_connection);

		new pvar_string[38], pl_name[MAX_PLAYER_NAME];
		format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
		GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

		new dialog_string[512];
		format(dialog_string, sizeof(dialog_string), ""c_server"Общая информация:\n\n"c_white"Имя: "c_server"%s\n"c_white"Уровень: %d\n"c_white"На посту: "c_silver"%s\n"c_white"Последний вход: "c_silver"%s\n"c_white"Отыграно на должности: "c_gold"%s\n\n"c_server"Выданные наказания:\n\n"c_white"Посажено в тюрьму: "c_silver"%d\n"c_white"Выдано предупреждений: "c_silver"%d\n"c_white"Заблокировано аккаунтов: "c_silver"%d\n"c_white"Отключенных игроков: "c_silver"%d\n"c_white"Заблокированно чатов: "c_silver"%d", pl_name, a_level, pl_ofm_issued, pl_ofm_online, convert_time(a_online), a_jails, a_warns, a_bans, a_kicks, a_mute);
		show_dialog(playerid, d_offadmins_menu_info, DIALOG_STYLE_MSGBOX, !""scm_dialog"Статистика администратора", dialog_string, !"Назад", !"");
	}
	if(!rows)
	{
		DeletePVar(playerid, "ofm_listitem");
		if(!GetPVarInt(playerid, "ofm_type"))
		{
			mysql_tquery(sql_connection, "SELECT `u_a_name`,`u_a_date`,`u_a_level` FROM `users_admins`", "callback_offadmins", "i", playerid);
			return 1;
		}
	}
	return 1;
}

cmd:offstats(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2) return 1;
	if(sscanf(params, "s[24]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /offstats [имя]");
	new query_string[80 + MAX_PLAYER_NAME];
	format(query_string, sizeof query_string, "SELECT * FROM `users` WHERE `u_name` = '%s' LIMIT 1", params[0]);
	mysql_tquery(sql_connection, query_string, "offstats_callback", "i", playerid);
 	return 1;
}


callback: offstats_callback(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Данный аккаунт не найден в базе данных.");
		return 1;
	}
	else
	{
		new gs_id,
			gs_name[MAX_PLAYER_NAME],
			gs_level,
			gs_exp,
			gs_number,
			gs_phone_money,
			gs_suspect,
			gs_gender,
			gs_job,
			gs_member,
			gs_rank,
			gs_house,
			gs_business;


		cache_get_field_content(0, "u_name", gs_name, sql_connection, MAX_PLAYER_NAME);

		gs_id = cache_get_field_content_int(0, "u_id", sql_connection);
		gs_level = cache_get_field_content_int(0, "u_level", sql_connection);
		gs_exp = cache_get_field_content_int(0, "u_exp", sql_connection);
		gs_number = cache_get_field_content_int(0, "u_number", sql_connection);
		gs_phone_money = cache_get_field_content_int(0, "u_phohe_balance", sql_connection);
		gs_suspect = cache_get_field_content_int(0, "u_wanted", sql_connection);
		gs_gender = cache_get_field_content_int(0, "u_gender", sql_connection);
		gs_job = cache_get_field_content_int(0, "u_job", sql_connection);
		gs_member = cache_get_field_content_int(0, "u_member", sql_connection);
		gs_rank = cache_get_field_content_int(0, "u_rank", sql_connection);
		gs_house = cache_get_field_content_int(0, "u_house", sql_connection);
		gs_business = cache_get_field_content_int(0, "u_business", sql_connection);

		static const mm_gender[][] = {
		"мужчина",
		"женщина"};

		static const job_status[7][22] = {
		"Водитель автобуса",
		"Таксист",
		"Механик",
		"Дальнобойщик",
		"Развозчик продуктов",
		"Развозчик топлива",
		"Газонокосильщик"};

		new house_data[12];
		if(gs_house != -1)format(house_data, sizeof(house_data), "дом № %d", gs_house);
		else format(house_data, sizeof(house_data), "отсутствует");
		new business_date[32];
		if(gs_business != -1)format(business_date, 32, "%s", b_info[gs_business -1][b_name]);
		else format(business_date, 32, "отсутствует");

		new job_data[22];
		if(gs_job != 0 && gs_job < 50)format(job_data, sizeof(job_data), "%s", job_status[gs_job -1]);
		else format(job_data, sizeof(job_data), "отсутствует");
		new fraction_data[32];
		if(gs_member)format(fraction_data, sizeof(fraction_data), "%s", f_info[gs_member -1][f_name]);
		else format(fraction_data, sizeof(fraction_data), "отсутствует");
		new rank_data[32];
		if(gs_rank)format(rank_data, sizeof(rank_data), "%s", f_rank[gs_member -1][gs_rank -1]);
		else format(rank_data, sizeof(rank_data), "отсутствует");




		format(global_string, 1028, "\
		"c_grey"Имя:\t\t\t\t"c_white"%s\n\
		"c_grey"Номер аккаунта:\t\t"c_white"%d\n\
		"c_grey"Уровень:\t\t\t"c_white"%d\n\
		"c_grey"Очки опыта:\t\t\t"c_white"%d из %d\n\
		"c_grey"Номер телефона:\t\t"c_white"%d\n\
		"c_grey"На счету телефона:\t\t"c_white"%d\n\n\
		"c_grey"Уровень розыска:\t\t"c_white"%d\n\n\
		"c_grey"Пол:\t\t\t\t"c_white"%s\n\
		"c_grey"Работа:\t\t\t"c_white"%s\n\
		"c_grey"Организация:\t\t\t"c_white"%s\n\
		"c_grey"Ранг:\t\t\t\t"c_white"%s\n\
		"c_grey"Проживание:\t\t\t"c_white"%s\n\
		"c_grey"Бизнес:\t\t\t"c_white"%s\n\n",

		gs_name,
		gs_id,
		gs_level,
		gs_exp,(gs_level + 1)* 4,
		gs_number,
		gs_phone_money,

		gs_suspect,

		mm_gender[gs_gender],
		job_data,
		fraction_data,
		rank_data,
		house_data,
		business_date);
		show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Статистика игрока", global_string, "Закрыть", "");
	}
	return 1;
}

cmd:get(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /get [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	new query_string[80 + MAX_PLAYER_NAME];
	format(query_string, sizeof query_string, "SELECT * FROM `users` WHERE `u_name` = '%s' LIMIT 1", PlayerInfo[params[0]][name]);
	mysql_tquery(sql_connection, query_string, "get_callback", "i", playerid);
 	return 1;
}

cmd:getip(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /getip [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");

	new scm_string[96];
	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"Никнейм: %s | IP: %s", PlayerInfo[params[0]][name], p_t_info[params[0]][p_ip]);
	SendClientMessage(playerid, col_gray, scm_string);

 	return 1;
}

cmd:offget(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	if(sscanf(params, "s[24]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /offget [имя]");
	new query_string[80 + MAX_PLAYER_NAME];
	format(query_string, sizeof query_string, "SELECT * FROM `users` WHERE `u_name` = '%s' LIMIT 1", params[0]);
	mysql_tquery(sql_connection, query_string, "get_callback", "i", playerid);
 	return 1;
}

cmd:tp(playerid)
{
	if(!PlayerInfo[playerid][admin]) return 1;
	return show_dialog(playerid, d_tp, DIALOG_STYLE_LIST, !""scm_dialog"Телепортация", !""c_server"1 | "c_white"Базы организаций\n"c_server"2 | "c_white"Работы\n"c_server"3 | "c_white"Спавны новичков\n"c_server"4 | "c_white"Центры лицензирования\n"c_server"5 | "c_white"Важные места\n"c_server"6 | "c_white"Транспорт", !"Выбрать", !"Закрыть");
}

callback: get_callback(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	
	if(!rows) return SendClientMessage(playerid, col_white, !""scm_error"Данный аккаунт не найден в базе данных.");

	if(rows)
	{
		new gs_name[MAX_PLAYER_NAME], gs_increment, gs_regdate[26], gs_money, gs_bank, gs_level, gs_regip[16], gs_lastip[16], gs_lastdate[16], gs_donate, country[32], lastcountry[32], city[32], lastcity[32], provider[32], lastprovider[32], regmail[50];
		cache_get_field_content(0, "u_name", gs_name, sql_connection, MAX_PLAYER_NAME);
		cache_get_field_content(0, "u_ip_registration", gs_regip, sql_connection, MAX_PLAYER_NAME);
		cache_get_field_content(0, "u_last_ip", gs_lastip, sql_connection, MAX_PLAYER_NAME);
		cache_get_field_content(0, "u_date_registration", gs_regdate, sql_connection, MAX_PLAYER_NAME);
		cache_get_field_content(0, "u_last_date", gs_lastdate, sql_connection, MAX_PLAYER_NAME);

		gs_increment = cache_get_field_content_int(0, "u_id", sql_connection);
		gs_money = cache_get_field_content_int(0, "u_money", sql_connection);
		gs_level = cache_get_field_content_int(0, "u_level", sql_connection);
		gs_donate = cache_get_field_content_int(0, "u_donate", sql_connection);
		cache_get_field_content(0, "u_email", regmail, sql_connection);

		if(get_player_admin_level(gs_name) > 6) return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете просматривать данные гл. администрации.");

		GetIPCountry(gs_regip, country, sizeof(country));
		GetIPCountry(gs_lastip, lastcountry, sizeof(lastcountry));
		GetIPCity(gs_regip, city, sizeof(city));
		GetIPCity(gs_lastip, lastcity, sizeof(lastcity));
		GetIPISP(gs_regip, provider, sizeof(provider));
		GetIPISP(gs_lastip, lastprovider, sizeof(lastprovider));

		global_string[0] = EOS;
		new pvar_string[16];

		if(gs_money > 1800000000 || gs_money < -1800000000) gs_money = 1800000000;
		if(gs_bank > 1800000000 || gs_bank < -1800000000) gs_money = 1800000000;

		strcat(global_string, ""c_server"Информация о игроке:");

		strcat(global_string, "\n\n"c_white"Номер аккаунта: "c_silver"");
		valstr(pvar_string, gs_increment);
		strcat(global_string, pvar_string);
		strcat(global_string, "\n"c_white"Наличные: "c_green"");
		valstr(pvar_string, gs_money);
		strcat(global_string, pvar_string);
		strcat(global_string, "$");
		strcat(global_string, "\n"c_white"Основной счёт: "c_green"");
		valstr(pvar_string, gs_bank);
		strcat(global_string, pvar_string);
		strcat(global_string, "$");
		strcat(global_string, "\n"c_white"Уровень: ");
		valstr(pvar_string, gs_level);
		strcat(global_string, pvar_string);
		strcat(global_string, "\n"c_white"Донат: ");
		valstr(pvar_string, gs_donate);
		strcat(global_string, pvar_string);
		strcat(global_string, "\n"c_white"Почта: ");
		strcat(global_string, isnull(regmail) ? "не указан" : regmail);

		strcat(global_string, "\n\n"c_server"Открытые счета:");

		new bank_count = 0, query_string[156];
		format(query_string, sizeof(query_string), "SELECT * FROM `deposit_boxes` WHERE `db_owner`='%d' LIMIT 10", gs_increment);
		mysql_query(sql_connection, query_string);

		new Cache:result = mysql_query(sql_connection, query_string);
		bank_count = cache_num_rows();
		
		if(bank_count)
		{
			for(new j = 0; j < bank_count; j++)
			{
				new _db_id, _db_money;
				_db_id = cache_get_field_content_int(j, "db_id", sql_connection);
				_db_money = cache_get_field_content_int(j, "db_money", sql_connection);

				if(_db_money > 1800000000 || _db_money < -1800000000) _db_money = 1800000000;

				new _db_name[32];
				cache_get_field_content(j, "db_name", _db_name, sql_connection, 32);

				strcat(global_string, "\n"c_white"");
				strcat(global_string, _db_name);

				strcat(global_string, "[№");
				valstr(pvar_string, _db_id);
				strcat(global_string, pvar_string);
				strcat(global_string, "] -");
				strcat(global_string, ""c_green"");
				valstr(pvar_string, _db_money);
				strcat(global_string, pvar_string);
				strcat(global_string, "$");
			}
		}
		else strcat(global_string, "\n"scm_error"У игрока нет открытых банковских счетов.");
		cache_delete(result);

		strcat(global_string, "\n\n"c_white"IP адрес(регист.): "c_server"");
		strcat(global_string, gs_regip);
		strcat(global_string, "\n"c_white"IP адрес(послед.): "c_server"");
		strcat(global_string, gs_lastip);

		strcat(global_string, "\n\n"c_white"Дата регистрации: "c_server"");
		strcat(global_string, gs_regdate);
		strcat(global_string, "\n"c_white"Дата послед. пребывания: "c_server"");
		strcat(global_string, gs_lastdate);

		strcat(global_string, "\n\n"c_server"Техническая информация игрока:");

		strcat(global_string, "\n\n"c_white"Страна при регистрации: "c_server" ");
		strcat(global_string, country);
		strcat(global_string, "\n"c_white"Страна при последнем входе: "c_server"");
		strcat(global_string, lastcountry);
		strcat(global_string, "\n"c_white"Город при регистрации: "c_server"");
		strcat(global_string, city);
		strcat(global_string, "\n"c_white"Город при последнем входе: "c_server"");
		strcat(global_string, lastcity);
		strcat(global_string, "\n"c_white"Провайдер при регистрации: "c_server"");
		strcat(global_string, provider);
		strcat(global_string, "\n"c_white"Провайдер при последнем входе: "c_server"");
		strcat(global_string, lastprovider);

		new header_string[45];
		format(header_string, sizeof(header_string), ""scm_dialog"%s", gs_name);
		show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, header_string, global_string, "Закрыть", "");

		if(PlayerInfo[playerid][admin] < 7)
		{
			new text_string[128];
			format(text_string, sizeof(text_string), ""c_server"* A.INFO:"c_grey" %s[%d] просматривает информацию о игроке %s", PlayerInfo[playerid][name], playerid, gs_name);
			foreach(new i: admin_players) SendClientMessage(i, col_gray, text_string);
		}
	}
	return 1;
}

cmd:ban(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "uds[42]", params[0], params[1], params[2])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /ban [ид/имя] [кол-во дней] [причина]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[1] < 1 || params[1] > 30) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Разрешено банить только от 1 до 30 дней.");

    if(PlayerInfo[params[0]][admin] >= 5) return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете выдать ему наказание.");

	new scm_string[248];
	format(scm_string, 144, "Администратор %s забанил игрока %s на %d дней. Причина: %s", PlayerInfo[playerid][name], PlayerInfo[params[0]][name], params[1], params[2]);
	foreach(new i: logged_players) if(PlayerInfo[i][settings][2]) SendClientMessage(i, col_light_red, scm_string);

	format(scm_string, 144, ""c_server"* A.INFO: %s[%d] на %d дней. Причина: %s | IP: %s", PlayerInfo[params[0]][name], params[0], params[1], params[2], p_t_info[params[0]][p_ip]);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, scm_string);

	format(scm_string, sizeof(scm_string ), "INSERT INTO `users_bans` (`u_b_admin`,`u_b_name`,`u_b_reason`,`u_b_date`,`u_b_ndate`,`u_b_days`) VALUES ('%s', '%s', '%s', NOW() + INTERVAL %d DAY,NOW(),'%d')", PlayerInfo[playerid][name], PlayerInfo[params[0]][name], params[2], params[1], params[1]);
	mysql_tquery(sql_connection, scm_string);

	format(scm_string,sizeof(scm_string),"UPDATE `users_admins` SET `u_a_bans` = `u_a_bans`+1 WHERE `u_a_name` = '%s' LIMIT 1", PlayerInfo[playerid][name]);
	mysql_tquery(sql_connection, scm_string, "", "");

	format(scm_string, 106, "SELECT * FROM `users_bans` WHERE `u_b_name` = '%s' AND `u_b_date` > NOW()LIMIT 1", PlayerInfo[params[0]][name]);
	mysql_function_query(sql_connection, scm_string, true, "check_player_banned", "i", params[0]);

 	return 1;
}

cmd:jail(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2)
		return 1;
	if(sscanf(params, "uds[42]", params[0], params[1], params[2]))
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /jail [ид/имя] [минуты] [причина]");
	if(!IsPlayerConnected(params[0]))
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[1] < 1 || params[1] > 180)
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Время заключения должно составлять от 1 до 180 минут.");
	if(PlayerInfo[params[0]][jailed] > 0)
	    return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок уже в jail!");
	    
	new scm_string[248];
	
	format(scm_string, 144, "Администратор %s посадил %s в деморган на %d минут. Причина: %s", PlayerInfo[playerid][name], PlayerInfo[params[0]][name], params[1], params[2]);
	foreach(new i: logged_players) if(PlayerInfo[i][settings][2]) SendClientMessage(i, col_light_red, scm_string);


	format(scm_string, 144, "Администратор %s поместил Вас в деморган на %d минут. Причина: %s", PlayerInfo[playerid][name], params[1], params[2]);
	SendClientMessage(params[0], col_light_red, scm_string);

	format(scm_string,sizeof(scm_string),"UPDATE `users_admins` SET `u_a_jails` = `u_a_jails`+1 WHERE `u_a_name` = '%s' LIMIT 1", PlayerInfo[playerid][name]);
	mysql_tquery(sql_connection, scm_string, "", "");

	PlayerInfo[params[0]][jailed] = params[1]* 60;
	PlayerInfo[params[0]][jail] = 10;
	set_pos(params[0], 217.9972, 3082.9668, 658.7508, 268.2277, 2, 15);
	reset_player_weapon(params[0]);

	update_int_sql(params[0], "u_jail", PlayerInfo[params[0]][jail]);
	return 1;
}
cmd:unjail(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2)
		return 1;
	if(sscanf(params, "us[32]", params[0], params[1]))
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /unjail [ид/имя] [причина]");

	if(strval(params[1]) > 32) return SendClientMessage(playerid, col_white, !""scm_error"Слишком длинная причина.");
		
	if(!IsPlayerConnected(params[0]))
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(PlayerInfo[params[0]][jailed] == 0)
	    return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У игрока нет jail!");
	    
	new scm_string[248];
	format(scm_string, sizeof(scm_string), "Администратор %s выпустил %s из тюрьмы. Причина: %s.", PlayerInfo[playerid][name], PlayerInfo[params[0]][name], params[1]);
	foreach(new i: logged_players) SendClientMessage(i, col_light_red, scm_string);

	PlayerInfo[params[0]][jailed] = 0;
	PlayerInfo[params[0]][jail] = 0;

	SpawnPlayer(params[0]);

	update_int_sql(params[0], "u_jail", PlayerInfo[params[0]][jail]);
	return 1;
}

cmd:offjail(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	new
		jname[MAX_PLAYER_NAME],
		jtime,
		reason[32];
		
	if(sscanf(params, "s[24]ds[32]", jname, jtime, reason)) return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /offjail [имя игрока] [минуты] [причина]");
	if(!(0 < jtime <= 180)) return SendClientMessage(playerid, col_white, !""scm_error"Время заключения не должно быть меньше 1 и больше 180 минут.");

	new player = GetPlayerID(jname);

	if(IsPlayerConnected(player)) return SendClientMessage(playerid, col_white, !""scm_error"В данный момент игрок в сети, используйте: /jail.");

	new sql_string[50 + MAX_PLAYER_NAME];
	format(sql_string, sizeof sql_string, "SELECT * FROM `users` WHERE `u_name` = '%s' LIMIT 1", jname);
	mysql_tquery(sql_connection, sql_string, "offjail_check_callback", "isds", playerid, jname, jtime, reason);
	return 1;
}

cmd:offban(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	new offb_reason[42],
			offb_name[24],
			offb_day;


	if(sscanf(params, "s[24]ds[42]", offb_name, offb_day, offb_reason)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /offban [имя] [кол-во дней] [причина]");
	if(offb_day < 1 || offb_day > 30) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Разрешено банить только от 1 до 30 дней.");

	new scm_string[128];
	format(scm_string, sizeof(scm_string ), "SELECT * FROM `users` WHERE `u_name` = '%s' LIMIT 1", offb_name);
	mysql_tquery(sql_connection, scm_string, "offban_check_callback", "isds", playerid, offb_name, offb_day, offb_reason);
 	return 1;
}


cmd:sban(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	if(sscanf(params, "uds[32]", params[0], params[1], params[2])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /sban [ид] [кол-во дней] [причина]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[1] < 1 || params[1] > 30) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Разрешено банить только от 1 до 30 дней.");

	new scm_string[248];

	format(scm_string, 144, ""c_server"* A.INFO: "c_grey"%s[%d] выдал тихий бан игроку %s[%d] на %d дней. Причина: %s", PlayerInfo[playerid][name], playerid, PlayerInfo[params[0]][name], params[0], params[1], params[2]);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, scm_string);

	mysql_format(sql_connection, scm_string, sizeof(scm_string ), "INSERT INTO `users_bans` (`u_b_admin`,`u_b_name`,`u_b_reason`,`u_b_date`,`u_b_ndate`,`u_b_days`) VALUES ('%s', '%s', '%e', NOW() + INTERVAL %d DAY,NOW(),'%d')", PlayerInfo[playerid][name], PlayerInfo[params[0]][name], params[2], params[1], params[1]);
	mysql_tquery(sql_connection, scm_string, "", "");

	format(scm_string, 106, "SELECT * FROM `users_bans` WHERE `u_b_name` = '%s' AND `u_b_date` > NOW()LIMIT 1", PlayerInfo[params[0]][name]);
	mysql_function_query(sql_connection, scm_string, true, "check_player_banned", "i", params[0]);

 	return 1;
}


cmd:weather(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 5) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /weather [ид]");
	if(params[0] < 0|| params[0] > 45) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"ID Погоды не может быть меньше 0 и больше 45.");
	global_weather = params[0];
	SetWeather(params[0]);

	new scm_string[98];
	format(scm_string, 98, ""c_server"* A.INFO: "c_grey"%s[%d] сменил погоду на %d.", PlayerInfo[playerid][name], playerid, params[0]);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, scm_string);
	return 1;
}


cmd:deletegun(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /deletegun [радиус]");
	if(params[0] < 0 || params[0] > 70) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Радиус быть меньше 0 и больше 70.");

	new scm_string[128];
	format(scm_string, 128, ""c_server"* A.INFO: "c_grey"%s[%d] забрал оружие в радиусе %d метров вокруг себя.", PlayerInfo[playerid][name], playerid, params[0]);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, scm_string);

	foreach(new i:streamed_players[playerid])
	{
		if(IsPlayerInRangeOfPoint(i, Float:params[0], p_t_info[i][p_pos][0], p_t_info[i][p_pos][1], p_t_info[i][p_pos][2]) && GetPlayerVirtualWorld(i) ==  GetPlayerVirtualWorld(playerid))
		{
			p_t_info[i][p_gun_immune_time] = 4;
			reset_player_weapon(i);
		}
	}
	return 1;
}

cmd:unban(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "s[24]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте:/unban [Имя]");
	new query_string[144];
	mysql_format(sql_connection, query_string, sizeof(query_string ), "SELECT `u_b_name` FROM `users_bans` WHERE `u_b_name` = '%s' LIMIT 1", params[0]);
	mysql_tquery(sql_connection, query_string, "unban_callback", "is", playerid, params[0]);
	return 1;
}

cmd:plveh(playerid, params[])
{
    if(PlayerInfo[playerid][admin] < 4) return 1;

	extract params -> new player:tid, vehicle_id, color_1, color_2; else return SendClientMessage(playerid, col_gray, !"Используйте: "c_white"/plveh [id игрока] [id транспорта] [цвет 1] [цвет 2]");
	if(!(400 < vehicle_id < 611) || !(0 < color_1 < 255) || !(0 < color_2 < 255)) return SendClientMessage(playerid, col_gray, !"Используйте: "c_white"/plveh [id игрока] [id транспорта] [цвет 1] [цвет 2]");

	if(GetPVarInt(tid, !"admin_vehicle")) return SendClientMessage(playerid, col_white, !"Для данного игрока уже был создан временный автомобиль. Удалите для начала командой /delveh");

	new Float:pl_pos_X, Float:pl_pos_Y, Float:pl_pos_Z;
	GetPlayerPos(tid, pl_pos_X, pl_pos_Y, pl_pos_Z);
	new adm_veh = CreateVehicle(vehicle_id, pl_pos_X, pl_pos_Y, pl_pos_Z, 0.0, color_1, color_2, -1);
	SetPVarInt(tid, !"admin_vehicle", adm_veh);

	veh_info[adm_veh -1][v_fuel] = 100.0;

	LinkVehicleToInterior(adm_veh, GetPlayerInterior(playerid));
	SetVehicleVirtualWorld(adm_veh, GetPlayerVirtualWorld(playerid));

	PutPlayerInVehicle(tid, adm_veh, 0);
	SetPlayerArmedWeapon(tid, 0);

	new text_string[128];
	format(text_string, sizeof(text_string), ""c_server"* A.INFO:"c_grey" %s[%d] создал транспорт для %s[%d]. ID: %d | Model: %d", PlayerInfo[playerid][name], playerid, PlayerInfo[tid][name], tid, adm_veh, vehicle_id);
	foreach(new i: admin_players) SendClientMessage(i, col_white, text_string);

	if(playerid != tid) SendClientMessage(tid, col_green, !"Администратор выдал вам машину");
	return true;
}

cmd:delveh(playerid, params[])
{
    if(PlayerInfo[playerid][admin] < 4) return 1;

	extract params -> new player:tid; else return SendClientMessage(playerid, col_gray, !"Используйте: "c_white"/delveh [id игрока]");
	if(!GetPVarInt(tid, !"admin_vehicle")) return SendClientMessage(playerid, col_white, !""scm_error"Для данного игрока не была создана машина");

	new veh_id = GetPVarInt(tid, !"admin_vehicle");
	DestroyVehicle(veh_id);

	new text_string[128];
	format(text_string, sizeof(text_string), ""c_server"* A.INFO: "c_grey"%s[%d] удалил транспорт %s[%d]. ID: %d", PlayerInfo[playerid][name], playerid, PlayerInfo[tid][name], tid, veh_id);
	foreach(new i: admin_players) SendClientMessage(i, col_white, text_string);

	if(playerid != tid) SendClientMessage(tid, col_gray, "Администратор удалил вашу машину");

	return DeletePVar(playerid, !"admin_vehicle");
}

alias:clearchat("cc");
cmd:clearchat(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	for(new i = 0; i < 56; i ++)SendClientMessageToAll(col_white, " ");
	foreach(new i: logged_players) if(PlayerInfo[i][settings][2]) SendClientMessage(i, col_light_red, "Чат был очищен администрацией.");
	new scm_string[76 + MAX_PLAYER_NAME];
	format(scm_string, sizeof(scm_string ), ""c_server"* A.INFO: "c_grey"Администратор %s очистил чат.", PlayerInfo[playerid][name]);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, scm_string);
	return 1;
}

alias:admin("a");
cmd:admin(playerid, params[])
{
	if(!PlayerInfo[playerid][admin]) return 1;
	extract params -> new string:a_text[128]; else return SendClientMessage(playerid, col_gray, !"Используйте: "c_white"/a [текст]");

	new text_string[144];
	format(text_string, sizeof(text_string), "[A] %s[%d]: %s", PlayerInfo[playerid][name], playerid, a_text);
	foreach(new i: admin_players) SendClientMessage(i, 0x9ACD32AA, text_string);
	return 1;
}

cmd:stats(playerid, params[])
{
	if(!PlayerInfo[playerid][admin]) return 1;
	extract params -> new player:targetid; else return SendClientMessage(playerid, col_gray, !"Используйте: "c_white"/stats [id игрока]");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");

	return show_stats(targetid, playerid);
}

cmd:money(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /money [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");


	new sql_string[96];
	mysql_format(sql_connection, sql_string, 96, "SELECT * FROM `deposit_boxes` WHERE `db_owner` = '%d' LIMIT 3",
	PlayerInfo[params[0]][id]);
	mysql_tquery(sql_connection, sql_string, "cmd_money_callback", "ii", playerid, params[0]);

	return 1;
}


callback:cmd_money_callback(playerid, targetid)
{
	new rows, fields;
	cache_get_data(rows, fields);

	new _db_name[32],
		line_string[78];


	format(global_string, 136, "\
	"c_grey"Наличные -"c_white"%d$\n\
	"c_grey"Основной счёт -"c_white"%d$\n\n"c_server"Открытые счета\n", PlayerInfo[targetid][money], PlayerInfo[targetid][bank]);
	for(new j = 0; j < rows; j ++)
	{
		new _db_id = cache_get_field_content_int(j, "db_id", sql_connection);
		new _db_money = cache_get_field_content_int(j, "db_money", sql_connection);

		cache_get_field_content(j, "db_name", _db_name, sql_connection, 32);

		format(line_string, sizeof(line_string), ""c_grey"%s(№%d) -"c_white"%d$\n", _db_name, _db_id, _db_money);
		strcat(global_string, line_string);
	}
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Финансы игрока", global_string, "Закрыть", "");
	return 1;
}

cmd:moneylog(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /moneylog [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");


	new sql_string[136];
	mysql_format(sql_connection, sql_string, 136, "SELECT * FROM `money_logs` WHERE `name` = '%s' ORDER BY `money_logs`.`log_id` DESC LIMIT 25",
	PlayerInfo[params[0]][name]);
	mysql_tquery(sql_connection, sql_string, "cmd_moneylog_callback", "ii", playerid, params[0]);

	return 1;
}


cmd:offmoneylog(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	if(sscanf(params, "s[24]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /offmoneylog [имя]");


	new sql_string[136];
	mysql_format(sql_connection, sql_string, 136, "SELECT * FROM `money_logs` WHERE `name` = '%s' ORDER BY `money_logs`.`log_id` DESC LIMIT 25",
	params[0]);
	mysql_tquery(sql_connection, sql_string, "cmd_moneylog_callback", "is", playerid, params[0]);

	return 1;
}

callback:cmd_moneylog_callback(playerid, pl_name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Не найденно данных по передаче средств.");
	global_string[0] = EOS;
	for(new j = 0; j < rows; j ++)
	{
		new log_date[24], log_reason[48], log_from[20], log_money, line_string[108];

		log_money = cache_get_field_content_int(j, "money", sql_connection);

		cache_get_field_content(j, "from_name", log_from, sql_connection, 20);
		cache_get_field_content(j, "reason", log_reason, sql_connection, 48);
		cache_get_field_content(j, "date", log_date, sql_connection, 24);

		format(line_string, sizeof(line_string), ""c_white"%s\t%s\t%d$\t%s\n", log_date, log_from, log_money, log_reason);
		strcat(global_string, line_string);
	}
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"История финансов игрока", global_string, "Закрыть", "");
	return 1;
}

alias:ans("pm");

cmd:ans(playerid, params[])
{
	if(!PlayerInfo[playerid][admin]) return 1;
	extract params -> new player:targetid, string:ans_text[128]; else return SendClientMessage(playerid, col_gray, !"Используйте: "c_white"/ans [id игрока] [текст]");
	if(!IsPlayerConnected(targetid) || targetid == playerid) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");

    new text_string[144];
    format(text_string, sizeof(text_string), "Администратор %s:"c_white" %s", PlayerInfo[playerid][name], ans_text);
    SendClientMessage(targetid, 0xFF6347FF, text_string);

    format(text_string, sizeof(text_string), "Администратор %s[%i] для %s[%i]:"c_white" %s", PlayerInfo[playerid][name], playerid, PlayerInfo[targetid][name], targetid, ans_text);
    foreach(new i: admin_players) SendClientMessage(i, 0xFAAC58FF, text_string);

	return 1;
}

cmd:arep(playerid, params[])
{
    if(!PlayerInfo[playerid][admin]) return 1;

	new dialog_string[17 + (MAX_PLAYER_NAME -4) * 2 + 9 + 16],
	string[19 + MAX_PLAYER_NAME -3];
	global_string[0] = EOS;

	for(new i = 0; i < max_report; i++)
	{
		if(report_player[i] == -1) continue;
		if(isnull(global_string)) global_string = ""c_white"№\t"c_white"Отправитель\t"c_white"Статус\n";
		if(report_slot[i] != -1) string = ""c_yellow"Проверяет: ", strcat(string, PlayerInfo[report_slot[i]][name]);

		format(dialog_string, sizeof dialog_string, ""c_white"%d.\t%s\t%s\n", i, PlayerInfo[report_player[i]][name], (report_slot[i] == -1) ?
		""c_green"Ожидает обработки" : string);
		strcat(global_string, dialog_string);
		string[0] = EOS;
	}

	if(!isnull(global_string)) show_dialog(playerid, d_reports, DIALOG_STYLE_TABLIST_HEADERS, !""scm_dialog"Список репортов", global_string, !"Обработать", !"Закрыть");
    else SendClientMessage(playerid, col_white, !""scm_error"На данный момент репорт пуст.");

	return 1;
}

cmd:report(playerid)
{
    if(PlayerInfo[playerid][mute]) return SendClientMessage(playerid, col_white, !""scm_error"Доступ в чат заблокирован. Время до разблокировки: "c_server"/time");

    show_dialog(playerid, d_mm_request, DIALOG_STYLE_INPUT, !""scm_dialog"Связь с администрацией", !"\
    "c_white"Введите Вашу жалобу для администраторов (ID -Нарушение).\n\
    "c_yellow"Внимание: за сообщение не игрового характера выдается блокировка чата.", !"Отправить", !"Отмена");
    return 1;
}
alias:report("rep");

cmd:admins(playerid)
{
	if(!PlayerInfo[playerid][admin]) return 1;

	new count_admin;
	global_string[0] = EOS;
	foreach(new i: admin_players)
	{
		if(PlayerInfo[playerid][admin] > 5)
		{
			new line_string[85];
			format(line_string, sizeof(line_string), ""c_white"%s[%d] -%d-й уровень%s\n", PlayerInfo[i][name], i, PlayerInfo[i][admin], pl_afk_time[i] >= 3 ? (" "c_red"[AFK]") : (""));
			strcat(global_string, line_string);
			count_admin++;
		}
		else if(PlayerInfo[playerid][admin] < 6)
		{
			if(PlayerInfo[i][admin] > 6) continue;

			new line_string[85];
			format(line_string, sizeof(line_string), ""c_white"%s[%d] -%d-й уровень%s\n", PlayerInfo[i][name], i, PlayerInfo[i][admin], pl_afk_time[i] >= 3 ? (" "c_red"[AFK]") : (""));
			strcat(global_string, line_string);
			count_admin++;
		}
	}
	if(count_admin > 0)
	{
	    show_dialog(playerid, d_none, DIALOG_STYLE_LIST, !""scm_dialog"Список администрации", global_string, !"Закрыть", !"");

		new line_string[85];
		format(line_string, sizeof(line_string), "\nВ сети всего "c_gold"%d администратор(-а | -ов)", count_admin);
		strcat(global_string, line_string);
	}
	else SendClientMessage(playerid, col_white, !""scm_error"В данный момент нет администраторов в сети.");
    return 1;
}


cmd:makeadmin(playerid,params[])
{
    if(PlayerInfo[playerid][admin] < 6) return 1;
 	extract params -> new player:targetid; else return SendClientMessage(playerid, col_gray, !"Используйте: "c_white"/makeadmin [id игрока]");
	if(!IsPlayerConnected(targetid) || targetid == playerid) return SendClientMessage(playerid, col_gray, !"Игрок не найден.");
	if(PlayerInfo[targetid][admin] >= PlayerInfo[playerid][admin]) return SendClientMessage(playerid, col_gray, !"Вы не можете изменить уровень админки данного администратора");

	SetPVarInt(playerid, !"target_id", targetid);

	new header_string[45], body[13];
	global_string[0] = EOS;
	global_string = !""c_grey"Снять с должности администратора\n"c_white"";

	for(new i = 1; i < PlayerInfo[playerid][admin]; i++)
	{
		valstr(body, i);
		strcat(body, " уровень\n");
		strcat(global_string, body);
	}

	format(header_string, sizeof(header_string), ""scm_dialog"%s", PlayerInfo[targetid][name]);
	return show_dialog(playerid, d_makeadmin, DIALOG_STYLE_LIST, header_string, global_string, !"Далее", !"Отмена");
}

callback: makeadmin_callback(playerid, targetid, admin_level)
{
	new rows, fields;
	cache_get_data(rows, fields);

	if(admin_level >= PlayerInfo[playerid][admin]) return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете изменить уровень данного администратора.");

	if(!rows)
	{
		if(admin_level == 0) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не является администратором.");
		else
		{
			if(PlayerInfo[playerid][admin] == admin_level) return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете выдать такой же уровень, как и у Вас.");

			new query_string[144];
			format(query_string, sizeof(query_string), "INSERT INTO `users_admins`(`u_a_name`,`u_a_level`,`u_a_date`) VALUES ('%s','%d', NOW())", PlayerInfo[targetid][name], admin_level);
			mysql_query(sql_connection, query_string);

			format(query_string, sizeof(query_string), ""scm_info"Вы назначили "c_server"%s"c_white" на %d уровень администратора", PlayerInfo[targetid][name], admin_level);
			SendClientMessage(playerid, col_white, query_string);

			format(query_string, sizeof(query_string), ""scm_info"Администратор "c_server"%s"c_white" назначил Вас на %d уровень администратора", PlayerInfo[playerid][name], admin_level);
			SendClientMessage(targetid, col_white, query_string);
			SendClientMessage(targetid, col_white, !""scm_info"Используйте "c_gold"/alogin"c_white" для авторизации в панели администратора");
		}
	}
	else
	{
		if(admin_level == 0)
		{
			new query_string[148];
			format(query_string, sizeof(query_string), "DELETE FROM `users_admins` WHERE `u_a_name`='%s' LIMIT 1", PlayerInfo[targetid][name]);
			mysql_query(sql_connection, query_string);

			if(PlayerInfo[targetid][admin] != 0)
			{
				PlayerInfo[targetid][admin] = 0;
				Iter_Remove(admin_players, targetid);
			}

			format(query_string, sizeof(query_string), ""scm_info"Вы сняли "c_server"%s"c_white" с должности администратора", PlayerInfo[targetid][name]);
			SendClientMessage(playerid, col_white, query_string);
		}
		else
		{
			if(PlayerInfo[playerid][admin] == admin_level) return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете выдать такой же уровень, как и у Вас.");

			new query_string[128];
			format(query_string, sizeof(query_string), "UPDATE `users_admins` SET `u_a_level`='%d' WHERE `u_a_name`='%s' LIMIT 1", admin_level, PlayerInfo[targetid][name]);
			mysql_query(sql_connection, query_string);

			PlayerInfo[targetid][admin] = admin_level;

			format(query_string, sizeof(query_string), ""scm_info"Вы назначили "c_server"%s"c_white" на %d уровень администратора", PlayerInfo[targetid][name], admin_level);
			SendClientMessage(playerid, col_white, query_string);

			format(query_string, sizeof(query_string), ""scm_info"Администратор "c_server"%s"c_white" назначил Вас на %d уровень администратора", PlayerInfo[playerid][name], admin_level);
			SendClientMessage(targetid, col_white, query_string);
		}
	}
	return 1;
}


CMD:ahelp(playerid)
{
	if(!PlayerInfo[playerid][admin]) return 1;

	if(PlayerInfo[playerid][admin] == 1) show_dialog(playerid, d_ahelp, DIALOG_STYLE_LIST, !""scm_dialog"Команды администратора", !"1 уровень", !"Выбрать", !"Закрыть");
	else if(PlayerInfo[playerid][admin] == 2) show_dialog(playerid, d_ahelp, DIALOG_STYLE_LIST, !""scm_dialog"Команды администратора", !"1 уровень\n2 уровень", !"Выбрать", !"Закрыть");
	else if(PlayerInfo[playerid][admin] == 3) show_dialog(playerid, d_ahelp, DIALOG_STYLE_LIST, !""scm_dialog"Команды администратора", !"1 уровень\n2 уровень\n3 уровень", !"Выбрать", !"Закрыть");
	else if(PlayerInfo[playerid][admin] == 4) show_dialog(playerid, d_ahelp, DIALOG_STYLE_LIST, !""scm_dialog"Команды администратора", !"1 уровень\n2 уровень\n3 уровень\n4 уровень", !"Выбрать", !"Закрыть");
	else if(PlayerInfo[playerid][admin] == 5) show_dialog(playerid, d_ahelp, DIALOG_STYLE_LIST, !""scm_dialog"Команды администратора", !"1 уровень\n2 уровень\n3 уровень\n4 уровень\n5 уровень", !"Выбрать", !"Закрыть");
	else if(PlayerInfo[playerid][admin] == 6) show_dialog(playerid, d_ahelp, DIALOG_STYLE_LIST, !""scm_dialog"Команды администратора", !"1 уровень\n2 уровень\n3 уровень\n4 уровень\n5 уровень\n6 уровень", !"Выбрать", !"Закрыть");
	else if(PlayerInfo[playerid][admin] == 7) show_dialog(playerid, d_ahelp, DIALOG_STYLE_LIST, !""scm_dialog"Команды администратора", !"1 уровень\n2 уровень\n3 уровень\n4 уровень\n5 уровень\n6 уровень\n7 уровень", !"Выбрать", !"Закрыть");
	else if(PlayerInfo[playerid][admin] == 8) show_dialog(playerid, d_ahelp, DIALOG_STYLE_LIST, !""scm_dialog"Команды администратора", !"1 уровень\n2 уровень\n3 уровень\n4 уровень\n5 уровень\n6 уровень\n7 уровень\n8 уровень", !"Выбрать", !"Закрыть");
	return 1;
}

CMD:zonestatus(playerid) {
	if(PlayerInfo[playerid][job] != 7) return SendClientMessage(playerid, -1, "Вы не работаете косильщиком");
	static const f_str[] =
"Зона\t\t\tПрогресс\n\
"c_server"1 | "c_white"Зона таксопарк Лос-Сантос\t\t\t"c_server"[%d / 33]\n\
"c_server"2 | "c_white"Зона пляж Verona Beach\t\t\t"c_server"[%d / 46]\n\
"c_server"3 | "c_white"Зона больница Лос-Сантос\t\t\t"c_server"[%d / 37]\n\
"c_server"4 | "c_white"Зона мэрия Лос-Сантос\t\t\t"c_server"[%d / 49]\n\
"c_server"5 | "c_white"Зона Глен-парк №1\t\t\t"c_server"[%d / 95]\n\
"c_server"6 | "c_white"Зона Глен-парк №2\t\t\t"c_server"[%d / 80]";
    new string[sizeof(f_str) + 20];
    format(string, sizeof(string), f_str, check_taxi_park, check_verona_beach, check_medic_ls, check_mayor_ls,check_glenpark_1,check_glenpark_2);
    show_dialog(playerid, d_job_gazon_2, DIALOG_STYLE_TABLIST_HEADERS, ""scm_dialog"Зоны для скашивания", string, "Выбрать","Закрыть");
    return 1;

}

/*CMD:tesqt(playerid, params[])
{
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "/tesqt [1]");
    foreach(new i: logged_players)
    {
        if(check_taxi_park > 10 || check_verona_beach > 10 || check_medic_ls > 10 || check_mayor_ls > 10 || check_glenpark_1 > 10 || check_glenpark_2 > 10)
		{
        	if(PlayerInfo[i][job] == 7) SendClientMessage(i, -1, ""c_server"* S.INFO: "c_grey"В штате снова выросла трава.");
		}
	}
    if(check_taxi_park > 10 || check_verona_beach > 10 || check_medic_ls > 10 || check_mayor_ls > 10 || check_glenpark_1 > 10 || check_glenpark_2 > 10)
    {
	    check_taxi_park = 0;
	    check_verona_beach = 0;
	    check_medic_ls = 0;
	    check_mayor_ls = 0;
	    check_glenpark_1 = 0;
	    check_glenpark_2 = 0;

        for(new i = 0; i < sizeof(object_park_ls); i++) {
        	DestroyDynamicObject(object_park_ls[i]);
	        object_park_ls[i] = CreateDynamicObject(14468, check_job_mower[i][0], check_job_mower[i][1], check_job_mower[i][2], check_job_mower[i][3],
			check_job_mower[i][4], check_job_mower[i][5], -1, -1);
	        status_check_job_mower[i] = false;
   			status_restore_check_job_mower[i] = false;
		}
	}
	return 1;
}*/

CMD:givedonate(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /givedonate [ид] [кол-во доната]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[1] < 1 || params[1] > 1000) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Кол-во доната должно быть от 1 до 1000.");
	give_donate(params[0], params[1]);
	new text_string[120];
	format(text_string, sizeof(text_string), ""c_server"* S.INFO: "c_grey"Администратор %s[%d] выдал вам донат в размере %d \"E-COINS\"", PlayerInfo[playerid][name], playerid, params[1]);
	SendClientMessage(params[0], -1, text_string);
	format(text_string, sizeof(text_string), ""c_server"* S.INFO: "c_grey"Вы выдали донат в размере %d \"E-COINS\" игроку %s[%d]", params[1], PlayerInfo[params[0]][name], params[0]);
	SendClientMessage(params[0], -1, text_string);
	format(text_string, sizeof(text_string), ""c_server"* A.INFO: "c_grey"%s[%d] выдал %d \"E-COINS\" игроку %s[%d]", PlayerInfo[playerid][name], playerid, params[1], PlayerInfo[params[0]][name], params[0]);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, text_string);
	insert_donate_log(playerid, params[0], params[1]);
	return 1;
}

CMD:aradar(playerid, params[])
{
	if(PlayerInfo[playerid][admin] != 8) return 1;
    if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /aradar [макс. скорость]");
    new Float:X, Float:Y, Float:Z;
    SetPVarInt(playerid, "addrad", 1);
    SetPVarInt(playerid, "speed", params[0]);
    GetPlayerPos(playerid, X, Y, Z);
    TOTALRADAR++;
    RadarInfo[TOTALRADAR][rObj] = CreateObject(18880, X+1, Y+1, Z+1, 0.0,0.0,0.0);
    EditObject(playerid, RadarInfo[TOTALRADAR][rObj]);
    return true;
}

CMD:saveall(playerid)
{
	if(PlayerInfo[playerid][admin] != 8) return 1;
	new _sql_string[156];

	format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '1' LIMIT 1", dorm_count[DORM_SAWMILL]);
	mysql_query(sql_connection, _sql_string);

	format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '2' LIMIT 1", dorm_count[DORM_MINE]);
	mysql_query(sql_connection, _sql_string);

	format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '3' LIMIT 1", dorm_count[DORM_FACTORY_GUNS]);
	mysql_query(sql_connection, _sql_string);

	format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '4' LIMIT 1", mine_count[MINE_MELTED]);
	mysql_query(sql_connection, _sql_string);

	format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '5' LIMIT 1", mine_count[MINE_UNMELTED]);
	mysql_query(sql_connection, _sql_string);

	format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '6' LIMIT 1", dorm_count[DORM_FACTORY_MINE]);
	mysql_query(sql_connection, _sql_string);

	format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '7' LIMIT 1", dorm_count[DORM_FACTORY_WOOD]);
	mysql_query(sql_connection, _sql_string);

	format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '8' LIMIT 1", election_status);
	mysql_query(sql_connection, _sql_string);

	for(new h = 0; h < house_count; h ++)
	{
		format(_sql_string, 112, "UPDATE `houses` SET `h_seed` = '%d',`h_seed_result` = '%d' WHERE `h_id` = '%d' LIMIT 1", h_info[h][h_seed], h_info[h][h_seed_result], h_info[h][h_id]);
		mysql_query(sql_connection, _sql_string);
	}

	for(new t = 0; t < b_count; t ++)
	{
		format(_sql_string, 156, "UPDATE `businesses` SET `b_product` = '%d',`b_cost` = '%d',`b_money` = '%d' WHERE `b_id` = '%d' LIMIT 1",
		b_info[t][b_product], b_info[t][b_cost], b_info[t][b_money], b_info[t][b_id]);
		mysql_query(sql_connection, _sql_string);
	}
	new scm_string[76 + MAX_PLAYER_NAME];
	format(scm_string, sizeof(scm_string ), ""c_server"* A.INFO: "c_grey"Администратор %s сохранил всю информацию сервера.", PlayerInfo[playerid][name]);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, scm_string);
	return 1;
}

cmd:rr(playerid)
{
	if(PlayerInfo[playerid][admin] < 8) return 1;

	SendClientMessageToAll(col_yellow, "Происходит технический рестарт сервера. Процесс займет несколько секунд.");
	for(new i = 0; i < MAX_PLAYERS; i ++)
	{
		kick_player(i);
	}

	new _sql_string[156];

	format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '1' LIMIT 1", dorm_count[DORM_SAWMILL]);
	mysql_query(sql_connection, _sql_string);

	format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '2' LIMIT 1", dorm_count[DORM_MINE]);
	mysql_query(sql_connection, _sql_string);

	format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '3' LIMIT 1", dorm_count[DORM_FACTORY_GUNS]);
	mysql_query(sql_connection, _sql_string);

	format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '4' LIMIT 1", mine_count[MINE_MELTED]);
	mysql_query(sql_connection, _sql_string);

	format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '5' LIMIT 1", mine_count[MINE_UNMELTED]);
	mysql_query(sql_connection, _sql_string);

	format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '6' LIMIT 1", dorm_count[DORM_FACTORY_MINE]);
	mysql_query(sql_connection, _sql_string);

	format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '7' LIMIT 1", dorm_count[DORM_FACTORY_WOOD]);
	mysql_query(sql_connection, _sql_string);

	format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '8' LIMIT 1", election_status);
	mysql_query(sql_connection, _sql_string);

	for(new h = 0; h < house_count; h ++)
	{
		format(_sql_string, 112, "UPDATE `houses` SET `h_seed` = '%d',`h_seed_result` = '%d' WHERE `h_id` = '%d' LIMIT 1", h_info[h][h_seed], h_info[h][h_seed_result], h_info[h][h_id]);
		mysql_query(sql_connection, _sql_string);

		format(_sql_string, 156, "UPDATE `users` SET `u_tax` = `u_tax`+'%d' WHERE `u_id` = '%d' LIMIT 1",
		floatround(h_info[h][h_price]/ 350), h_info[h][h_owner]);
		mysql_query(sql_connection, _sql_string);
	}

	for(new t = 0; t < b_count; t ++)
	{
/*		format(_sql_string, 112, "INSERT INTO `businesses_history` (`bh_date`,`bh_business`,`bh_count`) VALUES (NOW(),'%d','%d')",
		b_info[t][b_id], b_info[t][b_cash_today]);
		mysql_query(sql_connection, _sql_string);*/

		new business_tax = floatround((b_info[t][b_cash_today]/ 50)+(b_info[t][b_price]/ 150));
		if(b_info[t][b_improve][0]) business_tax = floatround((b_info[t][b_cash_today]/ 70)+(b_info[t][b_price]/ 250));



		format(_sql_string, 156, "UPDATE `users` SET `u_tax` = `u_tax`+'%d' WHERE `u_id` = '%d' LIMIT 1",
		business_tax, b_info[t][b_owner_inc]);
		mysql_query(sql_connection, _sql_string);

		b_info[t][b_cash_today] = 0;
		format(_sql_string, 156, "UPDATE `businesses` SET `b_product` = '%d',`b_cost` = '%d',`b_money` = '%d' WHERE `b_id` = '%d' LIMIT 1",
		b_info[t][b_product], b_info[t][b_cost], b_info[t][b_money], b_info[t][b_id]);
		mysql_query(sql_connection, _sql_string);
	}

	for(new j = 0; j < fraction_count; j ++)
	{
		format(_sql_string, 146, "UPDATE `fractions` SET `f_money` = '%d',`f_materials`='%d',`f_guns` = '%d' WHERE `f_id` = '%d' LIMIT 1",
		f_info[j][f_money], f_info[j][f_materials], f_info[j][f_guns], j + 1);
		mysql_tquery(sql_connection, _sql_string, "", "");
	}
	SendRconCommand("gmx");
	return 1;
}

cmd:spawn(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /spawn [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	set_health(params[0], 100);
	SpawnPlayer(params[0]);
	new scm_string[128];
	format(scm_string, sizeof(scm_string),""c_server"* S.INFO: "c_grey"Администратор %s[%i] вернул вас на спавн.", PlayerInfo[playerid][name], playerid);
	SendClientMessage(params[0], col_gray, scm_string);
	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] заспавнил %s[%d]", PlayerInfo[playerid][name], playerid, PlayerInfo[params[0]][name], params[0]);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);

	return 1;
}

cmd:spcartime(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_white, !""scm_error"Используйте: /spcartime [секунды]");
	
	if(params[0] < 0 || params[0] > 60) return SendClientMessage(playerid, col_white, !""scm_error"От 1 до 60 секунд.");
	
	new scm_string[128];
	format(scm_string, sizeof(scm_string), "* S.INFO: Уважаемые игроки, через %d секунд произойдет респавн незанятого транспорта.", params[0]);
 	foreach(new i: logged_players) SendClientMessage(i, 0xEBC826FF, scm_string);
 	
	params[0] = params[0]* 1000;
	
	SetTimerEx("spawn_cars", params[0], false, "i", playerid);
	
	return 1;
}
cmd:spcar(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Недостаточно полномочий.");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /spcar [радиус]");
	if(params[0] < 1 || params[0] > 5000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Запрещено ниже 1 и больше 5000.");

	for(new i = 0; i < MAX_VEHICLES; i++)
	{
		if(!IsValidVehicle(i)) continue;
		if(GetVehicleModel(i) ==  450) continue;

		new Float:v_pos_x,
			Float:v_pos_y,
			Float:v_pos_z;
		GetVehiclePos(i, v_pos_x, v_pos_y, v_pos_z);

		if(!IsPlayerInRangeOfPoint(playerid, params[0], v_pos_x, v_pos_y, v_pos_z)) continue;
		SetVehicleToRespawn(i);
	}
	new _t_string[120];
	format(_t_string, sizeof(_t_string), ""c_server"* A.INFO: "c_grey"Администратор %s обновил транспорт в радиусе %d м.", PlayerInfo[playerid][name], params[0]);
 	foreach(new i: admin_players)SendClientMessage(i, col_gray, _t_string);
	return 1;
}

cmd:spcarid(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return -1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /spcarid [ид авто]");
	if(params[0] < 1 || params[0] > MAX_VEHICLES) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Некорректный id транспорта.");
	if(!IsValidVehicle(params[0])) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Некорректный id транспорта.");
	if(is_vehicle_occupied(params[0]) != -1) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Нельзя заспавнить занятый авто.");
	SetVehicleToRespawn(params[0]);

	new _t_string[120];
	format(_t_string, sizeof(_t_string), ""c_server"* A.INFO: "c_grey"Администратор %s обновил транспорт | ID: %d", PlayerInfo[playerid][name], params[0]);
 	foreach(new i: admin_players)SendClientMessage(i, col_gray, _t_string);
	return 1;
}



cmd:okay(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /okay [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(GetString(change_name[params[0]], "none")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не оставлял заявку на смену никнейма.");

	new query_string[80 + MAX_PLAYER_NAME];
	format(query_string, sizeof query_string, "SELECT `u_id` FROM `users` WHERE `u_name` = '%s' LIMIT 1", change_name[params[0]]);
	mysql_tquery(sql_connection, query_string, "changename_callback", "ii", playerid, params[0]);

	return 1;
}

callback: changename_callback(playerid, rename_id)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Данный никнейм уже занят."), change_name[rename_id] = "none";


	if(SetPlayerName(rename_id, change_name[rename_id]) != 1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок с таким именем подключён к серверу."), change_name[rename_id] = "none";


	new sql_string[198];
	format(sql_string, sizeof(sql_string), "UPDATE `users` SET `u_name` = '%s' WHERE `u_id` = '%d' LIMIT 1", change_name[rename_id], PlayerInfo[rename_id][id]);
	mysql_tquery(sql_connection, sql_string);

	if(PlayerInfo[rename_id][admin] != 0)
	{
		format(sql_string, sizeof(sql_string), "UPDATE `users_admins` SET `u_a_name` = '%s' WHERE `u_a_name` = '%s' LIMIT 1", change_name[rename_id], PlayerInfo[rename_id][name]);
		mysql_tquery(sql_connection, sql_string);
	}
	format(sql_string, sizeof(sql_string), "UPDATE `fractions_blacklist` SET `bl_name` = '%s' WHERE `bl_name` = '%s'", change_name[rename_id], PlayerInfo[rename_id][name]);
	mysql_tquery(sql_connection, sql_string);
    if(PlayerInfo[rename_id][house] != -1)
    {
   		strmid(h_info[PlayerInfo[rename_id][house] -1][h_owner_name], change_name[rename_id], 0, strlen(change_name[rename_id]), 31);
		format(sql_string, 138, "UPDATE `houses` SET `h_ownername` = '%s' WHERE `h_id` = '%d' LIMIT 1", change_name[rename_id], PlayerInfo[rename_id][house]);
		mysql_tquery(sql_connection, sql_string);
	}
	if(PlayerInfo[rename_id][house] != -1)
    {
   		strmid(h_info[PlayerInfo[rename_id][house] -1][h_owner_name], change_name[rename_id], 0, strlen(change_name[rename_id]), 31);
		format(sql_string, 138, "UPDATE `businesses` SET `b_owner_name` = '%s' WHERE `b_id` = '%d' LIMIT 1", change_name[rename_id], PlayerInfo[rename_id][business]);
		mysql_tquery(sql_connection, sql_string);
	}
	format(sql_string, 98,""c_server"* S.INFO: "c_grey"Ваш никнейм был изменен на: "c_server"%s", change_name[rename_id]);
	SendClientMessage(rename_id, col_gray, sql_string);
	SendClientMessage(rename_id, col_gray, ""c_server"* S.INFO: "c_grey"Рекомендуем вам перезайти в игру с новым никнеймом.");
	format(sql_string, 132, ""c_server"* A.INFO: "c_grey"%s сменил никнейм на %s | Одобрил: %s", PlayerInfo[rename_id][name], change_name[rename_id], PlayerInfo[playerid][name]);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, sql_string);


	format(sql_string, 132, "<< %s сменил имя на %s >>", PlayerInfo[rename_id][name], change_name[rename_id]);
	foreach(new i: logged_players) if(PlayerInfo[i][settings][2]) SendClientMessage(i, col_light_red, sql_string);


	format(sql_string, sizeof(sql_string), "INSERT INTO `nickname_history` (`nh_owner`,`nh_oldname`,`nh_newname`,`nh_date`,`nh_admin`) VALUES ('%d','%s','%s',NOW(),'%s')",
	PlayerInfo[rename_id][id], PlayerInfo[rename_id][name], change_name[rename_id], PlayerInfo[playerid][name]);
	mysql_tquery(sql_connection, sql_string);


	SetPlayerName(rename_id, change_name[rename_id]);
	strmid(PlayerInfo[rename_id][name], change_name[rename_id], 0, strlen(change_name[rename_id]), 31);
//	kick_player(playerid);

	return 1;
}

cmd:namestore(playerid, params[])
{

	if(sscanf(params, "s[30]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /namestore [имя]");
	new query_string[80 + MAX_PLAYER_NAME];
	mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_id` FROM `users` WHERE `u_name` = '%e' LIMIT 1", params[0]);
	mysql_tquery(sql_connection, query_string, "namestore_callback", "i", playerid);

	return 1;
}


callback:namestore_callback(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок с данным никнеймом не найден в базе данных.");

	new db_increment = cache_get_field_content_int(0, "u_id", sql_connection);

	new query_string[80 + MAX_PLAYER_NAME];
	format(query_string, sizeof query_string, "SELECT * FROM `nickname_history` WHERE `nh_owner` = '%d'", db_increment);
	mysql_tquery(sql_connection, query_string, "_namestore_callback", "i", playerid);
	return 1;
}

callback:_namestore_callback(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"История никнеймов данного игрока пуста.");

	global_string[0] = EOS;
	strcat(global_string, "{cccc99}Старый никнейм -Новый никнейм -Дата изменения никнейма\n\n"c_white"");

	for(new j = 0; j < rows; j ++)
    {
		new _nh_oldname[MAX_PLAYER_NAME],
			_nh_newname[MAX_PLAYER_NAME],
			_nh_date[20],
			line_string[68];

		cache_get_field_content(j, "nh_oldname", _nh_oldname, sql_connection, MAX_PLAYER_NAME);
		cache_get_field_content(j, "nh_newname", _nh_newname, sql_connection, MAX_PLAYER_NAME);
		cache_get_field_content(j, "nh_date", _nh_date, sql_connection, 20);

		format(line_string, sizeof(line_string), "%s -%s -%s\n", _nh_oldname, _nh_newname, _nh_date);
		strcat(global_string, line_string);

	}
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, "{E3D18D}История никнеймов", global_string, "Закрыть", "");
	return 1;
}


cmd:anamestore(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2) return 1;


	if(sscanf(params, "s[30]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /anamestore [имя]");
	new query_string[80 + MAX_PLAYER_NAME];
	mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_id` FROM `users` WHERE `u_name` = '%e' LIMIT 1", params[0]);
	mysql_tquery(sql_connection, query_string, "anamestore_callback", "i", playerid);

	return 1;
}


callback:anamestore_callback(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок с данным никнеймом не найден в базе данных.");

	new db_increment = cache_get_field_content_int(0, "u_id", sql_connection);

	new query_string[80 + MAX_PLAYER_NAME];
	format(query_string, sizeof query_string, "SELECT * FROM `nickname_history` WHERE `nh_owner` = '%d'", db_increment);
	mysql_tquery(sql_connection, query_string, "_anamestore_callback", "i", playerid);
	return 1;
}

callback:_anamestore_callback(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"История никнеймов данного игрока пуста.");

	global_string[0] = EOS;
	strcat(global_string, "{cccc99}Старый никнейм -Новый никнейм -Дата изменения никнейма\n\n"c_white"");

	for(new j = 0; j < rows; j ++)
    {
		new _nh_oldname[MAX_PLAYER_NAME],
			_nh_newname[MAX_PLAYER_NAME],
			_nh_date[20],
			_nh_admin[MAX_PLAYER_NAME],
			line_string[82];

		cache_get_field_content(j, "nh_oldname", _nh_oldname, sql_connection, MAX_PLAYER_NAME);
		cache_get_field_content(j, "nh_newname", _nh_newname, sql_connection, MAX_PLAYER_NAME);
		cache_get_field_content(j, "nh_admin", _nh_admin, sql_connection, MAX_PLAYER_NAME);
		cache_get_field_content(j, "nh_date", _nh_date, sql_connection, 20);

		format(line_string, sizeof(line_string), "%s -%s -%s | Изменён %s\n", _nh_oldname, _nh_newname, _nh_date, _nh_admin);
		strcat(global_string, line_string);

	}
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, "{E3D18D}История никнеймов", global_string, "Закрыть", "");
	return 1;
}

cmd:goto(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2) return 1;
	extract params -> new player:targetid; else return SendClientMessage(playerid, col_gray, !"Используйте: "c_white"/goto [id игрока]");
	if(!IsPlayerConnected(targetid) || targetid == playerid) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");

	new Float:pl_pos_X, Float:pl_pos_Y, Float:pl_pos_Z;
	GetPlayerPos(targetid, pl_pos_X, pl_pos_Y, pl_pos_Z);
	set_pos(playerid, pl_pos_X + 2, pl_pos_Y, pl_pos_Z, 0.0, GetPlayerInterior(targetid), GetPlayerVirtualWorld(targetid));

	if(GetPVarInt(targetid, !"house_id") > 0) SetPVarInt(playerid, !"house_id", GetPVarInt(targetid, !"house_id"));
	if(GetPVarInt(targetid, !"island_id") > 0) SetPVarInt(playerid, !"island_id", GetPVarInt(targetid, !"island_id"));
	if(GetPVarInt(targetid, !"p_biz_id") > 0) SetPVarInt(playerid, !"p_biz_id", GetPVarInt(targetid, !"p_biz_id"));

	new text_string[120];
	format(text_string, sizeof(text_string), ""c_server"* A.INFO: "c_grey"%s[%d] телепортировался к игроку %s[%d]", PlayerInfo[playerid][name], playerid, PlayerInfo[targetid][name], targetid);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, text_string);
	return 1;
}

cmd:gotoveh(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /gotoveh [ид]");
	if(params[0] < 1 || params[0] > MAX_VEHICLES) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Автомобиль не найден.");
	new Float: veh_pos[3];
	GetVehiclePos(params[0], veh_pos[0], veh_pos[1],veh_pos[2]);
	veh_pos[0] += 2.0;
	set_pos(playerid, veh_pos[0], veh_pos[1], veh_pos[2], 90, 0, 0);
	new scm_string[86];
	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"Вы телепортировались к автомобилю | ID: %d", params[0]);
	SendClientMessage(playerid, col_gray, scm_string);
	return 1;
}

cmd:gethereveh(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /gethereveh [ид]");
	if(!IsValidVehicle(params[0])) return 0;
	new Float: veh_pos[3];
	GetPlayerPos(playerid, veh_pos[0], veh_pos[1],veh_pos[2]);

	SetVehicleVirtualWorld(params[0], GetPlayerVirtualWorld(playerid));
	SetVehiclePos(params[0], veh_pos[0] -4, veh_pos[1], veh_pos[2] + 1);

	new scm_string[82];
	format(scm_string, sizeof(scm_string),""c_server"* A.INFO: "c_grey"Вы телепортировали к себе автомобиль | ID: %d", params[0]);
	SendClientMessage(playerid, col_gray, scm_string);

	return 1;
}

cmd:gotobiz(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /gotobiz [ид]");
	if(params[0] < 1 || params[0] > b_count) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Бизнес не найден.");
	set_pos(playerid, b_info[params[0] -1][b_position][0], b_info[params[0] -1][b_position][1], b_info[params[0] -1][b_position][2], 90, 0, 0);
	new scm_string[82];
	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"Вы телепортировались к бизнесу | ID: %d", params[0]);
	SendClientMessage(playerid, col_gray, scm_string);
	return 1;
}
cmd:gotohouse(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /gotohouse [ид]");
	if(params[0] < 1 || params[0] > house_count) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Дом не найден.");
	set_pos(playerid, h_info[params[0] -1][h_pos][0], h_info[params[0] -1][h_pos][1], h_info[params[0] -1][h_pos][2], 90, 0, 0);
	new scm_string[82];
	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"Вы телепортировались к дому | ID: %d", params[0]);
	SendClientMessage(playerid, col_gray, scm_string);
	return 1;
}

cmd:gethere(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	extract params -> new player:targetid; else return SendClientMessage(playerid, col_gray, !"Используйте: "c_white"/gethere [id игрока]");
	if(!IsPlayerConnected(targetid) || targetid == playerid) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");
	if(p_t_info[targetid][p_pier_status] != 0) return SendClientMessage(playerid, col_white, !""scm_error"Данный игрок находится на корабле.");
	if(pl_afk_time[targetid] > 0) return SendClientMessage(playerid, col_white, !""scm_error"В данный момент игрок AFK.");

	new Float:pl_pos_X, Float:pl_pos_Y, Float:pl_pos_Z;
	GetPlayerPos(playerid, pl_pos_X, pl_pos_Y, pl_pos_Z);

	if(GetPlayerState(targetid) != PLAYER_STATE_DRIVER)
		set_pos(targetid, pl_pos_X, pl_pos_Y, pl_pos_Z, 90, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
	else
	{
		new vehicle = GetPlayerVehicleID(targetid);
		SetVehiclePos(vehicle, pl_pos_X, pl_pos_Y, pl_pos_Z);
		SetVehicleVirtualWorld(vehicle, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(vehicle, GetPlayerInterior(playerid));
	}

	new text_string[128];
	format(text_string, sizeof(text_string), ""scm_info"Администратор "c_server"%s"c_white" телепортировал Вас к себе.", PlayerInfo[playerid][name]);
	SendClientMessage(targetid, col_white, text_string);

	format(text_string, sizeof(text_string), ""c_server"* A.INFO: "c_grey"%s[%d] телепортировал к себе %s[%d]", PlayerInfo[playerid][name], playerid, PlayerInfo[targetid][name], targetid);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, text_string);
	return true;
}

cmd:agun(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "udd", params[0], params[1], params[2])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /agun [ид] [оружие] [патроны]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	give_weapon(params[0], params[1], params[2]);

	new scm_string[128];
	format(scm_string, sizeof(scm_string ),""c_server"* S.INFO: "c_grey"Администратор %s[%i] выдал Вам оружие #%i.", PlayerInfo[playerid][name], playerid, params[1]);
	SendClientMessage(params[0], col_white, scm_string);
	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] выдал оружие %d игроку %s[%d].", PlayerInfo[playerid][name], playerid, params[1], PlayerInfo[params[0]][name], params[0]);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);
	return 1;
}

cmd:gun(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /gun [оружие] [патроны]");
	give_weapon(playerid, params[0], params[1]);

	new scm_string[128];
	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] выдал себе оружие #%d.", PlayerInfo[playerid][name], playerid, params[0]);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);
	return 1;
}

cmd:resetweapon(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /resetweapon [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	new scm_string[96 + MAX_PLAYER_NAME];
	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s забрал у %s оружие", PlayerInfo[playerid][name], PlayerInfo[params[0]][name]);
	foreach(new i: admin_players)
	{
		if(PlayerInfo[playerid][admin] < 3) continue;
		SendClientMessage(i, col_gray, scm_string);
	}
 	reset_player_weapon(params[0]);
	return 1;
}

cmd:weapondata(playerid, params[])
{
	if(!PlayerInfo[playerid][admin]) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /weapondata [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");

	new pl_ammo, pl_gun, pl_slot = get_weapon_slot(GetPlayerWeapon(params[0]));
	GetPlayerWeaponData(playerid, pl_slot, pl_gun, pl_ammo);

	new scm_string[128];
	format(scm_string, sizeof(scm_string ),""c_server"%s"c_white"["c_server"%d"c_white"] | REAL DATA:"c_server"%d %d"c_white" | SERVER DATA:"c_server"%d %d", PlayerInfo[params[0]][name], params[0], pl_gun, pl_ammo, p_t_info[params[0]][p_gun_slot][pl_slot], p_t_info[params[0]][p_gun_ammo][pl_slot]);
	SendClientMessage(playerid, col_white, scm_string);
	return 1;
}

cmd:changeskin(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 6) return 1;
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /changeskin [ид] [скин]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[1] > 311 || params[1] < 1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Неверный номер скина.");
	new scm_string[128];
	format(scm_string, sizeof(scm_string ),""c_server"* S.INFO: "c_grey"Администратор %s выдал вам новый скин.", PlayerInfo[playerid][name]);
	SendClientMessage(params[0], col_gray, scm_string);
	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s выдал игроку %s постоянный скин %d", PlayerInfo[playerid][name], PlayerInfo[params[0]][name], params[1]);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);

	set_skin(params[0], params[1]);
	return 1;
}

cmd:skin(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /skin [ид] [скин]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[1] > 311 || params[1] < 1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Неверный номер скина.");

	new scm_string[128];
	format(scm_string, sizeof(scm_string ),""c_server"* S.INFO: "c_grey"Администратор %s[%i] выдал Вам временный скин #%i.", PlayerInfo[playerid][name], playerid, params[1]);
	SendClientMessage(params[0], col_gray, scm_string);
	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] выдал временный скин игроку %s[%d]", PlayerInfo[playerid][name], playerid, PlayerInfo[params[0]][name], params[0]);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);
	SetPlayerSkin(params[0], params[1]);
	return 1;
}

cmd:msg(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "s[108]", params[0])) return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /msg [текст]");
	new scm_string[144];
	format(scm_string, sizeof(scm_string ), "Администратор %s: %s ", PlayerInfo[playerid][name], params[0]);
	foreach(new i: logged_players) SendClientMessage(i, 0xEBC826FF, scm_string);
	return 1;
}
cmd:connections(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	if(sscanf(params,"u", params[0])) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Используйте: /connections [id/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");

	new sql_string[121];
	format(sql_string, sizeof sql_string, "SELECT * FROM `users_history` WHERE `uh_user` = '%d' ORDER BY `users_history`.`uh_id` DESC LIMIT 10", PlayerInfo[params[0]][id]);
	mysql_tquery(sql_connection, sql_string, "adminload_user_history", "i", playerid);
	return 1;
}

callback: adminload_user_history(playerid)
{
	new rows,
		fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		global_string[0] = EOS;

		for(new i = 0; i < 10; i ++)
		{
			new uh_ip[16],
				uh_date[22];

			new line_string[62];

			cache_get_field_content(i, "uh_ip", uh_ip, sql_connection, 16);
			cache_get_field_content(i, "uh_date", uh_date, sql_connection, 22);

			format(line_string, sizeof(line_string), ""c_white"%d."c_grey"\t%s\t%s\n",
															i + 1,
															uh_date,
															uh_ip);
			strcat(global_string, line_string);
		}
		show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, !""scm_dialog"История подключений", global_string, !"Назад", !"");
	}
	if(!rows)
	{
		SendClientMessage(playerid, col_white, !""scm_error"История подключений отсутствует, попробуйте позже.");
		return 1;
	}
	return 1;
}

cmd:fwarnoff(playerid, params[])
{
	if(!PlayerInfo[playerid][leader]) return 1;
	if(sscanf(params, "s[24]", params[0])) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Используйте: /fwarnoff [имя]");
	new scm_string[128];
	format(scm_string, sizeof(scm_string), "SELECT * FROM `users` WHERE `u_name` = '%s' AND `u_member` = '%d' LIMIT 1", params[0], PlayerInfo[playerid][member]);
	mysql_function_query(sql_connection, scm_string, true, "fwarnoff_check_callback", "is", playerid, params[0]);
	return 1;
}

callback: fwarnoff_check_callback(playerid, pl_name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		new scm_string[128];
		format(scm_string, sizeof(scm_string), ""c_orange_red"* "c_orange_red"Аккаунт %s не найден в базе данных.", pl_name);
		SendClientMessage(playerid, col_gray, scm_string);
		return 1;
	}
	else
	{
		new scm_string[138];
		new fwarns = 0;
		fwarns = cache_get_field_content_int(0, "u_f_warning", sql_connection);
		if(fwarns < 2)
		{
			format(scm_string, sizeof(scm_string ),""c_grey"Вы выдали выговор %s в оффлайне [%d/3].", pl_name, fwarns + 1);
			SendClientMessage(playerid, col_gray, scm_string);
			format(scm_string, sizeof(scm_string ), "UPDATE `users` SET `u_f_warning` = `u_f_warning` + '1' WHERE `u_name` = '%s' LIMIT 1", pl_name);
			mysql_query(sql_connection, scm_string);
		}
		else
		{
			format(scm_string, sizeof(scm_string), "UDPATE `users` SET `u_f_warning` = '0', `u_member` = '0', `u_rank` = '0' WHERE `u_name` = '%s' LIMIT 1", pl_name);
			mysql_query(sql_connection, scm_string);
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно увоолили игрока из организации.");
		}
		return 1;
	}
}

cmd:offuninvite(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4 && ! PlayerInfo[playerid][leader]) return 1;
	if(sscanf(params,"s[24]", params[0])) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Используйте: /offuninvite [имя]");

	new scm_string[128];
	format(scm_string, sizeof(scm_string ), "SELECT * FROM `users` WHERE `u_name` = '%s' AND `u_member` = '%d' LIMIT 1", params[0], PlayerInfo[playerid][member]);
	mysql_function_query(sql_connection, scm_string, true, "offuninvite_check_callback", "is", playerid, params[0]);
	return 1;
}

callback: offuninvite_check_callback(playerid, pl_name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		new scm_string[128];
		format(scm_string, sizeof(scm_string), ""c_orange_red"* "c_orange_red"Аккаунт %s не найден в базе данных.", pl_name);
		SendClientMessage(playerid, col_gray, scm_string);
		return 1;
	}
	else
	{
		new scm_string[138];
		format(scm_string, sizeof(scm_string ), "UPDATE `users` SET `u_leader`='0',`u_member`='0',`u_rank`='0' WHERE `u_name` = '%s' LIMIT 1", pl_name);
		mysql_tquery(sql_connection, scm_string);

		format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] уволил %s в оффлайне.", PlayerInfo[playerid][name], playerid, pl_name);
		foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);
		format(scm_string, sizeof(scm_string ),""c_server"Вы уволили %s в оффлайне.", pl_name);
		SendClientMessage(playerid, col_gray, scm_string);
		return 1;
	}
}


cmd:offleader(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	if(sscanf(params,"s[24]", params[0])) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Используйте: /offleader [имя]");

	new scm_string[128];
	format(scm_string, sizeof(scm_string ), "SELECT * FROM `users` WHERE `u_name` = '%s' LIMIT 1", params[0]);
	mysql_function_query(sql_connection, scm_string, true, "offleader_check_callback", "is", playerid, params[0]);
	return 1;
}

callback: offleader_check_callback(playerid, pl_name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		new scm_string[128];
		format(scm_string, sizeof(scm_string), ""c_orange_red"* "c_orange_red"Аккаунт %s не найден в базе данных.", pl_name);
		SendClientMessage(playerid, col_gray, scm_string);
		return 1;
	}
	else
	{
		new scm_string[138];
		format(scm_string, sizeof(scm_string ), "UPDATE `users` SET `u_leader`='0',`u_member`='0',`u_rank`='0' WHERE `u_name` = '%s' LIMIT 1", pl_name);
		mysql_tquery(sql_connection, scm_string);

		format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] снял полномочия лидера с %s.", PlayerInfo[playerid][name], playerid, pl_name);
		foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);
		return 1;
	}
}


cmd:delacc(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 5) return 1;
	if(sscanf(params,"s[24]", params[0])) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Используйте: /delacc [имя]");

	new scm_string[128];
	format(scm_string, sizeof(scm_string ), "SELECT * FROM `users` WHERE `u_name` = '%s' LIMIT 1", params[0]);
	mysql_function_query(sql_connection, scm_string, true, "dellaccount_check_callback", "is", playerid, params[0]);
	return 1;
}
alias:delacc("delaccount");
callback: dellaccount_check_callback(playerid, pl_name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		new scm_string[128];
		format(scm_string, sizeof(scm_string), ""c_orange_red"* "c_orange_red"Аккаунт %s не найден в базе данных.", pl_name);
		SendClientMessage(playerid, col_gray, scm_string);
		return 1;
	}
	else
	{
		static query6[] = "DELETE IGNORE FROM "TABLE_PHOTOGRHAPHER_COOLDOWN" WHERE `user_name` = '%e' LIMIT 1";
		new fmt_query6[sizeof(query6) + MAX_PLAYER_NAME + 1 -2];
		mysql_format(sql_connection, fmt_query6, sizeof(fmt_query6), query6, pl_name);
		mysql_tquery(sql_connection, fmt_query6);

		new scm_string[108];
		format(scm_string, sizeof(scm_string ), "DELETE FROM `users` WHERE `u_name` = '%s' LIMIT 1", pl_name);
		mysql_tquery(sql_connection, scm_string);

		format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] удалил аккаунт %s.", PlayerInfo[playerid][name], playerid, pl_name);
		foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);
		return 1;
	}
}

cmd:freeze(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /freeze [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	toggle_controlable(params[0], false, false);
	new scm_string[128];
	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] заморозил игрока %s[%d].", PlayerInfo[playerid][name], playerid, PlayerInfo[params[0]][name], params[0]);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);
	format(scm_string, sizeof(scm_string ),""c_server"* S.INFO: "c_grey"Администратор %s заморозил вас.", PlayerInfo[playerid][name]);
	SendClientMessage(params[0], col_gray, scm_string);
	return 1;
}
cmd:unfreeze(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /unfreeze [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	toggle_controlable(params[0], true, false);
	new scm_string[128];
	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] разморозил игрока %s[%d].", PlayerInfo[playerid][name], playerid, PlayerInfo[params[0]][name], params[0]);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);
	format(scm_string, sizeof(scm_string ),""c_server"* S.INFO: "c_grey"Администратор %s разморозил вас.", PlayerInfo[playerid][name]);
	SendClientMessage(params[0], col_gray, scm_string);
	return 1;
}

cmd:slap(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /slap [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	new Float:pl_pos[3];
	p_t_info[playerid][p_tp_immune_time] = 3;

	GetPlayerPos(params[0], pl_pos[0], pl_pos[1], pl_pos[2]);
	SetPlayerPos(params[0], pl_pos[0], pl_pos[1], pl_pos[2] + 6);
	PlayerPlaySound(params[0], 1130, pl_pos[0], pl_pos[1], pl_pos[2] + 6);
	new scm_string[98];
	format(scm_string, sizeof(scm_string ),""c_server"* S.INFO: "c_grey"Администратор %s[%d] подкинул вас.", PlayerInfo[playerid][name], playerid);
	SendClientMessage(params[0], col_gray, scm_string);

	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] подкинул игрока %s[%d].", PlayerInfo[playerid][name], playerid, PlayerInfo[params[0]][name], params[0]);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);

	return 1;
}

CMD:setarmour(playerid, params[])
{
    if(PlayerInfo[playerid][admin] < 3) return 1;

	if(sscanf(params,"dd", params[0], params[1]))
		return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /setarmour [ид] [количество брони]");

	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");

	if(PlayerInfo[playerid][admin] > 7)
	{
		if(params[1] > 1000 || params[1] < 0) return SendClientMessage(playerid, col_white, !""scm_error"Выдавать броню можно от 0 до 1000.");
	}
	else
	{
		if(params[1] > 100 || params[1] < 0) return SendClientMessage(playerid, col_white, !""scm_error"Выдавать броню можно от 0 до 100.");
	}

	set_armour(params[0], params[1]);

	new str[128];
	format(str, sizeof(str), ""scm_sucess"Вы успешно установили уровень Брони (%d) игроку %s[%d]", params[1], PlayerInfo[params[0]][name], params[0]);
	SendClientMessage(playerid, col_white, str);

	return 1;
}

CMD:sethp(playerid, params[])
{
    if(PlayerInfo[playerid][admin] < 3) return 1;

	if(sscanf(params,"dd", params[0], params[1]))
		return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /sethp [ид] [количество здоровья]");

	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");

	if(PlayerInfo[playerid][admin] > 7)
	{
		if(params[1] > 1000 || params[1] < 0) return SendClientMessage(playerid, col_white, !""scm_error"Выдавать ХП можно от 0 до 1000.");
	}
	else
	{
		if(params[1] > 160 || params[1] < 0) return SendClientMessage(playerid, col_white, !""scm_error"Выдавать ХП можно от 0 до 160.");
	}
	
	set_health(params[0], params[1]);

	new str[128];
	format(str, sizeof(str), ""scm_sucess"Вы успешно установили уровень ХП (%d) игроку %s[%d]", params[1], PlayerInfo[params[0]][name], params[0]);
	SendClientMessage(playerid, col_white, str);
	return 1;
}


cmd:gmcheck(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /gmcheck [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");

	new Float:pl_health;
	GetPlayerHealth(params[0], pl_health);
	set_health(params[0], pl_health -5);

	SetTimerEx("check_player_nop", 1400, false, "iif", playerid, params[0], pl_health);


	return 1;
}

callback:check_player_nop(playerid, targetid, Float:pl_health)
{
	new Float:new_health;
	GetPlayerHealth(targetid, new_health);
	new gm_result[16];


	if(new_health == pl_health)format(gm_result, 16, "обнаружен NOP");
	else format(gm_result, 16, "NOP не найден");
	new scm_string[128];
	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] проверил %s[%d] на GM | Результат: %s", PlayerInfo[playerid][name], playerid, PlayerInfo[targetid][name], targetid, gm_result);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);
//	if(GetPlayerState(playerid) ==  PLAYER_STATE_DRIVER)RepairVehicle(GetPlayerVehicleID(playerid));
	return 1;
}

cmd:satiety(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /satiety [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	PlayerInfo[params[0]][hunger] = 100;
	new scm_string[128];
	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] пополнил сытость %s[%d]", PlayerInfo[playerid][name], playerid, PlayerInfo[params[0]][name], params[0]);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);
//	if(GetPlayerState(playerid) ==  PLAYER_STATE_DRIVER)RepairVehicle(GetPlayerVehicleID(playerid));
	return 1;
}

cmd:gmuse(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 1) return 1;
	if(player_gm[playerid] == 0)
	{
		player_gm[playerid] = 1;

		new scm_string[128];
		format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] отключил получение урона от игроков.", PlayerInfo[playerid][name], playerid);
		foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);

	}
	else
	{
		player_gm[playerid] = 0;

		new scm_string[128];
		format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] включил получение урона от игроков.", PlayerInfo[playerid][name], playerid);
		foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);
	}
//	if(GetPlayerState(playerid) ==  PLAYER_STATE_DRIVER)RepairVehicle(GetPlayerVehicleID(playerid));
	return 1;
}



CMD:hpcar(playerid)
{
	if(PlayerInfo[playerid][admin] < 3) return 1;

	new veh_id = GetPlayerVehicleID(playerid);
	if(veh_id == 0) return SendClientMessage(playerid, col_white, ""scm_info"Вы должны находиться в транспорте.");
	RepairVehicle(veh_id);
	return SendClientMessage(playerid, col_white, !""scm_sucess"Вы успешно починили транспорт");
}

CMD:afill(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;

	extract params -> new veh_id; else return SendClientMessage(playerid, col_white, !""scm_info"Введите: /afill [id машины]");

	if(!IsValidVehicle(veh_id)) return SendClientMessage(playerid, col_white, !""scm_error"Неверный ID транспорта.");

	veh_info[veh_id -1][v_fuel] = 100.0;
	return	SendClientMessage(playerid, col_white, !""scm_sucess"Вы успешно залили транспорт");
}

CMD:hpcarid(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /hpcarid [id машины]");
	if(params[0] < 1 || params[0] > MAX_VEHICLES) return SendClientMessage(playerid, col_white, !""scm_error"Неверный ID транспорта.");
	RepairVehicle(params[0]);
	new scm_string[128];
	format(scm_string, sizeof(scm_string),""c_server"* A.INFO: "c_grey"%s[%d] починил автомобиль | ID:%d", PlayerInfo[playerid][name], playerid, params[0]);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);
	return 1;
}

cmd:anim(playerid,params[])
{
	if(GetPlayerState(playerid)!= PLAYER_STATE_ONFOOT) return 1;
	else if(sscanf(params,"i",params[0]))
	{
		show_dialog(playerid, d_animations, DIALOG_STYLE_LIST, ""c_server"Анимации", "[1] Отдать честь\n[2] Сесть\n[3] Танец 1\n[4] Танец 2\n[5] Стриптиз\n[6] Руки вверх\n[7] Сесть\n[8] Встать\n[9] Замереть\n[10] Смирно\n[11] Рукопожатие\n[12] Привет кулаками\n[13] Пузом в пузо\n[14] Стоять\n[15] Facepalm\n[16] Встать на колени\n[17] Крэк (сидеть)\n[18] Спать\n[19] Сидеть\n[20] Стоять на руках\n[21] Dealer\n[22] Гопник\n[23] Лежать\n[24] Отталкивать\n[25] Пьяная походка", "Выбрать", "Отмена");
		return 1;
	}
	else
	{
		p_t_info[playerid][p_animation] = true;
		SendClientMessage(playerid, col_white, ""c_server"* "c_white"Выключить анимацию можно клавишей "c_server"'Пробел'"c_white".");
		switch(params[0])
		{
			case 0:
			{
				ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 1:
			{
				ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P", 25.5, 0, 1, 0, 1, 1, 1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 2:
			{
				ApplyAnimation(playerid, "PED", "SEAT_down",  4.1,  0,  0,  0,  1,  1 , 1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 3:
			{
				SetPlayerSpecialAction(playerid,  5);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 4:
			{
				ApplyAnimation(playerid,  "DANCING",  "DAN_Loop_A",  4.1,  1,  1,  1,  1,  1,  1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 5:
			{
				SetPlayerSpecialAction (playerid,  SPECIAL_ACTION_DANCE4);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 6:
			{
				SetPlayerSpecialAction(playerid,  10);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 7:
			{
				ApplyAnimation(playerid,  "Attractors",  "Stepsit_in",  4.1,  0,  1,  1,  1,  1,  1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 8:
			{
				ApplyAnimation(playerid,  "Attractors",  "Stepsit_out",  4.1,  0,  1,  1,  1,  1,  1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 9:
			{
				ApplyAnimation(playerid,  "FOOD",  "SHP_Tray_Lift_Out",  4.1,  0,  1,  1,  1,  1,  1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 10:
			{
				ApplyAnimation(playerid,  "FOOD",  "SHP_Tray_Out",  4.1,  0,  1,  1,  1,  1,  1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 11:
			{
				ApplyAnimation(playerid,  "GANGS",  "hndshkca",  4.1,  0,  1,  1,  1,  1,  1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 12:
			{
				ApplyAnimation(playerid,  "GANGS",  "hndshkda",  4.1,  0,  1,  1,  1,  1,  1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 13:
			{
				ApplyAnimation(playerid,  "GANGS",  "hndshkea",  4.1,  0,  1,  1,  1,  1,  1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 14:
			{
				ApplyAnimation(playerid,  "GANGS",  "leanIN",  4.1,  0,  1,  1,  1,  1,  1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 15:
			{
				ApplyAnimation(playerid,  "OTB",  "wtchrace_lose",  4.1,  0,  1,  1,  1,  1,  1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 16:
			{
				ApplyAnimation(playerid,  "COP_AMBIENT",  "Copbrowse_shake",  4.1,  0,  1,  1,  1,  1, 1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 17:
			{
				ApplyAnimation(playerid,  "CRACK",  "crckidle1",  4.1,  0,  1,  1,  1,  1,  1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 18:
			{
				ApplyAnimation(playerid,  "CRACK",  "crckidle2",  4.1,  0,  1,  1,  1,  1,  1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 19:
			{
				ApplyAnimation(playerid,  "JST_BUISNESS",  "girl_02",  4.1,  0,  1,  1,  1,  1,  1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 20:
			{
				ApplyAnimation(playerid,  "DAM_JUMP",  "DAM_Dive_Loop",  4.1,  0,  1,  1,  1,  1,  1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 21:
			{
				ApplyAnimation(playerid,  "DEALER",  "DEALER_IDLE",  4.1,  0,  1,  1,  1,  1,  1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 22:
			{
				ApplyAnimation(playerid,  "TATTOOS",  "TAT_ArmL_Out_T",  4.1,  0,  1,  1,  1,  1,  1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 23:
			{
				ApplyAnimation(playerid, "BEACH", "Lay_Bac_Loop", 4.1, 0, 1, 1, 1, 1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 24:
			{
				ApplyAnimation(playerid,  "DEALER",  "DRUGS_BUY",  4.1,  1,  1,  1,  1,  1 , 1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			case 25:
			{
				ApplyAnimation(playerid,  "RYDER",  "RYD_Die_PT1",  4.1,  1,  1,  1,  1,  1 , 1);
				PlayerPlaySound(playerid,  1058,  0.0,  0.0,  0.0);
			}
			default: return 1;
		}
	}
	return 1;
}



cmd:spoff(playerid)
{
	if(GetPVarInt(playerid, "spectate_status")!= 0)
	{
		for(new j = 0; j < 7; j ++)
		{
			TextDrawHideForPlayer(playerid, sp_td[j]);
			if(j < 3)
			{
				PlayerTextDrawDestroy(playerid, sp_ptd[playerid][j]);
				sp_ptd[playerid][j] = PlayerText:-1;
			}
		}
		CancelSelectTextDraw(playerid);
		TogglePlayerSpectating(playerid, false);
	}
	else return 1;
	return 1;
}

cmd:sp(playerid, params[])
{
	if(!PlayerInfo[playerid][admin]) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /sp [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(GetPVarInt(params[0], "spectate_status")!= 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок находится в режиме наблюдения.");


	new Float: player_health;
	GetPlayerHealth(params[0], player_health);
	if(GetPVarInt(playerid, "spectate_status") ==  0)
	{
		GetPlayerPos(playerid, p_t_info[playerid][p_pos][0], p_t_info[playerid][p_pos][1], p_t_info[playerid][p_pos][2]);
		GetPlayerFacingAngle(playerid, p_t_info[playerid][p_pos][3]);

		new td_str[98];
		format(td_str, 48, "%s(%d)", PlayerInfo[params[0]][name], params[0]);
		sp_ptd[playerid][0] = CreatePlayerTextDraw(playerid, 86.666687, 166.148117, td_str);
		PlayerTextDrawLetterSize(playerid, sp_ptd[playerid][0], 0.242082, 1.076297);
		PlayerTextDrawAlignment(playerid, sp_ptd[playerid][0], 2);
		PlayerTextDrawColor(playerid, sp_ptd[playerid][0], -1);
		PlayerTextDrawSetShadow(playerid, sp_ptd[playerid][0], 0);
		PlayerTextDrawSetOutline(playerid, sp_ptd[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid, sp_ptd[playerid][0], 255);
		PlayerTextDrawFont(playerid, sp_ptd[playerid][0], 1);
		PlayerTextDrawSetProportional(playerid, sp_ptd[playerid][0], 1);
		PlayerTextDrawSetShadow(playerid, sp_ptd[playerid][0], 0);

		sp_ptd[playerid][1] = CreatePlayerTextDraw(playerid, 32.083312, 189.999969, "LEVEL:~n~PING:~n~HEALTH:~n~ARMOUR:~n~SHOT_ACCURACY:~n~AMMO:~n~SPEED:~n~IP:~n~WARNS:~n~CASH:");
		PlayerTextDrawLetterSize(playerid, sp_ptd[playerid][1], 0.242082, 1.076297);
		PlayerTextDrawAlignment(playerid, sp_ptd[playerid][1], 1);
		PlayerTextDrawColor(playerid, sp_ptd[playerid][1], -2139062017);
		PlayerTextDrawSetShadow(playerid, sp_ptd[playerid][1], 0);
		PlayerTextDrawSetOutline(playerid, sp_ptd[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid, sp_ptd[playerid][1], 255);
		PlayerTextDrawFont(playerid, sp_ptd[playerid][1], 1);
		PlayerTextDrawSetProportional(playerid, sp_ptd[playerid][1], 1);
		PlayerTextDrawSetShadow(playerid, sp_ptd[playerid][1], 0);

		format(td_str, sizeof(td_str), "%d~n~%d~n~%.2f~n~%.2f~n~%d~n~%d~n~%d~n~%s~n~%d~n~%d$",
		PlayerInfo[params[0]][level],
		GetPlayerPing(params[0]),
		player_health,
		p_t_info[params[0]][p_armour],
		p_t_info[params[0]][p_gun_accuracy],
		GetPlayerAmmo(params[0]),
		get_speed(params[0]),
		p_t_info[params[0]][p_ip],
		get_player_warn_count(params[0]),
		PlayerInfo[params[0]][money]);
		sp_ptd[playerid][2] = CreatePlayerTextDraw(playerid, 138.333206, 189.999862, td_str);
		PlayerTextDrawLetterSize(playerid, sp_ptd[playerid][2], 0.242082, 1.076297);
		PlayerTextDrawAlignment(playerid, sp_ptd[playerid][2], 3);
		PlayerTextDrawColor(playerid, sp_ptd[playerid][2], -1);
		PlayerTextDrawSetShadow(playerid, sp_ptd[playerid][2], 0);
		PlayerTextDrawSetOutline(playerid, sp_ptd[playerid][2], 0);
		PlayerTextDrawBackgroundColor(playerid, sp_ptd[playerid][2], 255);
		PlayerTextDrawFont(playerid, sp_ptd[playerid][2], 1);
		PlayerTextDrawSetProportional(playerid, sp_ptd[playerid][2], 1);
		PlayerTextDrawSetShadow(playerid, sp_ptd[playerid][2], 0);
		for(new j = 0; j < 7; j ++)
		{
			TextDrawShowForPlayer(playerid, sp_td[j]);
			if(j < 3)PlayerTextDrawShow(playerid, sp_ptd[playerid][j]);
		}
	}
	else
	{
		new td_str[98];
		format(td_str, 48, "%s(%d)", PlayerInfo[params[0]][name], params[0]);
		PlayerTextDrawSetString(playerid, sp_ptd[playerid][0], td_str);

		format(td_str, sizeof(td_str), "%d~n~%d~n~%.2f~n~%.2f~n~%d~n~%d~n~%d~n~%s~n~%d~n~%d$",
		PlayerInfo[params[0]][level],
		GetPlayerPing(params[0]),
		player_health,
		p_t_info[params[0]][p_armour],
		p_t_info[params[0]][p_gun_accuracy],
		GetPlayerAmmo(params[0]),
		get_speed(params[0]),
		p_t_info[params[0]][p_ip],
		get_player_warn_count(params[0]),
		PlayerInfo[params[0]][money]);

		PlayerTextDrawSetString(playerid, sp_ptd[playerid][2], td_str);
	}
	if(!GetString(ac_info[params[0]], "clear"))
	{
		new line_string[128];
		format(line_string, sizeof(line_string), "%s добавлялся в чит панель. Причина: %s.", PlayerInfo[params[0]][name], ac_info[params[0]]);
		SendClientMessage(playerid, col_white, line_string);
	}
	switch(GetPlayerState(params[0]))
	{
		case 1:
		{
			SetPlayerInterior(playerid, p_t_info[params[0]][p_data][0]);
			SetPlayerVirtualWorld(playerid, p_t_info[params[0]][p_data][1]);
			TogglePlayerSpectating(playerid, true);
	   		PlayerSpectatePlayer(playerid, params[0]);
		}
		case 2:
		{
			SetPlayerInterior(playerid, p_t_info[params[0]][p_data][0]);
			SetPlayerVirtualWorld(playerid, p_t_info[params[0]][p_data][1]);
			new veh_id = GetPlayerVehicleID(params[0]);
			TogglePlayerSpectating(playerid, true);
			PlayerSpectateVehicle(playerid, veh_id);
		}
		case 3:
		{
			SetPlayerInterior(playerid, p_t_info[params[0]][p_data][0]);
			SetPlayerVirtualWorld(playerid, p_t_info[params[0]][p_data][1]);
	        new veh_id = GetPlayerVehicleID(params[0]);
	        TogglePlayerSpectating(playerid, true);
			PlayerSpectateVehicle (playerid, veh_id);
		}
	}
	in_recon_chat{playerid} = is_control_chat{playerid};
	is_control_chat{playerid} = PlayerInfo[params[0]][member];
	SetPVarInt(playerid, "spectate_status", params[0] + 1);
	return 1;
}

cmd:inter(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	if(sscanf(params,"i",params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /inter [1-140]");
	if(params[0] > 140 && params[0] < 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /inter [1-140]");


	switch(params[0])
	{
		case 1: SetPlayerPos(playerid,-25.884499,-185.868988,1003.549988), SetPlayerInterior(playerid, 17);
		case 2: SetPlayerPos(playerid,6.091180,-29.271898,1003.549988), SetPlayerInterior(playerid, 10);
		case 3: SetPlayerPos(playerid,-30.946699,-89.609596,1003.549988), SetPlayerInterior(playerid, 18);
		case 4: SetPlayerPos(playerid,-25.132599,-139.066986,1003.549988), SetPlayerInterior(playerid, 16);
		case 5: SetPlayerPos(playerid,-27.312300,-29.277599,1003.549988), SetPlayerInterior(playerid, 4);
		case 6: SetPlayerPos(playerid,-26.691599,-55.714897,1003.549988), SetPlayerInterior(playerid, 6);
		case 7: SetPlayerPos(playerid,-1827.147338,7.207418,1061.143554), SetPlayerInterior(playerid, 14);
		case 8: SetPlayerPos(playerid,2.384830,33.103397,1199.849976), SetPlayerInterior(playerid, 1);
		case 9: SetPlayerPos(playerid,315.856170,1024.496459,1949.797363), SetPlayerInterior(playerid, 9);
		case 10: SetPlayerPos(playerid,286.148987,-40.644398,1001.569946), SetPlayerInterior(playerid, 1);
		case 11: SetPlayerPos(playerid,286.800995,-82.547600,1001.539978), SetPlayerInterior(playerid, 4);
		case 12: SetPlayerPos(playerid,296.919983,-108.071999,1001.569946), SetPlayerInterior(playerid, 6);
		case 13: SetPlayerPos(playerid,314.820984,-141.431992,999.661987), SetPlayerInterior(playerid, 7);
		case 14: SetPlayerPos(playerid,316.524994,-167.706985,999.661987), SetPlayerInterior(playerid, 6);
		case 15: SetPlayerPos(playerid,302.292877,-143.139099,1004.062500), SetPlayerInterior(playerid, 7);
		case 16: SetPlayerPos(playerid,235.508994,1189.169897,1080.339966), SetPlayerInterior(playerid, 3);
		case 17: SetPlayerPos(playerid,225.756989,1240.000000,1082.149902), SetPlayerInterior(playerid, 2);
		case 18: SetPlayerPos(playerid,223.043991,1289.259888,1082.199951), SetPlayerInterior(playerid, 1);
		case 19: SetPlayerPos(playerid,225.630997,1022.479980,1084.069946), SetPlayerInterior(playerid, 7);
		case 20: SetPlayerPos(playerid,295.138977,1474.469971,1080.519897), SetPlayerInterior(playerid, 15);
		case 21: SetPlayerPos(playerid,328.493988,1480.589966,1084.449951), SetPlayerInterior(playerid, 15);
		case 22: SetPlayerPos(playerid,385.803986,1471.769897,1080.209961), SetPlayerInterior(playerid, 15);
		case 23: SetPlayerPos(playerid,375.971985,1417.269897,1081.409912), SetPlayerInterior(playerid, 15);
		case 24: SetPlayerPos(playerid,490.810974,1401.489990,1080.339966), SetPlayerInterior(playerid, 2);
		case 25: SetPlayerPos(playerid,447.734985,1400.439941,1084.339966), SetPlayerInterior(playerid, 2);
		case 26: SetPlayerPos(playerid,227.722992,1114.389893,1081.189941), SetPlayerInterior(playerid, 5);
		case 27: SetPlayerPos(playerid,260.983978,1286.549927,1080.299927), SetPlayerInterior(playerid, 4);
		case 28: SetPlayerPos(playerid,221.666992,1143.389893,1082.679932), SetPlayerInterior(playerid, 4);
		case 29: SetPlayerPos(playerid,27.132700,1341.149902,1084.449951), SetPlayerInterior(playerid, 10);
		case 30: SetPlayerPos(playerid,-262.601990,1456.619995,1084.449951), SetPlayerInterior(playerid, 4);
		case 31: SetPlayerPos(playerid,22.778299,1404.959961,1084.449951), SetPlayerInterior(playerid, 5);
		case 32: SetPlayerPos(playerid,140.278000,1368.979980,1083.969971), SetPlayerInterior(playerid, 5);
		case 33: SetPlayerPos(playerid,234.045990,1064.879883,1084.309937), SetPlayerInterior(playerid, 6);
		case 34: SetPlayerPos(playerid,-68.294098,1353.469971,1080.279907), SetPlayerInterior(playerid, 6);
		case 35: SetPlayerPos(playerid,-285.548981,1470.979980,1084.449951), SetPlayerInterior(playerid, 15);
		case 36: SetPlayerPos(playerid,-42.581997,1408.109985,1084.449951), SetPlayerInterior(playerid, 8);
		case 37: SetPlayerPos(playerid,83.345093,1324.439941,1083.889893), SetPlayerInterior(playerid, 9);
		case 38: SetPlayerPos(playerid,260.941986,1238.509888,1084.259888), SetPlayerInterior(playerid, 9);
		case 39: SetPlayerPos(playerid,1038.509888,-0.663752,1001.089966), SetPlayerInterior(playerid, 3);
		case 40: SetPlayerPos(playerid,446.622986,509.318970,1001.419983), SetPlayerInterior(playerid, 12);
		case 41: SetPlayerPos(playerid,2216.339844,-1150.509888,1025.799927), SetPlayerInterior(playerid, 15);
		case 42: SetPlayerPos(playerid,833.818970,7.418000,1004.179993), SetPlayerInterior(playerid, 3);
		case 43: SetPlayerPos(playerid,-100.325996,-22.816500,1000.741943), SetPlayerInterior(playerid, 3);
		case 44: SetPlayerPos(playerid,964.376953,2157.329834,1011.019958), SetPlayerInterior(playerid, 1);
		case 45: SetPlayerPos(playerid,-2239.569824,130.020996,1035.419922), SetPlayerInterior(playerid, 6);
		case 46: SetPlayerPos(playerid,662.641601,-571.398803,16.343263), SetPlayerInterior(playerid, 0);
		case 47: SetPlayerPos(playerid,614.581420,-23.066856,1004.781250), SetPlayerInterior(playerid, 1);
		case 48: SetPlayerPos(playerid,612.508605,-129.236114,1001.992187), SetPlayerInterior(playerid, 3);
		case 49: SetPlayerPos(playerid,-1786.603759,1215.553466,28.531250), SetPlayerInterior(playerid, 0);
		case 50: SetPlayerPos(playerid,-2048.605957,162.093444,28.835937), SetPlayerInterior(playerid, 1);
		case 51: SetPlayerPos(playerid,2170.284,1618.629,999.9766), SetPlayerInterior(playerid, 1);
		case 52: SetPlayerPos(playerid,1889.975,1018.055,31.88281), SetPlayerInterior(playerid, 10);
		case 53: SetPlayerPos(playerid,-2158.719971,641.287964,1052.369995), SetPlayerInterior(playerid, 1);
		case 54: SetPlayerPos(playerid,1133.069946,-9.573059,1000.750000), SetPlayerInterior(playerid, 12);
		case 55: SetPlayerPos(playerid,207.737991,-109.019997,1005.269958), SetPlayerInterior(playerid, 15);
		case 56: SetPlayerPos(playerid,204.332993,-166.694992,1000.578979), SetPlayerInterior(playerid, 14);
		case 57: SetPlayerPos(playerid,207.054993,-138.804993,1003.519958), SetPlayerInterior(playerid, 3);
		case 58: SetPlayerPos(playerid,203.778000,-48.492397,1001.799988), SetPlayerInterior(playerid, 1);
		case 59: SetPlayerPos(playerid,226.293991,-7.431530,1002.259949), SetPlayerInterior(playerid, 5);
		case 60: SetPlayerPos(playerid,161.391006,-93.159156,1001.804687), SetPlayerInterior(playerid, 18);
		case 61: SetPlayerPos(playerid,493.390991,-22.722799,1000.686951), SetPlayerInterior(playerid, 17);
		case 62: SetPlayerPos(playerid,501.980988,-69.150200,998.834961), SetPlayerInterior(playerid, 11);
		case 63: SetPlayerPos(playerid,-227.028000,1401.229980,27.769798), SetPlayerInterior(playerid, 18);
		case 64: SetPlayerPos(playerid,460.099976,-88.428497,999.621948), SetPlayerInterior(playerid, 4);
		case 65: SetPlayerPos(playerid,454.973950,-110.104996,999.717957), SetPlayerInterior(playerid, 5);
		case 66: SetPlayerPos(playerid,452.489990,-18.179699,1001.179993), SetPlayerInterior(playerid, 1);
		case 67: SetPlayerPos(playerid,681.474976,-451.150970,-25.616798), SetPlayerInterior(playerid, 1);
		case 68: SetPlayerPos(playerid,366.923980,-72.929359,1001.507812), SetPlayerInterior(playerid, 10);
		case 69: SetPlayerPos(playerid,365.672974,-10.713200,1001.869995), SetPlayerInterior(playerid, 9);
		case 70: SetPlayerPos(playerid,372.351990,-131.650986,1001.449951), SetPlayerInterior(playerid, 5);
		case 71: SetPlayerPos(playerid,377.098999,-192.439987,1000.643982), SetPlayerInterior(playerid, 17);
		case 72: SetPlayerPos(playerid,244.411987,305.032990,999.231995), SetPlayerInterior(playerid, 1);
		case 73: SetPlayerPos(playerid,271.884979,306.631989,999.325989), SetPlayerInterior(playerid, 2);
		case 74: SetPlayerPos(playerid,291.282990,310.031982,999.154968), SetPlayerInterior(playerid, 3);
		case 75: SetPlayerPos(playerid,302.181000,300.722992,999.231995), SetPlayerInterior(playerid, 4);
		case 76: SetPlayerPos(playerid,322.197998,302.497986,999.231995), SetPlayerInterior(playerid, 5);
		case 77: SetPlayerPos(playerid,346.870025,309.259033,999.155700), SetPlayerInterior(playerid, 6);
		case 78: SetPlayerPos(playerid,-959.873962,1952.000000,9.044310), SetPlayerInterior(playerid, 17);
		case 79: SetPlayerPos(playerid,388.871979,173.804993,1008.389954), SetPlayerInterior(playerid, 3);
		case 80: SetPlayerPos(playerid,220.4109,1862.277,13.147), SetPlayerInterior(playerid, 0);
		case 81: SetPlayerPos(playerid,772.112000,-3.898650,1000.687988), SetPlayerInterior(playerid, 5);
		case 82: SetPlayerPos(playerid,774.213989,-48.924297,1000.687988), SetPlayerInterior(playerid, 6);
		case 83: SetPlayerPos(playerid,773.579956,-77.096695,1000.687988), SetPlayerInterior(playerid, 7);
		case 84: SetPlayerPos(playerid,1527.229980,-11.574499,1002.269958), SetPlayerInterior(playerid, 3);
		case 85: SetPlayerPos(playerid,1523.509888,-47.821198,1002.269958), SetPlayerInterior(playerid, 2);
		case 86: SetPlayerPos(playerid,2496.049805,-1693.929932,1014.750000), SetPlayerInterior(playerid, 3);
		case 87: SetPlayerPos(playerid,1263.079956,-785.308960,1091.959961), SetPlayerInterior(playerid, 5);
		case 88: SetPlayerPos(playerid,1291.725341,-788.319885,96.460937), SetPlayerInterior(playerid, 0);
		case 89: SetPlayerPos(playerid,516.650,-18.611898,1001.459961), SetPlayerInterior(playerid, 3);
		case 90: SetPlayerPos(playerid,2464.109863,-1698.659912,1013.509949), SetPlayerInterior(playerid, 2);
		case 91: SetPlayerPos(playerid,2526.459961,-1679.089966,1015.500000), SetPlayerInterior(playerid, 1);
		case 92: SetPlayerPos(playerid,2543.659912,-1303.629883,1025.069946), SetPlayerInterior(playerid, 2);
		case 93: SetPlayerPos(playerid,1212.019897,-28.663099,1001.089966), SetPlayerInterior(playerid, 3);
		case 94: SetPlayerPos(playerid,744.542969,1437.669922,1102.739990), SetPlayerInterior(playerid, 6);
		case 95: SetPlayerPos(playerid,1204.809937,-11.586800,1001.089966), SetPlayerInterior(playerid, 2);
		case 96: SetPlayerPos(playerid,1204.809937,13.586800,1001.089966), SetPlayerInterior(playerid, 2);
		case 97: SetPlayerPos(playerid,940.921997,-17.007000,1001.179993), SetPlayerInterior(playerid, 3);
		case 98: SetPlayerPos(playerid,964.106995,-53.205498,1001.179993), SetPlayerInterior(playerid, 3);
		case 99: SetPlayerPos(playerid,-2661.009766,1415.739990,923.305969), SetPlayerInterior(playerid, 3);
		case 100: SetPlayerPos(playerid,-2637.449951,1404.629883,906.457947), SetPlayerInterior(playerid, 3);
		case 101: SetPlayerPos(playerid,-735.5619504,484.351318,1371.952270), SetPlayerInterior(playerid, 1);
		case 102: SetPlayerPos(playerid,-794.8064,491.6866,1376.195), SetPlayerInterior(playerid, 1);
		case 103: SetPlayerPos(playerid,-835.2504,500.9161,1358.305), SetPlayerInterior(playerid, 1);
		case 104: SetPlayerPos(playerid,-813.431518,533.231079,1390.782958), SetPlayerInterior(playerid, 1);
		case 105: SetPlayerPos(playerid,2350.339844,-1181.649902,1028.000000), SetPlayerInterior(playerid, 5);
		case 106: SetPlayerPos(playerid,2807.619873,-1171.899902,1025.579956), SetPlayerInterior(playerid, 8);
		case 107: SetPlayerPos(playerid,318.564972,1118.209961,1083.979980), SetPlayerInterior(playerid, 5);
		case 108: SetPlayerPos(playerid,1412.639893,-1.787510,1000.931946), SetPlayerInterior(playerid, 1);
		case 109: SetPlayerPos(playerid,1302.519897,-1.787510,1000.931946), SetPlayerInterior(playerid, 18);
		case 110: SetPlayerPos(playerid,2522.0,-1673.383911,14.8), SetPlayerInterior(playerid, 0);
		case 111: SetPlayerPos(playerid,-219.322601,1410.444824,27.773437), SetPlayerInterior(playerid, 18);
		case 112: SetPlayerPos(playerid,2324.419922,-1147.539917,1050.719971), SetPlayerInterior(playerid, 12);
		case 113: SetPlayerPos(playerid,-972.4957,1060.983,1358.914), SetPlayerInterior(playerid, 10);
		case 114: SetPlayerPos(playerid,411.625977,-21.433298,1001.799988), SetPlayerInterior(playerid, 2);
		case 115: SetPlayerPos(playerid,418.652985,-82.639793,1001.959961), SetPlayerInterior(playerid, 3);
		case 116: SetPlayerPos(playerid,412.021973,-52.649899,1001.959961), SetPlayerInterior(playerid, 12);
		case 117: SetPlayerPos(playerid,-204.439987,-26.453999,1002.299988), SetPlayerInterior(playerid, 16);
		case 118: SetPlayerPos(playerid,-204.439987,-8.469600,1002.299988), SetPlayerInterior(playerid, 17);
		case 119: SetPlayerPos(playerid,-204.439987,-43.652496,1002.299988), SetPlayerInterior(playerid, 3);
		case 120: SetPlayerPos(playerid,246.783997,63.900200,1003.639954), SetPlayerInterior(playerid, 6);
		case 121: SetPlayerPos(playerid,246.375992,109.245995,1003.279968), SetPlayerInterior(playerid, 10);
		case 122: SetPlayerPos(playerid,288.745972,169.350998,1007.179993), SetPlayerInterior(playerid, 3);
		case 123: SetPlayerPos(playerid,1494.429932,1305.629883,1093.289917), SetPlayerInterior(playerid, 3);
		case 124: SetPlayerPos(playerid,-2029.719971,-115.067993,1035.169922), SetPlayerInterior(playerid, 3);
		case 125: SetPlayerPos(playerid,420.484985,2535.589844,10.020289), SetPlayerInterior(playerid, 10);
		case 126: SetPlayerPos(playerid,-2184.751464,2413.111816,5.156250), SetPlayerInterior(playerid, 0);
		case 127: SetPlayerPos(playerid,-1397.782470,-203.723114,1051.346801), SetPlayerInterior(playerid, 7);
		case 128: SetPlayerPos(playerid,-1398.103515,933.445434,1041.531250), SetPlayerInterior(playerid, 15);
		case 129: SetPlayerPos(playerid,-1428.809448,-663.595886,1060.219848), SetPlayerInterior(playerid, 4);
		case 130: SetPlayerPos(playerid,-1486.861816,1642.145996,1060.671875), SetPlayerInterior(playerid, 14);
		case 131: SetPlayerPos(playerid,-1401.830000,107.051300,1032.273000), SetPlayerInterior(playerid, 1);
		case 132: SetPlayerPos(playerid,1382.615600,2184.345703,11.023437), SetPlayerInterior(playerid, 0);
		case 133: SetPlayerPos(playerid,297.9414,-64.3876,1001.5156), SetPlayerInterior(playerid, 4);
		case 134: SetPlayerPos(playerid,302.1602,-164.7588,999.6105), SetPlayerInterior(playerid, 6);
		case 135: SetPlayerPos(playerid,614.31,-125.22,997.99), SetPlayerInterior(playerid, 3);
		case 136: SetPlayerPos(playerid,72.03800201,394.72299194,1041.23596191), SetPlayerInterior(playerid, 5);
		case 137: SetPlayerPos(playerid,258.6563,-42.7578,1001.0234), SetPlayerInterior(playerid, 14);
		case 138: SetPlayerPos(playerid,1887.25000000,508.48001099,1204.37194824), SetPlayerInterior(playerid, 5);
		case 139: SetPlayerPos(playerid,1583.48498535,534.78302002,1128.39794922), SetPlayerInterior(playerid, 5);
		case 140: SetPlayerPos(playerid,2527.09692383,464.17098999,2636.01293945), SetPlayerInterior(playerid, 8);
	}
	return 1;
}


cmd:asettime(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 5) return 1;
	if(sscanf(params, "ddd", params[0], params[1], params[2])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /asettime [часы] [минуты] [секунды]");
	if(params[0] > 23 || params[0] < 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /asettime [часы] [минуты] [секунды]");
	if(params[1] > 59 || params[1] < 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /asettime [часы] [минуты] [секунды]");
	if(params[2] > 59 || params[2] < 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /asettime [часы] [минуты] [секунды]");
	global_hour = params[0];
	SetWorldTime(params[0]);

	new scm_string[98];
	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] установил новое время на сервере %d:%d:%d.", PlayerInfo[playerid][name], playerid, params[0], params[1], params[2]);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);
	return 1;
}








cmd:ipaccounts(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	new ban_ip[16];
	if(sscanf(params, "s[16]", ban_ip)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /ipaccounts [ип]");


	new sql_string[178];
	mysql_format(sql_connection, sql_string, 178, "SELECT `u_name`,`u_last_date`,`u_online`,`u_level` FROM `users` WHERE `u_last_ip` = '%s' OR `u_ip_registration` = '%s' LIMIT 25",
	ban_ip, ban_ip);
	mysql_tquery(sql_connection, sql_string, "cmd_ipaccounts_callback", "i", playerid);

	return 1;
}

callback:cmd_ipaccounts_callback(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Не найденно данных по данному ip-адресу.");
	global_string[0] = EOS;
	for(new j = 0; j < rows; j ++)
	{
		new pl_name[24], pl_date[28], u_online, line_string[98], pl_level;
		u_online = cache_get_field_content_int(j, "u_online", sql_connection);
		pl_level = cache_get_field_content_int(j, "u_level", sql_connection);

		cache_get_field_content(j, "u_name", pl_name, sql_connection, 24);
		cache_get_field_content(j, "u_last_date", pl_date, sql_connection, 28);

		if(u_online)format(line_string, sizeof(line_string), ""c_white"%s (LVL:%d) -"c_green"ONLINE\t"c_white"%s\n", pl_name, pl_level, pl_date);
		else format(line_string, sizeof(line_string), ""c_white"%s (LVL:%d) -"c_orange_red"OFFLINE\t"c_white"%s\n", pl_name, pl_level, pl_date);
		strcat(global_string, line_string);
	}
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Список аккаунтов", global_string, "Закрыть", "");
	return 1;
}

cmd:banip(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	new ban_ip[16], ban_reason_ip[32];
	if(sscanf(params,"s[16]s[32]", ban_ip, ban_reason_ip)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /banip [ип] [причина]");
	if(strfind(ban_ip, "*.*", true)!= -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Неправильный ip адрес.");
	new scm_string[128];
	format(scm_string, sizeof(scm_string),"banip %s", ban_ip);
	SendRconCommand(scm_string);
	SendRconCommand("reloadbans");

	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] заблокировал IP %s. Причина: %s", PlayerInfo[playerid][name], playerid, ban_ip, ban_reason_ip);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);
	return 1;
}

cmd:unbanip(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	if(sscanf(params,"s[16]",params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /unbanip [ип]");
	if(strfind(params[0], "*.*", true)!= -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Неправильный ip адрес.");

	new scm_string[128];
	format(scm_string, sizeof(scm_string),"unbanip %s", params[0]);
	SendRconCommand(scm_string);
	SendRconCommand("reloadbans");

	format(scm_string, sizeof(scm_string ),""c_server"* A.INFO: "c_grey"%s[%d] разблокировал IP %s.", PlayerInfo[playerid][name], playerid, params[0]);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);
	return 1;
}




/*
cmd:createfvehicle(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	if(GetPlayerState(playerid)!= PLAYER_STATE_DRIVER) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны быть в транспорте.");
	if(sscanf(params, "dds[12]", params[0], params[1], params[2])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /createfvehicle [модель][организация][номер]");
	if(params[0] < 400 || params[0] > 611) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /createfvehicle [модель][организация][номер]");
	new veh_id = GetPlayerVehicleID(playerid);
	for(new i = 1; i < MAX_VEHICLES; i ++)
	{
		if(IsValidVehicle(i)) continue;
		veh_info[i -1][v_owner] = params[1];
		veh_info[i -1][v_model] = params[0];
		format(veh_info[i -1][v_plate], 12, "%s", params[2]);

		GetVehiclePos(veh_id, veh_info[i -1][v_pos][0], veh_info[i -1][v_pos][1], veh_info[i -1][v_pos][2]);
		GetVehicleZAngle(veh_id, veh_info[i -1][v_pos][3]);

		veh_info[i -1][v_rank] = 1;

		veh_info[veh_id -1][v_type] = vehicle_type_server;


        if(veh_info[i -1][v_owner] == 1)veh_info[i -1][v_vehicle] = CreateVehicle(veh_info[i -1][v_model], veh_info[i -1][v_pos][0], veh_info[i -1][v_pos][1], veh_info[i -1][v_pos][2], veh_info[i -1][v_pos][3], veh_info[i -1][v_color][0], veh_info[i -1][v_color][1], -1, 1);
		else veh_info[i -1][v_vehicle] = CreateVehicle(veh_info[i -1][v_model], veh_info[i -1][v_pos][0], veh_info[i -1][v_pos][1], veh_info[i -1][v_pos][2], veh_info[i -1][v_pos][3], veh_info[i -1][v_color][0], veh_info[i -1][v_color][1], -1);
		SetVehicleNumberPlate(veh_info[i][v_vehicle], veh_info[i -1][v_plate]);
		veh_info[i -1][v_fuel] = 60.0;

		new sql_string[228];
		mysql_format(sql_connection, sql_string, 228, "INSERT INTO `server_vehicles` (`sv_model`,`sv_owner`,`sv_plate`,`sv_pos_x`,`sv_pos_y`,`sv_pos_z`,`sv_pos_a`,`sv_owner`) VALUES ('%d','%d','%e','%f','%f','%f','%f','1')",
		params[0], params[1], params[2],
		veh_info[i -1][v_pos][0], veh_info[i -1][v_pos][1], veh_info[i -1][v_pos][2], veh_info[i -1][v_pos][3]);
		mysql_tquery(sql_connection, sql_string, "create_vehicle_callback", "d", i);
		break;
	}
	SendClientMessage(playerid, col_white, "Транспорт организации успешно создан.");
	return 1;
}*/

cmd:setfvehiclemodel(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	if(GetPlayerState(playerid)!= PLAYER_STATE_DRIVER) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нужно быть в транспорте.");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /setfvehiclemodel [модель]");
	if(params[0] < 400 || params[0] > 611) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /setfvehiclemodel [модель]");

	new veh_id = GetPlayerVehicleID(playerid);
	if(GetPVarInt(playerid, "admin_vehicle") ==  veh_id) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Данный транспорт не динамический.");

	DestroyVehicle(veh_id);

	veh_info[veh_id -1][v_vehicle] = INVALID_VEHICLE_ID;
	veh_info[veh_id -1][v_model] = params[0];

    if(veh_info[veh_id -1][v_owner] == 1)veh_info[veh_id -1][v_vehicle] = CreateVehicle(veh_info[veh_id -1][v_model], veh_info[veh_id -1][v_pos][0], veh_info[veh_id -1][v_pos][1], veh_info[veh_id -1][v_pos][2], veh_info[veh_id -1][v_pos][3], veh_info[veh_id -1][v_color][0], veh_info[veh_id -1][v_color][1], -1, 1);
	else veh_info[veh_id -1][v_vehicle] = CreateVehicle(veh_info[veh_id -1][v_model], veh_info[veh_id -1][v_pos][0], veh_info[veh_id -1][v_pos][1], veh_info[veh_id -1][v_pos][2], veh_info[veh_id -1][v_pos][3], veh_info[veh_id -1][v_color][0], veh_info[veh_id -1][v_color][1], -1);
	SetVehicleNumberPlate(veh_info[veh_id -1][v_vehicle], veh_info[veh_id -1][v_plate]);
	veh_info[veh_id -1][v_fuel] = 60.0;

	new sql_string[76];
	mysql_format(sql_connection, sql_string, 76, "UPDATE `server_vehicles` SET `sv_model` = '%d' WHERE `sv_id` = '%d'",
	veh_info[veh_id -1][v_model],
	veh_info[veh_id -1][v_id]);
	mysql_tquery(sql_connection, sql_string, "", "");

    SendClientMessage(playerid, col_white, "Модель транспорта организации успешно изменена.");
	return 1;
}

cmd:setfvehiclecolor(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	if(GetPlayerState(playerid)!= PLAYER_STATE_DRIVER) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нужно быть в транспорте.");
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /setfvehiclecolor [цвет 1] [цвет 2]");
	new veh_id = GetPlayerVehicleID(playerid);
	if(GetPVarInt(playerid, "admin_vehicle") ==  veh_id) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Данный транспорт не динамический.");

	if(params[1] < 0 || params[1] > 255) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /setfvehiclecolor [цвет 1] [цвет 2]");
	if(params[0] < 0 || params[0] > 255) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /setfvehiclecolor [цвет 1] [цвет 2]");

	veh_info[veh_id -1][v_color][0] = params[0];
	veh_info[veh_id -1][v_color][1] = params[1];

	n_ChangeVehicleColor(veh_id, params[0], params[1]);

	new sql_string[128];
	mysql_format(sql_connection, sql_string, 128, "UPDATE `server_vehicles` SET `sv_color_1` = '%d',`sv_color_2` = '%d' WHERE `sv_id` = '%d'",
	params[0], params[1],
	veh_info[veh_id -1][v_id]);
	mysql_query(sql_connection, sql_string);

    SendClientMessage(playerid, col_white, "Цвет транспорта организации успешно изменён.");
	return 1;
}


cmd:givelic(playerid,params[])
{
	if(PlayerInfo[playerid][admin] < 5) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /givelic [id]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");


	show_dialog(playerid, d_give_lic, DIALOG_STYLE_LIST,""c_server"Выдача лицензий",
	""c_white"Водительские права\nЛицензия пилота\nЛицензия водного транспорта\nЛицензия на оружие", "Выбрать", "Отмена");
	SetPVarInt(playerid,"gl_id", params[0]);
	return 1;
}

cmd:giveskill(playerid,params[])
{
	if(PlayerInfo[playerid][admin] < 6) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /giveskill [id]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");

	for(new j = 0; j < 7; j ++)
	{
		PlayerInfo[params[0]][gun_skills][j] = 100;
	}
	new _query[128];

	format(_query, sizeof(_query), "UPDATE `users` SET `u_skills`='%d|%d|%d|%d|%d|%d|%d' WHERE `u_id` = '%d'",
	PlayerInfo[params[0]][gun_skills][0], PlayerInfo[params[0]][gun_skills][1], PlayerInfo[params[0]][gun_skills][2],
	PlayerInfo[params[0]][gun_skills][3], PlayerInfo[params[0]][gun_skills][4], PlayerInfo[params[0]][gun_skills][5],
	PlayerInfo[params[0]][gun_skills][6], PlayerInfo[params[0]][id]);
	mysql_tquery(sql_connection, _query);
	SetPlayerSkills(params[0]);

	format(_query, sizeof(_query ),""c_server"* A.INFO: "c_grey"%s выдал %s скиллы оружия.", PlayerInfo[playerid][name], PlayerInfo[params[0]][name]);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, _query);

	format(_query, sizeof(_query), ""c_server"* S.INFO:"c_grey" %s установил Вам совершенные навыки оружия.", PlayerInfo[playerid][name]);
	SendClientMessage(params[0], col_gray, _query);
	return 1;
}


cmd:makeleader(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	extract params -> new player:targetid; else return SendClientMessage(playerid, col_gray, !"Используйте: "c_white"/makeleader [id игрока]");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");

	SetPVarInt(playerid, !"target_id", targetid);

	strfmt(global_string, "{BC2C2C}Снять с поста лидера\n");
	new line_string[65];

	for(new j = 0; j < fraction_count; j++)
	{
		format(line_string, sizeof(line_string), ""c_white"№%d -{%s}%s\n", j + 1, f_info[j][f_chat_color], f_info[j][f_name]);
		strcat(global_string, line_string);
	}
	new header_string[45];
	format(header_string, sizeof(header_string), ""scm_dialog"%s", PlayerInfo[playerid][name]);
	return show_dialog(playerid, d_makeleader, DIALOG_STYLE_LIST, header_string, global_string, !"Выбрать", !"Закрыть");
}

CMD:templeader(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /templeader [номер организации]");
	if(params[0] < 0 || params[0] > fraction_count) return SendClientMessage(playerid, col_white, !""scm_error"Неправильный номер организации.");

	if(params[0] != 0)
	{
		new scm_string[144];
		params[0] -= 1;
		format(scm_string, sizeof scm_string, ""c_server"* A.INFO:"c_grey" %s назначил себя временным лидером организации \""c_white"%s"c_grey"\"", PlayerInfo[playerid][name], f_info[params[0]][f_name]);
		foreach(new i: admin_players)SendClientMessage(i, col_white, scm_string);


		PlayerInfo[playerid][member] = PlayerInfo[playerid][leader] =  params[0] + 1;
		PlayerInfo[playerid][rank] = f_info[params[0]][f_rank_settings][0];
		PlayerInfo[playerid][org_skin] = f_skin[params[0]][PlayerInfo[playerid][gender]][0]	;
	}
	else if(params[0] == 0 && PlayerInfo[playerid][leader] > 0)
	{
		new scm_string[230];
		format(scm_string, 144, ""c_server"* A.INFO:"c_grey" %s снял себя с должности временного лидера организации \""c_white"%s"c_grey"\"", PlayerInfo[playerid][name], f_info[PlayerInfo[params[0]][member] -1][f_name]);
		foreach(new i: admin_players)SendClientMessage(i, col_white, scm_string);

		PlayerInfo[playerid][member] = 0;
		PlayerInfo[playerid][leader] = 0;
		PlayerInfo[playerid][rank] = 0;

		SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
		SetPlayerColor(playerid, 0xFFFFFF40);
	}
	return 1;
}

cmd:unmakeleader(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 5) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /unmakeleader [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");

	if(PlayerInfo[params[0]][leader] == 0)	return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У игрока нет прав лидера организации.");

	new scm_string[144];
	format(scm_string, sizeof scm_string, ""c_server"* A.INFO:"c_grey" %s снял %s с должности лидера организации \""c_white"%s"c_grey"\"", PlayerInfo[playerid][name], PlayerInfo[params[0]][name], f_info[PlayerInfo[params[0]][member] -1][f_name]);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);
	format(scm_string, sizeof scm_string, ""c_server"* S.INFO:"c_grey" %s снял Вас с должности лидера организации \""c_white"%s"c_grey"\"", PlayerInfo[playerid][name], f_info[PlayerInfo[params[0]][member] -1][f_name]);
	SendClientMessage(params[0], col_gray, scm_string);

	new query_string[268];

	if(PlayerInfo[params[0]][admin] != 0)
	{
		format(f_info[PlayerInfo[params[0]][member] -1][f_leader_name], MAX_PLAYER_NAME, "Свободна");
		format(query_string, 100, "UPDATE `fractions` SET `f_leader_name` = '%s' WHERE `f_id` = '%d' LIMIT 1",
		f_info[PlayerInfo[params[0]][member] -1][f_leader_name], PlayerInfo[params[0]][member]);
		mysql_tquery(sql_connection, query_string, "", "");
	}
	mysql_format(sql_connection, query_string,sizeof(query_string),
	"INSERT INTO `users_jobinfo` (`ji_uid`,`ji_date_invite`,`ji_date_uninvite`,`ji_reason`,`ji_fraction`,`ji_fwarnings`)SELECT `u_id`, `u_fraction_date`, NOW(), 'с/ж','%d','%d' FROM `users` WHERE `u_id` = '%d'",
	PlayerInfo[params[0]][member], PlayerInfo[params[0]][id]);
	mysql_tquery(sql_connection, query_string, "", "");


	PlayerInfo[params[0]][member] = 0;
	PlayerInfo[params[0]][leader] = 0;
	PlayerInfo[params[0]][rank] = 0;

	format(query_string, 138, "UPDATE `users` SET `u_member` = '0', `u_leader` = '0',\
	`u_rank` = '0'	WHERE `u_id` = '%d' LIMIT 1",
	PlayerInfo[params[0]][id]);
	mysql_tquery(sql_connection, query_string, "", "");


	SetPlayerSkin(params[0], PlayerInfo[params[0]][skin]);
	SetPlayerColor(params[0], 0xFFFFFFFF); // col_white
	return 1;
}

cmd:afind(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /afind [номер организации]");
	if(params[0] < 0 || params[0] > fraction_count) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Неправильный номер организации.");
	global_string[0] = EOS;

	new line_string[92],
		fr_count;

	foreach(new i: logged_players)
	{
		if(PlayerInfo[i][member] != params[0]) continue;
		fr_count ++;
	}
	format(line_string, sizeof(line_string), ""c_white"Всего онлайн: {cccc99}%d\nID\tУровень\tТелефон\tРанг\tВыговоры\tИмя игрока\n\n"c_white"", fr_count);
	strcat(global_string, line_string);

	foreach(new i: logged_players)
	{
	    if(PlayerInfo[i][member] != params[0]) continue;

		format(line_string, sizeof(line_string), "%d\t%d\t\t%d\t\t%d\t0/3\t\t%s%s\n", i, PlayerInfo[i][level], PlayerInfo[i][number], PlayerInfo[i][rank], PlayerInfo[i][name],
		(pl_afk_time[i] >= 2)?("{FFB859}[AFK]"c_white""):(""));
		strcat(global_string, line_string);
	}
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Члены организации онлайн", global_string, "Закрыть", "");
	return 1;
}


cmd:achat(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 2) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /achat [номер организации]");
	if(params[0] < 0 || params[0] > fraction_count) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Неправильный номер организации.");
	is_control_chat {playerid} = params[0];
	if(params[0] == 0)
	{
		SendClientMessage(playerid, col_gray, ""c_server"* A.INFO:"c_grey" Вы отключили прослушку чата организации.");
	}
	else
	{
		new t_string[116];
		format(t_string, sizeof(t_string), ""c_server"* A.INFO:"c_grey" Вы начали прослушку чата организации \""c_white"%s"c_grey"\"", f_info[params[0] -1][f_name]);
		SendClientMessage(playerid, col_gray, t_string);
	}
	return 1;
}







cmd:r(playerid, params[])
{
	if(PlayerInfo[playerid][member] > 17 && PlayerInfo[playerid][member] != 27 || PlayerInfo[playerid][member] == 0) return 1;
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 1;
	}
	if(PlayerInfo[playerid][f_mute])
	{
		new scm_string[78];
		format(scm_string, sizeof(scm_string),""c_orange_red"* "c_grey"У вас затычка в чате организации | %d секунд(ы)", PlayerInfo[playerid][f_mute]);
		SendClientMessage(playerid, col_gray, scm_string);
		return 0;
	}

	if(sscanf(params, "s[120]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /r [текст]");
 	if(check_advertise(playerid, params[0])) return 1;
	new scm_string[144],
		chat_color;

	switch(PlayerInfo[playerid][member])
	{
		case 8..10:chat_color = 0x6B8E23FF;
		case 11..13:chat_color = 0x0ECF80FF;
		case 15..17:chat_color = 0x0ECF80FF;
		default: chat_color = 0x4682B4AA;
	}
	format(scm_string, sizeof scm_string, "[R] %s %s[%d]: %s", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], playerid, params[0]);
	foreach(new i: logged_players) if((PlayerInfo[i][member] == PlayerInfo[playerid][member] || is_control_chat {i} == PlayerInfo[playerid][member]) && PlayerInfo[i][settings][0] != 0)SendClientMessage(i, chat_color, scm_string);

	//	SetPlayerChatBubble(playerid, "сказал(а) что-то в рацию", col_light_purple, 13.0, 7000);
	return 1;
}
cmd:rn(playerid, params[])
{
	if(PlayerInfo[playerid][member] > 17 && PlayerInfo[playerid][member] != 27 || PlayerInfo[playerid][member] == 0) return 1;
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 1;
	}
	if(PlayerInfo[playerid][f_mute])
	{
		new scm_string[78];
		format(scm_string, sizeof(scm_string),""c_orange_red"* "c_grey"У вас затычка в чате организации | %d секунд(ы)", PlayerInfo[playerid][f_mute]);
		SendClientMessage(playerid, col_gray, scm_string);
		return 0;
	}
	if(sscanf(params, "s[120]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /rn [текст]");
 	check_advertise(playerid, params[0]);
	new scm_string[144],
		chat_color;

	switch(PlayerInfo[playerid][member])
	{
		case 8..10:chat_color = 0x6B8E23FF;
		case 11..13:chat_color = 0x0ECF80FF;
		case 15..17:chat_color = 0x0ECF80FF;
		default: chat_color = 0x4682B4AA;
	}
	format(scm_string, sizeof scm_string, "(([R] %s %s[%d]: %s))", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], playerid, params[0]);
	foreach(new i: logged_players) if((PlayerInfo[i][member] == PlayerInfo[playerid][member] || is_control_chat {i} == PlayerInfo[playerid][member]) && PlayerInfo[i][settings][0] != 0)SendClientMessage(i, chat_color, scm_string);
//	SetPlayerChatBubble(playerid, "сказал(а) что-то в рацию", col_light_purple, 13.0, 7000);
	return 1;
}

cmd:f(playerid, params[])
{
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[32];
		format(scm_string, sizeof(scm_string),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 1;
	}
	if(PlayerInfo[playerid][f_mute])
	{
		new scm_string[68];
		format(scm_string, sizeof(scm_string),""c_orange_red"* "c_grey"У вас затычка в чате организации | %d секунд(ы)", PlayerInfo[playerid][f_mute]);
		SendClientMessage(playerid, col_gray, scm_string);
		return 0;
	}
	if(gang_player(playerid)|| mafia_player(playerid))
	{
		if(sscanf(params, "s[120]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /f [текст]");
		check_advertise(playerid, params[0]);
		new scm_string[144],
			chat_color;

		switch(PlayerInfo[playerid][member])
		{
			case 22..25: chat_color = 0x326EA1FF;
			default: chat_color = 0x2B7FDBFF;
		}
		format(scm_string, sizeof scm_string, "[F] %s %s[%d]: %s", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], playerid, params[0]);
		foreach(new i: logged_players) if((PlayerInfo[i][member] == PlayerInfo[playerid][member] || is_control_chat {i} == PlayerInfo[playerid][member]) && PlayerInfo[i][settings][0] != 0)SendClientMessage(i, chat_color, scm_string);
		return 1;
	}
	else if(cop_player(playerid))
	{
		if(sscanf(params, "s[120]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /f [текст]");
		check_advertise(playerid, params[0]);
		new scm_string[144];

		format(scm_string, sizeof scm_string, "[F] %s %s[%d]: %s", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], playerid, params[0]);
		foreach(new i: logged_players) if((cop_player(i)|| is_control_chat {i} == PlayerInfo[playerid][member] || player_ssf {playerid} == PlayerInfo[playerid][member]) && PlayerInfo[i][settings][0] != 0)SendClientMessage(i, 0x2B7FDBFF, scm_string);
		return 1;
	}
	else if(medic_player(playerid))
	{
		if(sscanf(params, "s[120]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /f [текст]");
		check_advertise(playerid, params[0]);
		new scm_string[144];

		format(scm_string, sizeof scm_string, "[F] %s %s[%d]: %s", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], playerid, params[0]);
		foreach(new i: logged_players) if((medic_player(i)|| is_control_chat {i} == PlayerInfo[playerid][member] || player_ssf {playerid} == PlayerInfo[playerid][member]) && PlayerInfo[i][settings][0] != 0)SendClientMessage(i, 0x2B7FDBFF, scm_string);
		return 1;
	}
	else if(army_player(playerid))
	{
		if(sscanf(params, "s[120]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /f [текст]");
		check_advertise(playerid, params[0]);
		new scm_string[144];

		format(scm_string, sizeof scm_string, "[F] %s %s[%d]: %s", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], playerid, params[0]);
		foreach(new i: logged_players) if((army_player(i)|| is_control_chat {i} == PlayerInfo[playerid][member]) && PlayerInfo[i][settings][0] != 0)SendClientMessage(i, 0x2B7FDBFF, scm_string);
		return 1;
	}
	else return 1;
}
cmd:fn(playerid, params[])
{
	if(PlayerInfo[playerid][member] < 18 || PlayerInfo[playerid][member] > 25) return 1;
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 1;
	}
	if(PlayerInfo[playerid][f_mute])
	{
		new scm_string[78];
		format(scm_string, sizeof(scm_string),""c_orange_red"* "c_grey"У вас затычка в чате организации | %d секунд(ы)", PlayerInfo[playerid][f_mute]);
		SendClientMessage(playerid, col_gray, scm_string);
		return 0;
	}
	if(sscanf(params, "s[120]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /fn [текст]");
 	check_advertise(playerid, params[0]);
	new scm_string[144],
		chat_color;

	switch(PlayerInfo[playerid][member])
	{
		case 22..25: chat_color = 0x326EA1FF;
		default: chat_color = 0x2B7FDBFF;
	}
	format(scm_string, sizeof scm_string, "(([F] %s %s[%d]: %s))", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], playerid, params[0]);
	foreach(new i: logged_players) if((PlayerInfo[i][member] == PlayerInfo[playerid][member] || is_control_chat {i} == PlayerInfo[playerid][member]) && PlayerInfo[i][settings][0] != 0)SendClientMessage(i, chat_color, scm_string);
//	SetPlayerChatBubble(playerid, "сказал(а) что-то в рацию", col_light_purple, 13.0, 7000);
	return 1;
}

cmd:leave(playerid)
{
	if(!PlayerInfo[playerid][enhancement][2]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас не приобретено улучшение "c_white"'Решительность'"c_grey".");
	if(PlayerInfo[playerid][leader] != 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Лидер не может уволиться из организации");
	if(PlayerInfo[playerid][member] == 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в организации.");
	new scm_string[266];
	format(scm_string, sizeof(scm_string),
	"INSERT INTO `users_jobinfo` (`ji_uid`,`ji_date_invite`,`ji_date_uninvite`,`ji_reason`,`ji_fraction`,`ji_fwarnings`)SELECT `u_id`, `u_fraction_date`, NOW(), '%s','%d','%d' FROM `users` WHERE `u_id` = '%d'",
	"Собественное желание",  PlayerInfo[playerid][member], PlayerInfo[playerid][f_warning], PlayerInfo[playerid][id]);
	mysql_tquery(sql_connection, scm_string, "", "");

	PlayerInfo[playerid][member] = PlayerInfo[playerid][rank] = PlayerInfo[playerid][org_skin] = 0;
	update_int_sql(playerid, "u_member", PlayerInfo[playerid][member]);
	update_int_sql(playerid, "u_rank", PlayerInfo[playerid][rank]);

	if(is_fraction_duty {playerid})is_fraction_duty {playerid} = 0;

	SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
	SetPlayerColor(playerid, 0xFFFFFFFF); // col_white
	SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно уволились из организации!");
	return 1;
}


cmd:hleave(playerid)
{
	if(PlayerInfo[playerid][rent_house]<= 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не снимаете жильё.");

	PlayerInfo[playerid][rent_house] = -1;
	update_int_sql(playerid, "u_renthouse", PlayerInfo[playerid][rent_house]);

	SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно выселились ");
	return 1;
}


cmd:paydaytest(playerid)
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	pay_day_time();
	return 1;
}

cmd:fmute(playerid, params[])
{
 	if(!gang_player(playerid)) return 1;
	if(PlayerInfo[playerid][rank] < f_info[PlayerInfo[playerid][member] -1][f_rank_settings][1]) return 1;
	if(sscanf(params, "uds[42]", params[0], params[1], params[2])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /fmute [ид] [минуты] [причина]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(PlayerInfo[params[0]][member] != PlayerInfo[playerid][member]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не состоит в Вашей организации.");
	if(PlayerInfo[params[0]][rank] >= PlayerInfo[playerid][rank]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете дать затычку своему руководству.");
	if(params [1] < 1 || params [1] > 120) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Затычка не может быть меньше 1 минуты или больше 120 минут.");


	new scm_string[144];
	format(scm_string,sizeof(scm_string), "%s %s поставил затычку игроку %s на %i мин. Причина: %s", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], PlayerInfo[params[0]][name], params[1], params[2]);
	foreach(new i: logged_players) if(PlayerInfo[i][member] == PlayerInfo[playerid][member]) SendClientMessage(i, 0x326EA1FF, scm_string);

	PlayerInfo[params[0]][f_mute] = params [1]*60;
	return 1;
}

cmd:funmute(playerid, params[])
{
 	if(!gang_player(playerid)) return 1;
	if(PlayerInfo[playerid][rank] < f_info[PlayerInfo[playerid][member] -1][f_rank_settings][1]) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /funmute [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(PlayerInfo[params[0]][member] != PlayerInfo[playerid][member]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не состоит в Вашей организации.");
	if(PlayerInfo[params[0]][rank] >= PlayerInfo[playerid][rank]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете дать затычку своему руководству.");
	if(PlayerInfo[params[0]][f_mute] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У игрока нет затычки.");


	PlayerInfo[params[0]][f_mute] = 0;
	update_int_sql(params[0], "u_fmute", PlayerInfo[params[0]][f_mute]);

	new scm_string[128];
	format(scm_string, sizeof(scm_string ), "%s %s снял затычку игроку %s", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], PlayerInfo[params[0]][name]);
	foreach(new i: logged_players) if(PlayerInfo[i][member] == PlayerInfo[playerid][member]) SendClientMessage(i, 0x326EA1FF, scm_string);
	return 1;
}



cmd:invite(playerid, params[])
{
	if(PlayerInfo[playerid][member] == 0) return 1;
	if(PlayerInfo[playerid][rank] < f_info[PlayerInfo[playerid][member] -1][f_rank_settings][1]) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /invite [ид]");
	if(!IsPlayerConnected(params[0])  || params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(PlayerInfo[params[0]][member] || GetPVarInt(playerid, "frac_invite")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок уже состоит в какой-то организации, либо имеет приглашение.");
	if(p_t_info[params[0]][p_dialog] != -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Невозможно принять игрока в данный момент.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(get_player_warn_count(params[0])!= 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете принять игрока с предупреждением.");
	if(is_player_fraction_bl(params[0], PlayerInfo[playerid][member])!= 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете принять игрока из чёрного списка организации.");


	new scm_string[128];
	format(scm_string, sizeof scm_string, "Вы пригласили %s в организацию", PlayerInfo[params[0]][name]);
	SendClientMessage(playerid, col_gray, scm_string);
	format(scm_string, sizeof scm_string, ""c_server"%s "c_white"предлагает Вам вступить в организацию "c_grey"\"%s\"", PlayerInfo[playerid][name], f_info[PlayerInfo[playerid][member] -1][f_name]);
	show_dialog(params[0], d_invite_box, DIALOG_STYLE_MSGBOX, ""c_server"Вступление в организацию", scm_string, "Вступить", "Отклонить");
	SetPVarInt(params[0], "frac_invite", PlayerInfo[playerid][member]);
	SetPVarInt(params[0], "frac_invite_pl_id", playerid + 1);
	return 1;
}


cmd:auninvite(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	if(sscanf(params, "us[48]", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /auninvite [ид/имя] [причина]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(PlayerInfo[params[0]][member] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не состоит в организации.");
	if(PlayerInfo[params[0]][leader] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок является лидером.");



	new scm_string[266];
	format(scm_string, 144, ""c_server"* S.INFO: "c_grey"Администратор %s[%i] уволил Вас из организации. Причина:"c_white" %s", PlayerInfo[playerid][name], playerid, params[1]);
	SendClientMessage(params[0], col_gray, scm_string);

	format(scm_string, 144, ""c_server"* A.INFO: "c_grey"%s[%d] уволил %s[%d] из организации. Причина: %s", PlayerInfo[playerid][name], playerid, PlayerInfo[params[0]][name], params[0], params[1]);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, scm_string);


	format(scm_string,sizeof(scm_string),
	"INSERT INTO `users_jobinfo` (`ji_uid`,`ji_date_invite`,`ji_date_uninvite`,`ji_reason`,`ji_fraction`,`ji_fwarnings`)SELECT `u_id`, `u_fraction_date`, NOW(), '%s','%d','%d' FROM `users` WHERE `u_id` = '%d'",
	params[1], PlayerInfo[params[0]][member],PlayerInfo[params[0]][f_warning], PlayerInfo[params[0]][id]);
	mysql_tquery(sql_connection, scm_string, "", "");

	PlayerInfo[params[0]][member] = 0;
	PlayerInfo[params[0]][rank] = 0;
	PlayerInfo[params[0]][org_skin] = 0;




	update_int_sql(params[0], "u_member", PlayerInfo[params[0]][member]);
	update_int_sql(params[0], "u_rank", PlayerInfo[params[0]][rank]);
	SetPlayerSkin(params[0], PlayerInfo[params[0]][skin]);
	SetPlayerColor(params[0], 0xFFFFFFFF); // col_white
	return 1;
}

CMD:promocodelist(playerid)
{
	if(PlayerInfo[playerid][admin] < 1)
		return 0;

	mysql_tquery(sql_connection, "SELECT * FROM `server_promocodes` ORDER BY promo_id", "promo_code_list", "i", playerid);
	return 1;
}
alias:promocodelist("pcl");

cmd:uninvite(playerid, params[])
{
	if(PlayerInfo[playerid][rank] < f_info[PlayerInfo[playerid][member] -1][f_rank_settings][1])
		return 1;
	if(sscanf(params, "us[48]", params[0], params[1]))
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /uninvite [ид/имя] [причина]");
	if(!IsPlayerConnected(params[0])  || params[0] == playerid)
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(PlayerInfo[params[0]][member] != PlayerInfo[playerid][member])
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не состоит в Вашей организации.");
	if(PlayerInfo[params[0]][rank] >= PlayerInfo[playerid][rank])
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете уволить своё руководство.");
	if(is_text_invalid(params[1]))
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Причина содержит некорректные символы.");


	new scm_string[266];
	format(scm_string, 128, "%s уволил Вас из организации. Причина: %s", PlayerInfo[playerid][name], params[1]);
	SendClientMessage(params[0], 0x4682B4AA, scm_string);
	format(scm_string, 128, "Вы уволили %s из организации. Причина: %s", PlayerInfo[params[0]][name], params[1]);
	SendClientMessage(playerid, 0x4682B4AA, scm_string);

	if(gang_player(playerid))
	{
		format(scm_string, 128, "%s(%d) %s выселил %s(%d) %s с района. Причина: %s",
		f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1],
		PlayerInfo[playerid][rank],
		PlayerInfo[playerid][name],

		f_rank[PlayerInfo[params[0]][member] -1][PlayerInfo[params[0]][rank] -1],
		PlayerInfo[params[0]][rank],
		PlayerInfo[params[0]][name], params[1]);
		foreach(new i: logged_players) if((PlayerInfo[i][member] == PlayerInfo[playerid][member] || is_control_chat {i} == PlayerInfo[playerid][member]) && PlayerInfo[i][settings][0] != 0)SendClientMessage(i, 0x4682B4AA, scm_string);
	}






	format(scm_string,sizeof(scm_string),
	"INSERT INTO `users_jobinfo` (`ji_uid`,`ji_date_invite`,`ji_date_uninvite`,`ji_reason`,`ji_fraction`,`ji_fwarnings`)SELECT `u_id`, `u_fraction_date`, NOW(), '%s','%d','%d' FROM `users` WHERE `u_id` = '%d'",
	params[1], PlayerInfo[params[0]][member],PlayerInfo[params[0]][f_warning], PlayerInfo[params[0]][id]);
	mysql_tquery(sql_connection, scm_string, "", "");


	PlayerInfo[params[0]][member] = 0;
	PlayerInfo[params[0]][rank] = 0;
	PlayerInfo[params[0]][org_skin] = 0;
	update_int_sql(params[0], "u_member", PlayerInfo[params[0]][member]);
	update_int_sql(params[0], "u_rank", PlayerInfo[params[0]][rank]);



	if(is_fraction_duty {params[0]})is_fraction_duty {params[0]} = 0;

	SetPlayerSkin(params[0], PlayerInfo[params[0]][skin]);
	SetPlayerColor(params[0], 0xFFFFFFFF); // col_white
	return 1;
}






cmd:fwarn(playerid, params[])
{
 	if(PlayerInfo[playerid][member] == 0) return 1;
	if(PlayerInfo[playerid][rank] < f_info[PlayerInfo[playerid][member] -1][f_rank_settings][1]) return 1;
	if(sscanf(params, "us[48]", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /fwarn [ид/имя] [причина]");
	if(!IsPlayerConnected(params[0])  || params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(PlayerInfo[params[0]][member] != PlayerInfo[playerid][member]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не состоит в Вашей организации.");
	if(PlayerInfo[params[0]][rank] >= PlayerInfo[playerid][rank]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете дать выговор своему руководству.");
	if(is_text_invalid(params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Причина содержит некорректные символы.");


	PlayerInfo[params[0]][f_warning] ++;
	if(PlayerInfo[params[0]][f_warning] >= 3)
	{
		new scm_string[266];
		format(scm_string, 128, "%s уволил Вас из организации. Причина: "c_white"%s | 3 выговор", PlayerInfo[playerid][name], params[1]);
		SendClientMessage(params[0], col_wavy, scm_string);

		format(scm_string,sizeof(scm_string),
		"INSERT INTO `users_jobinfo` (`ji_uid`,`ji_date_invite`,`ji_date_uninvite`,`ji_reason`,`ji_fraction`,`ji_fwarnings`)SELECT `u_id`, `u_fraction_date`, NOW(), '%s','%d','%d' FROM `users` WHERE `u_id` = '%d'",
		params[1], PlayerInfo[params[0]][member], PlayerInfo[params[0]][f_warning], PlayerInfo[params[0]][id]);
		mysql_tquery(sql_connection, scm_string, "", "");

		PlayerInfo[params[0]][member] = 0;
		PlayerInfo[params[0]][rank] = 0;
		PlayerInfo[params[0]][org_skin] = 0;
		update_int_sql(params[0], "u_member", PlayerInfo[params[0]][member]);
		update_int_sql(params[0], "u_rank", PlayerInfo[params[0]][rank]);


		SetPlayerSkin(params[0], PlayerInfo[params[0]][skin]);
		SetPlayerColor(params[0], 0xFFFFFFFF); // col_white
	}
	update_int_sql(params[0], "u_f_warning", PlayerInfo[params[0]][f_warning]);
	new scm_string[128];
	format(scm_string, sizeof scm_string, "Вы выдали %s выговор(%d/3). Причина: "c_white"%s", PlayerInfo[params[0]][name], PlayerInfo[params[0]][f_warning], params[1]);
	SendClientMessage(playerid, col_wavy, scm_string);

	format(scm_string, sizeof scm_string, "%s выдал Вам выговор(%d/3). Причина: "c_white"%s", PlayerInfo[playerid][name], PlayerInfo[params[0]][f_warning], params[1]);
	SendClientMessage(params[0], col_wavy, scm_string);

    return 1;
}


cmd:unfwarn(playerid, params[])
{
 	if(PlayerInfo[playerid][member] == 0) return 1;
 	if(PlayerInfo[playerid][rank] < f_info[PlayerInfo[playerid][member] -1][f_rank_settings][1]) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /unfwarn [ид/имя]");
	if(!IsPlayerConnected(params[0])  || params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(PlayerInfo[params[0]][member] != PlayerInfo[playerid][member]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не состоит в Вашей организации.");
	if(PlayerInfo[params[0]][rank] >= PlayerInfo[playerid][rank]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете снять выговор своему руководству.");
	if(PlayerInfo[params[0]][f_warning] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У игрока нет выговоров.");


	PlayerInfo[params[0]][f_warning] --;
	update_int_sql(params[0], "u_f_warning", PlayerInfo[params[0]][f_warning]);
	new scm_string[128];
	format(scm_string, sizeof scm_string, "Вы сняли %s выговор(%d/3).", PlayerInfo[params[0]][name], PlayerInfo[params[0]][f_warning]);
	SendClientMessage(playerid, col_wavy, scm_string);

	format(scm_string, sizeof scm_string, "%s снял Вам выговор(%d/3).", PlayerInfo[playerid][name], PlayerInfo[params[0]][f_warning]);
	SendClientMessage(params[0], col_wavy, scm_string);

    return 1;
}



cmd:find(playerid)
{
	if(!PlayerInfo[playerid][member]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не состоите в организации.");
	global_string[0] = EOS;

	new line_string[92],
		fr_count;

	foreach(new i: logged_players)
	{
		if(PlayerInfo[i][member] != PlayerInfo[playerid][member]) continue;
		if(PlayerInfo[i][admin] != 0) continue;
		fr_count ++;
	}
	format(line_string, sizeof(line_string), ""c_white"Всего онлайн: {cccc99}%d\nID\tУровень\tТелефон\tРанг\tВыговоры\tИмя игрока\n\n"c_white"", fr_count);
	strcat(global_string, line_string);

	foreach(new i: logged_players)
	{
	    if(!IsPlayerConnected(i)) continue;
	    if(PlayerInfo[i][member] != PlayerInfo[playerid][member]) continue;
		if(PlayerInfo[i][admin] != 0) continue;

		format(line_string, sizeof(line_string), "%d\t%d\t\t%d\t\t%d\t%d/3\t\t%s%s\n", i, PlayerInfo[i][level], PlayerInfo[i][number], PlayerInfo[i][rank], PlayerInfo[i][f_warning], PlayerInfo[i][name],
		(pl_afk_time[i] >= 2)?(""c_server"[AFK]"c_white""):(""));
		strcat(global_string, line_string);
	}
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Члены организации онлайн", global_string, "Закрыть", "");
	return 1;
}

CMD:gzowner(playerid)
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	
	show_dialog(playerid, d_gzowner, DIALOG_STYLE_LIST, !""scm_dialog"Выдача территории",
	!"Grove Street\n\
	Ballas\n\
	Los Santos Vagos\n\
	Rifa\n\
	Varios Los Aztecas", !"Выдать", !"Закрыть");
	
	return 1;
}

cmd:gzid(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
    for(new i = 0; i < gz_count; i ++)
	{
		if(IsPlayerInGangZone(playerid, i))
		{
			new t_string[98];
			format(t_string, sizeof(t_string), "Gangzone cellid: %d", gz_info[i][gz_id]);
			SendClientMessage(playerid, -1, t_string);
			break;
		}
	}
	return 1;
}

cmd:setskin(playerid, params[])
{
	if(PlayerInfo[playerid][member] == 0) return 1;
	if(PlayerInfo[playerid][rank] < f_info[PlayerInfo[playerid][member] -1][f_rank_settings][1]) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /setskin [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(PlayerInfo[params[0]][member] != PlayerInfo[playerid][member]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не состоит в Вашей организации.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");

	new dialog_string[max_rank * 6],
		frac_id = PlayerInfo[playerid][member];
	for(new j = 0; j < max_rank; j ++)
	{
		if(f_skin[frac_id -1][PlayerInfo[params[0]][gender]][j] == 1) break;
		new line_string[7];
		format(line_string, 7, "%d\n", f_skin[frac_id -1][PlayerInfo[params[0]][gender]][j]);
		strcat(dialog_string, line_string);
	}
	SetPVarInt(playerid, "frac_invite_sk_id", params[0] + 1);

	show_dialog(playerid, d_set_fskin, DIALOG_STYLE_LIST, ""c_server"Выбор одежды", dialog_string, "Сменить", "Отмена");
	return 1;
}


cmd:break(playerid, params[])
{
 	if(!cop_player(playerid) && ! fbi_player(playerid)) return 1;
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете использовать это в машине.");
    if(p_t_info[playerid][p_data][0] !=0 || p_t_info[playerid][p_data][0] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нельзя использовать в интерьере.");
    if(GetPVarInt(playerid,"SetBlock")>0)
	{
        DestroyDynamicObject(GetPVarInt(playerid,"SetBlock"));
        DeletePVar(playerid, "SetBlock");
        SendClientMessage(playerid, col_white,""c_green"* "c_white"Заграждение успешно убрано.");
        return 1;
	}
	show_dialog(playerid, d_cop_break, DIALOG_STYLE_LIST, ""c_server"Заграждения",""c_white"1. Заграждение № 1\n2. Заграждение № 2\n3. Заграждение № 3\n4. Заграждение № 4\n5. Заграждение № 5\n6. Заграждение № 6", "Выбрать", "Закрыть");
	return 1;
}






cmd:cuff(playerid, params[])
{
	if(!cop_player(playerid) && ! fbi_player(playerid)) return 1;
	if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
	if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");
	if(PlayerInfo[playerid][rank] < 2) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Доступно со 2 ранга.");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /cuff [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете на себя надеть наручники.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");

	SetPVarInt(params[0], "PlayerCuffed", 1);
	SetPlayerAttachedObject(params[0], 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_CUFFED);

	new scm_string[82];
	format(scm_string, 82, "%s[%d] надел на Вас наручники.",
	PlayerInfo[playerid][name], playerid);
	SendClientMessage(params[0], col_wavy, scm_string);

	format(scm_string, sizeof(scm_string), "надел(-а) наручники на %s", PlayerInfo[params[0]][name]);
	me_action(playerid, scm_string);
	update_activity(playerid);
	return 1;
}

CMD:uncuff(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 1 && !cop_player(playerid) && !fbi_player(playerid)) return 1;

	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,"Используйте: /uncuff [ид/имя]");
	if(PlayerInfo[playerid][admin] < 1)
	{
		if(!is_fraction_duty{playerid}) return SendClientMessage(playerid, col_white, !""scm_error"Вы не начали рабочий день.");
		if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,"Вы в наручниках.");
		if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,"Вы связаны.");
		if(PlayerInfo[playerid][rank] < 2) return SendClientMessage(playerid, col_gray,"Доступно со 2 ранга.");
		if(params[0] == playerid) return SendClientMessage(playerid, col_gray,"Вы не можете снять с себя наручники.");
	}

	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,"Игрок не найден.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2])|| GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,"Игрок слишком далеко.");

    if(GetPVarInt(params[0], "PlayerCuffed") != 1) return SendClientMessage(playerid, col_white, !""scm_error"На игроке нет наручников.");

	DeletePVar(params[0], "PlayerCuffed");
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
	RemovePlayerAttachedObject(params[0], 1);
	new scm_string[82];
	format(scm_string, 82, "%s[%d] снял с Вас наручники.",
	PlayerInfo[playerid][name], playerid);
	SendClientMessage(params[0], col_wavy, scm_string);

	format(scm_string, sizeof(scm_string), "снял(-а) наручники с %s", PlayerInfo[params[0]][name]);
	me_action(playerid, scm_string);
	return true;
}

cmd:frisk(playerid, params[])
{
	if(!cop_player(playerid) && ! fbi_player(playerid)) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /frisk [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете обыскать самого себя.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");

	new scm_string[98];
	format(scm_string, sizeof(scm_string), ":::: Вещи %s ::::", PlayerInfo[params[0]][name]);
	SendClientMessage(playerid, col_wavy, scm_string);

	format(scm_string, sizeof(scm_string), "-%s",(PlayerInfo[params[0]][crim_ammo]) ?("Патроны"): ("Пусто"));
	SendClientMessage(playerid, col_gray, scm_string);
	format(scm_string, sizeof(scm_string), "-%s",(PlayerInfo[params[0]][crim_guns]) ?("Ед. оружия"): ("Пусто"));
	SendClientMessage(playerid, col_gray, scm_string);
	format(scm_string, sizeof(scm_string), "-%s",(PlayerInfo[params[0]][drugs]) ?("Наркотики"):("Пусто"));
	SendClientMessage(playerid, col_gray, scm_string);
	format(scm_string, sizeof(scm_string), "-%s",(PlayerInfo[params[0]][seed]) ?("Семена"):("Пусто"));
	SendClientMessage(playerid, col_gray, scm_string);

	format(scm_string, sizeof(scm_string), "достал(-а) перчатки и обыскал(-а) %s", PlayerInfo[params[0]][name]);
	me_action(playerid, scm_string);
	return 1;
}


cmd:demote(playerid, params[])
{
	if(!cop_player(playerid) && ! fbi_player(playerid)) return 1;
	if(PlayerInfo[playerid][rank] < 6) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /frisk [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете разжаловать самого себя.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(!army_player(params[0]) && ! cop_player(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не является армейцем или полицейским.");
	if(PlayerInfo[params[0]][leader] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете разжаловать лидера организации.");


	if(PlayerInfo[params[0]][rank] == 1)
	{
		new scm_string[266];
		format(scm_string, 128, "Агент FBI %s уволил Вас из организации.", PlayerInfo[playerid][name]);
		SendClientMessage(params[0], 0x14A3FFFF, scm_string);
		format(scm_string, 128, "Вы уволили %s из организации.", PlayerInfo[params[0]][name]);
		SendClientMessage(playerid, 0x14A3FFFF, scm_string);


		format(scm_string,sizeof(scm_string),
		"INSERT INTO `users_jobinfo` (`ji_uid`,`ji_date_invite`,`ji_date_uninvite`,`ji_reason`,`ji_fraction`,`ji_fwarnings`)SELECT `u_id`, `u_fraction_date`, NOW(), 'разжалован','%d','%d' FROM `users` WHERE `u_id` = '%d'",
		PlayerInfo[params[0]][member],PlayerInfo[params[0]][f_warning], PlayerInfo[params[0]][id]);
		mysql_tquery(sql_connection, scm_string, "", "");


		PlayerInfo[params[0]][member] = 0;
		PlayerInfo[params[0]][rank] = 0;
		PlayerInfo[params[0]][org_skin] = 0;
		update_int_sql(params[0], "u_member", PlayerInfo[params[0]][member]);
		update_int_sql(params[0], "u_rank", PlayerInfo[params[0]][rank]);



		if(is_fraction_duty {params[0]})is_fraction_duty {params[0]} = 0;

		SetPlayerSkin(params[0], PlayerInfo[params[0]][skin]);
		SetPlayerColor(params[0], 0xFFFFFFF); // col_white
		return 1;
	}

	PlayerInfo[params[0]][rank] --;
	update_int_sql(params[0], "u_rank", PlayerInfo[params[0]][rank]);

	new scm_string[128];
	format(scm_string, sizeof(scm_string), "Агент FBI %s понизил вас до %d ранга", PlayerInfo[playerid][name], PlayerInfo[params[0]][rank]);
	SendClientMessage(params[0], 0x14A3FFFF, scm_string);
	format(scm_string, sizeof(scm_string), "Вы понизили %s до %d ранга.", PlayerInfo[params[0]][name], PlayerInfo[params[0]][rank]);
	SendClientMessage(playerid, 0x14A3FFFF, scm_string);
	return 1;
}

cmd:take(playerid, params[])
{
	if(!cop_player(playerid) && ! fbi_player(playerid)) return 1;

	if(PlayerInfo[playerid][rank] < 2) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Доступно со 2 ранга.");


	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /take [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете изымать что-либо у самого себя.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");

	new header_string[18 + MAX_PLAYER_NAME];
	format(header_string, sizeof(header_string), ""c_server"Изъять у %s", PlayerInfo[params[0]][name]);
	show_dialog(playerid, d_take, DIALOG_STYLE_LIST, header_string, "Водительские права\nЛицензию на вод.транспорт\nЛицензию на возд.транспорт\nЛицензию на оружие\nПатроны\nЕд.оружия\nНаркотики", "Выбрать", "Закрыть");
	SetPVarInt(playerid, "target_id", params[0]);
	return 1;
}

cmd:ticket(playerid, params[])
{
	if(!cop_player(playerid) && ! fbi_player(playerid)) return 1;
	if(PlayerInfo[playerid][rank] < 2) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Доступно со 2 ранга.");

	if(sscanf(params, "uds[42]", params[0], params[1], params[2])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /ticket [ид/имя] [сумма] [причина]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете выписать штраф самому себе.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(strlen(params[2]) > 62) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Причина не может быть длиннее 62 символов.");
	if(params[1] < 0 || params[1] > 100000) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Сумма не может быть меньше 0$ или больше 100.000$.");
	new scm_string[130 + MAX_PLAYER_NAME * 2 + 42 + 6 + 6];
	mysql_format(sql_connection, scm_string, sizeof(scm_string), "INSERT INTO `users_tickets` (`t_player`,`t_player_name`,`t_cop_name`,`t_reason`,`t_count`,`t_date`) VALUES ('%d','%s','%s','%s','%d',NOW())",
	PlayerInfo[params[0]][id], PlayerInfo[params[0]][name], PlayerInfo[playerid][name], params[2], params[1]);
	mysql_tquery(sql_connection, scm_string);
	format(scm_string, 144, "Вы выписали %s[%d] штраф в размере %d$. Причина: %s.",
	PlayerInfo[params[0]][name], params[0], params[1], params[2]	);
	SendClientMessage(playerid, col_wavy, scm_string);
	format(scm_string, 144, "%s[%d] выписал(-а) Вам штраф в размере %d$. Причина: %s.",
	PlayerInfo[playerid][name], playerid, params[1], params[2]);
	SendClientMessage(params[0], col_wavy, scm_string);
	return 1;
}


cmd:search(playerid, params[])
{
	if(!cop_player(playerid) && ! fbi_player(playerid)) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /search [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете обыскать самого себя.");
 	if(PlayerInfo[params[0]][wanted] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Данный игрок не находится в розыске.");

	if(is_gps_used {playerid})
	{
		SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Последняя метка уничтожена.");
		DisablePlayerRaceCheckpoint(playerid);
		is_gps_used {playerid} = 0;
	}
	else
	{
		new scm_string[100];
		format(scm_string, sizeof(scm_string), ""c_green"* "c_white"Вы отметили на карте "c_green"%s[%i]"c_white".", PlayerInfo[params[0]][name], params[0]);
		SendClientMessage(playerid, col_white, scm_string);

		DisablePlayerRaceCheckpoint(playerid);
		SetPlayerRaceCheckpoint(playerid, 1, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2], 0.0, 0.0, 0.0, 5);
		is_gps_used {playerid} = 1;
	}
	return 1;
}










cmd:m(playerid, params[])
{
	if(!cop_player(playerid) && PlayerInfo[playerid][member] != 7) return 1;
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 0;
	}
	if(isnull(params)|| params[0] == ' ') return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /m [текст]");

	new veh_id = GetPlayerVehicleID(playerid);
	if(veh_id == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нужно находиться в транспорте.");

	if(veh_info[veh_id -1][v_type] == vehicle_type_server &&(veh_info[veh_id -1][v_owner] == 4 || veh_info[veh_id -1][v_owner] == 5 || veh_info[veh_id -1][v_owner] == 6 || veh_info[veh_id -1][v_owner] == 7))
	{
		new scm_string[144];
		format(scm_string, sizeof(scm_string),"[M]%s %s(%d): %s",
		f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], playerid, params);
		send_world_message(playerid, 30.0, scm_string, col_yellow, col_yellow, col_yellow, false);
	}
	return 1;
}


CMD:su(playerid, params[])
{
    if(!cop_player(playerid) && PlayerInfo[playerid][member] != 7) return 1;
    if(!is_fraction_duty{playerid}) return SendClientMessage(playerid, col_white, !""scm_error"Вы не начали рабочий день.");
    if(PlayerInfo[playerid][rank] < 2) return SendClientMessage(playerid, col_white, !""scm_error"Данная команда доступна с 2 ранга.");
    extract params -> new player:targetid, su_wanted, string:su_reason[64]; else return SendClientMessage(playerid, col_gray, !"Используйте: "c_white"/su [id игрока] [розыск] [причина]");
    if(!IsPlayerConnected(targetid) || targetid == playerid) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");
    if(su_wanted < 1 || su_wanted > 6) return SendClientMessage(playerid, col_white, !""scm_error"Уровень розыска должен быть от 1 до 6.");
    if(PlayerInfo[playerid][jailed] > 0) return SendClientMessage(playerid, col_white, !""scm_error"Нельзя объявить в розыск заключенного.");
    if(pl_afk_time[targetid] > 30) return SendClientMessage(playerid, col_white, !""scm_error"Этот игрок в AFK. Ему нельзя выдать розыск.");
    if(PlayerInfo[targetid][wanted] + su_wanted > 6) return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете выдать игроку более 6 звёзд.");
	if(cop_player(targetid)) return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете выдать розыск законнику.");

    PlayerInfo[targetid][wanted] = su_wanted;
    SetPlayerWantedLevel(targetid, PlayerInfo[targetid][wanted]);
    update_int_sql(targetid, "u_wanted", PlayerInfo[targetid][wanted]);

    new text_string[144];
    format(text_string, sizeof(text_string), "%s %s объявил Вас в розыск. Причина: %s. Текущий уровень розыска: %d", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], su_reason, PlayerInfo[targetid][wanted]);
    SendClientMessage(targetid, col_orange_red, text_string);

    format(text_string, sizeof(text_string), "Вы объявили %s в розыск. Причина: %s. Текущий уровень розыска: %d", PlayerInfo[targetid][name], su_reason, PlayerInfo[targetid][wanted]);
    SendClientMessage(playerid, 0x0099FFFF, text_string);

    format(text_string, sizeof(text_string), "%s %s[%d] объявил %s[%d] в розыск [%d/6], причина: %s", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], playerid, PlayerInfo[targetid][name], targetid, PlayerInfo[targetid][wanted], su_reason);
    foreach(new i: logged_players) if(cop_player(i) || fbi_player(i)) SendClientMessage(i, 0xFFD700FF, text_string);
    return 1;
}

cmd:comp(playerid)
{
	if((! cop_player(playerid) && PlayerInfo[playerid][member] != 7)|| ! IsPlayerInRangeOfPoint(playerid, 3, 1464.5409, -1783.7404, 2342.1479) && ! IsPlayerInRangeOfPoint(playerid, 3, 1464.5437, -1788.0006, 2342.1479) && ! IsPlayerInRangeOfPoint(playerid, 3, -2502.4155, -650.3958, 1331.6520) && veh_info[GetPlayerVehicleID(playerid) -1][v_owner] != PlayerInfo[playerid][member]) return 1;
	show_dialog(playerid, d_police_comp, DIALOG_STYLE_LIST, ""c_server"Служебный компьютер", ""c_server"1. "c_white"Найти преступника\n"c_server"2. "c_white"Досье жителей штата\n"c_server"3. "c_white"Просмотреть веб-камеры\n"c_server"4. "c_white"Слежка по номеру телефона\n"c_server"5. "c_white"Статистика штата\n"c_server"6. "c_white"Прослушать телефонный разговор\n"c_server"7. "c_white"Чёрный рынок\n"c_server"8. "c_white"Особо опасные преступники", "Выбрать", "Закрыть");
	return 1;
}


CMD:clear(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 1 && !cop_player(playerid) && PlayerInfo[playerid][member] != 7) return 1;

	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,"Используйте: /clear [ид/имя]");
	if(PlayerInfo[playerid][admin] < 1)
	{
		if(!is_fraction_duty{playerid}) return SendClientMessage(playerid, col_white, !""scm_error"Вы не начали рабочий день.");
		if(params[0] == playerid) return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете убрать себя из розыска.");
	}
	if(!IsPlayerConnected(params[0])|| params[0] == playerid) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");
	if(PlayerInfo[params[0]][wanted] == 0) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не находится в розыске.");

	new scm_string[26 + MAX_PLAYER_NAME * 2];
    format(scm_string, sizeof(scm_string),"%s %s очистил Ваш розыск.",
	f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name]);
    SendClientMessage(params[0], col_lblue, scm_string);
    format(scm_string, sizeof(scm_string),"Вы очистили розыск игроку %s[%i]", PlayerInfo[params[0]][name], params[0]);
    SendClientMessage(playerid, col_lblue, scm_string);

    format(scm_string, sizeof(scm_string),"%s очистил розыск игроку %s[%i]", PlayerInfo[playerid][name], PlayerInfo[params[0]][name], params[0]);
 	foreach(new i: logged_players)if(cop_player(i))SendClientMessage(i, 0xFF8282AA, scm_string);

	PlayerInfo[params[0]][wanted] = 0;
	SetPlayerWantedLevel(params[0], PlayerInfo[params[0]][wanted]);
	update_int_sql(params[0], "u_wanted", PlayerInfo[params[0]][wanted]);
	return true;
}

cmd:arrest(playerid, params[])
{
	if(!cop_player(playerid) && ! fbi_player(playerid)) return 1;
	if(!IsPlayerInRangeOfPoint(playerid, 3, 1452.6100,-1779.8398,3740.8970)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы слишком далеко от тюрьмы.");
	if(sscanf(params, "udd", params[0], params[1], params[2])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /arrest [ид/имя] [минуты] [выкуп]");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете арестовать самого себя.");
	if(!IsPlayerConnected(params[0])  || params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(PlayerInfo[params[0]][jailed] > 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок уже в тюрьме.");
	if(params[1] < 5 || params[1] > 60) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Время заключения не может быть меньше 5 минут или больше 60 минут.");
	if(params[2] < 10000 || params[2] > 100000) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Сумма выкупа не может быть меньше 10.000$ или больше 100.000$.");
    if(cop_player(params[0])) return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете посадить законника.");

	PlayerInfo[params[0]][bail] = params[2];
	PlayerInfo[params[0]][wanted] = 0;
	update_int_sql(params[0], "u_bail", PlayerInfo[params[0]][bail]);
	update_int_sql(params[0], "u_wanted", PlayerInfo[params[0]][wanted]);
	SetPlayerWantedLevel(params[0], PlayerInfo[params[0]][wanted]);

	new scm_string[44 + MAX_PLAYER_NAME + 9];
	if(params[2] > 0)
	{
		format(scm_string, 68, "Вы были арестованы на %d минут. Залог: %d$", params[1], params[2]);
		SendClientMessage(params[0], col_light_red, scm_string);
		format(scm_string, sizeof(scm_string), "Вы арестовали %s на %d минут(ы). Залог: %d$", PlayerInfo[params[0]][name], params[1], params[2]);
		SendClientMessage(playerid, col_lblue, scm_string);
	}
	else
	{
		format(scm_string, 68, "Вы были арестованы на %d минут. Залог: Без залога", params[1]);
		SendClientMessage(params[0], col_light_red, scm_string);
		format(scm_string, sizeof(scm_string), "Вы арестовали %s на %d минут(ы). Залог: Без залога", PlayerInfo[params[0]][name], params[1]);
		SendClientMessage(playerid, col_lblue, scm_string);

	}

	if(GetPVarInt(params[0], "PlayerCuffed")!= 0)
	{
		DeletePVar(params[0], "PlayerCuffed");
		SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(params[0], 1);

	}
	if(gotome_player[params[0]] != -1)
	{
		DeletePVar(gotome_player[params[0]], "player_gotome");
		gotome_player[params[0]] = -1;
	}


	reset_player_weapon(params[0]);

	PlayerInfo[params[0]][jail] = p_t_info[playerid][p_data][1];
	PlayerInfo[params[0]][jailed] = params[1]* 60;
	update_int_sql(params[0], "u_jail", PlayerInfo[params[0]][jail]);
	new random_jail_pos = random(2);
	set_pos(params[0], jail_spawn[random_jail_pos][0],
						jail_spawn[random_jail_pos][1],
						jail_spawn[random_jail_pos][2],
						jail_spawn[random_jail_pos][3],
						1, PlayerInfo[params[0]][jail]);

	update_activity(playerid);
	return 1;
}

cmd:wanted(playerid)
{
	if(!cop_player(playerid) && PlayerInfo[playerid][member] != 7) return 1;
	ShowWantedList(playerid);
	return 1;
}


cmd:d(playerid, params[])
{
	if(PlayerInfo[playerid][member] >= 18 || PlayerInfo[playerid][member] == 0) return 1;
	if(PlayerInfo[playerid][rank] < 6) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Чат департамента доступен только с 6 ранга.");
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid,  col_light_red, scm_string);
		return 1;
	}
	if(check_advertise(playerid, params)) return 1;

	if(sscanf(params, "s[128]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /d [текст]");
	new scm_string[144];
	format(scm_string, sizeof scm_string, "[D] %s %s[%d]: %s", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], playerid, params[0]);
	foreach(new i: logged_players) if(18 > PlayerInfo[i][member] > 0 && PlayerInfo[i][settings][0]) SendClientMessage(i, 0xFF8282AA, scm_string);
	return 1;
}

cmd:gov(playerid, params[])
{
	if(PlayerInfo[playerid][member] >= 18 && PlayerInfo[playerid][member] != 27 || PlayerInfo[playerid][member] == 0) return 1;
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 0;
	}
	if(!gov_access(playerid)) return 1;
	if(isnull(params)|| params[0] == ' ') return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /gov [текст]");
	if(check_advertise(playerid, params[0])) return 1;
	foreach(new i: logged_players)
	{
		new scm_string[144];
		format(scm_string, sizeof scm_string, "[Гос.Новости] %s [%d]: %s",
		PlayerInfo[playerid][name], playerid, params);
		SendClientMessage(i, 0x4466CCFF, scm_string);
	}
	return 1;
}

stock gov_access(playerid)
{
	if(PlayerInfo[playerid][leader] != 0) return 1;
	if(PlayerInfo[playerid][member] == 11 && PlayerInfo[playerid][member] > 6) return 1;
	return 0;
}

cmd:freezepanel(playerid)
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	global_string[0] = EOS;



	for(new j = 0; j < 5; j ++)
	{
		new line_string[98];
		if(capture_gang_freezed[j] == 0)format(line_string, sizeof(line_string), ""c_white"%s\t"c_green"Разморожено\n", f_info[j + 17][f_name]);
		else format(line_string, sizeof(line_string), ""c_white"%s\t"c_orange_red"Заморожено\n", f_info[j + 17][f_name]);
		strcat(global_string, line_string);
	}
	show_dialog(playerid, d_capture_freeze, DIALOG_STYLE_TABLIST, ""c_server"Статусы заморозки", global_string, "Изменить", "Закрыть");
	return 1;
}

cmd:capture(playerid)
{
	if(!gang_player(playerid)) return 1;
	if(capture_gang_freezed[PlayerInfo[playerid][member] -18] > 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Ваша банда заморожена, Вы не можете начать захват территории.");
	
	if(gz_captured != -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"В данный момент идёт захват территории.");
	if(global_hour < 12 || global_hour > 22) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Захват территорий возможен только с 12 до 23 часов.");
	if(PlayerInfo[playerid][rank] < 8) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Захват доступен только с 8 ранга.");
	if(capture_gang_cd[PlayerInfo[playerid][member] -18] > 0)
	{
		new text_str[78];
		format(text_str, sizeof(text_str), ""c_orange_red"* "c_grey"Захват будет доступен через %s", convert_time(capture_gang_cd[PlayerInfo[playerid][member] -18]));
		return SendClientMessage(playerid, col_gray, text_str);
	}

    for(new i = 0; i < gz_count; i ++)
	{
		if(IsPlayerInGangZone(playerid, i))
		{
			if(gz_info[i][gz_owner] == PlayerInfo[playerid][member]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете захватить свою территорию.");
			if(f_diplomacy[PlayerInfo[playerid][member] -18][gz_info[i][gz_owner] -18] == dip_status_alliance) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете напасть на союзника.");
			if(capture_gang_freezed[gz_info[i][gz_owner] -18] > 0)
			{
				return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Данную банду нельзя атаковать, она заморожена.");
			}


			if(capture_gang_cd[gz_info[i][gz_owner] -18] > 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Данная банда ещё не отдохнула после предыдущего захвата.");


			if(i == 45 || i == 92 || i == 34 || i == 61 || i == 57) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нельзя атаковать базу банды.");

			new owner_counts = 0;
			foreach(new j: logged_players)
			{
				if(gz_info[i][gz_owner] == PlayerInfo[j][member])owner_counts ++;
			}
			if(owner_counts < 3) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете напасть на данную банду, их слишком мало.");

			gz_captured = i;
			gz_info[i][gz_time] = 600;
			gz_info[i][gz_attacker] = PlayerInfo[playerid][member];

			new _string[144];
			format(_string, sizeof(_string), "{%s}%s"c_server" начали захват территории банды {%s}%s",
			f_info[PlayerInfo[playerid][member] -1][f_chat_color],
			f_info[PlayerInfo[playerid][member] -1][f_name],
			f_info[gz_info[i][gz_owner] -1][f_chat_color],
			f_info[gz_info[i][gz_owner] -1][f_name]);


			SendGangMessage(col_gray, _string);

			format(_string, sizeof(_string), "{%s}%s %s[%d] спровоцировал войну за территорию.",
			f_info[PlayerInfo[playerid][member] -1][f_chat_color],

			f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1],
			PlayerInfo[playerid][name],
			playerid);
			SendGangMessage(col_gray, _string);


			format(_string, sizeof(_string), ""c_server"* S.INFO:"c_grey" %s начали захват территории банды %s",
			f_info[PlayerInfo[playerid][member] -1][f_name],
			f_info[gz_info[i][gz_owner] -1][f_name]);
			foreach(new j: admin_players) SendClientMessage(j, col_gray, _string);

			TextDrawSetString(capture_td[5], "CAPTURE_TIME:_10:00");
			TextDrawSetString(capture_td[14], f_info[PlayerInfo[playerid][member] -1][f_name]);
			TextDrawSetString(capture_td[15], f_info[gz_info[i][gz_owner] -1][f_name]);
			TextDrawSetString(capture_td[16], "0");
			TextDrawSetString(capture_td[17], "0");

			owner_points = 0,
				attacker_points	= 0;

			TextDrawColor(capture_td [10], f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
			TextDrawColor(capture_td [11], f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
			TextDrawColor(capture_td [12], f_info[gz_info[i][gz_owner] -1][f_radar_color]);
			TextDrawColor(capture_td [13], f_info[gz_info[i][gz_owner] -1][f_radar_color]);


			capture_gang_cd[PlayerInfo[playerid][member] -18] = 3000;
			capture_gang_cd[gz_info[i][gz_owner] -18] = 3000;
			foreach(new pl_id: logged_players)
			{
				if(!gang_player(pl_id)) continue;
				for(new j = 0; j < 18; j ++)
				{
					TextDrawShowForPlayer(pl_id, capture_td[j]);
				}
				SetPVarInt(pl_id, "gz_td_status", 1);
			}

			format(_string, sizeof(_string),"UPDATE `users` SET `u_capture_start` = `u_capture_start`+1 WHERE `u_id` = '%d' LIMIT 1", PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, _string, "", "");


   			GangZoneFlashForAll(gz_info[i][gz_created], f_info[PlayerInfo[playerid][member] -1][f_radar_color]);

			gz_capture_type = 0;

			gz_info[i][gz_timer] = SetTimerEx("gangzone_timer", 1000, 1, "iiii", i, PlayerInfo[playerid][member], gz_info[i][gz_owner], gz_capture_type);
			break;
		}
	}
	return 1;
}


cmd:capturetime(playerid)
{
	if(!gang_player(playerid)) return 1;
	new line_string[98];
	global_string = ""c_grey"* Время захвата территорий: с 12:00 до 23:00\n\n";
	for(new j = 0; j < 5; j ++)
	{
		format(line_string, sizeof(line_string), "{%s}До захвата %s:"c_white" %s\n",
		f_info[j + 17][f_chat_color], f_info[j + 17][f_name], convert_time(capture_gang_cd[j]));
		strcat(global_string, line_string);

	}
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Информация", global_string, "Закрыть", "");
	return 1;
}

callback: gangzone_timer(gz_tid, gz_attacker_team, gz_owner_team, capture_type)
{
	foreach(new pl_id: logged_players)
	{
		if(!gang_player(pl_id) && GetPVarInt(pl_id, "gz_td_status") ==  1)
		{
			for(new j = 0; j < 18; j ++)
			{
				TextDrawHideForPlayer(pl_id, capture_td[j]);

			}
			DeletePVar(pl_id, "gz_td_status");
			for(new j = 0; j < 5; j ++)if(!IsPlayerMobile(pl_id)) SendDeathMessageToPlayer(pl_id, 1001, 1001, 200);
		}
		else if(gang_player(pl_id) && GetPVarInt(pl_id, "gz_td_status") ==  0)
		{
			for(new j = 0; j < 18; j ++)
			{
				TextDrawShowForPlayer(pl_id, capture_td[j]);
			}
			GangZoneFlashForPlayer(pl_id, gz_info[gz_tid][gz_created], f_info[gz_attacker_team -1][f_radar_color]);
			SetPVarInt(pl_id, "gz_td_status", 1);
		}
	}
	if(gz_info[gz_tid][gz_time] >= 1)
	{
		gz_info[gz_tid][gz_time] --;

		new td_string[24];
		format(td_string, sizeof(td_string), "CAPTURE_TIME:_%s", convert_time(gz_info[gz_tid][gz_time]));
		TextDrawSetString(capture_td[5], td_string);
		if(capture_type == 1)
		{
			owner_points = 0,
				attacker_points	= 0;

			foreach(new i: logged_players)
			{
				if(PlayerInfo[i][member] != gz_info[gz_tid][gz_owner]&& PlayerInfo[i][member] != gz_info[gz_tid][gz_attacker]) continue;
				if(!IsPlayerInGangZone(i, gz_captured)) continue;
				if(PlayerInfo[i][member] == gz_info[gz_tid][gz_owner]) owner_points ++;
				else if(PlayerInfo[i][member] == gz_info[gz_tid][gz_attacker]) attacker_points ++;
			}
			format(td_string, 8, "%d", attacker_points);
			TextDrawSetString(capture_td[17], td_string);
			format(td_string, 8, "%d", owner_points);
			TextDrawSetString(capture_td[16], td_string);
			return 1;
		}
	}
	else if(gz_info[gz_tid][gz_time] < 1)
	{
		if(capture_type == 0)
		{
			if(owner_points >= attacker_points)// победа хозяев
			{
				new _string[92];
				format(_string, sizeof(_string), "{%s}%s отстояли свою территорию",
				f_info[gz_info[gz_tid][gz_owner] -1][f_chat_color],
				f_info[gz_info[gz_tid][gz_owner] -1][f_name]);
				SendGangMessage(col_gray, _string);
			}
			else if(owner_points < attacker_points)// победа атаки
			{
				new _string[92];
				format(_string, sizeof(_string), "{%s}%s отжали территорию у {%s}%s",
				f_info[gz_info[gz_tid][gz_attacker] -1][f_chat_color],
				f_info[gz_info[gz_tid][gz_attacker] -1][f_name],
				f_info[gz_info[gz_tid][gz_owner] -1][f_chat_color],
				f_info[gz_info[gz_tid][gz_owner] -1][f_name]);
				SendGangMessage(col_gray, _string);
				gz_info[gz_tid][gz_owner] = gz_info[gz_tid][gz_attacker];
			}

			foreach(new i: logged_players)
			{
				if(GetPVarInt(i, "gz_td_status") ==  1)
				{
					for(new j = 0; j < 18; j ++)
					{
						TextDrawHideForPlayer(i, capture_td[j]);
					}
					DeletePVar(i, "gz_td_status");
					for(new j = 0; j < 5; j ++)if(!IsPlayerMobile(i)) SendDeathMessageToPlayer(i, 1001, 1001, 200);
				}
			}


			KillTimer(gz_info[gz_tid][gz_timer]);

			gz_captured = -1,
				owner_points = -1,
					attacker_points	= -1;

			gz_info[gz_tid][gz_time] = 0;
			gz_info[gz_tid][gz_attacker] = 0;


			GangZoneStopFlashForAll(gz_info[gz_tid][gz_created]);
			GangZoneHideForAll(gz_info[gz_tid][gz_created]);
			GangZoneShowForAll(gz_info[gz_tid][gz_created], GetGangZoneColor(gz_info[gz_tid][gz_owner]));
			SaveGangZone(gz_tid);
		}
		else
		{
			owner_points = 0,
				attacker_points	= 0;

			foreach(new i: logged_players)
			{
				if(PlayerInfo[i][member] != gz_info[gz_tid][gz_owner]&& PlayerInfo[i][member] != gz_info[gz_tid][gz_attacker]) continue;
				if(PlayerInfo[i][member] == gz_info[gz_tid][gz_owner]) owner_points ++;
				else if(PlayerInfo[i][member] == gz_info[gz_tid][gz_attacker]) attacker_points ++;

				new query_string[98];
				format(query_string,sizeof(query_string),"UPDATE `users` SET `u_captures` = `u_captures`+1 WHERE `u_id` = '%d' LIMIT 1", PlayerInfo[i][id]);
				mysql_tquery(sql_connection, query_string, "", "");


				if(GetPVarInt(i, "gz_td_status") ==  1)
				{
					for(new j = 0; j < 18; j ++)
					{
						TextDrawHideForPlayer(i, capture_td[j]);
					}
					DeletePVar(i, "gz_td_status");
					for(new j = 0; j < 5; j ++)if(!IsPlayerMobile(i)) SendDeathMessageToPlayer(i, 1001, 1001, 200);
				}

			}
			if(owner_points >= attacker_points)// победа хозяев
			{
				new _string[92];
				format(_string, sizeof(_string), "{%s}%s отстояли свою территорию",
				f_info[gz_info[gz_tid][gz_owner] -1][f_chat_color],
				f_info[gz_info[gz_tid][gz_owner] -1][f_name]);
				SendGangMessage(col_gray, _string);
			}
			else if(owner_points < attacker_points)// победа атаки
			{
				new _string[92];
				format(_string, sizeof(_string), "{%s}%s отжали территорию у {%s}%s",
				f_info[gz_info[gz_tid][gz_attacker] -1][f_chat_color],
				f_info[gz_info[gz_tid][gz_attacker] -1][f_name],
				f_info[gz_info[gz_tid][gz_owner] -1][f_chat_color],
				f_info[gz_info[gz_tid][gz_owner] -1][f_name]);
				SendGangMessage(col_gray, _string);
				gz_info[gz_tid][gz_owner] = gz_info[gz_tid][gz_attacker];
			}

			KillTimer(gz_info[gz_tid][gz_timer]);

			gz_captured = -1,
				owner_points = -1,
					attacker_points	= -1;

			gz_info[gz_tid][gz_time] = 0;
			gz_info[gz_tid][gz_attacker] = 0;


			GangZoneStopFlashForAll(gz_info[gz_tid][gz_created]);
			GangZoneHideForAll(gz_info[gz_tid][gz_created]);
			GangZoneShowForAll(gz_info[gz_tid][gz_created], GetGangZoneColor(gz_info[gz_tid][gz_owner]));
			SaveGangZone(gz_tid);

		}

	}
	return 1;
}

cmd:diplomacy(playerid)
{
	if(!gang_player(playerid) && ! mafia_player(playerid)) return 1;

	static const dip_status[][] = {
	"{FFF2C7}Нейтралитет",
	"{AA3333}Война",
	"{33AA33}Союз",
	""c_server"Запрос на союз",
	""c_server"Запрос на союз"
	};

	new pvar_string[8],
		step;

	global_string[0] = EOS;

	for(new i = 0; i < 8; i ++)
	{
		if(i + 18 == PlayerInfo[playerid][member]) continue;

		format(pvar_string, 8, "d_%d", step);
		SetPVarInt(playerid, pvar_string, i + 18);

		strcat(global_string, "{");
		strcat(global_string, f_info[i + 17][f_chat_color]);
		strcat(global_string, "}");
		strcat(global_string, f_info[i + 17][f_name]);
		strcat(global_string, "\t");
		strcat(global_string, dip_status[f_diplomacy[PlayerInfo[playerid][member] -18][i]]);
		strcat(global_string, "\n");
		step ++;
	}
	show_dialog(playerid, d_dip_list, DIALOG_STYLE_TABLIST, ""c_server"Дипломатия", global_string, "Выбрать", "Закрыть");
	return 1;
}

cmd:dip(playerid)
{
	if(!gang_player(playerid) && ! mafia_player(playerid)) return 1;

	static const dip_status[][] = {
	"{FFF2C7}Нейтралитет",
	"{AA3333}Война",
	"{33AA33}Союз",
	""c_server"Запрос на союз",
	""c_server"Запрос на союз"
	};

	new pvar_string[8],
		step;

	global_string[0] = EOS;

	for(new i = 0; i < 8; i ++)
	{
		if(i + 18 == PlayerInfo[playerid][member]) continue;

		format(pvar_string, 8, "d_%d", step);
		SetPVarInt(playerid, pvar_string, i + 18);

		strcat(global_string, "{");
		strcat(global_string, f_info[i + 17][f_chat_color]);
		strcat(global_string, "}");
		strcat(global_string, f_info[i + 17][f_name]);
		strcat(global_string, "\t");
		strcat(global_string, dip_status[f_diplomacy[PlayerInfo[playerid][member] -18][i]]);
		strcat(global_string, "\n");
		step ++;
	}
	show_dialog(playerid, d_dip_list, DIALOG_STYLE_TABLIST, ""c_server"Дипломатия", global_string, "Выбрать", "Закрыть");
	return 1;
}

cmd:setrank(playerid)
{
	if(PlayerInfo[playerid][leader] == 0) return 1;
	if(!gang_player(playerid) && ! mafia_player(playerid)) return 1;
	global_string[0] = EOS;
	for(new i = 0; i < f_info[PlayerInfo[playerid][member] -1][f_rank_settings][0]; i ++)
	{
		new line_string[72];
		format(line_string, 72, ""c_grey"%i. "c_white"%s\n", i + 1, f_rank[PlayerInfo[playerid][member] -1][i]);
		strcat(global_string, line_string);
	}
	show_dialog(playerid, d_lmenu_rankname_list, DIALOG_STYLE_LIST, ""c_server"Смена названия ранга", global_string, "Далее", "Закрыть");
	return 1;
}

cmd:lmenu(playerid)
{
	if(!PlayerInfo[playerid][leader]) return 1;
	ShowLeaderMenu(playerid);
	return 1;
}

stock ShowLeaderMenu(playerid)
{
	if(mafia_player(playerid)|| gang_player(playerid))
		show_dialog(playerid, d_lmenu, DIALOG_STYLE_LIST, ""c_server"Меню лидера", "Принять игрока\nУволить игрока\nИзменить ранг игрока\nЧлены организации онлайн\nЧлены организации оффлайн\nУправление автопарком\nЧёрный список\nОткрыть/закрыть общак", "Выбрать", "Закрыть");

	else
		show_dialog(playerid, d_lmenu, DIALOG_STYLE_LIST, ""c_server"Меню лидера", "Принять игрока\nУволить игрока\nИзменить ранг игрока\nЧлены организации онлайн\nЧлены организации оффлайн\nУправление автопарком\nЧёрный список", "Выбрать", "Закрыть");

	return 1;
}
cmd:giveleader(playerid, params [])
{
	if(PlayerInfo[playerid][member] != 11) return 1;
	if(PlayerInfo[playerid][rank] < 6 || PlayerInfo[playerid][rank] > 9) return 1;

	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /giveleader [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
//	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить к самому себе.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");

	switch(PlayerInfo[playerid][rank])
	{
		case 6:
		{
			global_string[0] = EOS;
			for(new j = 14; j < 14 + 3; j ++)
			{
				new line_string[64];
				format(line_string, 64, "{%s}%s\n", f_info[j][f_chat_color], f_info[j][f_name]);
				strcat(global_string, line_string);
			}
			strcat(global_string, ""c_white"Снять полномочия");

			show_dialog(playerid, d_giveleader, DIALOG_STYLE_LIST, ""c_server"Назначение руководителя", global_string, "Выбрать", "Закрыть");
		}
		case 7:
		{
			global_string[0] = EOS;
			new line_string[64];
			for(new j = 3; j < 3 + 4; j ++)
			{
				format(line_string, 64, "{%s}%s\n", f_info[j][f_chat_color], f_info[j][f_name]);
				strcat(global_string, line_string);
			}
			strcat(global_string, ""c_white"Снять полномочия");
			show_dialog(playerid, d_giveleader, DIALOG_STYLE_LIST, ""c_server"Назначение руководителя", global_string, "Выбрать", "Закрыть");
		}
		case 8:
		{
			global_string[0] = EOS;
			new line_string[64];
			format(line_string, 64, "{%s}%s\n", f_info[7][f_chat_color], f_info[7][f_name]);
			strcat(global_string, line_string);
			strcat(global_string, ""c_white"Снять полномочия");
			show_dialog(playerid, d_giveleader, DIALOG_STYLE_LIST, ""c_server"Назначение руководителя", global_string, "Выбрать", "Закрыть");
		}
	}
	SetPVarInt(playerid, "pl_giveleader_id", params[0]);
	return 1;
}
cmd:ffind(playerid, params [])
{
	if(PlayerInfo[playerid][member] != 11) return 1;
	if(PlayerInfo[playerid][rank] < 6 || PlayerInfo[playerid][rank] > 9) return 1;

	switch(PlayerInfo[playerid][rank])
	{
		case 6:
		{
			global_string[0] = EOS;
			for(new j = 14; j < 14 + 3; j ++)
			{
				new line_string[64];
				format(line_string, 64, "{%s}%s\n", f_info[j][f_chat_color], f_info[j][f_name]);
				strcat(global_string, line_string);
			}
			show_dialog(playerid, d_ffind, DIALOG_STYLE_LIST, ""c_server"Члены организации онлайн", global_string, "Выбрать", "Закрыть");
		}
		case 7:
		{
			global_string[0] = EOS;
			new line_string[64];
			for(new j = 3; j < 3 + 4; j ++)
			{
				format(line_string, 64, "{%s}%s\n", f_info[j][f_chat_color], f_info[j][f_name]);
				strcat(global_string, line_string);
			}
			show_dialog(playerid, d_ffind, DIALOG_STYLE_LIST, ""c_server"Члены организации онлайн", global_string, "Выбрать", "Закрыть");
		}
		case 8:
		{
			global_string[0] = EOS;
			new line_string[64];
			format(line_string, 64, "{%s}%s\n", f_info[7][f_chat_color], f_info[7][f_name]);
			strcat(global_string, line_string);
			show_dialog(playerid, d_ffind, DIALOG_STYLE_LIST, ""c_server"Члены организации онлайн", global_string, "Выбрать", "Закрыть");
		}
	}
	return 1;
}





cmd:ssf(playerid, params [])
{
	if(PlayerInfo[playerid][member] != 11) return 1;
	if(PlayerInfo[playerid][rank] < 6 || PlayerInfo[playerid][rank] > 9) return 1;

	switch(PlayerInfo[playerid][rank])
	{
		case 6:
		{
			global_string[0] = EOS;
			for(new j = 14; j < 14 + 3; j ++)
			{
				new line_string[64];
				format(line_string, 64, "{%s}%s\n", f_info[j][f_chat_color], f_info[j][f_name]);
				strcat(global_string, line_string);
			}
			strcat(global_string, ""c_white"Отключить рацию");
			show_dialog(playerid, d_ssf, DIALOG_STYLE_LIST, ""c_server"Подключение к рации", global_string, "Выбрать", "Закрыть");
		}
		case 7:
		{
			global_string[0] = EOS;
			new line_string[64];
			for(new j = 3; j < 3 + 4; j ++)
			{
				format(line_string, 64, "{%s}%s\n", f_info[j][f_chat_color], f_info[j][f_name]);
				strcat(global_string, line_string);
			}
			strcat(global_string, ""c_white"Отключить рацию");
			show_dialog(playerid, d_ssf, DIALOG_STYLE_LIST, ""c_server"Подключение к рации", global_string, "Выбрать", "Закрыть");
		}
		case 8:
		{
			global_string[0] = EOS;
			new line_string[64];
			format(line_string, 64, "{%s}%s\n", f_info[7][f_chat_color], f_info[7][f_name]);
			strcat(global_string, line_string);
			strcat(global_string, ""c_white"Отключить рацию");
			show_dialog(playerid, d_ssf, DIALOG_STYLE_LIST, ""c_server"Подключение к рации", global_string, "Выбрать", "Закрыть");
		}
	}
	return 1;
}


cmd:sf(playerid, params[])
{
	if(PlayerInfo[playerid][member] != 11) return 1;
	if(PlayerInfo[playerid][rank] < 6 || PlayerInfo[playerid][rank] > 9) return 1;

	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 1;
	}



	if(sscanf(params, "s[120]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /sf [текст]");
 	if(check_advertise(playerid, params[0])) return 1;
	new scm_string[144];

	format(scm_string, sizeof scm_string, "[R] %s %s[%d]: %s", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], playerid, params[0]);
	foreach(new i: logged_players) if((PlayerInfo[i][member] == player_ssf {playerid} || is_control_chat {i} == player_ssf {playerid}) && PlayerInfo[i][settings][0] != 0)SendClientMessage(i, 0x4682B4AA, scm_string);

	SendClientMessage(playerid, 0x4682B4AA, scm_string);
	//	SetPlayerChatBubble(playerid, "сказал(а) что-то в рацию", col_light_purple, 13.0, 7000);
	return 1;
}



cmd:rank(playerid, params [])
{
	if(PlayerInfo[playerid][member] == 0) return 1;
	if(PlayerInfo[playerid][rank] < f_info[PlayerInfo[playerid][member] -1][f_rank_settings][1]) return 1;
	if(PlayerInfo[playerid][rank] < 11 && fbi_player(playerid)) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /rank [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете изменить ранг самому себе.");

	if(PlayerInfo[params[0]][member] != PlayerInfo[playerid][member]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не состоит в Вашей организации.");
	if(PlayerInfo[params[0]][rank] >= PlayerInfo[playerid][rank]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нельзя изменить ранг своему руководству.");


	global_string[0] = EOS;
	for(new i = 0; i < f_info[PlayerInfo[playerid][member] -1][f_rank_settings][0]; i ++)
	{
		new line_string[72];
		format(line_string, 72, ""c_grey"%i. "c_white"%s\n", i + 1, f_rank[PlayerInfo[playerid][member] -1][i]);
		strcat(global_string, line_string);
	}
	show_dialog(playerid, d_rank, DIALOG_STYLE_LIST, ""c_server"Смена ранга", global_string, "Выбрать", "Закрыть");
	SetPVarInt(playerid, "pl_setrank_id", params[0]);
	return 1;
}

cmd:heal(playerid, params[])
{
	if(!medic_player(playerid)) return 1;
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /heal [ид/имя] [цена]");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете лечить самого себя, обратитесь к другому врачу.");
	if(!IsPlayerConnected(params[0])  || params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(params[1] < 5 || params[1] > 1000) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Стоимость лечения не может быть меньше 5$ или больше 1000$.");
	if(p_t_info[params[0]][p_dialog] != -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У игрока уже открыт диалог.");



	new dialog_string[118];
	format(dialog_string, sizeof(dialog_string),
	""c_green"* "c_white"Вы предложили "c_green"%s "c_white"вылечить его за "c_green"%d$",
	PlayerInfo[params[0]][name], params[1]);
	SendClientMessage(playerid, col_white, dialog_string);

	format(dialog_string, sizeof(dialog_string),
	""c_server"%s "c_white"предлагает вылечить Вас за {33AA33}%d$",
	PlayerInfo[playerid][name], params[1]);
	show_dialog(params[0], d_heal, DIALOG_STYLE_MSGBOX, ""c_server"Медицинское обслуживание", dialog_string, "Принять", "Закрыть");

	heal_price[params[0]] = params[1];
	heal_id[params[0]] = playerid;
	update_activity(playerid);
	return 1;
}


cmd:givemc(playerid, params[])
{
	if(!medic_player(playerid)) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /givemc [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");

	show_dialog(playerid, d_give_mc, DIALOG_STYLE_LIST, ""c_server"Выдача мед.карты",
	"{cccc99}Выберите результат осмотра:\n\
	"c_white"Серьезно болен/больна\n\
	Наблюдаются отклонения\n\
	Полностью здоров(а)",
	"Выбрать", "Закрыть");
	SetPVarInt(playerid, "mc_playerid", params[0]);
	return 1;
}

cmd:med(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /med [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");

	new scm_string[98];
	format(scm_string, sizeof(scm_string ), "SELECT * FROM `users_medcards` WHERE `mc_owner` = '%d' LIMIT 1", PlayerInfo[playerid][id]);
	mysql_tquery(sql_connection, scm_string, "mc_callback", "ii", playerid, params[0]);
	return 1;
}


callback: mc_callback(playerid, to_id)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет медицинской карты.");
	new cmd_mc_date[18],
		cmd_mc_result;



	cmd_mc_result = cache_get_field_content_int(0, "mc_result", sql_connection);
	cache_get_field_content(0, "mc_date", cmd_mc_date, sql_connection, 18);

	static const mc_status[][] = {
		"Серьезно болен/больна",
		"Наблюдаются отклонения",
		"Полностью здоров(а)"};

	if(to_id == playerid)format(global_string, 72, "посмотрел(-а) свою мед.карту");
	else format(global_string, 72, "показал(-а) мед.карту %s", PlayerInfo[to_id][name]);

	me_action(playerid, global_string);

	new dialog_string[186];

	format(dialog_string, sizeof(dialog_string), ""c_white"Владелец: %s\nДата выдачи: %s\n\n\n{cccc99}%s",
	PlayerInfo[playerid][name], cmd_mc_date, mc_status[cmd_mc_result]);

	show_dialog(to_id, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Медицинская карта", dialog_string, "Закрыть", "");
	return 1;
}


cmd:orglist(playerid)
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	global_string[0] = EOS;
	for(new j = 0; j < fraction_count; j ++)
	{
		new line_string[64];
		format(line_string, 64, ""c_white"ID:%d -{%s}%s\n", j + 1, f_info[j][f_chat_color], f_info[j][f_name]);
		strcat(global_string, line_string);
	}
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Список организаций", global_string, "Закрыть", "");

	return 1;
}


cmd:en(playerid)
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if(v_velo(vehicleid)) return 1;
	toggle_engine(playerid, vehicleid);
	return 1;
}


cmd:light(playerid)
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if(v_velo(vehicleid)|| v_plane(vehicleid)|| v_boat(vehicleid)) return 1;
	toggle_lights(vehicleid);
	return 1;
}



CMD:lock(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
		new veh_id = GetPlayerVehicleID(playerid);
		if((veh_info[veh_id -1][v_type] != vehicle_type_player || veh_info[veh_id -1][v_owner] != PlayerInfo[playerid][id]) && p_t_info[playerid][v_key] != veh_id) return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет ключей от данного транспорта.");

		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);

		new engine, lights, alarm, doors, bonnet, boot, objective;

		veh_info[veh_id -1][v_locked] = !veh_info[veh_id -1][v_locked];
		GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(veh_id, engine, lights, alarm, veh_info[veh_id -1][v_locked], bonnet, boot, objective);
		me_action(playerid, (!veh_info[veh_id -1][v_locked]) ? "открыл(-а) транспорт" : "закрыл(-а) транспорт");
	}
	else
	{

		new Float:pl_pos_x,
			Float:pl_pos_y,
			Float:pl_pos_z;

		GetPlayerPos(playerid, pl_pos_x, pl_pos_y, pl_pos_z);

		if(p_t_info[playerid][v_key] != 0 && IsVehicleInRangeOfPoint(p_t_info[playerid][v_key], 5.0, pl_pos_x, pl_pos_y, pl_pos_z))
		{
			new veh_id = p_t_info[playerid][v_key];
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);

			new engine, lights, alarm, doors, bonnet, boot, objective;
			veh_info[veh_id -1][v_locked] = !veh_info[veh_id -1][v_locked];
			GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(veh_id, engine, lights, alarm, veh_info[veh_id -1][v_locked], bonnet, boot, objective);
			me_action(playerid, (!veh_info[veh_id -1][v_locked]) ? "открыл(-а) транспорт" : "закрыл(-а) транспорт");
			GameTextForPlayer(playerid, (veh_info[veh_id -1][v_locked]) ? "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~ BOAT UNLOCK" :
				"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~ BOAT LOCK", 3000, 3);

			return 1;
		}

		foreach(new veh_id:player_vehicles[playerid])
		{
			if(!IsVehicleInRangeOfPoint(veh_id, 2.5, pl_pos_x, pl_pos_y, pl_pos_z)) continue;

			if(v_boat(veh_id))
			{
				GameTextForPlayer(playerid, (veh_info[veh_id -1][v_locked]) ? "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~ BOAT UNLOCK" :
					"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~ BOAT LOCK", 3000, 3);
			}
			else
			{
				GameTextForPlayer(playerid, (veh_info[veh_id -1][v_locked]) ? "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~ CAR UNLOCK" :
					"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~ CAR LOCK", 3000, 3);
			}

			new engine, lights, alarm, doors, bonnet, boot, objective;

			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			veh_info[veh_id -1][v_locked] = !veh_info[veh_id -1][v_locked];
			GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(veh_id, engine, lights, alarm, veh_info[veh_id -1][v_locked], bonnet, boot, objective);
			me_action(playerid, (!veh_info[veh_id -1][v_locked]) ? "открыл(-а) транспорт" : "закрыл(-а) транспорт");
			break;
		}
	}
	return 1;
}


cmd:vlock(playerid)
{
	if(PlayerInfo[playerid][admin] < 4) return 1;
	if(IsValidVehicle(GetPlayerVehicleID(playerid)))
	{
		new veh_id = GetPlayerVehicleID(playerid);

		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		if(veh_info[veh_id -1][v_locked])
		{
			new engine, lights, alarm, doors, bonnet, boot, objective;

			veh_info[veh_id -1][v_locked] = false;
			GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(veh_id, engine, lights, alarm, false, bonnet, boot, objective);
		}
		else
		{
			new engine, lights, alarm, doors, bonnet, boot, objective;

			veh_info[veh_id -1][v_locked] = true;
			GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(veh_id, engine, lights, alarm, true, bonnet, boot, objective);
		}
	}
	else
	{
		foreach(new veh_id:streamed_vehicles[playerid])
		{
			if(IsVehicleInRangeOfPoint(veh_id, 5.0, p_t_info[playerid][p_pos][0], p_t_info[playerid][p_pos][1], p_t_info[playerid][p_pos][2])){}
			else continue;
			PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			if(veh_info[veh_id -1][v_locked])
			{
				new engine, lights, alarm, doors, bonnet, boot, objective;

				veh_info[veh_id -1][v_locked] = false;
				GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(veh_id, engine, lights, alarm, false, bonnet, boot, objective);
				GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~ CAR UNLOCK", 3000, 3);
				break;
			}
			else
			{
				new engine, lights, alarm, doors, bonnet, boot, objective;

				veh_info[veh_id -1][v_locked] = true;
				GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(veh_id, engine, lights, alarm, true, bonnet, boot, objective);
				GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~ CAR LOCK", 3000, 3);
				break;
			}
		}
	}
	return 1;
}


cmd:time(playerid)
{
	if(GetPlayerState(playerid) ==  PLAYER_STATE_ONFOOT)ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_watch", 4.1, 0, 0, 0, 0, 0);

	new year,
		month,
		day,
		hour,
		minute,
		second,
		mtext[11],
		dialog_string[278];

	getdate(year, month, day);
	gettime(hour, minute, second);
	FixHour(hour);
	hour = global_hour;


	switch(month)
	{
		case 1: mtext = "Января";
		case 2: mtext = "Февраля";
		case 3: mtext = "Марта";
		case 4: mtext = "Апреля";
		case 5: mtext = "Мая";
		case 6: mtext = "Июня";
		case 7: mtext = "Июля";
		case 8: mtext = "Августа";
		case 9: mtext = "Сентября";
		case 10: mtext = "Октября";
		case 11: mtext = "Ноября";
		case 12: mtext = "Декабря";
	}
	if(PlayerInfo[playerid][jailed] > 0)
	{
		format(dialog_string, sizeof(dialog_string),"\
		"c_server"Вы позвонили в службу точного времени!\n\n\
		"c_server"*"c_white" Сегодняшняя дата:\t\t"c_grey"%d %s 2020 г\n\
		"c_server"*"c_white" Текущее время:\t\t"c_grey"%s%d:%s%d\n\n\
		"c_server"*"c_white" Время заключения:\t\t"c_grey"%d секунд(ы)",
		day,mtext,(hour < 10) ? ("0") : (""), hour, (minute < 10) ? ("0") : (""), minute, PlayerInfo[playerid][jailed]);
	}
	else
	{
		format(dialog_string, sizeof(dialog_string),"\
		"c_server"Вы позвонили в службу точного времени!\n\n\
		"c_server"*"c_white" Сегодняшняя дата:\t\t"c_grey"%d %s 2020 г\n\
		"c_server"*"c_white" Текущее время:\t\t"c_grey"%s%d:%s%d\n\n",
		day,mtext,(hour < 10) ? ("0") : (""), hour, (minute < 10) ? ("0") : (""), minute);
	}
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Точное время", dialog_string, "Закрыть", "");
	me_action(playerid, "позвонил(а) в службу точного времени");
	return 1;
}

cmd:buy(playerid)
{
	new _b_id = GetPVarInt(playerid, "p_biz_id")-1;
	if(_b_id == -1) return 1;
	if(b_info[_b_id -1][b_type] != bizz_type_shop) return 1;
	ShowShopDialog(playerid);
	return 1;
}

cmd:bheal(playerid)
{
	new _b_id = GetPVarInt(playerid, "p_biz_id")-1;
	if(_b_id == -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нужно находиться в бизнесе.");
	if(!b_info[_b_id][b_improve][1]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"В данном бизнесе нет медицинского обслуживания.");

	if(PlayerInfo[playerid][money] < 250) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас недостаточно средств для использования медицинского обслуживания.");


	give_money(playerid, -250);
	insert_money_log(playerid, INVALID_PLAYER_ID, -250, "аптечка бизнеса");

	b_info[_b_id][b_money] += 250;
	b_info[_b_id][b_cash_today] += 250;


	new Float:pl_health;
	GetPlayerHealth(playerid, pl_health);
	if(pl_health + 65 > 160)set_health(playerid, 160);
	else set_health(playerid, pl_health + 65);

	GameTextForPlayer(playerid, "~g~+65HP", 2000, 1);

	me_action(playerid, "использовал(-а) аптечку");
	if(GetPlayerState(playerid) ==  PLAYER_STATE_ONFOOT && ! GetPVarInt(playerid, "PlayerCuffed") && ! GetPVarInt(playerid, "PlayerTied")) ApplyAnimation(playerid, "ped", "gum_eat", 4.0, 0, 0, 0, 0, 0, 1);
	return 1;
}


cmd:service(playerid)
{
	if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
	if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");
	if(!PlayerInfo[playerid][number]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет телефона.");
	if(!p_t_info[playerid][phone_toggled]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас отключен мобильный телефон.");
	if(p_t_info[playerid][phone_id] != INVALID_PLAYER_ID || is_ether_calling {playerid} != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Закончите текущий разговор.");
	show_dialog(playerid, d_service, DIALOG_STYLE_LIST, ""c_server"Сервисы", "Полиция\nСкорая помощь\nТакси\nМеханик\nДоставка продуктов", "Выбрать", "Назад");
	return 1;
}

/*CMD:phone(playerid)
{
	if(GetPVarInt(playerid, "PlayerPhone") > 0)
	{
	    switch(GetPVarInt(playerid, "PlayerPhone"))
	    {
		    case 1:
		    {
	  			for(new j = 0; j < 81; j++) TextDrawHideForPlayer(playerid, Samsung_S20_TD[j]);
				CancelSelectTextDraw(playerid);
		    }
		    case 2:
		    {
	  			for(new j = 0; j < 80; j++) TextDrawHideForPlayer(playerid, Iphone_TD[j]);
				CancelSelectTextDraw(playerid);
		    }
		}
		return DeletePVar(playerid, "PlayerPhone");
	}
	if(!PlayerInfo[playerid][phone_selected]) return SendClientMessage(playerid, col_white, !""scm_error"У вас нет мобильного телефона.");
	if(!PlayerInfo[playerid][number]) return SendClientMessage(playerid, col_white, !""scm_error"У вас нет SIM-карты.");
	new phone_name[12], scm_string[57];
	
	switch(PlayerInfo[playerid][phone_selected])
	{
	    case 1: phone_name = "Samsung S20";
	    case 2: phone_name = "iPhone X";
	}
	
	format(scm_string, sizeof(scm_string), "достал %s из кармана", phone_name);
	me_action(playerid, scm_string);
	show_phone(playerid);
	return 1;
}

stock show_phone(playerid)
{
	switch(PlayerInfo[playerid][phone_selected])
	{
	    case 1:
		{
			for(new j = 0; j < 81; j++) TextDrawShowForPlayer(playerid, Samsung_S20_TD[j]);
			SelectTextDraw(playerid, 0xB0C4DEFF);
		}
		case 2:
		{
			for(new j = 0; j < 80; j++) TextDrawShowForPlayer(playerid, Iphone_TD[j]);
			SelectTextDraw(playerid, 0xB0C4DEFF);
		}
	}

	SetPVarInt(playerid, "PlayerPhone", PlayerInfo[playerid][phone_selected]);
	return 1;
}*/

cmd:phone(playerid)
{
	if(!PlayerInfo[playerid][phone_selected]) return SendClientMessage(playerid, col_white, !""scm_error"У вас нет мобильного телефона.");
	if(!PlayerInfo[playerid][number]) return SendClientMessage(playerid, col_white, !""scm_error"У вас нет SIM-карты.");
	
	global_string[0] = EOS;
	format(global_string, 254, "\
	"c_server"1. "c_white"Позвонить в экстренный службы\n\
	"c_server"2. "c_white"Позвонить на номер\n\
	"c_server"3. "c_white"Отправить сообщение\n\
	"c_server"4. "c_white"Список контактов\n\
	"c_server"5. "c_white"Добавить контакт\n\
	"c_server"6. %s "c_white"телефон",
	(p_t_info[playerid][phone_toggled]) ? ""c_orange_red"Выключить" : ""c_green"Включить");
	show_dialog(playerid, d_phone_main, DIALOG_STYLE_LIST, !""scm_dialog"Мобильный телефон", global_string, !"Выбрать", !"Закрыть");
	
	new phone_name[12], scm_string[57];

	switch(PlayerInfo[playerid][phone_selected])
	{
	    case 1: phone_name = "Samsung S20";
	    case 2: phone_name = "iPhone X";
	}

	format(scm_string, sizeof(scm_string), "достал %s из кармана", phone_name);
	me_action(playerid, scm_string);
	
	return 1;
}

cmd:call(playerid, params[])
{
	if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
	if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");
	if(!PlayerInfo[playerid][number]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет телефона.");
	if(!p_t_info[playerid][phone_toggled]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас отключен мобильный телефон.");
	if(p_t_info[playerid][phone_id] != INVALID_PLAYER_ID || is_ether_calling {playerid} != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Закончите текущий разговор.");
	if(PlayerInfo[playerid][phone_balance] < 1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Баланс вашего телефона равен нулю.");
	if(is_ether {playerid} != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете говорить по телефону во время эфира.");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /call [номер]");
	if(PlayerInfo[playerid][number] == params[0]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете звонить самому себе.");

	if(params[0] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Данный номер не существует.");

	if(params[0] == 911)
	{
		show_dialog(playerid, d_service, DIALOG_STYLE_LIST, ""c_server"Сервисы", "Полиция\nСкорая помощь\nТакси\nМеханик\nДоставка продуктов", "Выбрать", "Назад");
		return 1;
	}
	if(params[0] == f_info[25][f_materials]&& cas_price[0] != 0)
	{
		new scm_string[98];
		format(scm_string, sizeof scm_string, ""c_white"Стоимость звонка: %d$.\n\nВы действительно хотите позвонить?",
		cas_price[0]);
		show_dialog(playerid, d_ether_calling, DIALOG_STYLE_MSGBOX, ""c_server"Звонок на прямой эфир", scm_string, "Да", "Нет");
		is_ether_calling {playerid} = 26;
		return 1;
	}
	if(params[0] == f_info[26][f_materials]&& cas_price[1] != 0)
	{
		new scm_string[98];
		format(scm_string, sizeof scm_string, ""c_white"Стоимость звонка: %d$.\n\nВы действительно хотите позвонить?",
		cas_price[1]);
		show_dialog(playerid, d_ether_calling, DIALOG_STYLE_MSGBOX, ""c_server"Звонок на прямой эфир",scm_string, "Да", "Нет");
		is_ether_calling {playerid} = 27;
		return 1;
	}
	if(params[0] == f_info[27][f_materials]&& cas_price[2] != 0)
	{
		new scm_string[98];
		format(scm_string, sizeof scm_string, ""c_white"Стоимость звонка: %d$.\n\nВы действительно хотите позвонить?",
		cas_price[2]);
		show_dialog(playerid, d_ether_calling, DIALOG_STYLE_MSGBOX, ""c_server"Звонок на прямой эфир", scm_string, "Да", "Нет");
		is_ether_calling {playerid} = 28;
		return 1;
	}
	foreach(new i: logged_players)
	{
		if(PlayerInfo[i][number] == params[0])
		{
			if(!p_t_info[i][phone_toggled]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У игрока отключен мобильный телефон.");
			if(p_t_info[i][phone_id] != INVALID_PLAYER_ID) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Абонент в данный момент уже с кем-то разговаривает.");
			new scm_string[128];
			format(scm_string, 128, "Вы звоните %s (%d). Ожидание ответа…", PlayerInfo[i][name], PlayerInfo[i][number]);
			SendClientMessage(playerid, -1, scm_string);

			format(scm_string, 128, "Вам звонит %s (%d). Ответьте на звонок...", PlayerInfo[playerid][name], PlayerInfo[playerid][number]);
			SendClientMessage(i, -1, scm_string);

			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
			SetPlayerAttachedObject(playerid, 3, 18870, 6, 0.09, 0.019, -0.011, 88.90, -176.40, 0.49, 0.787, 0.753, 0.562);

			p_t_info[playerid][phone_caller] = 1;
			p_t_info[i][phone_id] = playerid;
			p_t_info[i][phone_caller] = 1;

			return 1;
		}
	}
	return 1;
}


cmd:p(playerid)
{
	if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
	if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");
	if(!PlayerInfo[playerid][number]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет телефона.");
	if(!p_t_info[playerid][phone_toggled]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас отключен мобильный телефон.");
	if(p_t_info[playerid][phone_id] == INVALID_PLAYER_ID || p_t_info[playerid][phone_caller] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вам никто не звонит.");
	if(!p_t_info[playerid][p_logged]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вам никто не звонит.");
	if(is_ether {playerid} != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете говорить по телефону во время эфира.");

	new scm_string[30 + MAX_PLAYER_NAME];
	format(scm_string, sizeof(scm_string), "%s ответил(а) на звонок.", PlayerInfo[playerid][name]);
	SendClientMessage(p_t_info[playerid][phone_id], col_yellow, scm_string);

	p_t_info[playerid][phone_caller] = 0;
	p_t_info[p_t_info[playerid][phone_id]][phone_caller] = 0;
	p_t_info[p_t_info[playerid][phone_id]][phone_id] = playerid;

	PlayerInfo[p_t_info[playerid][phone_id]][phone_balance] --;

	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
	SetPlayerAttachedObject(playerid, 3, 18870, 6, 0.09, 0.019, -0.011, 88.90, -176.40, 0.49, 0.787, 0.753, 0.562);


	return 1;
}

cmd:h(playerid)
{
	if(!PlayerInfo[playerid][number]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет телефона.");
	if(!p_t_info[playerid][phone_toggled]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас отключен мобильный телефон.");
	if(p_t_info[playerid][phone_id] == INVALID_PLAYER_ID && is_ether_calling {playerid} == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вам никто не звонит.");


	if(is_ether_calling {playerid} != 0)
	{
		is_ether {playerid} = 0;
		is_ether_calling {playerid} = 0;
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(playerid, 3);
		SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы отключились от эфира.");

		return 1;
	}
	new scm_string[20 + MAX_PLAYER_NAME];
	format(scm_string, sizeof(scm_string), "%s положил(а) трубку.", PlayerInfo[playerid][name]);
	SendClientMessage(p_t_info[playerid][phone_id], col_light_purple, scm_string);
	SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы закончили текущий разговор.");


 	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
 	SetPlayerSpecialAction(p_t_info[playerid][phone_id], SPECIAL_ACTION_STOPUSECELLPHONE);
  	RemovePlayerAttachedObject(playerid, 3);
  	RemovePlayerAttachedObject(p_t_info[playerid][phone_id], 3);

	p_t_info[p_t_info[playerid][phone_id]][phone_id] = INVALID_PLAYER_ID;
	p_t_info[p_t_info[playerid][phone_id]][phone_caller] = 0;

	p_t_info[playerid][phone_id] = INVALID_PLAYER_ID;
	p_t_info[playerid][phone_caller] = 0;

	return 1;
}
cmd:sms(playerid, params[])
{
	if(PlayerInfo[playerid][mute])
	{
		new _t_string[38];
		format(_t_string, sizeof(_t_string),"У Вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, _t_string);
		return 0;
	}
	if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
	if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");
	if(!PlayerInfo[playerid][number]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет телефона.");
	if(!p_t_info[playerid][phone_toggled]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас отключен мобильный телефон.");
	if(PlayerInfo[playerid][phone_balance] < 5) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет средств для отправки SMS.");
	if(sscanf(params, "ds[82]", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /sms [номер] [текст]");
	if(params[0] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Данный номер не существует.");
	check_advertise(playerid, params[1]);
	foreach(new i: logged_players)
	{
		if(PlayerInfo[i][number] == params[0])
		{
			if(i == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нельзя отправить SMS-самому себе.");

			if(!p_t_info[i][phone_toggled])
			{
				return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У игрока отключен мобильный телефон.");
			}
			new scm_string[144];

			format(scm_string, sizeof(scm_string), "SMS: %s | Получатель: %s(%i) [т. %i]", params[1], PlayerInfo[i][name], i, PlayerInfo[i][number]);
			SendClientMessage(playerid, col_yellow, scm_string);
			format(scm_string, sizeof(scm_string), "SMS: %s | Отправитель: %s(%i) [т. %i]", params[1], PlayerInfo[playerid][name], playerid, PlayerInfo[playerid][number]);
			SendClientMessage(i,  col_yellow, scm_string);

			format(scm_string, sizeof(scm_string), "SMS: %s(%d) to %s(%d) | %s", PlayerInfo[playerid][name], playerid, PlayerInfo[i][name], i, params[1]);
			foreach(new j: admin_players)
			{
				if(big_ears {playerid} == 0) continue;
				SendClientMessage(j,  col_yellow, scm_string);
			}
			PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			PlayerInfo[playerid][phone_balance] --;
			return 1;
		}
	}
	SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"В настоящий момент абонент недоступен!");
	return 1;
}
cmd:fspawnchange(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /fspawnchange [организация]");
	if(params[0] < 0 || params[0] > fraction_count) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Неверный ID организации.");
	params[0] --;
	GetPlayerPos(playerid, f_info[params[0]][f_spawn][0], f_info[params[0]][f_spawn][1], f_info[params[0]][f_spawn][2]);
	GetPlayerFacingAngle(playerid, f_info[params[0]][f_spawn][3]);

	f_info[params[0]][f_spawn_int] = GetPlayerInterior(playerid);
	f_info[params[0]][f_spawn_virt] =  GetPlayerVirtualWorld(playerid);

	new sql_string[82 + 9 * 4];
	format(sql_string, sizeof(sql_string), "Вы успешно изменили место спавна организации \"%s\".",
	f_info[params[0]][f_name]);
	SendClientMessage(playerid, col_succes, sql_string);

	mysql_format(sql_connection, sql_string, sizeof(sql_string), "UPDATE `fractions` SET `f_spawn` = '%f|%f|%f|%f|%d|%d' WHERE `f_id` = '%d' LIMIT 1",
	f_info[params[0]][f_spawn][0], f_info[params[0]][f_spawn][1], f_info[params[0]][f_spawn][2],
	f_info[params[0]][f_spawn][3],
	f_info[params[0]][f_spawn_int],
	f_info[params[0]][f_spawn_virt],
	params[0] + 1);
	mysql_tquery(sql_connection, sql_string, "", "");
	return 1;
}

cmd:togphone(playerid)
{
	if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
	if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");
	if(!PlayerInfo[playerid][number]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет телефона.");
	if(!p_t_info[playerid][phone_toggled])
	{
		p_t_info[playerid][phone_toggled] = true;
		SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы включили мобильный телефон.");
	}
	else
	{
		p_t_info[playerid][phone_toggled] = false;
		SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы отключили мобильный телефон.");

	}
	return 1;
}

cmd:ears(playerid)
{
	if(PlayerInfo[playerid][admin] < 2) return 1;
	if(big_ears {playerid} == 0)
	{
		big_ears {playerid} = 1;
		SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы включили режим отслеживания SMS.");
	}
	else
	{
		big_ears {playerid} = 0;
		SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы отключили режим отслеживания SMS.");
	}
	return 1;
}



cmd:exit(playerid)
{
	new h = GetPVarInt(playerid, "house_id")-1;
	if(h < 0)
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не находитесь рядом с выходом из дома!");
	set_pos(playerid, h_info[h][h_pos][0], h_info[h][h_pos][1], h_info[h][h_pos][2], h_info[h][h_pos][3], 0, h_info[h][h_vw]);
	SetPVarInt(playerid, "tp_area_used", 1);
	DeletePVar(playerid, "house_id");
	if(h_info[h][h_radio_status] == 1)StopAudioStreamForPlayer(playerid);
	return 1;
}


//==========================================================================================================================

cmd:edit(playerid)
{
	if(PlayerInfo[playerid][member] != 27 || PlayerInfo[playerid][rank] < 2) return 1;
 	if(GetPVarInt(playerid, "ad_listitem"))
    {
    	ad_info[GetPVarInt(playerid,"ad_listitem")-1][ad_checking] = false;
    	DeletePVar(playerid, "ad_listitem");
	}
	show_ad_list(playerid);
	return 1;
}

cmd:advertise(playerid, params[])
{

	if(ad_cooldown >= gettime()) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нельзя посылать объявление чаще одного в минуту.");
	if(isnull(params)|| strlen(params)> 100) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /ad [текст объявления]");
	SetPVarString(playerid, "advert_text", params);

	new dialog_string[226];
	format(dialog_string, 226,""c_white"Цена объявления: "c_server"%i$\n"c_white"Текст: "c_server"%s\n\nВы действительно хотите отправить объявление?", ad_price, params);
	show_dialog(playerid, d_advert, DIALOG_STYLE_MSGBOX, ""c_server"Подача объявления",dialog_string, "Принять", "Отменить");
	return 1;
}
alias:advertise("ad");

//==========================================================================================================================

cmd:skill(playerid, params[])
{
	if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
	if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /skill [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");

	global_string[0] = EOS;

	format(global_string, 1000, ""c_white"SDPistol:\t[%s]%d\nDeagle:\t[%s]%d\nShotGun:\t[%s]%d\nMP5\t\t[%s]%d\nAK47:\t\t[%s]%d\nM4A1:\t\t[%s]%d\nRifle:\t\t[%s]%d",
	ToDevelopSkills(PlayerInfo[playerid][gun_skills][0],100 -PlayerInfo[playerid][gun_skills][0]),PlayerInfo[playerid][gun_skills][0],
	ToDevelopSkills(PlayerInfo[playerid][gun_skills][1],100 -PlayerInfo[playerid][gun_skills][1]),PlayerInfo[playerid][gun_skills][1],
	ToDevelopSkills(PlayerInfo[playerid][gun_skills][2],100 -PlayerInfo[playerid][gun_skills][2]),PlayerInfo[playerid][gun_skills][2],
	ToDevelopSkills(PlayerInfo[playerid][gun_skills][3],100 -PlayerInfo[playerid][gun_skills][3]),PlayerInfo[playerid][gun_skills][3],
	ToDevelopSkills(PlayerInfo[playerid][gun_skills][4],100 -PlayerInfo[playerid][gun_skills][4]),PlayerInfo[playerid][gun_skills][4],
	ToDevelopSkills(PlayerInfo[playerid][gun_skills][5],100 -PlayerInfo[playerid][gun_skills][5]),PlayerInfo[playerid][gun_skills][5],
	ToDevelopSkills(PlayerInfo[playerid][gun_skills][6],100 -PlayerInfo[playerid][gun_skills][6]),PlayerInfo[playerid][gun_skills][6]);
	show_dialog(params[0], d_none, DIALOG_STYLE_MSGBOX,""c_server"Навыки владения оружием", global_string, "Закрыть", "");

	if(params[0] != playerid)
	{
		new _scm_string[64];
		format(_scm_string, 64, "показал выписку из тира %s.", PlayerInfo[params[0]][name]);
		me_action(playerid, _scm_string);
	}
	else
	{
		me_action(playerid, "посмотрел свою выписку из тира.");
	}
	return 1;
}

cmd:myskill(playerid, params[])
{
	if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
	if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");
	global_string[0] = EOS;

	format(global_string, 1000, ""c_white"SDPistol:\t[%s]%d\nDeagle:\t[%s]%d\nShotGun:\t[%s]%d\nMP5\t\t[%s]%d\nAK47:\t\t[%s]%d\nM4A1:\t\t[%s]%d\nRifle:\t\t[%s]%d",
	ToDevelopSkills(PlayerInfo[playerid][gun_skills][0],100 -PlayerInfo[playerid][gun_skills][0]),PlayerInfo[playerid][gun_skills][0],
	ToDevelopSkills(PlayerInfo[playerid][gun_skills][1],100 -PlayerInfo[playerid][gun_skills][1]),PlayerInfo[playerid][gun_skills][1],
	ToDevelopSkills(PlayerInfo[playerid][gun_skills][2],100 -PlayerInfo[playerid][gun_skills][2]),PlayerInfo[playerid][gun_skills][2],
	ToDevelopSkills(PlayerInfo[playerid][gun_skills][3],100 -PlayerInfo[playerid][gun_skills][3]),PlayerInfo[playerid][gun_skills][3],
	ToDevelopSkills(PlayerInfo[playerid][gun_skills][4],100 -PlayerInfo[playerid][gun_skills][4]),PlayerInfo[playerid][gun_skills][4],
	ToDevelopSkills(PlayerInfo[playerid][gun_skills][5],100 -PlayerInfo[playerid][gun_skills][5]),PlayerInfo[playerid][gun_skills][5],
	ToDevelopSkills(PlayerInfo[playerid][gun_skills][6],100 -PlayerInfo[playerid][gun_skills][6]),PlayerInfo[playerid][gun_skills][6]);
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX,""c_server"Навыки владения оружием", global_string, "Закрыть", "");
	me_action(playerid, "посмотрел свою выписку из тира.");
	return 1;
}




cmd:getskill(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 1) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /getskill [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");

	global_string[0] = EOS;

	format(global_string, 1000, ""c_white"SDPistol:\t[%s]%d\nDeagle:\t[%s]%d\nShotGun:\t[%s]%d\nMP5\t\t[%s]%d\nAK47:\t\t[%s]%d\nM4A1:\t\t[%s]%d\nRifle:\t\t[%s]%d",
	ToDevelopSkills(PlayerInfo[params[0]][gun_skills][0],100 -PlayerInfo[params[0]][gun_skills][0]),PlayerInfo[params[0]][gun_skills][0],
	ToDevelopSkills(PlayerInfo[params[0]][gun_skills][1],100 -PlayerInfo[params[0]][gun_skills][1]),PlayerInfo[params[0]][gun_skills][1],
	ToDevelopSkills(PlayerInfo[params[0]][gun_skills][2],100 -PlayerInfo[params[0]][gun_skills][2]),PlayerInfo[params[0]][gun_skills][2],
	ToDevelopSkills(PlayerInfo[params[0]][gun_skills][3],100 -PlayerInfo[params[0]][gun_skills][3]),PlayerInfo[params[0]][gun_skills][3],
	ToDevelopSkills(PlayerInfo[params[0]][gun_skills][4],100 -PlayerInfo[params[0]][gun_skills][4]),PlayerInfo[params[0]][gun_skills][4],
	ToDevelopSkills(PlayerInfo[params[0]][gun_skills][5],100 -PlayerInfo[params[0]][gun_skills][5]),PlayerInfo[params[0]][gun_skills][5],
	ToDevelopSkills(PlayerInfo[params[0]][gun_skills][6],100 -PlayerInfo[params[0]][gun_skills][6]),PlayerInfo[params[0]][gun_skills][6]);
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX,""c_server"Навыки владения оружием", global_string, "Закрыть", "");

	return 1;
}
//==========================================================================================================================

cmd:radio(playerid, params[])
{
	show_dialog(playerid, d_radio_select, DIALOG_STYLE_LIST,""c_server"Выбор радиостанции", "National Public Radio\nВыключить", "Принять", "Закрыть");
	return 1;
}

cmd:audience(playerid)
{
	new aud;

	foreach(new i: logged_players)
	{
		if(PlayerInfo[i][radio] == 27)aud ++;
	}
	new _dialog_string[78];
	format(_dialog_string, sizeof(_dialog_string), ""c_white"National Public Radio | %d", aud);
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX,!""scm_dialog"Слушатели радиостанций", _dialog_string, !"Закрыть", !"");
	return 1;
}



cmd:t(playerid, params[])
{
	if(is_ether {playerid} == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны быть в эфире!");

	if(sscanf(params, "s[118]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /t [текст]");
	new scm_string[144];

	if(is_ether {playerid} == 27)format(scm_string, sizeof(scm_string ),"[Радио] [Тел] %s: %s ", PlayerInfo[playerid][name], params[0]);
	if(PlayerInfo[playerid][member] == 27)format(scm_string, sizeof(scm_string ),"[Радио] %s: %s ", PlayerInfo[playerid][name], params[0]);


	foreach(new i: logged_players)
	{
		SendClientMessage(i, 0x1EBF7FAA, scm_string);
	}
	return 1;
}

CMD:ether(playerid)
{
	if(PlayerInfo[playerid][member] != 27) return 1;
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 1448.0076, -1055.2706, 1717.9939)) return SendClientMessage(playerid, col_white, !""scm_error"Вы должны находиться в месте проведения эфиров.");
	if(PlayerInfo[playerid][rank] < 5) return SendClientMessage(playerid, col_white, !""scm_error"Эфир доступен с 5 ранга.");
	if(is_ether {playerid} == 0)
	{
		is_ether {playerid} = PlayerInfo[playerid][member];
		SendClientMessage(playerid, col_white, !""scm_info"Вы вошли в эфир (Принятие звонков и смс /cas).");
	}
	else
	{
		is_ether {playerid} = 0;
		SendClientMessage(playerid, col_white, !""scm_info"Вы закончили эфир.");
		if(cas_price[PlayerInfo[playerid][member] -26] != 0)pc_cmd_offcas(playerid);
	}
	return 1;
}

cmd:nmenu(playerid)
{
	if(PlayerInfo[playerid][member] != 27) return 1;
	show_nmenu(playerid);
	return 1;
}


cmd:cas(playerid, params[])
{
	if(PlayerInfo[playerid][member] != 27) return 1;
	if(is_ether {playerid} == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны быть в эфире!");
	if(cas_price[PlayerInfo[playerid][member] -26] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Приём звонков и смс уже запущен!");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /cas [цена звонка]");
	if(params[0] < 1 || params[0] > 1000) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Цена звонка не может быть меньше 1$ или больше 1000$!");
	cas_price[PlayerInfo[playerid][member] -26] = params[0];
	SendClientMessage(playerid, col_succes, "Чтобы отключить приём звонков, введите команду /offcas.");
	return 1;
}


cmd:offcas(playerid)
{
	if(PlayerInfo[playerid][member] != 27) return 1;
	if(is_ether {playerid} == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны быть в эфире!");
	if(cas_price[PlayerInfo[playerid][member] -26] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Приём звонков и смс ещё не запущен!");
	cas_price[PlayerInfo[playerid][member] -26] = 0;
	new scm_string[98];

	format(scm_string, sizeof scm_string, "%s %s закончил принятие звонков. Доход: %d$.", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], cas_bank[PlayerInfo[playerid][member] -26]);
	foreach(new i: logged_players)
	{
		if(PlayerInfo[i][member] == PlayerInfo[playerid][member]) SendClientMessage(i, 0x7DA1FFFF, scm_string);
		if(is_ether {i} == 0 || is_ether {i} != PlayerInfo[playerid][member] || i == playerid) continue;
		is_ether {i} = 0;
		SetPlayerSpecialAction(i, SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(i, 2);
	}
	return 1;
}

cmd:numether(playerid)
{
	if(PlayerInfo[playerid][leader] != 27) return 1;
	if(cas_price[PlayerInfo[playerid][member] -26] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нельзя изменить номер во время приёма звонков.");

	new _dialog_string[98];
	format(_dialog_string, sizeof _dialog_string, ""c_white"Номер: %d.\n\nЕсли хотите изменить номер, укажите его в пустую графу:", f_info[PlayerInfo[playerid][member] -1][f_materials]);
	show_dialog(playerid, d_numether, DIALOG_STYLE_INPUT,""c_server"Номер прямого эфира", _dialog_string, "Принять", "Отмена");
	return 1;
}

cmd:incas(playerid, params[])
{
	if(PlayerInfo[playerid][member] != 27) return 1;
	if(is_ether {playerid} == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны быть в эфире!");
	if(cas_price[PlayerInfo[playerid][member] -26] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Приём звонков и смс ещё не запущен!");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /incas [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(is_ether_calling {params[0]} == 0 &&
		(! IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid))) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не пытается позвонить в эфир и не находится рядом с вами.");

	if(is_ether_calling {params[0]} != 0 && p_t_info[params[0]][p_dialog] == d_ether_calling) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не пытается позвонить в эфир");

	new scm_string[78];
	format(scm_string, sizeof scm_string, "Вы подключили к прямому эфиру слушателя %s.", PlayerInfo[params[0]][name]);
	SendClientMessage(playerid, col_succes, scm_string);

	is_ether {params[0]} = PlayerInfo[playerid][member];
	is_ether_calling {params[0]} = 0;
	return 1;
}

cmd:uncas(playerid, params[])
{
	if(PlayerInfo[playerid][member] != 27) return 1;
	if(is_ether {playerid} == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны быть в эфире!");
	if(cas_price[PlayerInfo[playerid][member] -26] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Приём звонков и смс ещё не запущен!");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /uncas [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(is_ether {params[0]} == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не находится в эфире.");


	new scm_string[98];
	format(scm_string, sizeof scm_string, "%s %s отключил слушателя %s от эфира.",
	f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1],
	PlayerInfo[playerid][name], PlayerInfo[params[0]][name]);

	foreach(new i: logged_players)
	{
		if(PlayerInfo[i][member] == PlayerInfo[playerid][member]) SendClientMessage(i, 0x7DA1FFFF, scm_string);
	}
	is_ether {params[0]} = 0;
	is_ether_calling {params[0]} = 0;
 	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_STOPUSECELLPHONE);
  	RemovePlayerAttachedObject(params[0], 2);
	return 1;
}


//==========================================================================================================================





cmd:ash(playerid)
{
	if(GetPVarInt(playerid,"AutoExam")) return 1;
	show_dialog(playerid,d_auto_exam_1,0,"Автошкола",""c_white"\t\t\t\t\t\tШкола вождения\n\nДобро пожаловать в автошколу. Чтобы сдать на права Вам нужно выполнить следующие действия\n1. Прочитайте и запомните ПДД\n2. Сдайте тест на знание ПДД\n3. Сдайте практический экзамен иструктору","Далее","Выход");
	SetPVarInt(playerid,"AutoExam", true);
	return 1;
}
cmd:licenses(playerid)
{
    global_string[0] = EOS;
    format(global_string, 400, "%s"c_white"Водительские права: %s\n",global_string,(PlayerInfo[playerid][drive_lic]) ? (""c_green"Есть") : (""c_orange_red"Нет"));
    format(global_string, 400, "%s"c_white"Лицензия пилота: %s\n",global_string,(PlayerInfo[playerid][fly_lic]) ? (""c_green"Есть") : (""c_orange_red"Нет"));
    format(global_string, 400, "%s"c_white"Лицензия на водный транспорт: %s\n", global_string,(PlayerInfo[playerid][boat_lic]) ? (""c_green"Есть") : (""c_orange_red"Нет"));
    format(global_string, 400, "%s"c_white"Лицензия на оружие: %s\n", global_string,(PlayerInfo[playerid][gun_lic]) ? (""c_green"Есть") : (""c_orange_red"Нет"));
	show_dialog(playerid, d_none, 0, ""c_server"Лицензии", global_string, "Закрыть", "");
	me_action(playerid, "смотрит свои лицензии");
	return 1;
}

cmd:lic(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /lic [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");

	global_string[0] = EOS;

    format(global_string, 400, "%s"c_white"Водительские права: %s\n",global_string,(PlayerInfo[playerid][drive_lic]) ? (""c_green"Есть") : (""c_orange_red"Нет"));
    format(global_string, 400, "%s"c_white"Лицензия пилота: %s\n",global_string,(PlayerInfo[playerid][fly_lic]) ? (""c_green"Есть") : (""c_orange_red"Нет"));
    format(global_string, 400, "%s"c_white"Лицензия на водный транспорт: %s\n", global_string,(PlayerInfo[playerid][boat_lic]) ? (""c_green"Есть") : (""c_orange_red"Нет"));
    format(global_string, 400, "%s"c_white"Лицензия на оружие: %s\n", global_string,(PlayerInfo[playerid][gun_lic]) ? (""c_green"Есть") : (""c_orange_red"Нет"));
	show_dialog(params[0], d_none, 0, ""c_server"Лицензии", global_string, "Закрыть", "");

	if(params[0] != playerid)
	{
		new _scm_string[64];
		format(_scm_string, 64, "показал лицензии %s.", PlayerInfo[params[0]][name]);
		me_action(playerid, _scm_string);
	}
	else
	{
		me_action(playerid, "смотрит свои лицензии");
	}
	return 1;
}
//===================================================================================================================


cmd:createservervehicle(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	if(GetPlayerState(playerid)!= PLAYER_STATE_DRIVER) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны быть в транспорте.");
	if(sscanf(params, "dds[12]d", params[0], params[1], params[2], params[3])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /createservervehicle [модель][owner][номер][type]");
	if(params[0] < 400 || params[0] > 611) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /createservervehicle [модель][owner][номер][type]");
	new veh_id = GetPlayerVehicleID(playerid);
	for(new i = 1; i < MAX_VEHICLES; i ++)
	{
		if(IsValidVehicle(i)) continue;
		veh_info[i -1][v_owner] = params[1];
		veh_info[i -1][v_model] = params[0];
		format(veh_info[i -1][v_plate], 12, "%s", params[2]);

		GetVehiclePos(veh_id, veh_info[i -1][v_pos][0], veh_info[i -1][v_pos][1], veh_info[i -1][v_pos][2]);
		GetVehicleZAngle(veh_id, veh_info[i -1][v_pos][3]);

		veh_info[i -1][v_rank] = 0;

		veh_info[i -1][v_type] = params[3];
		
        if(veh_info[i -1][v_owner] == 1)veh_info[i -1][v_vehicle] = CreateVehicle(veh_info[i -1][v_model], veh_info[i -1][v_pos][0], veh_info[i -1][v_pos][1], veh_info[i -1][v_pos][2], veh_info[i -1][v_pos][3], veh_info[i -1][v_color][0], veh_info[i -1][v_color][1], -1, 1);
		else veh_info[i -1][v_vehicle] = CreateVehicle(veh_info[i -1][v_model], veh_info[i -1][v_pos][0], veh_info[i -1][v_pos][1], veh_info[i -1][v_pos][2], veh_info[i -1][v_pos][3], veh_info[i -1][v_color][0], veh_info[i -1][v_color][1], -1);
		SetVehicleNumberPlate(veh_info[i][v_vehicle], veh_info[i -1][v_plate]);
		veh_info[i -1][v_fuel] = 60.0;

		new sql_string[288];
		mysql_format(sql_connection, sql_string, 288, "INSERT INTO `server_vehicles` (`sv_model`,`sv_owner`,`sv_plate`,`sv_pos_x`,`sv_pos_y`,`sv_pos_z`,`sv_pos_a`,`sv_type`) VALUES ('%d','%d','%e','%f','%f','%f','%f','%d')",
		params[0], params[1], params[2],
		veh_info[i -1][v_pos][0], veh_info[i -1][v_pos][1], veh_info[i -1][v_pos][2], veh_info[i -1][v_pos][3], params[3]);
		mysql_tquery(sql_connection, sql_string, "create_vehicle_callback", "d", i);
		break;
	}
	SendClientMessage(playerid, col_white, "Транспорт успешно создан.");
	return 1;
}


cmd:route(playerid)
{
	if(PlayerInfo[playerid][job] != job_bus) return 1;
	if(player_rentcar[playerid] == INVALID_VEHICLE_ID || player_rentcar[playerid] != player_vehicle[playerid]) return 1;
	if(veh_info[player_rentcar[playerid] -1][v_type] != vehicle_type_job || veh_info[player_rentcar[playerid] -1][v_owner] != job_bus) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не в служебном транспорте!");
	show_dialog (playerid,d_bus_route,2,""c_server"Выберите маршрут:", "1. Лос-Сантос -Завод (3000$/рейс)\n2. Лос-Сантос -Лесопилка (3400$/рейс)\n3. Лос-Сантос -Шахта (3800$/рейс)\n4. Лос-Сантос -Автошкола (3200$/рейс)\n5. Лос-Сантос -Порт (2800$/рейс)", "Выбрать", "Отмена");
	return 1;
}

cmd:delivery(playerid)
{
	if(PlayerInfo[playerid][job] != job_delivery && PlayerInfo[playerid][job] != job_fuel_delivery) return 1;
	if(GetPlayerState(playerid)!= PLAYER_STATE_DRIVER) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не в служебном транспорте.");

	if(player_rentcar[playerid] == INVALID_VEHICLE_ID) return 1;
	if(veh_info[player_vehicle[playerid] -1][v_type] != vehicle_type_job || (veh_info[player_vehicle[playerid] -1][v_owner] != job_fuel_delivery && veh_info[player_vehicle[playerid] -1][v_owner] != job_delivery)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не в служебном транспорте.");

	new d_string[110];
	format(d_string, sizeof(d_string), ""c_server"Товара в транспорте: "c_grey"%d кг.\n"c_white"Закупка товара\nСписок заказов\nВзять заказ",
	veh_info[GetPlayerVehicleID(playerid)-1][v_cargo]);
	show_dialog(playerid, d_delivery, DIALOG_STYLE_LIST, ""c_server"Доставка", d_string, "Выбрать", "Закрыть");
	return 1;
}







cmd:stoprent(playerid)
{
	if(player_rentcar[playerid] == INVALID_VEHICLE_ID) return 1;
	show_dialog(playerid, d_end,0, ""c_server"Прекращение аренды", ""c_white"Вы дейтвительно хотите прекратить аренду транспорта?\n\n"c_grey"* Деньги за аренду возвращены не будут.","Да","Отмена");
	return 1;
}



cmd:end(playerid)
{
	if(PlayerInfo[playerid][job] != job_bus && PlayerInfo[playerid][job] != job_taxi && PlayerInfo[playerid][job] != job_mechanic && PlayerInfo[playerid][job] != job_trucker && PlayerInfo[playerid][job] != job_gazon) return 1;
	if(player_rentcar[playerid] == INVALID_VEHICLE_ID) return 1;
	if(veh_info[player_rentcar[playerid] -1][v_type] != vehicle_type_job || veh_info[player_rentcar[playerid] -1][v_owner] != PlayerInfo[playerid][job]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не в служебном транспорте!");

	show_dialog(playerid, d_end,0, ""c_server"Конец рабочего дня", ""c_white"Вы дейтвительно хотите прекратить аренду транспорта?\n\n"c_grey"* Деньги за аренду возвращены не будут.","Да","Отмена");
	return 1;
}

cmd:taxi(playerid)
{
	if(PlayerInfo[playerid][job] != job_taxi) return 1;
	if(player_rentcar[playerid] == INVALID_VEHICLE_ID) return 1;
	if(veh_info[player_rentcar[playerid] -1][v_type] != vehicle_type_job || veh_info[player_rentcar[playerid] -1][v_owner] != job_taxi) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не в служебном транспорте!");
	show_dialog(playerid, d_taxi, DIALOG_STYLE_INPUT,""c_server"Тариф", ""c_white"Введите стоимость проезда за 1 км.:", "Принять", "Закрыть");
	return 1;
}

cmd:mech(playerid)
{
	if(PlayerInfo[playerid][job] != job_mechanic) return 1;
	if(player_rentcar[playerid] == INVALID_VEHICLE_ID) return 1;
	if(veh_info[player_rentcar[playerid] -1][v_type] != vehicle_type_job || veh_info[player_rentcar[playerid] -1][v_owner] != job_mechanic) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не в служебном транспорте!");

	show_dialog(playerid,d_start_mech,DIALOG_STYLE_INPUT, !""scm_dialog"Автомеханик",
				!""c_white"Используйте название вашей технической службы \nили оставьте поле пустым", !"Готово", !"Отмена");

	return 1;
}

cmd:fcontract(playerid)
{
    if(PlayerInfo[playerid][job] != job_mechanic) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Вы не работаете механиком.");
    else if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Вы должны быть в машине.");
    else if(veh_info[player_rentcar[playerid] -1][v_type] != vehicle_type_job || veh_info[player_rentcar[playerid] -1][v_owner] != job_mechanic) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Вы должны быть в рабочей машине.");

	for(new t = 0; t < b_count; t ++)
	{
	    if(b_info[t][b_type] != bizz_type_gas) continue;
	    if(!IsPlayerInRangeOfPoint(playerid, 10.0, b_info[t][b_position][0], b_info[t][b_position][1], b_info[t][b_position][2])) continue;

		if(b_info[t][b_price] == 0) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Цена за 1 литр не назначена владельцем заправки.");
		if(b_info[t][b_owner_inc] == -1) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"У данной заправки нет владельца, она не работает.");


		new _scm_string[128];
		format(_scm_string, 128, ""c_white"Стоимость 1 литра: %d$\n\nИспользуйте количество бензина, которое хотите закупить\n(число должно быть кратным 2)", b_info[t][b_cost]);
		show_dialog(playerid, d_mech_contract,DIALOG_STYLE_INPUT,""c_server"Закупка топлива",_scm_string,"Купить","Отмена");

		SetPVarInt(playerid,"f_biz",t);
	    return 1;
	}
	SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Вы должны быть рядом с заправкой.");
	return 1;
}

cmd:refill(playerid,params[])
{
    if(PlayerInfo[playerid][job] != job_mechanic) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Вы не работаете механиком.");

	if(sscanf(params,"uii",params[0],params[1],params[2])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /refill [ид/имя] [бензин] [цена]");
	if(params[2] < 80 || params[2] > 1500) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Цена не может быть больше 1500$ и меньше 80$");
	if(GetPVarInt(playerid,"toplivo") < params[1] || params[1] < 0) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"У вас нет столько топлива.");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(GetPlayerState(params[0]) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Игрок должен быть в машине.");
    if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Вы должны быть в машине.");
    if(veh_info[player_rentcar[playerid] -1][v_type] != vehicle_type_job || veh_info[player_rentcar[playerid] -1][v_owner] != job_mechanic) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Вы должны быть в рабочей машине.");


	if(veh_info[GetPlayerVehicleID(params[0]) -1][v_fuel] + params[1] > 100) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Столько топлива не уместится в бак.");

	new _scm_string[128];
	format(_scm_string, 128, "Вы предложили %s заправить автомобиль на %i литров за %i$", PlayerInfo[params[0]][name],params[1],params[2]);
	SendClientMessage(playerid, col_lblue,_scm_string);

	format(_scm_string, 128, ""c_white"%s предлагает заправить Ваш автомобиль на %i литров за %i$\n\nВы согласны?", PlayerInfo[playerid][name],params[1], params[2]);
	show_dialog(params[0],d_refill,DIALOG_STYLE_MSGBOX,""c_server"Заправка",_scm_string,"Принять","Отказ");

	SetPVarInt(playerid,"id_refill",params[0] + 1);
	SetPVarInt(playerid,"price_refill", params[2]);
	SetPVarInt(playerid,"litres_refill", params[1]);
	SetPVarInt(params[0],"id_refill",playerid + 1);
	return 1;
}



cmd:repair(playerid,params[])
{
    if(PlayerInfo[playerid][job] != job_mechanic) return SendClientMessage(playerid, col_white, !""scm_error"Вы не работаете механиком.");
 	if(sscanf(params,"ui",params[0],params[1])) return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /repair [ид/имя] [цена]");
	if(params[1] < 200 || params[1] > 1000) return SendClientMessage(playerid, col_white, !""scm_error"Цена за починку не может быть больше 1000$ и меньше 200$");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_white, !""scm_error"Игрок слишком далеко.");
	if(GetPlayerState(params[0]) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, col_white, !""scm_error"Игрок должен быть в машине.");
    if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid, col_white, !""scm_error"Вы должны быть в машине.");
    if(veh_info[player_rentcar[playerid] -1][v_type] != vehicle_type_job || veh_info[player_rentcar[playerid] -1][v_owner] != job_mechanic) return SendClientMessage(playerid, col_white, !""scm_error"Вы должны быть в рабочей машине.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете починить свою машину.");

	new _scm_string[128];
	format(_scm_string, 128, "Вы предложили %s починить автомобиль за %i$", PlayerInfo[params[0]][name],params[1]);
	SendClientMessage(playerid, col_lblue, _scm_string);

	format(_scm_string, 128, ""c_white"%s предлагает починить Ваш автомобиль за %i$\n\nВы согласны?", PlayerInfo[playerid][name],params[1]);
	show_dialog(params[0], d_repair, DIALOG_STYLE_MSGBOX, !""scm_dialog"Ремонт",_scm_string, !"Принять", !"Отказ");

	SetPVarInt(playerid,"id_repair",params[0] + 1);
	SetPVarInt(playerid,"price_repair", params[1]);
	SetPVarInt(params[0],"id_repair",playerid + 1);
	return 1;
}

//ALT:truck:t;
cmd:tr(playerid, params[])
{
	if(PlayerInfo[playerid][job] != job_trucker) return 1;
	if(PlayerInfo[playerid][mute])
	{
		new scm_string[38];
		format(scm_string, sizeof(scm_string),"У вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, scm_string);
		return 1;
	}
	if(sscanf(params, "s[120]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /tr [текст]");
 	check_advertise(playerid, params[0]);
	new scm_string[144],
		rank_name[16];

	if(PlayerInfo[playerid][truck_skill] >= 0 && PlayerInfo[playerid][truck_skill]<= 30000)	rank_name = "Новичок";
	else if(PlayerInfo[playerid][truck_skill] >= 30001 && PlayerInfo[playerid][truck_skill]<= 60000)rank_name = "Водила";
	else if(PlayerInfo[playerid][truck_skill] >= 60001 && PlayerInfo[playerid][truck_skill]<= 90000)rank_name = "Эксперт";
	else rank_name = "МН перевозчик";

	format(scm_string, sizeof scm_string, " [TRUCK] %s %s: %s", rank_name, PlayerInfo[playerid][name], params[0]);
	foreach(new i: logged_players) if(PlayerInfo[i][job] == job_trucker)SendClientMessage(i, 0x4682B4AA, scm_string);

//	SetPlayerChatBubble(playerid, "сказал(а) что-то в рацию", col_light_purple, 13.0, 7000);
	return 1;
}
cmd:tskill(playerid, params[])
{
	global_string[0] = EOS;

	if(PlayerInfo[playerid][truck_skill] >= 0 && PlayerInfo[playerid][truck_skill]<= 29999)
	{
		format(global_string, 186,
		"\n\n"c_white"Ваш уровень: Новичок (1).\n\
		Доступный транспорт: Linerunner.\n\
		Перевезено груза: %d/30000 кг.", PlayerInfo[playerid][truck_skill]);
		show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX,""c_server"Дальнобойщик", global_string, "Закрыть", "");
	}
	else if(PlayerInfo[playerid][truck_skill] >= 30000 && PlayerInfo[playerid][truck_skill]<= 59999)
	{
		format(global_string, 186,
		"\n\n"c_white"Ваш уровень: Водила (2).\n\
		Доступный транспорт: Linerunner, Tanker.\n\
		Перевезено груза: %d/60000 кг.", PlayerInfo[playerid][truck_skill]);
		show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX,""c_server"Дальнобойщик", global_string, "Закрыть", "");

	}
	else if(PlayerInfo[playerid][truck_skill] >= 60000 && PlayerInfo[playerid][truck_skill]<= 89999)
	{
		format(global_string, 186,
		"\n\n"c_white"Ваш уровень: Эксперт (3).\n\
		Доступный транспорт: Linerunner, Tanker, Roadtrain.\n\
		Перевезено груза: %d/90000 кг.", PlayerInfo[playerid][truck_skill]);
		show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX,""c_server"Дальнобойщик", global_string, "Закрыть", "");

	}
	else
	{
		format(global_string, 186,
		"\n\n"c_white"Ваш уровень: Международный перевозчик (4).\n\
		Доступный транспорт: Linerunner, Tanker, Roadtrain.\n\
		Перевезено груза: %d.", PlayerInfo[playerid][truck_skill]);
		show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX,""c_server"Дальнобойщик", global_string, "Закрыть", "");

	}
	return 1;
}

cmd:tpanel(playerid)
{
	if(PlayerInfo[playerid][job] != job_trucker) return 1;
	show_dialog(playerid, d_truck_panel, DIALOG_STYLE_LIST, !""scm_dialog"Панель дальнобойщика", !"Состояние складов\nТочки загрузки\nТочки разгрузки", !"Выбрать", !"Закрыть");
	return 1;
}




cmd:vowner(playerid)
{
	new _str[32];
	format(_str, 32, "%d owner %d type", veh_info[GetPlayerVehicleID(playerid)-1][v_owner], veh_info[GetPlayerVehicleID(playerid)-1][v_type]);
	SendClientMessage(playerid, -1, _str);
	return 1;
}


cmd:pts(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны находиться в транспорте!");

    new _v_id = GetPlayerVehicleID(playerid);

	if(veh_info[_v_id -1][v_owner] != PlayerInfo[playerid][id] || veh_info[_v_id -1][v_type] != vehicle_type_player) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны находиться в вашем личном транспорте!");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /pts [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
    if(GetPVarInt(params[0], "pts_show") == 1) return SendClientMessage(playerid, col_white, !""scm_error"Игрок уже просматривает тех. паспорт.");

    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");

	show_pts(playerid, params[0]);
	
	new scm_string[100];
	if(params[0] != playerid)format(scm_string, sizeof(scm_string), "показал(-а) паспорт транспортного средства %s", PlayerInfo[params[0]][name]);
	else format(scm_string, sizeof(scm_string), "посмотрел(-а) паспорт транспортного средства");
	me_action(playerid, scm_string);
	return 1;
}

stock show_pts(playerid, show_id)
{
	if(GetPVarInt(show_id, "pts_show") == 1) return SendClientMessage(show_id, col_white, !""scm_error"Вы уже просматриваете тех. паспорт.");

	Carpass_PTD[show_id][0] = CreatePlayerTextDraw(show_id, 382.8379, 175.6517, "LAMAR_WONDERFUL~n~~n~TESLA_MODEL_X~n~~n~TESLA"); // пусто
	PlayerTextDrawLetterSize(show_id, Carpass_PTD[show_id][0], 0.1782, 0.8033);
	PlayerTextDrawAlignment(show_id, Carpass_PTD[show_id][0], 3);
	PlayerTextDrawColor(show_id, Carpass_PTD[show_id][0], -2139062017);
	PlayerTextDrawBackgroundColor(show_id, Carpass_PTD[show_id][0], 255);
	PlayerTextDrawFont(show_id, Carpass_PTD[show_id][0], 1);
	PlayerTextDrawSetProportional(show_id, Carpass_PTD[show_id][0], 1);
	PlayerTextDrawSetShadow(show_id, Carpass_PTD[show_id][0], 0);

	Carpass_PTD[show_id][1] = CreatePlayerTextDraw(show_id, 364.6020, 219.7742, "666_KM"); // пусто
	PlayerTextDrawLetterSize(show_id, Carpass_PTD[show_id][1], 0.1806, 0.7454);
	PlayerTextDrawAlignment(show_id, Carpass_PTD[show_id][1], 1);
	PlayerTextDrawColor(show_id, Carpass_PTD[show_id][1], -2139062017);
	PlayerTextDrawBackgroundColor(show_id, Carpass_PTD[show_id][1], 255);
	PlayerTextDrawFont(show_id, Carpass_PTD[show_id][1], 1);
	PlayerTextDrawSetProportional(show_id, Carpass_PTD[show_id][1], 1);
	PlayerTextDrawSetShadow(show_id, Carpass_PTD[show_id][1], 0);

	Carpass_PTD[show_id][2] = CreatePlayerTextDraw(show_id, 275.5345, 220.1743, "GOOD"); // пусто
	PlayerTextDrawLetterSize(show_id, Carpass_PTD[show_id][2], 0.1806, 0.7454);
	PlayerTextDrawAlignment(show_id, Carpass_PTD[show_id][2], 1);
	PlayerTextDrawColor(show_id, Carpass_PTD[show_id][2], -2139062017);
	PlayerTextDrawBackgroundColor(show_id, Carpass_PTD[show_id][2], 255);
	PlayerTextDrawFont(show_id, Carpass_PTD[show_id][2], 1);
	PlayerTextDrawSetProportional(show_id, Carpass_PTD[show_id][2], 1);
	PlayerTextDrawSetShadow(show_id, Carpass_PTD[show_id][2], 0);

	Carpass_PTD[show_id][3] = CreatePlayerTextDraw(show_id, 351.6023, 269.5520, "100%"); // Wheel 4
	PlayerTextDrawLetterSize(show_id, Carpass_PTD[show_id][3], 0.1806, 0.7454);
	PlayerTextDrawAlignment(show_id, Carpass_PTD[show_id][3], 1);
	PlayerTextDrawColor(show_id, Carpass_PTD[show_id][3], -2139062017);
	PlayerTextDrawBackgroundColor(show_id, Carpass_PTD[show_id][3], 255);
	PlayerTextDrawFont(show_id, Carpass_PTD[show_id][3], 1);
	PlayerTextDrawSetProportional(show_id, Carpass_PTD[show_id][3], 1);
	PlayerTextDrawSetShadow(show_id, Carpass_PTD[show_id][3], 0);

	Carpass_PTD[show_id][4] = CreatePlayerTextDraw(show_id, 351.6024, 254.6187, "100%"); // Wheel 2
	PlayerTextDrawLetterSize(show_id, Carpass_PTD[show_id][4], 0.1806, 0.7454);
	PlayerTextDrawAlignment(show_id, Carpass_PTD[show_id][4], 1);
	PlayerTextDrawColor(show_id, Carpass_PTD[show_id][4], -2139062017);
	PlayerTextDrawBackgroundColor(show_id, Carpass_PTD[show_id][4], 255);
	PlayerTextDrawFont(show_id, Carpass_PTD[show_id][4], 1);
	PlayerTextDrawSetProportional(show_id, Carpass_PTD[show_id][4], 1);
	PlayerTextDrawSetShadow(show_id, Carpass_PTD[show_id][4], 0);

	Carpass_PTD[show_id][5] = CreatePlayerTextDraw(show_id, 295.2686, 268.7222, "100%"); // Wheel 3
	PlayerTextDrawLetterSize(show_id, Carpass_PTD[show_id][5], 0.1806, 0.7454);
	PlayerTextDrawAlignment(show_id, Carpass_PTD[show_id][5], 1);
	PlayerTextDrawColor(show_id, Carpass_PTD[show_id][5], -2139062017);
	PlayerTextDrawBackgroundColor(show_id, Carpass_PTD[show_id][5], 255);
	PlayerTextDrawFont(show_id, Carpass_PTD[show_id][5], 1);
	PlayerTextDrawSetProportional(show_id, Carpass_PTD[show_id][5], 1);
	PlayerTextDrawSetShadow(show_id, Carpass_PTD[show_id][5], 0);

	Carpass_PTD[show_id][6] = CreatePlayerTextDraw(show_id, 295.2686, 253.7890, "100%"); // Wheel 1
	PlayerTextDrawLetterSize(show_id, Carpass_PTD[show_id][6], 0.1806, 0.7454);
	PlayerTextDrawAlignment(show_id, Carpass_PTD[show_id][6], 1);
	PlayerTextDrawColor(show_id, Carpass_PTD[show_id][6], -2139062017);
	PlayerTextDrawBackgroundColor(show_id, Carpass_PTD[show_id][6], 255);
	PlayerTextDrawFont(show_id, Carpass_PTD[show_id][6], 1);
	PlayerTextDrawSetProportional(show_id, Carpass_PTD[show_id][6], 1);
	PlayerTextDrawSetShadow(show_id, Carpass_PTD[show_id][6], 0);

    new _v_id = GetPlayerVehicleID(playerid);
    new _model = GetVehicleModel(_v_id);

	new td_string[128];

	format(td_string, sizeof(td_string), "%s~n~~n~%s~n~~n~%s", PlayerInfo[playerid][name], vehicle_name[_model -400], veh_info[_v_id -1][v_plate]);
	PlayerTextDrawSetString(show_id, Carpass_PTD[show_id][0], td_string);

	td_string[0] = EOS;

	format(td_string, sizeof(td_string), "%.1f_KM", veh_info[_v_id -1][v_millage]);
	PlayerTextDrawSetString(show_id, Carpass_PTD[show_id][1], td_string);

	for(new i = 0; i < 62; i++)
	{
	    TextDrawShowForPlayer(show_id, Carpass_TD[i]);
		if(i < 7) PlayerTextDrawShow(show_id, Carpass_PTD[playerid][i]);
	}

	SelectTextDraw(show_id, 0xB0C4DEFF);

	SetPVarInt(show_id, "pts_show", 1);
	
	return 1;
}

cmd:vpark(playerid)
{
	if(GetPVarInt(playerid, "freeze_status")) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете припарковать автомобиль в данный момент.");

	for(new j = 0; j < MAX_NONPARKING_ZONES; j ++)
	{
		if(IsPlayerInDynamicArea(playerid, non_parking_area[j])) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете припарковать транспорт в зоне запрета парковки.");
	}
	if(GetPlayerState(playerid)!= PLAYER_STATE_DRIVER) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы должны находиться за рулём транспортного средства.");

	new veh_id = GetPlayerVehicleID(playerid);
	if(IsValidVehicle(veh_id))
	{
		if(veh_info[veh_id -1][v_owner] != PlayerInfo[playerid][id] || veh_info[veh_id -1][v_type] != vehicle_type_player) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны находиться в вашем личном транспорте.");
		new Float:vehicle_health;
		GetVehicleHealth(veh_id, vehicle_health);
		if(vehicle_health < 950) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Для начала нужно починить транспортное средство.");


		for(new j = 1; j < MAX_VEHICLES; j ++)
		{
			if(!IsValidVehicle(j)) continue;
			if(veh_info[j -1][v_vw] == GetPlayerVirtualWorld(playerid) && IsPlayerInRangeOfPoint(playerid, 3.0, veh_info[j -1][v_pos][0], veh_info[j -1][v_pos][1], veh_info[j -1][v_pos][2]))
			{
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Невозможно припарковать транспорт вбилизи парковки другого транспортного средства.");
				return 1;
			}
		}



		GetVehiclePos(veh_id, veh_info[veh_id -1][v_pos][0], veh_info[veh_id -1][v_pos][1], veh_info[veh_id -1][v_pos][2]);
		GetVehicleZAngle(veh_id, veh_info[veh_id -1][v_pos][3]);

		new new_veh_id = CreateVehicle(veh_info[veh_id -1][v_model], veh_info[veh_id -1][v_pos][0], veh_info[veh_id -1][v_pos][1], veh_info[veh_id -1][v_pos][2], veh_info[veh_id -1][v_pos][3], veh_info[veh_id -1][v_color][0], veh_info[veh_id -1][v_color][1], -1);
		Iter_Add(player_vehicles[playerid], new_veh_id);

		veh_info[new_veh_id -1][v_type] = vehicle_type_player;
		veh_info[new_veh_id -1][v_id] = veh_info[veh_id -1][v_id];
		veh_info[new_veh_id -1][v_pos][0] = veh_info[veh_id -1][v_pos][0];
		veh_info[new_veh_id -1][v_pos][1] = veh_info[veh_id -1][v_pos][1];
		veh_info[new_veh_id -1][v_pos][2] = veh_info[veh_id -1][v_pos][2];
		veh_info[new_veh_id -1][v_pos][3] = veh_info[veh_id -1][v_pos][3];

		veh_info[new_veh_id -1][v_owner] = veh_info[veh_id -1][v_owner];
		veh_info[new_veh_id -1][v_color][0] = veh_info[veh_id -1][v_color][0];
		veh_info[new_veh_id -1][v_color][1] = veh_info[veh_id -1][v_color][1];

		veh_info[new_veh_id -1][v_paint] = veh_info[veh_id -1][v_paint];
		if(veh_info[new_veh_id -1][v_paint] != 3)
		{
			ChangeVehiclePaintjob(new_veh_id, veh_info[new_veh_id -1][v_paint]);
		}

		veh_info[new_veh_id -1][v_locked] = veh_info[veh_id -1][v_locked];

		veh_info[new_veh_id -1][v_plate] = veh_info[veh_id -1][v_plate];
		format(veh_info[new_veh_id -1][v_plate], 12, "%s", veh_info[veh_id -1][v_plate]);

		veh_info[new_veh_id -1][v_fuel] = veh_info[veh_id -1][v_fuel];
		veh_info[new_veh_id -1][v_millage] = veh_info[veh_id -1][v_millage];

		veh_info[new_veh_id -1][v_engine_boost] = veh_info[veh_id -1][v_engine_boost];
		veh_info[new_veh_id -1][v_brake_boost] = veh_info[veh_id -1][v_brake_boost];
		veh_info[new_veh_id -1][v_stability_boost] = veh_info[veh_id -1][v_stability_boost];
		veh_info[new_veh_id -1][v_vehicle] = new_veh_id;

		veh_info[new_veh_id -1][v_vw] = GetPlayerVirtualWorld(playerid);
		veh_info[new_veh_id -1][v_int] = GetPlayerInterior(playerid);
		if(veh_info[new_veh_id -1][v_int] != 0)LinkVehicleToInterior(new_veh_id, veh_info[new_veh_id -1][v_int]);
		if(veh_info[new_veh_id -1][v_vw] != 0)SetVehicleVirtualWorld(new_veh_id, veh_info[new_veh_id -1][v_vw]);


		for(new j = 0; j < 10; j ++)
		{
			veh_info[new_veh_id -1][v_component][j] = veh_info[veh_id -1][v_component][j];
			AddVehicleComponent(veh_info[new_veh_id -1][v_vehicle], veh_info[new_veh_id -1][v_component][j]);
		}

		SetVehicleNumberPlate(new_veh_id, veh_info[new_veh_id -1][v_plate]);

		DestroyVehicle(veh_id);
		Iter_Remove(player_vehicles[playerid], veh_id);

		new engine, lights, alarm, doors, bonnet, boot, objective;

		GetVehicleParamsEx(new_veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(new_veh_id, engine, lights, alarm, veh_info[new_veh_id -1][v_locked], bonnet, boot, objective);

		new scm_string[198];
		SendClientMessage(playerid, col_gray, "* Машина успешно припаркована.");

		format(scm_string, 198, "UPDATE `users_vehicles` SET `v_pos_x` = '%.2f', `v_pos_y` = '%.2f', `v_pos_z` = '%.2f',`v_pos_a` = '%.2f',`v_vw` = '%d',`v_int` = '%d' WHERE `v_id` = '%d'",
		veh_info[new_veh_id -1][v_pos][0], veh_info[new_veh_id -1][v_pos][1], veh_info[new_veh_id -1][v_pos][2], veh_info[new_veh_id -1][v_pos][3],
		veh_info[new_veh_id -1][v_vw], veh_info[new_veh_id -1][v_int],
		veh_info[new_veh_id -1][v_id]);
		mysql_tquery(sql_connection, scm_string);
	}
	return 1;
}

cmd:fixcar(playerid)
{
	if(Iter_Count(player_vehicles[playerid]) == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас нет транспорта или он находится на штрафстоянке.");
	new line_str[78];


	format(global_string, sizeof(global_string), ""c_server"Выберите транспорт для буксировки:\t\n");
	foreach(new veh_id:player_vehicles[playerid])
	{
		format(line_str, 78, ""c_grey"-"c_white"%s\t"c_grey"%s\n", vehicle_name[GetVehicleModel(veh_id)-400], veh_info[veh_id -1][v_plate]);
		strcat(global_string, line_str);
	}
	show_dialog(playerid, d_fixcar, DIALOG_STYLE_TABLIST, ""c_server"Аварийная служба", global_string, "Выбрать", "Закрыть");
	return 1;
}

cmd:cpanel(playerid)
{
	if(GetPlayerState(playerid)!= PLAYER_STATE_DRIVER) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы должны находиться за рулём автомобиля.");
	new vehid = GetPlayerVehicleID(playerid);
	if(v_velo(vehid)) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Недоступно в велосипеде.");
	show_dialog(playerid, d_carpanel, DIALOG_STYLE_LIST, ""c_server"Меню управления автомобилем", ""c_server"1. "c_white"Управление двигателем\n"c_server"2. "c_white"Управление фарами\n"c_server"3. "c_white"Просмотреть технический паспорт автомобиля\n"c_server"4. "c_white"Управление дверьми\n"c_server"5. "c_white"Передать ключи от автомобиля\n"c_grey"Припарковать автомобиль", "Выбрать", "Закрыть");
	return 1;
}

cmd:givevkey(playerid, params [])
{
	new veh_id = GetPlayerVehicleID(playerid);
	if(IsValidVehicle(veh_id))
	{
		if(veh_info[veh_id -1][v_owner] != PlayerInfo[playerid][id] || veh_info[veh_id -1][v_type] != vehicle_type_player) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы должны находиться в вашем личном транспорте!");
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Используйте: /givevkey [ид]");
		if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
		if(p_t_info[params[0]][v_key] > 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У игрока уже есть ключи от какого-либо автомобиля.");
		p_t_info[params[0]][v_key] = veh_id;
		new string[95 +(-2 + MAX_PLAYER_NAME)];
		format(string, sizeof(string), ""c_green"* "c_white"Вы успешно выдали ключи от Вашего автомобиля игроку "c_server"'%s'"c_white".", PlayerInfo[params[0]][name]);
		SendClientMessage(playerid, col_white, string);
		format(string, sizeof(string), ""c_green"* "c_server"%s "c_white"выдал Вам ключи от своего автомобиля.", PlayerInfo[playerid][name]);
		SendClientMessage(params[0], col_white, string);
	}
	else SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Для передачи ключей от автомобиля необходимо быть в нём.");
	return 1;
}

cmd:takevkey(playerid, params [])
{
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Используйте: /takevkey [ид]");
	if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(p_t_info[params[0]][v_key] == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У игрока нет ключей от Вашего автомобиля.");
	foreach(new veh_id:player_vehicles[playerid])
	{
		if(p_t_info[params[0]][v_key] == veh_id)
		{
			new string[85 +(-2 + MAX_PLAYER_NAME)];
			p_t_info[params[0]][v_key] = 0;
			format(string, sizeof(string), ""c_green"* "c_server"%s "c_white"забрал у Вас ключи от своего автомобиля.", PlayerInfo[playerid][name]);
			SendClientMessage(params[0], col_white, string);
			format(string, sizeof(string), ""c_green"* "c_white"Вы успешно забрали ключи от своего автомобиля у "c_server"%s"c_white".", PlayerInfo[params[0]][name]);
			SendClientMessage(playerid, col_white, string);
			return 1;
		}
		else continue;
	}
	SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У игрока нет ключей от Вашего автомобиля.");
	return 1;
}



cmd:sellcar(playerid, params[])
{
	new veh_id = GetPlayerVehicleID(playerid);
	if(IsValidVehicle(veh_id))
	{
		if(veh_info[veh_id -1][v_owner] != PlayerInfo[playerid][id] || veh_info[veh_id -1][v_type] != vehicle_type_player) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны находиться в вашем личном транспорте!");
		if(sscanf(params, "ud", params[0], params[1]))
		{
			SetPVarInt(playerid, "sc_sellveh", veh_id);
			new veh_model = GetVehicleModel(veh_id);
			new veh_price = GetModelPrice(veh_model),
				dialog_str[168];

			format(dialog_str, sizeof(dialog_str),""c_server"Вы действительно хотите продать %s государству за %d$?\n\n{AFAFAF}* Для продажи игроку используйте: /sellcar [ид/имя] [цена]",
			vehicle_name[veh_model -400], veh_price -veh_price / 10);
			show_dialog(playerid, d_sellcar_gov, DIALOG_STYLE_MSGBOX," "c_server"Продажа транспортного средства", dialog_str, "Да", "Нет");
			return 1;
		}
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
		if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы ввели свой ID.");
		if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
		if(params[1] < 1 || params[1] > 10000000) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Цена не может быть меньше "c_orange_red"1$"c_grey" или больше "c_orange_red"10.000.000$");

		if(p_t_info[params[0]][p_dialog] != -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок в данный момент не может осуществлять сделки.");
		new _d_str[128];
		format(_d_str, 128, ""c_white"%s[%d] предлагает Вам приобрести "c_server"%s\n"c_white"Цена: "c_server"%d$",
		PlayerInfo[playerid][name], playerid, vehicle_name[GetVehicleModel(veh_id)-400], params[1]);
		show_dialog(params[0], d_sellcar, DIALOG_STYLE_MSGBOX, ""c_server"Продажа бизнеса", _d_str, "Купить", "Отмена");
		SetPVarInt(playerid, "sc_price", params[1]);
		SetPVarInt(playerid, "sc_buyer", params[0] + 1);
		SetPVarInt(params[0], "sc_seller", playerid + 1);
		SetPVarInt(params[0], "sc_sellveh", veh_id);
	}
	return 1;
}

CMD:gps(playerid, params[])
{
	if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_white, !""scm_error"Вы в наручниках.");
	if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_white, !""scm_error"Вы связаны.");
	if(GetPVarInt(playerid, "exam_vehicle") != 0) return SendClientMessage(playerid, col_white, !""scm_error"Невозможно во время сдачи экзамена.");
	if(p_t_info[playerid][pBusRoute]) return SendClientMessage(playerid, col_white, !""scm_error"Невозможно использовать в данный момент.");
	
	if(is_gps_used {playerid})
	{
		SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Последняя метка уничтожена.");
		DisablePlayerRaceCheckpoint(playerid);
		is_gps_used {playerid} = 0;
	}
	show_gps(playerid);
	return 1;
}

CMD:pass(playerid, params[])
{
	if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_white, !""scm_error"Вы в наручниках.");
	if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_white, !""scm_error"Вы связаны.");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_white, !""scm_info"Используйте: /pass [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");
	if(GetPVarInt(params[0], "show_pass") == 1) return SendClientMessage(playerid, col_white, !""scm_error"Игрок уже просматривает паспорт.");

    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_white, !""scm_error"Игрок слишком далеко.");
	if(p_t_info[params[0]][p_dialog] != -1) return SendClientMessage(playerid, col_white, !""scm_error"Недоступно в данный момент.");


	show_pass(playerid, params[0]);

	if(params[0] == playerid)format(global_string, 72, "посмотрел(-а) свой паспорт");
	else format(global_string, 72, "показал(-а) паспорт %s", PlayerInfo[params[0]][name]);

	me_action(playerid, global_string);
	return 1;
}


cmd:healme(playerid, params[])
{
    if(TeamPaint[playerid] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Невозможно во время участия в paintball.");


    if(heal_cooldown[playerid] > gettime()) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"Аптечку можно использовать раз в "c_orange_red"12"c_grey" секунд.");
 	if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
	if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");

	if(!PlayerInfo[playerid][aidkit]) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"У вас нет аптечки.");

	PlayerInfo[playerid][aidkit] -= 1;
	update_int_sql(playerid, "u_aidkit", PlayerInfo[playerid][aidkit]);

	new Float:pl_health;
	GetPlayerHealth(playerid, pl_health);
	if(pl_health + 65 > 160)set_health(playerid, 160);
	else set_health(playerid, pl_health + 65);

	GameTextForPlayer(playerid, "~g~+65HP", 2000, 1);
	heal_cooldown[playerid] = gettime() + 12;
	me_action(playerid, "использовал(-а) аптечку");
	if(GetPlayerState(playerid) ==  PLAYER_STATE_ONFOOT && ! GetPVarInt(playerid, "PlayerCuffed") && ! GetPVarInt(playerid, "PlayerTied")) ApplyAnimation(playerid, "ped", "gum_eat", 4.0, 0, 0, 0, 0, 0, 1);
	return 1;
}

cmd:repairkit(playerid, params[])
{
	if(GetPVarInt(playerid, "PlayerCuffed"))
	{
		SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Нельзя использовать ремонтный набор в наручниках.");
		return 1;
	}
	if(!PlayerInfo[playerid][repairkit]) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"У вас нет ремонтного набора.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"Вы должны быть за рулём транспортного средства.");
	if(GetVehicleSpeed(player_vehicle[playerid]) > 5) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"Нельзя использовать ремонтный набор на ходу.");

    SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно починили свой транспорт.");
    RepairVehicle(player_vehicle[playerid]);

	me_action(playerid, "отремонтировал(-а) свою машину.");
	PlayerInfo[playerid][repairkit] -= 1;
	update_int_sql(playerid, "u_repairkit", PlayerInfo[playerid][repairkit]);
	return 1;
}








cmd:tie(playerid, params[])
{
	if(!mafia_player(playerid)) return 1;
	if(!PlayerInfo[playerid][rope]) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"У вас нет верёвки.");
	if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
	if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /tie [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете себя связать.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");

	PlayerInfo[playerid][rope] --;
	update_int_sql(playerid, "u_rope", PlayerInfo[playerid][rope]);


	SetPVarInt(params[0], "PlayerTied", 1);
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_CUFFED);
	return 1;
}

cmd:untie(playerid, params[])
{

	if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
	if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /untie [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете себя развязать.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	DeletePVar(params[0], "PlayerTied");
	SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);

	if(gotome_player[params[0]] != -1)
	{
	    gotome_player[params[0]] = -1;
	    ClearAnimations(params[0], true);
		DeletePVar(playerid, "player_gotome");

		DeletePVar(params[0], "cuff_x"), DeletePVar(params[0], "cuff_y"), DeletePVar(params[0], "cuff_z");
		return 1;
	}
	return 1;
}

cmd:gotome(playerid, params[])
{
	if(!cop_player(playerid) && ! fbi_player(playerid) && ! mafia_player(playerid)) return 1;
	if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
	if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");
	if(GetPVarInt(playerid, "player_gotome"))
	{
		new pl_id = GetPVarInt(playerid,"player_gotome") -1;
	    gotome_player[pl_id] = -1;
	    ClearAnimations(pl_id, true);
		DeletePVar(playerid, "player_gotome");
		new scm_string[50 + MAX_PLAYER_NAME];
		format(scm_string, sizeof(scm_string), ""c_green"* "c_white"Вы отпустили "c_green"%s"c_white".", PlayerInfo[pl_id][name]);
		SendClientMessage(playerid, col_white, scm_string);
		DeletePVar(pl_id, "cuff_x"), DeletePVar(pl_id, "cuff_y"), DeletePVar(pl_id, "cuff_z");
		return 1;
	}

	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /gotome [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете потащить самого себя.");

	if(PlayerInfo[params[0]][jailed] > 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок находится в тюрьме.");
	if(!GetPVarInt(params[0], "PlayerTied") && ! GetPVarInt(params[0], "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок должен быть в наручниках или связан.");

	if(IsPlayerInAnyVehicle(playerid)|| IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы или Ваша цель находитесь в транспорте.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");

    SetPVarInt(playerid, "player_gotome", params[0] + 1);
    gotome_player[params[0]] = playerid;

	new scm_string[58 + MAX_PLAYER_NAME];
	format(scm_string, sizeof(scm_string), ""c_green"* "c_white"Вы повели "c_green"%s"c_white" за собой.", PlayerInfo[params[0]][name]);
	SendClientMessage(playerid, col_white, scm_string);
    return 1;
}

cmd:push(playerid, params[])
{
	if(!cop_player(playerid) && ! fbi_player(playerid) && ! mafia_player(playerid)) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /push [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");
	if(IsPlayerInAnyVehicle(playerid)|| IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы или Ваша цель уже находитесь в транспорте.");
	if(!GetPVarInt(params[0], "PlayerTied") && ! GetPVarInt(params[0], "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок должен быть в наручниках или связан.");

	if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");

	new veh_id = GetPlayerNearestVehicle(playerid);
	if(veh_id != INVALID_VEHICLE_ID)
	{
		if(veh_info[veh_id -1][v_type] != vehicle_type_server || veh_info[veh_id -1][v_owner] != PlayerInfo[playerid][member]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны быть возле служебного транспорта.");
		new seatid = GetVehicleFreeSeat(veh_id);
		if(seatid != -1)
		{
			PutPlayerInVehicle(params[0], veh_id, seatid);
			new scm_string[46 +(MAX_PLAYER_NAME * 2)];
			format(scm_string, sizeof(scm_string), "%s заломал%s руки %s и посадил%s в транспорт.", PlayerInfo[playerid][name], (PlayerInfo[playerid][gender] ==1)?(""):("а"), PlayerInfo[params[0]][name], (PlayerInfo[playerid][gender] ==1)?(""):("а"));
			SetPlayerChatBubble(playerid, scm_string,0xDD90FFFF, 10.0, 10000);
		}
		else SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"В ближайшем транспорте нет свободных мест.");
	}
	else SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Возле вас нет транспорта.");
	return 1;
}

cmd:mask(playerid)
{
	if(!PlayerInfo[playerid][mask]) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"У Вас нет маски.");
	if(GetPVarInt(playerid,"p_masked")) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"Вы уже надели маску.");

	PlayerInfo[playerid][mask] --;
	update_int_sql(playerid, "u_mask", PlayerInfo[playerid][mask]);


	SetPlayerColor(playerid, 0x7a766700);
	SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы надели маску. Ваше местоположение скрыто. Используйте "c_green"/unmask"c_white", чтобы снять маску.");
 	GameTextForPlayer(playerid, "~b~Invisible on", 5000, 3);
  	if(GetPlayerState(playerid) ==  PLAYER_STATE_ONFOOT && ! GetPVarInt(playerid, "PlayerCuffed") && ! GetPVarInt(playerid, "PlayerTied"))ApplyAnimation(playerid, "shop","ROB_Shifty",4.0,0,0,0,0,0,1);
	SetPlayerChatBubble(playerid, "Надевает маску", 0xDD90FFFF, 30.0, 10000);
	if(!PlayerInfo[playerid][enhancement][3]) SetPVarInt(playerid, "p_masked", 900);
	else SetPVarInt(playerid, "p_masked", 1800);
	return 1;
}

cmd:unmask(playerid)
{
	if(!GetPVarInt(playerid,"p_masked")) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"Вы не в маске.");
 	if(!PlayerInfo[playerid][member]) SetPlayerColor(playerid, 0xFFFFFF80); // col_white
	if(PlayerInfo[playerid][member]) SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
	SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы сняли маску.");
	DeletePVar(playerid, "p_masked");
	return 1;
}


cmd:usedrugs(playerid)
{
	if(PlayerInfo[playerid][drugs]<= 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет наркотиков.");
	if(is_drug_effect {playerid} >= 1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы употребляете наркотики слишком часто.");
	is_drug_effect {playerid} = 60;

	PlayerInfo[playerid][drugs] -= 1;
	update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);

	ApplyAnimation(playerid,"GANGS","smkcig_prtl_F",4.0,0,1,1,1,1);
	SetPlayerTime(playerid, 17, 0);
	SetPlayerDrunkLevel(playerid, 3000);
	SetPlayerWeather(playerid, -68);

	new Float:pl_health;
	GetPlayerHealth(playerid, pl_health);
	if(pl_health + 15 > 160)set_health(playerid, 160);
	else set_health(playerid, pl_health + 15);

	GameTextForPlayer(playerid, "~g~+15HP", 2000, 1);
	me_action(playerid, "принимает дозу наркотиков");
	return 1;
}


cmd:sellzone(playerid, params[])
{
    for(new i = 0; i < gz_count; i ++)
	{
		if(IsPlayerInGangZone(playerid,i))
		{
			if(PlayerInfo[playerid][leader] != gz_info[i][gz_owner] || gz_info[i][gz_owner] != PlayerInfo[playerid][member]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не на своей территории.");
			if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /sellzone [id/имя] [цена]");
			if(params[1] < 20000 || params[1] > 500000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Цена должна быть от "c_orange_red"20.000$"c_grey" до "c_orange_red"500.000$"c_grey".");
			if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
			if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");
			if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
			if(p_t_info[params[0]][p_dialog] != -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Недоступно в данный момент.");
			if(PlayerInfo[params[0]][member] == PlayerInfo[playerid][member]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Невозможно продать территорию члену Вашей банды.");
			if(!gang_player(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Территорию возможно продать только бандиту.");


			buyer_id[playerid] = params[0];
			sell_price[playerid] = params[1];
			sell_item[playerid] = i;
			seller_id[params[0]] = playerid;


			new dialog_string[90 + MAX_PLAYER_NAME + 32 + 1 + 6];
			format(dialog_string, sizeof(dialog_string ), ""c_server"%s "c_white"предлагает Вам приобрести территорию \"{%s}%s\""c_white" за "c_server"%d$",
			PlayerInfo[playerid][name], f_info[PlayerInfo[playerid][member] -1][f_chat_color], f_info[PlayerInfo[playerid][member] -1][f_name], params[1]);
			show_dialog(params[0], d_gz_sell_accept, DIALOG_STYLE_MSGBOX, ""c_server"Покупка территории", dialog_string, "Купить", "Отмена");
			format(dialog_string, sizeof(dialog_string ), ""c_server"* "c_white"Вы предложили "c_server"%s"c_white" приобрести территорию \"{%s}%s\""c_white" за "c_server"%d$",
			PlayerInfo[params[0]][name], f_info[PlayerInfo[playerid][member] -1][f_chat_color], f_info[PlayerInfo[playerid][member] -1][f_name], params[1]);
			SendClientMessage(playerid, col_white, dialog_string);
		}
	}
	return 1;
}



cmd:sellbiz(playerid, params[])
{
	if(!mafia_player(playerid)|| PlayerInfo[playerid][leader] == 0) return 1;
	if(sscanf(params, "uds[48]", params[0], params[1], params[2])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /sellbiz [id/имя] [цена] [название]");
	if(params[1] < 20000 || params[1] > 500000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Цена должна быть от "c_orange_red"20.000$"c_grey" до "c_orange_red"500.000$"c_grey".");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");
	if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(p_t_info[params[0]][p_dialog] != -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Недоступно в данный момент.");
	if(PlayerInfo[params[0]][member] == PlayerInfo[playerid][member]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Невозможно продать контроль над бизнесом члену Вашей мафии.");
	if(!mafia_player(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Контроль над бизнесом возможно продать только члену мафии.");

	new sellbiz_id = -1;

    for(new i = 0; i < b_count; i ++)
	{
		if(GetString(b_info[i][b_name], params[2]))
		{
			sellbiz_id = i;
			break;
		}
	}

	if(sellbiz_id == -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Бизнес с данным названием не найден.");
	if(b_info[sellbiz_id][b_mafia] != PlayerInfo[playerid][member]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Ваша мафия не контролирует данный бизнес.");

	buyer_id[playerid] = params[0];
	sell_price[playerid] = params[1];
	sell_item[playerid] = sellbiz_id;
	seller_id[params[0]] = playerid;

	new dialog_string[108 + MAX_PLAYER_NAME + 32 + 1 + 6];
	format(dialog_string, sizeof(dialog_string ), ""c_server"%s "c_white"предлагает Вам приобрести контроль над бизнесом \"{%s}%s\""c_white" за "c_server"%d$",
	PlayerInfo[playerid][name], f_info[PlayerInfo[playerid][member] -1][f_chat_color], f_info[PlayerInfo[playerid][member] -1][f_name], params[1]);
	show_dialog(params[0], d_biz_sell_accept, DIALOG_STYLE_MSGBOX, ""c_server"Контроль над бизнесом", dialog_string, "Купить", "Отмена");

	format(dialog_string, sizeof(dialog_string ), ""c_green"* "c_white"Вы предложили "c_server"%s "c_white"приобрести контроль над бизнесом \"{%s}%s\""c_white" за "c_server"%d$",
	PlayerInfo[params[0]][name], f_info[PlayerInfo[playerid][member] -1][f_chat_color], f_info[PlayerInfo[playerid][member] -1][f_name], params[1]);
	SendClientMessage(playerid, col_white, dialog_string);
	return 1;
}


cmd:setgps(playerid)
{
	if(PlayerInfo[playerid][gps_tracker]<= 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет GPS-трекера.");
	new veh_id = GetPlayerVehicleID(playerid);
	if(veh_id == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы должны быть в транспорте.");
	if(veh_info[veh_id -1][v_type] != vehicle_type_player) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"GPS-трекер можно установить только на личный транспорт.");
	if(veh_info[veh_id -1][v_gps_tracker] == 1) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"GPS-трекер уже установлен.");

	veh_info[veh_id -1][v_gps_tracker] = 1;
	PlayerInfo[playerid][gps_tracker] -= 1;
	update_int_sql(playerid, "u_gps_tracker", PlayerInfo[playerid][gps_tracker]);

	new scm_string[98];
	format(scm_string, 98, "UPDATE `users_vehicles` SET `v_gps_tracker` = '%d' WHERE `v_id` = '%d'",
	veh_info[veh_id -1][v_gps_tracker],
	veh_info[veh_id -1][v_id]);
	mysql_tquery(sql_connection, scm_string);

	SendClientMessage(playerid, col_white, ""c_green"* "c_white"GPS-трекер успешно установлен в транспорт.");
	return 1;
}


cmd:makegun(playerid)
{
	if(TeamPaint[playerid] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Невозможно во время участия в paintball.");
	if(PlayerInfo[playerid][jailed] > 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нельзя собирать оружие находясь в заключении.");
	if(!PlayerInfo[playerid][crim_ammo]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У вас нет патронов.");
	if(!PlayerInfo[playerid][crim_guns]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У вас нет ед.оружия.");
	if(GetPlayerState(playerid) ==  PLAYER_STATE_DRIVER) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете собирать оружие в транспорте.");
	if(IsPlayerToSquare(playerid, 80.8047, 1762.5040, 390.7005, 2093.4778)) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете собирать оружие в данном месте.");



	global_string = ""c_white"Название оружия\t"c_white"Количество ед.оружия\n";
	for(new i = 0; i < 7; i++)
	{
	    format(global_string, 1000, "%s%s\t%i\n", global_string, mg_info[i][mg_name], mg_info[i][mg_guns]);
	}
	show_dialog(playerid, d_makegun, DIALOG_STYLE_TABLIST_HEADERS, ""c_server"Сборка оружия", global_string, "Выбрать", "Закрыть");
	return 1;
}


cmd:giveguns(playerid, params[])
{
	if(TeamPaint[playerid] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Невозможно во время участия в paintball.");
	if(PlayerInfo[playerid][jailed] > 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нельзя передавать оружие находясь в заключении.");
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /giveguns [id/имя] [кол-во]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");
	if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(params[1] < 1 || params[1] > 500) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Количество передаваемых ед.оружия должно быть от "c_orange_red"1 "c_grey"до "c_orange_red"500"c_grey".");
	else if(PlayerInfo[playerid][crim_guns] < params[1]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет столько ед.оружия.");
	else if((PlayerInfo[params[0]][crim_guns] + params[1] > 500 && ! PlayerInfo[params[0]][enhancement][0]) || PlayerInfo[params[0]][crim_guns] + params[1] > 1000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У игрока уже достаточно ед.оружия.");

	PlayerInfo[playerid][crim_guns] -= params[1];
	PlayerInfo[params[0]][crim_guns] += params[1];

	update_int_sql(playerid, "u_guns", PlayerInfo[playerid][crim_guns]);
	update_int_sql(params[0], "u_guns", PlayerInfo[params[0]][crim_guns]);

	new string[108];
	format(string, sizeof(string), "передал(-а) ед.оружия %s.", PlayerInfo[params[0]][name]);
	me_action(playerid, string);
	format(string, sizeof(string), ""c_green"* "c_white"Вы передали "c_green"%s %d"c_white" ед.оружия.", PlayerInfo[params[0]][name], params[1]);
	SendClientMessage(playerid, col_white, string);
	format(string, sizeof(string), ""c_green"* %s "c_white"передал%s Вам "c_green"%d"c_white" ед.оружия.", PlayerInfo[playerid][name],(PlayerInfo[playerid][gender] == 1)? (""):("а"), params[1]);
	SendClientMessage(params[0], col_white, string);
	return 1;
}

cmd:giveammo(playerid, params[])
{
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /giveammo [id/имя] [кол-во]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");
	if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(params[1] < 1 || params[1] > 500) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Количество передаваемых патрон должно быть от "c_orange_red"1 "c_grey"до "c_orange_red"500"c_grey".");
	else if(PlayerInfo[playerid][crim_ammo] < params[1]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет столько патрон.");
	else if((PlayerInfo[params[0]][crim_ammo] + params[1] > 500 && ! PlayerInfo[playerid][enhancement][0]) || PlayerInfo[params[0]][crim_ammo] + params[1] > 1000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У игрока уже достаточно патрон.");

	PlayerInfo[playerid][crim_ammo] -= params[1];
	PlayerInfo[params[0]][crim_ammo] += params[1];

	update_int_sql(playerid, "u_ammo", PlayerInfo[playerid][crim_ammo]);
	update_int_sql(params[0], "u_ammo", PlayerInfo[params[0]][crim_ammo]);

	new string[128];
	format(string, sizeof(string), "передал(-а) патроны %s.", PlayerInfo[params[0]][name]);
	me_action(playerid, string);
	format(string, sizeof(string), ""c_green"* "c_white"Вы передали "c_green"%s %d"c_white" пт.", PlayerInfo[params[0]][name], params[1]);
	SendClientMessage(playerid, col_white, string);
	format(string, sizeof(string), ""c_green"* %s "c_white"передал%s Вам "c_green"%d"c_white" пт.", PlayerInfo[playerid][name],(PlayerInfo[playerid][gender] == 1)? (""):("а"), params[1]);
	SendClientMessage(params[0], col_white, string);
	return 1;
}

cmd:givedrugs(playerid, params[])
{
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /givedrugs [id/имя] [кол-во]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");
	if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(params[1] < 1 || params[1] > 500) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Количество передаваемых наркотиков должно быть от "c_orange_red"1 гр. "c_grey"до "c_orange_red"500 гр"c_grey".");
	else if(PlayerInfo[playerid][drugs] < params[1]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет столько наркотиков.");
	else if(PlayerInfo[params[0]][drugs] + params[1] > 500) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У игрока уже достаточно наркотиков.");

	PlayerInfo[playerid][drugs] -= params[1];
	PlayerInfo[params[0]][drugs] += params[1];

	update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);
	update_int_sql(params[0], "u_drugs", PlayerInfo[params[0]][drugs]);

	new string[128];
	format(string, sizeof(string), "передал%s пакетик %s.",(PlayerInfo[playerid][gender] == 1)? (""):("а"), PlayerInfo[params[0]][name]);
	me_action(playerid, string);
	format(string, sizeof(string), ""c_green"* "c_white"Вы передали "c_green"%s %d"c_white" гр.наркотиков.", PlayerInfo[params[0]][name], params[1]);
	SendClientMessage(playerid, col_white, string);
	format(string, sizeof(string), ""c_green"* %s "c_white"передал%s Вам "c_green"%d"c_white" гр.наркотиков.", PlayerInfo[playerid][name],(PlayerInfo[playerid][gender] == 1)? (""):("а"), params[1]);
	SendClientMessage(params[0], col_white, string);
	return 1;
}

cmd:dropdrugs(playerid)
{
	if(!PlayerInfo[playerid][drugs]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас нет наркотиков.");
	new string[98];
	format(string, sizeof(string), "выбросил%s пакетик.",(PlayerInfo[playerid][gender] == 1)? (""):("а"), PlayerInfo[playerid][name]);
	me_action(playerid, string);
	format(string, sizeof(string), ""c_green"* "c_white"Вы выбросили "c_green"%d гр."c_white" наркотиков.", PlayerInfo[playerid][drugs]);
	SendClientMessage(playerid, col_white, string);

	PlayerInfo[playerid][drugs] = 0;
	update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);
	return 1;
}

cmd:givegun(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /givegun [id/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");
	if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	new weaponid = GetPlayerWeapon(playerid);
	new ammo = GetPlayerAmmo(playerid);
	if(!weaponid) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Возьмите в руку то оружие, которое хотите передать");

	set_player_ammo(playerid, weaponid, 0);
	SetPlayerArmedWeapon(playerid,0);
	give_weapon(params[0], weaponid, ammo);
	new scm_string[78];
	format(scm_string, sizeof(scm_string), "передал(-а) оружие %s", PlayerInfo[params[0]][name]);
	me_action(playerid, scm_string);
	return 1;
}


cmd:sellgun(playerid, params[])
{
	if(TeamPaint[playerid] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Невозможно во время участия в paintball.");
	if(!gang_player(playerid) && ! mafia_player(playerid)) return 1;

	if(duel_opponent[playerid] != INVALID_PLAYER_ID) return 1;

	if(sscanf(params, "udd", params[0], params[1], params[2])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /sellgun [id/имя] [патроны] [цена]");
	if(params[1] < 1 || params[1] > 100000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Количество патрон не может быть менее "c_orange_red"1"c_grey".");
	if(params[2] < 1 || params[2] > 10000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Цена должна быть от "c_orange_red"1$"c_grey" до "c_orange_red"10.000$"c_grey".");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");
	if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(p_t_info[params[0]][p_dialog] != -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Недоступно в данный момент.");

	if(GetString(p_t_info[params[0]][p_ip], p_t_info[playerid][p_ip]))
	{
		new scm_string[128];
		format(scm_string, sizeof(scm_string), ""c_orange_red"* A.WARNING: "c_grey"%s[%d] продает оружие %s[%d] | same ip", PlayerInfo[playerid][name], playerid, PlayerInfo[params[0]][name], params[0]);
		foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);

		SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Невозможно продать оружие данному игроку.");
		return 1;
	}

	new gun_name[24], gun_id = GetPlayerWeapon(playerid);
	if(!gun_id) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Возьмите в руку то оружие, которое хотите передать.");
	GetWeaponName(gun_id, gun_name, sizeof(gun_name));
	new weapon, ammo;
    GetPlayerWeaponData(playerid, get_weapon_slot(gun_id), weapon, ammo);
    if(ammo < params[1]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет такого количества патронов.");

	buyer_id[playerid] = params[0];
	sell_price[playerid] = params[2];
	sell_item[playerid] = params[1];
	seller_id[params[0]] = playerid;
	SetPVarInt(playerid, "sell_gunid", gun_id);

	new dialog_string[146];
	format(dialog_string, 144, "Вы предложили "c_green"%s"c_white" приобрести "c_green"%d "c_white"патронов "c_green"%s"c_white" за "c_green"%d$",
	PlayerInfo[params[0]][name], params[1], gun_name, params[2]);
	SendClientMessage(playerid, col_white, dialog_string);

	format(dialog_string, sizeof(dialog_string ), ""c_server"%s "c_white"предлагает Вам приобрести "c_server"%d "c_white"патронов "c_server"%s"c_white" за "c_server"%d$",
	PlayerInfo[playerid][name], params[1], gun_name, params[2]);
	show_dialog(params[0], d_gun_sell_accept, DIALOG_STYLE_MSGBOX, ""c_server"Покупка оружия", dialog_string, "Купить", "Отмена");
	return 1;
}


cmd:selldrugs(playerid, params[])
{
	if(duel_opponent[playerid] != INVALID_PLAYER_ID) return 1;
	if(!gang_player(playerid) && ! mafia_player(playerid)) return 1;

	if(sscanf(params, "udd", params[0], params[1], params[2])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /selldrugs [id/имя] [кол-во] [цена]");
	if(params[1] < 1 || params[1] > 100000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Количество наркотиков не может быть менее "c_orange_red"1 гр."c_grey"");
	if(params[2] < 1 || params[2] > 10000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Цена должна быть от "c_orange_red"1$"c_grey" до "c_orange_red"10.000$"c_grey".");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");
	if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(p_t_info[params[0]][p_dialog] != -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Недоступно в данный момент.");
    if(PlayerInfo[playerid][drugs] < params[1]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет такого количества наркотиков.");
	if(GetString(p_t_info[params[0]][p_ip], p_t_info[playerid][p_ip]))
	{
		new scm_string[128];
		format(scm_string, sizeof(scm_string), ""c_orange_red"* A.WARNING: "c_grey"%s[%d] продает наркотики %s[%d] | same ip", PlayerInfo[playerid][name], playerid, PlayerInfo[params[0]][name], params[0]);
		foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);

		SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Невозможно продать наркотики данному игроку.");
		return 1;
	}

	buyer_id[playerid] = params[0];
	sell_price[playerid] = params[2];
	sell_item[playerid] = params[1];
	seller_id[params[0]] = playerid;

	new dialog_string[136];
	format(dialog_string, sizeof(dialog_string), ""c_server"%s "c_white"предлагает Вам приобрести "c_server"%d "c_white"гр. наркотиков за "c_server"%d$",
	PlayerInfo[playerid][name], params[1], params[2]);
	show_dialog(params[0], d_drugs_sell_accept, DIALOG_STYLE_MSGBOX, ""c_server"Покупка наркотиков", dialog_string, "Купить", "Отмена");
	return 1;
}

cmd:cellar(playerid, params[])
{
	new house_id = GetPVarInt(playerid, "house_id")-1;
	if(house_id < 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нужно находиться в доме.");
	if(h_info[house_id][h_improve][5] == 0)
	{
		return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"В доме нет оборудованного подвала.");
	}
	set_pos(playerid, 1400.0562, -9.9276, 1000.9152, 176.1147, 4, h_info[house_id][h_id]);
	SetPVarInt(playerid, "tp_area_used", 1);
	return 1;
}

cmd:garage(playerid, params[])
{
	new house_id = GetPVarInt(playerid, "house_id")-1;
	if(house_id < 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нужно находиться в доме.");
	if(h_info[house_id][h_garage] == 0)
	{
		return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"В доме нет оборудованного гаража.");
	}
	set_pos(playerid, 2169.6265, -368.4799, 1594.9048, 176.5608, 1, h_info[house_id][h_id]);
	SetPVarInt(playerid, "tp_area_used", 1);
	return 1;
}

cmd:armpanel(playerid)
{
	if(army_player(playerid)) show_dialog(playerid, d_armpanel, DIALOG_STYLE_LIST, ""c_server"Доставка оружия", "Состояние складов\nЗагрузка оружия\nНачать доставку", "Выбрать", "Закрыть");
	return 1;
}



cmd:unload(playerid)
{
	if(GetPlayerState(playerid)!= PLAYER_STATE_DRIVER) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы должны находиться за рулём транспортного средства.");
	if(veh_info[player_vehicle[playerid] -1][v_cargo] == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"В Вашем транспортном средстве нет загруженного оружия.");

	new bool:unload_target,
			material_count;


	for(new i = 0; i < 25; i ++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, army_unloading[i][0], army_unloading[i][1], army_unloading[i][2]))
		{

			if(i == 7)
			{
				if(f_info[i][f_materials] == 500000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Склад уже заполнен.");
				if(f_info[i][f_materials] + veh_info[player_vehicle[playerid] -1][v_cargo] > 500000)
				{
					material_count = 500000 -f_info[i][f_materials];
				}
				else material_count = veh_info[player_vehicle[playerid] -1][v_cargo];
			}
			else
			{
				if(f_info[i][f_materials] == 300000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Склад уже заполнен.");
				if(f_info[i][f_materials] + veh_info[player_vehicle[playerid] -1][v_cargo] > 300000)
				{
					material_count = 300000 -f_info[i][f_materials];
				}
				else material_count += veh_info[player_vehicle[playerid] -1][v_cargo];
			}
			f_info[i][f_materials] += material_count;
			f_info[i][f_guns] = f_info[i][f_materials];
			unload_target = true;
			if(i >= 17 && i <= 25)update_gdorm_text(i + 1);
		}
	}
	if(veh_info [player_vehicle[playerid] -1][v_model] == 548 && IsPlayerInRangeOfPoint(playerid, 35.0, 235.2808,1965.4155,19.3208))
	{
		if(f_info[7][f_materials] == 500000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Склад уже заполнен.");
		if(f_info[7][f_materials] + veh_info[player_vehicle[playerid] -1][v_cargo] > 500000)
		{
			material_count = 500000 -f_info[7][f_materials];
		}
		else material_count = veh_info[player_vehicle[playerid] -1][v_cargo];
		unload_target = true;
	}
	if(!unload_target) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы должны находиться возле разгрузочной зоны.");

	new t_string[108];
	format(t_string, sizeof(t_string), ""c_green"* "c_white"Вы успешно разгрузили "c_green"%d"c_white" единиц оружия и патронов.",
	material_count);
	SendClientMessage(playerid, col_white, t_string);
	veh_info[player_vehicle[playerid] -1][v_cargo] = 0;
	if(veh_info[player_vehicle[playerid] -1][v_cargo_object][0] != 0)
	{
		for(new j = 0; j < 3; j ++)
		{
			DestroyDynamicObject(veh_info[player_vehicle[playerid] -1][v_cargo_object][j]);
			veh_info[player_vehicle[playerid] -1][v_cargo_object][j] = 0;
		}
	}
	return 1;
}


cmd:economy(playerid)
{
	if(PlayerInfo[playerid][leader] != 11) return 1;
	show_dialog(playerid, d_economy, DIALOG_STYLE_LIST, ""c_server"Экономика", "Состояние организаций\nПеревод средств\nЗарплаты организаций", "Выбрать", "Закрыть");
	return 1;
}


cmd:free(playerid, params[])
{
	if(PlayerInfo[playerid][member] != 11) return 1;
	if(PlayerInfo[playerid][rank] != 3) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Данная команда доступна на должности адвоката.");
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /free [id/имя] [цена]");

	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");
	if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(p_t_info[params[0]][p_dialog] != -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Недоступно в данный момент.");
    if(PlayerInfo[params[0]][jail] < 1) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Игрок не находится в заключении.");
	if(params[2] < 1 || params[2] > 100000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Стоимость услуг должна составлять от "c_orange_red"1$"c_grey" до "c_orange_red"100.000$"c_grey".");


	buyer_id[playerid] = params[0];
	sell_price[playerid] = params[1];
	seller_id[params[0]] = playerid;


	new dialog_string[90 + MAX_PLAYER_NAME + 32 + 1 + 6];
	format(dialog_string, sizeof(dialog_string ), "Вы предложили "c_green"%s"c_white" услуги адвоката за "c_green"%d$",
	PlayerInfo[params[0]][name], params[1]);
	SendClientMessage(params[0], -1, dialog_string);

	format(dialog_string, sizeof(dialog_string ), ""c_server"%s "c_white"предлагает Вам услуги адвоката за "c_server"%d$\n\n"c_grey"* Срок Вашего заключения будет сокращён на 65 процентов.",
	PlayerInfo[playerid][name], params[1]);
	show_dialog(params[0], d_free_accept, DIALOG_STYLE_MSGBOX, ""c_server"Услуги адвоката", dialog_string, "Принять", "Отмена");
	return 1;
}
cmd:sellgunlic(playerid, params[])
{
	if(!cop_player(playerid)) return 1;
	if(PlayerInfo[playerid][rank] < 4) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Данная команда доступна с 4 ранга.");
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /sellgunlic [id/имя] [цена]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");
	if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(p_t_info[params[0]][p_dialog] != -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Недоступно в данный момент.");
    if(PlayerInfo[params[0]][gun_lic] != 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У игрока уже есть лицензия на оружие.");
	if(params[1] < 5000 || params[1] > 15000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Стоимость лицензии должна составлять от "c_orange_red"5.000$"c_grey" до "c_orange_red"15.000$"c_grey".");

	buyer_id[playerid] = params[0];
	sell_price[playerid] = params[1];
	seller_id[params[0]] = playerid;



	new dialog_string[109 + MAX_PLAYER_NAME + 32 + 1 + 6];

	format(dialog_string, sizeof(dialog_string ), "Вы предложили "c_green"%s"c_white" приобрести лицензию на оружие за "c_green"%d$",
	PlayerInfo[params[0]][name], params[1]);
	SendClientMessage(playerid, -1, dialog_string);

	format(dialog_string, sizeof(dialog_string ), ""c_server"%s "c_white"предлагает Вам приобрести "c_server"лицензию на оружие"c_white" за "c_server"%d$\n\n"c_grey"* Лицензия на оружие позволит покупать оружие в аммунациях штата.",
	PlayerInfo[playerid][name], params[1]);
	show_dialog(params[0], d_gunlic_accept, DIALOG_STYLE_MSGBOX, ""c_server"Лицензия на оружие", dialog_string, "Принять", "Отмена");
	return 1;
}


cmd:ram(playerid)
{
	if(!cop_player(playerid) && !fbi_player(playerid)) return 1;
	new is_near_house = -1;
	for(new h = 0; h < house_count; h++)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 4.0, h_info[h][h_pos][0], h_info[h][h_pos][1], h_info[h][h_pos][2])) continue;
		is_near_house = h;
		SetPVarInt(playerid, "house_id", h+1);
		new hint = h_info[h][h_int] -1;
		set_pos(playerid, house_int[hint][hint_position][0], house_int[hint][hint_position][1], house_int[hint][hint_position][2], house_int[hint][hint_position][3], house_int[hint][hint_int], h_info[h][h_id]);
		SetPVarInt(playerid, "tp_area_used", 1);
		break;
	}
	if(is_near_house == -1) return SendClientMessage(playerid, col_white, !""scm_error"Вы должны находиться возле дома.");

	new string[87];
	format(string, sizeof(string), ""scm_sucess"Вы выбили дверь дома. Владелец дома: {FFE100}%s", h_info[is_near_house][h_owner_name]);
	SendClientMessage(playerid, col_white, string);

	if(PlayerInfo[playerid][gender] != 0) {me_action(playerid, "выбила дверь дома.");} else {me_action(playerid, "выбил дверь дома.");}
	return 1;
}


cmd:fill(playerid)
{
	if(filling_count {playerid} != 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы уже заправляете транспортное средство.");

	for(new t = 0; t < b_count; t ++)
	{
	    if(b_info[t][b_type] != bizz_type_gas) continue;
	    if(!IsPlayerInRangeOfPoint(playerid, 10.0, b_info[t][b_position][0], b_info[t][b_position][1], b_info[t][b_position][2])) continue;
		if(b_info[t][b_price] == 0) return SendClientMessage(playerid, col_white, !""scm_error"Цена за 1 литр не назначена владельцем заправки.");
		if(b_info[t][b_owner_inc] == -1) return SendClientMessage(playerid, col_white, !""scm_error"У данной заправки нет владельца, она не работает.");
		if(b_info[t][b_close] == 1) return SendClientMessage(playerid, col_white, !""scm_error"Данный бизнес закрыт.");

		SetPVarInt(playerid,"f_biz",t);
		show_dialog(playerid, d_filling, DIALOG_STYLE_LIST, !""scm_dialog"Заправочная станция", !"Заправить транспорт\nКанистра", !"Выбрать", !"Закрыть");
	    return 1;
	}
	SendClientMessage(playerid, col_white, !""scm_error"Вы должны быть рядом с заправкой.");
	return 1;
}





cmd:gangtop(playerid)
{
	if(!gang_player(playerid)) return 1;
	show_dialog(playerid, d_gangtop, DIALOG_STYLE_LIST, ""c_server"Список лучших", ""c_grey"-"c_white"Лучшие стрелки\n"c_grey"-"c_white"Топ захватчиков", "Выбрать", "Назад");
	return 1;
}




cmd:ganginfo(playerid)
{
	if(!gang_player(playerid)) return 1;
	global_string[0] = EOS;

	for(new i = 0; i < 5; i ++)
	{
		strcat(global_string, "{");
		strcat(global_string, f_info[i + 17][f_chat_color]);
		strcat(global_string, "}");
		strcat(global_string, f_info[i + 17][f_name]);
		strcat(global_string, "\n");
	}
	show_dialog(playerid, d_ganginfo, DIALOG_STYLE_LIST, ""c_server"Информация о бандах", global_string, "Выбрать", "Назад");
	return 1;
}


cmd:gopolice(playerid, params[])
{
    if(!cop_player(playerid)) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /gopolice [id/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");

	if(!call_police {params[0]}) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Этот игрок не вызывал полицию либо его вызов уже приняли.");

	foreach(new i : logged_players)
	{
		if(cop_player(i))
		{
			new scm_string[128];
			format(scm_string, 128, "%s %s (%s) принял вызов %s", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], f_info[PlayerInfo[playerid][member] -1][f_name]);
			SendClientMessage(i, col_yellow, scm_string);
		}
	}
	new scm_string[108];
	format(scm_string, 108, ""c_green"%s %s"c_white" принял ваш вызов, ожидайте.", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name]);
	SendClientMessage(params[0], col_white, scm_string);
	format(scm_string, 72, ""c_green"%s"c_white" отмечен на Вашей карте.", PlayerInfo[params[0]][name]);
	SendClientMessage(playerid, col_white, scm_string);

	SetPlayerRaceCheckpoint(playerid, 1, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2], 0.0, 0.0, 0.0, 2.0);
	SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
	is_gps_used {playerid} = 1;

	call_police {params[0]} = 0;
	return 1;
}


cmd:gomedhelp(playerid, params[])
{
    if(!medic_player(playerid)) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /gomedhelp [id/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");

	if(!call_medic {params[0]}) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Этот игрок не вызывал скорую помощь либо его вызов уже приняли.");

	foreach(new i : logged_players)
	{
		if(medic_player(i))
		{
			new scm_string[128];
			format(scm_string, 128, "%s %s (%s) принял вызов %s", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], f_info[PlayerInfo[playerid][member] -1][f_name]);
			SendClientMessage(i, col_yellow, scm_string);
		}
	}
	new scm_string[108];
	format(scm_string, 108, ""c_green"%s %s"c_white" принял ваш вызов, ожидайте.", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name]);
	SendClientMessage(params[0], col_white, scm_string);
	format(scm_string, 72, ""c_green"%s"c_white" отмечен на Вашей карте.", PlayerInfo[params[0]][name]);
	SendClientMessage(playerid, col_white, scm_string);

	SetPlayerRaceCheckpoint(playerid, 1, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2], 0.0, 0.0, 0.0, 2.0);
	SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
	is_gps_used {playerid} = 1;

	call_medic {params[0]} = 0;
	return 1;
}


cmd:gotaxi(playerid, params[])
{
    if(PlayerInfo[playerid][job] != job_taxi) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /gotaxi [id/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");

	if(!call_taxi {params[0]}) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Этот игрок не вызывал такси либо его вызов уже приняли.");

	foreach(new i : logged_players)
	{
		if(PlayerInfo[i][job] == job_taxi)
		{
			new scm_string[128];
			format(scm_string, 128, "Таксист %s(%d) принял вызов %s", PlayerInfo[playerid][name], playerid);
			SendClientMessage(i, col_yellow, scm_string);
		}
	}
	new scm_string[108];
	format(scm_string, 108, ""c_green"Таксист %s(%d)"c_white" принял ваш вызов, ожидайте.", PlayerInfo[playerid][name], playerid);
	SendClientMessage(params[0], col_white, scm_string);
	format(scm_string, 72, ""c_green"%s"c_white" отмечен на Вашей карте.", PlayerInfo[params[0]][name]);
	SendClientMessage(playerid, col_white, scm_string);

	SetPlayerRaceCheckpoint(playerid, 1, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2], 0.0, 0.0, 0.0, 2.0);
	SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
	is_gps_used {playerid} = 1;

	call_taxi {params[0]} = 0;
	return 1;
}


cmd:gomechanic(playerid, params[])
{
    if(PlayerInfo[playerid][job] != job_mechanic) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /gomechanic [id/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");

	if(!call_mechanic {params[0]}) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Этот игрок не вызывал механика либо его вызов уже приняли.");

	foreach(new i : logged_players)
	{
		if(PlayerInfo[i][job] == job_mechanic)
		{
			new scm_string[128];
			format(scm_string, 128, "Механик %s(%d) принял вызов %s", PlayerInfo[playerid][name], playerid);
			SendClientMessage(i, col_yellow, scm_string);
		}
	}
	new scm_string[108];
	format(scm_string, 108, ""c_green"Механик %s(%d)"c_white" принял ваш вызов, ожидайте.", PlayerInfo[playerid][name], playerid);
	SendClientMessage(params[0], col_white, scm_string);
	format(scm_string, 72, ""c_green"%s"c_white" отмечен на Вашей карте.", PlayerInfo[params[0]][name]);
	SendClientMessage(playerid, col_white, scm_string);

	SetPlayerRaceCheckpoint(playerid, 1, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2], 0.0, 0.0, 0.0, 2.0);
	SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
	is_gps_used {playerid} = 1;

	call_mechanic {params[0]} = 0;
	return 1;
}


cmd:dir(playerid)
{
	if(PlayerInfo[playerid][direct] == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет справочника.");
	show_dialog(playerid, d_direction, DIALOG_STYLE_LIST, ""c_server"Справочник","1. Лидеры организации онлайн\n2. Механики\n3. Таксисты\n4. Репортёры", "Далее", "Отмена");
	return 1;
}


cmd:leaders(playerid)
{
	new count_leaders = 0;
	global_string[0] = EOS;
	for(new i = 0; i < max_fraction; i++)
	{
	    new line_string[150];
		if(!GetString(f_info[i][f_leader_name], "Свободна"))
		{
			new targetid;
			if(sscanf(f_info[i][f_leader_name], "u", targetid))
			{
				format(line_string, sizeof(line_string), ""c_white"%s -%s -%s -"c_orange_red"Не в сети\n", f_info[i][f_leader_name], f_info[i][f_name], f_rank[f_info[i][f_id] -1][f_info[i][f_rank_settings][0] -1]);
				strcat(global_string, line_string);
				continue;
			}
			if(!IsPlayerConnected(targetid))
			{
				format(line_string, sizeof(line_string), ""c_white"%s -%s -%s -"c_orange_red"Не в сети\n", f_info[i][f_leader_name], f_info[i][f_name], f_rank[f_info[i][f_id] -1][f_info[i][f_rank_settings][0] -1]);
                strcat(global_string, line_string);
				continue;
			}
			format(line_string, sizeof(line_string), ""c_white"%s -%s -%s -"c_green"В сети\n", f_info[i][f_leader_name], f_info[i][f_name], f_rank[f_info[i][f_id] -1][f_info[i][f_rank_settings][0] -1]);
            strcat(global_string, line_string);

            count_leaders++;
            continue;
		}
	}
	if(!count_leaders) return SendClientMessage(playerid, col_white, !""scm_error"В данный момент нет лидеров в сети.");
	else show_dialog(playerid, d_none, DIALOG_STYLE_LIST, !""scm_dialog"Список лидеров организаций", global_string, !"Выбрать", !"Закрыть");
	return 1;
}

cmd:vacancy(playerid)
{
    new vacancies = 0;
    new string[6 + 28 + 16];
	global_string[0] = EOS;
	for(new i = 0; i < 10; i++)
	{
	    if(VacancyInfo[i][VacancyStatus]) {
			format(string, sizeof(string), ""c_white"%d. {%s}%s\n", vacancies + 1, f_info [VacancyInfo[i][VacancyFraction] -1][f_chat_color], f_info [VacancyInfo[i][VacancyFraction] -1][f_name]);
			strcat(global_string, string);
	        vacancies++;
	    }
	}
	if(vacancies != 10 && PlayerInfo[playerid][leader] != 0)
	{
	    strcat(global_string, "Добавить вакансию");
	  	return show_dialog(playerid, d_vacancy, DIALOG_STYLE_LIST, ""c_server"Вакансии", global_string, "Далее", "Закрыть");
	}
	if(vacancies == 0)
		return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Сейчас нет доступных вакансий.");

	return show_dialog(playerid, d_vacancy, DIALOG_STYLE_LIST, ""c_server"Вакансии", global_string, "Далее", "Закрыть");
}




cmd:fstyle(playerid)
{
	show_dialog(playerid, d_mm_fstyle, DIALOG_STYLE_LIST, ""c_server"Стиль боя", ""c_server"1. "c_white"Бокс\n"c_server"2. "c_white"Кунг-Фу\n"c_server"3. "c_white"Кикбокс", "Выбрать", "Назад");
	return 1;
}

cmd:quitjob(playerid)
{
	if(PlayerInfo[playerid][job] == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не трудоустроены на постоянную работу.");
	if(player_rentcar[playerid] != INVALID_VEHICLE_ID) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не завершили работу на предыдущем рабочем месте.");
	PlayerInfo[playerid][job] = 0;
	update_int_sql(playerid, "u_job", PlayerInfo[playerid][job]);
	SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно уволились с прежнего места работы.");
	return 1;
}

cmd:sellsim(playerid, params[])
{
	if(duel_opponent[playerid] != INVALID_PLAYER_ID) return 1;
	if(!GetPVarInt(playerid, "p_biz_id")) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Необходимо находиться в магазине 24/7.");

	if(PlayerInfo[playerid][number] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас нет активной сим-карты.");
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /sellsim [id/имя] [цена]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");
	if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(p_t_info[params[0]][p_dialog] != -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Недоступно в данный момент.");

	if(PlayerInfo[params[0]][exp] < 3 && PlayerInfo[params[0]][level] == 1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок должен отыграть 3 часа, чтобы можно было продать симкарту.");
	if(params[1] < 1 || params[1] > 200000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Стоимость сим-карты должна составлять от "c_orange_red"1$"c_grey" до "c_orange_red"200.000$"c_grey".");

	if(GetString(p_t_info[params[0]][p_ip], p_t_info[playerid][p_ip]))
	{
		new scm_string[128];
		format(scm_string, sizeof(scm_string), ""c_orange_red"* A.WARNING: "c_grey"%s[%d] продает симкарту %s[%d] | same ip", PlayerInfo[playerid][name], playerid, PlayerInfo[params[0]][name], params[0]);
		foreach(new i: admin_players)SendClientMessage(i, col_gray, scm_string);

		SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Невозможно продать симкарту данному игроку.");
		return 1;
	}

	buyer_id[playerid] = params[0];
	sell_price[playerid] = params[1];
	seller_id[params[0]] = playerid;
	sell_type[playerid] = PlayerInfo[playerid][number];


	new dialog_string[90 + MAX_PLAYER_NAME + 32 + 1 + 6];
	format(dialog_string, sizeof(dialog_string), "Вы предложили игроку "c_server"%s"c_white" приобрести "c_server"сим-карту(тел.%d)"c_white" за "c_server"%d$",
	PlayerInfo[params[0]][name], PlayerInfo[playerid][number], params[2]);
	SendClientMessage(playerid, col_white, dialog_string);
	format(dialog_string, sizeof(dialog_string ), ""c_server"%s "c_white"предлагает Вам приобрести "c_server"сим-карту(тел.%d)"c_white" за "c_server"%d$",
	PlayerInfo[playerid][name], PlayerInfo[playerid][number], params[1]);
	show_dialog(params[0], d_sellsim_accept, DIALOG_STYLE_MSGBOX, ""c_server"Сим-карта", dialog_string, "Принять", "Отмена");
	return 1;
}

cmd:fmenu(playerid)
{
	if(PlayerInfo[playerid][family] == 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");

    dlobal_string[0] = EOS;
	switch(family_info[PlayerInfo[playerid][family] -1][fam_type])
	{
		case 0:
		{
			strcat(dlobal_string, ""c_server"1 | "c_white"Информация о семье\n");
			strcat(dlobal_string, ""c_server"2 | "c_white"Члены семьи ["c_green"в сети"c_white"]\n");
			strcat(dlobal_string, ""c_server"3 | "c_white"Члены семьи ["c_orange_red"не в сети"c_white"]\n");
			strcat(dlobal_string, ""c_server"4 | "c_white"Настройки семьи\n");
			strcat(dlobal_string, ""c_server"5 | "c_white"Чёрный список\n");
			strcat(dlobal_string, ""c_server"6 | "c_white"Управление автопарком\n");
			strcat(dlobal_string, ""c_server"7 | "c_white"История семьи\n");
			strcat(dlobal_string, ""c_server"8 | "c_white"Передать семью\n");
			strcat(dlobal_string, ""c_grey"Покинуть семью\n");
		}
		case 1:
		{
			strcat(dlobal_string, ""c_server"1 | "c_white"Информация о семье\n");
			strcat(dlobal_string, ""c_server"2 | "c_white"Члены семьи ["c_green"в сети"c_white"]\n");
			strcat(dlobal_string, ""c_server"3 | "c_white"Члены семьи ["c_orange_red"не в сети"c_white"]\n");
			strcat(dlobal_string, ""c_server"4 | "c_white"Настройки семьи\n");
			strcat(dlobal_string, ""c_server"5 | "c_white"Чёрный список\n");
			strcat(dlobal_string, ""c_server"6 | "c_white"Управление автопарком\n");
			strcat(dlobal_string, ""c_server"7 | "c_white"История семьи\n");
			strcat(dlobal_string, ""c_server"8 | "c_white"Передать семью\n");
			strcat(dlobal_string, ""c_server"9 | "c_white"Просмотреть список ваших аммуниций\n");
			strcat(dlobal_string, ""c_grey"Покинуть семью\n");
		}
	}
	return show_dialog(playerid, d_family, DIALOG_STYLE_LIST, !""scm_dialog"Управление семьёй", dlobal_string, !"Выбрать", !"Закрыть");
}

cmd:fam(playerid, params[])
{
    if(PlayerInfo[playerid][family] == 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");
    if(PlayerInfo[playerid][mute]) return SendClientMessage(playerid, col_white, !""scm_error"Доступ в чат заблокирован. Время до разблокировки: "c_server"/time");
    if(PlayerInfo[playerid][fam_mute])
    {
        new text_string[80];
        format(text_string, sizeof(text_string), ""scm_error"У Вас заблокирован доступ к рация семьи | %s", convert_time(PlayerInfo[playerid][fam_mute]));
        SendClientMessage(playerid, col_white, text_string);
        return 0;
    }
    extract params -> new string:fam_text[128]; else return SendClientMessage(playerid, col_gray, !"Используйте:  /fam [текст]");
    if(check_advertise(playerid, fam_text)) return 1;

    new text_string[144];
    format(text_string, sizeof(text_string), "{%s}[Семья] %s %s[%d]: "c_silver"%s", family_info[PlayerInfo[playerid][family] -1][fam_chat_color], family_rank[PlayerInfo[playerid][family] -1][PlayerInfo[playerid][family_rang] -1], PlayerInfo[playerid][name], playerid, params[0]);
    family_message(PlayerInfo[playerid][family], col_white, text_string);
    return 1;
}

cmd:fammute(playerid, params[])
{
    if(PlayerInfo[playerid][family] == 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");
    if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][5])
    {
        new text_string[100];
        format(text_string, sizeof(text_string), ""scm_error"Команда доступна со статуса %s (%d)", family_rank[PlayerInfo[playerid][family] -1][family_info[PlayerInfo[playerid][family] -1][fam_settings][5] -1], family_info[PlayerInfo[playerid][family] -1][fam_settings][5]);
        return SendClientMessage(playerid, col_white, text_string);
    }
    extract params -> new player:targetid, fam_mutes, string:fam_reason[64]; else return SendClientMessage(playerid, col_gray, !"Используйте: /fammute [id игрока] [минуты] [причина]");
    if(!IsPlayerConnected(targetid) || targetid == playerid) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");
    if(PlayerInfo[targetid][family] != PlayerInfo[playerid][family]) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не состоит в Вашей семье.");
    if(PlayerInfo[targetid][family_rang]  >= PlayerInfo[playerid][family_rang]) return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете заблокировать рацию своему руководству.");
    if(fam_mutes < 1 || fam_mutes > 120) return SendClientMessage(playerid, col_white, !""scm_info"Блокировка рации не может быть меньше 1 минуты или больше 120 минут.");

    new family_id = PlayerInfo[playerid][family];

    new text_string[125];
    format(text_string, sizeof(text_string),"{%s}[Семья]"c_silver" %s %s заблокировал(-а) рацию %s на %d мин. Причина: %s", family_info[family_id -1][fam_chat_color], family_rank[family_id -1][PlayerInfo[playerid][family_rang] -1], PlayerInfo[playerid][name], PlayerInfo[targetid][name], fam_mutes, fam_reason);
    family_message(family_id, col_white, text_string);

    format(text_string, sizeof(text_string), "%s заблокировал(-а) рацию %s на %d мин. Причина: %s", PlayerInfo[playerid][name], PlayerInfo[targetid][name], fam_mutes, fam_reason);
    write_family(playerid, family_id, TYPE_LOG_WARN, text_string);

    PlayerInfo[targetid][fam_mute] = fam_mutes * 60;
    return 1;
}

cmd:famunmute(playerid, params[])
{
    if(PlayerInfo[playerid][family] == 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");
    if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][5])
    {
        new text_string[100];
        format(text_string, sizeof(text_string), ""scm_error"Команда доступна со статуса %s (%d)", family_rank[PlayerInfo[playerid][family] -1][family_info[PlayerInfo[playerid][family] -1][fam_settings][5] -1], family_info[PlayerInfo[playerid][family] -1][fam_settings][5]);
        return SendClientMessage(playerid, col_white, text_string);
    }
    extract params -> new player:targetid; else return SendClientMessage(playerid, col_gray, !"Используйте: /famunmute [id игрока]");
    if(!IsPlayerConnected(targetid) || targetid == playerid) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");
    if(PlayerInfo[targetid][family] != PlayerInfo[playerid][family]) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не состоит в Вашей семье.");
    if(PlayerInfo[targetid][family_rang]  >= PlayerInfo[playerid][family_rang]) return SendClientMessage(playerid, col_white, !""scm_info"Вы не можете заблокировать рацию своему руководству.");
    if(PlayerInfo[targetid][fam_mute] == 0) return SendClientMessage(playerid, col_white, !""scm_error"У игрока не заблокирован доступ к рации.");

    PlayerInfo[targetid][fam_mute] = 0;
    update_int_sql(targetid, "u_family_mute", PlayerInfo[targetid][fam_mute]);

    new family_id = PlayerInfo[playerid][family];

    new text_string[125];
    format(text_string, sizeof(text_string), "{%s}[Семья]"c_silver" %s %s разблокировал(-а) рацию %s", family_info[family_id -1][fam_chat_color], family_rank[family_id -1][PlayerInfo[playerid][family_rang] -1], PlayerInfo[playerid][name], PlayerInfo[targetid][name]);
    family_message(family_id, col_white, text_string);

    format(text_string, sizeof(text_string), "%s разблокировал(-а) рацию %s", PlayerInfo[playerid][name], PlayerInfo[targetid][name]);
    write_family(playerid, family_id, TYPE_LOG_WARN, text_string);
    return 1;
}

cmd:faminvite(playerid, params[])
{
	if(PlayerInfo[playerid][family] == 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");
	if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][0])
	{
		new text_string[100];
		format(text_string, sizeof(text_string), ""scm_error"Команда доступна со статуса %s (%d).", family_rank[PlayerInfo[playerid][family] -1][family_info[PlayerInfo[playerid][family] -1][fam_settings][0] -1], family_info[PlayerInfo[playerid][family] -1][fam_settings][0]);
		return SendClientMessage(playerid, col_white, text_string);
	}
	extract params -> new player:targetid; else return SendClientMessage(playerid, col_gray, !"Используйте: /faminvite [id игрока]");
	if(!IsPlayerConnected(targetid) || targetid == playerid) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");
	if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[targetid][p_pos][0], p_t_info[targetid][p_pos][1], p_t_info[targetid][p_pos][2]) || GetPlayerVirtualWorld(targetid) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_white, !""scm_error"Игрок слишком далеко.");
	if(p_t_info[targetid][p_dialog] != -1) return SendClientMessage(playerid, col_white, !""scm_error"У игрока уже открыт диалог.");
	if(PlayerInfo[targetid][family] > 0) return SendClientMessage(playerid, col_white, "Игрок уже состоит в семье.");
	if(is_player_family_bl(targetid, PlayerInfo[playerid][family])!= 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете принять игрока из чёрного списка семьи.");

	new text_string[144];
	format(text_string, sizeof(text_string), ""scm_info"Вы предложили "c_server"%s"c_white" присоединиться к семье %s", PlayerInfo[targetid][name], family_info[PlayerInfo[playerid][family] -1][fam_name]);
	SendClientMessage(playerid, col_white, text_string);

	format(text_string, sizeof(text_string), ""c_server"%s"c_white" приглашает вас присоединиться к семье %s.\n\n"c_grey"Вы согласны присоединиться?", PlayerInfo[playerid][name], family_info[PlayerInfo[playerid][family] -1][fam_name]);
	show_dialog(targetid, d_family_invite, DIALOG_STYLE_MSGBOX, !""scm_dialog"Приглашение в семью", text_string, !"Да", !"Нет");

	SetPVarInt(targetid, !"family_id", PlayerInfo[playerid][family]);
	SetPVarInt(targetid, !"family_player", playerid);
	return 1;
}

cmd:famuninvite(playerid, params[])
{
	if(PlayerInfo[playerid][family] == 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");
	if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][1])
	{
		new text_string[100];
		format(text_string, sizeof(text_string), ""scm_error"Команда доступна со статуса %s (%d)", family_rank[PlayerInfo[playerid][family] -1][family_info[PlayerInfo[playerid][family] -1][fam_settings][1] -1], family_info[PlayerInfo[playerid][family] -1][fam_settings][1]);
		return SendClientMessage(playerid, col_white, text_string);
	}
	extract params -> new player:targetid, string:reason[64]; else return SendClientMessage(playerid, col_gray, !"Используйте: /famuninvite [id игрока] [причина]");
	if(!IsPlayerConnected(targetid) || targetid == playerid) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");
	if(PlayerInfo[targetid][family] != PlayerInfo[playerid][family]) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не состоит в Вашей семье.");
	if(PlayerInfo[targetid][family_rang] >= family_info[PlayerInfo[playerid][family] -1][fam_settings][3]) return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете выгнать создателя семьи.");

	new family_id = PlayerInfo[playerid][family], text_string[144];
	format(text_string, sizeof(text_string), ""scm_info"Вы выгнали "c_server"%s"c_white" из семьи %s. Причина: %s", PlayerInfo[targetid][name], family_info[PlayerInfo[playerid][family] -1][fam_name], reason);
	SendClientMessage(playerid, col_white, text_string);

	format(text_string, sizeof(text_string), "{%s}[Семья] %s %s[%d] выгнал из семьи %s[%d]. Причина: %s", family_info[family_id -1][fam_chat_color], family_rank[family_id -1][PlayerInfo[playerid][family_rang] -1], PlayerInfo[playerid][name], playerid, PlayerInfo[targetid][name], targetid, reason);
	family_message(family_id, col_white, text_string);

	Iter_Remove(family_players[family_id], targetid);
	PlayerInfo[targetid][family] = PlayerInfo[targetid][family_rang] = 0;

	if(PlayerInfo[targetid][family_text] != Text3D:INVALID_3DTEXT_ID)
	{
		DestroyDynamic3DTextLabel(PlayerInfo[targetid][family_text]);
		PlayerInfo[targetid][family_text] = Text3D:INVALID_3DTEXT_ID;
	}

	new query_string[120];
	format(query_string, sizeof(query_string), "UPDATE `users` SET `u_family`='0',`u_family_rank`='0' WHERE `u_id`='%d' LIMIT 1", PlayerInfo[targetid][id]);
	mysql_query(sql_connection, query_string);

	family_info[family_id -1][fam_members] --;

	format(query_string, sizeof(query_string), "UPDATE `family` SET `fam_members`='%d' WHERE `fam_id`='%d' LIMIT 1", family_info[family_id -1][fam_members], family_id);
	mysql_query(sql_connection, query_string);

	format(query_string, sizeof(query_string), "%s выгнал из семьи %s", PlayerInfo[playerid][name], PlayerInfo[targetid][name]);
	write_family(playerid, family_id, TYPE_LOG_UVAL, query_string);
	return 1;
}

cmd:famrank(playerid, params[])
{
    if(!PlayerInfo[playerid][family]) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");
    if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][2])
    {
        new text_string[100];
        format(text_string, sizeof(text_string), ""scm_error"Команда доступна со статуса %s (%d).", family_rank[PlayerInfo[playerid][family] -1][family_info[PlayerInfo[playerid][family] -1][fam_settings][2] -1], family_info[PlayerInfo[playerid][family] -1][fam_settings][2]);
        return SendClientMessage(playerid, col_white, text_string);
    }
    extract params -> new player:targetid; else return SendClientMessage(playerid, col_gray, !"Используйте: /famrank [id игрока]");
    if(!IsPlayerConnected(targetid) || targetid == playerid) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");
    if(PlayerInfo[targetid][family] != PlayerInfo[playerid][family]) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не состоит в Вашей семье.");
    if(PlayerInfo[targetid][family_rang] >= family_info[PlayerInfo[playerid][family] -1][fam_settings][3]) return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете изменить должность создателю семьи.");

    dlobal_string[0] = EOS;
    for(new i = 0; i < family_info[PlayerInfo[playerid][family] -1][fam_settings][3]; i ++)
    {
        new text_string[80];
        format(text_string, sizeof(text_string), ""c_server"%d | "c_white"%s\n", i + 1, family_rank[PlayerInfo[playerid][family] -1][i]);
        strcat(dlobal_string, text_string);
    }
    show_dialog(playerid, d_family_rank, DIALOG_STYLE_LIST, !""scm_dialog"Семейный статус", dlobal_string, !"Выбрать", !"Назад");
    return SetPVarInt(playerid, !"pl_setrank_id", targetid);
}

cmd:election(playerid)
{
	if(PlayerInfo[playerid][admin] < 6) return 1;
	show_dialog(playerid, d_election, DIALOG_STYLE_LIST, ""c_server"Управление выборами | Статус", "Выборы закрыты\nРегистрация кандидатов\nГолосование\nУдалить кандидатов\nУдалить кандидата", "Принять", "Закрыть");
	return 1;
}


cmd:number(playerid, params[])
{
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /number [ид/имя]");

 	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете применить это к самому себе.");
	if(PlayerInfo[params[0]][number] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не владеет телефоном или у него нет SIM-карты.");
	new scm_string[128];
	format(scm_string, sizeof(scm_string), ""c_green"* "c_white"Номер игрока "c_green"%s[%d]"c_white": "c_green"%i", PlayerInfo[params[0]][name], params[0], PlayerInfo[params[0]][number]);
	SendClientMessage(playerid, col_white, scm_string);
	return 1;
}


cmd:joblist(playerid, params[])
{
 	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /joblist [id/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");

	if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");


	new query_string[138];
	format(query_string, sizeof(query_string), "SELECT * FROM `users_jobinfo` WHERE `ji_uid` ='%d' AND(`ji_fraction` < 18 OR `ji_fraction` > 25)", PlayerInfo[playerid][id]);
	mysql_tquery(sql_connection, query_string, "joblist_callback", "ii", playerid, params[0]);

	return 1;
}

cmd:ganglist(playerid, params[])
{
 	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /ganglist [id/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");

	if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");


	new query_string[138];
	format(query_string, sizeof(query_string), "SELECT * FROM `users_jobinfo` WHERE `ji_uid` ='%d' AND `ji_fraction` >= 18 AND `ji_fraction` <= 25", PlayerInfo[playerid][id]);
	mysql_tquery(sql_connection, query_string, "ganglist_callback", "ii", playerid, params[0]);

	return 1;
}



cmd:help(playerid)
{
	show_dialog(playerid, d_help, DIALOG_STYLE_LIST, ""c_server"Помощь по игре", ""c_server"1. "c_white"О проекте\n"c_server"2. "c_white"Безопасность\n"c_server"3. "c_white"Role Play\n"c_server"4. "c_white"Основы игры\n"c_server"5. "c_white"Первые шаги\n"c_server"6. "c_white"Транспорт\n"c_server"7. "c_white"Общение\n"c_server"8. "c_white"Жильё\n"c_server"9. "c_white"Бизнес\n"c_server"10. "c_white"Банки и хранение средств\n"c_server"11. "c_white"Работы\n"c_server"12. "c_white"Организации", "Выбрать", "Закрыть");
	return 1;
}

cmd:debtors(playerid)
{
	if(PlayerInfo[playerid][member] != 11 || PlayerInfo[playerid][rank] < 9) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вам недоступна данная функция.");

	SetPVarInt(playerid, "ofm_list_page", 1);
	mysql_tquery(sql_connection, "SELECT `u_name`,`u_tax` FROM `users` WHERE `u_tax` > 10000 ORDER BY `users`.`u_tax` DESC", "callback_debtors", "i", playerid);
	return 1;
}



alias:spawnchange("setspawn");
cmd:spawnchange(playerid)
{
    new spawn_text[24];
    switch(PlayerInfo[playerid][spawnchange])
    {
        case 0: spawn_text = "На вокзале";
        case 1: spawn_text = "В собственном доме";
        case 2: spawn_text = "На базе организации";
        case 3: spawn_text = "В личной яхте";
        case 4: spawn_text = "В арендованом доме";
        case 5: spawn_text = "В семейном доме";
    }
    dlobal_string[0] = EOS;

    new line_string[75];
    format(line_string, sizeof(line_string), ""c_white"Текущее место появления: "c_server"%s\n", spawn_text);
    strcat(dlobal_string, line_string);

    strcat(dlobal_string, ""c_server"1 | "c_white"На вокзале\n");
    strcat(dlobal_string, ""c_server"2 | "c_white"В собственном доме\n");
    strcat(dlobal_string, ""c_server"3 | "c_white"На базе организации\n");
    strcat(dlobal_string, ""c_server"4 | "c_white"В личной яхте\n");
    strcat(dlobal_string, ""c_server"5 | "c_white"В арендованом доме\n");
    strcat(dlobal_string, ""c_server"6 | "c_white"В семейном доме");

    return show_dialog(playerid, d_spawnchange, DIALOG_STYLE_LIST, !""scm_dialog"Изменение места появления в игре", dlobal_string, !"Выбрать", !"Закрыть");
}



cmd:exitrace(playerid)
{
	if(!is_player_race_regged[playerid]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не участвуете в гонке.");
	is_player_race_regged[playerid] = 0;
	PlayerRaceCount--;
	if(StartRace == 2)
 	{
		DestroyVehicle(player_race_vehicle[playerid]);
		DisableRemoteVehicleCollisions(playerid, 0);
		DisablePlayerRaceCheckpoint(playerid);
		set_pos(playerid, 1298.1658, -1360.8027, 35.8113, 21.7293, 0, 5);
		player_race_cp[playerid] =
		player_race_vehicle[playerid] = 0;
	}
	SendClientMessage(playerid, col_white, !""c_green"* "c_white"Вы успешно покинули гонки.");
	return 1;
}

cmd:exitpaint(playerid)
{
    if(!TeamPaint[playerid]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не участвуете в PaintBall.");
	if(StartPaintBall == 2)
	{
 		set_health(playerid, 100);
		reset_player_weapon(playerid);
		SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

		set_pos(playerid, 1298.1658, -1360.8027, 35.8113, 21.7293, 0, 5);
		TextDrawHideForPlayer(playerid, PaintTextDraws);
		PlayerTextDrawHide(playerid, PaintStats[playerid]);
		for(new j = 0; j < 5; j ++)if(!IsPlayerMobile(playerid)) SendDeathMessageToPlayer(playerid, 1001, 1001, 200);
		KillPaint[playerid] =
		DeathPaint[playerid] = 0;
	}
	switch(TeamPaint[playerid])
	{
	    case 1: BluePlayer--;
	    case 2: RedPlayer--;
	}
	TeamPaint[playerid] = 0;
	SendClientMessage(playerid, col_white, !""c_green"* "c_white"Вы успешно покинули PaintBall.");

	if(is_fraction_duty {playerid} == 1)SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
	else SetPlayerColor(playerid, 0xFFFFFF80); // col_white



	return 1;
}


cmd:startpaint(playerid)
{
	if(PlayerInfo[playerid][admin] < 6) return 1;

	TimerPaintBall = 300;
	StartPaintBall = 1;
	RedScore = BlueScore = RedPlayer = BluePlayer = 0;

	if(++ PaintBallMap > 2)PaintBallMap = 1;
	foreach(new i: logged_players)
	{
		if(TeamPaint[i])
		{
			TeamPaint[i] = KillPaint[i] = DeathPaint[i] = 0;
			set_pos(i, 1298.1658, -1360.8027, 35.8113, 21.7293, 0, 5);
		}
	}
	SendClientMessageToAll(col_gray, ""c_yellow"* S.INFO: Через 5 минут пройдет мероприятие \"PaintBall\". (/gps > Прочее > Регистрация на мероприятия)");
	return 1;
}

cmd:startrace(playerid)
{
	if(PlayerInfo[playerid][admin] < 6) return 1;

	TimerRace = 300;
	StartRace = 1;
	RaceCountWinner =
	PlayerRaceCount = 0;
	RaceVehicle = Race_Car[random(18)];
	if(++RaceMap > 9) RaceMap = 1;
	foreach(new i: logged_players)
	{
		if(is_player_race_regged[i])
		{
			DestroyVehicle(player_race_vehicle[i]);
			player_race_vehicle[i] =
			is_player_race_regged[i] =
			player_race_cp[i] = 0;
			DisableRemoteVehicleCollisions(i, 0);
			set_pos(i, 1298.1658, -1360.8027, 35.8113, 21.7293, 0, 5);
		}
	}
	SendClientMessageToAll(col_white, ""c_yellow"* S.INFO: Через 5 минут пройдет мероприятие \"Гонки\". (/gps > Прочее > Регистрация на мероприятия)");
	return 1;
}






cmd:updorms(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;

	dorm_count[DORM_SAWMILL] = dorm_count[DORM_MINE] = dorm_count[DORM_FACTORY_GUNS] = dorm_count[DORM_FACTORY_MINE] = dorm_count[DORM_FACTORY_WOOD] = 1000000;
	return 1;
}

cmd:setwarehouse(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 5) return 1;
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /setwarehouse [организация] [кол-во]");
	if(params[0] < 0 || params[0] > fraction_count) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Неверный ID организации.");
	if(params[1] < 0 || params[1] > 300000) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Неверный ID организации.");

	f_info[params[0] -1][f_materials] = params[1];
	f_info[params[0] -1][f_guns] = params[1];


	new query_string[136];
	format(query_string, 136, "UPDATE `fractions` SET `f_materials` = '%d',`f_guns` = '%d' WHERE `f_id` = '%d' LIMIT 1",
	f_info[params[0] -1][f_materials], f_info[params[0] -1][f_guns], params[0]);
	mysql_tquery(sql_connection, query_string, "", "");

	format(query_string, sizeof(query_string ), ""c_server"* A.INFO:"c_grey" %s[%i] пополнил оружием склад %s", PlayerInfo[playerid][name], playerid, f_info[params[0] -1][f_name]);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, query_string);

	if(params[0] >= 18 && params[0]<= 25)update_gdorm_text(params[0]);
	return 1;
}
cmd:setmoneyhouse(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	if(sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /setmoneyhouse [организация] [кол-во]");
	if(params[0] < 0 || params[0] > fraction_count) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Неверный ID организации.");
	if(params[1] < 0 || params[1] > 5000000) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Неверный ID организации.");

	f_info[params[0] -1][f_money] = params[1];


	new query_string[136];
	format(query_string, 136, "UPDATE `fractions` SET `f_money` = '%d' WHERE `f_id` = '%d' LIMIT 1",
	f_info[params[0] -1][f_money], params[0]);
	mysql_tquery(sql_connection, query_string, "", "");

	format(query_string, sizeof(query_string ), ""c_server"* A.INFO:"c_grey" %s[%i] пополнил средствами органиацию %s", PlayerInfo[playerid][name], playerid, f_info[params[0] -1][f_name]);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, query_string);

	if(params[0] >= 18 && params[0]<= 22)update_gdorm_text(params[0]);
	return 1;
}

cmd:lc(playerid)
{
	if(PlayerInfo[playerid][leader] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Данная команда доступна только для лидеров организаций.");
	if(p_t_info[playerid][lconnect] == true)
 	{
 		p_t_info[playerid][lconnect] = false;
 		SendClientMessage(playerid, -1, ""c_server"* L.INFO:"c_grey" Вы успешно отключили прослушку лидерского чата!");
	}
	else
	{
		p_t_info[playerid][lconnect] = true;
		SendClientMessage(playerid, -1, ""c_server"* L.INFO:"c_grey" Вы успешно включили прослушку лидерского чата!");
	}
	return 1;
}
cmd:l(playerid, params[])
{
	if(PlayerInfo[playerid][leader] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Данная команда доступна только для лидеров организаций.");
	if(p_t_info[playerid][lconnect] == false) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы отключены от лидерского чата (/lc).");
	if(sscanf(params, "s[128]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /l [текст]");
	new scm_string[144];
	format(scm_string, sizeof scm_string, "[L] %s %s[%d]: %s", f_info[PlayerInfo[playerid][member] -1][f_name], PlayerInfo[playerid][name], playerid, params[0]);
	foreach(new i: logged_players) if(PlayerInfo[i][leader] != 0 && p_t_info[i][lconnect] != false)SendClientMessage(i, 0xFF8C00FF, scm_string);
	return 1;
}

cmd:rlock(playerid)
{
	if(player_rentcar[playerid] == INVALID_VEHICLE_ID) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не арендуете транспорт.");

	if(player_rentcar[playerid] == GetPlayerVehicleID(playerid))
	{
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		if(veh_info[player_rentcar[playerid] -1][v_locked])
		{
			new engine, lights, alarm, doors, bonnet, boot, objective;

			veh_info[player_rentcar[playerid] -1][v_locked] = false;
			GetVehicleParamsEx(player_rentcar[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(player_rentcar[playerid], engine, lights, alarm, false, bonnet, boot, objective);
			GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~ CAR UNLOCK", 3000, 3);
			me_action(playerid, "открыл(а) транспорт");
			return 1;
		}
		else
		{
			new engine, lights, alarm, doors, bonnet, boot, objective;

			veh_info[player_rentcar[playerid] -1][v_locked] = true;
			GetVehicleParamsEx(player_rentcar[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(player_rentcar[playerid], engine, lights, alarm, true, bonnet, boot, objective);
			GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~ CAR LOCK", 3000, 3);
			me_action(playerid, "закрыл(а) транспорт");
			return 1;
		}
	}
	new Float:pl_pos_x,
		Float:pl_pos_y,
		Float:pl_pos_z;

	GetPlayerPos(playerid, pl_pos_x, pl_pos_y, pl_pos_z);

	if(IsVehicleInRangeOfPoint(player_rentcar[playerid], 2.5, pl_pos_x, pl_pos_y, pl_pos_z))
	{
		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		if(veh_info[player_rentcar[playerid] -1][v_locked])
		{
			new engine, lights, alarm, doors, bonnet, boot, objective;

			veh_info[player_rentcar[playerid] -1][v_locked] = false;
			GetVehicleParamsEx(player_rentcar[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(player_rentcar[playerid], engine, lights, alarm, false, bonnet, boot, objective);
			GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~ CAR UNLOCK", 3000, 3);
			me_action(playerid, "открыл(а) транспорт");
			return 1;
		}
		else
		{
			new engine, lights, alarm, doors, bonnet, boot, objective;

			veh_info[player_rentcar[playerid] -1][v_locked] = true;
			GetVehicleParamsEx(player_rentcar[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(player_rentcar[playerid], engine, lights, alarm, true, bonnet, boot, objective);
			GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~ CAR LOCK", 3000, 3);
			me_action(playerid, "закрыл(а) транспорт");
			return 1;
		}
	}
	return 1;
}
cmd:donate(playerid) return show_donate(playerid);

stock show_donate(playerid)
{
	global_string[0] = EOS;
	format(global_string, 665,
	""c_white"Название услуги:\t"c_white"Стоимость:\n\
	"c_server"1 | "c_white"Конвертация валюты\t"c_green"1 E-coin = 1,000$\n\
	"c_server"2 | "c_white"Смена игрового никнейма\t"c_green"20 E-coin\n\
	"c_server"3 | "c_white"Снятие предупреждения(Варн)\t"c_green"100 E-coin\n\
	"c_server"4 | "c_white"Смена игрового возраста\t"c_green"50 E-coin\n\
	"c_server"5 | "c_white"Редкие скины персонажа\t"c_green""c_green"150 E-coin\n\
	"c_server"6 | "c_white"Получить новую трудовую книжку\t"c_green"50 E-coin\n\
	"c_server"7 | "c_white"Привилегии VIP "c_server"'Gold'\t"c_green"700 E-coin\n\
	"c_server" \n\
	"c_grey"На счету Вашего аккаунта: "c_white"%d"c_grey" E-coin", get_player_donate(playerid));
	show_dialog(playerid, d_donate, DIALOG_STYLE_TABLIST_HEADERS, !""scm_dialog"Донат услуги", global_string, !"Выбрать", !"Закрыть");
	return 1;
}

stock get_player_donate(playerid)
{
	new donate_count_money = 0,
		query_string[78];
	format(query_string, sizeof(query_string),"SELECT `u_donate` FROM users WHERE u_id = '%d'", PlayerInfo[playerid][id]);
	new Cache:result = mysql_query(sql_connection, query_string);
	donate_count_money = cache_get_field_content_int(0, "u_donate", sql_connection);
	cache_delete(result);
	return donate_count_money;
}



cmd:abonus(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 7) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /abonus [коэф]");
	server_bonus = params[0];
	new rcon_string[112];
	if(server_bonus > 1)
	{
		format(rcon_string, 73, "hostname Elive Role Play | Акция х%d", server_bonus);
		SendRconCommand(rcon_string);
	}
	else SendRconCommand("hostname Elive Role Play");
	format(rcon_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '9' LIMIT 1", server_bonus);
	mysql_tquery(sql_connection, rcon_string);
	return 1;
}

cmd:servername(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	if(sscanf(params, "s[128]", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /servername [название]");
	new rcon_string[248];
	format(rcon_string, 48, "hostname %s", params[0]);
	SendRconCommand(rcon_string);
	return 1;
}




cmd:sopen(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 8) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_white, !""scm_error"Используйте /sopen [0 -закрыть; 1 -открыть]");
	if(params[0] < 0 || params[0] > 1) return SendClientMessage(playerid, col_white, !""scm_error"Используйте /sopen [0 -закрыть; 1 -открыть]");
	switch(params[0])
	{
	    case 1:
	    {
	        new rcon_string[112];
			format(rcon_string, 112, "UPDATE `server_variables` SET `var_count` = '0' WHERE `var_id` = '10' LIMIT 1", server_bonus);
			mysql_tquery(sql_connection, rcon_string);
			SendRconCommand("password 0");
		}
		case 0: SendRconCommand("password tester321");
	}
	return 1;
}

cmd:ccport(playerid)
{
	if(PlayerInfo[playerid][admin] < 6) return 1;

	new Float:_distance = 3000.0,
				container_cell;

	for(new i = 0; i < MAX_CONTAINERS; i ++)
	{
		new Float:__distance = GetPlayerDistanceFromPoint(playerid, porter_pos_take[i][0], porter_pos_take[i][1], porter_pos_take[i][2]);
		if(_distance > __distance)_distance = __distance, container_cell = i;
	}
	if(_distance < 7)
	{
		for(new j = 0; j < 2; j ++)
		{
			if(container_info[container_cell][con_status][j] != 0)
			{
				if(container_info[container_cell][con_status][1] == 1)
				{
					DestroyDynamicObject(container_info[container_cell][con_object][1]);
					container_info[container_cell][con_object][1] = 0;
					container_info[container_cell][con_status][1] = 0;
					closed_containers --;
				}
				if(container_info[container_cell][con_object][0] != 0)DestroyDynamicObject(container_info[container_cell][con_object][0]);
				container_info[container_cell][con_status][0] = 0;
				closed_containers --;

				SendClientMessage(playerid, -1, "Слот порта очищен.");
				break;
			}
		}
	}
	return 1;
}

cmd:wlock(playerid)
{
	if(!gang_player(playerid) && ! mafia_player(playerid)) return 1;
	if(PlayerInfo[playerid][rank] < f_info[PlayerInfo[playerid][member] -1][f_rank_settings][1]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вам недоступна данная возможность.");

	new sql_string[92];
	if(f_info[PlayerInfo[playerid][member] -1][f_dorm_status])
	{
		f_info[PlayerInfo[playerid][member] -1][f_dorm_status] = 0;
		format(sql_string, sizeof(sql_string), "UPDATE `fractions` SET `f_dorm_status` = '%d' WHERE `f_id` = '%d' LIMIT 1",
		f_info[PlayerInfo[playerid][member] -1][f_dorm_status],
		PlayerInfo[playerid][member]);
		mysql_tquery(sql_connection, sql_string);
		GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~ DORM UNLOCKED", 3000, 3);
		SendClientMessage(playerid, col_white, ""c_green"* "c_white"Склад успешно "c_green"открыт"c_white".");

		format(sql_string, sizeof sql_string, "* %s %s[%d] "c_green"открыл "c_grey"склад.", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], playerid);
		foreach(new i: logged_players) if(PlayerInfo[i][member] == PlayerInfo[playerid][member]) SendClientMessage(i, col_gray, sql_string);
	}
	else
	{
		f_info[PlayerInfo[playerid][member] -1][f_dorm_status] = 1;
		format(sql_string, sizeof(sql_string), "UPDATE `fractions` SET `f_dorm_status` = '%d' WHERE `f_id` = '%d' LIMIT 1",
		f_info[PlayerInfo[playerid][member] -1][f_dorm_status],
		PlayerInfo[playerid][member]);
		mysql_tquery(sql_connection, sql_string);
		GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~ DORM LOCKED", 3000, 3);
		SendClientMessage(playerid, col_white, ""c_green"* "c_white"Склад успешно "c_green"закрыт"c_white".");

		format(sql_string, sizeof sql_string, "* %s %s[%d] "c_orange_red"закрыл "c_grey"склад.", f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], playerid);
		foreach(new i: logged_players) if(PlayerInfo[i][member] == PlayerInfo[playerid][member]) SendClientMessage(i, col_gray, sql_string);

	}

	return 1;
}

cmd:mp(playerid)
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	show_dialog(playerid, d_mp, DIALOG_STYLE_LIST, !""scm_dialog"Меню мероприятия", !"Раздать оружие (В радиусе 100 м.)\nРаздать жизни (В радиусе 100 м.)\nОбезаружить всех (В радиусе 100 м.)\nРаздать броню (В радиусе 100 м.)", !"Выбрать", !"Отмена");
	return 1;
}

cmd:startmp(playerid,params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
    new
           Float:mp_pos_x,
           Float:mp_pos_y,
           Float:mp_pos_z;

	new quantity_player, name_mp[32];
	if(sscanf(params, "ds[32]", quantity_player, name_mp)) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Используйте: /startmp [Кол-во игроков] [Название мероприятия]");

    if(GetSVarInt("AidPlayers"))
       return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Идет сбор игроков на мероприятие.");
    if(quantity_player > 100)
       return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Максимальное число игроков на мероприятии: 100.");
    if(!(1 <= strlen(params) <= 32))
       return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Слишком длинное название мероприятия.");
    SetSVarInt("AidPlayers",quantity_player);
    GetPlayerPos(playerid, mp_pos_x, mp_pos_y, mp_pos_z);
    SetSVarFloat("mp_pos_x",mp_pos_x);
    SetSVarFloat("mp_pos_y",mp_pos_y);
    SetSVarFloat("mp_pos_z",mp_pos_z);
	SetSVarInt("mp_int",GetPlayerInterior(playerid));
	SetSVarInt("mp_virt",GetPlayerVirtualWorld(playerid));

    new string[128];
    format(string,sizeof(string),""c_yellow"* S.INFO: Администратор %s запустил сбор игроков на мероприятие '%s'. Максимум: %d чел", PlayerInfo[playerid][name], name_mp,quantity_player);
    SendClientMessageToAll(col_gray,string);

    return SendClientMessageToAll(col_gray, ""c_yellow"* S.INFO: Введите /gomp для телепорта на мероприятие");
}

cmd:stopmp(playerid)
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
    if(!GetSVarInt("AidPlayers")) return SendClientMessage(playerid, col_white, !""scm_error"Сбор игроков не запущен");
    
    DeleteSVar("AidPlayers");
    DeleteSVar("mp_pos_x"); DeleteSVar("mp_pos_y"); DeleteSVar("mp_pos_z");
	DeleteSVar("mp_int");  DeleteSVar("mp_virt");
	
    return SendClientMessageToAll(col_white, !""c_yellow"* S.INFO: Сбор игроков на мероприятие остановлен администратором");
}


cmd:gomp(playerid)
{
	if(!GetSVarInt("AidPlayers")) return SendClientMessage(playerid, col_white, !""scm_error"Сбор игроков не запущен");
       
    if(PlayerInfo[playerid][jailed] > 0) return SendClientMessage(playerid, col_white, !""scm_error"Нельзя учавствовать в мероприятии находясь в заключении.");
	if(GetSVarInt("AidPlayers") < 2)
    {
        SendClientMessage(playerid, col_white, !""c_yellow"* S.INFO: Сбор игроков на мероприятие окончен.");
        DeleteSVar("mp_pos_x");  DeleteSVar("mp_pos_y"); DeleteSVar("mp_pos_z");
		DeleteSVar("AidPlayers");
		DeleteSVar("mp_int");  DeleteSVar("mp_virt");
		return 1;
    }
    SetSVarInt("AidPlayers",GetSVarInt("AidPlayers")-1);

    set_pos(playerid, GetSVarFloat("mp_pos_x") + random(5), GetSVarFloat("mp_pos_y") + random(5), GetSVarFloat("mp_pos_z"), 0.0, GetSVarInt("mp_int"), GetSVarInt("mp_virt"));

    return SendClientMessage(playerid, col_white, !""c_yellow"* S.INFO: Вы были телепортированы на мероприятие, ожидайте команд администрации.");
}

cmd:dmgstat(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 0) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /dmgstat [ид]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");

	global_string[0] = EOS;
	format(global_string, 140, ""c_white"player_gm: %d\ntick differ: %d\nkilled: %d",
	player_gm[params[0]], GetTickCount() -p_t_info[params[0]][p_update], player_killed[params[0]]);
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Статистика урона", global_string, "Закрыть", "");

	return 1;
}

cmd:eject(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы должны находиться в транспорте.");
	else if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы должны находиться за рулём.");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /eject [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");

	if(playerid == params[0]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Ты не можешь выкинуть себя.");
	if(!IsPlayerInVehicle(params[0],player_vehicle[playerid])) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Игрок должен находиться в вашем транспорте.");
	new string[100];
	format(string, sizeof(string), ""c_green"* "c_white"Вы выкинули из транспорта "c_green"%s", PlayerInfo[params[0]][name]);
	SendClientMessage(playerid, col_white, string);
	format(string, sizeof(string), ""c_green"* %s"c_white" выкинул(-a) Вас из транспорта", PlayerInfo[playerid][name]);
	SendClientMessage(params[0], col_white, string);
	format(string, sizeof(string), "выкинул(-а) из транспорта %s", PlayerInfo[params[0]][name]);
	me_action(playerid, string);
	RemovePlayerFromVehicle(params[0]);
	return 1;
}


cmd:usecanister(playerid, params[])
{
	if(GetPVarInt(playerid, "PlayerCuffed"))
	{
		SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Нельзя использовать канистру в наручниках.");
		return 1;
	}
	if(!PlayerInfo[playerid][canister]) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"У вас нет канистры с бензином.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"Вы должны быть за рулём транспортного средства.");
	if(GetVehicleSpeed(player_vehicle[playerid]) > 5) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"Нельзя использовать канистру с бензином на ходу.");

	new vehicle_id = GetPlayerVehicleID(playerid)-1;

	if(veh_info[vehicle_id][v_fuel] > 99) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"Ваш бак полон.");
	veh_info[vehicle_id][v_fuel] += 15;
	if(veh_info[vehicle_id][v_fuel] > 100)veh_info[vehicle_id][v_fuel] = 100;
    SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно заправили свой транспорт.");

	me_action(playerid, "заправил(-а) свою машину.");
	PlayerInfo[playerid][canister] -= 1;
	update_int_sql(playerid, "u_canister", PlayerInfo[playerid][canister]);
	return 1;
}


CMD:roulette(playerid)
{
	if(PlayerInfo[playerid][level] < 2) return SendClientMessage(playerid, col_white, !""scm_error"Доступно с 2 уровня.");
	
	dr_ptd[playerid][0] = CreatePlayerTextDraw(playerid, 207.2001, 196.4257, ""); // 1 Prize
	PlayerTextDrawTextSize(playerid, dr_ptd[playerid][0], 30.0000, 34.0000);
	PlayerTextDrawAlignment(playerid, dr_ptd[playerid][0], 1);
	PlayerTextDrawColor(playerid, dr_ptd[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][0], 505290495);
	PlayerTextDrawFont(playerid, dr_ptd[playerid][0], 5);
	PlayerTextDrawSetProportional(playerid, dr_ptd[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid, dr_ptd[playerid][0], 0);
	PlayerTextDrawSetPreviewModel(playerid, dr_ptd[playerid][0], 0);
	PlayerTextDrawSetPreviewRot(playerid, dr_ptd[playerid][0], 0.0000, 0.0000, 0.0000, 1.0000);
	
	dr_ptd[playerid][1] = CreatePlayerTextDraw(playerid, 245.6622, 192.6923, ""); // 2 Prize
	PlayerTextDrawTextSize(playerid, dr_ptd[playerid][1], 36.0000, 44.0000);
	PlayerTextDrawAlignment(playerid, dr_ptd[playerid][1], 1);
	PlayerTextDrawColor(playerid, dr_ptd[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][1], 505290495);
	PlayerTextDrawFont(playerid, dr_ptd[playerid][1], 5);
	PlayerTextDrawSetProportional(playerid, dr_ptd[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, dr_ptd[playerid][1], 0);
	PlayerTextDrawSetPreviewModel(playerid, dr_ptd[playerid][1], 0);
	PlayerTextDrawSetPreviewRot(playerid, dr_ptd[playerid][1], 0.0000, 0.0000, 0.0000, 1.0000);
	
	dr_ptd[playerid][2] = CreatePlayerTextDraw(playerid, 291.3333, 188.5997, ""); // 3 Prize
	PlayerTextDrawTextSize(playerid, dr_ptd[playerid][2], 45.0000, 52.0000);
	PlayerTextDrawAlignment(playerid, dr_ptd[playerid][2], 1);
	PlayerTextDrawColor(playerid, dr_ptd[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][2], 505290495);
	PlayerTextDrawFont(playerid, dr_ptd[playerid][2], 5);
	PlayerTextDrawSetProportional(playerid, dr_ptd[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, dr_ptd[playerid][2], 0);
	PlayerTextDrawSetPreviewModel(playerid, dr_ptd[playerid][2], 0);
	PlayerTextDrawSetPreviewRot(playerid, dr_ptd[playerid][2], 0.0000, 0.0000, 0.0000, 1.0000);

	dr_ptd[playerid][3] = CreatePlayerTextDraw(playerid, 344.8666, 192.6923, ""); // 4 Prize
	PlayerTextDrawTextSize(playerid, dr_ptd[playerid][3], 36.0000, 44.0000);
	PlayerTextDrawAlignment(playerid, dr_ptd[playerid][3], 1);
	PlayerTextDrawColor(playerid, dr_ptd[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][3], 505290495);
	PlayerTextDrawFont(playerid, dr_ptd[playerid][3], 5);
	PlayerTextDrawSetProportional(playerid, dr_ptd[playerid][3], 0);
	PlayerTextDrawSetShadow(playerid, dr_ptd[playerid][3], 0);
	PlayerTextDrawSetPreviewModel(playerid, dr_ptd[playerid][3], 0);
	PlayerTextDrawSetPreviewRot(playerid, dr_ptd[playerid][3], 0.0000, 0.0000, 0.0000, 1.0000);

	dr_ptd[playerid][4] = CreatePlayerTextDraw(playerid, 389.3113, 196.4257, ""); // 5 Prize
	PlayerTextDrawTextSize(playerid, dr_ptd[playerid][4], 30.0000, 34.0000);
	PlayerTextDrawAlignment(playerid, dr_ptd[playerid][4], 1);
	PlayerTextDrawColor(playerid, dr_ptd[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][4], 505290495);
	PlayerTextDrawFont(playerid, dr_ptd[playerid][4], 5);
	PlayerTextDrawSetProportional(playerid, dr_ptd[playerid][4], 0);
	PlayerTextDrawSetShadow(playerid, dr_ptd[playerid][4], 0);
	PlayerTextDrawSetPreviewModel(playerid, dr_ptd[playerid][4], 0);
	PlayerTextDrawSetPreviewRot(playerid, dr_ptd[playerid][4], 0.0000, 0.0000, 0.0000, 1.0000);

	for(new j = 0; j < 5; j ++)
	{
		new donate_count = random(55000),
			random_item;

		if(donate_count >= 0 && donate_count <= 5000)random_item = prise_skills;
		else if(donate_count >= 5001 && donate_count <= 10000)random_item = prise_skills;
		else if(donate_count >= 10001 && donate_count <= 17000)random_item = prise_licenses;
		else if(donate_count >= 17001 && donate_count <= 25000)random_item = prise_drugs;

		else if(donate_count >= 25001 && donate_count <= 34000)random_item = prise_guns;

		else if(donate_count >= 34001 && donate_count <= 35000)random_item = prise_skin;
		else if(donate_count >= 35001 && donate_count <= 40000)random_item = prise_money;
		else if(donate_count >= 40001 && donate_count <= 41000)random_item = prise_donate;

		else if(donate_count >= 41001 && donate_count <= 48000)random_item = prise_sitety;
		else if(donate_count >= 48001 && donate_count <= 52000)random_item = prise_car;
		else if(donate_count >= 52001 && donate_count <= 55000)random_item = prise_yacht;

		dr_slot_item[playerid][j] = random_item;
		if(random_item == prise_car)
		{
			new _slot = random(8),
				_vehicle_cell = random(6);


			switch(_slot)
			{
				case 0:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j], -2139062017);
				case 1:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j], 8388863);
				case 2:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j], 41215);
				case 3:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j], -2139062017);
				case 4:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j], 8388863);
				case 5:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j], 41215);
				case 6:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j], -2147450625);
				case 7:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j], -2147483393);

			}



			PlayerTextDrawSetPreviewModel(playerid, dr_ptd[playerid][j], dr_veh_models[_slot][_vehicle_cell]);
			PlayerTextDrawSetPreviewRot(playerid, dr_ptd[playerid][j], dr_info[random_item -1][dr_rot_x],
																			 dr_info[random_item -1][dr_rot_y],
																			 dr_info[random_item -1][dr_rot_xr],
																			 dr_info[random_item -1][dr_rot_yr]);
			PlayerTextDrawSetPreviewVehCol(playerid, dr_ptd[playerid][j], 1, 1);
			dr_slot_model[playerid][j] = _slot;

			dr_veh_slot[playerid][j] = _vehicle_cell;
			continue;
		}

		PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j], dr_background_color[dr_info[random_item -1][dr_type] -1]);
		PlayerTextDrawSetPreviewModel(playerid, dr_ptd[playerid][j], dr_info[random_item -1][dr_model]);
		PlayerTextDrawSetPreviewRot(playerid, dr_ptd[playerid][j], dr_info[random_item -1][dr_rot_x],
																		 dr_info[random_item -1][dr_rot_y],
																		 dr_info[random_item -1][dr_rot_xr],
																		 dr_info[random_item -1][dr_rot_yr]);
		if(dr_slot_item[playerid][j] == prise_skin)
		{
			new _skin_slot = random(7);
			dr_slot_model[playerid][j] = donate_skinlist[_skin_slot];
			PlayerTextDrawSetPreviewModel(playerid, dr_ptd[playerid][j], donate_skinlist[_skin_slot]);
		}
	}


	new ptd_str[32];
	format(ptd_str, 32, "GAME_ROULETT_POINTS:_%d", PlayerInfo[playerid][donate_roulette]);
	dr_ptd[playerid][5] = CreatePlayerTextDraw(playerid, 314.6665, 248.2740, ptd_str); // пусто
	PlayerTextDrawLetterSize(playerid, dr_ptd[playerid][5], 0.1527, 0.7494);
	PlayerTextDrawAlignment(playerid, dr_ptd[playerid][5], 2);
	PlayerTextDrawColor(playerid, dr_ptd[playerid][5], -101058049);
	PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][5], 255);
	PlayerTextDrawFont(playerid, dr_ptd[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, dr_ptd[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, dr_ptd[playerid][5], 0);

	for(new j = 0; j < 6; j ++)
	{
		PlayerTextDrawShow(playerid, dr_ptd[playerid][j]);
	}
	for(new j = 0; j < 49; j ++)
	{
		TextDrawShowForPlayer(playerid, dr_td[j]);
	}
	SelectTextDraw(playerid, 0xB0C4DEFF);
	return 1;
}


callback: rd_refresh(playerid)
{
	dr_step[playerid] --;
	if(dr_step[playerid] == 1)
	{
		KillTimer(dr_timer[playerid]);
		dr_timer[playerid] = -1;
		show_dr_result(playerid);
		return 1;
	}
	for(new j = 1; j < 5; j ++)
	{
		if(dr_slot_item[playerid][j] == prise_car)
		{
			new _slot = dr_slot_model[playerid][j],
				_vehicle_cell = dr_veh_slot[playerid][j];


			switch(_slot)
			{
				case 0:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j -1], -2139062017);
				case 1:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j -1], 8388863);
				case 2:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j -1], 41215);
				case 3:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j -1], -2139062017);
				case 4:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j -1], 8388863);
				case 5:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j -1], 41215);
				case 6:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j -1], -2147450625);
				case 7:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j -1], -2147483393);

			}



			PlayerTextDrawSetPreviewModel(playerid, dr_ptd[playerid][j -1], dr_veh_models[_slot][_vehicle_cell]);
			PlayerTextDrawSetPreviewRot(playerid, dr_ptd[playerid][j -1], dr_info[dr_slot_item[playerid][j] -1][dr_rot_x],
																				 dr_info[dr_slot_item[playerid][j] -1][dr_rot_y],
																				 dr_info[dr_slot_item[playerid][j] -1][dr_rot_xr],
																				 dr_info[dr_slot_item[playerid][j] -1][dr_rot_yr]);
			PlayerTextDrawSetPreviewVehCol(playerid, dr_ptd[playerid][j -1], 1, 1);

			dr_veh_slot[playerid][j -1] = dr_veh_slot[playerid][j];
			dr_slot_item[playerid][j -1] = dr_slot_item[playerid][j];
			dr_slot_model[playerid][j -1] = dr_slot_model[playerid][j];
			continue;
		}
		else
		{
			dr_veh_slot[playerid][j -1] = dr_veh_slot[playerid][j];
			dr_slot_item[playerid][j -1] = dr_slot_item[playerid][j];
			dr_slot_model[playerid][j -1] = dr_slot_model[playerid][j];
			PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][j -1], dr_background_color[dr_info[dr_slot_item[playerid][j] -1][dr_type] -1]);
			PlayerTextDrawSetPreviewModel(playerid, dr_ptd[playerid][j -1], dr_info[dr_slot_item[playerid][j] -1][dr_model]);
			PlayerTextDrawSetPreviewRot(playerid, dr_ptd[playerid][j -1], dr_info[dr_slot_item[playerid][j] -1][dr_rot_x],
																				 dr_info[dr_slot_item[playerid][j] -1][dr_rot_y],
																				 dr_info[dr_slot_item[playerid][j] -1][dr_rot_xr],
																				 dr_info[dr_slot_item[playerid][j] -1][dr_rot_yr]);
		}
		if(dr_slot_item[playerid][j] == prise_skin)
		{
			PlayerTextDrawSetPreviewModel(playerid, dr_ptd[playerid][j -1], dr_slot_model[playerid][j]);
		}


	}
	new random_item;

	if(dr_step[playerid] > 5)
	{
		new donate_count = random(59000);
		if(donate_count >= 0 && donate_count <= 5000)random_item = prise_skills;
		else if(donate_count >= 5001 && donate_count <= 10000)random_item = prise_skills;
		else if(donate_count >= 10001 && donate_count <= 17000)random_item = prise_licenses;
		else if(donate_count >= 17001 && donate_count <= 25000)random_item = prise_drugs;

		else if(donate_count >= 25001 && donate_count <= 34000)random_item = prise_guns;

		else if(donate_count >= 34001 && donate_count <= 35000)random_item = prise_skin;
		else if(donate_count >= 35001 && donate_count <= 40000)random_item = prise_money;
		else if(donate_count >= 40001 && donate_count <= 41000)random_item = prise_donate;

		else if(donate_count >= 41001 && donate_count <= 48000)random_item = prise_sitety;
		else if(donate_count >= 48001 && donate_count <= 55000)random_item = prise_car;
		else if(donate_count >= 55001 && donate_count <= 59000)random_item = prise_yacht;

	}
	else
	{
		new donate_count = random(49500);
		if(donate_count >= 0 && donate_count <= 5000)random_item = prise_skills;
		else if(donate_count >= 5001 && donate_count <= 10000)random_item = prise_skills;
		else if(donate_count >= 10001 && donate_count <= 17000)random_item = prise_licenses;
		else if(donate_count >= 17001 && donate_count <= 25000)random_item = prise_drugs;

		else if(donate_count >= 25001 && donate_count <= 34000)random_item = prise_guns;

		else if(donate_count >= 34001 && donate_count <= 35000)random_item = prise_skin;
		else if(donate_count >= 35001 && donate_count <= 40000)random_item = prise_money;
		else if(donate_count >= 40001 && donate_count <= 41000)random_item = prise_donate;

		else if(donate_count >= 41001 && donate_count <= 48000)random_item = prise_sitety;
		else if(donate_count >= 48001 && donate_count <= 55000)random_item = prise_car;
		else if(donate_count >= 55001 && donate_count <= 59000)random_item = prise_yacht;

	}
	dr_slot_item[playerid][4] = random_item;
	if(random_item == prise_car)
	{
		new _slot = random(8),
			_vehicle_cell = random(6);


		switch(_slot)
		{
			case 0:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][4], -2139062017);
			case 1:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][4], 8388863);
			case 2:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][4], 41215);
			case 3:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][4], -2139062017);
			case 4:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][4], 8388863);
			case 5:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][4], 41215);
			case 6:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][4], -2147450625);
			case 7:PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][4], -2147483393);

		}



		PlayerTextDrawSetPreviewModel(playerid, dr_ptd[playerid][4], dr_veh_models[_slot][_vehicle_cell]);
		PlayerTextDrawSetPreviewRot(playerid, dr_ptd[playerid][4], dr_info[random_item -1][dr_rot_x],
																		 dr_info[random_item -1][dr_rot_y],
																		 dr_info[random_item -1][dr_rot_xr],
																		 dr_info[random_item -1][dr_rot_yr]);
		PlayerTextDrawSetPreviewVehCol(playerid, dr_ptd[playerid][4], 1, 1);
		dr_slot_model[playerid][4] = _slot;

		dr_veh_slot[playerid][4] = _vehicle_cell;
	}
	else
	{
		PlayerTextDrawBackgroundColor(playerid, dr_ptd[playerid][4], dr_background_color[dr_info[random_item -1][dr_type] -1]);
		PlayerTextDrawSetPreviewModel(playerid, dr_ptd[playerid][4], dr_info[random_item -1][dr_model]);
		PlayerTextDrawSetPreviewRot(playerid, dr_ptd[playerid][4], dr_info[random_item -1][dr_rot_x],
																		 dr_info[random_item -1][dr_rot_y],
																		 dr_info[random_item -1][dr_rot_xr],
																		 dr_info[random_item -1][dr_rot_yr]);
	}


	if(dr_slot_item[playerid][4] == prise_skin)
	{
		new _skin_slot = random(7);
		dr_slot_model[playerid][4] = donate_skinlist[_skin_slot];
		PlayerTextDrawSetPreviewModel(playerid, dr_ptd[playerid][4], donate_skinlist[_skin_slot]);
	}

	for(new j = 0; j < 5; j ++)
	{
		PlayerTextDrawHide(playerid, dr_ptd[playerid][j]);
		PlayerTextDrawShow(playerid, dr_ptd[playerid][j]);
	}
	return 1;
}


stock show_dr_result(playerid)
{
	switch(dr_slot_item[playerid][2])
	{
		case prise_skills:
		{
			for(new j = 0; j < 7; j ++)
			{
				PlayerInfo[playerid][gun_skills][j] = 100;
			}
			new _query[128];

			format(_query, sizeof(_query), "UPDATE `users` SET `u_skills`='%d|%d|%d|%d|%d|%d|%d' WHERE `u_id` = '%d'",
			PlayerInfo[playerid][gun_skills][0], PlayerInfo[playerid][gun_skills][1], PlayerInfo[playerid][gun_skills][2],
			PlayerInfo[playerid][gun_skills][3], PlayerInfo[playerid][gun_skills][4], PlayerInfo[playerid][gun_skills][5],
			PlayerInfo[playerid][gun_skills][6], PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, _query);
			SetPlayerSkills(playerid);
			show_dialog(playerid, d_rd_end, DIALOG_STYLE_MSGBOX, ""scm_dialog"Выигрыш", ""c_server"Поздравляем!\n\n\
			"c_white"Игра в рулетку завершена, Ваш выигрыш:\n\
			"c_server"-"c_white" Набор навыков оружия.", "Закрыть", "");

		}
		case prise_licenses:
		{
			PlayerInfo[playerid][drive_lic] = 1;
			PlayerInfo[playerid][gun_lic] = 1;
			PlayerInfo[playerid][boat_lic] = 1;
			PlayerInfo[playerid][fly_lic] = 1;


			new query_string[232];
			format(query_string, sizeof(query_string),"UPDATE `users` SET `u_drive_lic` = '1',`u_gun_lic` = '1',`u_boat_lic` = '1',`u_fly_lic` = '1' WHERE `u_id` = '%d' LIMIT 1",
			PlayerInfo[playerid][id]);
			mysql_query(sql_connection, query_string);

			show_dialog(playerid, d_rd_end, DIALOG_STYLE_MSGBOX, ""scm_dialog"Выигрыш", ""c_server"Поздравляем!\n\n\
			"c_white"Игра в рулетку завершена, Ваш выигрыш:\n\
			"c_server"-"c_white" Набор лицензий.", "Закрыть", "");

		}
		case prise_aidkits:
		{
			new aidkit_count = RandomEx(5, 15);
			PlayerInfo[playerid][aidkit] += aidkit_count;
			update_int_sql(playerid, "u_aidkit", PlayerInfo[playerid][aidkit]);

			new query_string[168];
			format(query_string, sizeof(query_string),""c_server"Поздравляем!\n\n\
			"c_white"Игра в рулетку завершена, Ваш выигрыш:\n\
			"c_server"-"c_white" %d универсальных аптечек.", aidkit_count);

			show_dialog(playerid, d_rd_end, DIALOG_STYLE_MSGBOX, ""scm_dialog"Выигрыш", query_string, "Закрыть", "");

		}
		case prise_drugs:
		{
			new drugs_count = RandomEx(100, 500);
			PlayerInfo[playerid][drugs] += drugs_count;
			update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);

			new query_string[168];
			format(query_string, sizeof(query_string),""c_server"Поздравляем!\n\n\
			"c_white"Игра в рулетку завершена, Ваш выигрыш:\n\
			"c_server"-"c_white" %d гр. наркотиков.", drugs_count);

			show_dialog(playerid, d_rd_end, DIALOG_STYLE_MSGBOX, ""scm_dialog"Выигрыш", query_string, "Закрыть", "");

		}
		case prise_guns:
		{
			new drugs_count = RandomEx(500, 1000);
			PlayerInfo[playerid][crim_ammo] += drugs_count;
			PlayerInfo[playerid][crim_guns] += drugs_count;


			update_int_sql(playerid, "u_guns", PlayerInfo[playerid][crim_guns]);
			update_int_sql(playerid, "u_ammo", PlayerInfo[playerid][crim_ammo]);

			new query_string[168];
			format(query_string, sizeof(query_string),""c_server"Поздравляем!\n\n\
			"c_white"Игра в рулетку завершена, Ваш выигрыш:\n\
			"c_server"-"c_white" %d ед.оружия и патронов.", drugs_count);

			show_dialog(playerid, d_rd_end, DIALOG_STYLE_MSGBOX, ""scm_dialog"Выигрыш", query_string, "Закрыть", "");

		}
		case prise_skin:
		{

			new line_string[36];
			global_string[0] = EOS;
			strcat(global_string, ""c_white"Выберите слот одежды\n");
			for(new j = 0; j < 5; j ++)
			{
				if(PlayerInfo[playerid][temp_skin][j] == 0)
				{
					strcat(global_string, "{"#cGR"}-Пусто\n");
				}
				else
				{
					format(line_string, 36, ""c_white"Одежда | %d\n", PlayerInfo[playerid][temp_skin][j]);
					strcat(global_string, line_string);
				}
			}
			show_dialog(playerid, d_dr_skin, DIALOG_STYLE_LIST, ""scm_dialog"Гардероб", global_string, "Выбрать", "Назад");
		}
		case prise_money:
		{
			new money_count = RandomEx(1000, 100000);
			give_money(playerid, money_count);
			insert_money_log(playerid, INVALID_PLAYER_ID, money_count, "донат рулетка");


			new dialog_string[168];
			format(dialog_string, sizeof(dialog_string),""c_server"Поздравляем!\n\n\
			"c_white"Игра в рулетку завершена, Ваш выигрыш:\n\
			"c_server"-"c_white" %d$.", money_count);

			show_dialog(playerid, d_rd_end, DIALOG_STYLE_MSGBOX, ""scm_dialog"Выигрыш", dialog_string, "Закрыть", "");

		}
		case prise_donate:
		{
			new money_count = RandomEx(1, 500);

			new query_string[148];
			format(query_string, sizeof(query_string),"UPDATE `users` SET `u_donate` = `u_donate`+'%d' WHERE `u_id` = '%d' LIMIT 1",
			money_count, PlayerInfo[playerid][id]);
			mysql_query(sql_connection, query_string);


			format(query_string, sizeof(query_string),""c_server"Поздравляем!\n\n\
			"c_white"Игра в рулетку завершена, Ваш выигрыш:\n\
			"c_server"-"c_white" %d донат поинт(-ов).", money_count);

			show_dialog(playerid, d_rd_end, DIALOG_STYLE_MSGBOX, ""scm_dialog"Выигрыш", query_string, "Закрыть", "");
		}
		case prise_sitety:
		{

			PlayerInfo[playerid][hunger_immune] = 1;
			PlayerInfo[playerid][hunger] = 100;

			new query_string[128];
			format(query_string, sizeof(query_string),"UPDATE `users` SET `u_hungerimmune` = '1' WHERE `u_id` = '%d' LIMIT 1",
			PlayerInfo[playerid][id]);
			mysql_query(sql_connection, query_string);

			show_dialog(playerid, d_rd_end, DIALOG_STYLE_MSGBOX, ""c_server"Выигрыш", ""c_server"Поздравляем!\n\n\
			"c_white"Игра в рулетку завершена, Ваш выигрыш:\n\
			"c_server"-"c_white" Пополнение сытость и бесконечная сытость.", "Закрыть", "");

		}
		case prise_car:
		{
			show_dialog(playerid, d_rd_end, DIALOG_STYLE_MSGBOX, ""scm_dialog"Выигрыш", ""c_server"Поздравляем!\n\n\
			"c_white"Игра в рулетку завершена, Ваш выигрыш:\n\
			"c_server"-"c_white" Автомобиль, который был доставлен к автосалону Лос-Сантос.", "Закрыть", "");

			new ts_id, ts_spawn_slot = random(5);



			new	veh_id = CreateVehicle(dr_veh_models[dr_slot_model[playerid][3]][dr_veh_slot[playerid][3]], t_shop_respawn[ts_id][ts_spawn_slot][0],
												t_shop_respawn[ts_id][ts_spawn_slot][1],
												t_shop_respawn[ts_id][ts_spawn_slot][2],
												t_shop_respawn[ts_id][ts_spawn_slot][3],
												1, 1, -1);


			veh_info[veh_id -1][v_model] = GetVehicleModel(veh_id);

			new query_string[226];
			mysql_format(sql_connection, query_string, sizeof query_string, "INSERT INTO `users_vehicles`(`v_model`,`v_owner`,`v_color_1`,`v_color_2`,`v_pos_x`,`v_pos_y`,`v_pos_z`,`v_pos_a`,`v_buydate`) VALUES ('%d','%i','1','1','%f','%f','%f','%f',NOW())",
			dr_veh_models[dr_slot_model[playerid][3]][dr_veh_slot[playerid][3]],
			PlayerInfo[playerid][id],
			t_shop_respawn[ts_id][ts_spawn_slot][0],
			t_shop_respawn[ts_id][ts_spawn_slot][1],
			t_shop_respawn[ts_id][ts_spawn_slot][2],
			t_shop_respawn[ts_id][ts_spawn_slot][3]);


			mysql_tquery(sql_connection, query_string, "create_vehicle_callback", "dd", veh_id, playerid);

			veh_info[veh_id -1][v_type] = vehicle_type_player;
			veh_info[veh_id -1][v_vehicle] = veh_id;
			format(veh_info[veh_id -1][v_plate], 12, "Transit");
			veh_info[veh_id -1][v_pos][0] = t_shop_respawn[ts_id][ts_spawn_slot][0];
			veh_info[veh_id -1][v_pos][1] = t_shop_respawn[ts_id][ts_spawn_slot][1];
			veh_info[veh_id -1][v_pos][2] = t_shop_respawn[ts_id][ts_spawn_slot][2];
			veh_info[veh_id -1][v_pos][3] = t_shop_respawn[ts_id][ts_spawn_slot][3];
			veh_info[veh_id -1][v_fuel] = 100.0;
			veh_info[veh_id -1][v_millage] = 0.0;
			veh_info[veh_id -1][v_fine] = 3;


			new engine, lights, alarm, doors, bonnet, boot, objective;
			veh_info[veh_id -1][v_locked] = true;
			GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(veh_id, engine, lights, alarm, true, bonnet, boot, objective);


			veh_info[veh_id -1][v_owner] = PlayerInfo[playerid][id];

			SetVehicleNumberPlate(veh_info[veh_id -1][v_vehicle], veh_info[veh_id -1][v_plate]);
			Iter_Add(player_vehicles[playerid], veh_info[veh_id -1][v_vehicle]);

		}
		case prise_yacht:
		{
			show_dialog(playerid, d_rd_end, DIALOG_STYLE_MSGBOX, ""scm_dialog"Выигрыш", ""c_server"Поздравляем!\n\n\
			"c_white"Игра в рулетку завершена, Ваш выигрыш:\n\
			"c_server"-"c_white" Яхта, которая была доставлена в пирс Лос-Сантос.", "Закрыть", "");

			new ts_id = 3,
				ts_spawn_slot = random(5);

			new	veh_id = CreateVehicle(454, t_shop_respawn[ts_id][ts_spawn_slot][0],
												t_shop_respawn[ts_id][ts_spawn_slot][1],
												t_shop_respawn[ts_id][ts_spawn_slot][2],
												t_shop_respawn[ts_id][ts_spawn_slot][3],
												1, 1, -1);


			veh_info[veh_id -1][v_model] = GetVehicleModel(veh_id);

			new query_string[226];
			mysql_format(sql_connection, query_string, sizeof query_string, "INSERT INTO `users_vehicles`(`v_model`,`v_owner`,`v_color_1`,`v_color_2`,`v_pos_x`,`v_pos_y`,`v_pos_z`,`v_pos_a`,`v_buydate`) VALUES ('454','%i','1','1','%f','%f','%f','%f',NOW())",
			PlayerInfo[playerid][id],
			t_shop_respawn[ts_id][ts_spawn_slot][0],
			t_shop_respawn[ts_id][ts_spawn_slot][1],
			t_shop_respawn[ts_id][ts_spawn_slot][2],
			t_shop_respawn[ts_id][ts_spawn_slot][3]);


			mysql_tquery(sql_connection, query_string, "create_vehicle_callback", "dd", veh_id, playerid);

			veh_info[veh_id -1][v_type] = vehicle_type_player;
			veh_info[veh_id -1][v_vehicle] = veh_id;
			format(veh_info[veh_id -1][v_plate], 12, "Transit");
			veh_info[veh_id -1][v_pos][0] = t_shop_respawn[ts_id][ts_spawn_slot][0];
			veh_info[veh_id -1][v_pos][1] = t_shop_respawn[ts_id][ts_spawn_slot][1];
			veh_info[veh_id -1][v_pos][2] = t_shop_respawn[ts_id][ts_spawn_slot][2];
			veh_info[veh_id -1][v_pos][3] = t_shop_respawn[ts_id][ts_spawn_slot][3];
			veh_info[veh_id -1][v_fuel] = 100.0;
			veh_info[veh_id -1][v_millage] = 0.0;
			veh_info[veh_id -1][v_fine] = 3;


			new engine, lights, alarm, doors, bonnet, boot, objective;
			veh_info[veh_id -1][v_locked] = true;
			GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(veh_id, engine, lights, alarm, true, bonnet, boot, objective);


			veh_info[veh_id -1][v_owner] = PlayerInfo[playerid][id];

			SetVehicleNumberPlate(veh_info[veh_id -1][v_vehicle], veh_info[veh_id -1][v_plate]);
			Iter_Add(player_vehicles[playerid], veh_info[veh_id -1][v_vehicle]);
		}
	}
	return 1;
}


cmd:referals(playerid)
{
	SetPVarInt(playerid, "ofm_list_page", 1);
	new _text_string[128];
	format(_text_string, sizeof(_text_string), "SELECT `u_name` FROM `users` WHERE `u_referal`='%s'", PlayerInfo[playerid][name]);
	mysql_tquery(sql_connection, _text_string, "callback_referallist", "i", playerid);
	return 1;
}


cmd:texit(playerid)
{
	if(player_practice {playerid} == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не находитесь в тренировочном центре.");

	player_practice {playerid} = 0;
	KillTimer(player_practice_step_timer[playerid]);
	player_practice_step_timer[playerid] = -1;
	DestroyDynamicObject(player_practice_object[playerid]);
	player_practice_object[playerid] = 0;


	set_pos(playerid, 2460.2515, -2120.6069, 13.5530, 354.7014, 0, 0);
	SetPVarInt(playerid, "tp_area_used", 1);

	player_practice_points[playerid] = 0;
	player_practice_timer[playerid] = 0;

	reset_player_weapon(playerid);
	for(new i = 0; i < 12; i ++)
	{
		give_weapon(playerid, duel_guns[playerid][i][0], duel_guns[playerid][i][1]);
		duel_guns[playerid][i][0] = 0;
		duel_guns[playerid][i][1] = 0;
	}

	return 1;
}

cmd:fambizwar(playerid)
{
    if(!PlayerInfo[playerid][family]) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");
    if(!family_info[PlayerInfo[playerid][family] -1][fam_type]) return SendClientMessage(playerid, col_white, !""scm_error"Тип вашей семьи не подходит для использования данной команды.");

	if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][0])
	{
		new text_string[100];
		format(text_string, sizeof(text_string), ""scm_error"Команда доступна со статуса %s (%d).", family_rank[PlayerInfo[playerid][family] -1][family_info[PlayerInfo[playerid][family] -1][fam_settings][0] -1], family_info[PlayerInfo[playerid][family] -1][fam_settings][0]);
		return SendClientMessage(playerid, col_white, text_string);
	}

    if(fam_biz != -1) return SendClientMessage(playerid, col_white, !""scm_error"Война за аммуницию уже идет.");

	if(family_cd > 0)
	{
		new text_str[78];
		format(text_str, sizeof(text_str), ""scm_error"Захват аммуниции будет доступен через %s", convert_time(family_cd));
		return SendClientMessage(playerid, col_white, text_str);
	}

	for(new b = 0; b < b_count; b ++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, b_info[b][b_position][0], b_info[b][b_position][1], b_info[b][b_position][2]))
		{
			if(b_info[b][b_type] == bizz_type_ammo)
			{
				if(b_info[b][b_family] == PlayerInfo[playerid][family])
				{
					SendClientMessage(playerid, col_white, !""scm_error"Вы не можете начать захват своего бизнеса.");
					return 1;
				}
				if(b_info[b][b_family] < 1)
				{
					b_info[b][b_family] = PlayerInfo[playerid][family];

					new query_string[228];

					format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
					b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], family_info[b_info[b][b_family] -1][fam_name],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
					UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);

					format(query_string, 118,"UPDATE `businesses` SET `b_family` = '%d' WHERE `b_id` = '%d' LIMIT 1", b_info[b][b_family], b_info[b][b_id]);
					mysql_tquery(sql_connection, query_string);

					SendClientMessage(playerid, col_white, !""scm_sucess"Аммуниция взята под контроль.");
					return 1;
				}

				SendClientMessage(playerid, col_white, !""scm_info"Выберите на карте место для захвата аммуниции.");
				SendClientMessage(playerid, col_white, !""scm_info"Это должна быть территория в пригороде г. Лас-Вентурас.");
				SetPVarInt(playerid, "fam_war_map", 1);
				return 1;
			}
		}
	}
	SendClientMessage(playerid, col_white, !""scm_error"Вы не у бизнеса.");

	return 1;
}

cmd:bizwar(playerid)
{
  	if(global_hour < 12 || global_hour > 22) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Захват бизнесов возможен только с 12 до 23 часов.");
  	
	if(mafia_player(playerid))
	{
		if(PlayerInfo[playerid][rank] < 6) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Захват доступен только с 6 ранга.");

	    if(mw_biz != -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Война за бизнес уже идет.");

		if(mafia_cd > 0)
		{
			new text_str[78];
			format(text_str, sizeof(text_str), ""c_orange_red"* "c_grey"Захват бизнеса будет доступен через %s", convert_time(mafia_cd));
			return SendClientMessage(playerid, col_gray, text_str);
		}

		for(new b = 0; b < b_count; b ++)
		{
			if(IsPlayerInRangeOfPoint(playerid , 3.0 , b_info[b][b_position][0], b_info[b][b_position][1], b_info[b][b_position][2]))
			{
                if(b_info[b][b_type] == bizz_type_ammo)
                {
                    SendClientMessage(playerid, col_white, !""scm_error"Вы не можете захватить данный тип бизнеса (Захватывать аммуниции могут только семьи).");
                    return 1;
                }
				if(b_info[b][b_mafia] == PlayerInfo[playerid][member])
				{
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете начать захват своего бизнеса.");
					return 1;
				}
				if(b_info[b][b_mafia]<= 1)
				{
					b_info[b][b_mafia] = PlayerInfo[playerid][member];

					new query_string[228];
					if(b_info[b][b_type] == bizz_type_shop || b_info[b][b_type] == bizz_type_pharm || b_info[b][b_type] == bizz_type_electronic || b_info[b][b_type] == bizz_type_clothes || b_info[b][b_type] == bizz_type_carshop || b_info[b][b_type] == bizz_type_cafe || b_info[b][b_type] == bizz_type_club || b_info[b][b_type] == bizz_type_bar)
					{
						format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
						b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
						UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
					}

					else if(b_info[b][b_type] == bizz_type_gas)
					{
						format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль:"c_white" %s\n"c_grey"Состояние: "c_white"%s",
						b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
						UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
					}
					else if(b_info[b][b_type] == bizz_type_tune)
					{
						format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_white"Владелец: %s\nКонтроль: %s\nСостояние: %s",
						b_types[b_info[b][b_type]],b_info[b][b_id],  b_info[b][b_owner_name], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
						UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
					}


					format(query_string, 118,"UPDATE `businesses` SET `b_mafia` = '%d' WHERE `b_id` = '%d' LIMIT 1", b_info[b][b_mafia], b_info[b][b_id]);
					mysql_tquery(sql_connection, query_string);

					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Бизнес взят под контроль.");
					return 1;
				}

				SendClientMessage(playerid, col_gray, ""c_server"* "c_grey"Выберите на карте место для стрелы.");
				SendClientMessage(playerid, col_gray, ""c_server"* "c_grey"Это должна быть территория в пригороде г.Лас-Вентурас.");
				SetPVarInt(playerid, "biz_war_map", 1);
				return 1;
			}
		}
		SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не у бизнеса.");
	}
	return 1;
}

cmd:fambizlist(playerid)
{
    if(!PlayerInfo[playerid][family]) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");
	if(!family_info[PlayerInfo[playerid][family] -1][fam_type]) return SendClientMessage(playerid, col_white, !""scm_error"Тип вашей семьи не подходит для использования данной команды.");

	global_string[0] = EOS;
	strcat(global_string, ""c_white"");
	new line_string[128];

	new count_business = 0;

	for(new b = 0; b < b_count; b ++)
	{
		if(b_info[b][b_family] != PlayerInfo[playerid][family]) continue;
		format(line_string, sizeof(line_string), ""c_server"%i |"c_white" %s\n", count_business + 1, b_info[b][b_name]);
		strcat(global_string, line_string);
		count_business ++;
	}
	if(count_business > 0)
	{
	    new money_str[64];
	    format(money_str, sizeof(money_str), "\n \nДоход в час на склад семьи -"c_green"%s$", convert_money(count_business * 1000, ","));
	    
	    strcat(global_string, money_str);
		show_dialog(playerid, d_none, DIALOG_STYLE_LIST, !""scm_dialog"Аммунации семьи", global_string, !"Закрыть", !"");
	}
	else show_dialog(playerid, d_none, DIALOG_STYLE_LIST, !""scm_dialog"Аммунации семьи", ""c_white"Ничего не найдено.\n \nДоход в час на склад семьи -"c_green"0$", !"Далее", !"Закрыть");
	
	return 1;
}

cmd:bizlist(playerid, params[])
{
    if(!mafia_player(playerid)) return 1;
	new count_business = 0;

	global_string[0] = EOS;
	strcat(global_string, ""c_white"");
	new line_string[128];
	for(new b = 0; b < b_count; b ++)
	{
		if(b_info[b][b_mafia] != PlayerInfo[playerid][member]) continue;
		format(line_string, sizeof(line_string), ""c_server"%i |"c_white" %s\n", count_business + 1, b_info[b][b_name]);
		strcat(global_string, line_string);
		count_business ++;
	}
	if(count_business < 40)show_dialog(playerid, d_none, DIALOG_STYLE_LIST, !""scm_dialog"Бизнесы мафии", global_string, !"Закрыть", !"");
	else show_dialog(playerid, d_mw_list, DIALOG_STYLE_LIST, !""scm_dialog"Бизнесы мафии", global_string, !"Далее", !"Закрыть");
	return 1;
}

cmd:cover(playerid)
{
	if(!fbi_player(playerid)) return 1;

	global_string[0] = EOS;
	for(new j = 17; j < 17 + 8; j ++)
	{
		new line_string[64];
		format(line_string, 64, "{%s}%s\n", f_info[j][f_chat_color], f_info[j][f_name]);
		strcat(global_string, line_string);

	}
	strcat(global_string, "Полиция\nАрмия");
	show_dialog(playerid, d_fbi_cover, DIALOG_STYLE_LIST, !""scm_dialog"Маскировка", global_string, !"Выбрать", !"Закрыть");
	return 1;
}




cmd:kickout(playerid, params[])
{
	if(!gov_player(playerid)) return 1;

	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /kickout [ид/имя]");
	if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не найден.");
	if(params[0] == playerid) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете выгнать самого себя.");
    if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[params[0]][p_pos][0], p_t_info[params[0]][p_pos][1], p_t_info[params[0]][p_pos][2]) || GetPlayerVirtualWorld(params[0]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
	if(is_tazered {params[0]} == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок должен быть поражён шокером.");
	new scm_string[82];
	format(scm_string, 82, "%s[%d] выгнал Вас из мэрии.",
	PlayerInfo[playerid][name], playerid);
	SendClientMessage(params[0], col_wavy, scm_string);

	format(scm_string, 82, "Вы выгнали %s[%d] из мэрии.",
	PlayerInfo[params[0]][name], params[0]);
	SendClientMessage(playerid, col_wavy, scm_string);


	kickout_cooldown[params[0]] = gettime() + 300;

	set_pos(params[0], 1473.2272,-1766.5834,18.7949,326.2043, 0, 0);
	return 1;
}
cmd:newveh(playerid, params[])
{
    if(PlayerInfo[playerid][admin] < 5) return 1;
	if(GetPlayerState(playerid) ==  PLAYER_STATE_DRIVER) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы уже за рулём.");
	if(sscanf(params, "ddd", params[0 ], params[1 ], params[2])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /newveh [ид авто] [цвет 1] [цвет 2]");
	if(params[0] < 400 || params[0] > 611) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /newveh [ид авто] [цвет 1] [цвет 2]");
	if(params[1] < 0 || params[1] > 255) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /newveh [ид авто] [цвет 1] [цвет 2]");
	if(params[2] < 0 || params[2] > 255) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /newveh [ид авто] [цвет 1] [цвет 2]");
	new Float:player_pos[3];
	GetPlayerPos(playerid, player_pos[0], player_pos[1], player_pos[2]);
	new adm_veh = CreateVehicle(params[0], player_pos[0], player_pos[1], player_pos[2], 0.0, params[1], params[2], -1);

	veh_info[adm_veh -1][v_pos][0] = player_pos[0];
	veh_info[adm_veh -1][v_pos][1] = player_pos[1];
	veh_info[adm_veh -1][v_pos][2] = player_pos[2];


	SetPVarInt(playerid, "admin_vehicle", adm_veh);
	veh_info[adm_veh -1][v_fuel] = 60.0;
	PutPlayerInVehicle(playerid, adm_veh, 0);
	SetPlayerArmedWeapon(playerid,0);
	new scm_string[128];
	format(scm_string, sizeof(scm_string ), ""c_server"* A.INFO: "c_grey"%s создал автомобиль. ID: %d | Model: %d", PlayerInfo[playerid][name], adm_veh, params[0]);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, scm_string);

	return 1;
}

cmd:destroyveh(playerid, params[])
{
    if(PlayerInfo[playerid][admin] < 5) return 1;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Используйте: /destroyveh [ид авто]");

	new scm_string[128];
	format(scm_string, sizeof(scm_string ), ""c_server"* A.INFO: "c_grey"%s удалил автомобиль. ID: %d | Hard destroy", PlayerInfo[playerid][name], params[0]);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, scm_string);

	DestroyVehicle(params[0]);
	return 1;
}


cmd:boton(playerid,params[])
{

    if(PlayerInfo[playerid][admin] < 6) return -1;
    new ips[20];
	if(sscanf(params,"s[20]",ips)) return SendClientMessage(playerid, -1, "Введите: /boton [ip]");
	if(strlen(ips) < 1 || strlen(ips) > 20) return SendClientMessage(playerid, -1, "Вы ввели неверное количество символов");

	new bot_iter = -1;
	for(new j = 0; j < 5; j ++ )
	{
		if(strlen(ip_white_list[j]) > 3) continue;
		bot_iter = j;
	}
	if(bot_iter == -1) return SendClientMessage(playerid, -1, "Нет свободных мест в белом листе IP адресов.");

	format(ip_white_list[bot_iter], 16, "%s", ips);
	SendClientMessage(playerid, -1, ip_white_list[bot_iter]);
	SendClientMessage(playerid, -1, "IP добавлен в белый лист.");
	return 1;
}
cmd:botoff(playerid,params[])
{

    if(PlayerInfo[playerid][admin] < 6) return -1;
    new ips[20];
	if(sscanf(params,"s[20]",ips)) return SendClientMessage(playerid, -1, "Введите: /botoff [ip]");
	if(strlen(ips) < 1 || strlen(ips) > 20) return SendClientMessage(playerid, -1, "Вы ввели неверное количество символов");

	new bot_iter = -1;
	for(new j = 0; j < 5; j ++ )
	{
		if(!GetString(ips, ip_white_list[j])) continue;
		bot_iter = j;
	}
	if(bot_iter == -1) return SendClientMessage(playerid, -1, "Данный IP не найден в белом листе.");

	format(ip_white_list[bot_iter], 16, "1");
	SendClientMessage(playerid, -1, "IP удалён из белого листа.");
	return 1;
}

cmd:botlist(playerid)
{
    if(PlayerInfo[playerid][admin] < 6) return -1;
	new bot_iter = -1;
	for(new j = 0; j < 5; j ++ )
	{
		if(strlen(ip_white_list[j]) < 3) continue;
		SendClientMessage(playerid, -1, ip_white_list[j]);
		bot_iter = j;
	}
	if(bot_iter == -1) return SendClientMessage(playerid, -1, "Не найдено ни 1 IP в белом листе.");

	return 1;
}
stock is_ip_white_list(server_ip[])
{
	new bot_iter = -1;
	for(new j = 0; j < 5; j ++ )
	{
		if(!GetString(server_ip, ip_white_list[j])) continue;
		bot_iter = j;
	}
	if(bot_iter != -1) return 1;
	return 0;
}

public OnGameModeInit()
{
	global_weather = 1;

    SetGravity(0.010);

	//LoadMySQLSettings();
    sql_connection = mysql_connect("176.31.233.153", "gs131675", "gs131675", "sCz6O2bwOCMS");

	for(new j = 0; j < 5; j ++ )
		format(ip_white_list[j], 16, "1");
		
	switch(mysql_errno())
	{
		case 0: print("Подключение к базе данных удалось");
		case 1044: print("Подключение к базе данных не удалось [Указано неизвестное имя пользователя]");
		case 1045: print("Подключение к базе данных не удалось [Указан неизвестный пароль]");
		case 1049: print("Подключение к базе данных не удалось [Указана неизвестная база данных]");
		case 2003: print("Подключение к базе данных не удалось [Хостинг с базой данных недоступен]");
		case 2005: print("Подключение к базе данных не удалось [Указан неизвестный адрес хостинга]");
		default: printf("Подключение к базе данных не удалось [Неизвестная ошибка. Код ошибки: %d]", mysql_errno());
	}
	
	mysql_set_charset("cp1251");
	mysql_tquery(sql_connection, !"SET CHARACTER SET 'utf8'", "", "");
	mysql_tquery(sql_connection, !"SET NAMES 'utf8'", "", "");
	mysql_tquery(sql_connection, !"SET character_set_client = 'cp1251'", "", "");
	mysql_tquery(sql_connection, !"SET character_set_connection = 'cp1251'", "", "");
	mysql_tquery(sql_connection, !"SET character_set_results = 'cp1251'", "", "");
	mysql_tquery(sql_connection, !"SET SESSION collation_connection = 'utf8_general_ci'", "", "");

	mysql_log(LOG_ERROR);

    new
		_ip_addreas[16];

    GetConsoleVarAsString("bind", _ip_addreas, sizeof(_ip_addreas));
	new _port = GetConsoleVarAsInt("port");

	if(!isnull(_ip_addreas) && 0 == strcmp(_ip_addreas, "127.0.0.1") && _port == 7777)
	{
		SendRconCommand("password test_dev_ever");
		mysql_log(LOG_ALL);
	}
	else if(!isnull(_ip_addreas) && 0 == strcmp(_ip_addreas, "127.0.0.1") && _port == 7777)
	{
		mysql_log(LOG_ALL); // LOG_ERROR
	}

    SendRconCommand("ackslimit 150000");
    SendRconCommand("messageholelimit 150000");

	mysql_tquery(sql_connection, !"SELECT * FROM `teleport_areas`", "areas_loading");
	mysql_tquery(sql_connection, !"SELECT * FROM `houses` ORDER BY `houses`.`h_id` ASC", "houses_loading");
	mysql_tquery(sql_connection, !"SELECT * FROM `cellars` ORDER BY `cellars`.`cl_id` ASC", "cellars_loading");
	mysql_tquery(sql_connection, !"SELECT * FROM `family` ORDER BY `family`.`fam_id` ASC", "family_loading");
	mysql_tquery(sql_connection, !"SELECT * FROM `businesses` ORDER BY `businesses`.`b_id` ASC", "businesses_loading");
	mysql_tquery(sql_connection, !"SELECT * FROM `fractions`", "fractions_loading");
	mysql_tquery(sql_connection, !"SELECT * FROM `server_vehicles`", "vehicles_loading");
	mysql_tquery(sql_connection, !"SELECT * FROM `gangzones` ORDER BY `gangzones`.`gz_id` ASC", "gangzones_loading");
	mysql_tquery(sql_connection, !"SELECT * FROM `atm`", "atm_loading");
	mysql_tquery(sql_connection, !"SELECT * FROM `server_variables`", "server_variables_loading");
	mysql_tquery(sql_connection, !"SELECT * FROM `users_vehicles` WHERE `v_sell_price` > '0'", "users_vehicles_loading");
	mysql_tquery(sql_connection, !"SELECT * FROM `server_info`", "server_info_loading");
    mysql_tquery(sql_connection, !"SELECT * FROM `family_island` ORDER BY `family_island`.`fi_id` ASC", "island_loading");
	mysql_tquery(sql_connection, !"SELECT * FROM `server_exams` ORDER BY `e_id`", "exams_loading");
	mysql_tquery(sql_connection, !"SELECT * FROM "AC_TABLE_SETTINGS" ORDER BY "AC_TABLE_FIELD_CODE"", "anticheat_loading");
	mysql_tquery(sql_connection, !"SELECT * FROM `auction_cars`", "auction_cars");
	mysql_tquery(sql_connection, !"SELECT * FROM `radars`", "OnLoadRadarCallback");

 	new minute, second;
    gettime(global_hour, minute, second);
	SetWorldTime(global_hour);

	if(minute == 0 && second >= 11 && second <= 16) pay_day = 0;
   	if(minute == 0 && second >= 0 && second <= 10)
   	{
   	    pay_day = 1;
	}

	SetTimer("second_timer", 1000, 1);
	SetTimer("minute_timer", 60000, 1);
	SetTimer("gazon_timer", 900000, 1);

//==============================================================================
 	ShowPlayerMarkers				(2);
	EnableStuntBonusForAll			(false);

	DisableInteriorEnterExits		();
	ManualVehicleEngineAndLights	();

    SetNameTagDrawDistance(20.0);
    LimitPlayerMarkerRadius(100.0);

	SetGameModeText("Elive UPD 2.0");
	//==============================================================================
	#include "modules/textdraws/m_td.pwn"
	//==============================================================================
	#include "modules/objects/m_objects.pwn"
	//==============================================================================
	Iter_Init(streamed_players);
	Iter_Init(streamed_vehicles);
	Iter_Init(player_vehicles);
	Iter_Init(family_players);
	Iter_Init(family_vehicles);
	
	//==============================================================================

	CreateDynamic3DTextLabel("-"c_server"Трудоустройство"c_silver" -", col_silver, 859.9410, 2210.9400, 860.7200, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("-"c_server"Архив семей"c_silver" -", col_silver, 859.9470, 2215.6700, 860.7220, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);

	CreateDynamic3DTextLabel("** Склад **", col_blue, -31.4789,-261.0728,1529.6615, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Заготовки **", col_blue, -10.9677,-275.7222,1529.5376, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);

	CreateDynamic3DTextLabel("** Автосалон **", col_blue, 542.3492, -1293.0425, 17.2422 + 0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	CreateDynamic3DTextLabel("** Автосалон **", col_blue, -1969.1633, 293.9997, 35.1719 + 0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	CreateDynamic3DTextLabel("** Автосалон **", col_blue, 2200.7800, 1394.2429, 11.0625 + 0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	CreateDynamicMapIcon(542.3492, -1293.0425, 17.2422, 55, 0, 0, 0, -1, 300.0);	// автосалон
	CreateDynamicMapIcon(-1969.1633, 293.9997, 35.1719, 55, 0, 0, 0, -1, 300.0);	// автосалон
	CreateDynamicMapIcon(2200.7800, 1394.2429, 11.0625, 55, 0, 0, 0, -1, 300.0);	// автосалон

	CreateDynamic3DTextLabel("** Водный транспорт **", col_blue, 2890.6497, -365.0804, 8.1380 + 0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	CreateDynamicMapIcon(2890.6497, -365.0804, 8.1380, 55, 0, 0, 0, -1, 300.0);	// автосалон


	CreateDynamic3DTextLabel("** Воздушный транспорт **", col_blue, -1397.3505,-542.3858,14.1484 + 0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	CreateDynamicMapIcon(-1397.3505,-542.3858,14.1484, 55, 0, 0, 0, -1, 300.0);	// аэросалон


	CreateDynamic3DTextLabel("** Холодильник **\n"c_grey"Нажмите "c_white"Y"c_grey" для взаимодействия", col_blue, 1388.3073,-10.9576,1001.0063 + 0.5, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Гардероб **\n"c_grey"Нажмите "c_white"Y"c_grey" для взаимодействия", col_blue, 1390.2314,-27.4337,1001.0063 + 0.5, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);

	CreateDynamic3DTextLabel("** Лестница **\n"c_grey"Нажмите "c_white"Y"c_grey" для взаимодействия", col_blue, -1470.4011,300.2828,1058.3457 + 0.5, 2.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);

	CreateDynamic3DTextLabel("** Проверка навыков **", col_blue, 742.6028, -1416.0688, 1500.9509 + 0.5, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Таблица рекордов **", col_blue, 742.6000, -1413.3655, 1500.9509 + 0.5, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);

	CreateDynamicMapIcon(2289.8254, -1723.8387, 13.5469, 6, 0, 0, 0, -1, 300.0);	// бандаммо
	CreateDynamicMapIcon(2094.2847, -1194.8110, 23.8575, 6, 0, 0, 0, -1, 300.0);	// бандаммо
	CreateDynamicMapIcon(2444.7332, -1979.6379, 13.5469, 6, 0, 0, 0, -1, 300.0);	// бандаммо

	CreateDynamicMapIcon(-1116.3422, -1650.3342, 76.3672, 11, 0, 0, 0, -1, 300.0);	// лесопилка
	CreateDynamicMapIcon(2168.1326, -1673.3715, 15.0826, 23, 0, 0, 0, -1, 300.0);	// притон
	for(new i; i < sizeof(tree_positions); i++)
	{
		tree_object[i] = CreateDynamicObjectEx(618, tree_positions[i][0], tree_positions[i][1], tree_positions[i][2],tree_positions[i][3],tree_positions[i][4],tree_positions[i][5]);
		SetDynamicObjectMaterial(tree_object[i], 0, -1, "none", "none", 0xFFFFFFFF);
	}

	for(new v = 1; v < MAX_VEHICLES; v ++)
	{
		veh_info[v -1][v_driver] = INVALID_PLAYER_ID;
		veh_info[v -1][v_sell_text] = Text3D:INVALID_3DTEXT_ID;
		for(new i; i < 5; i ++)
		{
			veh_info[v -1][v_pt_engine][i] = 0;
			veh_info[v -1][v_pt_brake][i] = 0;
			veh_info[v -1][v_pt_stability][i] = 0;
		}
		for(new j = 0; j < 4; j ++)veh_info[v -1][v_door_status][j] = 0;

	}

	for(new i = 0; i < H_BED_AMOUNT; i++)
	{
    	CreateDynamic3DTextLabel(" "c_server"** Койка **\n"c_grey"Нажмите "c_white"F"c_grey", чтобы лечь",0xFF9900AA,
													h_bed_position[i][0],
													h_bed_position[i][1],
													h_bed_position[i][2],
													3.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	}




//    CreateDynamic3DTextLabel("Выход",col_blue, 1400.0562, -9.9276, 1000.9152, 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Подвал **\n"c_grey"Нажмите "c_white"F"c_grey" для взаимодействия",col_blue,
												1396.1400, -17.8941, 1001.5506,
												3.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);

	CreateDynamic3DTextLabel("** Гараж **\n"c_grey"Нажмите "c_white"Y"c_grey", чтобы выехать",col_blue,
												2161.0347, -373.1238, 1593.5332,
												3.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);

	// Армия двери на складе с оружием (оружейка)
	army_gate[2] = CreateDynamicObjectEx(1495, 2146.918, -775.890, 1411.171, 0.000, 0.000, 90.000, 300.000, 300.000);
	SetDynamicObjectMaterial(army_gate[2], 2, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
	CreateDynamic3DTextLabel("Нажмите "c_white"Y"c_grey" для взаимодействия",col_gray,
												2146.9441, -775.0197, 1412.1699,
												4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 5, 1);

	// армейские ворота
	army_gate[0] = CreateDynamicObjectEx(19313, 285.988281, 1821.206420, 19.935199, 0.000000, 0.000000, 90.000000, 300.00, 300.00);
	SetDynamicObjectMaterial(army_gate[0], 0, -1, "none", "none", 0xFFFFFFFF);
	army_gate[1] = CreateDynamicObjectEx(19313, 135.642791, 1941.488647, 21.622999, 0.000000, 0.000000, 0.000000, 300.00, 300.00);
	SetDynamicObjectMaterial(army_gate[1], 0, -1, "none", "none", 0xFFFFFFFF);
	for(new i = 0; i < 4; i++)
	{
		CreateDynamic3DTextLabel("** Ворота **\n"c_grey"Нажмите "c_white"Y"c_grey" для взаимодействия",col_blue,
												army_gate_controler_pos[i][0],army_gate_controler_pos[i][1], army_gate_controler_pos[i][2],
												4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	}
	for(new i = 0; i < 25; i++)
	{
		if(army_unloading[i][0] == 0) continue;
		CreateDynamic3DTextLabel("** Зона разгрузки **\n"c_grey"Введите "c_server"\"/unload\""c_grey", чтобы разгрузиться.",
													col_blue,
													army_unloading[i][0],
													army_unloading[i][1],
													army_unloading[i][2],
													13.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	}


	new actorid = CreateActor(29, 322.3990, 1117.2810, 1083.8828, 38.8397); // crack dealer
	SetActorVirtualWorld(actorid, 1);
	ApplyActorAnimation(actorid, "DEALER",  "DEALER_IDLE",  4.1,  0,  1,  1,  1,  1);

	actorid = CreateActor(287, 218.3794,1983.0873,17.6500,238.2579); // NGSA trainer
	ApplyActorAnimation(actorid, "DEALER",  "DEALER_IDLE",  4.1,  0,  1,  1,  1,  1);

	actorid = CreateActor(287, -10.8513,-277.1542,1529.5376,353.4601); // factory
	ApplyActorAnimation(actorid,"PED", "SEAT_down", 4.1,  0,  1,  1,  1,  1);

	actorid = CreateActor(81, 756.9302, 7.1851, 1000.7009, 219.1384); // gym trainer
	SetActorVirtualWorld(actorid, 1);
	ApplyActorAnimation(actorid, "DEALER",  "DEALER_IDLE",  4.1,  0,  1,  1,  1,  1);

	actorid = CreateActor(81, 756.9302, 7.1851, 1000.7009, 219.1384); // gym trainer
	SetActorVirtualWorld(actorid, 2);
	ApplyActorAnimation(actorid, "DEALER",  "DEALER_IDLE",  4.1,  0,  1,  1,  1,  1);

	actorid = CreateActor(81, 756.9302, 7.1851, 1000.7009, 219.1384); // gym trainer
	SetActorVirtualWorld(actorid, 3);
	ApplyActorAnimation(actorid, "DEALER",  "DEALER_IDLE",  4.1,  0,  1,  1,  1,  1);



	actorid = CreateActor(23, 1548.2485,1001.6000,10.9063,180.1199);
	ApplyActorAnimation(actorid, "FOOD",  "SHP_Tray_Lift_Out",  4.1,  0,  1,  1,  1,  1);

	actorid = CreateActor(72,1543.8684,1011.6321,10.9312,87.0196);
	ApplyActorAnimation(actorid, "PED", "SEAT_down",  4.1,  0,  1,  1,  1,  1);

	actorid = CreateActor(48,1535.9545,1015.5196,10.9212,359.0652);
	ApplyActorAnimation(actorid, "PED", "SEAT_down",  4.1,  0,  1,  1,  1,  1);

	actorid = CreateActor(155,1530.4027,996.0681,10.9013,89.0359);

	// скутеристы:
	CreateActor(180, 985.8394,-1310.8840,13.5392,180.6993);
	CreateActor(180, 1812.1753,-1877.6801,13.5704,270.4383);
	CreateActor(180, 1692.7214,-2310.7034,13.5469,180.0685);
	CreateActor(180,-41.0871,-300.5104,5.4297,180.0000);
	CreateActor(180,-928.2175,-1709.9524,78.3536,180.0000);
	CreateActor(180,2618.3164,-2389.4128,13.6250,90.0000); // ??
	CreateActor(180,-1996.9216,-249.8922,35.7705,90.0000);

	CreateDynamic3DTextLabel("** Аренда транспорта **", col_blue, 985.8394,-1310.8840,13.5392 + 0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	CreateDynamic3DTextLabel("** Аренда транспорта **", col_blue, 1812.1753,-1877.6801,13.5704 + 0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	CreateDynamic3DTextLabel("** Аренда транспорта **", col_blue, 1692.7214,-2310.7034,13.5469 + 0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	CreateDynamic3DTextLabel("** Аренда транспорта **", col_blue, -41.0871,-300.5104,5.4297 + 0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	CreateDynamic3DTextLabel("** Аренда транспорта **", col_blue, -928.2175,-1709.9524,78.3536 + 0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	CreateDynamic3DTextLabel("** Аренда транспорта **", col_blue, 2618.3164,-2389.4128,13.6250 + 0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	CreateDynamic3DTextLabel("** Аренда транспорта **", col_blue, -1996.9216,-249.8922,35.7705 + 0.5, 25.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);

	// Центры лицензирования:
	actorid = CreateActor(11, 733.0743,-1425.7719,1500.9509,270.0000);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 1);
	actorid = CreateActor(171, 733.0326,-1424.1820,1500.9509,270.0000);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 1);
	actorid = CreateActor(172, 744.3846,-1415.9039,1500.9509,90.0000);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 1);

	actorid = CreateActor(11, 733.0743,-1425.7719,1500.9509,270.0000);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 2);
	actorid = CreateActor(171, 733.0326,-1424.1820,1500.9509,270.0000);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 2);
	actorid = CreateActor(172, 744.3846,-1415.9039,1500.9509,90.0000);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 2);

	actorid = CreateActor(11, 733.0743,-1425.7719,1500.9509,270.0000);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 3);
	actorid = CreateActor(171, 733.0326,-1424.1820,1500.9509,270.0000);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 3);
	actorid = CreateActor(172, 744.3846,-1415.9039,1500.9509,90.0000);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 3);
	// Мэрия
	actorid = CreateActor(76, 1569.6669,-1566.4819,1001.1030,90.0000);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 10);
	actorid = CreateActor(98, 1569.6683,-1568.9906,1001.1030,90.0000);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 10);

	actorid = CreateActor(164, 1558.3669,-1565.1522,1001.0859,270.0000);
	ApplyActorAnimation(actorid, "DEALER","Dealer_idle",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 10);
	actorid = CreateActor(164, 1558.3669,-1570.6151,1001.0859,270.0000);
	ApplyActorAnimation(actorid, "DEALER","Dealer_idle",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 10);
	// ПД
	actorid = CreateActor(306, 1466.6755, -1777.1896, 2342.1479, 260.0);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 1);
	actorid = CreateActor(280, 1466.6788, -1775.2488, 2342.1479, 266.0);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 1);
	actorid = CreateActor(192, 1454.9995, -1788.1611, 2342.1279, 177.0);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 1);
	actorid = CreateActor(305, 1454.9119, -1790.5745, 2342.1279, 352.0);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 1);

	actorid = CreateActor(306, 1466.6755, -1777.1896, 2342.1479, 260.0);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 2);
	actorid = CreateActor(280, 1466.6788, -1775.2488, 2342.1479, 266.0);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 2);
	actorid = CreateActor(192, 1454.9995, -1788.1611, 2342.1279, 177.0);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 2);
	actorid = CreateActor(305, 1454.9119, -1790.5745, 2342.1279, 352.0);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 2);

	actorid = CreateActor(306, 1466.6755, -1777.1896, 2342.1479, 260.0);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 3);
	actorid = CreateActor(280, 1466.6788, -1775.2488, 2342.1479, 266.0);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 3);
	actorid = CreateActor(192, 1454.9995, -1788.1611, 2342.1279, 177.0);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 3);
	actorid = CreateActor(305, 1454.9119, -1790.5745, 2342.1279, 352.0);
	ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
	SetActorVirtualWorld(actorid, 3);
	// ПД (оружейка)
	actorid = CreateActor(305, 1455.7395, -1774.8280, 2784.0510, 180.0);
	SetActorVirtualWorld(actorid, 1);
	actorid = CreateActor(305, 1455.7395, -1774.8280, 2784.0510, 180.0);
	SetActorVirtualWorld(actorid, 2);
	actorid = CreateActor(305, 1455.7395, -1774.8280, 2784.0510, 180.0);
	SetActorVirtualWorld(actorid, 3);
	// Армия (оружейка)
	actorid = CreateActor(287, 2139.6956, -774.6153, 1412.1699, 272.0);
	SetActorVirtualWorld(actorid, 5);
	// Больница:
	for(new i = 1; i < 4; i++)
	{
		// рецепшн
		actorid = CreateActor(275, 1161.1748, -1323.7335, 1015.4130, 270.0);
		SetActorVirtualWorld(actorid, i);
		// палаты
		actorid = CreateActor(308, 1170.6660, -1339.8611, 1015.4130, 266.0);
		ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
		SetActorVirtualWorld(actorid, i);
		actorid = CreateActor(276, 1155.0559, -1342.2657, 1015.4130, 265.0);
		ApplyActorAnimation(actorid, "ped", "SEAT_IDLE",4.1,1,0,0,0,0);
		SetActorVirtualWorld(actorid, i);
	}


	CreateDynamic3DTextLabel("** Наркоторговец **\n"c_grey"Нажмите "c_white"F"c_grey" для взаимодействия",col_blue,
												322.3990, 1117.2810, 1083.8828,
												5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 5, 1);
	for(new j = 0; j < MAX_QUEST_ACTORS; j ++)
	{
		CreateActor(quest_actor[j][actor_skin], quest_actor[j][actor_pos][0], quest_actor[j][actor_pos][1], quest_actor[j][actor_pos][2], quest_actor[j][actor_pos][3]);

		CreateDynamic3DTextLabel("** Помощник **\n"c_grey"Нажмите "c_white"[ALT]"c_grey" для взаимодействия", 0xEDED00FF, quest_actor[j][actor_pos][0], quest_actor[j][actor_pos][1], quest_actor[j][actor_pos][2], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1);
	}

	for(new j = 0; j < 3; j ++)
	{
		CreateActor(6, delivery_car_pier[j][0], delivery_car_pier[j][1], delivery_car_pier[j][2], delivery_car_pier[j][3]);
		CreateDynamic3DTextLabel("** Алексей **\n"c_grey"Нажмите клавишу "c_white"[ALT]"c_grey" для взаимодействия", 0xEDED00FF, delivery_car_pier[j][0], delivery_car_pier[j][1], delivery_car_pier[j][2], 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
	}

	for(new j = 0; j < 19; j ++)
	{
		CreateActor(6, delivery_car_island[j][0], delivery_car_island[j][1], delivery_car_island[j][2], delivery_car_island[j][3]);
		CreateDynamic3DTextLabel("** Олег **\n"c_grey"Нажмите клавишу "c_white"[ALT]"c_grey" для взаимодействия", 0xEDED00FF, delivery_car_island[j][0], delivery_car_island[j][1], delivery_car_island[j][2], 5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0);
	}


	for(new i = 0; i < 10; i ++)
	{
		VacancyInfo[i][VacancyCreator] = INVALID_PLAYER_ID;
	}

	// тексты возле тюнингов
	CreateDynamic3DTextLabel("** Автосервис **\n"c_grey"Нажмите "c_white"H"c_grey", чтобы заехать", col_blue, 844.8434,-602.2949,18.4219, 18.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	CreateDynamic3DTextLabel("** Автосервис **\n"c_grey"Нажмите "c_white"H"c_grey", чтобы заехать", col_blue, 1649.2150,2199.1189,10.8203, 18.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);

	CreateDynamic3DTextLabel("** Автосервис **\n"c_grey"Нажмите "c_white"H"c_grey", чтобы заехать", col_blue, 1614.0004,-1897.5763,13.5487, 18.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	CreateDynamic3DTextLabel("** Автосервис **\n"c_grey"Нажмите "c_white"H"c_grey", чтобы заехать", col_blue, 2393.8142,1482.8412,10.8203, 18.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
	CreateDynamic3DTextLabel("** Автосервис **\n"c_grey"Нажмите "c_white"H"c_grey", чтобы заехать", col_blue, -1786.7087,1208.8735,25.1250, 18.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);

	// ПД
	CreateDynamic3DTextLabel("** Бюро услуг **", col_blue, 1468.5238, -1776.0135, 2342.1479, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Служебный компьютер **\n"c_grey"Введите "c_white"'/comp'"c_grey", чтобы включить", col_blue, 1464.5409, -1783.7404, 2342.1479, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Служебный компьютер **\n"c_grey"Введите "c_white"'/comp'"c_grey", чтобы включить", col_blue, 1464.5437, -1788.0006, 2342.1479, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Служебный компьютер **\n"c_grey"Введите "c_white"'/comp'"c_grey", чтобы включить", col_blue, -2502.4155, -650.3958, 1331.6520, 8.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);

	for(new i; i < sizeof(police_cams_id); i++)CreateObject(police_cams_id[i], police_cams[i][0], police_cams[i][1], police_cams[i][2], 0.0, police_cams[i][3], police_cams[i][4]);


	CreateDynamic3DTextLabel("** Помощь по серверу **", col_blue, 1768.7145,-1903.0612,13.5670, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Помощь по серверу **", col_blue, 1009.9015,-1354.1731,13.8630, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Помощь по серверу **", col_blue, 1676.6146,-2347.7600,13.5625, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);

	CreateDynamic3DTextLabel("** Помощь по работе **", col_blue, 2640.0725, -2424.8472, 13.2651, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Помощь по работе **", col_blue, 601.0652, 870.8605, -41.9609, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Помощь по работе **", col_blue, -46.3935, -274.4987, 5.4297, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Помощь по работе **", col_blue, -1092.9801, -1655.2856, 76.3739, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);

	/*	Ручки автоматов */

	for(new i = 0; i < sm_count; i ++)
	{
		sm_hand[i] = CreateDynamicObject(1832, sm_hand_coord[i][0], sm_hand_coord[i][1], sm_hand_coord[i][2], sm_hand_coord[i][3], sm_hand_coord[i][4], sm_hand_coord[i][5]);
		SetDynamicObjectMaterial(sm_hand[i], 0, -1, "none", "none", 255);
		SetDynamicObjectMaterial(sm_hand[i], 2, -1, "none", "none", 255);
	}
/*	Слот-механизмы автоматов */

	for(new i = 0; i < sm_count * 3; i ++)
	{
		sm_slot[i] = CreateDynamicObject(2349, sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2], sm_slot_coord[i][3], sm_slot_coord[i][4], sm_slot_coord[i][5]);
		SetDynamicObjectMaterial(sm_slot[i], 0, -1, "none", "none", 0xFFF0FFFF);
	}
	CreateDynamic3DTextLabel("** Однорукий бандит **\n"c_grey"Нажмите "c_white"F"c_grey" для взаимодействия ",col_blue,
												1957.5531, 987.4354, 994.2031,
												5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Однорукий бандит **\n"c_grey"Нажмите "c_white"F"c_grey" для взаимодействия ",col_blue,
												1962.2374, 992.0743, 994.2031,
												5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Однорукий бандит **\n"c_grey"Нажмите "c_white"F"c_grey" для взаимодействия ",col_blue,
												1964.9233, 998.3506, 994.2031,
												5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);

	// dice
	CreateDynamic3DTextLabel("** Кости **\n"c_grey"Нажмите "c_white"F"c_grey" для взаимодействия",col_blue,
												1944.18994, 1010.70001, 992.50000+1,
												5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Кости **\n"c_grey"Нажмите "c_white"F"c_grey" для взаимодействия",col_blue,
												1944.18994, 1025.00000, 992.50000+1,
												5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Кости **\n"c_grey"Нажмите "c_white"F"c_grey" для взаимодействия",col_blue,
												1938.18994, 1010.70001, 992.50000+1,
												5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	CreateDynamic3DTextLabel("** Кости **\n"c_grey"Нажмите "c_white"F"c_grey" для взаимодействия",col_blue,
												1938.18994, 1025.00000, 992.50000+1,
												5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
	for(new i; i < MAX_BONE; i++)
	{
		dice_info[i][b_crupie] = INVALID_PLAYER_ID;
		for(new idx = 0; idx < 5; idx ++)dice_info[i][b_player][idx] = INVALID_PLAYER_ID;
		dice_info[i][b_started] = 0;
	}

	CreateDynamic3DTextLabel("** Камикадзе **\n"c_grey"Нажмите "c_white"F"c_grey" для взаимодействия",col_blue,
												1954.193481, 1003.396484, 993.277770,
												5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);

	CreateDynamic3DTextLabel("** Камикадзе **\n"c_grey"Нажмите "c_white"F"c_grey" для взаимодействия",col_blue,
												1958.780395, 1003.396545, 993.277770,
												5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);


	CreateDynamic3DTextLabel("** Тренировочный комплекс **",col_blue,
												2460.2515, -2120.6069, 13.5530 + 0.5,
												5.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);






	crane_status[0] = true;
	crane_status[1] = true;

	crane_object[0][0] = CreateObject(3565, 2783.420166, -2470.333740, 13.623873, 0.000000, 0.000000, 0.000000);
	SetObjectMaterial(crane_object[0][0], 0, 10850, "bakerybit2_sfse", "frate64_yellow", 0xFFF0FFFF);
	SetObjectMaterial(crane_object[0][0], 1, 10850, "bakerybit2_sfse", "frate_doors64yellow", 0x00000000);

	crane_object[0][1] = CreateObject(3565, 2783.420166, -2470.333740, 13.62387, 0.019998, 180.000000, 0.000000);
	SetObjectMaterial(crane_object[0][1], 0, 10850, "bakerybit2_sfse", "frate64_yellow", 0xFFF0FFFF);
	SetObjectMaterial(crane_object[0][1], 1, 10850, "bakerybit2_sfse", "frate_doors64yellow", 0x00000000);
	AttachObjectToObject(crane_object[0][1],crane_object[0][0],0.029998, -0.009995, -0.010002, 0.019998, 180.000000, 0.000, 1);

	printf("%d %d objects", crane_object[0][0], crane_object[0][1]);

	crane_object[0][2] = CreateObject(1390, 2783.420166+3.760772, -2470.333740-0.028572, 13.623873-1.012470, 0.000000, 90.000000, 0.000000);
	SetObjectMaterial(crane_object[0][2], 1, -1, "none", "none", 0xFF808080);
	AttachObjectToObject(crane_object[0][2],crane_object[0][0],3.760772, -0.028572, 1.012470, 0.000000, 90.000000, 0.000000,1);

	crane_object[0][3] = CreateObject(1390, 2783.420166+3.070773, -2470.333740-0.028572, 13.623873-1.012470, 0.000000, 90.000000, 0.000000);
	SetObjectMaterial(crane_object[0][3], 1, -1, "none", "none", 0xFF808080);
	AttachObjectToObject(crane_object[0][3],crane_object[0][0],3.070773, -0.028572, 1.012470, 0.000000, 90.000000, 0.000000,1);

	crane_object[0][4] = CreateObject(1390, 2783.420166-3.739224, -2470.333740-0.028572, 13.623873-1.012470, 0.000000, 90.000000, 179.999893);
	SetObjectMaterial(crane_object[0][4], 1, -1, "none", "none", 0xFF808080);
	AttachObjectToObject(crane_object[0][4],crane_object[0][0],-3.739224, -0.028572, 1.012470, 0.000000, 90.000000, 179.999893,1);

	crane_object[0][5] = CreateObject(1390, 2783.420166-3.049225, -2470.333740-0.028572, 13.623873-1.012470, 0.000000, 90.000000, 179.999893);
	SetObjectMaterial(crane_object[0][5], 1, -1, "none", "none", 0xFF808080);
	AttachObjectToObject(crane_object[0][5],crane_object[0][0],-3.049225, -0.028572, 1.012470, 0.000000, 90.000000, 179.999893,1);


	crane_magnit[0] = CreateObject(18886, 2848.952392, -2470.375976, 33.264030, 0.000000, 0.000000, 0.000000);
	SetObjectMaterial(crane_magnit[0], 0, -1, "none", "none", 0xFFF0FFFF);

	new object_id = CreateObject(19089, 2848.952392, -2470.375976, 33.264030, 0.000000, 0.000000, 0.000000);
	SetObjectMaterial(object_id, 0, 14584, "ab_abbatoir01", "cj_sheetmetal", 0xFF808080);
	AttachObjectToObject(object_id, crane_magnit[0], -0.007546, -0.003315, 7.348940, 0.000000, 0.000000, 0.000000,1);

	object_id = CreateObject(1392, 2848.952392, -2470.375976, 33.264030, 0.000000, 0.000000, 0.000000);
	SetObjectMaterial(object_id, 0, -1, "none", "none", 0xFF808080);
	SetObjectMaterial(object_id, 1, -1, "none", "none", 0xFF808080);
	AttachObjectToObject(object_id, crane_magnit[0], -0.010293, -0.005121, 7.055516, 0.000000, 0.000000, 0.000000,1);

	object_id = CreateObject(1392, 2848.952392, -2470.375976, 33.264030, 0.000000, 180.000000, 0.000000);
	SetObjectMaterial(object_id, 0, -1, "none", "none", 0xFF808080);
	SetObjectMaterial(object_id, 1, -1, "none", "none", 0xFF808080);
	AttachObjectToObject(object_id, crane_magnit[0], 0.009706, -0.005121, 7.675520, 0.000000, 180.000000, 0.000000,1);


	crane_object[1][0] = CreateObject(3565, 2783.420166, -2428.874023, 13.623873, 0.000000, 0.000000, 0.000000);
	SetObjectMaterial(crane_object[1][0], 0, 10850, "bakerybit2_sfse", "frate64_yellow", 0xFFF0FFFF);
	SetObjectMaterial(crane_object[1][0], 1, 10850, "bakerybit2_sfse", "frate_doors64yellow", 0x00000000);

	crane_object[1][1] = CreateObject(3565, 2783.420166, -2428.874023, 13.623873, 0.019998, 180.000000, 0.000000);
	SetObjectMaterial(crane_object[1][1], 0, 10850, "bakerybit2_sfse", "frate64_yellow", 0xFFF0FFFF);
	SetObjectMaterial(crane_object[1][1], 1, 10850, "bakerybit2_sfse", "frate_doors64yellow", 0x00000000);
	AttachObjectToObject(crane_object[1][1],crane_object[1][0],0.029998, -0.009995, -0.010002, 0.019998, 180.000000, 0.000, 1);

	crane_object[1][2] = CreateObject(1390, 2783.420166, -2428.874023, 13.623873, 0.000000, 90.000000, 0.000000);
	SetObjectMaterial(crane_object[1][2], 1, -1, "none", "none", 0xFF808080);
	AttachObjectToObject(crane_object[1][2],crane_object[1][0],3.760772, -0.028572, 1.012470, 0.000000, 90.000000, 0.000000,1);

	crane_object[1][3] = CreateObject(1390, 2783.420166, -2428.874023, 13.623873, 0.000000, 90.000000, 0.000000);
	SetObjectMaterial(crane_object[1][3], 1, -1, "none", "none", 0xFF808080);
	AttachObjectToObject(crane_object[1][3],crane_object[1][0], 3.070773, -0.028572, 1.012470, 0.000000, 90.000000, 0.000000,1);

	crane_object[1][4] = CreateObject(1390, 2783.420166, -2428.874023, 13.623873, 0.000000, 90.000000, 179.999893);
	SetObjectMaterial(crane_object[1][4], 1, -1, "none", "none", 0xFF808080);
	AttachObjectToObject(crane_object[1][4],crane_object[1][0],-3.739224, -0.028572, 1.012470, 0.000000, 90.000000, 179.999893,1);

	crane_object[1][5] = CreateObject(1390, 2783.420166, -2428.874023, 13.623873, 0.000000, 90.000000, 179.999893);
	SetObjectMaterial(crane_object[1][5], 1, -1, "none", "none", 0xFF808080);
	AttachObjectToObject(crane_object[1][5],crane_object[1][0],-3.049225, -0.028572, 1.012470, 0.000000, 90.000000, 179.999893,1);



	crane_magnit[1] = CreateObject(18886, 2848.952392, -2428.916259, 33.264030, 0.000000, 0.000000, 0.000000);
	SetObjectMaterial(crane_magnit[1], 0, -1, "none", "none", 0xFFF0FFFF);

	object_id = CreateObject(19089, 2848.952392, -2428.916259, 33.264030, 0.000000, 0.000000, 0.000000);
	SetObjectMaterial(object_id, 0, 14584, "ab_abbatoir01", "cj_sheetmetal", 0xFF808080);
	AttachObjectToObject(object_id, crane_magnit[1], -0.007546, -0.003315, 7.348940, 0.000000, 0.000000, 0.000000,1);

	object_id = CreateObject(1392, 2848.952392, -2428.916259, 33.264030, 0.000000, 0.000000, 0.000000);
	SetObjectMaterial(object_id, 0, -1, "none", "none", 0xFF808080);
	SetObjectMaterial(object_id, 1, -1, "none", "none", 0xFF808080);
	AttachObjectToObject(object_id, crane_magnit[1], -0.010293, -0.005121, 7.055516, 0.000000, 0.000000, 0.000000,1);

	object_id = CreateObject(1392, 2848.952392, -2428.916259, 33.264030, 0.000000, 180.000000, 0.000000);
	SetObjectMaterial(object_id, 0, -1, "none", "none", 0xFF808080);
	SetObjectMaterial(object_id, 1, -1, "none", "none", 0xFF808080);
	AttachObjectToObject(object_id, crane_magnit[1], 0.009706, -0.005121, 7.675520, 0.000000, 180.000000, 0.000000,1);





	for(new j = 0; j < 6; j ++)
	{
		barrier_object[j] = CreateDynamicObject(968, barrier_pos[j][1][0], barrier_pos[j][1][1], barrier_pos[j][1][2], barrier_pos[j][1][3],
									barrier_pos[j][1][4], barrier_pos[j][1][5]);

		CreateDynamic3DTextLabel("** Шлагбаум **\n"c_grey"Нажмите "c_white"H"c_grey", чтобы открыть",col_blue,
												barrier_pos[j][1][0], barrier_pos[j][1][1], barrier_pos[j][1][2],
												15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);

	}

	for(new j = 0; j < MAX_DM_ZONE; j ++)
	{
		anti_dm_area[j] = CreateDynamicRectangle(anti_dm_pos[j][0], anti_dm_pos[j][1], anti_dm_pos[j][2], anti_dm_pos[j][3], anti_dm_data[j][0], anti_dm_data[j][1], -1);
	}
	for(new j = 0; j < MAX_NONPARKING_ZONES; j ++)
	{
		non_parking_area[j] = CreateDynamicRectangle(non_parking_pos[j][0], non_parking_pos[j][1], non_parking_pos[j][2], non_parking_pos[j][3], 0, 0, -1);
	}

	CreateDynamicObjectEx(19605, 2654.0056, -2367.4011, 12.4651, 0.000000, 0.000000, 0.000000, 300.00, 300.00);
	CreateDynamicObjectEx(19605, 2646.1121, -2367.2539, 12.4651, 0.000000, 0.000000, 0.000000, 300.00, 300.00);
	CreateDynamicObjectEx(19605, 2637.7830, -2367.5708, 12.4651, 0.000000, 0.000000, 0.000000, 300.00, 300.00);

	// Bot's
	actorid = CreateActor(260, 2639.3708,-2424.8586,13.2651,277.8892);
	ApplyActorAnimation(actorid, "DEALER","Dealer_idle",4.1,1,0,0,0,0);

	actorid = CreateActor(260, 601.0652,870.8605,-42.9609,116.7163);
	ApplyActorAnimation(actorid, "DEALER","Dealer_idle",4.1,1,0,0,0,0);

	actorid = CreateActor(260, -46.3935,-274.4987,5.4297,141.7344);
	ApplyActorAnimation(actorid, "DEALER","Dealer_idle",4.1,1,0,0,0,0);

	actorid = CreateActor(260, -1092.9801,-1655.2856,76.3739,358.8068);
	ApplyActorAnimation(actorid, "DEALER","Dealer_idle",4.1,1,0,0,0,0);
	CreateDynamic3DTextLabel("** Бюро фотографов **", col_blue, -1831.1, 573.024, 35.1668 + 0.5, 25.0, _, _, 0, 0);
	CreateDynamic3DTextLabel("** Прием на работу **", col_blue, 2008.76, 1325.65, 1501.09 + 0.5, 25.0, _, _, 1, _, INTERIOR_ID_PHOTOGRHAPHER);
	CreateDynamic3DTextLabel("** Выдача фотоаппарата **", col_blue, 2006.7930, 1328.4233, 1501.5229 + 0.5, 25.0, _, _, 1, _, INTERIOR_ID_PHOTOGRHAPHER);

	//--------------------------------------------photographer --------------------------------------------------------------------------

	new iterator_photographer = 0;
	do
	{
		CreateActor(actor_pos_photographer_quest[iterator_photographer][skin_id],
					actor_pos_photographer_quest[iterator_photographer][x_pos_actor],
					actor_pos_photographer_quest[iterator_photographer][y_pos_actor],
					actor_pos_photographer_quest[iterator_photographer][z_pos_actor],
					actor_pos_photographer_quest[iterator_photographer][angle_actor]);

		CreateDynamic3DTextLabel(three_text_above_actor[iterator_photographer][three_dtaaText],
								 col_blue,
								 three_text_above_actor[iterator_photographer][three_dtaaX],
								 three_text_above_actor[iterator_photographer][three_dtaaY],
								 three_text_above_actor[iterator_photographer][three_dtaaZ] + 0.5,
								 25.0);
		iterator_photographer++;
	}
	while(iterator_photographer < sizeof(actor_pos_photographer_quest));

	new actor_id_love_photographer[2];



	actor_id_love_photographer[0] = CreateActor(92,
											    2002.3689,
											    1543.0526,
											    13.5859,
											    3.3800);

	actor_id_love_photographer[1] = CreateActor(290,
											    2002.3778,
											    1543.3760,
											    13.5859,
											    178.5272);

	ApplyActorAnimation(actor_id_love_photographer[0], "KISSING","null",0.0,0,0,0,0,0);
	ApplyActorAnimation(actor_id_love_photographer[1], "KISSING","null",0.0,0,0,0,0,0);

	ApplyActorAnimation(actor_id_love_photographer[0], "KISSING", "Playa_Kiss_02", 4.1, 1, 1, 0, 0, 0);
	ApplyActorAnimation(actor_id_love_photographer[1], "KISSING", "Playa_Kiss_02", 4.1, 1, 1, 0, 0, 0);
	CreateDynamic3DTextLabel("** Любовники ** ",
						     col_blue,
						     2002.1869,
						     1543.2603,
						     15.553,
						     15.0,
						     _,
						     _,
						     1);
	CreateDynamic3DTextLabel("** Печать фотографии **",
							 col_blue,
							 1995.8730,
							 1324.4584,
						     1501.1060 + 0.5,
							 15.0,
							 _,
							 _,
							 1,
							 _,
							 INTERIOR_ID_PHOTOGRHAPHER);
	CreateDynamic3DTextLabel("** Получить зарплату **",
							 col_blue,
						     2003.6134,
							 1328.3624,
							 1501.5229,
							 15.0,
							 _,
							 _,
							 1,
							 _,
							 INTERIOR_ID_PHOTOGRHAPHER);
	CreateDynamic3DTextLabel("** Полная информация о работе фотографа **",
							 col_blue,
						     2001.74,
							 1322.18,
							 1501.09 + 0.5,
							 15.0,
							 _,
							 _,
							 1,
							 _,
							 INTERIOR_ID_PHOTOGRHAPHER);
	//-----------------------------------------------------photographer end --------------------------------------------------------------
	
	/*********/

	CreateAuctionGlobalTextDraws();

	for(new bureau = 0; bureau < MAX_BUREAU; bureau++)
	{
		for(new vehicleid = 0; vehicleid < MAX_AUCTION_CARS; vehicleid++)
		{
			bureauInfo[bureau][vehicleid] = E_BUREAU_INFO__EOS_;
		}
	}

	CreateDynamic3DTextLabelEx("-"c_server"Аукцион"c_silver" -\n"c_grey"Нажмите клавишу "c_white"[ALT]"c_grey" для взаимодействия", col_silver, 1396.0505,-15.1006,1000.9233, 3.0, .worlds = {0, 1, 2}, .interiors = {3});
	CreateDynamic3DTextLabelEx("-"c_server"Аукцион"c_silver" -\n"c_grey"Нажмите клавишу "c_white"[ALT]"c_grey" для взаимодействия", col_silver, 1391.9778,-15.0176,1000.9233, 3.0, .worlds = {0, 1, 2}, .interiors = {3});
	CreateDynamic3DTextLabelEx("-"c_server"Аукцион"c_silver" -\n"c_grey"Нажмите клавишу "c_white"[ALT]"c_grey" для взаимодействия", col_silver, 1393.3925,-12.5843,1000.9233, 3.0, .worlds = {0, 1, 2}, .interiors = {3});
	CreateDynamic3DTextLabelEx("-"c_server"Аукцион"c_silver" -\n"c_grey"Нажмите клавишу "c_white"[ALT]"c_grey" для взаимодействия", col_silver, 1397.2654,-12.5508,1000.9233, 3.0, .worlds = {0, 1, 2}, .interiors = {3});

	CreateDynamic3DTextLabelEx("-"c_server"Аукцион"c_silver" -\n"c_grey"Нажмите клавишу "c_white"[ALT]"c_grey" для взаимодействия", col_silver, -1734.1409,37.3734,3.5547, 3.0);

	bureauExitPick = CreateDynamicPickupEx(19135, 23, 1399.0337,-13.8485,1000.9233, .worlds = {0, 1, 2}, .interiors = {3});
	pick_info[bureauExitPick][pick_type] = pick_type_server;

	bureauSfEnterPick = CreateDynamicPickup(19135, 23, -2332.4890,-152.5884,35.3203);
	pick_info[bureauSfEnterPick][pick_type] = pick_type_server;

	CreateDynamicPickup(19134, 23, -1734.1409,37.3734,3.5547);
	
	for(new i = 0; i < sizeof(object_park_ls); i++) {
        object_park_ls[i] = CreateDynamicObject(14468, check_job_mower[i][0], check_job_mower[i][1], check_job_mower[i][2], check_job_mower[i][3],
							check_job_mower[i][4], check_job_mower[i][5], -1, -1);
        status_check_job_mower[i] = false;
	}
	
	return 1;
}

public OnGameModeExit()
{
    new query_string[256];

	for(new i = 0; i < MAX_AUCTION_CARS * MAX_BUREAU; i++)
	{
		if(portInfo[i][bRaterID] == -1) continue;

		format(query_string, sizeof query_string, "INSERT INTO `auction_cars` (`id`, `active`, `model`, `color1`, `color2`, `current_rate` \
		`auction_price`, `strength`, `mileage`, `tuning`, `p_tuning`, `winner_id`, `winner`, `delivery_time`, `time` VALUES \
		('%d', '%b', '%d', '%d', '%d', '%d', '%d', '%d', '%b', '%b', '%d', '%s', '%d', '%d') ON DUPLICATE KEY UPDATE `color1` = `color1`",
		i, portInfo[i][bActive], portInfo[i][bCarModel], portInfo[i][bColor1], portInfo[i][bColor2], portInfo[i][bCurrentRate], portInfo[i][bAuctionPrice],
		portInfo[i][bStrengthPercentage], portInfo[i][bMileage], portInfo[i][bTuning], portInfo[i][bPTuning], portInfo[i][bRaterID],
		portInfo[i][bRateInitiator], portInfo[i][bDeliveryTime], portInfo[i][bTime]);

		mysql_query(sql_connection, query_string);
	}
	
	return mysql_close(sql_connection);
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	return 1;
}

public OnQueryError(errorid, error[], callback[], query[], connectionHandle)
{
	print ("[OnQueryError] SQL ERROR. QUERY:");
	printf("0) OnQueryError | error: %s", error);
	printf("1) OnQueryError | callback: %s", callback);
	printf("2) OnQueryError | query: %s", query);
	printf("3) OnQueryError | errorid: %d", errorid);
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	#if defined debug_mode
		printf("[DEBUG] [OnDialogResponse] playerid:%d | dialogid:%d | listitem:%d | p_t_info:%d", playerid, dialogid, listitem, p_t_info[playerid][p_dialog]);
	#endif
	for(new i=0;i<strlen(inputtext);i++)if(inputtext[i] =='%')inputtext[i]='#';
	while(strfind(inputtext,"%s",true)!=-1) strdel(inputtext,strfind(inputtext,"%s",true),strfind(inputtext,"%s",true)+2);
	while(strfind(inputtext,"%",true)!=-1) strdel(inputtext,strfind(inputtext,"%",true),strfind(inputtext,"%",true)+2);

	if((vk_checking {playerid} == 1 && dialogid != d_vk_entrance) || (google_checking {playerid} == 1 && dialogid != d_googleauth_entrance)) return 1;

	if(p_t_info[playerid][p_dialog] != dialogid)
	{
		p_t_info[playerid][p_dialog] = -1;
		return 1;
	}
	p_t_info[playerid][p_dialog] = -1;

    switch(dialogid)
    {
        case d_job_gazon: {
		   	if(!response) return RemovePlayerFromVehicle(playerid);
			if(PlayerInfo[playerid][money] < 150) {
				SendClientMessage(playerid, -1, "У Вас не достаточно денег для аренды авто газонокосильщика");
				RemovePlayerFromVehicle(playerid);
				return 0;
			}
			if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return true;
			give_money(playerid, -150);
			player_rentcar[playerid] = GetPlayerVehicleID(playerid);
			veh_info[player_rentcar[playerid]][v_owner] = playerid;
		    SetPVarInt(playerid, "start_job_mower",1);
		    SendClientMessage(playerid, -1, "Вы начали рабочий день. Выберите зону для работы");
		    pc_cmd_zonestatus(playerid);
		   	SetPVarInt(playerid, "veh_id_cleaner",GetPlayerVehicleID(playerid));
		}
		case d_job_gazon_2: {
		    if(!response) return 1;
		    switch(listitem) {
		        case 0: {
		            SendClientMessage(playerid, -1, "Вы выбрали таксопарк Лос-Сантос.");
		            SetPlayerRaceCheckpoint(playerid, 1, 1161.606689, -1724.153809, 12.916358, 0.0, 0.0, 0.0, 2.0);
		            is_gps_used{playerid} = 1;
		        }
		        case 1: {
		            SendClientMessage(playerid, -1, "Вы выбрали пляж Verona Beach.");
		            SetPlayerRaceCheckpoint(playerid, 1, 484.773346, -1783.324585, 5.595574, 0.0, 0.0, 0.0, 2.0);
		            is_gps_used{playerid} = 1;
		        }
		        case 2: {
		            SendClientMessage(playerid, -1, "Вы выбрали больницу Лос-Сантос.");
		            SetPlayerRaceCheckpoint(playerid, 1, 1220.061279, -1295.611450, 12.820630, 0.0, 0.0, 0.0, 2.0);
		            is_gps_used{playerid} = 1;
		        }
		        case 3: {
		            SendClientMessage(playerid, -1, "Вы выбрали мэрию Лос-Сантос.");
		            SetPlayerRaceCheckpoint(playerid, 1, 1484.405396, -1701.025513, 12.723542, 0.0, 0.0, 0.0, 2.0);
		            is_gps_used{playerid} = 1;
		        }
		        case 4: {
		            SendClientMessage(playerid, -1, "Вы выбрали Глен-парк №1.");
		            SetPlayerRaceCheckpoint(playerid, 1, 1867.358276, -1246.167114, 13.221643, 0.0, 0.0, 0.0, 2.0);
		            is_gps_used{playerid} = 1;
		        }
		        case 5: {
		            SendClientMessage(playerid, -1, "Вы выбрали Глен-парк №2.");
		            SetPlayerRaceCheckpoint(playerid, 1, 2052.105957, -1248.333984, 23.101965, 0.0, 0.0, 0.0, 2.0);
		            is_gps_used{playerid} = 1;
		        }
			}
		}
        case d_shop_phone:
        {
            if(!response) return ShowElectronicDialog(playerid);
            new b = GetPVarInt(playerid, "p_biz_id")-1;
            new scm_string[128];
            
            switch(listitem)
            {
                case 0:
                {
                    if(PlayerInfo[playerid][phone_selected] == 1) return SendClientMessage(playerid, col_white, !""scm_error"У вас уже есть Samsung S20.");
                    
					format(scm_string, sizeof(scm_string), ""scm_sucess"Вы успешно приобрели смартфон -Samsung S20 за "c_green"%d$"c_white".", b_electro_price[1] + floatround(b_electro_price[1]*(float(b_info[b][b_cost]) / 100)));
					SendClientMessage(playerid, col_white, scm_string);

                    PlayerInfo[playerid][phone_selected] = 1;

					p_t_info[playerid][phone_toggled] = true;
					PlayerInfo[playerid][phone_balance] = 20;
                }
                case 1:
                {
                	if(PlayerInfo[playerid][phone_selected] == 2) return SendClientMessage(playerid, col_white, !""scm_error"У вас уже есть iPhone X.");

					format(scm_string, sizeof(scm_string), ""scm_sucess"Вы успешно приобрели смартфон -iPhone X за "c_green"%d$"c_white".", b_electro_price[2] + floatround(b_electro_price[2]*(float(b_info[b][b_cost]) / 100)));
					SendClientMessage(playerid, col_white, scm_string);

                    PlayerInfo[playerid][phone_selected] = 2;

					p_t_info[playerid][phone_toggled] = true;
					PlayerInfo[playerid][phone_balance] = 20;
                }
            }
			new query_string[96];
			format(query_string, sizeof(query_string), "UPDATE `users` SET `u_phone` = '%d' WHERE `u_id` = '%d' LIMIT 1", PlayerInfo[playerid][phone_selected], PlayerInfo[playerid][id]);
			mysql_query(sql_connection, query_string);
        }
        case d_electroshop:
        {
			if(!response) return 1;

			switch(listitem)
			{
				case 0:
				{
				    new b = GetPVarInt(playerid, "p_biz_id")-1;
				
				    new scm_string[178];
				
				    format(scm_string, sizeof(scm_string), "\
				    "c_white"Товар:\t"c_white"Цена:\n\
					"c_server"1 |"c_white" Samsung S20\t"c_green"%d$\n\
					"c_server"2 |"c_white" iPhone X\t"c_green"%d$",
					b_electro_price[1] + floatround(b_electro_price[1]*(float(b_info[b][b_cost]) / 100)),
					b_electro_price[2] + floatround(b_electro_price[2]*(float(b_info[b][b_cost]) / 100)));
				
                    show_dialog(playerid, d_shop_phone, DIALOG_STYLE_TABLIST_HEADERS, !""scm_dialog"Покупка мобильного телефона", scm_string, !"Изменить", !"Назад");

				}
				case 1:
				{
					if(PlayerInfo[playerid][phone_selected] == 0) return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет мобильного телефона."), ShowElectronicDialog(playerid);
					show_dialog(playerid, d_shop_sim, DIALOG_STYLE_INPUT, !""scm_dialog"Покупка SIM-карты", !""c_white"Введите ваш новый номер телефона:", !"Изменить", !"Назад");
					return 1;
				}
			}
		}
	    case d_offleaders:
		{
			if(!response)
			{
				for(new i = 0; i < 10; i++)
				{
					new pvar_string[8];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", i);
					DeletePVar(playerid, pvar_string);
				}
				DeletePVar(playerid, !"ofm_list_page");
				DeletePVar(playerid, !"ofm_listitem");
				DeletePVar(playerid, !"ofm_type");
				return DeletePVar(playerid, !"ofm_list_rows");
			}
			switch(listitem)
			{
				case 0:
				{
					new page_id = GetPVarInt(playerid, !"ofm_list_page") -1;
					if(page_id == 0)
					{
						SendClientMessage(playerid, col_white, !""scm_error"Вы находитесь на первой странице списка лидеров.");
						if(!GetPVarInt(playerid, !"ofm_type"))
						{
							mysql_tquery(sql_connection, "SELECT `u_name`,`u_last_date`,`u_leader` FROM `users` WHERE `u_leader`>'0'", "callback_offleaders", "i", playerid);
							return 1;
						}
						return 1;
					}
					SetPVarInt(playerid, !"ofm_list_page", page_id);

					if(!GetPVarInt(playerid, !"ofm_type"))
					{
						mysql_tquery(sql_connection, "SELECT `u_name`,`u_last_date`,`u_leader` FROM `users` WHERE `u_leader`>'0'", "callback_offleaders", "i", playerid);
						return 1;
					}
				}
				case 1:
				{
					new page_id = GetPVarInt(playerid, !"ofm_list_page") -1;
					if((page_id * 10) + 1 >= GetPVarInt(playerid, !"ofm_list_rows"))
					{
						SendClientMessage(playerid, col_white, !""scm_error"Вы находитесь на последней странице списка лидеров.");
						if(!GetPVarInt(playerid, !"ofm_type"))
						{
							mysql_tquery(sql_connection, "SELECT `u_name`,`u_last_date`,`u_leader` FROM `users` WHERE `u_leader`>'0'", "callback_offleaders", "i", playerid);
							return 1;
						}
						return 1;
					}
					SetPVarInt(playerid, !"ofm_list_page", page_id + 2);

					if(!GetPVarInt(playerid, !"ofm_type"))
					{
						mysql_tquery(sql_connection, "SELECT `u_name`,`u_last_date`,`u_leader` FROM `users` WHERE `u_leader`>'0'", "callback_offleaders", "i", playerid);
						return 1;
					}
				}
				default:
				{
					new pvar_string[38], pl_name[MAX_PLAYER_NAME];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", listitem -2);
					GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);
					SetPVarInt(playerid, !"ofm_listitem", listitem -2);

					show_dialog_offpanel(playerid, pl_name, 1);
				}
			}
			return 1;
		}
		case d_offleaders_menu:
		{
			if(!response)
			{
				DeletePVar(playerid, !"ofm_listitem");
				if(!GetPVarInt(playerid, !"ofm_type"))
				{
					mysql_tquery(sql_connection, "SELECT `u_name`,`u_last_date`,`u_leader` FROM `users` WHERE `u_leader`>'0'", "callback_offleaders", "i", playerid);
					return 1;
				}
				return 1;
			}
			switch(listitem)
			{
				case 0:
				{
					new pvar_string[38], pl_name[MAX_PLAYER_NAME];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

					new tquery_string[128];
					mysql_format(sql_connection, tquery_string, sizeof(tquery_string), "SELECT `u_leader`,`u_fraction_date`,`u_last_date` FROM `users` WHERE `u_name`='%s' LIMIT 1", pl_name);
					mysql_tquery(sql_connection, tquery_string, "callback_offleaders_info", "i", playerid);
				}
				case 1:
				{
					new pvar_string[45], pl_name[MAX_PLAYER_NAME];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);
					format(pvar_string, sizeof(pvar_string), ""scm_dialog"%s", pl_name);

					new _pl_id, query_string[128];
					sscanf(pl_name, "u", _pl_id);
					if(IsPlayerConnected(_pl_id))
					{
						PlayerInfo[_pl_id][leader] = PlayerInfo[_pl_id][member] = PlayerInfo[_pl_id][rank] = 0;

						format(query_string, sizeof(query_string), "Администратор "c_server"%s"c_white" снял Вас с должности лидера", PlayerInfo[playerid][name]);
						SendClientMessage(_pl_id, col_white, query_string);
					}

					format(query_string, sizeof(query_string), "UPDATE `users` SET `u_member`='0',`u_leader`='0',`u_rank`='0' WHERE `u_name`='%s' LIMIT 1", pl_name);
					mysql_query(sql_connection, query_string);

					format(query_string, sizeof(query_string), ""scm_info"Вы сняли "c_server"%s"c_white" с должности лидера", pl_name);
					SendClientMessage(playerid, col_white, query_string);

					format(query_string, sizeof(query_string), ""c_server"A.INFO:"c_grey" %s[%d] снял с должности лидера игрока %s", PlayerInfo[playerid][name], playerid, pl_name);
					foreach(new i: admin_players) SendClientMessage(i, col_gray, query_string);

					DeletePVar(playerid, !"ofm_listitem");
					if(!GetPVarInt(playerid, !"ofm_type"))
					{
						mysql_tquery(sql_connection, "SELECT `u_name`,`u_last_date`,`u_leader` FROM `users` WHERE `u_leader`>'0'", "callback_offleaders", "i", playerid);
						return 1;
					}
				}
				case 2: SendClientMessage(playerid, col_white, !""scm_error"Временно недоступно.");
				case 3:
				{
					new pvar_string[38], pl_name[MAX_PLAYER_NAME];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

					new clf_string[25];
					format(clf_string, sizeof(clf_string), "%s", pl_name);
					pc_cmd_offget(playerid, clf_string);

					DeletePVar(playerid, !"ofm_list_page");
					DeletePVar(playerid, !"ofm_listitem");
				}
			}
		}
		case d_offleaders_menu_info:
		{
			new pvar_string[38], pl_name[MAX_PLAYER_NAME];
			format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
			GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

			show_dialog_offpanel(playerid, pl_name, 1);
		}
		case d_promo_list:
		{
			if(!response) return 1;

			if(listitem == 0)
			{
				show_dialog(playerid, d_promo_list_enter, DIALOG_STYLE_INPUT, "Создание промокода", ""c_white"Пожалуйста, введите название нового промокода. Например: "c_red"#mavi", "Enter", "Назад");
			}
			else
			{
				mysql_tquery(sql_connection, "SELECT * FROM server_promocodes ORDER BY `promo_id`", "PromocodeSettings", "dd", playerid, listitem-1);
			}
		}

		case d_promo_list_enter:
		{
			if(!response) return callcmd::promocodelist(playerid);

			if(!(4 < strlen(inputtext) < 12))
			{
				SendClientMessage(playerid, col_gray, !"Слишком короткое/длинное название (от 4 до 12)");
				return show_dialog(playerid, d_promo_list_enter, DIALOG_STYLE_INPUT, "Создание промокода", ""c_white"Пожалуйста, введите название нового промокода. Например: "c_red"#mavi", "Enter", "Назад");
			}

			new query_string[69];
			format(query_string, sizeof query_string, "SELECT * FROM `server_promocodes` WHERE `promo_text` = '%s'", inputtext);
			mysql_tquery(sql_connection, query_string, "CreatePromocode", "ds", playerid, inputtext);
		}

		case d_promo_settings:
		{
			if(!response) return callcmd::promocodelist(playerid);

			if(listitem == 0)
			{
				return show_dialog(playerid, d_promo_edit, DIALOG_STYLE_INPUT, "Редактирование промокода", ""c_white"Пожалуйста, введите название нового промокода. Например: "c_red"#mavi", "Enter", "Назад");
			}
			else if(listitem == 1)
			{
				new query_string[65];
				format(query_string, sizeof query_string, "DELETE FROM server_promocodes WHERE promo_id = '%d'", GetPVarInt(playerid, !"sel_promo_id"));
				mysql_tquery(sql_connection, query_string);

				DeletePVar(playerid, !"sel_promo_id");
				SendClientMessage(playerid, col_green, !"Промокод удален");
				return callcmd::promocodelist(playerid);
			}
		}

		case d_promo_edit:
		{
			if(!response) return true;

			if(!(4 < strlen(inputtext) < 12))
			{
				SendClientMessage(playerid, col_gray, !"Слишком короткое/длинное название (от 4 до 12)");
				return show_dialog(playerid, d_promo_edit, DIALOG_STYLE_INPUT, "Редактирование промокода", ""c_white"Пожалуйста, введите название нового промокода. Например: "c_red"#mavi", "Enter", "Назад");
			}

			new query_string[65];
			format(query_string, sizeof query_string, "SELECT * FROM server_promocodes WHERE promo_text = '%s'", inputtext);
			mysql_tquery(sql_connection, query_string, "EditPromocode", "dds", playerid, GetPVarInt(playerid, !"sel_promo_id"), inputtext);
		}
        case d_redpanel:
		{
			if(!response) return true;

			switch(listitem)
			{
				case 0:
				{
					mysql_tquery(sql_connection, !"DELETE FROM `users_bans`");
					return SendClientMessage(playerid, col_light_red, !"Все забаненные аккаунты разбанены");
				}
				case 1:
				{
					SendRconCommand("unbanip *.*.*.*");
					SendRconCommand("reloadbans");
					return SendClientMessage(playerid, col_light_red, !"Все забаненные IP адреса разбанены");
				}
				case 2:
				{
					mysql_tquery(sql_connection, !"UPDATE `users_warns` SET `w_end` = NOW() WHERE `w_end` > NOW()");
					return SendClientMessage(playerid, col_light_red, !"Все заварненные аккаунты разварнены");
				}
				case 3:
				{
					mysql_tquery(sql_connection, !"UPDATE `users` SET `u_wanted` = '0', `u_bail` = '0', `u_jail` = '0', `u_jailed` = '0' WHERE `u_jailed` > '0'");

					foreach(new i : logged_players)
					{
						if(PlayerInfo[i][jailed] > 2)
						{
							PlayerInfo[i][jailed] = 2;
							PlayerInfo[i][bail] =
							PlayerInfo[i][jail] =
							PlayerInfo[i][wanted] = 0;
						}
					}

					return SendClientMessage(playerid, col_light_red, !"Все игроки были выпущены из тюрьмы");
				}
				case 4:
				{
					new params[7];
					for(new i = 1; i < house_count; i++)
					{
						if(h_info[i-1][h_owner] == -1) continue;

						format(params, sizeof params, "%d 0", i);
						pc_cmd_asellhouse(playerid, params);
					}
					return SendClientMessage(playerid, col_light_red, !"Все дома на сервере были проданы государству");
				}
				case 5:
				{
					new params[7];
					for(new i = 1; i < b_count; i++)
					{
						if(b_info[i-1][b_owner_inc] == -1) continue;

						format(params, sizeof params, "%d 0", i);
						pc_cmd_asellbiz(playerid, params);
					}
					return SendClientMessage(playerid, col_light_red, !"Все бизнесы на сервере были проданы государству");
				}
				case 6:
				{
					return SendClientMessage(playerid, col_light_red, !"В разработке");
				}
				case 7:
				{
					pay_day_time();
					return SendClientMessage(playerid, col_light_red, !"Выдан досрочный PayDay");
				}
				case 8:
				{
					return show_dialog(playerid, d_redpanel_distribute, DIALOG_STYLE_LIST, !""scm_dialog"Распределение", !""c_white"1 | "c_silver"Распределить гетто\n"c_white"2 | "c_silver"Распределить бизнесы", !"Выбрать", !"Назад");
				}
				case 9:
					return pc_cmd_rr(playerid);
			}
		}

		case d_redpanel_distribute:
		{
			if(!response) return pc_cmd_redpanel(playerid);

			if(listitem == 0) return pc_cmd_distributeghetto(playerid);
			else if(listitem == 1) return pc_cmd_distributemafia(playerid);
		}
    	case d_afainfo:
		{
			if(!response) return 1;
			new target = GetPVarInt(playerid, "offline_target_id"),
				target_name[MAX_PLAYER_NAME -3];
			GetPVarString(playerid, "offline_target", target_name, sizeof target_name);

			switch(listitem)
			{
				case 0:
				{
					new query_string[50];
					format(query_string, sizeof query_string, "SELECT * FROM `users` WHERE `u_id` = '%d'", target);
					mysql_tquery(sql_connection, query_string, "GetOfflineStats", "i", playerid);
				}
				case 1: pc_cmd_offget(playerid, target_name);
				case 2:
				{
					new query_string[55];
					format(query_string, sizeof query_string, "SELECT * FROM `users_warns` WHERE `w_owner` = '%d'", target);
					mysql_tquery(sql_connection, query_string, "warnlist_callback", "i", playerid);
				}
				case 3: pc_cmd_banhistory(playerid, target_name);
				case 4: pc_cmd_offmoneylog(playerid, target_name);

			}
		}
        case d_gzowner:
        {
            if(!response) return 1;
            
            new gz_owner_t;
            
            switch(listitem)
            {
				case 0: gz_owner_t = 18;
				case 1: gz_owner_t = 19;
				case 2: gz_owner_t = 20;
				case 3: gz_owner_t = 21;
				case 4: gz_owner_t = 22;
            }
            
            switch(listitem)
            {
                case 0..4:
                {
                    for(new i = 0; i < gz_count; i ++)
					{
						if(IsPlayerInGangZone(playerid, i))
						{
							gz_info[i][gz_owner] = gz_owner_t;
							GangZoneHideForAll(gz_info[i][gz_created]);
							GangZoneShowForAll(gz_info[i][gz_created], GetGangZoneColor(gz_info[i][gz_owner]));
							SaveGangZone(i);
							break;
						}
					}
                }
            }
        }
        case d_b_story: show_bpanel(playerid);
		case d_car_take:
		{
			if(!response) return true;

			new i = 0;

			for(new count = 0; i < sizeof(portInfo); i++)
				if(portInfo[i][bRaterID] == PlayerInfo[playerid][id])
					if(++count == listitem + 1) break;

			selectedCar[playerid] = i;

			new caption[32] = ""scm_dialog"";
			strcat(caption, vehicle_name[portInfo[selectedCar[playerid]][bCarModel] -400]);

			show_dialog(playerid, d_car_take_2, DIALOG_STYLE_LIST, caption, ""c_server"1 |"c_white" Информация\n"c_server"2 |"c_white" Забрать\n"c_server"3 |"c_white" Продать", "Выбрать", "Назад");
			return 1;
		}
		case d_car_take_2:
		{
			if(!response)
			{
				new text[33 * 18];

				for(new i = 0; i < sizeof(portInfo); i++)
				{
					if(portInfo[i][bRaterID] != PlayerInfo[playerid][id]) continue;

					strcat(text, vehicle_name[portInfo[i][bCarModel] -400]);
					strcat(text, "\t\t\t");
					strcat(text, portInfo[i][bActive] ? ""c_green"Доставлен" : ""c_red"Не доставлен");
					strcat(text, "\n");
				}
				if(isnull(text)) return SendClientMessage(playerid, col_white, !""scm_error"В ордере не найдены ваши заказы");

				return show_dialog(playerid, d_car_take, DIALOG_STYLE_LIST, !""scm_dialog"Порт", text, !"Выбрать", !"Выйти");
			}

			switch(listitem)
			{
				case 0: 
				{
					static const shablon[] = ""c_white"Название:\t\t\t"c_server"%s\n\
							"c_white"Год выпуска:\t\t\t"c_server"19%d\n\
							"c_white"Гос. цена:\t\t\t"c_green"%d$\n\
							"c_white"Цена в аукционе:\t\t"c_green"%d$\n\
							"c_white"Цена приобретения:\t\t"c_green"%d$\n\
							"c_white"Макс. скорость:\t\t"c_server"%d км/ч\n\
							"c_white"Пробег:\t\t\t"c_server"%d км\n\
							"c_white"Тюнинг:\t\t\t%s\n\
							"c_white"Perfomance:\t\t\t%s\n\
							"c_white"Дата доставки:\t\t\t"c_server"%02d.%02d.%04d %02d:%02d:%02d";

					new body[sizeof shablon + 12 + 53], veh = selectedCar[playerid],
						year, month, day, hour, minute, second, caption[34] = ""scm_dialog" ";

					strcat(caption, vehicle_name[portInfo[veh][bCarModel] -400]);

					gmtime(portInfo[veh][bDeliveryTime], year, month, day, hour, minute, second);

					format(body, sizeof body, shablon, vehicle_name[portInfo[veh][bCarModel] -400],
																	portInfo[veh][bStrengthPercentage],
																	portInfo[veh][bSalonPrice],
																	portInfo[veh][bAuctionPrice],
																	portInfo[veh][bCurrentRate],
																	portInfo[veh][bMaxSpeed],
																	portInfo[veh][bMileage],
																	(portInfo[veh][bTuning]) ? ""c_green"Есть" : ""c_red"Нет",
																	(portInfo[veh][bPTuning]) ? ""c_green"Есть" : ""c_red"Нет",
																	day, month, year, hour, minute, second);

					show_dialog(playerid, d_none, DIALOG_STYLE_LIST, caption, body, "Закрыть", "");
				}
				case 1:
				{
					new veh = selectedCar[playerid];

					if(!portInfo[veh][bActive]) return SendClientMessage(playerid, col_white, !""scm_error"Транспорт ещё не доставлен");
					new veh_id = CreateVehicle(portInfo[veh][bCarModel], PortCarSpawns[veh][0], PortCarSpawns[veh][1], PortCarSpawns[veh][2],
					270.0, portInfo[veh][bColor1], portInfo[veh][bColor2], -1);

					veh_info[veh_id -1][v_model] = GetVehicleModel(veh_id);

					new query_string[226];
					mysql_format(sql_connection, query_string, sizeof(query_string), "INSERT INTO `users_vehicles`(`v_model`,`v_owner`,`v_color_1`,`v_color_2`,`v_pos_x`,`v_pos_y`,`v_pos_z`,`v_pos_a`,`v_buydate`) VALUES('%d','%d','%d','%d','%f','%f','%f','%f',NOW())", GetVehicleModel(veh_id), PlayerInfo[playerid][id], portInfo[veh][bColor1], portInfo[veh][bColor2], PortCarSpawns[veh][0], PortCarSpawns[veh][1], PortCarSpawns[veh][2], 270.0);
					mysql_tquery(sql_connection, query_string, "create_vehicle_callback", "dd", veh_id, playerid);

					veh_info[veh_id -1][v_type] = vehicle_type_player;
					veh_info[veh_id -1][v_owner] = PlayerInfo[playerid][id];
					veh_info[veh_id -1][v_vehicle] = veh_id;
					veh_info[veh_id -1][v_health] = portInfo[veh][bStrengthPercentage];

					veh_info[veh_id -1][v_color][0] = portInfo[veh][bColor1];
					veh_info[veh_id -1][v_color][1] = portInfo[veh][bColor2];

					format(veh_info[veh_id -1][v_plate], 12, "Transit");

					veh_info[veh_id -1][v_pos][0] = PortCarSpawns[veh][0];
					veh_info[veh_id -1][v_pos][1] = PortCarSpawns[veh][1];
					veh_info[veh_id -1][v_pos][2] = PortCarSpawns[veh][2];
					veh_info[veh_id -1][v_pos][3] = 270.0;

					veh_info[veh_id -1][v_fuel] = 100.0;
					veh_info[veh_id -1][v_millage] = 0.0;
					veh_info[veh_id -1][v_fine] = 3;

					veh_info[veh_id -1][v_locked] = true;

					new engine, lights, alarm, doors, bonnet, boot, objective;
					GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(veh_id, engine, lights, alarm, true, bonnet, boot, objective);

					Iter_Add(player_vehicles[playerid], veh_info[veh_id -1][v_vehicle]);

					if(portInfo[veh][bTuning])
					{
						new component = VehicleComponents[1 + random(sizeof(VehicleComponents) -1)];
						AddVehicleComponent(veh_id, component);
						veh_info[veh_id -1][v_component][0] = component;

						for(new i = 0; i < 2; i++)
						{
							component = VehicleComponents[random(sizeof VehicleComponents)];
							if(component != 0)
							{
								AddVehicleComponent(veh_id, component);
								veh_info[veh_id -1][v_component][i + 1] = component;
							}
						}
					}

					SendClientMessage(playerid, col_white, !""scm_sucess"Транспорт доставлен. Поздравляем с приобретением!");

					format(query_string, sizeof query_string, "DELETE FROM `auction_cars` WHERE `id` = '%d'", selectedCar[playerid]);
					mysql_tquery(sql_connection, query_string);

					selectedCar[playerid] = -1;
					ClearVehInfo(veh);
				}
				case 2:
				{
					new caption[31] = ""scm_dialog"", body[128];

					strcat(caption, vehicle_name[portInfo[selectedCar[playerid]][bCarModel] -400]);
					format(body, sizeof body, ""c_white"Вы действительно хотите продать "c_server"%s "c_white"за "c_green"%d$"c_white"?",
					vehicle_name[portInfo[selectedCar[playerid]][bCarModel] -400], portInfo[selectedCar[playerid]][bSalonPrice] / 2);

					return show_dialog(playerid, d_auc_sellcar, DIALOG_STYLE_MSGBOX, caption, body, !"Продать", !"Закрыть");
				}
			}
		}
		case d_auc_sellcar:
		{
			if(!response) return 1;

			PlayerInfo[playerid][money] += portInfo[selectedCar[playerid]][bSalonPrice] / 2;
			GivePlayerMoney(playerid, portInfo[selectedCar[playerid]][bSalonPrice] / 2);
			SendClientMessage(playerid, col_white, !""scm_sucess"Транспорт успешно продан");

			ClearVehInfo(selectedCar[playerid]);
			selectedCar[playerid] = -1;

			return 1;
		}
        case d_to_do_rate:
        {
        	if(response)
			{
				if(!bureauInfo[PlayerInfo[playerid][pBureau]][PlayerInfo[playerid][pCurrentTake]][bActive])
					return SendClientMessage(playerid, col_white, !""scm_error"Данный аукцион уже закончен.");

				new new_rate = strval(inputtext),
					bureau = PlayerInfo[playerid][pBureau],
					vehicle = PlayerInfo[playerid][pCurrentTake];

				if(new_rate > PlayerInfo[playerid][money])
					return SendClientMessage(playerid, col_white, !""scm_error"У вас недостаточно средств.");

				if(new_rate < bureauInfo[bureau][vehicle][bAuctionPrice] || new_rate <= bureauInfo[bureau][vehicle][bCurrentRate])
					return SendClientMessage(playerid, col_white, !""scm_error"Сумма меньше чем цена автомобиля / предыдущая ставка.");

				{
					new currentRater = GetPlayerID(bureauInfo[bureau][vehicle][bRateInitiator]);
					if(currentRater == playerid) return SendClientMessage(playerid, col_white, !""scm_sucess"Вашу ставку ещё не перебили.");
					if(IsPlayerConnected(currentRater))
					{
						static const fmt_str[] = "[LOT: %d] "c_white"%s {F6A904}перебил Вашу ставку.";
						new message[sizeof fmt_str + MAX_PLAYER_NAME -4];
						format(message, sizeof message, fmt_str, vehicle + 1, PlayerInfo[playerid][name]);

						give_money(currentRater, bureauInfo[bureau][vehicle][bCurrentRate]);
						SendClientMessage(currentRater, COLOR_GOLD, message);
					}
					else
					{
						static const fmt_str[] = "{BC2C2C}[Offline Info] "c_white"%s перебил Вашу ставку! [LOT: %d].";
						new message[sizeof fmt_str + MAX_PLAYER_NAME -4], query_string[85 + sizeof message];
						format(message, sizeof message, fmt_str, PlayerInfo[playerid][name], vehicle + 1);

						format(query_string,sizeof(query_string),"UPDATE `users` SET `u_money` = `u_money` + %d, `u_offmsg_1` = CONCAT(COALESCE(`u_offmsg_1`, ''), '%s', ';') WHERE `u_id` = '%d' LIMIT 1",
								bureauInfo[bureau][vehicle][bCurrentRate], message, bureauInfo[bureau][vehicle][bRaterID]);

						mysql_tquery(sql_connection, query_string, "", "");
					}
				}
				bureauInfo[bureau][vehicle][bCurrentRate] = new_rate;
				give_money(playerid, new_rate);

				strfmt(bureauInfo[bureau][vehicle][bRateInitiator], PlayerInfo[playerid][name]);
				bureauInfo[bureau][vehicle][bRaterID] = PlayerInfo[playerid][id];

				SendClientMessage(playerid, col_white, !""scm_sucess"Ставка успешно установлена");

				if(bureauInfo[bureau][vehicle][bTime] < 60) bureauInfo[bureau][vehicle][bTime] += 30;
			}
		}
    	case d_offadmins:
		{
			if(!response)
			{
				for(new i = 0; i < 10; i ++)
				{
					new pvar_string[8];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", i);
					DeletePVar(playerid, pvar_string);
				}
				DeletePVar(playerid, !"ofm_list_page");
				DeletePVar(playerid, !"ofm_listitem");
				DeletePVar(playerid, !"ofm_type");
				return DeletePVar(playerid, !"ofm_list_rows");
			}
			switch(listitem)
			{
				case 0:
				{
					new page_id = GetPVarInt(playerid, !"ofm_list_page") -1;
					if(page_id == 0)
					{
						SendClientMessage(playerid, col_white, !""scm_error"Вы находитесь на первой странице списка администрации.");
						if(!GetPVarInt(playerid, !"ofm_type"))
						{
							mysql_tquery(sql_connection, "SELECT `u_a_name`,`u_a_date`,`u_a_level` FROM `users_admins`", "callback_offadmins", "i", playerid);
							return 1;
						}
						return 1;
					}
					SetPVarInt(playerid, !"ofm_list_page", page_id);

					if(!GetPVarInt(playerid, !"ofm_type"))
					{
						mysql_tquery(sql_connection, "SELECT `u_a_name`,`u_a_date`,`u_a_level` FROM `users_admins`", "callback_offadmins", "i", playerid);
						return 1;
					}
				}
				case 1:
				{
					new page_id = GetPVarInt(playerid, !"ofm_list_page") -1;
					if((page_id * 10) + 1 >= GetPVarInt(playerid, !"ofm_list_rows"))
					{
						SendClientMessage(playerid, col_white, !""scm_error"Вы находитесь на последней странице списка администрации.");
						if(!GetPVarInt(playerid, !"ofm_type"))
						{
							mysql_tquery(sql_connection, "SELECT `u_a_name`,`u_a_date`,`u_a_level` FROM `users_admins`", "callback_offadmins", "i", playerid);
							return 1;
						}
						return 1;
					}
					SetPVarInt(playerid, !"ofm_list_page", page_id + 2);

					if(!GetPVarInt(playerid, !"ofm_type"))
					{
						mysql_tquery(sql_connection, "SELECT `u_a_name`,`u_a_date`,`u_a_level` FROM `users_admins`", "callback_offadmins", "i", playerid);
						return 1;
					}
				}
				default:
				{
					new pvar_string[38], pl_name[MAX_PLAYER_NAME];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", listitem -2);
					GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);
					SetPVarInt(playerid, !"ofm_listitem", listitem -2);

					show_dialog_offpanel(playerid, pl_name, 0);
				}
			}
			return 1;
		}
		case d_offadmins_menu:
		{
			if(!response)
			{
				DeletePVar(playerid, !"ofm_listitem");
				if(!GetPVarInt(playerid, !"ofm_type"))
				{
					mysql_tquery(sql_connection, "SELECT `u_a_name`,`u_a_date`,`u_a_level` FROM `users_admins`", "callback_offadmins", "i", playerid);
					return 1;
				}
				return 1;
			}
			switch(listitem)
			{
				case 0:
				{
					new pvar_string[38], pl_name[MAX_PLAYER_NAME];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

					new tquery_string[85];
					mysql_format(sql_connection, tquery_string, sizeof(tquery_string), "SELECT * FROM `users_admins` WHERE `u_a_name`='%s' LIMIT 1", pl_name);
					mysql_tquery(sql_connection, tquery_string, "callback_offadmins_info", "i", playerid);
				}
				case 1:
				{
					new pvar_string[38], pl_name[MAX_PLAYER_NAME];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, "ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);
					format(pvar_string, sizeof(pvar_string), ""scm_dialog"%s", pl_name);

					new query_string[100];
					format(query_string, sizeof(query_string), "DELETE FROM `users_admins` WHERE `u_a_name`='%s' AND `u_a_level`<'8' LIMIT 1", pl_name);
					mysql_query(sql_connection, query_string);

					format(query_string, sizeof(query_string), ""scm_info"Вы сняли "c_server"%s"c_white" с должности администратора", pl_name);
					SendClientMessage(playerid, col_white, query_string);

					DeletePVar(playerid, !"ofm_listitem");
					if(!GetPVarInt(playerid, !"ofm_type"))
					{
						mysql_tquery(sql_connection, "SELECT `u_a_name`,`u_a_date`,`u_a_level` FROM `users_admins`", "callback_offadmins", "i", playerid);
						return 1;
					}
				}
				case 2: show_dialog(playerid, d_offadmins_menu_rank, DIALOG_STYLE_INPUT, !""scm_dialog"Изменение уровня", !""c_white"Введите номер уровня, который хотите установить для администратора:", !"Далее", !"Назад");
				case 3: SendClientMessage(playerid, col_white, !""scm_error"Временно недоступно.");
				case 4:
				{
					new pvar_string[38], pl_name[MAX_PLAYER_NAME];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

					new clf_string[25];
					format(clf_string, sizeof(clf_string), "%s", pl_name);
					pc_cmd_offget(playerid, clf_string);

					DeletePVar(playerid, !"ofm_list_page");
					DeletePVar(playerid, !"ofm_listitem");
				}
			}
		}
		case d_offadmins_menu_rank:
		{
			new pvar_string[38], pl_name[MAX_PLAYER_NAME];
			format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
			GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

			if(!response) return show_dialog_offpanel(playerid, pl_name, 0);
			if(strval(inputtext) < 1 || strval(inputtext) > 5) return show_dialog(playerid, d_offadmins_menu_rank, DIALOG_STYLE_INPUT, !""scm_dialog"Изменение уровня", !""c_grey"Вы указали уровень меньше 1 или больше 5\n"c_white"Введите номер уровня, который хотите установить для администратора:", !"Далее", !"Назад");

			new query_string[115];
			format(query_string, sizeof(query_string), "UPDATE `users_admins` SET `u_a_level`='%d' WHERE `u_a_name`='%s' AND `u_a_level`<'8' LIMIT 1", strval(inputtext), pl_name);
			mysql_query(sql_connection, query_string);

			format(query_string, sizeof(query_string), ""scm_info"Вы изменили уровень "c_server"%s"c_white" на "c_gold"%d-й уровень", pl_name, strval(inputtext));
			SendClientMessage(playerid, col_white, query_string);
		}
		case d_offadmins_menu_info:
		{
			new pvar_string[38], pl_name[MAX_PLAYER_NAME];
			format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
			GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

			show_dialog_offpanel(playerid, pl_name, 0);
		}
    	case d_anticheat_settings: // Главное меню настроект анти-чита
        {
            if(!response) // Если игрок закрыл диалог
            {
                pAntiCheatSettingsPage{playerid} = 0; // Присваиваем значение 0 переменной, хранящей номер страницы настроек анти-чита, на которой находится игрок
                return 1; // Закрываем диалог
            }

            if(!strcmp(inputtext, AC_DIALOG_NEXT_PAGE_TEXT)) // Если игрок нажал на кнопку перелистывания на следующую страницу
            {
                pAntiCheatSettingsPage{playerid}++; // Инкрементируем (прибавляем 1) значение переменной, хранящей номер страницы настроек анти-чита, на которой находится игрок
            }
            else if(!strcmp(inputtext, AC_DIALOG_PREVIOUS_PAGE_TEXT)) // Если игрок нажал на кнопку перелистывания на предыдущую страницу
            {
                pAntiCheatSettingsPage{playerid}--; // Декрементируем (убавляем 1) значение переменной, хранящей номер страницы настроек анти-чита, на которой находится игрок
            }
            else // Если игрко выбрал какой-либо из кодов анти-чита
            {
                pAntiCheatSettingsEditCodeId[playerid] = pAntiCheatSettingsMenuListData[playerid][listitem]; // Присваиваем переменной, хранящей номер кода анти-чита, который редактирует игрок, номер кода, который он выбрал
                return ShowPlayer_AntiCheatEditCode(playerid, pAntiCheatSettingsEditCodeId[playerid]); // Показываем игроку диалог настройки кода анти-чита
            }
            return ShowPlayer_AntiCheatSettings(playerid); // Относится к выбору следующей и предыдущей страницы. Заново показываем игроку главное меню настройки анти-чита.
        }
        case d_anticheat_edit_code: // Меню настройки определённого кода анти-чита
        {
            if(!response) // Если игрок закрыл диалог
            {
                pAntiCheatSettingsEditCodeId[playerid] = -1; // Присваиваем переменной, хранящей идентификатор (ID) кода анти-чита, который редактирует игрок, занчение -1
                return ShowPlayer_AntiCheatSettings(playerid); // Показываем игроку главное меню настроек анти-чита
            }

            new
                item = pAntiCheatSettingsEditCodeId[playerid]; // Создаём локальную переменную item, которая примет значение кода анти-чита, который редактирует игрок

            if(AC_CODE_TRIGGER_TYPE[item] == listitem) // Если игрок пытается присвоить коду уже присвоенный ему тип срабатывания
                return ShowPlayer_AntiCheatSettings(playerid); // Показываем главное меню настроек анти-чита

            AC_CODE_TRIGGER_TYPE[item] = listitem; // Если же игрок выбрал другой тип срабатывания -присваиваем его переменной
            
            new sql_query[101 -4 + 1 + 2];
            format(sql_query, sizeof(sql_query), "UPDATE `anticheat_settings` SET `ac_code_trigger_type` = '%d' WHERE `ac_code` = '%d'", listitem, item);
            mysql_tquery(sql_connection, sql_query, "", "");
            
            return ShowPlayer_AntiCheatSettings(playerid); // Показываем главное меню настроек анти-чита
        }
		case d_clothes_bath:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0:
				{
					if(!PlayerInfo[playerid][gender])
						set_skin(playerid, 18);
					else
						set_skin(playerid, 90);
				}
				case 1:
				{
					if(!PlayerInfo[playerid][gender])
						set_skin(playerid, 45);
					else
						set_skin(playerid, 138);
				}
				case 2:
				{
					if(!PlayerInfo[playerid][gender])
						set_skin(playerid, 97);
					else
						set_skin(playerid, 140);
				}
			}
		}
		case d_pier_delivery_select:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0:
				{
					new fi_ids = family_info[PlayerInfo[playerid][family] -1][fam_house] -1;
					if(PlayerInfo[playerid][family] == 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");
					if(!family_info[PlayerInfo[playerid][family] -1][fam_house]) return SendClientMessage(playerid, col_white, !""scm_error"У Вашей семьи нет семейного острова.");

					new Float:dist = GetPlayerDistanceFromPoint(playerid, fi_info[fi_ids][fi_pos][0], fi_info[fi_ids][fi_pos][1], fi_info[fi_ids][fi_pos][2]);
					new salary_distance = floatround(dist);

					if(PlayerInfo[playerid][money] < salary_distance) return SendClientMessage(playerid, col_white, !""scm_error"У Вас недостаточно средств.");
					SetPVarInt(playerid, !"delivery_human_pier", salary_distance);
					SetPVarInt(playerid, !"delivery_human_time", salary_distance / 20);

					new dialog_string[220];
					format(dialog_string, sizeof(dialog_string), ""c_white"Здравствуйте, вы решили отправиться на семейный остров?\nЕсли действительно желаете это сделать, нажмите \"Далее\"\nСтоимость билета: "c_green"%d$", salary_distance);
					return show_dialog(playerid, d_delivery_human_pier, DIALOG_STYLE_MSGBOX, !""scm_dialog"Пирс", dialog_string, !"Далее", !"Закрыть");
				}
				case 1:
				{
					new fi_ids = family_info[PlayerInfo[playerid][family] -1][fam_house] -1;
					if(PlayerInfo[playerid][family] == 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");
					if(!family_info[PlayerInfo[playerid][family] -1][fam_house]) return SendClientMessage(playerid, col_white, !""scm_error"У Вашей семьи нет семейного острова.");
					if(!fi_info[fi_ids][fi_improve][fi_improve_delivery_car]) return SendClientMessage(playerid, col_white, !""scm_error"Не установлено улучшение \"Доставка транспорта\".");

					new Float:dist = GetPlayerDistanceFromPoint(playerid, fi_info[fi_ids][fi_pos][0], fi_info[fi_ids][fi_pos][1], fi_info[fi_ids][fi_pos][2]);
					new salary_distance = floatround(dist * 2);

					if(PlayerInfo[playerid][money] < salary_distance) return SendClientMessage(playerid, col_white, !""scm_error"У Вас недостаточно средств.");
					SetPVarInt(playerid, !"delivery_car_pier", salary_distance);

					new dialog_string[220];
					format(dialog_string, sizeof(dialog_string), ""c_white"Здравствуйте, вы решили перевезти семейный транспорт на остров?\nЕсли действительно желаете это сделать, нажмите \"Далее\" и выберите транспорт\nСтоимость доставки транспорта: "c_green"%d$", salary_distance);
					return show_dialog(playerid, d_delivery_car_pier, DIALOG_STYLE_MSGBOX, !""scm_dialog"Пирс", dialog_string, !"Далее", !"Закрыть");
				}
			}
		}
		case d_delivery_human_pier:
		{
			if(!response)
			{
				DeletePVar(playerid, !"delivery_human_time");
				return DeletePVar(playerid, !"delivery_human_pier");
			}
			if(PlayerInfo[playerid][money] < GetPVarInt(playerid, !"delivery_human_pier")) return SendClientMessage(playerid, col_white, !""scm_error"У Вас недостаточно средств.");

			give_money(playerid, -GetPVarInt(playerid, !"delivery_human_pier"));
			insert_money_log(playerid, INVALID_PLAYER_ID, -GetPVarInt(playerid, !"delivery_human_pier"), "покупка билета на семейный остров");

			//p_t_info[playerid][p_pier_time] = GetPVarInt(playerid, !"delivery_human_time");
			p_t_info[playerid][p_pier_time] = 15;
			p_t_info[playerid][p_pier_status] = 1;

			new text_string[125];
			format(text_string, sizeof(text_string), ""scm_info"Вы успешно отправились на семейный остров. Примерное время ожидания: "c_silver"%s", convert_time(p_t_info[playerid][p_pier_time]));
			SendClientMessage(playerid, col_white, text_string);

			set_pos(playerid, 2289.6506, 980.4670, 895.4761, 88.7232, 2, playerid + 1000);

			DeletePVar(playerid, !"delivery_human_time");
			DeletePVar(playerid, !"delivery_human_pier");
		}
		case d_delivery_car_pier:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][3]) return SendClientMessage(playerid, col_white, !""scm_error"Доставка транспорта доступна только лидеру семьи.");

			global_string[0] = EOS;

			new veh_point = 0, family_id = PlayerInfo[playerid][family], line_string[80];
			foreach(new vehicleid: family_vehicles[family_id])
			{
				if(!IsValidVehicle(vehicleid)) continue;

				format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s -"c_silver"%s\n", veh_point + 1, vehicle_name[veh_info[vehicleid -1][v_model] -400], veh_info[vehicleid -1][v_plate]);
				strcat(global_string, line_string);

				veh_point++;
			}
			show_dialog(playerid, d_delivery_car_pier_1, DIALOG_STYLE_LIST, !""scm_dialog"Доставка транспорта", global_string, !"Выбрать", !"Назад");
		}
		case d_delivery_car_pier_1:
		{
			if(!response) return DeletePVar(playerid, !"delivery_car_pier");
			if(PlayerInfo[playerid][money] < GetPVarInt(playerid, !"delivery_car_pier")) return SendClientMessage(playerid, col_white, !""scm_error"У Вас недостаточно средств.");

			new veh_point = 0, family_id = PlayerInfo[playerid][family];
			foreach(new vehicleid: family_vehicles[family_id])
			{
				if(!IsValidVehicle(vehicleid)) continue;

				if(listitem == veh_point)
				{
					foreach(new i: logged_players)
					{
						if(IsPlayerInVehicle(i, vehicleid)) return SendClientMessage(playerid, col_white, !""scm_error"Транспорт используется.");
					}
					if(!IsPlayerInRangeOfPoint(playerid, 50.0, veh_info[vehicleid -1][v_now_pos][0], veh_info[vehicleid -1][v_now_pos][1], veh_info[vehicleid -1][v_now_pos][2]) && veh_info[vehicleid -1][v_vw] == GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_white, !""scm_error"Транспорт слишком далеко.");

					give_money(playerid, -GetPVarInt(playerid, !"delivery_car_pier"));
					insert_money_log(playerid, INVALID_PLAYER_ID, -GetPVarInt(playerid, !"delivery_car_pier"), "доставка семейного транспорт на остров");

					veh_info[vehicleid -1][v_pier_time] = GetPVarInt(playerid, !"delivery_car_pier") / 20;
					veh_info[vehicleid -1][v_pier_status] = 1;
					veh_info[vehicleid -1][v_pier_island] = PlayerInfo[playerid][island];

					LinkVehicleToInterior(vehicleid, vehicleid);
					SetVehicleVirtualWorld(vehicleid, vehicleid);

					new text_string[110];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно отправили транспорт на паром. Примерное время ожидания: "c_silver"%s", convert_time(veh_info[vehicleid -1][v_pier_time]));
					SendClientMessage(playerid, col_white, text_string);

					DeletePVar(playerid, !"delivery_car_pier");
				}

				veh_point++;
			}
		}
		case d_island_delivery_select:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][family] == 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");

					new
						Float:dist_ls = GetPlayerDistanceFromPoint(playerid, delivery_car_pier[0][0], delivery_car_pier[0][1], delivery_car_pier[0][2]),
						Float:dist_sf = GetPlayerDistanceFromPoint(playerid, delivery_car_pier[1][0], delivery_car_pier[1][1], delivery_car_pier[1][2]),
						Float:dist_lv = GetPlayerDistanceFromPoint(playerid, delivery_car_pier[2][0], delivery_car_pier[2][1], delivery_car_pier[2][2]);

					new
						pay_distance_ls = floatround(dist_ls),
						pay_distance_sf = floatround(dist_sf),
						pay_distance_lv = floatround(dist_lv);

					new dialog_string[330];
					format(dialog_string, sizeof(dialog_string), ""c_white"Здравствуйте, вы решили отправиться в город?\nЕсли действительно желаете это сделать, нажмите \"Далее\"\nСтоимость билета:\n"c_white"\tLos Santos: "c_green"%d$\n"c_white"\tSan Fierro: "c_green"%d$\n"c_white"\tLas Venturas: "c_green"%d$", pay_distance_ls, pay_distance_sf, pay_distance_lv);
					return show_dialog(playerid, d_delivery_human_island, DIALOG_STYLE_MSGBOX, !""scm_dialog"Семейный остров", dialog_string, !"Далее", !"Закрыть");
				}
				case 1:
				{
					if(PlayerInfo[playerid][family] == 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");
					if(!fi_info[family_info[PlayerInfo[playerid][family] -1][fam_house] -1][fi_improve][fi_improve_delivery_car]) return SendClientMessage(playerid, col_white, !""scm_error"Не установлено улучшение \"Доставка транспорта\".");

					new
						Float:dist_ls = GetPlayerDistanceFromPoint(playerid, delivery_car_pier[0][0], delivery_car_pier[0][1], delivery_car_pier[0][2]),
						Float:dist_sf = GetPlayerDistanceFromPoint(playerid, delivery_car_pier[1][0], delivery_car_pier[1][1], delivery_car_pier[1][2]),
						Float:dist_lv = GetPlayerDistanceFromPoint(playerid, delivery_car_pier[2][0], delivery_car_pier[2][1], delivery_car_pier[2][2]);

					new
						pay_distance_ls = floatround(dist_ls * 2),
						pay_distance_sf = floatround(dist_sf * 2),
						pay_distance_lv = floatround(dist_lv * 2);

					new dialog_string[330];
					format(dialog_string, sizeof(dialog_string), ""c_white"Здравствуйте, вы решили перевезти семейный транспорт в город?\nЕсли действительно желаете это сделать, нажмите \"Далее\" и выберите транспорт\nСтоимость доставки транспорта:\n"c_white"\tLos Santos: "c_green"%d$\n"c_white"\tSan Fierro: "c_green"%d$\n"c_white"\tLas Venturas: "c_green"%d$", pay_distance_ls, pay_distance_sf, pay_distance_lv);
					return show_dialog(playerid, d_delivery_car_island, DIALOG_STYLE_MSGBOX, !""scm_dialog"Семейный остров", dialog_string, !"Далее", !"Закрыть");
				}
			}
		}
		case d_delivery_human_island:
		{
			if(!response) return 1;
			show_dialog(playerid, d_delivery_human_island_1, DIALOG_STYLE_LIST, !""scm_dialog"Семейный остров", !""c_server"1 | "c_white"Los Santos\n"c_server"2 | "c_white"San Fierro\n"c_server"3 | "c_white"Las Venturas", !"Выбрать", !"Назад");
		}
		case d_delivery_human_island_1:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0:
				{
					new Float:dist_ls = GetPlayerDistanceFromPoint(playerid, delivery_car_pier[0][0], delivery_car_pier[0][1], delivery_car_pier[0][2]);
					new pay_distance_ls = floatround(dist_ls);

					if(PlayerInfo[playerid][money] < pay_distance_ls) return SendClientMessage(playerid, col_white, !""scm_error"У Вас недостаточно средств.");

					give_money(playerid, -pay_distance_ls);
					insert_money_log(playerid, INVALID_PLAYER_ID, -pay_distance_ls, "покупка билета на пирс Los Santos");

					//p_t_info[playerid][p_pier_time] = pay_distance_ls / 20;
					p_t_info[playerid][p_pier_time] = 15;
					p_t_info[playerid][p_pier_status] = 2;

					new text_string[125];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно отправились на пирс Los Santos. Примерное время ожидания: "c_silver"%s", convert_time(p_t_info[playerid][p_pier_time]));
					SendClientMessage(playerid, col_white, text_string);

					set_pos(playerid, 2289.6506, 980.4670, 895.4761, 88.7232, 2, playerid + 1000);
				}
				case 1:
				{
					new Float:dist_sf = GetPlayerDistanceFromPoint(playerid, delivery_car_pier[1][0], delivery_car_pier[1][1], delivery_car_pier[1][2]);
					new pay_distance_sf = floatround(dist_sf);

					if(PlayerInfo[playerid][money] < pay_distance_sf) return SendClientMessage(playerid, col_white, !""scm_error"У Вас недостаточно средств.");

					give_money(playerid, -pay_distance_sf);
					insert_money_log(playerid, INVALID_PLAYER_ID, -pay_distance_sf, "покупка билета на пирс San Fierro");

					//p_t_info[playerid][p_pier_time] = pay_distance_sf / 20;
					p_t_info[playerid][p_pier_time] = 15;
					p_t_info[playerid][p_pier_status] = 3;

					new text_string[125];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно отправились на пирс San Fierro. Примерное время ожидания: "c_silver"%s", convert_time(p_t_info[playerid][p_pier_time]));
					SendClientMessage(playerid, col_white, text_string);

					set_pos(playerid, 2289.6506, 980.4670, 895.4761, 88.7232, 2, playerid + 1000);
				}
				case 2:
				{
					new Float:dist_lv = GetPlayerDistanceFromPoint(playerid, delivery_car_pier[2][0], delivery_car_pier[2][1], delivery_car_pier[2][2]);
					new pay_distance_lv = floatround(dist_lv);

					if(PlayerInfo[playerid][money] < pay_distance_lv) return SendClientMessage(playerid, col_white, !""scm_error"У Вас недостаточно средств.");

					give_money(playerid, -pay_distance_lv);
					insert_money_log(playerid, INVALID_PLAYER_ID, -pay_distance_lv, "покупка билета на пирс Las Venturas");

					//p_t_info[playerid][p_pier_time] = pay_distance_lv / 20;
					p_t_info[playerid][p_pier_time] = 15;
					p_t_info[playerid][p_pier_status] = 4;

					new text_string[125];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно отправились на пирс Las Venturas. Примерное время ожидания: "c_silver"%s", convert_time(p_t_info[playerid][p_pier_time]));
					SendClientMessage(playerid, col_white, text_string);

					set_pos(playerid, 2289.6506, 980.4670, 895.4761, 88.7232, 2, playerid + 1000);
				}
			}
		}
		case d_delivery_car_island:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][3]) return SendClientMessage(playerid, col_white, !""scm_error"Доставка транспорта доступна только лидеру семьи.");

			global_string[0] = EOS;

			new veh_point = 0, family_id = PlayerInfo[playerid][family], line_string[80];
			foreach(new vehicleid: family_vehicles[family_id])
			{
				if(!IsValidVehicle(vehicleid)) continue;

				format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s -"c_silver"%s\n", veh_point + 1, vehicle_name[veh_info[vehicleid -1][v_model] -400], veh_info[vehicleid -1][v_plate]);
				strcat(global_string, line_string);

				veh_point++;
			}
			show_dialog(playerid, d_delivery_car_island_1, DIALOG_STYLE_LIST, !""scm_dialog"Доставка транспорта", global_string, !"Выбрать", !"Назад");
		}
		case d_delivery_car_island_1:
		{
			if(!response) return 1;

			new veh_point = 0, family_id = PlayerInfo[playerid][family];
			foreach(new vehicleid: family_vehicles[family_id])
			{
				if(!IsValidVehicle(vehicleid)) continue;

				if(listitem == veh_point)
				{
					foreach(new i: logged_players)
					{
						if(IsPlayerInVehicle(i, vehicleid)) return SendClientMessage(playerid, col_white, !""scm_error"Транспорт используется.");
					}
					if(!IsPlayerInRangeOfPoint(playerid, 50.0, veh_info[vehicleid -1][v_now_pos][0], veh_info[vehicleid -1][v_now_pos][1], veh_info[vehicleid -1][v_now_pos][2]) && veh_info[vehicleid -1][v_vw] == GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_white, !""scm_error"Транспорт слишком далеко.");

					SetPVarInt(playerid, !"delivery_vehicle", vehicleid);
					show_dialog(playerid, d_delivery_car_island_2, DIALOG_STYLE_LIST, !""scm_dialog"Доставка транспорта", !""c_server"1 | "c_white"Los Santos\n"c_server"2 | "c_white"San Fierro\n"c_server"3 | "c_white"Las Venturas", !"Выбрать", !"Назад");
				}

				veh_point++;
			}
		}
		case d_delivery_car_island_2:
		{
			if(!response) return DeletePVar(playerid, !"delivery_vehicle");

			switch(listitem)
			{
				case 0:
				{
					new Float:dist_ls = GetPlayerDistanceFromPoint(playerid, delivery_car_pier[0][0], delivery_car_pier[0][1], delivery_car_pier[0][2]);
					new pay_distance_ls = floatround(dist_ls * 2);

					if(PlayerInfo[playerid][money] < pay_distance_ls) return SendClientMessage(playerid, col_white, !""scm_error"У Вас недостаточно средств.");

					new vehicle_id = GetPVarInt(playerid, !"delivery_vehicle");
					foreach(new i: logged_players)
					{
						if(IsPlayerInVehicle(i, vehicle_id)) return SendClientMessage(playerid, col_white, !""scm_error"Транспорт используется.");
					}
					if(!IsPlayerInRangeOfPoint(playerid, 50.0, veh_info[vehicle_id -1][v_now_pos][0], veh_info[vehicle_id -1][v_now_pos][1], veh_info[vehicle_id -1][v_now_pos][2]) && veh_info[vehicle_id -1][v_vw] == GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_white, !""scm_error"Транспорт слишком далеко.");

					give_money(playerid, -pay_distance_ls);
					insert_money_log(playerid, INVALID_PLAYER_ID, -pay_distance_ls, "доставка семейного транспорт на пирс");

					veh_info[vehicle_id -1][v_pier_time] = pay_distance_ls / 30;
					veh_info[vehicle_id -1][v_pier_status] = 2;

					LinkVehicleToInterior(vehicle_id, vehicle_id);
					SetVehicleVirtualWorld(vehicle_id, vehicle_id);

					new text_string[110];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно отправили транспорт на паром. Примерное время ожидания: "c_silver"%s", convert_time(veh_info[vehicle_id -1][v_pier_time]));
					SendClientMessage(playerid, col_white, text_string);

					DeletePVar(playerid, !"delivery_vehicle");
				}
				case 1:
				{
					new Float:dist_sf = GetPlayerDistanceFromPoint(playerid, delivery_car_pier[1][0], delivery_car_pier[1][1], delivery_car_pier[1][2]);
					new pay_distance_sf = floatround(dist_sf * 2);

					if(PlayerInfo[playerid][money] < pay_distance_sf) return SendClientMessage(playerid, col_white, !""scm_error"У Вас недостаточно средств.");

					new vehicle_id = GetPVarInt(playerid, !"delivery_vehicle");
					foreach(new i: logged_players)
					{
						if(IsPlayerInVehicle(i, vehicle_id)) return SendClientMessage(playerid, col_white, !""scm_error"Транспорт используется.");
					}
					if(!IsPlayerInRangeOfPoint(playerid, 50.0, veh_info[vehicle_id -1][v_now_pos][0], veh_info[vehicle_id -1][v_now_pos][1], veh_info[vehicle_id -1][v_now_pos][2]) && veh_info[vehicle_id -1][v_vw] == GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_white, !""scm_error"Транспорт слишком далеко.");

					give_money(playerid, -pay_distance_sf);
					insert_money_log(playerid, INVALID_PLAYER_ID, -pay_distance_sf, "доставка семейного транспорт на пирс");

					veh_info[vehicle_id -1][v_pier_time] = pay_distance_sf / 30;
					veh_info[vehicle_id -1][v_pier_status] = 3;

					LinkVehicleToInterior(vehicle_id, vehicle_id);
					SetVehicleVirtualWorld(vehicle_id, vehicle_id);

					new text_string[110];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно отправили транспорт на паром. Примерное время ожидания: "c_silver"%s", convert_time(veh_info[vehicle_id -1][v_pier_time]));
					SendClientMessage(playerid, col_white, text_string);

					DeletePVar(playerid, !"delivery_vehicle");
				}
				case 2:
				{
					new Float:dist_lv = GetPlayerDistanceFromPoint(playerid, delivery_car_pier[2][0], delivery_car_pier[2][1], delivery_car_pier[2][2]);
					new pay_distance_lv = floatround(dist_lv * 2);

					if(PlayerInfo[playerid][money] < pay_distance_lv) return SendClientMessage(playerid, col_white, !""scm_error"У Вас недостаточно средств.");

					new vehicle_id = GetPVarInt(playerid, !"delivery_vehicle");
					foreach(new i: logged_players)
					{
						if(IsPlayerInVehicle(i, vehicle_id)) return SendClientMessage(playerid, col_white, !""scm_error"Транспорт используется.");
					}
					if(!IsPlayerInRangeOfPoint(playerid, 50.0, veh_info[vehicle_id -1][v_now_pos][0], veh_info[vehicle_id -1][v_now_pos][1], veh_info[vehicle_id -1][v_now_pos][2]) && veh_info[vehicle_id -1][v_vw] == GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_white, !""scm_error"Транспорт слишком далеко.");

					give_money(playerid, -pay_distance_lv);
					insert_money_log(playerid, INVALID_PLAYER_ID, -pay_distance_lv, "доставка семейного транспорт на пирс");

					veh_info[vehicle_id -1][v_pier_time] = pay_distance_lv / 30;
					veh_info[vehicle_id -1][v_pier_status] = 4;

					LinkVehicleToInterior(vehicle_id, vehicle_id);
					SetVehicleVirtualWorld(vehicle_id, vehicle_id);

					new text_string[110];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно отправили транспорт на паром. Примерное время ожидания: "c_silver"%s", convert_time(veh_info[vehicle_id -1][v_pier_time]));
					SendClientMessage(playerid, col_white, text_string);

					DeletePVar(playerid, !"delivery_vehicle");
				}
			}
		}
		case d_buy_autosalon:
		{
			if(!response) return 1;

			new ts_vehicle = GetPVarInt(playerid, !"tshop_car"), ts_type = GetPVarInt(playerid, !"tshop_type") -1, ts_list = GetPVarInt(playerid, !"tshop_list"), ts_id = GetPVarInt(playerid, !"tshop_id") -1;
			switch(listitem)
			{
				case 0:
				{
			 		if(PlayerInfo[playerid][money] < GetModelPrice(t_shop_models[ts_list][ts_type])) return SendClientMessage(playerid, col_white, !""scm_error"У Вас недостаточно средств.");
					if(get_player_veh_count(playerid) >= PlayerInfo[playerid][max_veh]) return SendClientMessage(playerid, col_white, !""scm_error"Для начала нужно продать одно из имещихся транспортных средств.");

					new ts_spawn_slot = random(5);
					if(ts_id < 0) ts_id = 0;
					new	veh_id = CreateVehicle(t_shop_models[ts_list][ts_type], t_shop_respawn[ts_id][ts_spawn_slot][0], t_shop_respawn[ts_id][ts_spawn_slot][1], t_shop_respawn[ts_id][ts_spawn_slot][2], t_shop_respawn[ts_id][ts_spawn_slot][3], veh_info[ts_vehicle -1][v_color][0], veh_info[ts_vehicle -1][v_color][1], -1);

					veh_info[veh_id -1][v_model] = GetVehicleModel(veh_id);

					new query_string[226];
					mysql_format(sql_connection, query_string, sizeof(query_string), "INSERT INTO `users_vehicles`(`v_model`,`v_owner`,`v_color_1`,`v_color_2`,`v_pos_x`,`v_pos_y`,`v_pos_z`,`v_pos_a`,`v_buydate`) VALUES('%d','%d','%d','%d','%f','%f','%f','%f',NOW())", t_shop_models[ts_list][ts_type], PlayerInfo[playerid][id], veh_info[ts_vehicle -1][v_color][0], veh_info[ts_vehicle -1][v_color][1], t_shop_respawn[ts_id][ts_spawn_slot][0], t_shop_respawn[ts_id][ts_spawn_slot][1], t_shop_respawn[ts_id][ts_spawn_slot][2], t_shop_respawn[ts_id][ts_spawn_slot][3]);
					mysql_tquery(sql_connection, query_string, "create_vehicle_callback", "dd", veh_id, playerid);

					give_money(playerid, -GetModelPrice(t_shop_models[ts_list][ts_type]));
					insert_money_log(playerid, INVALID_PLAYER_ID, -GetModelPrice(t_shop_models[ts_list][ts_type]), "покупка личного транспорта");

					DestroyVehicle(ts_vehicle);

					veh_info[veh_id -1][v_type] = vehicle_type_player;
					veh_info[veh_id -1][v_owner] = PlayerInfo[playerid][id];
					veh_info[veh_id -1][v_vehicle] = veh_id;
					format(veh_info[veh_id -1][v_plate], 12, "Transit");
					veh_info[veh_id -1][v_pos][0] = t_shop_respawn[ts_id][ts_spawn_slot][0];
					veh_info[veh_id -1][v_pos][1] = t_shop_respawn[ts_id][ts_spawn_slot][1];
					veh_info[veh_id -1][v_pos][2] = t_shop_respawn[ts_id][ts_spawn_slot][2];
					veh_info[veh_id -1][v_pos][3] = t_shop_respawn[ts_id][ts_spawn_slot][3];

					veh_info[veh_id -1][v_fuel] = 100.0;
					veh_info[veh_id -1][v_millage] = 0.0;
					veh_info[veh_id -1][v_fine] = 3;

					veh_info[veh_id -1][v_locked] = true;

					new engine, lights, alarm, doors, bonnet, boot, objective;
					GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
					SetVehicleParamsEx(veh_id, engine, lights, alarm, true, bonnet, boot, objective);

					Iter_Add(player_vehicles[playerid], veh_info[veh_id -1][v_vehicle]);

					for(new j = 0; j < 4; j ++)
					{
						PlayerTextDrawHide(playerid, ptd_tshop[playerid][j]);
						PlayerTextDrawDestroy(playerid, ptd_tshop[playerid][j]);
						ptd_tshop[playerid][j] = PlayerText: -1;
					}

					for(new j = 0; j < 20; j ++)
					{
						TextDrawHideForPlayer(playerid, td_tshop[j]);
						TextDrawHideForPlayer(playerid, td_color_tshop[j]);
					}

					DestroyVehicle(GetPVarInt(playerid, !"tshop_car"));
					if(GetPVarInt(playerid, !"tshop_car2") > 0) DestroyVehicle(GetPVarInt(playerid, !"tshop_car2"));

					SetPVarInt(playerid, !"tp_area_used", 1);
					DeletePVar(playerid, !"tshop_id"), DeletePVar(playerid, !"tshop_type"), DeletePVar(playerid, !"tshop_car"), DeletePVar(playerid, !"tshop_car2"), DeletePVar(playerid, !"tshop_list");
					CancelSelectTextDraw(playerid);

					switch(ts_id)
					{
						case 0: set_pos(playerid, 547.6648, -1278.8979, 16.9415, 0, 0, 0);
						case 1: set_pos(playerid, -1969.2168, 294.0054, 35.1719, 83.8790, 0, 0);
						case 2: set_pos(playerid, 2200.7791, 1394.1847, 11.0625, 178.9896, 0, 0);
						case 3: set_pos(playerid, 2888.9858, -365.2157, 8.1380, 88.1677, 0, 0);
						case 4: set_pos(playerid, -1396.3988, -544.6662, 14.1484, 216.0958, 0, 0);
					}

					if(ts_id < 3)
					{
						SendClientMessage(playerid, col_white, !""scm_info"Вы успешно приобрели транспортное средство.");
						SendClientMessage(playerid, col_white, !""scm_info"Оно было доставлено во двор салона.");
						SendClientMessage(playerid, col_white, !""scm_info"Необходимо припарковаться в разрешенном месте, чтобы транспорт не был эвакуирован. Используйте: "c_gold"/vpark");

						show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, !""scm_dialog"Информация", !"\
						"c_server"Информация о транспорте:\n\n\
						"c_white"Каждое транспортное средство облагается налогами. Оплатить их Вы сможете в банке или в банкомате.\n\
						В случае неуплаты налога Вы можете потерять часть своей собственности.\n\n\
						По штату курсируют экипажи полиции с эвакуаторами.\n\
						В случае парковки в неположенных местах, Ваше транспортное средство будет эвакуировано на штрафстоянку.\n\
						Припарковать транспортное средство Вы можете при помощи команды: /vpark\n\
						Настоятельно рекомендуем сделать это сразу после покупки транспорта.\n\n\
						Каждый игрок может иметь 2 транспортных средства.\n\n\
						"c_silver"Вы ознакомились с информацией и желаете продолжить?", !"Закрыть", !"");
					}
					else if(ts_id == 3) SendClientMessage(playerid, col_white, !""scm_info"Вы успешно приобрели водное транспортное средство.");
					else if(ts_id == 4) SendClientMessage(playerid, col_white, !""scm_info"Вы успешно приобрели воздушное транспортное средство. Оно доставлено к ангару.");
					return 1;
				}
				case 1:
				{
					new family_id = PlayerInfo[playerid][family];
					if(family_id == 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");
					if(PlayerInfo[playerid][island] == -1) return SendClientMessage(playerid, col_white, !""scm_error"У Вашей семьи отсутствует семейный остров.");
					if(family_info[family_id -1][fam_bank] < GetModelPrice(t_shop_models[ts_list][ts_type])) return SendClientMessage(playerid, col_white, !""scm_error"В банке семьи недостаточно средств.");

					new ts_spawn_pos = random(12);
					if(ts_id < 0) ts_id = 0;

		            new veh_id = CreateVehicle(t_shop_models[ts_list][ts_type], delivery_car_pos_island[PlayerInfo[playerid][island] -1][ts_spawn_pos][0], delivery_car_pos_island[PlayerInfo[playerid][island] -1][ts_spawn_pos][1], delivery_car_pos_island[PlayerInfo[playerid][island] -1][ts_spawn_pos][2], delivery_car_pos_island[PlayerInfo[playerid][island] -1][ts_spawn_pos][3], veh_info[ts_vehicle -1][v_color][0], veh_info[ts_vehicle -1][v_color][1], -1);

					veh_info[veh_id -1][v_model] = GetVehicleModel(veh_id);

		            new tquery_string[290];
		            mysql_format(sql_connection, tquery_string, sizeof(tquery_string), "INSERT INTO `family_vehicles` (`sv_model`,`sv_owner`,`sv_pos_x`,`sv_pos_y`,`sv_pos_z`,`sv_pos_a`,`sv_type`) VALUES ('%d','%d','%f','%f','%f','%f','%d')", t_shop_models[ts_list][ts_type], family_id, delivery_car_pos_island[PlayerInfo[playerid][island] -1][ts_spawn_pos][0], delivery_car_pos_island[PlayerInfo[playerid][island] -1][ts_spawn_pos][1], delivery_car_pos_island[PlayerInfo[playerid][island] -1][ts_spawn_pos][2], delivery_car_pos_island[PlayerInfo[playerid][island] -1][ts_spawn_pos][3], vehicle_type_family);
		            mysql_tquery(sql_connection, tquery_string, "create_vehicle_callback", "dd", veh_id, playerid);

		            family_info[family_id -1][fam_bank] -= GetModelPrice(t_shop_models[ts_list][ts_type]);

		            new query_string[110];
		            mysql_format(sql_connection, query_string, sizeof(query_string), "UPDATE `family` SET `fam_bank`='%d' WHERE `fam_id`='%d' LIMIT 1", family_info[family_id -1][fam_bank], family_id);
		            mysql_query(sql_connection, query_string);

					DestroyVehicle(ts_vehicle);

					veh_info[veh_id -1][v_type] = vehicle_type_family;
					veh_info[veh_id -1][v_owner] = family_id;
					veh_info[veh_id -1][v_vehicle] = veh_id;
					veh_info[veh_id -1][v_rank] = 1;
					format(veh_info[veh_id -1][v_plate], 12, family_info[family_id -1][fam_name]);
					veh_info[veh_id -1][v_pos][0] = delivery_car_pos_island[PlayerInfo[playerid][island] -1][ts_spawn_pos][0];
					veh_info[veh_id -1][v_pos][1] = delivery_car_pos_island[PlayerInfo[playerid][island] -1][ts_spawn_pos][1];
					veh_info[veh_id -1][v_pos][2] = delivery_car_pos_island[PlayerInfo[playerid][island] -1][ts_spawn_pos][2];
					veh_info[veh_id -1][v_pos][3] = delivery_car_pos_island[PlayerInfo[playerid][island] -1][ts_spawn_pos][3];

					veh_info[veh_id -1][v_fuel] = 100.0;
					veh_info[veh_id -1][v_millage] = 0.0;
					veh_info[veh_id -1][v_fine] = 3;

		            veh_info[veh_id -1][v_locked] = false;

		            new engine, lights, alarm, doors, bonnet, boot, objective;
		            GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
		            SetVehicleParamsEx(veh_id, engine, lights, alarm, VEHICLE_PARAMS_OFF, bonnet, boot, objective);

					format(query_string, sizeof(query_string), "UPDATE `family_vehicles` SET `sv_plate`='%s' WHERE `sv_id`='%d' LIMIT 1", veh_info[veh_id -1][v_plate], veh_info[veh_id -1][v_id]);
					mysql_query(sql_connection, query_string);

					Iter_Add(family_vehicles[family_id], veh_id);

					for(new j = 0; j < 4; j ++)
					{
						PlayerTextDrawHide(playerid, ptd_tshop[playerid][j]);
						PlayerTextDrawDestroy(playerid, ptd_tshop[playerid][j]);
						ptd_tshop[playerid][j] = PlayerText: -1;
					}

					for(new j = 0; j < 20; j ++)
					{
						TextDrawHideForPlayer(playerid, td_tshop[j]);
						TextDrawHideForPlayer(playerid, td_color_tshop[j]);
					}

					DestroyVehicle(GetPVarInt(playerid, !"tshop_car"));
					if(GetPVarInt(playerid, !"tshop_car2") > 0) DestroyVehicle(GetPVarInt(playerid, !"tshop_car2"));

					SetPVarInt(playerid, !"tp_area_used", 1);
					DeletePVar(playerid, !"tshop_id"), DeletePVar(playerid, !"tshop_type"), DeletePVar(playerid, !"tshop_car"), DeletePVar(playerid, !"tshop_car2"), DeletePVar(playerid, !"tshop_list");
					CancelSelectTextDraw(playerid);

					switch(ts_id)
					{
						case 0: set_pos(playerid, 547.6648, -1278.8979, 16.9415, 0, 0, 0);
						case 1: set_pos(playerid, -1969.2168, 294.0054, 35.1719, 83.8790, 0, 0);
						case 2: set_pos(playerid, 2200.7791, 1394.1847, 11.0625, 178.9896, 0, 0);
						case 3: set_pos(playerid, 2888.9858, -365.2157, 8.1380, 88.1677, 0, 0);
						case 4: set_pos(playerid, -1396.3988, -544.6662, 14.1484, 216.0958, 0, 0);
					}

					if(ts_id < 3)
					{
						SendClientMessage(playerid, col_white, !""scm_info"Вы успешно приобрели транспортное средство для семьи.");
						SendClientMessage(playerid, col_white, !""scm_info"Оно было доставлено на семейный остров.");
					}
					else if(ts_id == 3)
					{
						SendClientMessage(playerid, col_white, !""scm_info"Вы успешно приобрели водное транспортное средство.");
						SendClientMessage(playerid, col_white, !""scm_info"Оно было доставлено к пирсу семейного острова.");
					}
					else if(ts_id == 4)
					{
						SendClientMessage(playerid, col_white, !""scm_info"Вы успешно приобрели воздушное транспортное средство.");
						SendClientMessage(playerid, col_white, !""scm_info"Оно было доставлено на вертолётную площадку семейного острова.");
					}
					return 1;
				}
			}
		}
		case d_setstat:
		{
			if(!response) return DeletePVar(playerid, !"target_id");

			new targetid = GetPVarInt(playerid, !"target_id");
			switch(listitem)
			{
				case 0: show_dialog(playerid, d_setstat_1, DIALOG_STYLE_INPUT, !""scm_dialog"Ник", !""c_white"Введите будущий ник для игрока:", !"Далее", !"Назад");
				case 1:
				{
					new dialog_string[90];
					format(dialog_string, sizeof(dialog_string), ""c_white"Введите будущий уровень для игрока:\nТекущий уровень: "c_silver"%d", PlayerInfo[targetid][level]);
					show_dialog(playerid, d_setstat_1, DIALOG_STYLE_INPUT, !""scm_dialog"Уровень", dialog_string, !"Далее", !"Назад");
				}
				case 2:
				{
					new dialog_string[90];
					format(dialog_string, sizeof(dialog_string), ""c_white"Введите количество EXP для игрока:\nТекущее количество EXP: "c_silver"%d", PlayerInfo[targetid][exp]);
					show_dialog(playerid, d_setstat_1, DIALOG_STYLE_INPUT, !""scm_dialog"EXP", dialog_string, !"Далее", !"Назад");
				}
				case 3: show_dialog(playerid, d_setstat_1, DIALOG_STYLE_LIST, !""scm_dialog"Лицензии", !"Водительские права\nЛицензия на воздушный транспорт\nЛицензия на водный транспорт\nЛицензия на ношение оружия", !"Выбрать", !"Отмена");
				case 4:
				{
					new dialog_string[380], line_string[70];
					format(line_string, sizeof(line_string), ""c_white"Silenced Pistol | Текущее значение: "c_server"%d / 100\n", PlayerInfo[targetid][gun_skills][0]);
					strcat(dialog_string, line_string);
					format(line_string, sizeof(line_string), ""c_white"Desert Eagle | Текущее значение: "c_server"%d / 100\n", PlayerInfo[targetid][gun_skills][1]);
					strcat(dialog_string, line_string);
					format(line_string, sizeof(line_string), ""c_white"ShotGun | Текущее значение: "c_server"%d / 100\n", PlayerInfo[targetid][gun_skills][2]);
					strcat(dialog_string, line_string);
					format(line_string, sizeof(line_string), ""c_white"MP5 | Текущее значение: "c_server"%d / 100\n", PlayerInfo[targetid][gun_skills][3]);
					strcat(dialog_string, line_string);
					format(line_string, sizeof(line_string), ""c_white"AK-47 | Текущее значение: "c_server"%d / 100\n", PlayerInfo[targetid][gun_skills][4]);
					strcat(dialog_string, line_string);
					format(line_string, sizeof(line_string), ""c_white"M4A1 | Текущее значение: "c_server"%d / 100\n", PlayerInfo[targetid][gun_skills][5]);
					strcat(dialog_string, line_string);
					format(line_string, sizeof(line_string), ""c_white"Sniper Rifle | Текущее значение: "c_server"%d / 100", PlayerInfo[targetid][gun_skills][6]);
					strcat(dialog_string, line_string);

					show_dialog(playerid, d_setstat_1, DIALOG_STYLE_LIST, !""scm_dialog"Навыки владения оружием", dialog_string, !"Выбрать", !"Отмена");
				}
				case 5:
				{
					new dialog_string[120];
					format(dialog_string, sizeof(dialog_string), ""c_white"Введите количество игровой валюты для игрока:\nТекущее количество игровой валюты: "c_silver"%d$", PlayerInfo[targetid][money]);
					show_dialog(playerid, d_setstat_1, DIALOG_STYLE_INPUT, !""scm_dialog"Игровая валюта", dialog_string, !"Далее", !"Назад");
				}
				case 6:
				{
					new dialog_string[120];
					format(dialog_string, sizeof(dialog_string), ""c_white"Введите количество доната для игрока:\nТекущее количество доната: "c_silver"%d E-coin", get_player_donate(targetid));
					show_dialog(playerid, d_setstat_1, DIALOG_STYLE_INPUT, !""scm_dialog"Донат", dialog_string, !"Далее", !"Назад");
				}
			}
			SetPVarInt(playerid, !"setstat_listitem", listitem + 1);
		}
		case d_setstat_1:
		{
			if(!response) return DeletePVar(playerid, !"target_id");

			new targetid = GetPVarInt(playerid, !"target_id");
			switch(GetPVarInt(playerid, !"setstat_listitem"))
			{
				case 1:
				{
					if(!strlen(inputtext)) return show_dialog(playerid, d_setstat_1, DIALOG_STYLE_INPUT, !""scm_dialog"Ник", !""c_white"Введите будущий ник для игрока:", !"Далее", !"Назад");

					new tquery_string[80];
					mysql_format(sql_connection, tquery_string, sizeof(tquery_string), "SELECT `u_name` FROM `users` WHERE `u_name`='%e' LIMIT 1", inputtext);
					mysql_tquery(sql_connection, tquery_string, "change_setstat_name", "ds", playerid, inputtext);
				}
				case 2:
				{
					if(!strval(inputtext))
					{
						new dialog_string[90];
						format(dialog_string, sizeof(dialog_string), ""c_white"Введите будущий уровень для игрока:\nТекущий уровень: "c_silver"%d", PlayerInfo[targetid][level]);
						show_dialog(playerid, d_setstat_1, DIALOG_STYLE_INPUT, !""scm_dialog"Уровень", dialog_string, !"Далее", !"Назад");
					}
					if(!(1 <= strval(inputtext) <= 100))
					{
						new dialog_string[110];
						format(dialog_string, sizeof(dialog_string), ""c_grey"Используйте от 1 до 100 уровня\n"c_white"Введите будущий уровень для игрока:\nТекущий уровень: "c_silver"%d", PlayerInfo[targetid][level]);
						show_dialog(playerid, d_setstat_1, DIALOG_STYLE_INPUT, !""scm_dialog"Уровень", dialog_string, !"Далее", !"Назад");
					}
					new text_string[105];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно изменили уровень "c_server"%s"c_white" на %d", PlayerInfo[targetid][name], strval(inputtext));
					SendClientMessage(playerid, col_white, text_string);

					PlayerInfo[targetid][level] = strval(inputtext);
					update_int_sql(targetid, "u_level", PlayerInfo[targetid][level]);
					SetPlayerScore(targetid, PlayerInfo[targetid][level]);

					new id_str[5];
					format(id_str, sizeof(id_str), "%d", targetid);
					pc_cmd_setstat(playerid, id_str);
				}
				case 3:
				{
					if(!strval(inputtext))
					{
						new dialog_string[90];
						format(dialog_string, sizeof(dialog_string), ""c_white"Введите количество EXP для игрока:\nТекущее количество EXP: "c_silver"%d", PlayerInfo[targetid][exp]);
						show_dialog(playerid, d_setstat_1, DIALOG_STYLE_INPUT, !""scm_dialog"EXP", dialog_string, !"Далее", !"Назад");
					}
					if(!(1 <= strval(inputtext) <= 100))
					{
						new dialog_string[110];
						format(dialog_string, sizeof(dialog_string), ""c_grey"Используйте от 1 до 100 EXP\n"c_white"Введите количество EXP для игрока:\nТекущее количество EXP: "c_silver"%d", PlayerInfo[targetid][exp]);
						show_dialog(playerid, d_setstat_1, DIALOG_STYLE_INPUT, !""scm_dialog"EXP", dialog_string, !"Далее", !"Назад");
					}
					new text_string[105];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно изменили EXP "c_server"%s"c_white" на %d", PlayerInfo[targetid][name], strval(inputtext));
					SendClientMessage(playerid, col_white, text_string);

					PlayerInfo[targetid][exp] = strval(inputtext);
					update_int_sql(targetid, "u_exp", PlayerInfo[targetid][exp]);
					SetPlayerScore(targetid, PlayerInfo[targetid][exp]);

					new id_str[5];
					format(id_str, sizeof(id_str), "%d", targetid);
					pc_cmd_setstat(playerid, id_str);
				}
				case 4:
				{
					switch(listitem)
					{
						case 0:
						{
							if(PlayerInfo[targetid][drive_lic] == 1) return SendClientMessage(playerid, col_white, !""scm_error"У игрока уже имеются водительские права.");

							new text_string[125];
							format(text_string, sizeof(text_string), ""scm_info"Администратор "c_server"%s"c_white" выдал Вам водительские права", PlayerInfo[playerid][name]);
							SendClientMessage(targetid, col_white, text_string);

							PlayerInfo[targetid][drive_lic] = 1;
							update_int_sql(targetid, "u_drive_lic", PlayerInfo[targetid][drive_lic]);

							format(text_string, sizeof(text_string), ""c_server"* A.INFO:"c_grey" %s[%d] выдал игроку %s[%d] водительские права", PlayerInfo[playerid][name], playerid, PlayerInfo[targetid][name], targetid);
							foreach(new i: admin_players) SendClientMessage(i, col_gray, text_string);
						}
						case 1:
						{
							if(PlayerInfo[targetid][fly_lic] == 1) return SendClientMessage(playerid, col_white, !""scm_error"У игрока уже имеется лицензия на воздушный транспорт.");

							new text_string[125];
							format(text_string, sizeof(text_string), ""scm_info"Администратор "c_server"%s"c_white" выдал Вам лицензию на воздушный транспорт", PlayerInfo[playerid][name]);
							SendClientMessage(targetid, col_white, text_string);

							PlayerInfo[targetid][fly_lic] = 1;
							update_int_sql(targetid, "u_fly_lic", PlayerInfo[targetid][fly_lic]);

							format(text_string, sizeof(text_string), ""c_server"* A.INFO:"c_grey" %s[%d] выдал игроку %s[%d] лицензию на воздушный транспорт", PlayerInfo[playerid][name], playerid, PlayerInfo[targetid][name], targetid);
							foreach(new i: admin_players) SendClientMessage(i, col_gray, text_string);
						}
						case 2:
						{
							if(PlayerInfo[targetid][boat_lic] == 1) return SendClientMessage(playerid, col_white, !""scm_error"У игрока уже имеется лицензия на водный транспорт.");

							new text_string[125];
							format(text_string, sizeof(text_string), ""scm_info"Администратор "c_server"%s"c_white" выдал Вам лицензию на водный транспорт", PlayerInfo[playerid][name]);
							SendClientMessage(targetid, col_white, text_string);

							PlayerInfo[targetid][boat_lic] = 1;
							update_int_sql(targetid, "u_boat_lic", PlayerInfo[targetid][boat_lic]);

							format(text_string, sizeof(text_string), ""c_server"* A.INFO:"c_grey" %s[%d] выдал игроку %s[%d] лицензию на водный транспорт", PlayerInfo[playerid][name], playerid, PlayerInfo[targetid][name], targetid);
							foreach(new i: admin_players) SendClientMessage(i, col_gray, text_string);
						}
						case 3:
						{
							if(PlayerInfo[targetid][gun_lic] == 1) return SendClientMessage(playerid, col_white, !""scm_error"У игрока уже имеется лицензия на ношение оружия.");

							new text_string[125];
							format(text_string, sizeof(text_string), ""scm_info"Администратор "c_server"%s"c_white" выдал Вам лицензию на ношение оружия", PlayerInfo[playerid][name]);
							SendClientMessage(targetid, col_white, text_string);

							PlayerInfo[targetid][gun_lic] = 1;
							update_int_sql(targetid, "u_gun_lic", PlayerInfo[targetid][gun_lic]);

							format(text_string, sizeof(text_string), ""c_server"* A.INFO:"c_grey" %s[%d] выдал игроку %s[%d] лицензию на ношение оружия", PlayerInfo[playerid][name], playerid, PlayerInfo[targetid][name], targetid);
							foreach(new i: admin_players) SendClientMessage(i, col_gray, text_string);
						}
					}
					new id_str[5];
					format(id_str, sizeof(id_str), "%d", targetid);
					pc_cmd_setstat(playerid, id_str);
				}
				case 5:
				{
					switch(listitem)
					{
						case 0: show_dialog(playerid, d_setstat_2, DIALOG_STYLE_INPUT, !""scm_dialog"Silenced Pistol", !"Введите количество навыка владения оружием \"Silenced Pistol\":", !"Далее", !"Назад");
						case 1: show_dialog(playerid, d_setstat_2, DIALOG_STYLE_INPUT, !""scm_dialog"Desert Eagle", !"Введите количество навыка владения оружием \"Desert Eagle\":", !"Далее", !"Назад");
						case 2: show_dialog(playerid, d_setstat_2, DIALOG_STYLE_INPUT, !""scm_dialog"ShotGun", !"Введите количество навыка владения оружием \"ShotGun\":", !"Далее", !"Назад");
						case 3: show_dialog(playerid, d_setstat_2, DIALOG_STYLE_INPUT, !""scm_dialog"MP5", !"Введите количество навыка владения оружием \"MP5\":", !"Далее", !"Назад");
						case 4: show_dialog(playerid, d_setstat_2, DIALOG_STYLE_INPUT, !""scm_dialog"AK-47", !"Введите количество навыка владения оружием \"AK-47\":", !"Далее", !"Назад");
						case 5: show_dialog(playerid, d_setstat_2, DIALOG_STYLE_INPUT, !""scm_dialog"M4A1", !"Введите количество навыка владения оружием \"M4A1\":", !"Далее", !"Назад");
						case 6: show_dialog(playerid, d_setstat_2, DIALOG_STYLE_INPUT, !""scm_dialog"Sniper Rifle", !"Введите количество навыка владения оружием \"Sniper Rifle\":", !"Далее", !"Назад");
					}
					SetPVarInt(playerid, !"setstat_skill", listitem + 1);
				}
				case 6:
				{
					if(!(0 <= strval(inputtext) <= 100000000))
					{
						new dialog_string[140];
						format(dialog_string, sizeof(dialog_string), ""c_grey"Используйте от 0 до 100.000.000$\n"c_white"Введите количество игровой валюты для игрока:\nТекущее количество игровой валюты: "c_silver"%d$", PlayerInfo[targetid][money]);
						show_dialog(playerid, d_setstat_1, DIALOG_STYLE_INPUT, !""scm_dialog"Игровая валюта", dialog_string, !"Далее", !"Назад");
					}
					new text_string[120];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно изменили количество игровой валюты "c_server"%s"c_white" на %d", PlayerInfo[targetid][name], strval(inputtext));
					SendClientMessage(playerid, col_white, text_string);

					give_money(targetid, -PlayerInfo[targetid][money]);
					give_money(targetid, strval(inputtext));

					new id_str[5];
					format(id_str, sizeof(id_str), "%d", targetid);
					pc_cmd_setstat(playerid, id_str);
				}
				case 7:
				{
					if(!(0 <= strval(inputtext) <= 5000))
					{
						new dialog_string[140];
						format(dialog_string, sizeof(dialog_string), ""c_grey"Используйте от 0 до 5.000 E-coin\n"c_white"Введите количество доната для игрока:\nТекущее количество доната: "c_silver"%d E-coin", get_player_donate(targetid));
						show_dialog(playerid, d_setstat_1, DIALOG_STYLE_INPUT, !""scm_dialog"Донат", dialog_string, !"Далее", !"Назад");
					}
					new text_string[120];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно изменили количество доната "c_server"%s"c_white" на %d", PlayerInfo[targetid][name], strval(inputtext));
					SendClientMessage(playerid, col_white, text_string);

					format(text_string, sizeof(text_string), "UPDATE `users` SET `u_donate`=`u_donate`-'%d' WHERE `u_id`='%d' LIMIT 1", get_player_donate(targetid), PlayerInfo[targetid][id]);
					mysql_query(sql_connection, text_string);

					format(text_string, sizeof(text_string), "UPDATE `users` SET `u_donate`=`u_donate`+'%d' WHERE `u_id`='%d' LIMIT 1", strval(inputtext), PlayerInfo[targetid][id]);
					mysql_query(sql_connection, text_string);

					new id_str[5];
					format(id_str, sizeof(id_str), "%d", targetid);
					pc_cmd_setstat(playerid, id_str);
				}
			}
			DeletePVar(playerid, !"setstat_listitem");
		}
		case d_setstat_2:
		{
			if(!response) return 1;

			new targetid = GetPVarInt(playerid, !"target_id");
			switch(GetPVarInt(playerid, !"setstat_skill"))
			{
				case 1:
				{
					if(!(0 <= strval(inputtext) <= 100)) return show_dialog(playerid, d_setstat_2, DIALOG_STYLE_INPUT, !""scm_dialog"Silenced Pistol", !"Введите количество навыка владения оружием \"Silenced Pistol\":", !"Далее", !"Назад");

					new text_string[100];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно изменили навык владения оружием \"Silenced Pistol\" на %d%%", strval(inputtext));
					SendClientMessage(playerid, col_white, text_string);

					PlayerInfo[targetid][gun_skills][0] = strval(inputtext);
					SetPlayerSkills(targetid);

					format(text_string, sizeof(text_string), "UPDATE `users` SET `u_skills`='%d|%d|%d|%d|%d|%d|%d' WHERE `u_id`='%d' LIMIT 1", PlayerInfo[targetid][gun_skills][0], PlayerInfo[targetid][gun_skills][1], PlayerInfo[targetid][gun_skills][2], PlayerInfo[targetid][gun_skills][3], PlayerInfo[targetid][gun_skills][4], PlayerInfo[targetid][gun_skills][5], PlayerInfo[targetid][gun_skills][6], PlayerInfo[targetid][id]);
					mysql_query(sql_connection, text_string);
				}
				case 2:
				{
					if(!(0 <= strval(inputtext) <= 100)) return show_dialog(playerid, d_setstat_2, DIALOG_STYLE_INPUT, !""scm_dialog"Desert Eagle", !"Введите количество навыка владения оружием \"Desert Eagle\":", !"Далее", !"Назад");

					new text_string[100];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно изменили навык владения оружием \"Desert Eagle\" на %d%%", strval(inputtext));
					SendClientMessage(playerid, col_white, text_string);

					PlayerInfo[targetid][gun_skills][1] = strval(inputtext);
					SetPlayerSkills(targetid);

					format(text_string, sizeof(text_string), "UPDATE `users` SET `u_skills`='%d|%d|%d|%d|%d|%d|%d' WHERE `u_id`='%d' LIMIT 1", PlayerInfo[targetid][gun_skills][0], PlayerInfo[targetid][gun_skills][1], PlayerInfo[targetid][gun_skills][2], PlayerInfo[targetid][gun_skills][3], PlayerInfo[targetid][gun_skills][4], PlayerInfo[targetid][gun_skills][5], PlayerInfo[targetid][gun_skills][6], PlayerInfo[targetid][id]);
					mysql_query(sql_connection, text_string);
				}
				case 3:
				{
					if(!(0 <= strval(inputtext) <= 100)) return show_dialog(playerid, d_setstat_2, DIALOG_STYLE_INPUT, !""scm_dialog"ShotGun", !"Введите количество навыка владения оружием \"ShotGun\":", !"Далее", !"Назад");

					new text_string[100];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно изменили навык владения оружием \"ShotGun\" на %d%%", strval(inputtext));
					SendClientMessage(playerid, col_white, text_string);

					PlayerInfo[targetid][gun_skills][2] = strval(inputtext);
					SetPlayerSkills(targetid);

					format(text_string, sizeof(text_string), "UPDATE `users` SET `u_skills`='%d|%d|%d|%d|%d|%d|%d' WHERE `u_id`='%d' LIMIT 1", PlayerInfo[targetid][gun_skills][0], PlayerInfo[targetid][gun_skills][1], PlayerInfo[targetid][gun_skills][2], PlayerInfo[targetid][gun_skills][3], PlayerInfo[targetid][gun_skills][4], PlayerInfo[targetid][gun_skills][5], PlayerInfo[targetid][gun_skills][6], PlayerInfo[targetid][id]);
					mysql_query(sql_connection, text_string);
				}
				case 4:
				{
					if(!(0 <= strval(inputtext) <= 100)) return show_dialog(playerid, d_setstat_2, DIALOG_STYLE_INPUT, !""scm_dialog"MP5", !"Введите количество навыка владения оружием \"MP5\":", !"Далее", !"Назад");

					new text_string[100];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно изменили навык владения оружием \"MP5\" на %d%%", strval(inputtext));
					SendClientMessage(playerid, col_white, text_string);

					PlayerInfo[targetid][gun_skills][3] = strval(inputtext);
					SetPlayerSkills(targetid);

					format(text_string, sizeof(text_string), "UPDATE `users` SET `u_skills`='%d|%d|%d|%d|%d|%d|%d' WHERE `u_id`='%d' LIMIT 1", PlayerInfo[targetid][gun_skills][0], PlayerInfo[targetid][gun_skills][1], PlayerInfo[targetid][gun_skills][2], PlayerInfo[targetid][gun_skills][3], PlayerInfo[targetid][gun_skills][4], PlayerInfo[targetid][gun_skills][5], PlayerInfo[targetid][gun_skills][6], PlayerInfo[targetid][id]);
					mysql_query(sql_connection, text_string);
				}
				case 5:
				{
					if(!(0 <= strval(inputtext) <= 100)) return show_dialog(playerid, d_setstat_2, DIALOG_STYLE_INPUT, !""scm_dialog"AK-47", !"Введите количество навыка владения оружием \"AK-47\":", !"Далее", !"Назад");

					new text_string[100];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно изменили навык владения оружием \"AK-47\" на %d%%", strval(inputtext));
					SendClientMessage(playerid, col_white, text_string);

					PlayerInfo[targetid][gun_skills][4] = strval(inputtext);
					SetPlayerSkills(targetid);

					format(text_string, sizeof(text_string), "UPDATE `users` SET `u_skills`='%d|%d|%d|%d|%d|%d|%d' WHERE `u_id`='%d' LIMIT 1", PlayerInfo[targetid][gun_skills][0], PlayerInfo[targetid][gun_skills][1], PlayerInfo[targetid][gun_skills][2], PlayerInfo[targetid][gun_skills][3], PlayerInfo[targetid][gun_skills][4], PlayerInfo[targetid][gun_skills][5], PlayerInfo[targetid][gun_skills][6], PlayerInfo[targetid][id]);
					mysql_query(sql_connection, text_string);
				}
				case 6:
				{
					if(!(0 <= strval(inputtext) <= 100)) return show_dialog(playerid, d_setstat_2, DIALOG_STYLE_INPUT, !""scm_dialog"M4A1", !"Введите количество навыка владения оружием \"M4A1\":", !"Далее", !"Назад");

					new text_string[100];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно изменили навык владения оружием \"M4A1\" на %d%%", strval(inputtext));
					SendClientMessage(playerid, col_white, text_string);

					PlayerInfo[targetid][gun_skills][5] = strval(inputtext);
					SetPlayerSkills(targetid);

					format(text_string, sizeof(text_string), "UPDATE `users` SET `u_skills`='%d|%d|%d|%d|%d|%d|%d' WHERE `u_id`='%d' LIMIT 1", PlayerInfo[targetid][gun_skills][0], PlayerInfo[targetid][gun_skills][1], PlayerInfo[targetid][gun_skills][2], PlayerInfo[targetid][gun_skills][3], PlayerInfo[targetid][gun_skills][4], PlayerInfo[targetid][gun_skills][5], PlayerInfo[targetid][gun_skills][6], PlayerInfo[targetid][id]);
					mysql_query(sql_connection, text_string);
				}
				case 7:
				{
					if(!(0 <= strval(inputtext) <= 100)) return show_dialog(playerid, d_setstat_2, DIALOG_STYLE_INPUT, !""scm_dialog"Sniper Rifle", !"Введите количество навыка владения оружием \"Sniper Rifle\":", !"Далее", !"Назад");

					new text_string[100];
					format(text_string, sizeof(text_string), ""scm_info"Вы успешно изменили навык владения оружием \"Sniper Rifle\" на %d%%", strval(inputtext));
					SendClientMessage(playerid, col_white, text_string);

					PlayerInfo[targetid][gun_skills][6] = strval(inputtext);
					SetPlayerSkills(targetid);

					format(text_string, sizeof(text_string), "UPDATE `users` SET `u_skills`='%d|%d|%d|%d|%d|%d|%d' WHERE `u_id`='%d' LIMIT 1", PlayerInfo[targetid][gun_skills][0], PlayerInfo[targetid][gun_skills][1], PlayerInfo[targetid][gun_skills][2], PlayerInfo[targetid][gun_skills][3], PlayerInfo[targetid][gun_skills][4], PlayerInfo[targetid][gun_skills][5], PlayerInfo[targetid][gun_skills][6], PlayerInfo[targetid][id]);
					mysql_query(sql_connection, text_string);
				}
			}
			DeletePVar(playerid, !"setstat_skill");

			new id_str[5];
			format(id_str, sizeof(id_str), "%d", targetid);
			pc_cmd_setstat(playerid, id_str);

			DeletePVar(playerid, !"target_id");
		}
		case d_carmenu:
		{
			if(response)
			{
				new step = 0;

				foreach(new _v_id : player_vehicles[playerid])
				{
					if(step++ == listitem)
					{
						CarMenuSelectedCar[playerid] = _v_id;
						break;
					}
				}

				for(new i = 0; i < sizeof TextDrawCarMenu; i++)
					TextDrawShowForPlayer(playerid, TextDrawCarMenu[i]);

				SelectTextDraw(playerid, 0x00FF00FF);
			}
		}
		case d_ahelp:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0:
				{
					show_dialog(playerid, d_ahelp_back, DIALOG_STYLE_MSGBOX, !""scm_dialog"Команды администратора | 1 уровень", !"\
					"c_server"/a"c_white" -чат администраторов\n\
					"c_server"/ans"c_white" -ответить игроку\n\
					"c_server"/arep"c_white" -жалобы в порядке живой очереди\n\
					"c_server"/admins"c_white" -список администрации в сети\n\
					"c_server"/ahelp"c_white" -посмотреть команды администрации\n\
					"c_server"/sp(off)"c_white" -начать / завершить слежку за игроком\n\
					"c_server"/iwep"c_white" -список оружия у игрока\n\
					"c_server"/afklist"c_white" -список игроков в AFK\n\
					"c_server"/tp"c_white" -панель телепортации\n\
					"c_server"/stats"c_white" -статистика игрока\n\
					"c_server"/spawn"c_white" -заспавнить игрока\n\
					"c_server"/money"c_white" -финансовая информация игрока\n\
					"c_server"/(un)freeze"c_white" -заморозить / разморозить игрока\n\
					"c_server"/slap"c_white" -подкинуть игрока\n\
					"c_server"/gmuse"c_white" -включить / отключить GodMode\n\
					"c_server"/getskill"c_white" -посмотреть навыки владения оружием игрока", !"Назад", !"Закрыть");
				}
				case 1:
				{
					show_dialog(playerid, d_ahelp_back, DIALOG_STYLE_MSGBOX, !""scm_dialog"Команды администратора | 2 уровень", !"\
					"c_server"/sd"c_white" -статистика выстрелов игрока\n\
					"c_server"/clearsd"c_white" -очистить статистику выстрелов\n\
					"c_server"/kick"c_white" -отключить игрока\n\
					"c_server"/(un)mute"c_white" -заблокировать / разблокировать чат игроку\n\
					"c_server"/mutelist"c_white" -список игроков с блокировкой чата\n\
					"c_server"/(un)jail"c_white" -посадить / выпустить игрока в тюрьму\n\
					"c_server"/goto"c_white" -телепортироваться к игроку\n\
					"c_server"/orglist"c_white" -список организаций\n\
					"c_server"/vlock"c_white" -открыть / закрыть транспорт", !"Назад", !"Закрыть");
				}
				case 2:
				{
					show_dialog(playerid, d_ahelp_back, DIALOG_STYLE_MSGBOX, !""scm_dialog"Команды администратора | 3 уровень", !"\
					"c_server"/gotopos"c_white" -телепортироваться по координатам\n\
					"c_server"/setint"c_white" -изменить интерьер\n\
					"c_server"/setvw"c_white" -изменить виртуальный мир\n\
					"c_server"/(un)warn"c_white" -выдать / снять предупреждение\n\
					"c_server"/warnlist"c_white" -посмотреть список предупреждений\n\
					"c_server"/getip"c_white" -посмотреть IP игрока\n\
					"c_server"/offstats"c_white" -посмотреть статистику в оффлайне\n\
					"c_server"/ban"c_white" -заблокировать аккаунт\n\
					"c_server"/banhistory"c_white" -информация о блокировке игрока\n\
					"c_server"/moneylog"c_white" -история финансов\n\
					"c_server"/spcar"c_white" -заспавнить транспорт в радиусе\n\
					"c_server"/spcarid"c_white" -заспавнить транспорт по ID\n\
					"c_server"/okay"c_white" -подтвердить изменение ника\n\
					"c_server"/blacklist"c_white" -чёрный список организаций\n\
					"c_server"/gethere"c_white" -телепортировать игрока к себе\n\
					"c_server"/gotoveh"c_white" -телепортироваться к транспорту\n\
					"c_server"/gethereveh"c_white" -телепортировать транспорт к себе\n\
					"c_server"/gotobiz"c_white" -телепортироваться к бизнесу\n\
					"c_server"/gotohouse"c_white" -телепортироваться к дому\n\
					"c_server"/connections"c_white" -статистика входов\n\
					"c_server"/sethp"c_white" -установить здоровье\n\
					"c_server"/setarmour"c_white" -установить броню\n\
					"c_server"/hpcar"c_white" -починить транспорт\n\
					"c_server"/hpcarid"c_white" -починить транспорт по ID\n\
					"c_server"/inter"c_white" -телепортироваться в интерьер\n\
					"c_server"/ipaccounts"c_white" -посмотреть аккаунты по IP адресу\n\
					"c_server"/afind"c_white" -посмотреть онлайн организации\n\
					"c_server"/achat"c_white" -начать прослушку чата организации", !"Назад", !"Закрыть");
				}
				case 3:
				{
					show_dialog(playerid, d_ahelp_back, DIALOG_STYLE_MSGBOX, !""scm_dialog"Команды администратора | 4 уровень", !"\
					"c_server"/skick"c_white" -тихо отключить игрока\n\
					"c_server"/offmute"c_white" -выдать блокировку чата в оффлайне\n\
					"c_server"/offjail"c_white" -посадить игрока в тюрьму в оффлайне\n\
					"c_server"/offleaders"c_white" -посмотреть список лидеров в оффлайне\n\
					"c_server"/spcartime"c_white" -заспавнить весь транспорт через n время\n\
					"c_server"/(off)get"c_white" -информация об аккаунте (в оффлайне)\n\
					"c_server"/sban"c_white" -тихо заблокировать аккаунт\n\
					"c_server"/weather"c_white" -изменить погоду на сервере\n\
					"c_server"/(del)veh"c_white" -создать / удалить транспорт\n\
					"c_server"/clearchat"c_white" -очистить чат\n\
					"c_server"/afill"c_white" -залить транспорт по ID\n\
					"c_server"/offmoneylog"c_white" -история финансов в оффлайне\n\
					"c_server"/agun"c_white" -выдать оружие\n\
					"c_server"/resetweapon"c_white" -забрать всё оружие\n\
					"c_server"/skin"c_white" -выдать временный скин\n\
					"c_server"/msg"c_white" -общий чат\n\
					"c_server"/auninvite"c_white" -уволить игрока из организации\n\
					"c_server"/offuninvite"c_white" -уволить игрока из организации в оффлайне\n\
					"c_server"/satiety"c_white" -пополнить сытость игроку\n\
					"c_server"/templeader"c_white" -выдать временную лидерку\n\
					"c_server"/gzowner"c_white" -покрасить территорию\n\
					"c_server"/freezepanel"c_white" -заморозить / разморозить банду\n\
					"c_server"/ears"c_white" -начать прослушивание SMS\n\
					"c_server"/mp"c_white" -меню мероприятий\n\
					"c_server"/plveh"c_white" -выдать автомобиль игроку\n\
					"c_server"/(start | stop)mp"c_white" -открыть / закрыть телепорт на МП", !"Назад", !"Закрыть");
				}
				case 4:
				{
					show_dialog(playerid, d_ahelp_back, DIALOG_STYLE_MSGBOX, !""scm_dialog"Команды администратора | 5 уровень", !"\
					"c_server"/offleader"c_white" -снять лидера в оффлайне\n\
					"c_server"/off(un)warn"c_white" -выдать / снять предупреждение в оффлайне\n\
					"c_server"/offban"c_white" -заблокировать аккаунт в оффлайне\n\
					"c_server"/unban"c_white" -разблокировать аккаунт\n\
					"c_server"/(un)banip"c_white" -заблокировать / разблокировать IP адрес\n\
					"c_server"/makeleader"c_white" -назначить / снять лидера организации\n\
					"c_server"/destroyveh"c_white" -удалить созданный транспорт\n\
					"c_server"/start(paint | race)"c_white" -запустить регистрацию на PaintBall / Гонку\n\
					"c_server"/newveh"c_white" -создать транспорт", !"Назад", !"Закрыть");
				}
				case 5:
				{
					show_dialog(playerid, d_ahelp_back, DIALOG_STYLE_MSGBOX, !""scm_dialog"Команды администратора | 6 уровень", !"\
					"c_server"/asettime"c_white" -изменить время на сервере\n\
					"c_server"/givelic"c_white" -выдать лицензии\n\
					"c_server"/election"c_white" -управление выборами\n\
					"c_server"/changeskin"c_white" -выдать постоянный скин\n\
					"c_server"/giveskill"c_white" -выдать навыки владения оружием\n\
					"c_server"/makeadmin"c_white" -назначить игрока администратором\n\
					"c_server"/offadmins"c_white" -посмотреть список администрации в оффлайне\n\
					"c_server"/fullinfo"c_white" -полная статистика игрока", !"Назад", !"Закрыть");
				}
				case 6:
				{
					show_dialog(playerid, d_ahelp_back, DIALOG_STYLE_MSGBOX, !""scm_dialog"Команды администратора | 7 уровень", !"\
					"c_server"/setbproduct"c_white" -установить продукты в бизнесе\n\
					"c_server"/delacc"c_white" -удалить аккаунт\n\
					"c_server"/abonus"c_white" -управление бонусами\n\
					"c_server"/setstat"c_white" -управление аккаунтом\n\
					"c_server"/asellbiz"c_white" -продать бизнес в гос\n\
					"c_server"/asellhouse"c_white" -продать дом в гос\n\
					"c_server"/redpanel"c_white" -панель управления сервером", !"Назад", !"Закрыть");
				}
				case 7:
				{
					show_dialog(playerid, d_ahelp_back, DIALOG_STYLE_MSGBOX, !""scm_dialog"Команды разработчика", !"\
					"c_server"/gzid"c_white" -узнать номер территории\n\
					"c_server"/rr"c_white" -запустить рестарт на сервере\n\
					"c_server"/createhouse"c_white" -создать дом\n\
					"c_server"/hgarage"c_white" -установить гараж для дома\n\
					"c_server"/createisland"c_white" -создать семейный остров\n\
					"c_server"/createbusiness"c_white" -создать бизнес\n\
					"c_server"/intlist"c_white" -интерьеры для бизнесов\n\
					"c_server"/createservervehicle"c_white" -создать транспорт на сервере\n\
					"c_server"/createarea"c_white" -создать пикап\n\
					"c_server"/endarea"c_white" -завершить установку пикапа\n\
					"c_server"/gotohint"c_white" -телепортировать в интерьер дома\n\
					"c_server"/createfvehicle"c_white" -создать организационный транспорт\n\
					"c_server"/setfvehiclemodel"c_white" -изменить модель организационного транспорта\n\
					"c_server"/setfvehiclecolor"c_white" -изменить цвет организационного транспорта\n\
					"c_server"/paydaytest"c_white" -запустить PayDay\n\
					"c_server"/fspawnchange"c_white" -изменить спавн организации\n\
					"c_server"/creategarb"c_white" -создать мусорный бак\n\
					"c_server"/updorms"c_white" -пополнить склады начальных работ\n\
					"c_server"/servername"c_white" -изменить название сервера\n\
					"c_server"/givedonate"c_white" -выдать донат-рубли", !"Назад", !"Закрыть");
				}
			}
		}
		case d_ahelp_back:
		{
			if(!response) return 1;
			pc_cmd_ahelp(playerid);
		}
  		case d_reg_race:
		{
			if(GetPVarInt(playerid, "step_reg") != 3)
			    return 1;
			    
    		if(!response) return 1;

			reg_info[playerid][reg_skin] = 0;
			reg_info[playerid][reg_national] = listitem + 1;
			
			return SendClientMessage(playerid, col_white, !""scm_sucess"Вы установили расу."), SetPVarInt(playerid, "step_reg", 4);
		}
		case d_reg_gender:
		{
			if(GetPVarInt(playerid, "step_reg") != 2)
			    return SendClientMessage(playerid, col_white, !""scm_error"Сначала введите почту.");
			    
    		if(!response) return 1;
			reg_info[playerid][reg_skin] = 0;
			reg_info[playerid][reg_gender] = listitem + 1;
			show_dialog(playerid, d_reg_race, DIALOG_STYLE_LIST, !""scm_dialog"Регистрация нового аккаунта", !"Негроид\nЕвропеоид\nМонголоид", !"Далее", !"Отмена");
			
			return SendClientMessage(playerid, col_white, !""scm_sucess"Вы установили пол."), SetPVarInt(playerid, "step_reg", 3);
		}
		case d_reg_age:
		{
			if(GetPVarInt(playerid, "step_reg") != 4)
			    return SendClientMessage(playerid, col_white, !""scm_error"Сначала выберите пол и расу.");
			    
			if(!response) return 1;
			if(!(18 <= strval(inputtext) <= 32)) return show_dialog(playerid, d_reg_age, DIALOG_STYLE_INPUT, !""scm_dialog"Регистрация нового аккаунта", !""c_white"Пожалуйста, введите возраст персонажа в поле ниже:\n"c_grey"-Возраст персонажа должен быть не менее 18 и не более 32 лет.", !"Далее", !"Назад");

			reg_info[playerid][reg_age] = strval(inputtext);
			
			return SendClientMessage(playerid, col_white, !""scm_sucess"Вы установили возраст."), SetPVarInt(playerid, "step_reg", 5);
		}
		case d_reg_referal:
		{
			if(!response) return 1;
			if((strlen(inputtext) < 6 || strlen(inputtext) > 24) || is_text_invalid(inputtext)) return show_dialog(playerid, d_reg_referal, DIALOG_STYLE_INPUT, !""scm_dialog"Регистрация нового аккаунта", ""c_white"Пожалуйста, введите имя игрока, который пригласил Вас на данный сервер\n\n"c_grey"-По достижению Вами 3 уровня игрок получит денежное вознаграждение\n\nДанного аккаунта не существует.", !"Далее", !"Пропустить");

			new query_string[52 + MAX_PLAYER_NAME];
			mysql_format(sql_connection, query_string, sizeof(query_string), "SELECT * FROM `users` WHERE `u_name`='%e' LIMIT 1", inputtext);
			mysql_tquery(sql_connection, query_string, "check_referal", "is", playerid, inputtext);
			return 1;
		}
		case d_reg_pass:
		{
			if(!response) return 1;
			if(!(6 <= strlen(inputtext) <= 15) || is_text_invalid(inputtext)) return show_dialog(playerid, d_reg_pass, DIALOG_STYLE_INPUT, !""scm_dialog"Регистрация нового аккаунта", !""c_white"Добро пожаловать на "c_server"Elive Role Play"c_white"\nДля продолжения игры, Вам необходимо пройти простой этап регистрации.\n\nПожалуйста, введите Ваш будущий пароль ниже:\n\n"c_grey"\t-Длина пароля должна составлять от 6 до 15 символов.\n\t-Используйте цифры и латинские буквы разного регистра.\n\t-Мы не рекомендуем вводить пароль, который Вы используете на других ресурсах.\n\nВы ввели некорректные символы или пароль слишком короткий / длинный.", !"Далее", !"");

			format(reg_info[playerid][reg_password], 32, "%s", inputtext);
			return SendClientMessage(playerid, col_white, !""scm_sucess"Вы установили пароль."), SetPVarInt(playerid, "step_reg", 1);
		}
		case d_reg_email:
		{
			if(GetPVarInt(playerid, "step_reg") != 1)
			    return SendClientMessage(playerid, col_white, !""scm_error"Сначала придумайте пароль.");
			    
    		if(!response)
    			return 1;
			if(strfind(inputtext, "@", false) == -1 || strfind(inputtext, ".", false) == -1 || is_text_invalid(inputtext))
			{
				show_dialog(playerid, d_reg_email, DIALOG_STYLE_INPUT, ""c_server"Регистрация нового аккаунта -"c_white" E-Mail:", ""c_white"\nПожалуйста, введите Ваш действующий E-Mail:\n\n"c_grey"* E-Mail должен содержать следующие символы: '@' и '.'\n\n"c_orange_red"* Ошибка! Email не соответствует установленному формату", "Далее", "Назад");
				return 1;
			}
			format(reg_info[playerid][reg_email], 32, "%s", inputtext);
			return SendClientMessage(playerid, col_white, !""scm_sucess"Вы установили E-Mail."), SetPVarInt(playerid, "step_reg", 2);
		}
		case d_login:
		{
			if(!response)
				return 1;
				
			if(!(6 <= strlen(inputtext)<= 31)|| is_text_invalid(inputtext))
			{
				new dialog_string[176 + MAX_PLAYER_NAME];
				format(dialog_string, sizeof(dialog_string),"\
				"c_white"Добро пожаловать на сервер "c_server"Elive Role Play\n\n\
			    "c_server"-"c_white" Данный аккаунт зарегистрирован.\n\
			    "c_server"-"c_white" Ваш никнейм: %s\n\
				\n"c_grey"-Введите Ваш пароль:", PlayerInfo[playerid][name]);
				show_dialog(playerid, d_login, DIALOG_STYLE_PASSWORD, !""scm_dialog"Авторизация", dialog_string, !"Вход", !"Закрыть");
				
				return 1;
			}
			SetPVarString(playerid, "password_text", inputtext);
			
			return SendClientMessage(playerid, col_white, !""scm_sucess"Пароль введён.");
		}

		case d_bad_login:
		{
			new dialog_string[176 + MAX_PLAYER_NAME];
			format(dialog_string, sizeof(dialog_string),"\
			"c_white"Добро пожаловать на сервер "c_server"Elive Role Play\n\n\
			"c_server"-"c_white" Данный аккаунт зарегистрирован.\n\
			"c_server"-"c_white" Ваш никнейм: %s\n\
			\n"c_grey"-Введите Ваш пароль:", PlayerInfo[playerid][name]);
			show_dialog(playerid, d_login, DIALOG_STYLE_PASSWORD, !""scm_dialog"Авторизация", dialog_string, !"Вход", !"Закрыть");
			return 1;
		}
		
		case d_cellar:
		{
			if(!response) return DeletePVar(playerid, "cellar_dialog"), DeletePVar(playerid, "cellar_id");
			new h = GetPVarInt(playerid, "cellar_id")-1;
			if(GetPVarInt(playerid, "cellar_dialog") ==  1)
			{
				if(!IsPlayerInRangeOfPoint(playerid, 2.00, cellar_info[h][cl_pos][0], cellar_info[h][cl_pos][1], cellar_info[h][cl_pos][2]))
				{
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы слишком далеко от объекта недвижимости.");
					DeletePVar(playerid, "cellar_id"), DeletePVar(playerid, "house_dialog");
					return 1;
				}
				if(cellar_info[h][cl_owner] != -1)
				{
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Данная недвижимость уже находится в частной собственности.");
					DeletePVar(playerid, "cellar_id"), DeletePVar(playerid, "house_dialog");
					return 1;
				}
				if(PlayerInfo[playerid][money] < cellar_info[h][cl_price])
				{
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас не хватает средств для приобретения недвижимости.");
					return 1;
				}
				if(PlayerInfo[playerid][cellar] != -1)
				{
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас в собственности уже есть подвал.");
					return 1;
				}
				cellar_info[h][cl_owner] = PlayerInfo[playerid][id];
				PlayerInfo[playerid][cellar] = cellar_info[h][cl_id];
				format(cellar_info[h][cl_owner_name], MAX_PLAYER_NAME, "%s", PlayerInfo[playerid][name]);



				give_money(playerid, -cellar_info[h][cl_price]);
				insert_money_log(playerid, INVALID_PLAYER_ID, -cellar_info[h][cl_price], "покупка подвала");
				SendClientMessage(playerid, col_white, ""c_green"* "c_grey"Вы успешно приобрели подвал.");

				update_int_sql(playerid, "u_cellar", PlayerInfo[playerid][cellar]);
				save_house(h);
				DeletePVar(playerid, "cellar_id");
				SetPVarInt(playerid, "tp_area_used", 1);
				teleport_tick[playerid] = GetTickCount();
				save_cellar(h);
			}
			else
			{
				if(cellar_info[h][cl_closed] == 1)
				{
					DeletePVar(playerid, "cellar_id");
					DeletePVar(playerid, "cellar_dialog");
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Дверь подвала заперта. Чтобы открыть введите "c_white"'/cellarlock'"c_grey".");
					return GameTextForPlayer(playerid, "~r~CELLAR CLOSED", 2000, 4);
				}
				set_pos(playerid, 1400.0562, -9.9276, 1000.9152, 176.1147, 4, cellar_info[h][cl_id] + house_count);

				SetPVarInt(playerid, "tp_area_used", 1);
				teleport_tick[playerid] = GetTickCount();
			}
			DeletePVar(playerid, "cellar_dialog");
		}
		case d_cellar_action:
		{
			if(!response) return 1;
			new house_id = GetPVarInt(playerid, "cellar_id")-1;
			switch(listitem)
			{
				case 0:
				{
					if(!cellar_info[house_id][cl_improve][3]) return show_cellarmenu(playerid), SendClientMessage(playerid, col_gray, "У Вас нет данного улучшения.");
					new h = GetPVarInt(playerid, "cellar_id")-1;
					new d_string[172];
					format(d_string, sizeof(d_string), "\
					"c_server"Посажено семян: "c_grey"%d гр."c_server" | Урожай: "c_grey"%d гр.\n\
					"c_grey"-"c_white"Посадить семена\n"c_grey"-"c_white"Переработка урожая",
					cellar_info[h][cl_seed], cellar_info[h][cl_seed_result]);
					show_dialog(playerid, d_cellar_cl_ceedmenu, DIALOG_STYLE_LIST, ""c_server"Подвал", d_string, "Выбрать", "Закрыть");
				}
				case 1:
				{
					if(!cellar_info[house_id][cl_improve][0]) return show_cellarmenu(playerid), SendClientMessage(playerid, col_gray, "У Вас нет данного улучшения.");
					if(PlayerInfo[playerid][wanted] < 1) return show_cellarmenu(playerid), SendClientMessage(playerid, col_gray, "Вы не находитесь в розыске.");

					PlayerInfo[playerid][wanted] = 0;
					SetPlayerWantedLevel(playerid, PlayerInfo[playerid][wanted]);
					update_int_sql(playerid, "u_wanted", PlayerInfo[playerid][wanted]);

					SendClientMessage(playerid, col_lblue, "Вы успешно очистили себе розыск.");
				}
				case 2:
				{
					if(!cellar_info[house_id][cl_improve][2]) return show_cellarmenu(playerid), SendClientMessage(playerid, col_gray, "У Вас нет данного улучшения.");
					global_string = ""c_white"Название оружия\t"c_white"Количество ед.оружия\n";
					for(new i = 0; i < 7; i++)
					{
						format(global_string, 1000, "%s%s\t%i\n", global_string, mg_info[i][mg_name], mg_info[i][mg_guns] -12);
					}
					show_dialog(playerid, d_cellar_makegun, DIALOG_STYLE_TABLIST_HEADERS, ""c_server"Сборка оружия", global_string, "Выбрать", "Закрыть");
				}
			}
		}
		case d_cellar_makegun:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][crim_guns] < mg_info[listitem][mg_guns] -12)
			{
			    new _text_string[108];
				format(_text_string, 108, ""c_orange_red"* "c_grey"Вам нужно "c_orange_red"%d"c_grey" ед.оружия для сборки этого оружия.", mg_info[listitem][mg_guns] -12);
			    SendClientMessage(playerid, col_gray, _text_string);
			    return 1;
			}
            show_dialog(playerid, d_cellar_makegun_, DIALOG_STYLE_INPUT, ""c_server"Сборка оружия",""c_white"Сколько патронов вы хотите использовать для этого оружия?", "Собрать", "Отмена");
			SetPVarInt(playerid, "makegun_listitem", listitem);

		}
		case d_cellar_makegun_:
		{
			if(!response)
			{
				global_string = ""c_white"Название оружия\t"c_white"Количество ед.оружия\n";
				for(new i = 0; i < 7; i++)
				{
					format(global_string, 1000, "%s%s\t%i\n", global_string, mg_info[i][mg_name], mg_info[i][mg_guns] -12);
				}
				show_dialog(playerid, d_cellar_makegun_, DIALOG_STYLE_TABLIST_HEADERS, ""c_server"Сборка оружия", global_string, "Выбрать", "Закрыть");
				DeletePVar(playerid, "makegun_listitem");
				return 1;
			}

   			new ammos = strval(inputtext);
   			new listitem_gun = GetPVarInt(playerid, "makegun_listitem");
			if(ammos < 1 || ammos > 500)
			{
				SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Можно сделать от "c_orange_red"1 "c_grey"до "c_orange_red"500"c_grey".");
				return show_dialog(playerid, d_cellar_makegun_, DIALOG_STYLE_INPUT, ""c_server"Сборка оружия",""c_white"Сколько патронов вы хотите использовать для этого оружия?", "Собрать", "Отмена");
			}
			if(PlayerInfo[playerid][crim_ammo] < ammos) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У вас нет столько патронов.");

		    give_weapon(playerid, mg_info[listitem_gun][mg_gunid], ammos);

			me_action(playerid, "сделал(-а) оружие из деталей");
			SetPlayerChatBubble(playerid, "собрал оружие", col_light_purple, 30.0, 10000);

            PlayerInfo[playerid][crim_ammo] -= ammos;
            if(GetPlayerWeapon(playerid)!= mg_info[listitem_gun][mg_gunid])
            {
				PlayerInfo[playerid][crim_guns] -=(mg_info[listitem_gun][mg_guns] -12);
			}
			update_int_sql(playerid, "u_ammo", PlayerInfo[playerid][crim_ammo]);
			update_int_sql(playerid, "u_guns", PlayerInfo[playerid][crim_guns]);


			DeletePVar(playerid, "makegun_listitem");
		    return 1;
		}
		case d_house:
		{
			if(!response) return DeletePVar(playerid, "house_dialog"), DeletePVar(playerid, "house_id");
			new h = GetPVarInt(playerid, "house_id")-1;
			if(GetPVarInt(playerid, "house_dialog") ==  1)
			{
				if(!IsPlayerInRangeOfPoint(playerid, 2.00, h_info[h][h_pos][0], h_info[h][h_pos][1], h_info[h][h_pos][2]))
				{
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы слишком далеко от объекта недвижимости.");
					DeletePVar(playerid, "house_id"), DeletePVar(playerid, "house_dialog");
					return 1;
				}
				if(h_info[h][h_owner] != -1)
				{
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Данная недвижимость уже находится в частной собственности.");
					DeletePVar(playerid, "house_id"), DeletePVar(playerid, "house_dialog");
					return 1;
				}
				if(PlayerInfo[playerid][money] < h_info[h][h_price])
				{
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас не хватает средств для приобретения недвижимости.");
					return 1;
				}
				if(PlayerInfo[playerid][house] != -1)
				{
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас в собственности уже есть недвижимость.");
					return 1;
				}
				h_info[h][h_owner] = PlayerInfo[playerid][id];
				PlayerInfo[playerid][house] = h_info[h][h_id];
				format(h_info[h][h_owner_name], MAX_PLAYER_NAME, "%s", PlayerInfo[playerid][name]);
				h_info[h][h_closed] = 0;
				h_info[h][h_rent_price] = 0;
				h_info[h][h_payment] = 0;

				DestroyDynamicPickup(h_info[h][h_pickup]);
				if(!h_info[h][h_vw]) DestroyDynamicMapIcon(h_info[h][h_icon_id]);

				h_info[h][h_pickup] = CreateDynamicPickup(1272, 23, h_info[h][h_pos][0], h_info[h][h_pos][1], h_info[h][h_pos][2], h_info[h][h_vw], -1);
				if(!h_info[h][h_vw]) h_info[h][h_icon_id] = CreateDynamicMapIcon(h_info[h][h_pos][0], h_info[h][h_pos][1], h_info[h][h_pos][2], 32, 0, 0, 0, -1, 300.0);
				give_money(playerid, -h_info[h][h_price]);
				insert_money_log(playerid, INVALID_PLAYER_ID, -h_info[h][h_price], "покупка дома");
				SendClientMessage(playerid, col_white, ""c_green"* "c_grey"Вы успешно приобрели данную недвижимость.");

				PlayerInfo[playerid][spawnchange] = 1;
				update_int_sql(playerid, "u_spawnchange", PlayerInfo[playerid][spawnchange]);
				update_int_sql(playerid, "u_house", PlayerInfo[playerid][house]);
				save_house(h);
				DeletePVar(playerid, "house_id");
				SetPVarInt(playerid, "tp_area_used", 1);
				teleport_tick[playerid] = GetTickCount();

			}
			else
			{
				if(h_info[h][h_closed] == 1)
				{
					DeletePVar(playerid, "house_id");
					DeletePVar(playerid, "house_dialog");
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Дверь дома заперта. Чтобы открыть введите "c_white"'/hlock'"c_grey".");
					return GameTextForPlayer(playerid, "~r~HOUSE CLOSED", 2000, 4);
				}
				new hint = h_info[h][h_int] -1;
				set_pos(playerid, house_int[hint][hint_position][0], house_int[hint][hint_position][1], house_int[hint][hint_position][2], house_int[hint][hint_position][3], house_int[hint][hint_int], h_info[h][h_id]);
				if(h_info[h][h_radio_status] == 1)PlayAudioStreamForPlayer(playerid, h_info[h][h_radio_url]);

				SetPVarInt(playerid, "tp_area_used", 1);
				teleport_tick[playerid] = GetTickCount();

			}
			DeletePVar(playerid, "house_dialog");
		}
		case d_sellhouse:
		{
			if(!response) return 1;
			new s_house_id = PlayerInfo[playerid][house] -1;
			format(h_info[s_house_id][h_owner_name], MAX_PLAYER_NAME, "Собственность штата");

			h_info[s_house_id][h_owner] = -1;
			h_info[s_house_id][h_closed] = 0;
			give_money(playerid, h_info[s_house_id][h_price]/ 2);
			insert_money_log(playerid, INVALID_PLAYER_ID, h_info[s_house_id][h_price]/ 2, "продажа дома");

			PlayerInfo[playerid][house] = -1;

			DestroyDynamicPickup(h_info[s_house_id][h_pickup]);
			if(!h_info[s_house_id][h_vw]) DestroyDynamicMapIcon(h_info[s_house_id][h_icon_id]);
			h_info[s_house_id][h_pickup] = CreateDynamicPickup(1273, 23, h_info[s_house_id][h_pos][0], h_info[s_house_id][h_pos][1], h_info[s_house_id][h_pos][2], h_info[s_house_id][h_vw], -1);
			if(!h_info[s_house_id][h_vw]) h_info[s_house_id][h_icon_id] = CreateDynamicMapIcon(h_info[s_house_id][h_pos][0], h_info[s_house_id][h_pos][1], h_info[s_house_id][h_pos][2], 31, 0, 0, 0, -1, 300.0);

			update_int_sql(playerid, "u_house", PlayerInfo[playerid][house]);
			save_house(s_house_id);

			PlayerInfo[playerid][spawnchange] = 0;
			update_int_sql(playerid, "u_spawnchange", PlayerInfo[playerid][spawnchange]);


			new data[48], query[128];
			for(new i;i<8;i++)
			{
				h_info[s_house_id][h_improve][i] = 0;
				if(!i) format(data, sizeof(data),"%d", h_info[s_house_id][h_improve][i]);
				else format(data, sizeof(data),"%s|%d", data, h_info[s_house_id][h_improve][i]);
			}
			format(query,sizeof(query),"UPDATE `houses` SET `h_improve` = '%s' WHERE `h_id` = '%d'", data, s_house_id + 1);
			mysql_tquery(sql_connection, query);

            h_info[s_house_id][h_safe_code] = 0;
 			format(query, sizeof query, "UPDATE `houses` SET `h_safe_code` = '0000' WHERE `h_id` = '%d' LIMIT 1",h_info[s_house_id][h_id]);
			mysql_tquery(sql_connection, query);


			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно продали недвижимость государству.");
		}
		case d_sellisland:
		{
			if(!response) return 1;

			new island_id = PlayerInfo[playerid][island] -1, family_id = PlayerInfo[playerid][family];
			format(fi_info[island_id][fi_owner_name], MAX_PLAYER_NAME, "Собственность штата");

			fi_info[island_id][fi_owner] = -1;
			fi_info[island_id][fi_family] = 0;

			PlayerInfo[playerid][island] = -1;
			update_int_sql(playerid, "u_island", PlayerInfo[playerid][island]);

			PlayerInfo[playerid][spawnchange] = 0;
			update_int_sql(playerid, "u_spawnchange", PlayerInfo[playerid][spawnchange]);

			for(new i; i < 6; i++)
				fi_info[island_id][fi_improve][i] = 0;

			fi_info[island_id][fi_safe_code] = 0;

			save_island(island_id);

			family_info[family_id -1][fam_house] = 0;

			new query_string[80];
			format(query_string, sizeof(query_string), "UPDATE `family` SET `fam_house`='0' WHERE `fam_id`='%d' LIMIT 1", family_id);
			mysql_query(sql_connection, query_string);

			family_info[PlayerInfo[playerid][family] -1][fam_bank] += (fi_info[island_id][fi_price] / 100) * 50;

			mysql_format(sql_connection, query_string, sizeof(query_string), "UPDATE `family` SET `fam_bank`='%d' WHERE `fam_id`='%d' LIMIT 1", family_info[family_id -1][fam_bank], family_id);
			mysql_query(sql_connection, query_string);

			new text_string[144];
			format(text_string, sizeof(text_string), "{%s}[Семья]"c_silver" %s %s[%d] продал(-а) семейный остров №%d", family_info[family_id -1][fam_chat_color], family_rank[family_id -1][PlayerInfo[playerid][family_rang] -1], PlayerInfo[playerid][name], playerid, fi_info[island_id][fi_id]);
			family_message(family_id, col_white, text_string);

			format(text_string, sizeof(text_string), ""scm_info"Вы успешно продали семейный остров №%d стоимостью "c_green"%d$", fi_info[island_id][fi_id], (fi_info[island_id][fi_price] / 100) * 50);
			SendClientMessage(playerid, col_white, text_string);

			format(text_string, sizeof(text_string), "Семейный остров №%d\nВладелец: "c_orange_red"отсутствует", fi_info[island_id][fi_id]);
			UpdateDynamic3DTextLabelText(fi_info[island_id][fi_text], col_white, text_string);
		}
		case d_h_sell_accept:
		{
			if(!response)
			{
				DeletePVar(GetPVarInt(playerid, "h_seller_id"), "h_sell_id");
				DeletePVar(playerid, "h_seller_id");
				DeletePVar(playerid, "h_seller_price");
				return 1;
			}
			else
			{
				if(PlayerInfo[GetPVarInt(playerid, "h_seller_id")][house] == -1)
				{
					DeletePVar(GetPVarInt(playerid, "h_seller_id"), "h_sell_id");
					DeletePVar(playerid, "h_seller_id");
					DeletePVar(playerid, "h_seller_price");

					return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У игрока нет жилья.");
				}
				if(PlayerInfo[playerid][house] != -1)
				{
					DeletePVar(GetPVarInt(playerid, "h_seller_id"), "h_sell_id");
					DeletePVar(playerid, "h_seller_id");
					DeletePVar(playerid, "h_seller_price");
					SendClientMessage(GetPVarInt(playerid, "h_seller_id"), col_gray, ""c_orange_red"* "c_grey"У игрока уже есть жильё.");
					return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас уже есть жилье.");
				}
				new h_price_int = GetPVarInt(playerid, "h_seller_price");
				if(PlayerInfo[playerid][money] < h_price_int)
				{
					DeletePVar(GetPVarInt(playerid, "h_seller_id"), "h_sell_id");
					DeletePVar(playerid, "h_seller_id");
					DeletePVar(playerid, "h_seller_price");
					SendClientMessage(GetPVarInt(playerid, "h_seller_id"), col_gray, ""c_orange_red"* "c_grey"У игрока нет такого количества денег.");
					return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет такого количества денег.");
				}
				new h_seller_id = GetPVarInt(playerid, "h_seller_id");
				if(!IsPlayerInRangeOfPoint(playerid, 5.00, p_t_info[h_seller_id][p_pos][0], p_t_info[h_seller_id][p_pos][1], p_t_info[h_seller_id][p_pos][2]) || p_t_info[playerid][p_data][1] != p_t_info[h_seller_id][p_data][1])
				{
					DeletePVar(GetPVarInt(playerid, "h_seller_id"), "h_sell_id");
					DeletePVar(playerid, "h_seller_id");
					DeletePVar(playerid, "h_seller_price");
					SendClientMessage(GetPVarInt(playerid, "h_seller_id"), col_gray, ""c_orange_red"* "c_grey"Покупатель слишком далеко.");
					return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы слишком далеко от продавца.");
				}
				if(GetPVarInt(h_seller_id, "h_sell_id")!= playerid)
				{
					DeletePVar(GetPVarInt(playerid, "h_seller_id"), "h_sell_id");
					DeletePVar(playerid, "h_seller_id");
					DeletePVar(playerid, "h_seller_price");
					return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"При покупке жилья произошла ошибка. Повторите попытку.");
				}

				PlayerInfo[playerid][house] = PlayerInfo[h_seller_id][house];
				PlayerInfo[h_seller_id][house] = -1;


				format(h_info[PlayerInfo[playerid][house] -1][h_owner_name], MAX_PLAYER_NAME, "%s", PlayerInfo[playerid][name]);
				h_info[PlayerInfo[playerid][house] -1][h_owner] = PlayerInfo[playerid][id];
				give_money(playerid, -h_price_int);
				give_money(h_seller_id, h_price_int);

				insert_money_log(h_seller_id, playerid, h_price_int, "продажа дома игроку");

				update_int_sql(playerid, "u_house", PlayerInfo[playerid][house]);
				update_int_sql(h_seller_id, "u_house", PlayerInfo[h_seller_id][house]);
				PlayerInfo[playerid][spawnchange] = 1;
				update_int_sql(playerid, "u_spawnchange", PlayerInfo[playerid][spawnchange]);

				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно приобрели жилье с рук. ");
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);

				new query_string[142 + MAX_PLAYER_NAME + 1];
				format(query_string, 138,"UPDATE `houses` SET `h_owner` = '%d',`h_ownername` = '%s' WHERE `h_id` = '%d' LIMIT 1", PlayerInfo[playerid][id], PlayerInfo[playerid][name], PlayerInfo[playerid][house]);
				mysql_tquery(sql_connection, query_string);

				format(query_string, 112, ""c_green"* "c_white"Вы продали своё жильё "c_green"%s "c_white"за "c_green"%d$", PlayerInfo[playerid][name], h_price_int);
				SendClientMessage(h_seller_id, col_succes, query_string);

				DeletePVar(h_seller_id, "h_sell_id");
				DeletePVar(playerid, "h_seller_id");
				DeletePVar(playerid, "h_seller_price");
			}
			return 1;
		}
		case d_b_buy:
		{
			if(!response)
			{
				new t = GetPVarInt(playerid, "p_biz_id")-1, dialog_string[144];
				format(dialog_string, sizeof(dialog_string),
				""c_white"Вы действительно желаете войти в %s?\n\n"c_grey"* Стоимость входа составляет "c_green"%d$", b_info[t][b_name], b_info[t][b_fee]);
				show_dialog(playerid, d_b_fee_enter, DIALOG_STYLE_MSGBOX, !""scm_dialog"Вход в бизнес", dialog_string, !"Войти", !"Отмена");
				return 1;
			}
			else
			{
				if(!response) return DeletePVar(playerid, "p_biz_id");
				if(PlayerInfo[playerid][business] != -1) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас уже есть бизнес.");
				new b = GetPVarInt(playerid, "p_biz_id")-1;
				if(!IsPlayerInRangeOfPoint(playerid, 2.00, b_info[b][b_position][0], b_info[b][b_position][1], b_info[b][b_position][2])) return SendClientMessage(playerid, col_gray, "Вы не рядом с бизнесом.");
				if(b_info[b][b_owner_inc] != -1) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Этот бизнес не продается.");
				if(b_info[b][b_price] > PlayerInfo[playerid][money]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Недостаточно денег для покупки бизнеса.");
				GetPlayerName(playerid, b_info[b][b_owner_name], MAX_PLAYER_NAME);
				b_info[b][b_owner_inc] = PlayerInfo[playerid][id];
				PlayerInfo[playerid][business] = b_info[b][b_id];
				give_money(playerid, -b_info[b][b_price]);


				insert_money_log(playerid, INVALID_PLAYER_ID, -b_info[b][b_price], "покупка бизнеса");

				update_int_sql(playerid, "u_business", PlayerInfo[playerid][business]);

			 	SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно приобрели данный бизнес.");
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new query_string[200 + MAX_PLAYER_NAME + 1];
				format(query_string, 156,"UPDATE `businesses` SET `b_owner_inc` = '%d', `b_owner_name` = '%s' WHERE `b_id` = '%d' LIMIT 1", PlayerInfo[playerid][id], PlayerInfo[playerid][name], b_info[b][b_id]);
				mysql_tquery(sql_connection, query_string);

				DeletePVar(playerid, "p_biz_id");
				if(b_info[b][b_type] == bizz_type_shop || b_info[b][b_type] == bizz_type_pharm || b_info[b][b_type] == bizz_type_electronic || b_info[b][b_type] == bizz_type_clothes || b_info[b][b_type] == bizz_type_carshop || b_info[b][b_type] == bizz_type_cafe || b_info[b][b_type] == bizz_type_club || b_info[b][b_type] == bizz_type_bar)
				{
					format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
					b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
					UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
				}

				else if(b_info[b][b_type] == bizz_type_gas)
				{
					format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль:"c_white" %s\n"c_grey"Состояние: "c_white"%s",
					b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыто") : ("{e11010}Закрыто"));
					UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
				}
				else if(b_info[b][b_type] == bizz_type_ammo)
				{
					format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
					b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], family_info[b_info[b][b_family] -1][fam_name],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
					UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
				}
				else if(b_info[b][b_type] == bizz_type_tune)
				{
					format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_white"Владелец: %s\nКонтроль: %s\nСостояние: %s",
					b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
					UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
				}
			}
  		}
		case d_main_inventory:
		{
			if(!response) return pc_cmd_menu(playerid);
			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][timejob] >= 50)
					{
						pc_cmd_menu(playerid);
						SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нельзя использовать аксессуары во время работы.");
						return 1;
					}
					new line_string[42];
					global_string[0] = EOS;
					strcat(global_string, ""c_server"Выберите слот аксессуара\n");
					for(new j = 0; j < 8; j ++)
					{
						if(PlayerInfo[playerid][accessories][j] == 0)
						{
							strcat(global_string, ""c_grey"-Пусто\n");
						}
						else
						{
							format(line_string, 42, ""c_white"-%s\n", get_accessorie_name(PlayerInfo[playerid][accessories][j]));
							strcat(global_string, line_string);
						}
					}
					show_dialog(playerid, d_main_accessories, DIALOG_STYLE_LIST, ""c_server"Аксессуары", global_string, "Выбрать", "Назад");
				}
				case 1:
				{
					if(heal_cooldown[playerid] > gettime()) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"Аптечные препараты можно использовать раз в "c_orange_red"5"c_grey" секунд.");
					if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
					if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");

					if(!PlayerInfo[playerid][aidkit]) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"У вас нет аптечки.");

					PlayerInfo[playerid][aidkit] -= 1;
					update_int_sql(playerid, "u_aidkit", PlayerInfo[playerid][aidkit]);

					new Float:pl_health;
					GetPlayerHealth(playerid, pl_health);
					if(pl_health + 65 > 160)set_health(playerid, 160);
					else set_health(playerid, pl_health + 65);

					GameTextForPlayer(playerid, "~g~+65HP", 2000, 1);
					heal_cooldown[playerid] = gettime() + 5;
					me_action(playerid, "использовал(-а) аптечку");
					if(GetPlayerState(playerid) ==  PLAYER_STATE_ONFOOT && ! GetPVarInt(playerid, "PlayerCuffed") && ! GetPVarInt(playerid, "PlayerTied")) ApplyAnimation(playerid, "ped", "gum_eat", 4.0, 0, 0, 0, 0, 0, 1);

				}
				case 2:
				{
					if(heal_cooldown[playerid] > gettime()) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"Аптечные препараты можно использовать раз в "c_orange_red"5"c_grey" секунд.");
					if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
					if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");

					if(!PlayerInfo[playerid][bandage]) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"У вас нет бинтов.");

					PlayerInfo[playerid][bandage] -= 1;
					update_int_sql(playerid, "u_bandage", PlayerInfo[playerid][bandage]);

					new Float:pl_health;
					GetPlayerHealth(playerid, pl_health);
					if(pl_health + 25 > 160)set_health(playerid, 160);
					else set_health(playerid, pl_health + 25);

					GameTextForPlayer(playerid, "~g~+25HP", 2000, 1);
					heal_cooldown[playerid] = gettime() + 5;
					me_action(playerid, "использовал(-а) бинты");
					if(GetPlayerState(playerid) ==  PLAYER_STATE_ONFOOT && ! GetPVarInt(playerid, "PlayerCuffed") && ! GetPVarInt(playerid, "PlayerTied")) ApplyAnimation(playerid, "ped", "gum_eat", 4.0, 0, 0, 0, 0, 0, 1);

				}
				case 3:
				{
					if(heal_cooldown[playerid] > gettime()) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"Аптечные препараты можно использовать раз в "c_orange_red"5"c_grey" секунд.");
					if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
					if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");

					if(!PlayerInfo[playerid][schiene]) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"У вас нет шин.");

					PlayerInfo[playerid][schiene] -= 1;
					update_int_sql(playerid, "u_schiene", PlayerInfo[playerid][schiene]);

					new Float:pl_health;
					GetPlayerHealth(playerid, pl_health);
					if(pl_health + 30 > 160)set_health(playerid, 160);
					else set_health(playerid, pl_health + 30);

					GameTextForPlayer(playerid, "~g~+30HP", 2000, 1);
					heal_cooldown[playerid] = gettime() + 5;
					me_action(playerid, "использовал(-а) шину");
					if(GetPlayerState(playerid) ==  PLAYER_STATE_ONFOOT && ! GetPVarInt(playerid, "PlayerCuffed") && ! GetPVarInt(playerid, "PlayerTied")) ApplyAnimation(playerid, "ped", "gum_eat", 4.0, 0, 0, 0, 0, 0, 1);

				}
				case 4:
				{
					if(heal_cooldown[playerid] > gettime()) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"Аптечные препараты можно использовать раз в "c_orange_red"5"c_grey" секунд.");
					if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
					if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");

					if(!PlayerInfo[playerid][aspirin]) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"У вас нет аспирина.");

					PlayerInfo[playerid][aspirin] -= 1;
					update_int_sql(playerid, "u_aspirin", PlayerInfo[playerid][aspirin]);

					new Float:pl_health;
					GetPlayerHealth(playerid, pl_health);
					if(pl_health > 50)
					{
						if(pl_health + 15 > 160)set_health(playerid, 160);
						else set_health(playerid, pl_health + 15);
					}
					GameTextForPlayer(playerid, "~g~+15HP", 2000, 1);
					heal_cooldown[playerid] = gettime() + 5;
					me_action(playerid, "использовал(-а) аспирин");
					if(GetPlayerState(playerid) ==  PLAYER_STATE_ONFOOT && ! GetPVarInt(playerid, "PlayerCuffed") && ! GetPVarInt(playerid, "PlayerTied")) ApplyAnimation(playerid, "ped", "gum_eat", 4.0, 0, 0, 0, 0, 0, 1);

				}
				case 5:
				{
					if(heal_cooldown[playerid] > gettime()) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"Аптечные препараты можно использовать раз в "c_orange_red"5"c_grey" секунд.");
					if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
					if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");

					if(!PlayerInfo[playerid][morphine]) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"У вас нет морфия.");

					PlayerInfo[playerid][morphine] -= 1;
					update_int_sql(playerid, "u_morphine", PlayerInfo[playerid][morphine]);

					new Float:pl_health;
					GetPlayerHealth(playerid, pl_health);
					if(pl_health > 10)
					{
						is_drug_effect {playerid} = 60;

						ApplyAnimation(playerid,"GANGS","smkcig_prtl_F",4.0,0,1,1,1,1);
						SetPlayerTime(playerid, 17, 0);
						SetPlayerDrunkLevel(playerid, 3000);
						SetPlayerWeather(playerid, -68);

					}
					else
					{
						set_health(playerid, 95);
						GameTextForPlayer(playerid, "~g~95HP", 2000, 1);

					}
					heal_cooldown[playerid] = gettime() + 5;
					me_action(playerid, "использовал(-а) морфий");
					if(GetPlayerState(playerid) ==  PLAYER_STATE_ONFOOT && ! GetPVarInt(playerid, "PlayerCuffed") && ! GetPVarInt(playerid, "PlayerTied")) ApplyAnimation(playerid, "ped", "gum_eat", 4.0, 0, 0, 0, 0, 0, 1);

				}
				case 6:
				{
					if(heal_cooldown[playerid] > gettime()) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"Аптечные препараты можно использовать раз в "c_orange_red"5"c_grey" секунд.");
					if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
					if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");

					if(!PlayerInfo[playerid][adrenalin]) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"У вас нет адреналина.");

					PlayerInfo[playerid][adrenalin] -= 1;
					update_int_sql(playerid, "u_adrenalin", PlayerInfo[playerid][adrenalin]);

					new Float:pl_health;
					GetPlayerHealth(playerid, pl_health);


					set_health(playerid, 160);
					GameTextForPlayer(playerid, "~g~160HP", 2000, 1);

					heal_cooldown[playerid] = gettime() + 5;
					me_action(playerid, "использовал(-а) адреналин");

					if(GetPlayerState(playerid) ==  PLAYER_STATE_ONFOOT && ! GetPVarInt(playerid, "PlayerCuffed") && ! GetPVarInt(playerid, "PlayerTied")) ApplyAnimation(playerid, "ped", "gum_eat", 4.0, 0, 0, 0, 0, 0, 1);
				}
			}
		}
		case d_mm:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0: show_stats(playerid, playerid);
				case 1: show_dialog(playerid, d_mm_cmds, DIALOG_STYLE_LIST, !""scm_dialog"Команды сервера", !""c_server"1 | "c_white"Общие команды\n"c_server"2 | "c_white"Работы\n"c_server"3 | "c_white"Общение (чаты)\n"c_server"4 | "c_white"Дом\n"c_server"5 | "c_white"Бизнес и АЗС\n"c_server"6 | "c_white"Организация\n"c_server"7 | "c_white"Лидерам\n"c_server"8 | "c_white"Транспорт\n"c_server"9 | "c_white"Семья", !"Выбрать", !"Назад");
				case 2: show_dialog(playerid, d_mm_settings, DIALOG_STYLE_LIST, !""scm_dialog"Настройки аккаунта", !""c_server"1 | "c_white"Настройки безопасности\n"c_server"2 | "c_white"Прочие настройки", !"Выбрать", !"Назад");
				case 3: pc_cmd_report(playerid);
				case 4: show_enhancements(playerid);
				case 5: show_dialog(playerid, d_mm_changename, DIALOG_STYLE_INPUT, !""scm_dialog"Изменить nonRP ник", !""c_white"Напишите новый ник в пустом поле диалогового окна, если Вы считаете, что он не соответствует правилам Role Play режима.\nПример: "c_silver"Ivan_Ivanov", !"Далее", !"Назад");
				case 6: show_donate(playerid);
				case 7: show_dialog(playerid, d_mm_promocode, DIALOG_STYLE_INPUT, !""scm_dialog"Промокод", !""c_white"На нашем проекте Вы можете ввести промокод и получить бонусный пакет\nЕсли у Вас имеется промокод, введите его здесь:", !"Далее", !"Назад");
			}
		}
		case d_mm_promocode:
		{
			if(!response) return pc_cmd_menu(playerid);

			if(is_text_invalid(inputtext))
			{
				show_dialog(playerid, d_mm_promocode, DIALOG_STYLE_INPUT, ""c_server"Промокод",
				""c_orange_red"* Вы ввели некорректные символы в качестве промокода.\n\n\
				"c_grey"-"c_white"На нашем проекте Вы можете ввести промокод и получить бонусный пакет.\n\n\
				"c_grey"* Если у Вас имеется промокод, введите его здесь:", "Принять", "Назад");
				return 1;
			}
			if(strlen(inputtext)< 4 || strlen(inputtext)> 20)
			{
				show_dialog(playerid, d_mm_promocode, DIALOG_STYLE_INPUT, ""c_server"Промокод",
				""c_orange_red"* Данный промокод не существует.\n\n\
				"c_grey"-"c_white"На нашем проекте Вы можете ввести промокод и получить бонусный пакет.\n\n\
				"c_grey"* Если у Вас имеется промокод, введите его здесь:", "Принять", "Назад");
				return 1;
			}
			new scm_string[98];
			mysql_format (sql_connection, scm_string, sizeof (scm_string), "SELECT * FROM `server_promocodes` WHERE `promo_text` = '%e' LIMIT 1",
																																				inputtext);
			mysql_tquery(sql_connection, scm_string, "promo_callback", "is", playerid, inputtext);

		}
		case d_mm_changename:
		{
			if(!response) return pc_cmd_menu(playerid);
			if(strlen(inputtext)< 6 || strlen(inputtext)> 20)
			{
				SendClientMessage(playerid, col_gray, "Вы ввели некорректный никнейм.");
				show_dialog(playerid, d_mm_changename, DIALOG_STYLE_INPUT, ""c_server"Смена нонРП ника",
				"Напишите новый никнейм в пустом поле диалогового окна, если Вы считаете, что Ваш не соответствует правилам RolePlay режима.\n\
				Пример: Ivan_Ivanov.", "Принять", "Назад");
				return 1;
			}
			new text_string[144];
			SendClientMessage(playerid, col_white, "Заявление на смену никнейма отправлена. Ожидайте решение администратора.");
			format(text_string, 144, "Заявление на смену nonRP никнейма от %s[%d]. Желаемый никнейм: %s", PlayerInfo[playerid][name], playerid, inputtext);
			foreach(new i: admin_players) SendClientMessage(i, 0x008E8CFF, text_string);
			format(change_name[playerid], 24, "%s", inputtext);
		}
		case d_mm_stats:
		{
			if(response) return show_dialog(playerid, d_mm_stats_2, DIALOG_STYLE_LIST, ""c_server"Информация о персонаже", ""c_server"1. "c_white"Навыки владения оружием\n"c_server"2. "c_white"Изученные стили боя\n"c_server"3. "c_white"Трудовая книжка\n"c_server"4. "c_grey"Улучшения персонажа\n"c_server"5. "c_white"Сменить место появления\n"c_server"6. "c_white"Навыки работ", "Выбрать", "Назад");
			else return 1;
		}
		case d_mm_stats_2:
		{
			if(!response) return show_stats(playerid, playerid);
			new str[5];
			format(str, sizeof(str), "%d", playerid);
			switch(listitem)
			{
				case 0: pc_cmd_skill(playerid, str);
				case 1: pc_cmd_fstyle(playerid);
				case 2: pc_cmd_joblist(playerid, str);
				case 3: show_enhancements(playerid);
				case 4: pc_cmd_spawnchange(playerid);
				case 5:show_dialog(playerid, d_mm_job_skills, DIALOG_STYLE_LIST, ""c_server"Навыки работ", ""c_server"1. "c_white"Дальнобойщик\n"c_server"2. "c_white"Работа в порту\n"c_server"3. "c_white"Работа на шахте\n"c_server"4. "c_white"Работа на лесопилке\n"c_server"5. "c_white"Работа на заводе", "Выбрать", "Назад");

			}
			return 1;
		}
		case d_mm_job_skills:
		{
			if(!response) return show_dialog(playerid, d_mm_stats_2, DIALOG_STYLE_LIST, ""c_server"Информация о персонаже", ""c_server"1. "c_white"Навыки владения оружием\n"c_server"2. "c_white"Изученные стили боя\n"c_server"3. "c_white"Трудовая книжка\n"c_server"4. "c_grey"Улучшения персонажа\n"c_server"5. "c_white"Сменить место появления\n"c_server"6. "c_white"Навыки работ", "Выбрать", "Назад");
			switch(listitem)
			{
				case 0:
				{
					global_string[0] = EOS;

					if(PlayerInfo[playerid][truck_skill] >= 0 && PlayerInfo[playerid][truck_skill]<= 29999)
					{
						format(global_string, 186,
						"\n\n"c_white"Ваш уровень: Новичок (1).\n\
						Доступный транспорт: Linerunner.\n\
						Перевезено груза: %d/30000 кг.", PlayerInfo[playerid][truck_skill]);
						show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Дальнобойщик", global_string, "Закрыть", "Назад");
					}
					else if(PlayerInfo[playerid][truck_skill] >= 30000 && PlayerInfo[playerid][truck_skill]<= 59999)
					{
						format(global_string, 186,
						"\n\n"c_white"Ваш уровень: Водила (2).\n\
						Доступный транспорт: Linerunner, Tanker.\n\
						Перевезено груза: %d/60000 кг.", PlayerInfo[playerid][truck_skill]);
						show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Дальнобойщик", global_string, "Закрыть", "Назад");

					}
					else if(PlayerInfo[playerid][truck_skill] >= 60000 && PlayerInfo[playerid][truck_skill]<= 89999)
					{
						format(global_string, 186,
						"\n\n"c_white"Ваш уровень: Эксперт (3).\n\
						Доступный транспорт: Linerunner, Tanker, Roadtrain.\n\
						Перевезено груза: %d/90000 кг.", PlayerInfo[playerid][truck_skill]);
						show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Дальнобойщик", global_string, "Закрыть", "Назад");

					}
					else
					{
						format(global_string, 186,
						"\n\n"c_white"Ваш уровень: Международный перевозчик (4).\n\
						Доступный транспорт: Linerunner, Tanker, Roadtrain.\n\
						Перевезено груза: %d.", PlayerInfo[playerid][truck_skill]);
						show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Дальнобойщик", global_string, "Закрыть", "Назад");

					}
				}
				case 1:
				{
					switch(PlayerInfo[playerid][newbie_job_skill][0])
					{
						case 0..50:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"До перехода на следующий уровень осталось "c_server"%d очков.",  PlayerInfo[playerid][newbie_job_skill][0],
							51 -PlayerInfo[playerid][newbie_job_skill][0]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа в порту", global_string, "Закрыть", "Назад");
						}
						case 51..100:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"До перехода на следующий уровень осталось "c_server"%d очков.",  PlayerInfo[playerid][newbie_job_skill][0],
							101 -PlayerInfo[playerid][newbie_job_skill][0]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа в порту", global_string, "Закрыть", "Назад");
						}
						case 101..150:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"До перехода на следующий уровень осталось "c_server"%d очков.",  PlayerInfo[playerid][newbie_job_skill][0],
							151 -PlayerInfo[playerid][newbie_job_skill][0]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа в порту", global_string, "Закрыть", "Назад");
						}
						case 151..200:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"До перехода на следующий уровень осталось "c_server"%d очков.",  PlayerInfo[playerid][newbie_job_skill][0],
							201 -PlayerInfo[playerid][newbie_job_skill][0]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа в порту", global_string, "Закрыть", "Назад");
						}
						default:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"* У Вас максимальный уровень навыка на данной работе",  PlayerInfo[playerid][newbie_job_skill][0]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа в порту", global_string, "Закрыть", "Назад");
						}
					}
				}
				case 2:
				{
					switch(PlayerInfo[playerid][newbie_job_skill][1])
					{
						case 0..50:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"До перехода на следующий уровень осталось "c_server"%d очков.",  PlayerInfo[playerid][newbie_job_skill][1],
							51 -PlayerInfo[playerid][newbie_job_skill][1]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа на шахте", global_string, "Закрыть", "Назад");
						}
						case 51..100:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"До перехода на следующий уровень осталось "c_server"%d очков.",  PlayerInfo[playerid][newbie_job_skill][1],
							101 -PlayerInfo[playerid][newbie_job_skill][1]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа на шахте", global_string, "Закрыть", "Назад");
						}
						case 101..150:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"До перехода на следующий уровень осталось "c_server"%d очков.",  PlayerInfo[playerid][newbie_job_skill][1],
							151 -PlayerInfo[playerid][newbie_job_skill][1]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа на шахте", global_string, "Закрыть", "Назад");
						}
						case 151..200:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"До перехода на следующий уровень осталось "c_server"%d очков.",  PlayerInfo[playerid][newbie_job_skill][1],
							201 -PlayerInfo[playerid][newbie_job_skill][1]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа на шахте", global_string, "Закрыть", "Назад");
						}
						default:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"* У Вас максимальный уровень навыка на данной работе",  PlayerInfo[playerid][newbie_job_skill][1]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа на шахте", global_string, "Закрыть", "Назад");
						}
					}
				}
				case 3:
				{
					switch(PlayerInfo[playerid][newbie_job_skill][2])
					{
						case 0..50:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"До перехода на следующий уровень осталось "c_server"%d очков.",  PlayerInfo[playerid][newbie_job_skill][2],
							51 -PlayerInfo[playerid][newbie_job_skill][2]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа на лесопилке", global_string, "Закрыть", "Назад");
						}
						case 51..100:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"До перехода на следующий уровень осталось "c_server"%d очков.",  PlayerInfo[playerid][newbie_job_skill][2],
							101 -PlayerInfo[playerid][newbie_job_skill][2]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа на лесопилке", global_string, "Закрыть", "Назад");
						}
						case 101..150:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"До перехода на следующий уровень осталось "c_server"%d очков.",  PlayerInfo[playerid][newbie_job_skill][2],
							151 -PlayerInfo[playerid][newbie_job_skill][2]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа на лесопилке", global_string, "Закрыть", "Назад");
						}
						case 151..200:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"До перехода на следующий уровень осталось "c_server"%d очков.",  PlayerInfo[playerid][newbie_job_skill][2],
							201 -PlayerInfo[playerid][newbie_job_skill][2]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа на лесопилке", global_string, "Закрыть", "Назад");
						}
						default:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"* У Вас максимальный уровень навыка на данной работе",  PlayerInfo[playerid][newbie_job_skill][2]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа на лесопилке", global_string, "Закрыть", "Назад");
						}
					}
				}
				case 4:
				{
					switch(PlayerInfo[playerid][newbie_job_skill][3])
					{
						case 0..50:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"До перехода на следующий уровень осталось "c_server"%d очков.",  PlayerInfo[playerid][newbie_job_skill][3],
							51 -PlayerInfo[playerid][newbie_job_skill][3]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа на лесопилке", global_string, "Закрыть", "Назад");
						}
						case 51..100:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"До перехода на следующий уровень осталось "c_server"%d очков.",  PlayerInfo[playerid][newbie_job_skill][3],
							101 -PlayerInfo[playerid][newbie_job_skill][3]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа на лесопилке", global_string, "Закрыть", "Назад");
						}
						case 101..150:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"До перехода на следующий уровень осталось "c_server"%d очков.",  PlayerInfo[playerid][newbie_job_skill][3],
							151 -PlayerInfo[playerid][newbie_job_skill][3]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа на лесопилке", global_string, "Закрыть", "Назад");
						}
						case 151..200:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"До перехода на следующий уровень осталось "c_server"%d очков.",  PlayerInfo[playerid][newbie_job_skill][3],
							201 -PlayerInfo[playerid][newbie_job_skill][3]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа на лесопилке", global_string, "Закрыть", "Назад");
						}
						default:
						{
							format(global_string, 186,
							"\n\n"c_white"Ваш уровень навыка: "c_server"%d\n\n\
							"c_grey"* У Вас максимальный уровень навыка на данной работе",  PlayerInfo[playerid][newbie_job_skill][3]);
							show_dialog(playerid, d_job_skill, DIALOG_STYLE_MSGBOX,""c_server"Работа на лесопилке", global_string, "Закрыть", "Назад");
						}
					}
				}
			}
		}
		case d_job_skill:
		{
			if(!response) return show_dialog(playerid, d_mm_job_skills, DIALOG_STYLE_LIST, ""c_server"Навыки работ", ""c_server"1. "c_white"Дальнобойщик\n"c_server"2. "c_white"Работа в порту\n"c_server"3. "c_white"Работа на шахте\n"c_server"4. "c_white"Работа на лесопилке\n"c_server"5. "c_white"Работа на заводе", "Выбрать", "Назад");

		}
		case d_mm_fstyle:
		{
			if(!response) return pc_cmd_menu(playerid);
			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][fight_skill] < 1000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы еще не выучили этот стиль боя!");
					PlayerInfo[playerid][fight_style] = 5;
					SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы изменили свой стиль боя на "c_green"бокс");
				}
				case 1:
				{
					if(PlayerInfo[playerid][fight_skill] < 3000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы еще не выучили этот стиль боя!");
					PlayerInfo[playerid][fight_style] = 6;
					SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы изменили свой стиль боя на "c_green"кунг-фу");
				}
				case 2:
				{
					if(PlayerInfo[playerid][fight_skill] < 6000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы еще не выучили этот стиль боя!");
					PlayerInfo[playerid][fight_style] = 7;

					SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы изменили свой стиль боя на "c_green"кикбокс");
				}
			}
			update_int_sql(playerid, "u_fight_style", PlayerInfo[playerid][fight_style]);
		}
		case d_mm_cmds:
		{
			if(!response) return pc_cmd_menu(playerid);
			switch(listitem)
			{

				case 0:
				{
					show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Общие команды",
					""c_grey"/id [имя игрока]"c_white" - узнать ИД игрока по нику.\n\
					"c_grey"/pay [ID игрока] [количество]"c_white" - передать деньги игроку.\n\
					"c_grey"/time"c_white" - узнать время на часах.\n\
					"c_grey"/service"c_white" - панель услуг.\n\
					"c_grey"/pass [ID игрока]"c_white" - показать паспорт.\n\
					"c_grey"/lic [ID игрока]"c_white" - показать лицензии.\n\
					"c_grey"/joblist [ID игрока]"c_white" - показать трудовую книжку.\n\
					"c_grey"/ganglist [ID игрока]"c_white" - показать лист бандитской славы.\n\
					"c_grey"/skill [ID игрока]"c_white" - показать навыки владения оружием.\n\
					"c_grey"/med [ID игрока]"c_white" - показать медицинскую карточку.\n\
					"c_grey"/anim"c_white" - список анимаций.\n\
					"c_grey"/gps"c_white" - навигатор.\n\
					"c_grey"/phone"c_white" - панель управления телефоном.\n\
					"c_grey"/call [номер телефона]"c_white" - позвонить игроку.\n\
					"c_grey"/sms [номер телефона]"c_white" - написать СМС-сообщение игроку.\n\
					"c_grey"/togphone "c_white"- выключить телефон.\n\
					"c_grey"/dir "c_white"- использовать справочник.\n\
					"c_grey"/healme "c_white"- использовать аптечку.\n\
					"c_grey"/repairkit "c_white"- использовать набор инструментов.\n\
					"c_grey"/usecanister "c_white"- использовать канистру с бензином.\n\
					"c_grey"/mask "c_white"- надеть маску.\n\
					"c_grey"/unmask "c_white"- снять маску.\n\
					"c_grey"/fstyle "c_white"- изменить стиль боя.\n\
					"c_grey"/number [ID игрока]"c_white" - узнать номер игрока.\n\
					"c_grey"/namestore [имя игрока]"c_white" - история никнеймов.\n\
					"c_grey"/giveammo [ID игрока] [количество]"c_white" - передать патроны.\n\
					"c_grey"/giveguns [ID игрока] [количество]"c_white" - передать ед.оружия.\n\
					"c_grey"/givegun [ID игрока]"c_white" -передать оружие.\n\
					"c_grey"/usedrugs "c_white" - использовать наркотики.\n\
					"c_grey"/givedrugs [ID игрока] [количество]"c_white" - передать наркотики.\n\
					"c_grey"/dropdrugs "c_white" - выбросить наркотики.\n\
					"c_grey"/stoprent "c_white" - прекратить аренду транспорта.\n\
					"c_grey"/quitjob "c_white" - уволиться с работы.\n\
					"c_grey"/spawnchange "c_white" - изменение места появления в игре.\n\
					"c_grey"/referals "c_white" - список рефералов.\n\
					"c_grey"/mywarn "c_white" - список предупреждений.\n\
					"c_grey"/sellsim [ID игрока] [цена]"c_white" - продать сим-карту.", "Принять", "");
				}
				case 1:
				{
					if(GetPVarInt(playerid, "Krupje")!= 0)
					{
						show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Работы",
						""c_grey"/deal "c_white"- крутить рулетку.", "Принять", "");
						return 1;
					}

					switch(PlayerInfo[playerid][job])
					{
						case job_taxi:
						{
							show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Работы",
							""c_grey"/gotaxi [ID игрока] "c_white"-принять вызов.\n\
							"c_grey"/taxi "c_white"- начать работу.\n\
							"c_grey"/end "c_white"- завершить работу.", "Принять", "");
							return 1;
						}
						case job_bus:
						{
							show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Работы",
							""c_grey"/route "c_white"- начать работу.\n\
							"c_grey"/end "c_white"- завершить работу.", "Принять", "");
							return 1;
						}
						case job_mechanic:
						{
							show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Работы",
							""c_grey"/gomechanic [ID игрока] "c_white"-принять вызов.\n\
							"c_grey"/fcontract "c_white"- заключить контракт с АЗС.\n\
							"c_grey"/refill [ID игрока] [бензин] [цена]"c_white"- заправить машину игрока.\n\
							"c_grey"/repair [ID игрока] [цена]"c_white"- починить машину игрока.\n\
							"c_grey"/mech "c_white"- начать работу.\n\
							"c_grey"/end "c_white"- завершить работу.", "Принять", "");
							return 1;
						}
						case job_trucker:
						{
							show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Работы",
							""c_grey"/tr "c_white"- рация дальнобойщиков.\n\
							"c_grey"/tskill "c_white"- опыт дальнобойщика.\n\
							"c_grey"/tpanel "c_white"- панель дальнобойщика.\n\
							"c_grey"/end "c_white"- завершить работу.", "Принять", "");
							return 1;
						}
						case job_delivery:
						{
							show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Работы",
							""c_grey"/delivery"c_white"- панель доставки.", "Принять", "");
							return 1;
						}
						case job_fuel_delivery:
						{
							show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Работы",
							""c_grey"/delivery"c_white"- панель доставки.", "Принять", "");
							return 1;
						}
						case job_gazon:
						{
							show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Работы",
							""c_grey"/zonestatus"c_white"- список зон для скашивания травы.\n\
							"c_grey"/end"c_white"- завершить работу.", "Принять", "");
							return 1;
						}
						default:
						{
							show_dialog(playerid, d_mm_cmds, DIALOG_STYLE_LIST, !""scm_dialog"Команды сервера", !""c_server"1 | "c_white"Общие команды\n"c_server"2 | "c_white"Работы\n"c_server"3 | "c_white"Общение (чаты)\n"c_server"4 | "c_white"Дом\n"c_server"5 | "c_white"Бизнес и АЗС\n"c_server"6 | "c_white"Организация\n"c_server"7 | "c_white"Лидерам\n"c_server"8 | "c_white"Транспорт\n"c_server"9 | "c_white"Семья", !"Выбрать", !"Назад");
							return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не работаете или для Вашей работы нет доступных команд.");
						}

					}
				}
				case 2:
				{
					show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Общение (чаты)",
					""c_grey"/s [текст] "c_white"- крикнуть.\n\
					"c_grey"/n [текст] "c_white"- ООС чат.\n\
					"c_grey"/me [текст] "c_white"- действия, эмоции персонажа (/me смеется).\n\
					"c_grey"/do [текст] "c_white"- описание подробностей событий (/do в руках дубинка).\n\
					"c_grey"/try [текст] "c_white"- случайная вероятность действия (/try увернулся от удара).\n\
					"c_grey"/todo [речь в чат*действие] "c_white"- действие вместе с фразой персонажа.\n\
					"c_grey"/w [текст] "c_white"- говорить шёпотом.", "Принять", "");
				}
				case 3:
				{
					show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Дом",
					""c_grey"/home "c_white"- меню управления домом.\n\
					"c_grey"/hradio "c_white"- управление аудио системой.\n\
					"c_grey"/hlock "c_white"- открыть/закрыть дом.\n\
					"c_grey"/exit "c_white"- выйти из дома.\n\
					"c_grey"/cellar "c_white"- зайти в подвал.\n\
					"c_grey"/garage "c_white"- зайти в гараж.\n\
					"c_grey"/hleave "c_white"- выселиться из дома(для арендаторов).\n\
					"c_grey"/changehouse [ID игрока] [цена] "c_white"- продажа дома игроку.\n\
					"c_grey"/sellhouse "c_white"- продажа дома государству.", "Принять", "");
				}
				case 4:
				{
					show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Бизнес и АЗС",
					""c_grey"/bpanel "c_white"- меню управления бизнесом.", "Принять", "");
				}
				case 5:
				{
					if(radio_player(playerid))
					{
						show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Команды организации",
						""c_grey"/r "c_white"- рация.\n\
						"c_grey"/rn "c_white"- non-rp(ooc) рация.\n\
						"c_grey"/find "c_white"- онлайн организации.\n\
						"c_grey"/edit "c_white"- редактировать объявления.\n\
						"c_grey"/ether "c_white"- войти в эфир.\n\
						"c_grey"/t [текст]"c_white"- писать в эфир.\n\
						"c_grey"/cas [цена звонка]"c_white" - Включить принятие звонков.\n\
						"c_grey"/incas [ID игрока]"c_white" - Принять звонок радиослушателя.\n\
						"c_grey"/uncas [ID игрока]"c_white" - Отключить радиослушателя от эфира.\n\
						"c_grey"/offcas"c_white" - Отключить принятие звонков.\n\
						"c_grey"/numether"c_white" - Установить номер прямого эфира.\n\
						"c_grey"/nmenu"c_white" - Панель управления радиоцентра.", "Принять", "");
						return 1;
					}
					else if(medic_player(playerid))
					{
						show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Команды организации",
						""c_grey"/r "c_white"- рация.\n\
						"c_grey"/rn "c_white"- non-rp(ooc) рация.\n\
						"c_grey"/find "c_white"- онлайн организации.\n\
						"c_grey"/d "c_white"- департамент.\n\
						"c_grey"/gov "c_white"- гос. штата.\n\
						"c_grey"/givemc [ID игрока] "c_white"- выдать мед.карту.\n\
						"c_grey"/heal [ID игрока] [цена] "c_white"- вылечить игрока.", "Принять", "");
						return 1;
					}
					else if(PlayerInfo[playerid][member] == 11)
					{
						show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Команды организации",
						""c_grey"/economy "c_white"-управление экономикой.\n\
						"c_grey"/find "c_white"-онлайн организации.\n\
						"c_grey"/giveleader "c_white"-назначить руководителя(для министров).\n\
						"c_grey"/ssf "c_white"-подключиться к рации(для министров).\n\
						"c_grey"/sf "c_white"-рация подведомственных организаций(для министров).\n\
						"c_grey"/debtors "c_white"-панель должников(с 9 ранга).\n\
						"c_grey"/kickout "c_white"-выгнать из мэрии на 5 минут.\n\
						"c_grey"/free [ID игрока] [цена] "c_white"-сократить срок заключения(для адвокатов).", "Принять", "");
					}
					else if(cop_player(playerid))
					{
						show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Команды организации",
						""c_grey"/r "c_white"-рация.\n\
						"c_grey"/rn "c_white"-non-rp(ooc) рация.\n\
						"c_grey"/find "c_white"-онлайн организации.\n\
						"c_grey"/d "c_white"-департамент.\n\
						"c_grey"/gov "c_white"-гос. штата.\n\
						"c_grey"/m "c_white"-служебный мегафон.\n\
						"c_grey"/ram "c_white"-выломать дверь дома.\n\
						"c_grey"/frisk [ID игрока]"c_white" -обыскать.\n\
						"c_grey"/take [ID игрока]"c_white" -меню изъятия.\n\
						"c_grey"/ticket [ID игрока] [сумма] [причина]"c_white" -выписать штраф.\n\
						"c_grey"/break "c_white"-выставить ограждение.\n\
						"c_grey"/push [ID игрока] "c_white"-затолкать игрока в авто.\n\
						"c_grey"/gotome [ID игрока] "c_white"-повести игрока за собой.\n\
						"c_grey"/cuff [ID игрока] "c_white"-надеть наручники.\n\
						"c_grey"/uncuff [ID игрока] "c_white"-снять наручники.\n\
						"c_grey"/arrest [ID игрока] [время] [залог] "c_white"-произвести арест.\n\
						"c_grey"/search [ID игрока] "c_white"-найти местоположение игрока.\n\
						"c_grey"/sellgunlic [ID игрока] [цена]"c_white" -продать лицензию на оружие.\n\
						"c_grey"/gopolice [ID игрока] "c_white"-принять вызов.\n\
						"c_grey"/su [ID игрока] [розыск] [причина] "c_white"-подать игрока в розыск.\n\
						"c_grey"/wanted "c_white"-список разыскиваемых.\n\
						"c_grey"/clear [ID игрока] "c_white"-очистить уровень розыска игрока.", "Принять", "");
						return 1;
					}
					else if(fbi_player(playerid))
					{
						show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Команды организации",
						""c_grey"/r "c_white"-рация.\n\
						"c_grey"/rn "c_white"-non-rp(ooc) рация.\n\
						"c_grey"/find "c_white"-онлайн организации.\n\
						"c_grey"/d "c_white"-департамент.\n\
						"c_grey"/gov "c_white"-гос. штата.\n\
						"c_grey"/m "c_white"-служебный мегафон.\n\
						"c_grey"/ram "c_white"-выломать дверь дома.\n\
						"c_grey"/frisk [ID игрока]"c_white" -обыскать.\n\
						"c_grey"/take [ID игрока]"c_white" -меню изъятия.\n\
						"c_grey"/ticket [ID игрока] [сумма] [причина]"c_white" -выписать штраф.\n\
						"c_grey"/ticket [ID игрока] [сумма] [причина]"c_white" -выписать штраф.\n\
						"c_grey"/break "c_white"-выставить ограждение.\n\
						"c_grey"/push [ID игрока] "c_white"-затолкать игрока в авто.\n\
						"c_grey"/gotome [ID игрока] "c_white"-повести игрока за собой.\n\
						"c_grey"/cuff [ID игрока] "c_white"-надеть наручники.\n\
						"c_grey"/uncuff [ID игрока] "c_white"-снять наручники.\n\
						"c_grey"/arrest [ID игрока] [время] [выкуп] "c_white"-произвести арест.\n\
						"c_grey"/search [ID игрока] "c_white"-найти местоположение игрока.\n\
						"c_grey"/su [ID игрока] [розыск] [причина] "c_white"-подать игрока в розыск.\n\
						"c_grey"/wanted "c_white"-список разыскиваемых.\n\
						"c_grey"/cover "c_white"-панель маскировки.\n\
						"c_grey"/clear [ID игрока] "c_white"-очистить уровень розыска игрока.", "Принять", "");
						return 1;
					}
					else if(gang_player(playerid))
					{
						show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Команды банды",
						""c_grey"/capture "c_white"-начать захват территории.\n\
						"c_grey"/capturetime "c_white"-информация о времени восстановления.\n\
						"c_grey"/find "c_white"-онлайн организации.\n\
						"c_grey"/wlock "c_white"-закрыть/открыть склад(для замов и лидеров).\n\
						"c_grey"/fmute [ID игрока] [минуты] [причина] "c_white"-выдать затычку члену организации(для замов и лидеров).\n\
						"c_grey"/unfmute [ID игрока] "c_white"-снять затычку члену организации(для замов и лидеров).\n\
						"c_grey"/selldrugs [ID игрока] [кол-во] [стоимость] "c_white"-продать наркотики.\n\
						"c_grey"/gangtop "c_white"-список лучших.\n\
						"c_grey"/ganginfo "c_white"-информация о банде.\n\
						"c_grey"/paygang [сумма] "c_white"-выдать зарплату банде.", "Принять", "");
						return 1;
					}
					else if(mafia_player(playerid))
					{
						show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Команды банды",
						""c_grey"/tie [ID игрока] "c_white"-связать игрока.\n\
						"c_grey"/untie [ID игрока] "c_white"-развязать игрока.\n\
						"c_grey"/find "c_white"-онлайн организации.\n\
						"c_grey"/sellgun [ID игрока] [патроны] [стоимость] "c_white"-продать оружие.\n\
						"c_grey"/push [ID игрока] "c_white"-затолкать игрока в авто.\n\
						"c_grey"/gotome [ID игрока] "c_white"-повести игрока за собой.\n\
						"c_grey"/wlock "c_white"-закрыть/открыть склад(для замов и лидеров).\n\
						"c_grey"/bizwar "c_white"-начать войну за бизнес.\n\
						"c_grey"/sellbiz "c_white"-продать контроль над бизнесом.\n\
						"c_grey"/bizlist "c_white"-список подконтрольных бизнесов.", "Принять", "");
						return 1;
					}
					else if(army_player(playerid))
					{
						show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Команды организации",
						""c_grey"/armpanel "c_white"-доставка оружия.\n\
						"c_grey"/find "c_white"-онлайн организации.\n\
						"c_grey"/unload "c_white"-разгрузка оружия.", "Принять", "");
						return 1;
					}

					else
					{
                        show_dialog(playerid, d_mm_cmds, DIALOG_STYLE_LIST, !""scm_dialog"Команды сервера", !""c_server"1 | "c_white"Общие команды\n"c_server"2 | "c_white"Работы\n"c_server"3 | "c_white"Общение (чаты)\n"c_server"4 | "c_white"Дом\n"c_server"5 | "c_white"Бизнес и АЗС\n"c_server"6 | "c_white"Организация\n"c_server"7 | "c_white"Лидерам\n"c_server"8 | "c_white"Транспорт\n"c_server"9 | "c_white"Семья", !"Выбрать", !"Назад");
						return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не состоите в организации.");
					}
				}
				case 6:
				{
					show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Лидерам",
					""c_grey"/lmenu "c_white"-панель управления лидера.\n\
					"c_grey"/invite [ID игрока] "c_white"-пригласить игрока в организацию.\n\
					"c_grey"/uninvite [ID игрока] [причина] "c_white"-уволить игрока из организации.\n\
					"c_grey"/fwarn [ID игрока] [причина] "c_white"-выдать выговор члену организации.\n\
					"c_grey"/unfwarn [ID игрока] "c_white"-снять выговор члену организации.\n\
					"c_grey"/fwarnoff [Ник игрока] "c_white"-выдать выговор в оффлайне.\n\
					"c_grey"/offuninvite [Ник игрока] "c_white"-уволить игрока в оффлайне.\n\
					"c_grey"/setrank "c_white"-изменить название ранга(только для банд).\n\
					"c_grey"/rank "c_white"-изменить ранг игрока.\n\
					"c_grey"/gov [Текст] "c_white"-отправить государственную новость.\n\
					"c_grey"/setskin "c_white"-изменить одежду игрока.", "Принять", "");
				}
				case 7:
				{
					show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Автомобиль",
					""c_grey"/lock "c_white"-открыть / закрыть машину.\n\
					"c_grey"/fixcar "c_white"-аварийная служба.\n\
					"c_grey"/vpark "c_white"-припарковать машину.\n\
					"c_grey"/sellcar "c_white"-продать машину.\n\
					"c_grey"/pts [ID игрока] "c_white"-показать технический паспорт транспорта.\n\
					"c_grey"/setgps "c_white"-установить GPS-трекер.\n\
					"c_grey"/fill "c_white"-заправить машину на АЗС.\n\
					"c_grey"/cpanel "c_white"-панель управления автомобилем.", "Принять", "");
				}
				case 8:
				{
				    switch(family_info[PlayerInfo[playerid][family] -1][fam_type])
				    {
				        case 0:
				        {
							show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Семья",
							""c_grey"/fam "c_white"-меню семьи.\n\
							"c_grey"/k [текст] "c_white"-чат семьи.\n\
							"c_grey"/faminvite [ID игрока] "c_white"-пригласить в семью.\n\
							"c_grey"/famuninvite [ID игрока] "c_white"-исключить из семьи.\n\
							"c_grey"/famrank [ID игрока] "c_white"-изменить статус члена семьи.", "Принять", "");
						}
						case 1:
						{
							show_dialog(playerid, d_mm_cmd_list, DIALOG_STYLE_MSGBOX, ""c_server"Семья",
							""c_grey"/fam "c_white"-меню семьи.\n\
							"c_grey"/k [текст] "c_white"-чат семьи.\n\
							"c_grey"/faminvite [ID игрока] "c_white"-пригласить в семью.\n\
							"c_grey"/famuninvite [ID игрока] "c_white"-исключить из семьи.\n\
							"c_grey"/famrank [ID игрока] "c_white"-изменить статус члена семьи.\n\
							"c_grey"/fambizwar "c_white"-назначить стрелу за аммуницию.\n\
							"c_grey"/fambizlist "c_white"-список аммуниций вашей семьи.", "Принять", "");
						}
					}
				}
			}
		}
		case d_mm_cmd_list:
		{
		    show_dialog(playerid, d_mm_cmds, DIALOG_STYLE_LIST, !""scm_dialog"Команды сервера", !""c_server"1 | "c_white"Общие команды\n"c_server"2 | "c_white"Работы\n"c_server"3 | "c_white"Общение (чаты)\n"c_server"4 | "c_white"Дом\n"c_server"5 | "c_white"Бизнес и АЗС\n"c_server"6 | "c_white"Организация\n"c_server"7 | "c_white"Лидерам\n"c_server"8 | "c_white"Транспорт\n"c_server"9 | "c_white"Семья", !"Выбрать", !"Назад");
			return 1;
		}

		case d_mm_rules:
		{
			if(!response) return pc_cmd_menu(playerid);
		}
		case d_reports:
		{
			if(!response) return true;

			new i = 0;
			for(new count = 0; i < max_report; i++)
				if(report_player[i] != -1)
					if(count++ == listitem) break;

			if(report_slot[i] != -1)
			{
				SendClientMessage(playerid, col_white, !""scm_error"Данную жалобу уже обрабатывают");
				return pc_cmd_arep(playerid, "");
			}

			new dialog_string[400];
            format(dialog_string, sizeof(dialog_string), "\
            "c_white"Жалоба от %s[%d]\n\n\
            "c_gold"%s\n", PlayerInfo[report_player[i]][name], report_player[i], report_text[i]);
            show_dialog(playerid, d_mm_request_2, DIALOG_STYLE_INPUT, !""scm_dialog"Жалоба", dialog_string, !"Принять", !"Отмена");

            report_id[playerid] = i;
            report_slot[i] = playerid;

            new text_string[125];
            format(text_string, sizeof(text_string), ""scm_info"Администратор "c_server"%s"c_white" начал обрабатывать Вашу жалобу", PlayerInfo[playerid][name]);
            SendClientMessage(report_player[i], col_white, text_string);
		}
		case d_mm_request:
		{
			if(!response) return 1;
			if(report_cooldown[playerid]) return SendClientMessage(playerid, col_white, !""scm_error"Вы уже подавали жалобу, ожидайте ответа");
			if(report_player[max_report -1] != -1) return SendClientMessage(playerid, col_white, !""scm_error"Попробуйте чуть позже");

			new reps = 0, text_string[120];
			while(report_player[reps] != -1) reps++;

			if(!strlen(inputtext)) return pc_cmd_report(playerid);

			report_player[reps] = playerid;
			strmid(report_text[reps], (inputtext), 0, strlen(inputtext), 150);

			foreach(new i : admin_players) GameTextForPlayer(i, "+ REPORT", 3000, 1);

			format(text_string, sizeof(text_string), ""scm_info"Ваша жалоба: "c_gold"%s", inputtext);
			SendClientMessage(playerid, col_white, text_string);

			format(text_string, sizeof(text_string), ""scm_info"В скором времени Вам ответит администратор. Вы в очереди: "c_gold"%d", reps + 1);
			SendClientMessage(playerid, col_white, text_string);

			report_cooldown[playerid] = true;
		}
		case d_mm_request_2:
		{
			new i = report_id[playerid];
			if(!response)
			{
				report_slot[i] = report_id[playerid] = -1;
				return 1;
			}
			if(!strlen(inputtext) || strlen(inputtext) > 130)
			{
				new dialog_string[400];
				format(dialog_string, sizeof(dialog_string), "\
				"c_white"Жалоба от %s[%d]\n\n\
				"c_gold"%s\n", PlayerInfo[report_player[i]][name], report_player[i], report_text[i]);
				return show_dialog(playerid, d_mm_request_2, DIALOG_STYLE_INPUT, !""scm_dialog"Жалоба", dialog_string, !"Принять", !"Отмена");
			}
			if(!IsPlayerConnected(report_player[i]))
			{
				report_delete(i);
				report_id[playerid] = -1;
				return SendClientMessage(playerid, col_white, !""scm_error"Игрок вышел из игры.");
			}
			new text_string[144];
			format(text_string, sizeof(text_string), "Администратор %s: "c_white"%s", PlayerInfo[playerid][name], inputtext);
			SendClientMessage(report_player[i], 0xFF9945FF, text_string);
			PlayerPlaySound(report_player[i], 1085, 0.0, 0.0, 0.0);

			format(text_string, sizeof(text_string), "Администратор %s[%d] для %s[%d]: "c_white"%s", PlayerInfo[playerid][name], playerid, PlayerInfo[report_player[i]][name], report_player[i], inputtext);
			foreach(new j: admin_players) SendClientMessage(j, 0xFF9945FF, text_string);

		    new query_string[115];
			format(query_string, sizeof(query_string), "UPDATE `users_admins` SET `u_a_reports`=`u_a_reports`+'1' WHERE `u_a_name`='%s' LIMIT 1", PlayerInfo[playerid][name]);
			mysql_query(sql_connection, query_string);

			report_cooldown[report_player[i]] = false;
			strmid(report_text_admin[i], (inputtext), 0, strlen(inputtext), 130);
			report_id[playerid] = -1;
			return report_delete(i);
		}
		case d_mm_security:
		{
			if(!response)
			{
				show_dialog(playerid, d_mm_settings, DIALOG_STYLE_LIST, ""c_server"Настройки аккаунта", ""c_server"1. "c_white"Настройки безопасности\n"c_server"2. "c_white"Прочие настройки", "Выбрать", "Назад");
				return 1;
			}
			switch(listitem)
			{
				case 0:show_dialog(playerid, d_change_pass, DIALOG_STYLE_INPUT, ""c_server"Смена пароля", ""c_white"\nПожалуйста, введите Ваш новый пароль ниже:\n\n"c_grey" * Длина пароля должна составлять от 6 до 15 символов.\n * Используйте цифры и латинские буквы разного регистра.\n * Мы не рекомендуем использовать пароль, который Вы\n используете на других ресурсах, ибо он лишает Ваш\n аккаунт дополнительной безопасности.", "Далее", "Назад");
/*				case 1:
				{
					static const graph_code_status[][] = {
					""c_orange_red"Отсутствует",
					""c_green"Запрашивается всегда",
					""c_green"При несовпадении IP адреса"};

					new d_string[158];
					format(d_string, 158, ""c_grey"-%s"c_white"\n"c_server"1."c_white" Запрашивать всегда\n"c_server"2."c_white" При несовпадении IP адреса",
					graph_code_status[PlayerInfo[playerid][graph_code][0]]);
					show_dialog(playerid, d_graph_code, DIALOG_STYLE_LIST, ""c_server"Графический код", d_string, "Выбрать", "Назад");
				}
				case 1:
				{
					if(!PlayerInfo[playerid][vk_id][1])
					{
						show_dialog(playerid, d_vk_id_info, DIALOG_STYLE_MSGBOX, ""c_server"Привязка vk.com",
						""c_white"Для обеспечения безопасности аккаунта Вы можете привязать Ваш vk-id.\n\n\
						"c_grey"\
						* Привязка vk-id осуществляется через сайт проекта Elive-rp.ru\n\
						* Данная функция открывает дополнительные возможности для Вашего игрового аккаунта\n\
						\t-Оповещения о Вашем имуществе, что позволяет своевременно позаботиться о нём.\n\
						\t-Оповещения о попытках взлома Вашего аккаунта.\n\
						\t-Информация об обновлениях проекта и действиях в отношении Вашего аккаунта.\n\
						\t-Дополнительные игровые бонусы и розыгрыши для игроков, с привязанными vk-id.", "Привязка", "Назад");
						return 1;
					}
					static const vk_id_text[][] = {
					""c_orange_red"Отсутствует",
					""c_green"Запрашивается всегда",
					""c_green"При несовпадении IP адреса"};

					new d_string[188];
					format(d_string, 188, ""c_grey"-%s"c_white"\n"c_server"1."c_white" Запрашивать код всегда\n"c_server"2."c_white" При несовпадении IP адреса\n"c_orange_red"3. Отключить привязку",
					vk_id_text[PlayerInfo[playerid][vk_id][0]]);
					show_dialog(playerid, d_vk_id, DIALOG_STYLE_LIST, ""c_server"Привязка vk.com", d_string, "Выбрать", "Назад");
				}	*/
				case 1:
				{
					new biglet1ters[32][] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y","Z","2", "3", "4", "5", "6", "7"};
					for(new i; i < 17; i++)strcat(PlayerInfo[playerid][google_auth], biglet1ters[random(sizeof(biglet1ters))]);
					global_string[0] = EOS;
					format(global_string, 300, ""c_white"Вы собираетесь подключить 'Google Authenticator' для защиты вашего аккаунта от взлома.\n\n"c_grey"Ваш секретный ключ для ввода в мобильное приложение: "c_server"%s\n\n"c_white"Вы действительно ввели код в приложение и хотите продолжить?", PlayerInfo[playerid][google_auth]);
					show_dialog(playerid, d_gauth_info, DIALOG_STYLE_MSGBOX, ""c_server"Подтверждение Google Authenticator", global_string, "Далее", "Закрыть");
				}
				case 2:
				{
					new sql_string[121];
					format(sql_string, sizeof sql_string, "SELECT * FROM `users_history` WHERE `uh_user` = '%d' ORDER BY `users_history`.`uh_id` DESC LIMIT 10", PlayerInfo[playerid][id]);
					mysql_tquery(sql_connection, sql_string, "load_user_history", "i", playerid);
				}
			}
		}
		case d_gauth_info:
		{
			if(!response) return PlayerInfo[playerid][google_auth][0] = EOS;
			show_dialog(playerid, d_gauth_code, DIALOG_STYLE_INPUT, ""c_server"Подтверждение Google Auth", ""c_white"Введите код подтверждения из приложения 'Google Auth':\n", "Далее", "Закрыть");
		}
		case d_gauth_code:
		{
			if(!response) return PlayerInfo[playerid][google_auth][0] = EOS;
			new code = GoogleAuthenticatorCode(PlayerInfo[playerid][google_auth], gettime());
			if(strval(inputtext)!= code) return PlayerInfo[playerid][google_auth][0] = EOS, SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Введён неверный код.");
			PlayerInfo[playerid][google_auth_status] = 1;
			new sql_string[125];
			format(sql_string, sizeof sql_string, "UPDATE `users` SET `u_googleauth` = '%s', `u_googleauth_status` = '1' WHERE `u_id` = '%d'", PlayerInfo[playerid][google_auth], PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, sql_string);

			return SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно подключили защиту по Google Authenticator.");
		}
		case d_mm_settings:
		{
			if(!response) return pc_cmd_menu(playerid);
			switch(listitem)
			{
				case 0: show_security(playerid);
				case 1: show_settings(playerid);
			}
		}
		case d_mm_settings_2:
		{
			if(!response)
			{
				show_dialog(playerid, d_mm_settings, DIALOG_STYLE_LIST, !""scm_dialog"Настройки аккаунта", !""c_server"1 | "c_white"Настройки безопасности\n"c_server"2 | "c_white"Прочие настройки", !"Выбрать", !"Назад");
				return 1;
			}
			if(listitem == 4)
			{
				if(!PlayerInfo[playerid][vip]) return show_settings(playerid), SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет VIP привилении.");
				new string[380], str[28];
				strcat(string, "Стандартный");
				for(new i = 1; i < 14; i++)
				{
					format(str, sizeof(str), "\n"c_server"Стиль "c_grey"[%d]", i);
					strcat(string, str);
				}
				return show_dialog(playerid, d_mm_walkstyle, DIALOG_STYLE_LIST, ""c_server"Стиль походки", string, "Выбрать", "Назад");
			}
			else if(listitem == 5)
			{
				if(!PlayerInfo[playerid][vip]) return show_settings(playerid), SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет VIP привилении.");
				new string[152], str[27];
				strcat(string, "Стандартный");
				for(new i = 1; i < 6; i++)
				{
					format(str, sizeof(str), "\n"c_server"Стиль "c_grey"[%d]", i);
					strcat(string, str);
				}
				return show_dialog(playerid, d_mm_textstyle, DIALOG_STYLE_LIST, ""c_server"Стиль разговора", string, "Выбрать", "Назад");
			}
			else if(listitem == 6)
			{
			    if(PlayerInfo[playerid][load_textures] == 1) PlayerInfo[playerid][load_textures] = 0;
			    else PlayerInfo[playerid][load_textures] = 1;

				new query_string[156];
				format(query_string, sizeof(query_string), "UPDATE `users` SET `u_settings` = '%d|%d|%d|%d', `u_load_textures` = '%d' WHERE `u_id` = '%d' LIMIT 1",
				PlayerInfo[playerid][settings][0],
				PlayerInfo[playerid][settings][1],
				PlayerInfo[playerid][settings][2],
				PlayerInfo[playerid][settings][3],
				PlayerInfo[playerid][load_textures],
				PlayerInfo[playerid][id]);
				mysql_tquery(sql_connection, query_string);
				show_settings(playerid);
			    return 1;
			}
			if(PlayerInfo[playerid][settings][listitem] == 0)PlayerInfo[playerid][settings][listitem] = 1;
			else PlayerInfo[playerid][settings][listitem] = 0;
			if(listitem == 1)
			{
				if(PlayerInfo[playerid][settings][listitem])
					foreach(new i: streamed_players[playerid]) ShowPlayerNameTagForPlayer(playerid, i, 1);
				else
					foreach(new i: streamed_players[playerid]) ShowPlayerNameTagForPlayer(playerid, i, 0);
			}
			new query_string[156];
			format(query_string, sizeof(query_string), "UPDATE `users` SET `u_settings` = '%d|%d|%d|%d', `u_load_textures` = '%d' WHERE `u_id` = '%d' LIMIT 1",
			PlayerInfo[playerid][settings][0],
			PlayerInfo[playerid][settings][1],
			PlayerInfo[playerid][settings][2],
			PlayerInfo[playerid][settings][3],
			PlayerInfo[playerid][load_textures],
			PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, query_string);
			show_settings(playerid);
		}
		case d_mm_walkstyle:
		{
			if(!response) return show_settings(playerid);
			SetPlayerWalkingStyle(playerid, listitem);
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно сменили стиль походки.");
			show_settings(playerid);
		}
		case d_mm_textstyle:
		{
			if(!response) return show_settings(playerid);
			SetPlayerTextStyle(playerid, listitem);
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно сменили стиль разговора.");
			show_settings(playerid);
		}
		case d_mm_enhancements1:
		{
			if(!response) return pc_cmd_menu(playerid);
			if(listitem != 4 && PlayerInfo[playerid][enhancement][listitem] == 1) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас уже приобретено данное улучшение!");
			switch(listitem)
			{
				case 0: show_dialog(playerid, d_mm_enhancements2, DIALOG_STYLE_MSGBOX, ""c_server"Приобрести улучшение", ""c_white"Вы собираетесь приобрести улучшение "c_server"'Рюкзак'\n\n"c_grey"* Стоимость данного улучшения составляет: "c_server"20.000$"c_white".", "Приобрести", "Отмена");
				case 1: show_dialog(playerid, d_mm_enhancements2, DIALOG_STYLE_MSGBOX, ""c_server"Приобрести улучшение", ""c_white"Вы собираетесь приобрести улучшение "c_server"'Скрытность'\n\n"c_grey"* Стоимость данного улучшения составляет: "c_server"50.000$"c_white".", "Приобрести", "Отмена");
				case 2: show_dialog(playerid, d_mm_enhancements2, DIALOG_STYLE_MSGBOX, ""c_server"Приобрести улучшение", ""c_white"Вы собираетесь приобрести улучшение "c_server"'Решительность'\n\n"c_grey"* Стоимость данного улучшения составляет: "c_server"70.000$"c_white".", "Приобрести", "Отмена");
				case 3: show_dialog(playerid, d_mm_enhancements2, DIALOG_STYLE_MSGBOX, ""c_server"Приобрести улучшение", ""c_white"Вы собираетесь приобрести улучшение "c_server"'Мастер маскировки'\n\n"c_grey"* Стоимость данного улучшения составляет: "c_server"100.000$"c_white".", "Приобрести", "Отмена");
				case 4: return show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Информация по улучшениям", "\
						"c_grey"-Улучшение "c_white"'Рюкзак' "c_grey"позволяет игроку вмещать больше ед. оружия и патронов в инвентарь в два раза чем остальным.\n\
						"c_grey"-Улучшение "c_white"'Скрытность' "c_grey"ускоряет падение уровня розыска в два раза (в PayDay снимает по 2 уровня розыска).\n\
						"c_grey"-Улучшение "c_white"'Решительность' "c_grey"позволяет игроку самостоятельно уволиться из организации при помощи команды "c_white"'/leave'"c_grey".\n\
						"c_grey"-Улучшение "c_white"'Мастер маскировки' "c_grey"позволяет игроку надеть маску и не снимать её в течение 30 минут, когда без улучшения маска даётся на 15 минут.", "Закрыть", ""), 1;
			}
			SetPVarInt(playerid, "PlayerEnhancement", listitem);
		}
		case d_mm_enhancements2:
		{
			if(response)
			{
				new enhancementid = GetPVarInt(playerid, "PlayerEnhancement");
				if(PlayerInfo[playerid][money] >= enhancement_cost[enhancementid])
				{
					give_money(playerid, -enhancement_cost[enhancementid]);
					PlayerInfo[playerid][enhancement][enhancementid] = 1;
					SendClientMessage(playerid, col_gray, !""c_green"* "c_white"Вы успешно приобрели улучшение!");

					new query_string[131];
					format(query_string, sizeof(query_string), "UPDATE `users` SET `u_enhancements` = '%d|%d|%d|%d' WHERE `u_id` = '%d' LIMIT 1",
					PlayerInfo[playerid][enhancement][0],
					PlayerInfo[playerid][enhancement][1],
					PlayerInfo[playerid][enhancement][2],
					PlayerInfo[playerid][enhancement][3], PlayerInfo[playerid][id]);
					mysql_tquery(sql_connection, query_string);
				}
				else SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"У Вас недостаточно денег для покупки данного улучшения.");
			}
			DeletePVar(playerid, "PlayerEnhancement");
			show_enhancements(playerid);
		}
		case d_clearinfo:
		{
			if(GetPVarInt(playerid, "PlayerEnhancement"))
			{
				DeletePVar(playerid, "PlayerEnhancement");
				return show_enhancements(playerid);
			}
			return 1;
		}
		case d_security_history:
		{
			show_security(playerid);
		}
		case d_vk_id_info:
		{
			if(!response) return show_security(playerid);

			new vk_code = RandomEx(100000000, 999999999);

			new dialog_string[272];
			format(dialog_string, 272, ""c_white"Для привязки Вашего vk-id введите код %d в сообщения официальной группы Вконтакте.\n\n\
			"c_grey"* Адрес группы: vk.com/eliveroleplay\n\n\
			"c_orange_red"* НЕ ЗАКРЫВАЙТЕ ДАННОЕ ДИАЛОГОВОЕ ОКНО ДО ПОДТВЕРЖДЕНИЯ ПРИВЯЗКИ БОТОМ.", vk_code);
			show_dialog(playerid, d_vk_id_code, DIALOG_STYLE_MSGBOX, ""c_server"Привязка vk.com", dialog_string, "Подтвердить", "Назад");


			format(dialog_string, sizeof(dialog_string), "UPDATE `users` SET `u_vk_code` = '%d' WHERE `u_id` = '%d' LIMIT 1",
			vk_code, PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, dialog_string);
		}
		case d_vk_entrance:
		{
			if(!response) return kick_player(playerid);

			new vk_player_code = 0,
				sql_string[158];
			format(sql_string, 98,"SELECT `u_vk_code` FROM users WHERE u_id = '%d'", PlayerInfo[playerid][id]);
			new Cache:result = mysql_query(sql_connection, sql_string);
			vk_player_code = cache_get_field_content_int(0, "u_vk_code", sql_connection);
			cache_delete(result);

			if(strval(inputtext)!= vk_player_code) return kick_player(playerid);

			vk_checking {playerid} = 0;

			if(PlayerInfo[playerid][google_auth_status] == 1)
			{
				google_checking {playerid} = 1;
				show_dialog(playerid, d_googleauth_entrance, DIALOG_STYLE_INPUT, ""c_server"Google Auth", ""c_white"Введите код из приложения:", "Вход", "Выйти");
				return 1;
			}


			SendClientMessage(playerid, col_white, !""scm_info"Вы успешно авторизовались. Желаем приятной игры на "c_server"Elive Role Play.");
			TogglePlayerSpectating(playerid, false);

			format(sql_string, sizeof(sql_string), "UPDATE `users` SET `u_vk_code` = '0' WHERE `u_id` = '%d' LIMIT 1",
			PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, sql_string);

			format(sql_string, sizeof sql_string, "SELECT * FROM `debtor_message` WHERE `dm_dest` = '%d'", PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, sql_string, "load_debtor_messages", "i", playerid);

			pc_cmd_alogin(playerid);
		}
		case d_googleauth_entrance:
		{
			if(!response) return kick_player(playerid);
			new google_code = GoogleAuthenticatorCode(PlayerInfo[playerid][google_auth], gettime()), sql_string[158];
			if(strval(inputtext)!= google_code) return kick_player(playerid);

			SendClientMessage(playerid, col_white, !""scm_info"Вы успешно авторизовались. Желаем приятной игры на "c_server"Elive Role Play.");
			TogglePlayerSpectating(playerid, false);

			format(sql_string, sizeof sql_string, "SELECT * FROM `debtor_message` WHERE `dm_dest` = '%d'", PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, sql_string, "load_debtor_messages", "i", playerid);

			google_checking {playerid} = 0;

			pc_cmd_alogin(playerid);
		}
		case d_vk_id_code:
		{
			new query_str[188];
			if(!response)
			{
				format(query_str, sizeof(query_str), "UPDATE `users` SET `u_vk_code` = '0' WHERE `u_id` = '%d' LIMIT 1",
				PlayerInfo[playerid][id]);
				mysql_tquery(sql_connection, query_str);
				show_security(playerid);
				return 1;
			}

			new vk_player_id = 0;

			format(query_str, 98,"SELECT `u_vk_id` FROM users WHERE u_id = '%d'", PlayerInfo[playerid][id]);
			new Cache:result = mysql_query(sql_connection, query_str);
			vk_player_id = cache_get_field_content_int(0, "u_vk_id", sql_connection);
			cache_delete(result);

			if(vk_player_id == 0)
			{
				new vk_code = RandomEx(10000000, 9999999);
				new dialog_string[272];
				format(dialog_string, 272, ""c_white"Для привязки Вашего vk-id введите код %d в сообщения официальной группы Вконтакте.\n\n\
				"c_grey"* Адрес группы: vk.com/eliveroleplay\n\n\
				"c_orange_red"* НЕ ЗАКРЫВАЙТЕ ДАННОЕ ДИАЛОГОВОЕ ОКНО ДО ПОДТВЕРЖДЕНИЯ ПРИВЯЗКИ БОТОМ.", vk_code);
				show_dialog(playerid, d_vk_id_code, DIALOG_STYLE_MSGBOX, ""c_server"Привязка vk.com", dialog_string, "Подтвердить", "Назад");


				format(dialog_string, sizeof(dialog_string), "UPDATE `users` SET `u_vk_code` = '%d' WHERE `u_id` = '%d' LIMIT 1",
				vk_code, PlayerInfo[playerid][id]);
				mysql_tquery(sql_connection, dialog_string);
				return 1;
			}
			PlayerInfo[playerid][vk_id][0] = 1;

			format(query_str, 98, "UPDATE `users` SET `u_vk_code` = '0',`u_vk_id_status`='1' WHERE `u_id` = '%d' LIMIT 1",
			PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, query_str);

			static const _vk_id_text[][] = {
			""c_orange_red"Отсутствует",
			""c_green"Запрашивается всегда",
			""c_green"При несовпадении IP адреса"};

			format(query_str, 188, ""c_grey"-%s"c_white"\n"c_server"1."c_white" Запрашивать код всегда\n"c_server"2."c_white" При несовпадении IP адреса\n"c_orange_red"3. Отключить привязку",
			_vk_id_text[PlayerInfo[playerid][vk_id][0]]);
			show_dialog(playerid, d_vk_id, DIALOG_STYLE_LIST, ""c_server"Безопасность -"c_white" привязка vk.com:", query_str, "Выбрать", "Назад");
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно привязали свою страницу Вконтакте.");
		}
		case d_graph_code:
		{
			if(!response) return show_security(playerid);
			show_security(playerid);
		}
		case d_vk_id:
		{
			if(!response) return show_security(playerid);
			if(listitem == 0)
			{
				static const _vk_id_text_[][] = {
				""c_orange_red"Отсутствует",
				""c_green"Запрашивается всегда",
				""c_green"При несовпадении IP адреса"};

				new d_string[178];
				format(d_string, 178, ""c_grey"-%s"c_white"\n"c_server"1."c_white" Запрашивать код всегда\n"c_server"2."c_white" При несовпадении IP адреса\n"c_orange_red"3. Отключить привязку",
				_vk_id_text_[PlayerInfo[playerid][vk_id][0]]);
				show_dialog(playerid, d_vk_id, DIALOG_STYLE_LIST, ""c_server"Безопасность -"c_white" привязка vk.com:", d_string, "Выбрать", "Назад");
				return 1;
			}
			switch(listitem)
			{
				case 1..2:
				{
					PlayerInfo[playerid][vk_id][0] = listitem;
					update_int_sql(playerid, "u_vk_id_status", PlayerInfo[playerid][vk_id][0]);
				}
				case 3:
				{
					PlayerInfo[playerid][vk_id][0] = 0;
					update_int_sql(playerid, "u_vk_id_status", PlayerInfo[playerid][vk_id][0]);
					update_int_sql(playerid, "u_vk_id", PlayerInfo[playerid][vk_id][0]);

				}
			}
			show_security(playerid);
		}
		case d_change_pass:
		{
			if(!response) return show_security(playerid);
			if((strlen(inputtext)< 6 || strlen(inputtext)> 24)|| is_text_invalid(inputtext))
			{
				show_dialog(playerid, d_change_pass, DIALOG_STYLE_INPUT, ""c_server"Безопасность -"c_white" Пароль:", ""c_white"\nПожалуйста, введите Ваш новый пароль ниже:\n\n"c_grey" * Длина пароля должна составлять от 6 до 15 символов.\n * Используйте цифры и латинские буквы разного регистра.\n * Мы не рекомендуем использовать пароль, который Вы\n используете на других ресурсах, ибо он лишает Ваш\n аккаунт дополнительной безопасности.\n"c_orange_red"  * Ошибка! Введены неверные символы, либо пароль слишком длинный.", "Далее", "Назад");
				return 1;
			}
			new sql_string[108];
			mysql_format(sql_connection, sql_string, 108, "UPDATE `users` SET `u_password` = MD5('%e') WHERE `u_id` = '%d' LIMIT 1",
			inputtext, PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, sql_string, "", "");

			format(sql_string, 60, "Ваш новый пароль: "c_green"%s", inputtext);
			SendClientMessage(playerid, col_white, sql_string);
			SendClientMessage(playerid, col_white, "Мы рекомендуем Вам сделать скриншот. Клавиша "c_green"F8");
			show_security(playerid);
		}
		case d_order_info:
		{
			show_dialog(playerid, d_bpanel_order, DIALOG_STYLE_LIST, ""c_server"Заказ продуктов", "1. Сделать заказ\n2. Отменить заказ\n3. Просмотреть заказ", "Выбрать", "Назад");
			return 1;
		}
		case d_bpanel_order:
		{
			if(!response) return show_bpanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					new query_string[86];
					format(query_string, sizeof query_string, "SELECT `bo_bid` FROM `businesses_orders` WHERE `bo_bid` = '%d'", PlayerInfo[playerid][business]);
					mysql_tquery(sql_connection, query_string, "check_order_callback", "ii", playerid, 1);
				}
				case 1:
				{
					new query_string[86];
					format(query_string, sizeof query_string, "SELECT `bo_bid` FROM `businesses_orders` WHERE `bo_bid` = '%d'", PlayerInfo[playerid][business]);
					mysql_tquery(sql_connection, query_string, "check_order_callback", "ii", playerid, 2);
				}
				case 2:
				{
					new query_string[86];
					format(query_string, sizeof query_string, "SELECT * FROM `businesses_orders` WHERE `bo_bid` = '%d'", PlayerInfo[playerid][business]);
					mysql_tquery(sql_connection, query_string, "getinfo_order_callback", "i", playerid);
				}
			}
		}
		case d_bpanel_priceorder:
		{
			if(!response) return show_dialog(playerid, d_bpanel_order, DIALOG_STYLE_LIST, ""c_server"Заказ продуктов", "1. Сделать заказ\n2. Отменить заказ\n3. Просмотреть заказ", "Выбрать", "Назад");
			new order_price = strval(inputtext);
			if(order_price < 3 || order_price > 40) return show_dialog(playerid, d_bpanel_priceorder, DIALOG_STYLE_INPUT, ""c_server"Заказ продуктов", ""c_orange_red"* Закупочная цена за единицу товара должна составлять от 3$ до 40$\n\n"c_white"Введите закупочную цену за единицу товара:", "Принять", "Назад");
			SetPVarInt(playerid, "order_price", order_price);
			show_dialog(playerid, d_bpanel_countorder, DIALOG_STYLE_INPUT, ""c_server"Заказ продуктов", ""c_white"Введите количество товара, которое желаете заказать:", "Принять", "Назад");

		}
		case d_bpanel_countorder:
		{
			if(!response) return DeletePVar(playerid, "order_price"), show_dialog(playerid, d_bpanel_priceorder, DIALOG_STYLE_INPUT, ""c_server"Заказ продуктов", ""c_white"Введите закупочную цену за единицу товара:", "Принять", "Назад");
			new order_count = strval(inputtext),
				_b_id = PlayerInfo[playerid][business] -1;

			if(order_count < 1 || b_info[_b_id][b_product] + order_count > b_info[_b_id][b_maxproduct]) return show_dialog(playerid, d_bpanel_countorder, DIALOG_STYLE_INPUT, ""c_server"Заказ продуктов", ""c_orange_red"* Количество товара не может быть меньше 0 кг. или превышать размер склада.\n\n"c_white"Введите количество товара, которое желаете заказать:", "Принять", "Назад");
			new order_price = GetPVarInt(playerid, "order_price");
			if(b_info[_b_id][b_money] < order_count * order_price) return show_dialog(playerid, d_bpanel_countorder, DIALOG_STYLE_INPUT, ""c_server"Заказ продуктов", ""c_orange_red"* На балансе бизнеса нет такого количества средств.\n\n"c_white"Введите количество товара, которое желаете заказать:", "Принять", "Назад");
			b_info[_b_id][b_money] -= order_count * order_price;
			DeletePVar(playerid, "order_price");
			new string[158];
			format(string, 108, ""c_green"* "c_white"Вы заказали "c_green"%d кг."c_white" товара за "c_green"%d$"c_white".", order_count, order_count * order_price);
			SendClientMessage(playerid, col_white, string);

			mysql_format(sql_connection, string, sizeof(string), "INSERT INTO `businesses_orders` (`bo_price`,`bo_products`,`bo_bid`,`bo_date`,`bo_type`) VALUES ('%d','%d','%d',NOW(),'%d')",
			order_price, order_count, _b_id + 1, b_info[_b_id][b_type]);
			mysql_tquery(sql_connection, string);

		}
		case d_bpanel_money:
		{
			if(!response) return show_bpanel(playerid);
			switch(listitem)
			{
				case 0:
				{
					new dialog_string[122];
					format(dialog_string, sizeof(dialog_string), ""c_server"* "c_grey"Средств на балансе: "c_server"%d$\n\n"c_white"Введите сумму, на которую желаете пополнить баланс:", b_info[PlayerInfo[playerid][business] -1][b_money]);
					show_dialog(playerid, d_bpanel_money_put, DIALOG_STYLE_INPUT, ""c_server"Пополнить баланс", dialog_string, "Принять", "Назад");
				}
				case 1:
				{
					new dialog_string[122];
					format(dialog_string, sizeof(dialog_string), ""c_server"* "c_grey"Средств на балансе: "c_server"%d$\n\n"c_white"Введите сумму, на которую желаете снять с баланса:", b_info[PlayerInfo[playerid][business] -1][b_money]);
					show_dialog(playerid, d_bpanel_money_take, DIALOG_STYLE_INPUT, ""c_server"Снять наличные", dialog_string, "Принять", "Назад");
				}
			}
		}
		case d_bpanel_money_put:
		{
			if(!response) return show_dialog(playerid, d_bpanel_money, DIALOG_STYLE_LIST, ""c_server"Управление кассой", "1. Пополнить баланс\n2. Снять наличные", "Выбрать", "Назад");
			new money_count = strval(inputtext);
			if(money_count < 1 || money_count > 1000000)
			{
				new dialog_string[122];
				format(dialog_string, sizeof(dialog_string), ""c_orange_red"* Сумма должна быть не меньше 1$ и не больше 1.000.000$.\n\n"c_white"Введите сумму, на которую желаете пополнить баланс:", b_info[PlayerInfo[playerid][business] -1][b_money]);
				show_dialog(playerid, d_bpanel_money_put, DIALOG_STYLE_INPUT, ""c_server"Пополнить баланс", dialog_string, "Принять", "Назад");
				return 1;
			}
			if(PlayerInfo[playerid][money] < money_count)
			{
				new dialog_string[122];
				format(dialog_string, sizeof(dialog_string), ""c_orange_red"* У Вас недостаточно средств.\n\n"c_white"Введите сумму, на которую желаете пополнить баланс:", b_info[PlayerInfo[playerid][business] -1][b_money]);
				show_dialog(playerid, d_bpanel_money_put, DIALOG_STYLE_INPUT, ""c_server"Пополнить баланс", dialog_string, "Принять", "Назад");
				return 1;
			}
			give_money(playerid, -money_count);
			insert_money_log(playerid, INVALID_PLAYER_ID, -money_count, "пополнение бизнеса");

			b_info[PlayerInfo[playerid][business] -1][b_money] += money_count;
			new _text_string[86];
			format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы успешно пополнили баланс бизнеса на "c_green"%d$", money_count);
			SendClientMessage(playerid, col_white, _text_string);

			show_bpanel(playerid);

		}
		case d_bpanel_money_take:
		{
			if(!response) return show_dialog(playerid, d_bpanel_money, DIALOG_STYLE_LIST, ""c_server"Управление кассой", "1. Пополнить баланс\n2. Снять наличные", "Выбрать", "Назад");
			new money_count = strval(inputtext);
			if(money_count < 1 || money_count > 1000000)
			{
				new dialog_string[122];
				format(dialog_string, sizeof(dialog_string), ""c_orange_red"* Сумма должна быть не меньше 1$ и не больше 1.000.000$.\n\n"c_white"Введите сумму, которую желаете снять с баланса:", b_info[PlayerInfo[playerid][business] -1][b_money]);
				show_dialog(playerid, d_bpanel_money_take, DIALOG_STYLE_INPUT, ""c_server"Снять наличные", dialog_string, "Принять", "Назад");
				return 1;
			}
			if(b_info[PlayerInfo[playerid][business] -1][b_money] < money_count)
			{
				new dialog_string[122];
				format(dialog_string, sizeof(dialog_string), ""c_orange_red"* На балансе бизнеса недостаточно средств.\n\n"c_white"Введите сумму, которую желаете снять с баланса:", b_info[PlayerInfo[playerid][business] -1][b_money]);
				show_dialog(playerid, d_bpanel_money_take, DIALOG_STYLE_INPUT, ""c_server"Снять наличные", dialog_string, "Принять", "Назад");
				return 1;
			}
			give_money(playerid, money_count);
			insert_money_log(playerid, INVALID_PLAYER_ID, money_count, "пополнение бизнеса");

			b_info[PlayerInfo[playerid][business] -1][b_money] -= money_count;
			new _text_string[86];
			format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы успешно сняли с баланса бизнеса "c_green"%d$", money_count);
			SendClientMessage(playerid, col_white, _text_string);
			show_bpanel(playerid);

		}
		case d_b_panel:
		{
			if(!response) return 1;
			if(b_info[PlayerInfo[playerid][business] -1][b_type] == bizz_type_ammo || b_info[PlayerInfo[playerid][business] -1][b_type] == bizz_type_pharm || b_info[PlayerInfo[playerid][business] -1][b_type] == bizz_type_electronic ||  b_info[PlayerInfo[playerid][business] -1][b_type] == bizz_type_shop || b_info[PlayerInfo[playerid][business] -1][b_type] == bizz_type_clothes || b_info[PlayerInfo[playerid][business] -1][b_type] == bizz_type_cafe || b_info[PlayerInfo[playerid][business] -1][b_type] == bizz_type_club || b_info[PlayerInfo[playerid][business] -1][b_type] == bizz_type_bar)
			{
				switch(listitem)
				{
					case 0:show_dialog(playerid, d_bpanel_money, DIALOG_STYLE_LIST, ""c_server"Управление кассой", "1. Пополнить баланс\n2. Снять наличные", "Выбрать", "Назад");
					case 1:show_dialog(playerid, d_bpanel_order, DIALOG_STYLE_LIST, ""c_server"Заказ продуктов", "1. Сделать заказ\n2. Отменить заказ\n3. Просмотреть заказ", "Выбрать", "Назад");
					case 2:
					{
						new t = PlayerInfo[playerid][business] -1;
						new dialog_string[256];
						new business_status[19 + 1] = "{AA3333}Закрыт";
						if(!b_info[t][b_close]) business_status = "{33AA33}Открыт";
							
						if(b_info[PlayerInfo[playerid][business] -1][b_type] == bizz_type_ammo)
						{
							format(dialog_string, sizeof(dialog_string),
							""c_white"%s (№%d)\n\
							На счету бизнеса: "c_green"%d$\n\
							"c_white"Продукты: %d\n\
							Цена на продукты: %d\n\
							Цена за вход: "c_green"%d$\n\
							"c_white"Семья: %s\n\
							Состояние: %s", b_info[t][b_name], b_info[t][b_id], b_info[t][b_money], b_info[t][b_product], b_info[t][b_cost], b_info[t][b_fee], family_info[b_info[t][b_family] -1][fam_name],  business_status);
						}
						else
						{
							format(dialog_string, sizeof(dialog_string),
							""c_white"%s (№%d)\n\
							На счету бизнеса: "c_green"%d$\n\
							"c_white"Продукты: %d\n\
							Цена на продукты: %d\n\
							Цена за вход: "c_green"%d$\n\
							"c_white"Контроль: %s\n\
							Состояние: %s", b_info[t][b_name], b_info[t][b_id], b_info[t][b_money], b_info[t][b_product], b_info[t][b_cost], b_info[t][b_fee], mafia_owner_name[b_info[t][b_mafia] -1],  business_status);
						}
						show_dialog(playerid, d_bpanel_info, DIALOG_STYLE_MSGBOX, !""scm_dialog"Информация о бизнесе", dialog_string, !"Назад", !"Закрыть");
						return 1;
					}
					case 3:
					{
						new t = PlayerInfo[playerid][business] -1;
						global_string[0] = EOS;
						for(new i;i<3;i++)
						{
							new c[16];
							if(b_info[t][b_improve][i]) c = ""c_green"";
							else if(!i || b_info[t][b_improve][i -1]) c = ""c_white"";
							else c = ""c_grey"";
							if(!i) format(global_string, sizeof(global_string),"%s%d. %s", c, i + 1, b_improve_name[i]);
							else format(global_string, sizeof(global_string),"%s\n%s%d. %s", global_string, c, i + 1, b_improve_name[i]);
						}
						show_dialog(playerid, d_b_improvement, DIALOG_STYLE_LIST, ""c_server"Улучшения бизнеса", global_string, "Выбрать", "Назад");
					}
					case 4:
					{
						new b = PlayerInfo[playerid][business] -1;
						if(b_info[b][b_close])
						{
							b_info[b][b_close] = 0;
							SendClientMessage(playerid, col_succes, "Вы открыли бизнес для посетителей.");
							new query_string[92];
							format(query_string,sizeof(query_string),"UPDATE `businesses` SET `b_close` = '%d' WHERE `b_id` = '%d' LIMIT 1", b_info[PlayerInfo[playerid][business] -1][b_close], PlayerInfo[playerid][business]);
							mysql_tquery(sql_connection, query_string);
							show_bpanel(playerid);
						}
						else
						{

							b_info[b][b_close] = 1;
							SendClientMessage(playerid, col_succes, "Вы закрыли бизнес для посетителей.");
							new query_string[92];
							format(query_string,sizeof(query_string),"UPDATE `businesses` SET `b_close` = '%d' WHERE `b_id` = '%d' LIMIT 1", b_info[PlayerInfo[playerid][business] -1][b_close], PlayerInfo[playerid][business]);
							mysql_tquery(sql_connection, query_string);
							show_bpanel(playerid);
						}
						new query_string[228];
						if(b_info[b][b_type] == bizz_type_shop || b_info[b][b_type] == bizz_type_pharm || b_info[b][b_type] == bizz_type_electronic || b_info[b][b_type] == bizz_type_clothes || b_info[b][b_type] == bizz_type_carshop || b_info[b][b_type] == bizz_type_cafe || b_info[b][b_type] == bizz_type_club || b_info[b][b_type] == bizz_type_bar)
						{
							format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
							b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
							UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
						}

						else if(b_info[b][b_type] == bizz_type_gas)
						{
							format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль:"c_white" %s\n"c_grey"Состояние: "c_white"%s",
							b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], mafia_owner_name[b_info[b][b_mafia] -1], b_info[b][b_price]);
							UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
						}
						else if(b_info[b][b_type] == bizz_type_ammo)
						{
							format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
							b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], family_info[b_info[b][b_family] -1][fam_name],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
							UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
						}
						else if(b_info[b][b_type] == bizz_type_tune)
						{
							format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_white"Владелец: %s\nКонтроль: %s\nСостояние: %s",
							b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
							UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
						}
					}
					case 5:
					{
						new dialog_string[108];
						format(dialog_string, sizeof(dialog_string), ""c_white"На данный момент цена за вход составляет "c_server"%d$"c_white".", b_info[PlayerInfo[playerid][business] -1][b_fee]);
						show_dialog(playerid, d_bpanel_fee, DIALOG_STYLE_INPUT, ""c_server"Цена за вход", dialog_string, "Принять", "Назад");

					}
					case 6:
					{
						new dialog_string[108];
						format(dialog_string, sizeof(dialog_string), ""c_white"На данный момент наценка на товар составляет "c_server"%d"c_white" процентов.", b_info[PlayerInfo[playerid][business] -1][b_cost]);
						show_dialog(playerid, d_bpanel_cost, DIALOG_STYLE_INPUT, ""c_server"Наценка на товар", dialog_string, "Принять", "Назад");
					}
					case 7:
					{
						new text_string[128];
						mysql_format(sql_connection, text_string, sizeof(text_string ), "SELECT * FROM `businesses_history` WHERE `bh_business` = '%d' AND `bh_date` >= DATE(NOW()) -INTERVAL 7 DAY", PlayerInfo[playerid][business]);
						mysql_tquery(sql_connection, text_string, "bh_story", "i", playerid);

					}
					case 8:
					{
						show_dialog(playerid, d_bpanel_sell, DIALOG_STYLE_LIST, ""c_server"Продажа бизнеса", "Продать игроку\nПродать государству", "Выбрать", "Назад");
					}
				}
			}
			else if(b_info[PlayerInfo[playerid][business] -1][b_type] == bizz_type_carshop)
			{
				switch(listitem)
				{
					case 0:show_dialog(playerid, d_bpanel_money, DIALOG_STYLE_LIST, ""c_server"Управление кассой", "1. Пополнить баланс\n2. Снять наличные", "Выбрать", "Назад");
					case 1:show_dialog(playerid, d_bpanel_order, DIALOG_STYLE_LIST, ""c_server"Заказ продуктов", "1. Сделать заказ\n2. Отменить заказ\n3. Просмотреть заказ", "Выбрать", "Назад");
					case 2:
					{
						new t = PlayerInfo[playerid][business] -1;
						new dialog_string[186];

						new business_status[19 + 1] = "{AA3333}Закрыт";
						if(!b_info[t][b_close]) business_status = "{33AA33}Открыт";
						format(dialog_string, sizeof(dialog_string),
						""c_white"%s\n\
						На счету бизнеса: %d$\n\
						Продукты: %d\n\
						Цена на продукты: %d\n\
						Цена за вход: %d$\n\
						Контроль: %s\n\
						Состояние: %s", b_info[t][b_name], b_info[t][b_money], b_info[t][b_product], b_info[t][b_cost], b_info[t][b_fee], mafia_owner_name[b_info[t][b_mafia] -1], business_status);
						show_dialog(playerid, d_bpanel_info, DIALOG_STYLE_MSGBOX, ""c_server"Информация о бизнесе", dialog_string, "Назад", "Закрыть");
						return 1;
					}
					case 3:
					{
						new t = PlayerInfo[playerid][business] -1;
						global_string[0] = EOS;
						for(new i;i<3;i++)
						{
							new c[16];
							if(b_info[t][b_improve][i]) c = ""c_green"";
							else if(!i || b_info[t][b_improve][i -1]) c = ""c_white"";
							else c = ""c_grey"";
							if(!i) format(global_string, sizeof(global_string),"%s%d. %s", c, i + 1, b_improve_name[i]);
							else format(global_string, sizeof(global_string),"%s\n%s%d. %s", global_string, c, i + 1, b_improve_name[i]);
						}
						show_dialog(playerid, d_b_improvement, DIALOG_STYLE_LIST, ""c_server"Улучшения бизнеса", global_string, "Выбрать", "Назад");
					}
					case 4:
					{
						new b = PlayerInfo[playerid][business] -1;
						if(b_info[b][b_close])
						{
							b_info[b][b_close] = 0;
							SendClientMessage(playerid, col_succes, "Вы открыли бизнес для посетителей.");
							new query_string[92];
							format(query_string,sizeof(query_string),"UPDATE `businesses` SET `b_close` = '%d' WHERE `b_id` = '%d' LIMIT 1", b_info[PlayerInfo[playerid][business] -1][b_close], PlayerInfo[playerid][business]);
							mysql_tquery(sql_connection, query_string);
							show_bpanel(playerid);
						}
						else
						{

							b_info[b][b_close] = 1;
							SendClientMessage(playerid, col_succes, "Вы закрыли бизнес для посетителей.");
							new query_string[92];
							format(query_string,sizeof(query_string),"UPDATE `businesses` SET `b_close` = '%d' WHERE `b_id` = '%d' LIMIT 1", b_info[PlayerInfo[playerid][business] -1][b_close], PlayerInfo[playerid][business]);
							mysql_tquery(sql_connection, query_string);
							show_bpanel(playerid);
						}
						new query_string[228];
						if(b_info[b][b_type] == bizz_type_shop || b_info[b][b_type] == bizz_type_pharm || b_info[b][b_type] == bizz_type_electronic || b_info[b][b_type] == bizz_type_clothes || b_info[b][b_type] == bizz_type_carshop)
						{
							format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
							b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
							UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
						}

						else if(b_info[b][b_type] == bizz_type_gas)
						{
							format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль:"c_white" %s\n"c_grey"Состояние: "c_white"%s",
							b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыто") : ("{e11010}Закрыто"));
							UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
						}
						else if(b_info[b][b_type] == bizz_type_ammo)
						{
							format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
							b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], family_info[b_info[b][b_family] -1][fam_name],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
							UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
						}
						else if(b_info[b][b_type] == bizz_type_tune)
						{
							format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_white"Владелец: %s\nКонтроль: %s\nСостояние: %s",
							b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
							UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
						}
					}
					case 5:
					{
						new dialog_string[108];
						format(dialog_string, sizeof(dialog_string), ""c_white"На данный момент цена за вход составляет "c_server"%d$"c_white".", b_info[PlayerInfo[playerid][business] -1][b_fee]);
						show_dialog(playerid, d_bpanel_fee, DIALOG_STYLE_INPUT, ""c_server"Цена за вход", dialog_string, "Принять", "Назад");
					}
					case 6:
					{
						new dialog_string[108];
						format(dialog_string, sizeof(dialog_string), ""c_white"На данный момент стоимость размещения авто составляет "c_server"%d$"c_white".", b_info[PlayerInfo[playerid][business] -1][b_cost]);
						show_dialog(playerid, d_bpanel_cost, DIALOG_STYLE_INPUT, ""c_server"Стоимость услуг", dialog_string, "Принять", "Назад");
					}
					case 7:
					{
						new text_string[128];
						mysql_format(sql_connection, text_string, sizeof(text_string ), "SELECT * FROM `businesses_history` WHERE `bh_business` = '%d' AND `bh_date` >= DATE(NOW()) -INTERVAL 7 DAY", PlayerInfo[playerid][business]);
						mysql_tquery(sql_connection, text_string, "bh_story", "i", playerid);

					}
					case 8:
					{
						show_dialog(playerid, d_bpanel_sell, DIALOG_STYLE_LIST, ""c_server"Продажа бизнеса", "Продать игроку\nПродать государству", "Выбрать", "Назад");
					}
				}
			}
			else if(b_info[PlayerInfo[playerid][business] -1][b_type] == bizz_type_gas)
			{
				switch(listitem)
				{
					case 0:show_dialog(playerid, d_bpanel_money, DIALOG_STYLE_LIST, ""c_server"Управление кассой", "1. Пополнить баланс\n2. Снять наличные", "Выбрать", "Назад");
					case 1:show_dialog(playerid, d_bpanel_order, DIALOG_STYLE_LIST, ""c_server"Заказ продуктов", "1. Сделать заказ\n2. Отменить заказ\n3. Просмотреть заказ", "Выбрать", "Назад");
					case 2:
					{
						new t = PlayerInfo[playerid][business] -1;
						new dialog_string[186];

						format(dialog_string, sizeof(dialog_string),
						""c_white"%s\n\
						На счету бизнеса: %d$\n\
						Продукты: %d\n\
						Цена на литр: %d$\n\
						Контроль: %s", b_info[t][b_name], b_info[t][b_money], b_info[t][b_product], b_info[t][b_cost], mafia_owner_name[b_info[t][b_mafia] -1]);
						show_dialog(playerid, d_bpanel_info, DIALOG_STYLE_MSGBOX, ""c_server"Информация о бизнесе", dialog_string, "Назад", "Закрыть");
						return 1;
					}
					case 3:
					{
						new t = PlayerInfo[playerid][business] -1;
						global_string[0] = EOS;
						for(new i;i<2;i++)
						{
							new c[16];
							if(b_info[t][b_improve][i]) c = ""c_green"";
							else if(!i || b_info[t][b_improve][i -1]) c = ""c_white"";
							else c = ""c_grey"";
							if(!i) format(global_string, sizeof(global_string),"%s%d. %s", c, i + 1, b_improve_name[i]);
							else format(global_string, sizeof(global_string),"%s\n%s%d. %s", global_string, c, i + 1, b_improve_name[i]);
						}
						show_dialog(playerid, d_b_improvement, DIALOG_STYLE_LIST, ""c_server"Улучшения бизнеса", global_string, "Выбрать", "Назад");
					}
					case 4:
					{
						new b = PlayerInfo[playerid][business] -1;
						if(b_info[b][b_close])
						{
							b_info[b][b_close] = 0;
							SendClientMessage(playerid, col_succes, "Вы открыли бизнес для посетителей.");
							new query_string[92];
							format(query_string,sizeof(query_string),"UPDATE `businesses` SET `b_close` = '%d' WHERE `b_id` = '%d' LIMIT 1", b_info[PlayerInfo[playerid][business] -1][b_close], PlayerInfo[playerid][business]);
							mysql_tquery(sql_connection, query_string);
							show_bpanel(playerid);
						}
						else
						{

							b_info[b][b_close] = 1;
							SendClientMessage(playerid, col_succes, "Вы закрыли бизнес для посетителей.");
							new query_string[92];
							format(query_string,sizeof(query_string),"UPDATE `businesses` SET `b_close` = '%d' WHERE `b_id` = '%d' LIMIT 1", b_info[PlayerInfo[playerid][business] -1][b_close], PlayerInfo[playerid][business]);
							mysql_tquery(sql_connection, query_string);
							show_bpanel(playerid);
						}
						new query_string[228];
						if(b_info[b][b_type] == bizz_type_shop || b_info[b][b_type] == bizz_type_pharm || b_info[b][b_type] == bizz_type_electronic || b_info[b][b_type] == bizz_type_clothes || b_info[b][b_type] == bizz_type_carshop)
						{
							format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
							b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
							UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
						}

						else if(b_info[b][b_type] == bizz_type_gas)
						{
							format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль:"c_white" %s\n"c_grey"Состояние: "c_white"%s",
							b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыто") : ("{e11010}Закрыто"));
							UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
						}
						else if(b_info[b][b_type] == bizz_type_ammo)
						{
							format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
							b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], family_info[b_info[b][b_family] -1][fam_name],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
							UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
						}
						else if(b_info[b][b_type] == bizz_type_tune)
						{
							format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_white"Владелец: %s\nКонтроль: %s\nСостояние: %s",
							b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
							UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
						}
					}
					case 5:
					{
						new dialog_string[108];
						format(dialog_string, sizeof(dialog_string), ""c_white"На данный момент цена за литр топлива составляет "c_server"%d$"c_white".", b_info[PlayerInfo[playerid][business] -1][b_cost]);
						show_dialog(playerid, d_bpanel_cost, DIALOG_STYLE_INPUT, ""c_server"Цена за литр", dialog_string, "Принять", "Назад");
					}
					case 6:
					{
						new text_string[128];
						mysql_format(sql_connection, text_string, sizeof(text_string ), "SELECT * FROM `businesses_history` WHERE `bh_business` = '%d' AND `bh_date` >= DATE(NOW()) -INTERVAL 7 DAY", PlayerInfo[playerid][business]);
						mysql_tquery(sql_connection, text_string, "bh_story", "i", playerid);

					}
					case 7:
					{
						show_dialog(playerid, d_bpanel_sell, DIALOG_STYLE_LIST, ""c_server"Продажа бизнеса", "Продать игроку\nПродать государству", "Выбрать", "Назад");
					}
				}
			}
			else if(b_info[PlayerInfo[playerid][business] -1][b_type] == bizz_type_tune)
			{
				switch(listitem)
				{
					case 0:show_dialog(playerid, d_bpanel_money, DIALOG_STYLE_LIST, ""c_server"Управление кассой", "1. Пополнить баланс\n2. Снять наличные", "Выбрать", "Назад");
					case 1:show_dialog(playerid, d_bpanel_order, DIALOG_STYLE_LIST, ""c_server"Заказ продуктов", "1. Сделать заказ\n2. Отменить заказ\n3. Просмотреть заказ", "Выбрать", "Назад");
					case 2:
					{
						new t = PlayerInfo[playerid][business] -1;
						new dialog_string[186];

						new business_status[19 + 1] = "{AA3333}Закрыт";
						if(!b_info[t][b_close]) business_status = "{33AA33}Открыт";
						format(dialog_string, sizeof(dialog_string),
						""c_white"%s\n\
						На счету бизнеса: %d$\n\
						Продукты: %d\n\
						Цена на продукты: %d\n\
						Контроль: %s\n\
						Состояние: %s", b_info[t][b_name], b_info[t][b_money], b_info[t][b_product], b_info[t][b_cost], mafia_owner_name[b_info[t][b_mafia] -1],  business_status);
						show_dialog(playerid, d_bpanel_info, DIALOG_STYLE_MSGBOX, ""c_server"Информация о бизнесе", dialog_string, "Назад", "Закрыть");
						return 1;
					}
					case 3:
					{
						new t = PlayerInfo[playerid][business] -1;
						global_string[0] = EOS;
						for(new i;i<3;i++)
						{
							new c[16];
							if(b_info[t][b_improve][i]) c = ""c_green"";
							else if(!i || b_info[t][b_improve][i -1]) c = ""c_white"";
							else c = ""c_grey"";
							if(!i) format(global_string, sizeof(global_string),"%s%d. %s", c, i + 1, b_improve_name[i]);
							else format(global_string, sizeof(global_string),"%s\n%s%d. %s", global_string, c, i + 1, b_improve_name[i]);
						}
						show_dialog(playerid, d_b_improvement, DIALOG_STYLE_LIST, ""c_server"Улучшения бизнеса", global_string, "Выбрать", "Назад");
					}
					case 4:
					{
						new b = PlayerInfo[playerid][business] -1;
						if(b_info[b][b_close])
						{
							b_info[b][b_close] = 0;
							SendClientMessage(playerid, col_succes, "Вы открыли бизнес для посетителей.");
							new query_string[92];
							format(query_string,sizeof(query_string),"UPDATE `businesses` SET `b_close` = '%d' WHERE `b_id` = '%d' LIMIT 1", b_info[PlayerInfo[playerid][business] -1][b_close], PlayerInfo[playerid][business]);
							mysql_tquery(sql_connection, query_string);
							show_bpanel(playerid);
						}
						else
						{

							b_info[b][b_close] = 1;
							SendClientMessage(playerid, col_succes, "Вы закрыли бизнес для посетителей.");
							new query_string[92];
							format(query_string,sizeof(query_string),"UPDATE `businesses` SET `b_close` = '%d' WHERE `b_id` = '%d' LIMIT 1", b_info[PlayerInfo[playerid][business] -1][b_close], PlayerInfo[playerid][business]);
							mysql_tquery(sql_connection, query_string);
							show_bpanel(playerid);
						}
						new query_string[228];
						if(b_info[b][b_type] == bizz_type_shop || b_info[b][b_type] == bizz_type_pharm || b_info[b][b_type] == bizz_type_electronic || b_info[b][b_type] == bizz_type_clothes || b_info[b][b_type] == bizz_type_carshop)
						{
							format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
							b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
							UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
						}

						else if(b_info[b][b_type] == bizz_type_gas)
						{
							format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль:"c_white" %s\n"c_grey"Состояние: "c_white"%s",
							b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыто") : ("{e11010}Закрыто"));
							UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
						}
						else if(b_info[b][b_type] == bizz_type_ammo)
						{
							format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
							b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], family_info[b_info[b][b_family] -1][fam_name],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
							UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
						}
						else if(b_info[b][b_type] == bizz_type_tune)
						{
							format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_white"Владелец: %s\nКонтроль: %s\nСостояние: %s",
							b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
							UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
						}
					}
					case 5:
					{
						new dialog_string[108];
						format(dialog_string, sizeof(dialog_string), ""c_white"На данный момент наценка на товар составляет "c_server"%d"c_white" процентов.", b_info[PlayerInfo[playerid][business] -1][b_cost]);
						show_dialog(playerid, d_bpanel_cost, DIALOG_STYLE_INPUT, ""c_server"Наценка на товар", dialog_string, "Принять", "Назад");
					}
					case 6:
					{
						new text_string[128];
						mysql_format(sql_connection, text_string, sizeof(text_string ), "SELECT * FROM `businesses_history` WHERE `bh_business` = '%d' AND `bh_date` >= DATE(NOW()) -INTERVAL 7 DAY", PlayerInfo[playerid][business]);
						mysql_tquery(sql_connection, text_string, "bh_story", "i", playerid);
					}
					case 7:
					{
						show_dialog(playerid, d_bpanel_sell, DIALOG_STYLE_LIST, ""c_server"Продажа бизнеса", "Продать игроку\nПродать государству", "Выбрать", "Назад");
					}
				}
			}
		}
		case d_b_improvement:
		{
			if(!response) return show_bpanel(playerid);
			new business_id = PlayerInfo[playerid][business] -1;
			if(b_info[business_id][b_improve][listitem])
			{
				SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас уже установлено это улучшение.");
				show_bpanel(playerid);
				return 1;
			}
			new mes[128];
			format(mes, sizeof(mes),""c_white"Вы хотите купить улучшение: "c_server"\"%s\"?\n\n"c_white"Оно обойдется Вам в "c_green"$%d.",b_improve_name[listitem], b_improve_price[listitem]);
			show_dialog(playerid, d_b_improvement_accept, DIALOG_STYLE_MSGBOX,""c_server"Улучшения бизнеса",mes,"Купить","Отмена");
			SetPVarInt(playerid,"improveid", listitem);
		}

		case d_b_improvement_accept:
		{
			new improveid = GetPVarInt(playerid,"improveid");
			DeletePVar(playerid,"improveid");
			if(!response) return show_bpanel(playerid);
			new price = b_improve_price[improveid];
			if(PlayerInfo[playerid][money] < price)
			{
				show_hmenu(playerid);
				return SendClientMessage(playerid, col_white, !""scm_error"У Вас недостаточно денег.");
			}
			new business_id = PlayerInfo[playerid][business] -1;
			b_info[business_id][b_improve][improveid] = 1;

			if(improveid == 1)b_info[business_id][b_maxproduct] += 10000;
			if(improveid == 2)SendClientMessage(playerid, col_white, !""scm_info"В Вашем бизнесе появилась возможность вылечиться с помощью команды "c_green"/bheal"c_white". Стоимость лечения: "c_green"250$");

			new data[32], query[128];
			for(new i;i<3;i++)
			{
				if(!i) format(data, sizeof(data),"%d", b_info[business_id][b_improve][i]);
				else format(data, sizeof(data),"%s|%d", data, b_info[business_id][b_improve][i]);
			}
			format(query,sizeof(query),"UPDATE `businesses` SET `b_improve` = '%s',`b_maxproduct`='%d'  WHERE `b_id` = '%d'", data, b_info[business_id][b_maxproduct], business_id + 1);
			mysql_tquery(sql_connection, query);


			give_money(playerid, -price);
			insert_money_log(playerid, INVALID_PLAYER_ID, -price, "Улучшение бизнеса");

			SendClientMessage(playerid, col_white, !""scm_sucess"Улучшение для бизнеса приобретено.");
            show_bpanel(playerid);
		}
		case d_bpanel_info:
		{
			if(response) return show_bpanel(playerid);
		}
		case d_bpanel_sell:
		{
			if(!response) return show_bpanel(playerid);
			if(listitem == 0)
			{
				show_dialog(playerid, d_bpanel_sell_id, DIALOG_STYLE_INPUT, ""c_server"Продажа бизнеса", ""c_white"Введите ID игрока, которому желаете продать бизнес:", "Принять", "Назад");
				return 1;
			}
			else if(listitem == 1)
			{

				new _d_str[128];
				format(_d_str, 128, ""c_white"Цена продажи: "c_server"%d$\n\n"c_grey"Вы действительно желаете продать бизнес в собственность штата?",
				b_info[PlayerInfo[playerid][business] -1][b_price] -floatround(b_info[PlayerInfo[playerid][business] -1][b_close]/ 10));
				show_dialog(playerid, d_bpanel_sell_gov, DIALOG_STYLE_MSGBOX, ""c_server"Продажа бизнеса", _d_str, "Продать", "Назад");
				return 1;
			}
		}
		case d_bpanel_sell_id:
		{
			if(!response) return show_dialog(playerid, d_bpanel_sell, DIALOG_STYLE_LIST, ""c_server"Продажа бизнеса", "Продать игроку\nПродать государству", "Выбрать", "Назад");
			new pl_id = strval(inputtext);

			if(p_t_info[playerid][p_dialog] != -1) return show_dialog(playerid, d_bpanel_sell_id, DIALOG_STYLE_INPUT, ""c_server"Продажа бизнеса", ""c_white"Введите ID игрока, которому желаете продать бизнес:\n\n"c_orange_red"* Игрок в данный момент не может заключить сделку(открыт диалог).", "Принять", "Назад");
			if(!IsPlayerConnected(pl_id)|| p_t_info[pl_id][p_logged] == false) return show_dialog(playerid, d_bpanel_sell_id, DIALOG_STYLE_INPUT, ""c_server"Продажа бизнеса", ""c_white"Введите ID игрока, которому желаете продать бизнес:\n\n"c_orange_red"* Данный игрок не найден.", "Принять", "Назад");
			if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[pl_id][p_pos][0], p_t_info[pl_id][p_pos][1], p_t_info[pl_id][p_pos][2]) || GetPlayerVirtualWorld(pl_id)!= GetPlayerVirtualWorld(playerid)) return show_dialog(playerid, d_bpanel_sell_id, DIALOG_STYLE_INPUT, ""c_server"Продажа бизнеса", ""c_white"Введите ID игрока, которому желаете продать бизнес:\n\n"c_orange_red"* Данный игрок слишком далеко.", "Принять", "Назад");
			if(PlayerInfo[pl_id][business] != -1) return  show_dialog(playerid, d_bpanel_sell_id, DIALOG_STYLE_INPUT, ""c_server"Продажа бизнеса", ""c_white"Введите ID игрока, которому желаете продать бизнес:\n\n"c_orange_red"* У игрока уже есть бизнес.", "Принять", "Назад");

			SetPVarInt(playerid, "d_pl_id", pl_id);
			show_dialog(playerid, d_bpanel_sell_price, DIALOG_STYLE_INPUT, ""c_server"Продажа бизнеса", ""c_white"Введите сумму, за которую хотите продать бизнес:", "Принять", "Назад");
		}
		case d_bpanel_sell_price:
		{
			if(!response) return DeletePVar(playerid, "d_pl_id"), show_dialog(playerid, d_bpanel_sell_id, DIALOG_STYLE_INPUT, ""c_server"Продажа бизнеса", ""c_white"Введите ID игрока, которому желаете продать бизнес:", "Принять", "Назад");
			new money_count = strval(inputtext);
			if(money_count < 1 || money_count > 9999999) return show_dialog(playerid, d_bpanel_sell_price, DIALOG_STYLE_INPUT, ""c_server"Продажа бизнеса", ""c_white"Введите сумму, за которую хотите продать бизнес:\n\n"c_grey"* Вы ввели некорректную сумму.", "Принять", "Назад");
			SetPVarInt(playerid, "d_price", money_count);
			new pl_id = GetPVarInt(playerid, "d_pl_id");
			SetPVarInt(pl_id, "d_biz_seller", playerid + 1);
			new _d_str[128];
			format(_d_str, 128, ""c_white"%s[%d] предлагает Вам приобрести бизнес\nНазвание: "c_server"%s\n"c_white"Цена: "c_server"%d$",
			PlayerInfo[playerid][name], playerid, b_info[PlayerInfo[playerid][business] -1][b_name], money_count);
			show_dialog(pl_id, d_bpanel_buy, DIALOG_STYLE_MSGBOX, ""c_server"Покупка бизнеса", _d_str, "Купить", "Отмена");
		}
		case d_bpanel_buy:
		{
			new pl_id = GetPVarInt(playerid, "d_biz_seller") -1;
			if(!response)
			{
				DeletePVar(pl_id, "d_price");
				DeletePVar(pl_id, "d_pl_id");
				DeletePVar(playerid, "d_biz_seller");
				SendClientMessage(pl_id, col_gray, "Игрок отказался приобретать бизнес.");
				return 1;
			}
			if(!IsPlayerConnected(pl_id)|| p_t_info[pl_id][p_logged] == false) return SendClientMessage(playerid, col_gray, "Произошла ошибка при продаже бизнеса. Код: 19.");
			if(PlayerInfo[pl_id][business] == -1)
			{
				DeletePVar(pl_id, "d_price");
				DeletePVar(pl_id, "d_pl_id");
				DeletePVar(playerid, "d_biz_seller");
				return SendClientMessage(playerid, col_gray, "У игрока нет бизнеса.");
			}
			if(PlayerInfo[playerid][business] != -1)
			{
				DeletePVar(pl_id, "d_price");
				DeletePVar(pl_id, "d_pl_id");
				DeletePVar(playerid, "d_biz_seller");
				SendClientMessage(pl_id, col_gray, "У игрока уже есть бизнес.");
				return SendClientMessage(playerid, col_gray, "У Вас уже есть бизнес.");
			}
			new _b_sell_price = GetPVarInt(pl_id, "d_price");
			if(PlayerInfo[playerid][money] < _b_sell_price)
			{
				DeletePVar(pl_id, "d_price");
				DeletePVar(pl_id, "d_pl_id");
				DeletePVar(playerid, "d_biz_seller");
				SendClientMessage(pl_id, col_gray, "У игрока недостаточно средств для приобретения бизнеса.");
				return SendClientMessage(playerid, col_gray, "У Вас недостаточно средств для приобретения бизнеса.");
			}
			if(!IsPlayerInRangeOfPoint(playerid, 5.00, p_t_info[pl_id][p_pos][0], p_t_info[pl_id][p_pos][1], p_t_info[pl_id][p_pos][2]) || p_t_info[playerid][p_data][1] != p_t_info[pl_id][p_data][1])
			{
				DeletePVar(pl_id, "d_price");
				DeletePVar(pl_id, "d_pl_id");
				DeletePVar(playerid, "d_biz_seller");
				SendClientMessage(pl_id, col_gray, "Вы слишком далеко от покупателя.");
				return SendClientMessage(playerid, col_gray, "Вы слишком далеко от продавца.");
			}
			if(!IsPlayerConnected(pl_id)|| p_t_info[pl_id][p_logged] == false)
			{
				DeletePVar(pl_id, "d_price");
				DeletePVar(pl_id, "d_pl_id");
				DeletePVar(playerid, "d_biz_seller");
				return SendClientMessage(playerid, col_gray, "Произошла ошибка при продаже бизнеса. Код: 19.");
			}


			new b = PlayerInfo[pl_id][business] -1;
			GetPlayerName(playerid, b_info[b][b_owner_name], MAX_PLAYER_NAME);
			b_info[b][b_owner_inc] = PlayerInfo[playerid][id];
			PlayerInfo[playerid][business] = b_info[b][b_id];
			PlayerInfo[pl_id][business] = -1;
			give_money(playerid, -_b_sell_price);
			give_money(pl_id, _b_sell_price);

			insert_money_log(playerid, pl_id, -_b_sell_price, "покупка бизнеса");
			insert_money_log(pl_id, playerid, _b_sell_price, "продажа бизнеса");

			update_int_sql(playerid, "u_business", PlayerInfo[playerid][business]);
			update_int_sql(pl_id, "u_business", PlayerInfo[pl_id][business]);

		 	SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно приобрели бизнес.");
		 	SendClientMessage(pl_id, col_white, ""c_green"* "c_white"Бизнес успешно продан.");
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			new query_string[200 + MAX_PLAYER_NAME + 1];
			format(query_string, 136,"UPDATE `businesses` SET `b_owner_inc` = '%d', `b_owner_name` = '%s' WHERE `b_id` = '%d' LIMIT 1", PlayerInfo[playerid][id], PlayerInfo[playerid][name], b_info[b][b_id]);
			mysql_tquery(sql_connection, query_string);

			if(b_info[b][b_type] == bizz_type_bar || b_info[b][b_type] == bizz_type_pharm || b_info[b][b_type] == bizz_type_electronic || b_info[b][b_type] == bizz_type_club || b_info[b][b_type] == bizz_type_cafe || b_info[b][b_type] == bizz_type_shop || b_info[b][b_type] == bizz_type_clothes || b_info[b][b_type] == bizz_type_carshop)
			{
				format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
				b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
				UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
			}

			else if(b_info[b][b_type] == bizz_type_gas)
			{
				format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль:"c_white" %s\n"c_grey"Состояние: "c_white"%s",
				b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыто") : ("{e11010}Закрыто"));
				UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
			}
			else if(b_info[b][b_type] == bizz_type_ammo)
			{
				format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
				b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], b_info[b][b_price], family_info[b_info[b][b_family] -1][fam_name],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
				UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
			}
			else if(b_info[b][b_type] == bizz_type_tune)
			{
				format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
				b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_owner_name], mafia_owner_name[b_info[b][b_mafia] -1],(! b_info[b][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
				UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
			}
			DeletePVar(pl_id, "d_price");
			DeletePVar(pl_id, "d_pl_id");
			DeletePVar(playerid, "d_biz_seller");
			return 1;
		}

		case d_bpanel_sell_gov:
		{
			if(!response) return show_dialog(playerid, d_bpanel_sell, DIALOG_STYLE_LIST, ""c_server"Продажа бизнеса", "Продать игроку\nПродать государству", "Выбрать", "Назад");
			new b = PlayerInfo[playerid][business] -1;
			new _b_sell_price = b_info[PlayerInfo[playerid][business] -1][b_price] -floatround(b_info[PlayerInfo[playerid][business] -1][b_close]/ 10);
			GetPlayerName(playerid, b_info[b][b_owner_name], MAX_PLAYER_NAME);
			b_info[b][b_owner_inc] = -1;

			give_money(playerid, _b_sell_price);
			insert_money_log(playerid, INVALID_PLAYER_ID, _b_sell_price, "продажа бизнеса");

		 	SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно продали бизнес.");

			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			new query_string[200 + MAX_PLAYER_NAME + 1];
			format(query_string, 136,"UPDATE `businesses` SET `b_owner_inc` = '-1', `b_owner_name` = 'The State' WHERE `b_id` = '%d' LIMIT 1", b_info[b][b_id]);
			mysql_tquery(sql_connection, query_string);

			PlayerInfo[playerid][business] = -1;
			update_int_sql(playerid, "u_business", PlayerInfo[playerid][business]);

			if(b_info[b][b_type] == bizz_type_bar || b_info[b][b_type] == bizz_type_club || b_info[b][b_type] == bizz_type_cafe || b_info[b][b_type] == bizz_type_pharm || b_info[b][b_type] == bizz_type_electronic || b_info[b][b_type] == bizz_type_shop || b_info[b][b_type] == bizz_type_clothes || b_info[b][b_type] == bizz_type_carshop)
			{
				format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Бизнес продаётся", b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_price], mafia_owner_name[b_info[b][b_mafia] -1]);
				UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
			}

			else if(b_info[b][b_type] == bizz_type_gas)
			{
				format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Стоимость: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Бизнес продаётся (/buygas)", b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_price], mafia_owner_name[b_info[b][b_mafia] -1]);
				UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
			}
			else if(b_info[b][b_type] == bizz_type_ammo)
			{
				format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Бизнес продаётся", b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_price], family_info[b_info[b][b_family] -1][fam_name]);
				UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
			}
			else if(b_info[b][b_type] == bizz_type_tune)
			{
				format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Стоимость: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Автостанция продаётся (/buytune)", b_types[b_info[b][b_type]], b_info[b][b_id], b_info[b][b_price], mafia_owner_name[b_info[b][b_mafia] -1]);
				UpdateDynamic3DTextLabelText(b_info[b][b_label], -1, query_string);
			}
			
		}
		case d_bpanel_fee:
		{
			if(!response)
			{
				show_bpanel(playerid);
				return 1;
			}
			if(strval(inputtext)< 0 || strval(inputtext)> 10000)
			{
				new dialog_string[68];
				format(dialog_string, sizeof(dialog_string), ""c_white"На данный момент цена за вход составляет %d$.", b_info[PlayerInfo[playerid][business] -1][b_fee]);
				show_dialog(playerid, d_bpanel_fee, DIALOG_STYLE_INPUT, ""c_server"Цена за вход", dialog_string, "Принять", "Назад");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Цена за вход не может быть меньше "c_orange_red"0$"c_grey" или больше "c_orange_red"10000$");
				return 1;
			}
			b_info[PlayerInfo[playerid][business] -1][b_fee] = strval(inputtext);
			new query_string[136];
			format(query_string, 136, "UPDATE `businesses` SET `b_fee` = '%d' WHERE `b_id` = '%d' LIMIT 1", b_info[PlayerInfo[playerid][business] -1][b_fee], b_info[PlayerInfo[playerid][business] -1][b_id]);
			mysql_tquery(sql_connection, query_string);
			SendClientMessage(playerid, col_white, "Цена за вход в бизнес изменена.");
		}


		case d_bpanel_cost:
		{
			if(!response)
			{
				show_bpanel(playerid);
				return 1;
			}
			new b = PlayerInfo[playerid][business] -1;
			if(b_info[b][b_type] == bizz_type_tune || b_info[b][b_type] == bizz_type_shop || b_info[b][b_type] == bizz_type_pharm || b_info[b][b_type] == bizz_type_electronic || b_info[b][b_type] == bizz_type_clothes || b_info[b][b_type] == bizz_type_cafe || b_info[b][b_type] == bizz_type_club || b_info[b][b_type] == bizz_type_bar)
			{
				if(strval(inputtext)< 1 || strval(inputtext)> 100)
				{
					new dialog_string[168];
					format(dialog_string, sizeof(dialog_string), ""c_orange_red"* Наценка на товар должна составлять от 1 до 100 процентов.\n\n"c_white"На данный момент наценка на товар составляет "c_server"%d"c_white" процентов.", b_info[PlayerInfo[playerid][business] -1][b_cost]);
					show_dialog(playerid, d_bpanel_cost, DIALOG_STYLE_INPUT, ""c_server"Наценка на товар", dialog_string, "Принять", "Назад");
					return 1;
				}
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Наценка на товар успешно изменена.");
			}
			else if(b_info[b][b_type] == bizz_type_gas)
			{
				if(strval(inputtext)< 1 || strval(inputtext)> 1000)
				{
					new dialog_string[168];
					format(dialog_string, sizeof(dialog_string), ""c_orange_red"* Цена за литр топлива должна составлять от 1$ до 1000$.\n\n"c_white"На данный момент цена за литр составляет "c_server"%d"c_white" процентов.", b_info[PlayerInfo[playerid][business] -1][b_cost]);
					show_dialog(playerid, d_bpanel_cost, DIALOG_STYLE_INPUT, ""c_server"Цена за литр топлива", dialog_string, "Принять", "Назад");
					return 1;
				}
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Цена за литр успешно изменена.");
			}
			else if(b_info[b][b_type] == bizz_type_carshop)
			{
				if(strval(inputtext)< 1 || strval(inputtext)> 10000)
				{
					new dialog_string[168];
					format(dialog_string, sizeof(dialog_string), ""c_orange_red"* Стоимость услуг должна составлять от 1$ до 10000$.\n\n"c_white"На данный момент стоимость размещения авто составляет "c_server"%d$"c_white".", b_info[PlayerInfo[playerid][business] -1][b_cost]);
					show_dialog(playerid, d_bpanel_cost, DIALOG_STYLE_INPUT, ""c_server"Стоимость услуг", dialog_string, "Принять", "Назад");
					return 1;
				}
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Стоимость услуг успешно изменена.");
			}
			b_info[PlayerInfo[playerid][business] -1][b_cost] = strval(inputtext);
			show_bpanel(playerid);
		}
		case d_animations:
		{
			if(!response) return 1;
			if(response)
			{
				p_t_info[playerid][p_animation] = true;
				SendClientMessage(playerid, col_white, ""c_server"* "c_white"Выключить анимацию можно клавишей "c_server"'Пробел'"c_white".");
				switch(listitem)
				{
					case 0:
					{
						ApplyAnimation(playerid,"VENDING","VEND_Drink2_P",10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 20802, 0.0, 0.0, 0.0);
					}
					case 1:
					{
						ApplyAnimation(playerid,"PED","SEAT_down", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 20802, 0.0, 0.0, 0.0);
					}
					case 2:
					{
						SetPlayerSpecialAction(playerid, 5);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 3:
					{
						ApplyAnimation(playerid, "DANCING", "DAN_Loop_A", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 4:
					{
						SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 5:
					{
						SetPlayerSpecialAction(playerid, 10);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 6:
					{
						ApplyAnimation(playerid, "Attractors", "Stepsit_in", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 7:
					{
						ApplyAnimation(playerid, "Attractors", "Stepsit_out", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 8:
					{
						ApplyAnimation(playerid, "FOOD", "SHP_Tray_Lift_Out", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 9:
					{
						ApplyAnimation(playerid, "FOOD", "SHP_Tray_Out", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 10:
					{
						ApplyAnimation(playerid, "GANGS", "hndshkca", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 11:
					{
						ApplyAnimation(playerid, "GANGS", "hndshkda", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 12:
					{
						ApplyAnimation(playerid, "GANGS", "hndshkea", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 13:
					{
						ApplyAnimation(playerid, "GANGS", "leanIN", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 14:
					{
						ApplyAnimation(playerid, "OTB", "wtchrace_lose", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 15:
					{
						ApplyAnimation(playerid, "COP_AMBIENT", "Copbrowse_shake", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 16:
					{
						ApplyAnimation(playerid, "CRACK", "crckidle1", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 17:
					{
						ApplyAnimation(playerid, "CRACK", "crckidle2", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 18:
					{
						ApplyAnimation(playerid, "JST_BUISNESS", "girl_02", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 19:
					{
						ApplyAnimation(playerid, "DAM_JUMP", "DAM_Dive_Loop", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 20:
					{
						ApplyAnimation(playerid, "DEALER", "DEALER_IDLE", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 21:
					{
						ApplyAnimation(playerid, "TATTOOS", "TAT_ArmL_Out_T", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 22:
					{
						ApplyAnimation(playerid,"BEACH","Lay_Bac_Loop", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 23:
					{
						ApplyAnimation(playerid, "DEALER", "DRUGS_BUY", 10000.0, 1, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
					case 24:
					{
						ApplyAnimation(playerid, "RYDER", "RYD_Die_PT1", 10000.0, 1, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
					}
				}
			}
			return 1;
		}
		case d_alogin:
		{
			if(!response)
			{
				new text_string[128];
				format(text_string, sizeof(text_string ), "Администратор %s [%d] (%d) неудачно авторизовался [%s]", PlayerInfo[playerid][name], playerid, PlayerInfo[playerid][admin], p_t_info[playerid][p_ip]);
				PlayerInfo[playerid][admin] = 0;
				foreach(new i: admin_players) SendClientMessage(i, 0xFF0000FF, text_string);
				kick_player(playerid);
				return 1;
			}
			if(strlen(inputtext)< 3)
			{
				new text_string[128];
				format(text_string, sizeof(text_string ), "Администратор %s [%d] (%d) неудачно авторизовался [%s]", PlayerInfo[playerid][name], playerid, PlayerInfo[playerid][admin], p_t_info[playerid][p_ip]);
				PlayerInfo[playerid][admin] = 0;
				foreach(new i: admin_players) SendClientMessage(i, 0xFF0000FF, text_string);
				kick_player(playerid);
				return 1;
			}
			new text_string[164];
			mysql_format(sql_connection, text_string, sizeof(text_string), "SELECT `u_a_level`,`u_a_online` FROM `users_admins` WHERE `u_a_name` = '%s' AND `u_a_password` = '%e' LIMIT 1", PlayerInfo[playerid][name], inputtext);
			mysql_tquery(sql_connection, text_string, "alogin_step_two", "i", playerid);
		}
		case d_alogin_reg:
		{
			if(!response)
			{
				new text_string[105];
				format(text_string, sizeof(text_string), ""c_server"* A.INFO:"c_grey" %s[%d] неудачно авторизовался в панели администратора", PlayerInfo[playerid][name], playerid);
				foreach(new i: admin_players) SendClientMessage(i, col_gray, text_string);

				PlayerInfo[playerid][admin] = 0;
				return 1;
			}
			if(!(6 <= strlen(inputtext) <= 15) || is_text_invalid(inputtext) || is_russian_text(inputtext)) return show_dialog(playerid, d_alogin_reg, DIALOG_STYLE_INPUT, !""scm_dialog"Регистрация", !""c_white"Введите пароль, который будет использоваться для авторизации\n"c_grey"Примечание:\n\t"c_grey"-Пароль должен состоять из латинских букв и цифр\n\t"c_grey"-Размер пароля от 6 до 15 символов.", !"Далее", !"Отмена");

			new query_string[170];
			mysql_format(sql_connection, query_string, sizeof(query_string), "UPDATE `users_admins` SET `u_a_password`='%s' WHERE `u_a_name`='%s' LIMIT 1", inputtext, PlayerInfo[playerid][name]);
			mysql_query(sql_connection, query_string);

			mysql_format(sql_connection, query_string, sizeof(query_string), "SELECT `u_a_level`,`u_a_online` FROM `users_admins` WHERE `u_a_name`='%s' AND `u_a_password`='%s' LIMIT 1", PlayerInfo[playerid][name], inputtext);
			mysql_tquery(sql_connection, query_string, "alogin_step_two", "i", playerid);
		}
		case d_tp:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					global_string[0] = EOS;
					for(new j = 0; j < fraction_count; j ++)
					{
						new line_string[64];
						format(line_string, 64, ""c_server"%d |"c_white" {%s}%s\n", j + 1, f_info[j][f_chat_color], f_info[j][f_name]);
						strcat(global_string, line_string);
					}
					show_dialog(playerid, d_tp_org, DIALOG_STYLE_LIST, !""scm_dialog"Спавны организаций", global_string, !"Выбрать", !"Назад");
				}
				case 1:
				{
					show_dialog(playerid, d_tp_jobs, DIALOG_STYLE_LIST, !""scm_dialog"Работы", !""c_server"1 |"c_white" Шахта\n\
																							 "c_server"2 |"c_white" Завод\n\
																							 "c_server"3 |"c_white" Лесопилка\n\
																							 "c_server"4 |"c_white" Склад продуктов\n\
																				  		     "c_server"5 |"c_white" Топливная база\n\
																							 "c_server"6 |"c_white" Порт\n\
																							 "c_server"7 |"c_white" Бюро фотографов", !"Выбрать", !"Назад");
				}
				case 2:
				{
					show_dialog(playerid, d_tp_newbie, DIALOG_STYLE_LIST, !""scm_dialog"Спавны новичков", !""c_server"1 |"c_white" Аэропорт\n"c_server"2 |"c_white" Автовокзал\n"c_server"3 |"c_white" ЖД вокзал", !"Выбрать", !"Назад");
				}
				case 3:
				{
					show_dialog(playerid, d_tp_licenses, DIALOG_STYLE_LIST, !""scm_dialog"Центры лицензирования", !""c_server"1 |"c_white" Автошкола\n"c_server"2 |"c_white" Авиашкола\n"c_server"3 |"c_white" Центр водного транспорта", !"Выбрать", !"Назад");
				}
				case 4:
				{
					show_dialog(playerid, d_tp_main, DIALOG_STYLE_LIST, !""scm_dialog"Важные места", !""c_server"1 |"c_white" Банк ЛС\n"c_server"2 |"c_white" Банк СФ\n"c_server"3 |"c_white" Банк ЛВ\n"c_server"4 |"c_white" Притон\n"c_server"5 |"c_white" Центральное аммо\n"c_server"6 |"c_white" Казино", !"Выбрать", !"Назад");
				}
				case 5:
				{
					show_dialog(playerid, d_tp_vehicle, DIALOG_STYLE_LIST, !""scm_dialog"Все для автомобилей", !""c_server"1 |"c_white" Автосалон LS\n"c_server"2 |"c_white" Автосалон LV\n"c_server"3 |"c_white" Автосалон SF\n"c_server"4 |"c_white" Автосервис LS\n"c_server"5 |"c_white" Автосервис LV\n"c_server"6 |"c_white" Автосервис SF\n"c_server"7 |"c_white" Performance LS\n"c_server"8 |"c_white" Performance LV\n"c_server"9 |"c_white" Performance SF\n"c_server"10 |"c_white" Б/У Рынок LS\n"c_server"11 |"c_white" Б/У Рынок LV\n"c_server"12 |"c_white" Б/У Рынок SF", !"Выбрать", !"Назад");
				}
			}
		}
		case d_tp_main:
		{
			if(!response) return show_dialog(playerid, d_tp, DIALOG_STYLE_LIST, !""scm_dialog"Телепортация", !""c_server"1 | "c_white"Базы организаций\n"c_server"2 | "c_white"Работы\n"c_server"3 | "c_white"Спавны новичков\n"c_server"4 | "c_white"Центры лицензирования\n"c_server"5 | "c_white"Важные места\n"c_server"6 | "c_white"Транспорт", !"Выбрать", !"Закрыть");
			switch(listitem)
			{
				case 0:
				{
					set_pos(playerid, 1374.7042, -1088.8881, 25.4599, 273.6328, 0, 0);
				}
				case 1:
				{
					set_pos(playerid, -2761.1948, 375.7924, 5.1321, 90.9043, 0, 0);
				}
				case 2:
				{
					set_pos(playerid, 2444.3718, 2376.3948, 12.0823, 261.980, 0, 0);
				}
				case 3:
				{
					set_pos(playerid, 2169.8584,-1675.0878,15.0859,42.615, 0, 0);
				}
				case 4:
				{
					set_pos(playerid, 1363.7808,-1279.4966,13.5469,270.0739, 0, 0);
				}
				case 5:
				{
					set_pos(playerid, 2030.3793,1007.7266,10.8203,92.1386, 0, 0);
				}
			}
		}
		case d_tp_vehicle:
		{
			if(!response) return show_dialog(playerid, d_tp, DIALOG_STYLE_LIST, !""scm_dialog"Телепортация", !""c_server"1 | "c_white"Базы организаций\n"c_server"2 | "c_white"Работы\n"c_server"3 | "c_white"Спавны новичков\n"c_server"4 | "c_white"Центры лицензирования\n"c_server"5 | "c_white"Важные места\n"c_server"6 | "c_white"Транспорт", !"Выбрать", !"Закрыть");
			switch(listitem)
			{
				case 0:
				{
					set_pos(playerid, 542.7717,-1279.7804,17.2422,178.3133, 0, 0);
				}
				case 1:
				{
					set_pos(playerid, 2200.1963,1380.0546,10.8203,359.2156, 0, 0);
				}
				case 2:
				{
					set_pos(playerid, -1979.3934,289.2782,35.1719,269.4186, 0, 0);
				}
				case 3:
				{
					set_pos(playerid, 844.4507,-572.0529,16.5063,180.7632, 0, 0);
				}
				case 4:
				{
					set_pos(playerid, 1646.1377,2183.5186,10.8203,353.6600, 0, 0);
				}
				case 5:
				{
					set_pos(playerid, -1787.7695,1196.6691,25.1194,1.0337, 0, 0);
				}
				case 6:
				{
					set_pos(playerid, 1619.1793,-1882.2513,13.5407,178.9592, 0, 0);
				}
				case 7:
				{
					set_pos(playerid, 2394.8145,1473.3427,10.6719,0.4511, 0, 0);
				}
				case 8:
				{
					set_pos(playerid, -2705.5847,197.5220,4.1797,89.7970, 0, 0);
				}
				case 9:
				{
					set_pos(playerid, 2474.8770,-1510.6240,24.0000,179.3008, 0, 0);
				}
				case 10:
				{
					set_pos(playerid, -2566.5344,554.9221,14.4684,179.6169, 0, 0);
				}
				case 11:
				{
					set_pos(playerid, 2554.7205,1393.8043,10.7762,270.8342, 0, 0);
				}
			}
		}
		case d_tp_newbie:
		{
			if(!response) return show_dialog(playerid, d_tp, DIALOG_STYLE_LIST, !""scm_dialog"Телепортация", !""c_server"1 | "c_white"Базы организаций\n"c_server"2 | "c_white"Работы\n"c_server"3 | "c_white"Спавны новичков\n"c_server"4 | "c_white"Центры лицензирования\n"c_server"5 | "c_white"Важные места\n"c_server"6 | "c_white"Транспорт", !"Выбрать", !"Закрыть");
			switch(listitem)
			{
				case 0:
				{
					set_pos(playerid, 1683.3053,-2321.8406,13.3828,177.9516, 0, 0);
				}
				case 1:
				{
					set_pos(playerid, 938.4318,-1330.1791,13.3828,183.0812, 0, 0);
				}
				case 2:
				{
					set_pos(playerid, 1815.0455,-1889.6853,13.4141,87.8477, 0, 0);
				}
			}
		}
		case d_tp_licenses:
		{
			if(!response) return show_dialog(playerid, d_tp, DIALOG_STYLE_LIST, !""scm_dialog"Телепортация", !""c_server"1 | "c_white"Базы организаций\n"c_server"2 | "c_white"Работы\n"c_server"3 | "c_white"Спавны новичков\n"c_server"4 | "c_white"Центры лицензирования\n"c_server"5 | "c_white"Важные места\n"c_server"6 | "c_white"Транспорт", !"Выбрать", !"Закрыть");
			switch(listitem)
			{
				case 0:
				{
					set_pos(playerid, -2043.1486,-227.2786,35.3012,136.1516, 0, 0);
				}
				case 1:
				{
					set_pos(playerid, 337.9726,2540.6726,16.8427,268.6376, 0, 0);
				}
				case 2:
				{
					set_pos(playerid, 709.9207,-1432.1539,13.5318,245.6454, 0, 0);
				}
			}
		}
		case d_tp_jobs:
		{
			if(!response) return show_dialog(playerid, d_tp, DIALOG_STYLE_LIST, !""scm_dialog"Телепортация", !""c_server"1 | "c_white"Базы организаций\n"c_server"2 | "c_white"Работы\n"c_server"3 | "c_white"Спавны новичков\n"c_server"4 | "c_white"Центры лицензирования\n"c_server"5 | "c_white"Важные места\n"c_server"6 | "c_white"Транспорт", !"Выбрать", !"Закрыть");
			switch(listitem)
			{
				case 0: // шахта
				{
					set_pos(playerid, 632.8657, 891.9338, -42.9609, 153.4040, 0, 0);
				}
				case 1: // завод
				{
					set_pos(playerid, -50.0653, -293.5583, 5.4297, 358.4573, 0, 0);
				}
				case 2: // лесопилка
				{
					set_pos(playerid, -1116.3422, -1650.3342, 76.3672, 174.9082, 0, 0);
				}
				case 3: // продуктовая база
				{
					set_pos(playerid, 1667.2052,1011.5432,10.8203,358.6257, 0, 0);
				}
				case 4: // Топливная база
				{
					set_pos(playerid, -1039.4039, -587.8505, 32.0078, 178.5382, 0, 0);
				}
				case 5: // Порт
				{
					set_pos(playerid, 2645.4548, -2412.0635, 13.2911, 180.4754, 0, 0);
				}
				case 6: // фотограф
				{
					set_pos(playerid, -1822.6549, 540.6161, 35.1641, 20.7840, 0, 0);
				}
			}
		}

		case d_tp_org:
		{
			if(!response) return show_dialog(playerid, d_tp, DIALOG_STYLE_LIST, !""scm_dialog"Телепортация", !""c_server"1 | "c_white"Базы организаций\n"c_server"2 | "c_white"Работы\n"c_server"3 | "c_white"Спавны новичков\n"c_server"4 | "c_white"Центры лицензирования\n"c_server"5 | "c_white"Важные места\n"c_server"6 | "c_white"Транспорт", !"Выбрать", !"Закрыть");
			set_pos(playerid, f_info[listitem][f_spawn][0], f_info[listitem][f_spawn][1], f_info[listitem][f_spawn][2], f_info[listitem][f_spawn][3], f_info[listitem][f_spawn_int], f_info[listitem][f_spawn_virt]);
		}

		case d_invite_box:
		{
			if(!response)
			{
				DeletePVar(playerid, "frac_invite");
				DeletePVar(playerid, "frac_invite_pl_id");
				return 1;
			}
			SendClientMessage(playerid, 0x14A3FFFF, "Ожидайте, пока лидер/заместитель выберет для Вас одежду.");
			new frac_id = GetPVarInt(playerid, "frac_invite"),
				dialog_string[max_rank * 6 + 108];
			for(new j = 0; j < max_rank; j ++)
			{
				if(f_skin[frac_id -1][PlayerInfo[playerid][gender]][j] == 1) break;
				new line_string[7];
				format(line_string, 7, "%d\n", f_skin[frac_id -1][PlayerInfo[playerid][gender]][j]);
				strcat(dialog_string, line_string);
			}
			show_dialog(GetPVarInt(playerid, "frac_invite_pl_id")-1, d_invite_skin, DIALOG_STYLE_LIST, ""c_server"Выбор одежды", dialog_string, "Принять", "");
			SetPVarInt(GetPVarInt(playerid, "frac_invite_pl_id")-1, "frac_invite_sk_id", playerid + 1);

			PlayerInfo[playerid][member] = GetPVarInt(playerid, "frac_invite");
			PlayerInfo[playerid][rank] = 1;
			PlayerInfo[playerid][org_skin] = f_skin[frac_id -1][PlayerInfo[playerid][gender]][0];

			SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);


			update_int_sql(playerid, "u_org_skin", PlayerInfo[playerid][org_skin]);

			PlayerInfo[playerid][spawnchange] = 2;
			update_int_sql(playerid, "u_spawnchange", PlayerInfo[playerid][spawnchange]);



			format(dialog_string,sizeof(dialog_string),"UPDATE `users` SET `u_member` = '%d', `u_rank` = '%d', `u_fraction_date` = NOW(), `u_job`='0' WHERE `u_id` = '%d' LIMIT 1",
			PlayerInfo[playerid][member], PlayerInfo[playerid][rank], PlayerInfo[playerid][id]);
			mysql_query(sql_connection, dialog_string);

			PlayerInfo[playerid][job] = 0;

			PlayerInfo[playerid][f_warning] = 0;
			update_int_sql(playerid, "u_f_warning", PlayerInfo[playerid][f_warning]);
			DeletePVar(playerid, "frac_invite");
			DeletePVar(playerid, "frac_invite_pl_id");
		}
		case d_invite_skin:
		{
			new pl_id = GetPVarInt(playerid, "frac_invite_sk_id")-1;
			if(!response || ! IsPlayerInRangeOfPoint(playerid, 5, p_t_info[pl_id][p_pos][0], p_t_info[pl_id][p_pos][1], p_t_info[pl_id][p_pos][2]) || GetPlayerVirtualWorld(pl_id)!= GetPlayerVirtualWorld(playerid))
			{
				SetPlayerSkin(pl_id, PlayerInfo[pl_id][org_skin]);
				DeletePVar(playerid, "frac_invite_sk_id");
				return 1;
			}
			PlayerInfo[pl_id][org_skin] = f_skin[PlayerInfo[pl_id][member] -1][PlayerInfo[pl_id][gender]][listitem];
			SetPlayerSkin(pl_id, PlayerInfo[pl_id][org_skin]);
			new text_string[98];
			format(text_string, sizeof(text_string), ""c_green"* "c_white"Вы успешно вступили в организацию \"%s\".", f_info[PlayerInfo[pl_id][member] -1][f_name]);
			SendClientMessage(pl_id, col_white, text_string);
			format(text_string, sizeof(text_string), ""c_green"* "c_white"Вы приняли в организацию игрока \"%s\".", PlayerInfo[pl_id][name]);
			SendClientMessage(playerid, col_white, text_string);
			update_int_sql(pl_id, "u_org_skin", PlayerInfo[pl_id][org_skin]);
			DeletePVar(playerid, "frac_invite_sk_id");
		}
		case d_set_fskin:
		{
			if(!response) return DeletePVar(playerid, "frac_invite_sk_id");

			new pl_id = GetPVarInt(playerid, "frac_invite_sk_id")-1;
			PlayerInfo[pl_id][org_skin] = f_skin[PlayerInfo[pl_id][member] -1][PlayerInfo[pl_id][gender]][listitem];
			SetPlayerSkin(pl_id, PlayerInfo[pl_id][org_skin]);

			SetPlayerColor(pl_id, f_info[PlayerInfo[pl_id][member] -1][f_radar_color]);

			is_fraction_duty {pl_id} = 1;
			update_int_sql(pl_id, "u_org_skin", PlayerInfo[pl_id][org_skin]);

			new text_string[98];
			format(text_string, sizeof(text_string), "%s выдал Вам новую одежду.", PlayerInfo[playerid][name]);
			SendClientMessage(pl_id, 0x14A3FFFF, text_string);
			DeletePVar(playerid, "frac_invite_sk_id");
		}
		case d_dip_list:
		{
			if(!response || PlayerInfo[playerid][leader] == 0)
			{
				for(new i = 0; i < 7; i ++)
				{
					new pvar_string[8];
					format(pvar_string, 8, "d_%d", i);
					DeletePVar(playerid, pvar_string);
				}
				return 1;
			}
			new header_string[64];
			format(header_string, 8, "d_%d", listitem);
			new fr_id = GetPVarInt(playerid, header_string);
			SetPVarInt(playerid, "d_listitem", listitem);

			header_string[0] = EOS;

			strcat(header_string, "{");
			strcat(header_string, f_info[fr_id -1][f_chat_color]);
			strcat(header_string, "}");
			strcat(header_string, f_info[fr_id -1][f_name]);

			show_dialog(playerid, d_dip_change, DIALOG_STYLE_LIST, header_string, "Нейтралитет\nОбъявить войну\nПредложить союз", "Выбрать", "Закрыть");
		}
		case d_dip_change:
		{
			static const dip_status[][] = {
			"{FFF2C7}Нейтралитет",
			"{AA3333}Война",
			"{33AA33}Союз",
			""c_server"Запрос на союз",
			""c_server"Запрос на союз"
			};

			if(gz_captured != -1)
			{
				new pvar_string[8],
					step;

				global_string[0] = EOS;

				for(new i = 0; i < 8; i ++)
				{
					if(i + 18 == PlayerInfo[playerid][member]) continue;

					format(pvar_string, 8, "d_%d", step);
					SetPVarInt(playerid, pvar_string, i + 18);

					strcat(global_string, "{");
					strcat(global_string, f_info[i + 17][f_chat_color]);
					strcat(global_string, "}");
					strcat(global_string, f_info[i + 17][f_name]);
					strcat(global_string, "\t");
					strcat(global_string, dip_status[f_diplomacy[PlayerInfo[playerid][member] -18][i]]);
					strcat(global_string, "\n");
					step ++;
				}
				show_dialog(playerid, d_dip_list, DIALOG_STYLE_TABLIST, ""c_server"Дипломатия", global_string, "Выбрать", "Закрыть");
				return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Невозможно изменять дипломатию во время захвата территории.");
			}
			if(!response)
			{

				new pvar_string[8],
					step;

				global_string[0] = EOS;

				for(new i = 0; i < 8; i ++)
				{
					if(i + 18 == PlayerInfo[playerid][member]) continue;

					format(pvar_string, 8, "d_%d", step);
					SetPVarInt(playerid, pvar_string, i + 18);

					strcat(global_string, "{");
					strcat(global_string, f_info[i + 17][f_chat_color]);
					strcat(global_string, "}");
					strcat(global_string, f_info[i + 17][f_name]);
					strcat(global_string, "\t");
					strcat(global_string, dip_status[f_diplomacy[PlayerInfo[playerid][member] -18][i]]);
					strcat(global_string, "\n");
					step ++;
				}
				show_dialog(playerid, d_dip_list, DIALOG_STYLE_TABLIST, ""c_server"Дипломатия", global_string, "Выбрать", "Закрыть");
				return 1;
			}
			new pvar_string[8];
			format(pvar_string, 8, "d_%d", GetPVarInt(playerid, "d_listitem"));
			DeletePVar(playerid, "d_listitem");
			new fr_id = GetPVarInt(playerid, pvar_string);
			if(listitem == 2)
			{
				if(f_diplomacy[PlayerInfo[playerid][member] -18][fr_id -18] == dip_status_alliance_get_invite)
				{
					f_diplomacy[PlayerInfo[playerid][member] -18][fr_id -18] = dip_status_alliance;
					f_diplomacy[fr_id -18][PlayerInfo[playerid][member] -18] = dip_status_alliance;




					new step;
					global_string[0] = EOS;

					for(new i = 0; i < 8; i ++)
					{
						if(i + 18 == PlayerInfo[playerid][member]) continue;

						format(pvar_string, 8, "d_%d", step);
						SetPVarInt(playerid, pvar_string, i + 18);

						strcat(global_string, "{");
						strcat(global_string, f_info[i + 17][f_chat_color]);
						strcat(global_string, "}");
						strcat(global_string, f_info[i + 17][f_name]);
						strcat(global_string, "\t");
						strcat(global_string, dip_status[f_diplomacy[PlayerInfo[playerid][member] -18][i]]);
						strcat(global_string, "\n");
						step ++;
					}
					show_dialog(playerid, d_dip_list, DIALOG_STYLE_TABLIST, ""c_server"Дипломатия", global_string, "Выбрать", "Закрыть");

					new sql_string[90];

					mysql_format(sql_connection, sql_string, 90, "UPDATE `fractions` SET `f_dip` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `f_id` = '%d' LIMIT 1",
					f_diplomacy[PlayerInfo[playerid][member] -18][0], f_diplomacy[PlayerInfo[playerid][member] -18][1],
					f_diplomacy[PlayerInfo[playerid][member] -18][2], f_diplomacy[PlayerInfo[playerid][member] -18][3],
					f_diplomacy[PlayerInfo[playerid][member] -18][4], f_diplomacy[PlayerInfo[playerid][member] -18][5],
					f_diplomacy[PlayerInfo[playerid][member] -18][6], f_diplomacy[PlayerInfo[playerid][member] -18][7],
					PlayerInfo[playerid][member]);
					mysql_tquery(sql_connection, sql_string, "", "");

					mysql_format(sql_connection, sql_string, 90, "UPDATE `fractions` SET `f_dip` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `f_id` = '%d' LIMIT 1",
					f_diplomacy[fr_id -18][0], f_diplomacy[fr_id -18][1],
					f_diplomacy[fr_id -18][2], f_diplomacy[fr_id -18][3],
					f_diplomacy[fr_id -18][4], f_diplomacy[fr_id -18][5],
					f_diplomacy[fr_id -18][6], f_diplomacy[fr_id -18][7],
					fr_id);
					mysql_tquery(sql_connection, sql_string, "", "");
					return 1;
				}
				f_diplomacy[PlayerInfo[playerid][member] -18][fr_id -18] = dip_status_alliance_invite;
				f_diplomacy[fr_id -18][PlayerInfo[playerid][member] -18] = dip_status_alliance_get_invite;

				new step;
				global_string[0] = EOS;

				for(new i = 0; i < 8; i ++)
				{
					if(i + 18 == PlayerInfo[playerid][member]) continue;

					format(pvar_string, 8, "d_%d", step);
					SetPVarInt(playerid, pvar_string, i + 18);

					strcat(global_string, "{");
					strcat(global_string, f_info[i + 17][f_chat_color]);
					strcat(global_string, "}");
					strcat(global_string, f_info[i + 17][f_name]);
					strcat(global_string, "\t");
					strcat(global_string, dip_status[f_diplomacy[PlayerInfo[playerid][member] -18][i]]);
					strcat(global_string, "\n");
					step ++;
				}
				show_dialog(playerid, d_dip_list, DIALOG_STYLE_TABLIST, ""c_server"Дипломатия", global_string, "Выбрать", "Закрыть");

				new sql_string[90];
				mysql_format(sql_connection, sql_string, 90, "UPDATE `fractions` SET `f_dip` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `f_id` = '%d' LIMIT 1",
				f_diplomacy[PlayerInfo[playerid][member] -18][0], f_diplomacy[PlayerInfo[playerid][member] -18][1],
				f_diplomacy[PlayerInfo[playerid][member] -18][2], f_diplomacy[PlayerInfo[playerid][member] -18][3],
				f_diplomacy[PlayerInfo[playerid][member] -18][4], f_diplomacy[PlayerInfo[playerid][member] -18][5],
				f_diplomacy[PlayerInfo[playerid][member] -18][6], f_diplomacy[PlayerInfo[playerid][member] -18][7],
				PlayerInfo[playerid][member]);
				mysql_tquery(sql_connection, sql_string, "", "");

				mysql_format(sql_connection, sql_string, 90, "UPDATE `fractions` SET `f_dip` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `f_id` = '%d' LIMIT 1",
				f_diplomacy[fr_id -18][0], f_diplomacy[fr_id -18][1],
				f_diplomacy[fr_id -18][2], f_diplomacy[fr_id -18][3],
				f_diplomacy[fr_id -18][4], f_diplomacy[fr_id -18][5],
				f_diplomacy[fr_id -18][6], f_diplomacy[fr_id -18][7],
				fr_id);
				mysql_tquery(sql_connection, sql_string, "", "");
				return 1;
			}
			f_diplomacy[PlayerInfo[playerid][member] -18][fr_id -18] = listitem;
			f_diplomacy[fr_id -18][PlayerInfo[playerid][member] -18] = listitem;



			new	step;
			global_string[0] = EOS;
			for(new i = 0; i < 8; i ++)
			{
				if(i + 18 == PlayerInfo[playerid][member]) continue;

				format(pvar_string, 8, "d_%d", step);
				SetPVarInt(playerid, pvar_string, i + 18);

				strcat(global_string, "{");
				strcat(global_string, f_info[i + 17][f_chat_color]);
				strcat(global_string, "}");
				strcat(global_string, f_info[i + 17][f_name]);
				strcat(global_string, "\t");
				strcat(global_string, dip_status[f_diplomacy[PlayerInfo[playerid][member] -18][i]]);
				strcat(global_string, "\n");
				step ++;
			}
			show_dialog(playerid, d_dip_list, DIALOG_STYLE_TABLIST, ""c_server"Дипломатия", global_string, "Выбрать", "Закрыть");
			new sql_string[90];
			mysql_format(sql_connection, sql_string, 90, "UPDATE `fractions` SET `f_dip` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `f_id` = '%d' LIMIT 1",
			f_diplomacy[PlayerInfo[playerid][member] -18][0], f_diplomacy[PlayerInfo[playerid][member] -18][1],
			f_diplomacy[PlayerInfo[playerid][member] -18][2], f_diplomacy[PlayerInfo[playerid][member] -18][3],
			f_diplomacy[PlayerInfo[playerid][member] -18][4], f_diplomacy[PlayerInfo[playerid][member] -18][5],
			f_diplomacy[PlayerInfo[playerid][member] -18][6], f_diplomacy[PlayerInfo[playerid][member] -18][7],
			PlayerInfo[playerid][member]);
			mysql_tquery(sql_connection, sql_string, "", "");

			mysql_format(sql_connection, sql_string, 90, "UPDATE `fractions` SET `f_dip` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `f_id` = '%d' LIMIT 1",
			f_diplomacy[fr_id -18][0], f_diplomacy[fr_id -18][1],
			f_diplomacy[fr_id -18][2], f_diplomacy[fr_id -18][3],
			f_diplomacy[fr_id -18][4], f_diplomacy[fr_id -18][5],
			f_diplomacy[fr_id -18][6], f_diplomacy[fr_id -18][7],
			fr_id);
			mysql_tquery(sql_connection, sql_string, "", "");

		}
		case d_lmenu_rankname_list:
		{
			if(!response) return 1;
			SetPVarInt(playerid, "rank_name_listitem", listitem);
			show_dialog(playerid, d_lmenu_rankname_set, DIALOG_STYLE_INPUT, ""c_server"Название ранга", ""c_white"Введите название ранга:", "Принять", "Назад");
			return 1;
		}
		case d_lmenu_rankname_set:
		{
			if(!response)
			{
				global_string[0] = EOS;
				for(new i = 0; i < f_info[PlayerInfo[playerid][member] -1][f_rank_settings][0]; i ++)
				{
					new line_string[72];
					format(line_string, 72, ""c_grey"%i. "c_white"%s\n", i + 1, f_rank[PlayerInfo[playerid][member] -1][i]);
					strcat(global_string, line_string);
				}
				show_dialog(playerid, d_lmenu_rankname_list, DIALOG_STYLE_LIST, ""c_server"Смена названия ранга", global_string, "Далее", "Закрыть");
				return 1;
			}
			if(strlen(inputtext)< 3 || strlen(inputtext)> 23) return show_dialog(playerid, d_lmenu_rankname_set, DIALOG_STYLE_INPUT, ""c_server"Название ранга", ""c_grey"Название ранга не может состоять менее чем из 3 или более чем из 23 символов!\n\n"c_white"Введите название ранга:", "Принять", "Назад");
			if(is_text_invalid(inputtext)) return show_dialog(playerid, d_lmenu_rankname_set, DIALOG_STYLE_INPUT, ""c_server"Название ранга", ""c_grey"Вы использовали недопустимые символы!\n\n"c_white"Введите название ранга:", "Принять", "Назад");

			new dialog_rank_id = GetPVarInt(playerid, "rank_name_listitem");
			format(f_rank[PlayerInfo[playerid][member] -1][dialog_rank_id], 24, "%s", inputtext);
			new sql_string[24 * 15 + 84];
			format(sql_string, 68, "Вы успешно изменили название %d ранга на %s",dialog_rank_id + 1, inputtext);
			SendClientMessage(playerid, col_succes, sql_string);

			mysql_format(sql_connection, sql_string, sizeof(sql_string), "UPDATE `fractions` SET `f_ranks` = '%e|%e|%e|%e|%e|%e|%e|%e|%e|%e|%e|%e|%e|%e|%e|%e' WHERE `f_id` = '%d' LIMIT 1",
			f_rank[PlayerInfo[playerid][member] -1][0], f_rank[PlayerInfo[playerid][member] -1][1],
			f_rank[PlayerInfo[playerid][member] -1][2], f_rank[PlayerInfo[playerid][member] -1][3],
			f_rank[PlayerInfo[playerid][member] -1][4], f_rank[PlayerInfo[playerid][member] -1][5],
			f_rank[PlayerInfo[playerid][member] -1][6], f_rank[PlayerInfo[playerid][member] -1][7],
			f_rank[PlayerInfo[playerid][member] -1][8], f_rank[PlayerInfo[playerid][member] -1][9],
			f_rank[PlayerInfo[playerid][member] -1][10], f_rank[PlayerInfo[playerid][member] -1][11],
			f_rank[PlayerInfo[playerid][member] -1][12], f_rank[PlayerInfo[playerid][member] -1][13],
			f_rank[PlayerInfo[playerid][member] -1][14], f_rank[PlayerInfo[playerid][member] -1][15], PlayerInfo[playerid][member]);
			mysql_tquery(sql_connection, sql_string, "", "");

			global_string[0] = EOS;
			for(new i = 0; i < f_info[PlayerInfo[playerid][member] -1][f_rank_settings][0]; i ++)
			{
				new line_string[72];
				format(line_string, 72, ""c_grey"%i. "c_white"%s\n", i + 1, f_rank[PlayerInfo[playerid][member] -1][i]);
				strcat(global_string, line_string);
			}
			show_dialog(playerid, d_lmenu_rankname_list, DIALOG_STYLE_LIST, ""c_server"Смена названия ранга", global_string, "Далее", "Закрыть");
			return 1;
		}
		case d_give_mc:
		{
			if(!response) return DeletePVar(playerid, "mc_playerid");
			if(listitem == 0)
			{
				show_dialog(playerid, d_give_mc, DIALOG_STYLE_LIST, ""c_server"Выдача мед.карты",
				"{cccc99}Выберите результат осмотра:\n\
				"c_white"Серьезно болен/больна\n\
				Наблюдаются отклонения\n\
				Полностью здоров(а)",
				"Выбрать", "Закрыть");
				return 1;
			}
			new pl_id = GetPVarInt(playerid, "mc_playerid");

			if(!IsPlayerConnected(pl_id)|| p_t_info[pl_id][p_logged] == false) return SendClientMessage(playerid, col_gray, "Игрок не найден."), DeletePVar(playerid, "mc_playerid");
			if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[pl_id][p_pos][0], p_t_info[pl_id][p_pos][1], p_t_info[pl_id][p_pos][2]) || GetPlayerVirtualWorld(pl_id)!= GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray, "Игрок слишком далеко."), DeletePVar(playerid, "mc_playerid");
			new text_string[208];

			static const mc_status[][] = {
			"Серьезно болен/больна",
			"Наблюдаются отклонения",
			"Полностью здоров(а)"};


			format(text_string, 90, "%s выдал вам медицинскую карту: %s", PlayerInfo[playerid][name], mc_status[listitem -1]);
			SendClientMessage(pl_id, col_lblue, text_string);
			format(text_string, 90, "Вы выдали медицинскую карту игроку %s: %s", PlayerInfo[pl_id][name], mc_status[listitem -1]);
			SendClientMessage(playerid, col_lblue, text_string);

			mysql_format(sql_connection, text_string, 76, "SELECT * FROM `users_medcards` WHERE `mc_owner` = '%d' LIMIT 1",
			PlayerInfo[pl_id][id]);
			mysql_tquery(sql_connection, text_string, "check_mc");



			mysql_format(sql_connection, text_string, sizeof(text_string), "INSERT INTO `users_medcards` (`mc_result`,`mc_dname`,`mc_owner`,`mc_date`) VALUES ('%d','%s','%d',NOW())",
			listitem -1, PlayerInfo[playerid][name], PlayerInfo[pl_id][id]);
			mysql_tquery(sql_connection, text_string);


			DeletePVar(playerid, "mc_playerid");
			return 1;
		}
		case d_heal:
		{
			if(!response)
			{
				heal_id[playerid] = INVALID_PLAYER_ID;
				heal_price[playerid] = 0;
				return 1;
			}


			if(!IsPlayerConnected(heal_id[playerid]) || heal_id[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, col_gray, "Игрок не найден, либо вышел из игры.");
			if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[heal_id[playerid]][p_pos][0], p_t_info[heal_id[playerid]][p_pos][1], p_t_info[heal_id[playerid]][p_pos][2]) || GetPlayerVirtualWorld(heal_id[playerid]) != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray, "Игрок слишком далеко.");
			if(PlayerInfo[playerid][money] < heal_price[playerid]) return SendClientMessage(playerid, col_gray, "У Вас недостаточно денег.");

			give_money(playerid, -heal_price[playerid]);
			give_money(heal_id[playerid], heal_price[playerid]);

			set_health(playerid, 100);

			new t_string[34 + MAX_PLAYER_NAME + 6];
			format(t_string, sizeof(t_string), "%s полностью Вас вылечил за %d$.", PlayerInfo[heal_id[playerid]][name], heal_price[playerid]);
			SendClientMessage(playerid, col_lblue, t_string);

			format(t_string, sizeof(t_string), "Вы полностью вылечили %s за %d$.", PlayerInfo[playerid][name], heal_price[playerid]);
			SendClientMessage(heal_id[playerid], col_lblue, t_string);

			heal_id[playerid] = INVALID_PLAYER_ID;
			heal_price[playerid] = 0;
			return 1;
		}
		case d_heal_2:
		{
			if(!response) return 1;

			if(PlayerInfo[playerid][money] < 1000) return SendClientMessage(playerid, col_gray, "У Вас недостаточно денег.");

			give_money(playerid, -1000);

			set_health(playerid, 100);

            DeletePVar(playerid, "p_dead");

			SendClientMessage(playerid, col_lblue, "Сотрудник полностью Вас вылечил за 1000$.");
			return 1;
		}
		case d_bank:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					new sql_string[96];
					mysql_format(sql_connection, sql_string, 96, "SELECT * FROM `deposit_boxes` WHERE `db_owner` = '%d' LIMIT 3",
					PlayerInfo[playerid][id]);
					mysql_tquery(sql_connection, sql_string, "deposit_boxes_callback", "i", playerid);
					return 1;
				}
				case 1:
				{
					new sql_string[96];
					mysql_format(sql_connection, sql_string, 96, "SELECT * FROM `deposit_boxes` WHERE `db_owner` = '%d' LIMIT 3",
					PlayerInfo[playerid][id]);
					mysql_tquery(sql_connection, sql_string, "create_deposit_box", "i", playerid);
					return 1;

				}
				case 2:
				{
					show_dialog(playerid, d_bank_phone, DIALOG_STYLE_INPUT, !""scm_dialog"Баланс телефона", !""c_grey"* Деньги положенные на некорректный номер возврату не подлежат.\n\n"c_white"Введите номер телефона, который желаете пополнить:", !"Далее", !"Назад");
				}
				case 3:
				{
					new d_string[148];
					format(d_string, sizeof(d_string), ""c_grey"Ваша задолженность по налогам составляет "c_server"%d$\n\n"c_white"Введите сумму, которую желаете внести в счёт уплаты налогов:",
					PlayerInfo[playerid][tax]);
					show_dialog(playerid, d_bank_bills, DIALOG_STYLE_INPUT, !""scm_dialog"Оплата налогов", d_string, !"Принять", !"Назад");
				}
				case 4:
				{
					SetPVarInt(playerid, "ticket_list_page", 1);
					new query_string[60];
					format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
					mysql_tquery(sql_connection, query_string, "bankticket_list_callback", "i", playerid);
				}
				case 5:
				{
					format(global_string, 720, ""c_grey"Выберите организацию для перевода:"c_white"\n\
					%s\t%d$\n\
					%s\t%d$\n\
					%s\t%d$\n\
					%s\t%d$\n\
					%s\t%d$\n\
					%s\t%d$\n\
					%s\t%d$\n\
					%s\t%d$\n\
					%s\t%d$\n\
					%s\t%d$",
					f_info[3][f_name], f_info[3][f_money],
					f_info[4][f_name], f_info[4][f_money],
					f_info[5][f_name], f_info[5][f_money],
					f_info[6][f_name], f_info[6][f_money],
					f_info[7][f_name], f_info[7][f_money],
					f_info[10][f_name], f_info[10][f_money],
					f_info[14][f_name], f_info[14][f_money],
					f_info[15][f_name], f_info[15][f_money],
					f_info[16][f_name], f_info[16][f_money],
					f_info[26][f_name], f_info[26][f_money]);
					show_dialog(playerid, d_bank_org_transit, DIALOG_STYLE_TABLIST, !""scm_dialog"Перевод средств", global_string, !"Выбрать", !"Назад");
					return 1;
				}
				case 6: show_dialog(playerid, d_family_bank, DIALOG_STYLE_LIST, !""scm_dialog"Семейный счёт", !""c_server"1 | "c_white"Пополнить счёт\n"c_server"2 | "c_white"Снять со счёта", !"Выбрать", !"Назад");
			}

		}
		case d_bank_org_transit:
		{
			if(!response)
			{
				show_dialog(playerid, d_bank, DIALOG_STYLE_LIST, !""scm_dialog"Банк", ""c_server"1 | "c_white"Управление счетами\n"c_server"2 | "c_white"Открыть новый счёт\n"c_server"3 | "c_white"Пополнить баланс телефона\n"c_server"4 | "c_white"Оплата налогов\n"c_server"5 | "c_white"Оплата штрафов\n"c_server"6 | "c_white"Баланс организаций\n"c_server"7 | "c_white"Семейный счёт", !"Выбрать", !"Закрыть");
				return 1;
			}
			new fraction_id = listitem + 2;
			if(listitem > 6)fraction_id = listitem + 7;
			if(listitem > 9)fraction_id = 26;

			new d_string[165];
			format(d_string, sizeof(d_string), ""c_white"Введите сумму, которую желаете перевести на баланс "c_server"%s\n\n"c_grey"* Сумма не должна превышать 10.000.000$ и не может быть менее 1$",
			f_info[fraction_id][f_name]);
			SetPVarInt(playerid, "det_fraction", fraction_id);
			show_dialog(playerid, d_bank_org_transitcount, DIALOG_STYLE_INPUT, ""c_server"Перевод средств", d_string, "Принять", "Назад");
			return 1;
		}
		case d_bank_org_transitcount:
		{
			if(!response)
			{
				format(global_string, 720, ""c_grey"Выберите организацию для перевода:"c_white"\n\
				%s\t%d$\n\
				%s\t%d$\n\
				%s\t%d$\n\
				%s\t%d$\n\
				%s\t%d$\n\
				%s\t%d$\n\
				%s\t%d$\n\
				%s\t%d$\n\
				%s\t%d$\n\
				%s\t%d$",
				f_info[3][f_name], f_info[3][f_money],
				f_info[4][f_name], f_info[4][f_money],
				f_info[5][f_name], f_info[5][f_money],
				f_info[6][f_name], f_info[6][f_money],
				f_info[7][f_name], f_info[7][f_money],
				f_info[10][f_name], f_info[10][f_money],
				f_info[14][f_name], f_info[14][f_money],
				f_info[15][f_name], f_info[15][f_money],
				f_info[16][f_name], f_info[16][f_money],
				f_info[26][f_name], f_info[26][f_money]);
				show_dialog(playerid, d_bank_org_transit, DIALOG_STYLE_TABLIST, ""c_server"Перевод средств", global_string, "Выбрать", "Назад");
				return 1;
			}
			new _money = strval(inputtext);
			if(_money < 1 || _money > 10000000)
			{
				new d_string[165],
					fraction_id = GetPVarInt(playerid, "det_fraction");

				format(d_string, sizeof(d_string), ""c_white"Введите сумму, которую желаете перевести на баланс "c_server"%s\n\n"c_orange_red"* Сумма не должна превышать 10.000.000$ и не может быть менее 1$",
				f_info[fraction_id][f_name]);
				show_dialog(playerid, d_bank_org_transitcount, DIALOG_STYLE_INPUT, ""c_server"Перевод средств", d_string, "Принять", "Назад");
				DeletePVar(playerid, "det_fraction");
				return 1;
			}
			if(PlayerInfo[playerid][money] < _money)
			{
				new d_string[165],
					fraction_id = GetPVarInt(playerid, "det_fraction");

				format(d_string, sizeof(d_string), ""c_white"Введите сумму, которую желаете перевести на баланс "c_server"%s\n\n"c_orange_red"* На балансе мэрии нет таких средств.",
				f_info[fraction_id][f_name]);
				show_dialog(playerid, d_bank_org_transitcount, DIALOG_STYLE_INPUT, ""c_server"Перевод средств", d_string, "Принять", "Назад");
				DeletePVar(playerid, "det_fraction");
				return 1;
			}
			give_money(playerid, -_money);
			insert_money_log(playerid, INVALID_PLAYER_ID, -_money, "перевод в орг");
			new fraction_id = GetPVarInt(playerid, "det_fraction");
			f_info[fraction_id][f_money] += _money;
			new _text_string[128];
			format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы успешно перевели "c_green"%d$"c_white" на баланс "c_green"%s",
			_money, f_info[fraction_id][f_name]);
			SendClientMessage(playerid, col_white, _text_string);

			format(_text_string, sizeof(_text_string), "%s[%d] перевел %d$ на баланс %s",
			PlayerInfo[playerid][name], playerid,  _money, f_info[fraction_id][f_name]);
			foreach(new i: logged_players) if(fraction_id + 1 == PlayerInfo[i][member]) SendClientMessage(i, 0xFF8282AA, _text_string);


			show_dialog(playerid, d_bank, DIALOG_STYLE_LIST, ""scm_dialog"Банк", ""c_server"1 | "c_white"Управление счетами\n"c_server"2 | "c_white"Открыть новый счёт\n"c_server"3 | "c_white"Пополнить баланс телефона\n"c_server"4 | "c_white"Оплата налогов\n"c_server"5 | "c_white"Оплата штрафов\n"c_server"6 | "c_white"Баланс организаций\n"c_server"7 | "c_white"Семейный счёт", "Выбрать", "Закрыть");
			DeletePVar(playerid, "det_fraction");

		}
		case d_bank_control:
		{
			if(!response)
			{
				for(new i = 0; i < 3; i ++)
				{
					new line_string[14];
					format(line_string, 14, "deposit_%d", i -1);
					DeletePVar(playerid, line_string);
					format(line_string, 14, "n_deposit_%d", i -1);
					DeletePVar(playerid, line_string);

				}
				show_dialog(playerid, d_bank, DIALOG_STYLE_LIST, ""scm_dialog"Банк", ""c_server"1 | "c_white"Управление счетами\n"c_server"2 | "c_white"Открыть новый счёт\n"c_server"3 | "c_white"Пополнить баланс телефона\n"c_server"4 | "c_white"Оплата налогов\n"c_server"5 | "c_white"Оплата штрафов\n"c_server"6 | "c_white"Баланс организаций\n"c_server"7 | "c_white"Семейный счёт", "Выбрать", "Закрыть");
				return 1;
			}
			if(listitem == 0)
			{
				show_dialog(playerid, d_main_deposit, DIALOG_STYLE_LIST, ""c_server"Основной счёт", "Информация о счете\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");
				for(new i = 0; i < 3; i ++)
				{
					new line_string[14];
					format(line_string, 14, "deposit_%d", i -1);
					DeletePVar(playerid, line_string);
					format(line_string, 14, "n_deposit_%d", i -1);
					DeletePVar(playerid, line_string);
				}
				return 1;
			}
			new line_string[78],
				_db_name[32];

			format(line_string, 14, "deposit_%d", listitem);
			new deposit_id = GetPVarInt(playerid, line_string);
			format(line_string, 16, "n_deposit_%d", listitem);
			GetPVarString(playerid, line_string, _db_name, 32);

			format(line_string, sizeof(line_string), ""c_server"Подтверждение "c_white"| %s  (№%d)", _db_name, deposit_id);
			show_dialog(playerid, d_deposit_pincode, DIALOG_STYLE_INPUT, line_string, ""c_white"Введите пин-код", "Принять", "Назад");

			for(new i = 0; i < 3; i ++)
			{
				format(line_string, 14, "deposit_%d", i -1);
				DeletePVar(playerid, line_string);
				format(line_string, 16, "n_deposit_%d", i -1);
				DeletePVar(playerid, line_string);
			}
			SetPVarInt(playerid, "_dp_id", deposit_id);
			return 1;
		}
		case d_deposit_pincode:
		{
			if(!response)
			{
				new sql_string[96];
				mysql_format(sql_connection, sql_string, 96, "SELECT * FROM `deposit_boxes` WHERE `db_owner` = '%d' LIMIT 3",
				PlayerInfo[playerid][id]);
				mysql_tquery(sql_connection, sql_string, "deposit_boxes_callback", "i", playerid);
				return 1;
			}
			if(strval(inputtext)> 9999 || strval(inputtext)< 1000)
			{
				new sql_string[96];
				mysql_format(sql_connection, sql_string, 96, "SELECT * FROM `deposit_boxes` WHERE `db_owner` = '%d' LIMIT 3",
				PlayerInfo[playerid][id]);
				mysql_tquery(sql_connection, sql_string, "deposit_boxes_callback", "i", playerid);
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Неверный пин-код.");
				return 1;
			}
			new sql_string[96],
				deposit_id = GetPVarInt(playerid, "_dp_id");

			DeletePVar(playerid, "_dp_id");
			mysql_format(sql_connection, sql_string, 96, "SELECT * FROM `deposit_boxes` WHERE `db_id` = '%d' AND `db_pincode` = '%d' LIMIT 1",
			deposit_id, strval(inputtext));
			mysql_tquery(sql_connection, sql_string, "deposit_pincode_callback", "ii", playerid, deposit_id);
			return 1;
		}
		case d_main_deposit:
		{
			if(!response)
			{
				new sql_string[96];
				mysql_format(sql_connection, sql_string, 96, "SELECT * FROM `deposit_boxes` WHERE `db_owner` = '%d' LIMIT 3",
				PlayerInfo[playerid][id]);
				mysql_tquery(sql_connection, sql_string, "deposit_boxes_callback", "i", playerid);
				return 1;
			}
			switch(listitem)
			{
				case 0:
				{
					new dialog_string[78];
					format(dialog_string, sizeof(dialog_string), ""c_white"Деньги на вашем счету: {4CC238}%d$", PlayerInfo[playerid][bank]);
					show_dialog(playerid, d_deposit_info, DIALOG_STYLE_MSGBOX, ""c_server"Информация о счете", dialog_string, "Назад", "");
				}
				case 1:
				{
					show_dialog(playerid, d_deposit_put, DIALOG_STYLE_INPUT, ""c_server"Положить деньги", ""c_white"Введите сумму, которую хотите положить на ваш счет:", "Принять", "Назад");
				}
				case 2:
				{
					show_dialog(playerid, d_deposit_take, DIALOG_STYLE_INPUT, ""c_server"Снять деньги", ""c_white"Введите сумму, которую хотите снять со счета:", "Принять", "Назад");
				}
			}
		}
		case d_row_deposit:
		{
			if(!response)
			{
				new sql_string[96];
				mysql_format(sql_connection, sql_string, 96, "SELECT * FROM `deposit_boxes` WHERE `db_owner` = '%d' LIMIT 3",
				PlayerInfo[playerid][id]);
				mysql_tquery(sql_connection, sql_string, "deposit_boxes_callback", "i", playerid);

				DeletePVar(playerid, "p_db_id");
				DeletePVar(playerid, "p_db_money");
				DeletePVar(playerid, "p_db_name");

				return 1;
			}
			switch(listitem)
			{
				case 0:
				{
					new dialog_string[78];
					format(dialog_string, sizeof(dialog_string), ""c_white"Деньги на вашем счету: {4CC238}%d$", GetPVarInt(playerid, "p_db_money"));
					show_dialog(playerid, d_deposit_info, DIALOG_STYLE_MSGBOX, ""c_server"Информация о счете", dialog_string, "Принять", "");
				}
				case 1:
				{
					if(PlayerInfo[playerid][level] < 2)
					{
						new header_string[78],
							_db_id = GetPVarInt(playerid, "p_db_id"),
							_db_name[32];

						GetPVarString(playerid, "p_db_name", _db_name, 32);


						format(header_string, sizeof(header_string), ""c_server"%s(№%d)", _db_name, _db_id);
						show_dialog(playerid, d_row_deposit, DIALOG_STYLE_LIST, header_string, "Информация о счете\nПеревод денег на другой счет\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");

						SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Для перевода средств нужно достигнуть 2 уровня. ");
						return 1;
					}
					show_dialog(playerid, d_deposit_transfer_id, DIALOG_STYLE_INPUT, ""c_server"Перевод денег на другой счет", ""c_white"Введите номер счета:", "Принять", "Назад");

				}
				case 2:
				{
					show_dialog(playerid, d_deposit_put, DIALOG_STYLE_INPUT, ""c_server"Положить деньги", ""c_white"Введите сумму, которую хотите положить на ваш счет:", "Принять", "Назад");
				}
				case 3:
				{
					show_dialog(playerid, d_deposit_take, DIALOG_STYLE_INPUT, ""c_server"Снять деньги", ""c_white"Введите сумму, которую хотите снять со счета:", "Принять", "Назад");
				}
				case 4:
				{
					show_dialog(playerid, d_deposit_tophone, DIALOG_STYLE_INPUT, ""c_server"Пополнение баланса телефона", ""c_white"Введите сумму, на которую хотите пополнить баланс:", "Принять", "Назад");
				}
			}
		}
		case d_deposit_info:
		{
			if(GetPVarInt(playerid, "p_db_id") ==  0)
			{
				show_dialog(playerid, d_main_deposit, DIALOG_STYLE_LIST, ""c_server"Основной счёт", "Информация о счете\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");
			}
			else
			{
				new header_string[78],
					_db_id = GetPVarInt(playerid, "p_db_id"),
					_db_name[32];

				GetPVarString(playerid, "p_db_name", _db_name, 32);


				format(header_string, sizeof(header_string), ""c_server"%s(№%d)", _db_name, _db_id);
				show_dialog(playerid, d_row_deposit, DIALOG_STYLE_LIST, header_string, "Информация о счете\nПеревод денег на другой счет\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");

			}
		}
		case d_deposit_put:
		{
			if(!response)
			{
				if(GetPVarInt(playerid, "p_db_id") ==  0)
				{
					show_dialog(playerid, d_main_deposit, DIALOG_STYLE_LIST, ""c_server"Основной счёт", "Информация о счете\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");
				}
				else
				{
					new header_string[78],
						_db_id = GetPVarInt(playerid, "p_db_id"),
						_db_name[32];

					GetPVarString(playerid, "p_db_name", _db_name, 32);


					format(header_string, sizeof(header_string), ""c_server"%s(№%d)", _db_name, _db_id);
					show_dialog(playerid, d_row_deposit, DIALOG_STYLE_LIST, header_string, "Информация о счете\nПеревод денег на другой счет\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");

				}
				return 1;
			}
			if(strval(inputtext)< 1 || strval(inputtext)> 5000000) return show_dialog(playerid, d_deposit_put, DIALOG_STYLE_INPUT, ""c_server"Положить деньги", ""c_white"Введите сумму, которую хотите положить на ваш счет:", "Принять", "Назад"),
													SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Сумма не может быть меньше "c_orange_red"1$"c_grey" или больше "c_orange_red"5.000.000$"c_grey".");


			if(GetPVarInt(playerid, "p_db_id") ==  0)
			{
				if(strval(inputtext)+ PlayerInfo[playerid][bank] > 250000) return show_dialog(playerid, d_deposit_put, DIALOG_STYLE_INPUT, ""c_server"Положить деньги", ""c_white"Введите сумму, которую хотите положить на ваш счет:", "Принять", "Назад"),
																							SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете положить на основной счет более "c_orange_red"250.000$"c_grey".");

				if(strval(inputtext)> PlayerInfo[playerid][money]) return show_dialog(playerid, d_deposit_put, DIALOG_STYLE_INPUT, ""c_server"Положить деньги", ""c_white"Введите сумму, которую хотите положить на ваш счет:", "Принять", "Назад"),
																							SendClientMessage(playerid, col_gray, "У вас нет такого количества денег.");

				give_money(playerid, -strval(inputtext));
				PlayerInfo[playerid][bank] += strval(inputtext);

				update_int_sql(playerid, "u_bank", PlayerInfo[playerid][bank]);

				new dialog_string[68];
				format(dialog_string, sizeof(dialog_string), "Вы положили на основной счет {4CC238}%d$", strval(inputtext));
				SendClientMessage(playerid, 0x14A3FFFF, dialog_string);
				show_dialog(playerid, d_main_deposit, DIALOG_STYLE_LIST, ""c_server"Основной счёт", "Информация о счете\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");

			}
			else
			{
				if(strval(inputtext)> PlayerInfo[playerid][money]) return show_dialog(playerid, d_deposit_put, DIALOG_STYLE_INPUT, ""c_server"Положить деньги", ""c_white"Введите сумму, которую хотите положить на ваш счет:", "Принять", "Назад"),
																			SendClientMessage(playerid, col_gray, "У вас нет такого количества денег.");

				give_money(playerid, -strval(inputtext));
				new dialog_string[118];
				format(dialog_string, 68, "Вы положили на счет {4CC238}%d$", strval(inputtext));
				SendClientMessage(playerid, 0x14A3FFFF, dialog_string);

				SetPVarInt(playerid, "p_db_money", GetPVarInt(playerid, "p_db_money")+ strval(inputtext));


				new _db_id = GetPVarInt(playerid, "p_db_id"),
					_db_name[32];

				format(dialog_string, 118,"UPDATE `deposit_boxes` SET `db_money` = `db_money` + '%d' WHERE `db_id` = '%d' LIMIT 1", strval(inputtext), _db_id);
				mysql_tquery(sql_connection, dialog_string);
				GetPVarString(playerid, "p_db_name", _db_name, 32);

				format(dialog_string, 78, ""c_server"%s(№%d)", _db_name, _db_id);
				show_dialog(playerid, d_row_deposit, DIALOG_STYLE_LIST, dialog_string, "Информация о счете\nПеревод денег на другой счет\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");

			}
		}
		case d_deposit_take:
		{
			if(!response)
			{
				if(GetPVarInt(playerid, "p_db_id") ==  0)
				{
					show_dialog(playerid, d_main_deposit, DIALOG_STYLE_LIST, ""c_server"Основной счёт", "Информация о счете\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");
				}
				else
				{
					new header_string[78],
						_db_id = GetPVarInt(playerid, "p_db_id"),
						_db_name[32];

					GetPVarString(playerid, "p_db_name", _db_name, 32);


					format(header_string, sizeof(header_string), ""c_server"%s(№%d)", _db_name, _db_id);
					show_dialog(playerid, d_row_deposit, DIALOG_STYLE_LIST, header_string, "Информация о счете\nПеревод денег на другой счет\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");

				}
				return 1;
			}
			if(strval(inputtext)< 1 || strval(inputtext)> 5000000) return show_dialog(playerid, d_deposit_take, DIALOG_STYLE_INPUT, ""c_server"Снять деньги", ""c_white"Введите сумму, которую хотите снять со счета:", "Принять", "Назад"),
													SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Сумма не может быть меньше "c_orange_red"1$"c_grey" или больше "c_orange_red"5.000.000$"c_grey".");


			if(GetPVarInt(playerid, "p_db_id") ==  0)
			{
				if(PlayerInfo[playerid][bank] < strval(inputtext)|| strval(inputtext)> 250000) return show_dialog(playerid, d_deposit_take, DIALOG_STYLE_INPUT, ""c_server"Снять деньги", ""c_white"Введите сумму, которую хотите снять со счета:", "Принять", "Назад"),
																					SendClientMessage(playerid, col_gray, "На вашем счету недостаточно средств.");

				give_money(playerid, strval(inputtext));
				PlayerInfo[playerid][bank] -= strval(inputtext);
				update_int_sql(playerid, "u_bank", PlayerInfo[playerid][bank]);

				new dialog_string[68];
				format(dialog_string, sizeof(dialog_string), "Вы сняли с основного счета {4CC238}%d$", strval(inputtext));
				SendClientMessage(playerid, 0x14A3FFFF, dialog_string);
				show_dialog(playerid, d_main_deposit, DIALOG_STYLE_LIST, ""c_server"Основной счёт", "Информация о счете\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");

			}
			else
			{
				new _db_money = GetPVarInt(playerid, "p_db_money");
				if(_db_money < strval(inputtext)) return show_dialog(playerid, d_deposit_take, DIALOG_STYLE_INPUT, ""c_server"Снять деньги", ""c_white"Введите сумму, которую хотите снять со счета:", "Принять", "Назад"),
																					SendClientMessage(playerid, col_gray, "На вашем счету недостаточно средств.");


				give_money(playerid, strval(inputtext));
				new dialog_string[118];
				format(dialog_string, 68, "Вы сняли со счета {4CC238}%d$", strval(inputtext));
				SendClientMessage(playerid, 0x14A3FFFF, dialog_string);

				SetPVarInt(playerid, "p_db_money", _db_money -strval(inputtext));


				new _db_id = GetPVarInt(playerid, "p_db_id"),
					_db_name[32];

				GetPVarString(playerid, "p_db_name", _db_name, 32);

				format(dialog_string, 118,"UPDATE `deposit_boxes` SET `db_money` = `db_money` -'%d' WHERE `db_id` = '%d' LIMIT 1", strval(inputtext), _db_id);
				mysql_tquery(sql_connection, dialog_string);

				format(dialog_string, 78, ""c_server"%s(№%d)", _db_name, _db_id);
				show_dialog(playerid, d_row_deposit, DIALOG_STYLE_LIST, dialog_string, "Информация о счете\nПеревод денег на другой счет\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");

			}
		}
		case d_deposit_tophone:
		{
			if(!response)
			{
				if(GetPVarInt(playerid, "p_db_id") ==  0)
				{
					show_dialog(playerid, d_main_deposit, DIALOG_STYLE_LIST, ""c_server"Основной счёт", "Информация о счете\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");
				}
				else
				{
					new header_string[78],
						_db_id = GetPVarInt(playerid, "p_db_id"),
						_db_name[32];

					GetPVarString(playerid, "p_db_name", _db_name, 32);


					format(header_string, sizeof(header_string), ""c_server"%s(№%d)", _db_name, _db_id);
					show_dialog(playerid, d_row_deposit, DIALOG_STYLE_LIST, header_string, "Информация о счете\nПеревод денег на другой счет\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");

				}
				return 1;
			}
			if(strval(inputtext)< 1 || strval(inputtext)> 500000) return show_dialog(playerid, d_deposit_tophone, DIALOG_STYLE_INPUT, ""c_server"Пополнение баланса телефона", ""c_white"Введите сумму, на которую хотите пополнить баланс:", "Принять", "Назад"),
													SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Сумма не может быть меньше "c_orange_red"1$"c_grey" или больше "c_orange_red"5.000.000$"c_grey".");

			if(GetPVarInt(playerid, "p_db_id") ==  0)
			{
				if(PlayerInfo[playerid][bank] < strval(inputtext)) return show_dialog(playerid, d_deposit_tophone, DIALOG_STYLE_INPUT, ""c_server"Пополнение баланса телефона", ""c_white"Введите сумму, на которую хотите пополнить баланс:", "Принять", "Назад"),
																	SendClientMessage(playerid, col_gray, "На вашем счету недостаточно средств.");

				show_dialog(playerid, d_deposit_tophone, DIALOG_STYLE_INPUT, ""c_server"Пополнение баланса телефона", ""c_white"Введите сумму, на которую хотите пополнить баланс:", "Принять", "Назад");

				PlayerInfo[playerid][bank] -= strval(inputtext);
				update_int_sql(playerid, "u_bank", PlayerInfo[playerid][bank]);

				PlayerInfo[playerid][phone_balance] += strval(inputtext);

				new dialog_string[128];
				format(dialog_string, sizeof(dialog_string), "SMS: Ваш баланс пополнен на сумму %d$. Баланс: %d$ | Отправитель: SA BANK", strval(inputtext), PlayerInfo[playerid][phone_balance]);
				SendClientMessage(playerid,  col_yellow, dialog_string);
				show_dialog(playerid, d_main_deposit, DIALOG_STYLE_LIST, ""c_server"Основной счёт", "Информация о счете\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");
			}
			else
			{
				new _db_money = GetPVarInt(playerid, "p_db_money");
				if(_db_money < strval(inputtext)) return show_dialog(playerid, d_deposit_tophone, DIALOG_STYLE_INPUT, ""c_server"Пополнение баланса телефона", ""c_white"Введите сумму, на которую хотите пополнить баланс:", "Принять", "Назад"),
																					SendClientMessage(playerid, col_gray, "На вашем счету недостаточно средств.");


				SetPVarInt(playerid, "p_db_money", _db_money -strval(inputtext));

				PlayerInfo[playerid][phone_balance] += strval(inputtext);

				new dialog_string[128];
				format(dialog_string, sizeof(dialog_string), "SMS: Ваш баланс пополнен на сумму %d$. Баланс: %d$ | Отправитель: SA BANK", strval(inputtext), PlayerInfo[playerid][phone_balance]);
				SendClientMessage(playerid,  col_yellow, dialog_string);

				new _db_id = GetPVarInt(playerid, "p_db_id"),
					_db_name[32];

				GetPVarString(playerid, "p_db_name", _db_name, 32);

				format(dialog_string, 118,"UPDATE `deposit_boxes` SET `db_money` = `db_money` -'%d' WHERE `db_id` = '%d' LIMIT 1", strval(inputtext), _db_id);
				mysql_tquery(sql_connection, dialog_string);

				format(dialog_string, 78, ""c_server"%s(№%d)", _db_name, _db_id);
				show_dialog(playerid, d_row_deposit, DIALOG_STYLE_LIST, dialog_string, "Информация о счете\nПеревод денег на другой счет\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");
			}
		}
		case d_deposit_transfer_id:
		{
			if(!response)
			{
				new header_string[78],
					_db_id = GetPVarInt(playerid, "p_db_id"),
					_db_name[32];

				GetPVarString(playerid, "p_db_name", _db_name, 32);


				format(header_string, sizeof(header_string), ""c_server"%s(№%d)", _db_name, _db_id);
				show_dialog(playerid, d_row_deposit, DIALOG_STYLE_LIST, header_string, "Информация о счете\nПеревод денег на другой счет\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");

				return 1;
			}

			if(strval(inputtext)< 1 || strval(inputtext)> 1000000) return show_dialog(playerid, d_deposit_transfer_id, DIALOG_STYLE_INPUT, ""c_server"Перевод денег на другой счет", ""c_white"Введите номер счета:", "Принять", "Назад"),
																					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Некорректный номер счёта.");
			if(GetPVarInt(playerid, "p_db_id") ==  strval(inputtext)) return show_dialog(playerid, d_deposit_transfer_id, DIALOG_STYLE_INPUT, ""c_server"Перевод денег на другой счет", ""c_orange_red"* Вы не можете переводить деньги на этот же номер счетаn\n\n"c_white"Введите номер счета:", "Принять", "Назад");



			new sql_string[96];
			mysql_format(sql_connection, sql_string, 96, "SELECT * FROM `deposit_boxes` WHERE `db_id` = '%d' LIMIT 1",
			strval(inputtext));
			mysql_tquery(sql_connection, sql_string, "check_deposit_box", "ii", playerid, strval(inputtext));

		}
		case d_deposit_transfer_money:
		{
			if(!response )
			{
				DeletePVar(playerid, "todb_id");
				show_dialog(playerid, d_deposit_transfer_id, DIALOG_STYLE_INPUT, ""c_server"Перевод денег на другой счет", ""c_white"Введите номер счета:", "Принять", "Назад");
				return 1;
			}
			new _todb_id = GetPVarInt(playerid, "todb_id"),
				_db_id = GetPVarInt(playerid, "p_db_id");
			if(strval(inputtext)< 1 || strval(inputtext)> 5000000)
			{
				new dialog_string[78];
				format(dialog_string, sizeof(dialog_string), ""c_white"Сумма, которую хотите перевести на счет{EDF0B9} №%d", _db_id);
				show_dialog(playerid, d_deposit_transfer_money, DIALOG_STYLE_INPUT, ""c_server"Перевод денег на другой счет", dialog_string, "Принять", "Назад");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Сумма перевода не может быть меньше "c_orange_red"0$"c_grey" или больше "c_orange_red"5.000.000$");
				return 1;
			}
			new _db_money = GetPVarInt(playerid, "p_db_money");

			if(_db_money < strval(inputtext))
			{
				new dialog_string[78];
				format(dialog_string, sizeof(dialog_string), ""c_white"Введите количество денег, которое хотите перевести на №%d", _db_id);
				show_dialog(playerid, d_deposit_transfer_money, DIALOG_STYLE_INPUT, ""c_server"Перевод денег на другой счет", dialog_string, "Принять", "Назад");
				SendClientMessage(playerid, col_gray, "На вашем счету недостаточно средств.");
				return 1;
			}

			new dialog_string[144];

			format(dialog_string, 124,"UPDATE `deposit_boxes` SET `db_money` = `db_money` -'%d' WHERE `db_id` = '%d' LIMIT 1", strval(inputtext), _db_id);
			mysql_tquery(sql_connection, dialog_string);

			format(dialog_string, 124,"UPDATE `deposit_boxes` SET `db_money` = `db_money` + '%d' WHERE `db_id` = '%d' LIMIT 1", strval(inputtext), _todb_id);
			mysql_tquery(sql_connection, dialog_string);

			format(dialog_string, 144, ""c_green"* "c_white"Вы успешно перевели "c_green"%d$ "c_white"на счет "c_green"№%d", strval(inputtext), _todb_id);
			SendClientMessage(playerid, col_white, dialog_string);

			format(dialog_string, sizeof(dialog_string), "INSERT INTO `deposit_logs` (`dl_from`,`dl_to`,`dl_date`,`dl_money`) VALUES ('%d','%d',NOW(),'%d')",
			_db_id, _todb_id, strval(inputtext));
			mysql_tquery(sql_connection, dialog_string);


			SetPVarInt(playerid, "p_db_money", _db_money -strval(inputtext));


			foreach(new i: logged_players)
			{
				if(GetPVarInt(i, "p_db_id")!= _todb_id) continue;
				SetPVarInt(i, "p_db_money", GetPVarInt(i, "p_db_money")+ strval(inputtext));
				break;
			}
			new	_db_name[32];

			GetPVarString(playerid, "p_db_name", _db_name, 32);
			DeletePVar(playerid, "todb_id");

			format(dialog_string, 78, ""c_server"%s(№%d)", _db_name, _db_id);
			show_dialog(playerid, d_row_deposit, DIALOG_STYLE_LIST, dialog_string, "Информация о счете\nПеревод денег на другой счет\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");

		}
		case d_deposit_create_name:
		{
			if(!response) return show_dialog(playerid, d_bank, DIALOG_STYLE_LIST, ""scm_dialog"Банк", ""c_server"1 | "c_white"Управление счетами\n"c_server"2 | "c_white"Открыть новый счёт\n"c_server"3 | "c_white"Пополнить баланс телефона\n"c_server"4 | "c_white"Оплата налогов\n"c_server"5 | "c_white"Оплата штрафов\n"c_server"6 | "c_white"Баланс организаций\n"c_server"7 | "c_white"Семейный счёт", "Выбрать", "Закрыть");

			if(is_text_invalid(inputtext)) return show_dialog(playerid, d_deposit_create_name, DIALOG_STYLE_INPUT, ""c_server"Открытие счета", ""c_white"Введите название вашего будущего счета:", "Принять", "Назад"),
													SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Недопустимые символы в названии счета.");

			if(strlen(inputtext)>= 32) return show_dialog(playerid, d_deposit_create_name, DIALOG_STYLE_INPUT, ""c_server"Открытие счета", ""c_white"Введите название вашего будущего счета:", "Принять", "Назад"),
													SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Название не может мыть длинее "c_orange_red"32"c_grey" символов.");

			SetPVarString(playerid, "deposit_name",(inputtext));
			show_dialog(playerid, d_deposit_create_pass, DIALOG_STYLE_INPUT, ""c_server"Открытие счета", ""c_white"Введите пин-код вашего счета:", "Принять", "Назад");

		}
		case d_deposit_create_pass:
		{
			if(!response) return show_dialog(playerid, d_deposit_create_name, DIALOG_STYLE_INPUT, ""c_server"Открытие счета", ""c_white"Введите название вашего будущего счета:", "Принять", "Назад");
 			if(strval(inputtext)> 9999 || strval(inputtext)< 1000)
			{
				show_dialog(playerid, d_deposit_create_pass, DIALOG_STYLE_INPUT, ""c_server"Открытие счета", ""c_white"Введите пин-код вашего счета:", "Принять", "Назад"),
													SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Пинкод не может начинаться с 0 и не может быть длинее 4 цифр.");

				return 1;
			}
			new _db_name[32],
				query_string[138];

			GetPVarString(playerid, "deposit_name", _db_name, 32);

			format(query_string, sizeof query_string, "INSERT INTO `deposit_boxes`(`db_name`,`db_owner`,`db_pincode`) VALUES ('%s','%i','%i')",
			_db_name, PlayerInfo[playerid][id], strval(inputtext));
			mysql_tquery(sql_connection, query_string, "", "");

			format(query_string, 144, ""c_green"* "c_white"Пин-код от вашего счета в банке "c_green"%d"c_white". Пожалуйста, запишите его где-нибудь, чтобы не потерять.", strval(inputtext));
			SendClientMessage(playerid, col_white, query_string);

			DeletePVar(playerid, "deposit_name");
			show_dialog(playerid, d_bank, DIALOG_STYLE_LIST, ""scm_dialog"Банк", ""c_server"1 | "c_white"Управление счетами\n"c_server"2 | "c_white"Открыть новый счёт\n"c_server"3 | "c_white"Пополнить баланс телефона\n"c_server"4 | "c_white"Оплата налогов\n"c_server"5 | "c_white"Оплата штрафов\n"c_server"6 | "c_white"Баланс организаций\n"c_server"7 | "c_white"Семейный счёт", "Выбрать", "Закрыть");
		}
		case d_pharmshop:
		{
			if(!response) return 1;
			new b = GetPVarInt(playerid, "p_biz_id")-1;
			if(PlayerInfo[playerid][money] < b_pharm_price[listitem] + floatround(b_pharm_price[listitem]*(float(b_info[b][b_cost]) / 100)))
			{
				ShowPharmDialog(playerid);
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно денег.");
			}
			if(b_info[b][b_product] < b_pharm_product[listitem])
			{
				ShowPharmDialog(playerid);
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"На складе недостаточно продуктов.");
			}
			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][aidkit] >= 10) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете унести более 10 аптечек."), ShowPharmDialog(playerid);
					PlayerInfo[playerid][aidkit] += 1;
					update_int_sql(playerid, "u_aidkit", PlayerInfo[playerid][aidkit]);
					new query_string[138];
					format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы приобрели аптечку | "c_green"%d/10"c_white". Введите "c_green"/healme"c_white", чтобы использовать.", PlayerInfo[playerid][aidkit]);
					SendClientMessage(playerid, col_white, query_string);
				}
				case 1:
				{
					if(PlayerInfo[playerid][bandage] >= 10) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете унести более 10 бинтов."), ShowPharmDialog(playerid);
					PlayerInfo[playerid][bandage] += 1;
					update_int_sql(playerid, "u_bandage", PlayerInfo[playerid][bandage]);
					new query_string[138];
					format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы приобрели бинты | "c_green"%d/10"c_white".", PlayerInfo[playerid][bandage]);
					SendClientMessage(playerid, col_white, query_string);
				}
				case 2:
				{
					if(PlayerInfo[playerid][schiene] >= 10) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете унести более 10 шин."), ShowPharmDialog(playerid);
					PlayerInfo[playerid][schiene] += 1;
					update_int_sql(playerid, "u_schiene", PlayerInfo[playerid][schiene]);
					new query_string[138];
					format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы приобрели шину | "c_green"%d/10"c_white".", PlayerInfo[playerid][schiene]);
					SendClientMessage(playerid, col_white, query_string);
				}
				case 3:
				{
					if(PlayerInfo[playerid][aspirin] >= 10) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете унести более 10 пачек аспирина."), ShowPharmDialog(playerid);
					PlayerInfo[playerid][aspirin] += 1;
					update_int_sql(playerid, "u_aspirin", PlayerInfo[playerid][aspirin]);
					new query_string[138];
					format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы приобрели аспирин | "c_green"%d/10"c_white".", PlayerInfo[playerid][aspirin]);
					SendClientMessage(playerid, col_white, query_string);
				}
				case 4:
				{
					if(PlayerInfo[playerid][morphine] >= 10) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете унести более 10 пачек морфина."), ShowPharmDialog(playerid);
					PlayerInfo[playerid][morphine] += 1;
					update_int_sql(playerid, "u_morphine", PlayerInfo[playerid][morphine]);
					new query_string[138];
					format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы приобрели морфин | "c_green"%d/10"c_white".", PlayerInfo[playerid][morphine]);
					SendClientMessage(playerid, col_white, query_string);
				}
				case 5:
				{
					if(PlayerInfo[playerid][adrenalin] >= 10) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете унести более 10 инъекций адреналина."), ShowPharmDialog(playerid);
					PlayerInfo[playerid][adrenalin] += 1;
					update_int_sql(playerid, "u_adrenalin", PlayerInfo[playerid][adrenalin]);
					new query_string[138];
					format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы приобрели адреналин | "c_green"%d/10"c_white".", PlayerInfo[playerid][adrenalin]);
					SendClientMessage(playerid, col_white, query_string);
				}
			}
			b_info[b][b_product] -= b_pharm_product[listitem];
			b_info[b][b_money] += b_pharm_price[listitem] + floatround(b_pharm_price[listitem]*(float(b_info[b][b_cost]) / 100));
			b_info[b][b_cash_today] += b_pharm_price[listitem] + floatround(b_pharm_price[listitem]*(float(b_info[b][b_cost]) / 100));

			ShowPharmDialog(playerid);
			give_money(playerid, -b_pharm_price[listitem] -floatround(b_pharm_price[listitem]*(float(b_info[b][b_cost]) / 100)));
			insert_money_log(playerid, INVALID_PLAYER_ID, -b_pharm_price[listitem] -floatround(b_pharm_price[listitem]*(float(b_info[b][b_cost]) / 100)), "Закуп аптеки");
		}
		case d_shop:
		{
			if(!response) return 1;
			new b = GetPVarInt(playerid, "p_biz_id")-1;
			if(PlayerInfo[playerid][money] < b_shop_price[listitem] + floatround(b_shop_price[listitem]*(float(b_info[b][b_cost]) / 100)))
			{
				ShowShopDialog(playerid);
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно денег.");
			}
			if(b_info[b][b_product] < b_shop_product[listitem])
			{
				ShowShopDialog(playerid);
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"На складе недостаточно продуктов.");
			}
			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][direct] == 1) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас уже есть справочник."), ShowShopDialog(playerid);
					PlayerInfo[playerid][direct] = 1;
					update_int_sql(playerid, "u_direct", PlayerInfo[playerid][direct]);
					if(quest_status[playerid][5] == 1)
					{
						quest_status[playerid][5] = 2;
						SendClientMessage(playerid, col_succes, "Задание успешно выполнено. Отправляйтесь к одному из помощников, чтобы получить своё вознаграждение.");
						update_quest_data(playerid);
					}
					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы приобрели справочник. Используйте "c_green"/dir"c_white", чтобы открыть справочник.");
				}
				case 1:
				{
					if(PlayerInfo[playerid][aidkit] >= 10) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете унести более 10 аптечек."), ShowShopDialog(playerid);
					PlayerInfo[playerid][aidkit] += 1;
					update_int_sql(playerid, "u_aidkit", PlayerInfo[playerid][aidkit]);
					new query_string[138];
					format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы приобрели аптечку | "c_green"%d/10"c_white". Введите "c_green"/healme"c_white", чтобы использовать.", PlayerInfo[playerid][aidkit]);
					SendClientMessage(playerid, col_white, query_string);
				}
				case 2:
				{
					if(PlayerInfo[playerid][repairkit] >= 5) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете унести более 5 наборов для ремонта."), ShowShopDialog(playerid);
					PlayerInfo[playerid][repairkit] += 1;
					update_int_sql(playerid, "u_repairkit", PlayerInfo[playerid][repairkit]);
					new query_string[138];
					format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы приобрели набор для ремонта | "c_green"%d/5"c_white". Введите "c_green"/repairkit"c_white", чтобы использовать.", PlayerInfo[playerid][repairkit]);
					SendClientMessage(playerid, col_white, query_string);
				}
				case 3:
				{
					if(PlayerInfo[playerid][gps_tracker] >= 5) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете унести более 5 GPS-трекеров."), ShowShopDialog(playerid);
					PlayerInfo[playerid][gps_tracker] += 1;
					update_int_sql(playerid, "u_gps_tracker", PlayerInfo[playerid][gps_tracker]);
					new query_string[138];
					format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы приобрели GPS-трекер | "c_green"%d/5"c_white". Введите "c_green"/setgps"c_white", чтобы установить в транспорт.", PlayerInfo[playerid][gps_tracker]);
					SendClientMessage(playerid, col_white, query_string);
				}
				case 4:
				{
					if(PlayerInfo[playerid][mask] >= 3) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете унести более 3 масок."), ShowShopDialog(playerid);
					PlayerInfo[playerid][mask] += 1;
					update_int_sql(playerid, "u_mask", PlayerInfo[playerid][mask]);
					new query_string[138];
					format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы приобрели маску | "c_green"%d/3"c_white". Введите "c_green"/mask"c_white", чтобы надеть маску.", PlayerInfo[playerid][mask]);
					SendClientMessage(playerid, col_white, query_string);
				}
				case 5:
				{
					if(PlayerInfo[playerid][rope] >= 3) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете унести более 3 верёвок."), ShowShopDialog(playerid);
					PlayerInfo[playerid][rope] += 1;
					update_int_sql(playerid, "u_rope", PlayerInfo[playerid][rope]);
					new query_string[138];
					format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы приобрели верёвку | "c_green"%d/3"c_white". Введите "c_green"/tie"c_white", чтобы связать кого-либо.", PlayerInfo[playerid][rope]);
					SendClientMessage(playerid, col_white, query_string);
				}
				case 6:
				{
					give_weapon(playerid, 14, 1);
					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы приобрели букет цветов.");
				}
				case 7:
				{
					give_weapon(playerid, 43, 20);
					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы приобрели фотоаппарат.");
				}
			}
			b_info[b][b_product] -= b_shop_product[listitem];
			b_info[b][b_money] += b_shop_price[listitem] + floatround(b_shop_price[listitem]*(float(b_info[b][b_cost]) / 100));
			b_info[b][b_cash_today] += b_shop_price[listitem] + floatround(b_shop_price[listitem]*(float(b_info[b][b_cost]) / 100));

			ShowShopDialog(playerid);
			give_money(playerid, -b_shop_price[listitem] -floatround(b_shop_price[listitem]*(float(b_info[b][b_cost]) / 100)));
			insert_money_log(playerid, INVALID_PLAYER_ID, -b_shop_price[listitem] -floatround(b_shop_price[listitem]*(float(b_info[b][b_cost]) / 100)), "Закуп 24/7");
		}
		case d_bar:
		{
			if(!response) return 1;
			new b = GetPVarInt(playerid, "p_biz_id")-1;
			if(PlayerInfo[playerid][money] < b_bar_price[listitem] + floatround(b_bar_price[listitem]*(float(b_info[b][b_cost]) / 100)))
			{
				ShowBarDialog(playerid);
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно денег.");
			}
			if(b_info[b][b_product] < b_bar_product[listitem])
			{
				ShowBarDialog(playerid);
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"На складе недостаточно продуктов.");
			}
			switch(listitem)
			{
				case 3..7:
				{
					if(GetPlayerDrunkLevel(playerid)< 25000)SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid)+ 5000);
				}
			}
			if(PlayerInfo[playerid][hunger] + b_bar_product[listitem] -15 > 100)PlayerInfo[playerid][hunger] = 100;
			else PlayerInfo[playerid][hunger] += b_bar_product[listitem] -15;

			b_info[b][b_product] -= b_bar_product[listitem];
			b_info[b][b_money] += b_bar_price[listitem] + floatround(b_bar_price[listitem]*(float(b_info[b][b_cost]) / 100));
			b_info[b][b_cash_today] += b_bar_price[listitem] + floatround(b_bar_price[listitem]*(float(b_info[b][b_cost]) / 100));

			ShowBarDialog(playerid);
			give_money(playerid, -b_bar_price[listitem] -floatround(b_bar_price[listitem]*(float(b_info[b][b_cost]) / 100)));
			insert_money_log(playerid, INVALID_PLAYER_ID, -b_bar_price[listitem] -floatround(b_bar_price[listitem]*(float(b_info[b][b_cost]) / 100)), "Закуп 24/7");
			ApplyAnimation(playerid, "BAR", "dnk_stndF_loop", 4.1, 0, 0, 0, 0, 0, 1);
		}
		case d_cafe:
		{
			if(!response) return 1;
			new b = GetPVarInt(playerid, "p_biz_id")-1;
			if(PlayerInfo[playerid][money] < b_cafe_price[listitem] + floatround(b_cafe_price[listitem]*(float(b_info[b][b_cost]) / 100)))
			{
				ShowCafeDialog(playerid);
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно денег.");
			}
			if(b_info[b][b_product] < b_cafe_product[listitem])
			{
				ShowCafeDialog(playerid);
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"На складе недостаточно продуктов.");
			}

			if(PlayerInfo[playerid][hunger] + b_cafe_product[listitem] > 100)PlayerInfo[playerid][hunger] = 100;
			else PlayerInfo[playerid][hunger] += b_cafe_product[listitem];

			b_info[b][b_product] -= b_cafe_product[listitem];
			b_info[b][b_money] += b_cafe_price[listitem] + floatround(b_cafe_price[listitem]*(float(b_info[b][b_cost]) / 100));
			b_info[b][b_cash_today] += b_cafe_price[listitem] + floatround(b_cafe_price[listitem]*(float(b_info[b][b_cost]) / 100));

			ShowCafeDialog(playerid);
			give_money(playerid, -b_cafe_price[listitem] -floatround(b_cafe_price[listitem]*(float(b_info[b][b_cost]) / 100)));
			insert_money_log(playerid, INVALID_PLAYER_ID, -b_cafe_price[listitem] -floatround(b_cafe_price[listitem]*(float(b_info[b][b_cost]) / 100)), "Закуп 24/7");
			ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.0, 0, 0, 0, 0, 0, 1);
			me_action(playerid, "съел(-а) набор еды.");
		}
 		case d_shop_sim:
		{
			if(!response)
			{
				ShowElectronicDialog(playerid);
				return 1;
			}
			new pl_number = strval(inputtext);
			if(!pl_number) return show_dialog(playerid, d_shop_sim, DIALOG_STYLE_INPUT, !""scm_dialog"Покупка SIM-карты", !""c_grey"Данный номер невозможно зарегистрировать!\n\n"c_white"Введите 6-значный номер, который желаете приобрести:", !"Купить", !"Назад");
			if(100000 > pl_number || pl_number > 999999) return show_dialog(playerid, d_shop_sim, DIALOG_STYLE_INPUT, !""scm_dialog"Покупка SIM-карты", !""c_grey"Данный номер невозможно зарегистрировать!\n\n"c_white"Введите 6-значный номер, который желаете приобрести:", !"Купить", !"Назад");

			new query_string[72];
			mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_number` FROM `users` WHERE `u_number` = '%d'", strval(inputtext));
			mysql_tquery(sql_connection, query_string, "shop_sim_callback", "ii", playerid, pl_number);

		}
		case d_job_miner:
		{
			if(!response) return 1;

			if(PlayerInfo[playerid][timejob] != job_miner)
			{
				PlayerInfo[playerid][timejob] = job_miner;
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно устроились на работу шахтера.");
				SendClientMessage(playerid, col_gray, "* Ваша задача добывать железную руду и отвозить её на переплавку.");


				SetPlayerSkin(playerid, 16);

				new _random = random(11);
				SetPlayerCheckpoint(playerid, miner_cp[_random][0], miner_cp[_random][1], miner_cp[_random][2], 2.5);
				SetPVarInt(playerid, "miner_cp", _random);
				job_ac_tick[playerid] = GetTickCount();
				SetPlayerAttachedObject(playerid, 1, 18634, 14, 0.333391, 0.000000, 0.042249, 358.219909, 268.014739, 170.032974, 2.003867, 1.764811, 1.579773);

				show_payment(playerid);
			}
			else
			{
				if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]), SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
					else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
				new _text_string[106];
				format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы завершили свой рабочий день и заработали -"c_green" %i$", PlayerInfo[playerid][salary]);
				SendClientMessage(playerid, col_white, _text_string);

				give_money(playerid, PlayerInfo[playerid][salary]);
				PlayerInfo[playerid][salary] = 0;
				PlayerInfo[playerid][timejob] = job_none;
				DeletePVar(playerid, "mining_ex");
				DeletePVar(playerid, "miner_cp");

				DisablePlayerCheckpoint(playerid);

				hide_payment(playerid);


				if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);

			}
		}
		case d_job_factory:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][timejob] != job_factory)
			{
				PlayerInfo[playerid][timejob] = job_factory;
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно трудоустроились на завод.");
				SendClientMessage(playerid, col_gray, "* Возьмите заготовки и отправляйтесь к столам для сборки детали.");
				SetPlayerSkin(playerid, 27);

				show_payment(playerid);
			}
			else
			{
				if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]), SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
				else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
				new _text_string[106];
				format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы завершили свой рабочий день и заработали -"c_green" %i$", PlayerInfo[playerid][salary]);
				SendClientMessage(playerid, col_white, _text_string);

				give_money(playerid, PlayerInfo[playerid][salary]);
				PlayerInfo[playerid][salary] = 0;
				PlayerInfo[playerid][timejob] = job_none;
				DeletePVar(playerid, "have_factory_box");

				hide_payment(playerid);

				RemovePlayerAttachedObject(playerid, 0);
				DisablePlayerCheckpoint(playerid);


			}
		}
		case d_job_sawmil:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][timejob] != job_sawmil)
			{
				PlayerInfo[playerid][timejob] = job_sawmil;
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно устроились работать на лесопилку.");
				SendClientMessage(playerid, col_gray, ""c_grey"* Ваша задача распиливать деревья и относить заготовки на склад.");
				SetPlayerSkin(playerid, 27);
				give_weapon(playerid, 9, 1);

				SetPVarInt(playerid, #Derevo, tree_count);
				tree_count++;
				SetPlayerCheckpoint(playerid,  tree_positions [GetPVarInt(playerid, #Derevo)][0],tree_positions[GetPVarInt(playerid, #Derevo)][1],tree_positions[GetPVarInt(playerid, #Derevo)][2], 3.0);

				show_payment(playerid);

			}
			else
			{
				if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]), SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
				else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
				new _text_string[106];
				format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы завершили свой рабочий день и заработали -"c_green" %i$", PlayerInfo[playerid][salary]);
				SendClientMessage(playerid, col_white, _text_string);
				give_money(playerid, PlayerInfo[playerid][salary]);
				PlayerInfo[playerid][salary] = 0;
				PlayerInfo[playerid][timejob] = job_none;
				if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);

				hide_payment(playerid);


				RemovePlayerAttachedObject(playerid, 0);
				DisablePlayerCheckpoint(playerid);
				give_weapon(playerid, 9, -1);
				DeletePVar(playerid, #LessProc);
				DeletePVar(playerid, #LessStatus);
				RemoveWeaponFromSlot(playerid, get_weapon_slot(9));
			}
		}
		case d_ad_list:
		{
			if(!response) return 1;
			if(!ad_info[listitem][ad_busy] || ad_info[listitem][ad_checked] || ad_info[listitem][ad_checking]) return show_ad_list(playerid);
			ad_info[listitem][ad_checking] = true;
			SetPVarInt(playerid,"ad_listitem", listitem + 1);
			new header_string[MAX_PLAYER_NAME + 9];
			strcat(header_string, ""c_server"");
			strcat(header_string, ad_info[listitem][ad_sender]);
			new dialog_string[90 + 104];
			format(dialog_string, sizeof(dialog_string),"{cccc99}%s\n"c_white"1. Отправить\n2. Редактировать\n3. Удалить\n4. Отправить администрации",ad_info[listitem][ad_text]);
			show_dialog(playerid, d_ad_edit, DIALOG_STYLE_LIST, header_string, dialog_string, "Выбрать", "Назад");
		}
		case d_ad_edit:
		{
			new _ad_id = GetPVarInt(playerid, "ad_listitem")-1;
			if(!response)
			{
				ad_info[_ad_id][ad_checking] = false;
				DeletePVar(playerid, "ad_listitem");
				return show_ad_list(playerid);
			}
			switch(listitem)
			{
				case 1:
				{
					ad_info[_ad_id][ad_time] = 15;
					format(ad_info[_ad_id][ad_checker],MAX_PLAYER_NAME,"%s", PlayerInfo[playerid][name]);
					ad_info[_ad_id][ad_checker_id] = playerid;
					ad_info[_ad_id][ad_checking] = false;
					ad_info[_ad_id][ad_checked] = true;
					DeletePVar(playerid, "ad_listitem");

					f_info[PlayerInfo[playerid][member] -1][f_money] += ad_price / 2;
					PlayerInfo[playerid][salary] += ad_price / 2;

					new query_string[86];
					format(query_string, 86, "UPDATE `fractions` SET `f_money` = '%d' WHERE `f_id` = '%d' LIMIT 1",
					f_info[PlayerInfo[playerid][member] -1][f_money], PlayerInfo[playerid][member]);
					mysql_tquery(sql_connection, query_string, "", "");

					show_ad_list(playerid);
				}
				case 2:
				{
					if(PlayerInfo[playerid][rank] < 2) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Доступно со 2 ранга.");

					new header_string[MAX_PLAYER_NAME + 9],
						inputtext_string[100 + 9];
					strcat(header_string, ""c_server"");
					strcat(header_string, ad_info[_ad_id][ad_sender]);
					strcat(inputtext_string, ""c_white"");
					strcat(inputtext_string, ad_info[_ad_id][ad_text]);


					new dialog_string[90 + 104];
					format(dialog_string, sizeof(dialog_string),"{cccc99}%s\n"c_white"1. Отправить\n2. Редактировать\n3. Удалить\n4. Отправить администрации",ad_info[listitem][ad_text]);
					show_dialog(playerid, d_ad_edit, DIALOG_STYLE_LIST, header_string, dialog_string, "Выбрать", "Назад");


					return show_dialog(playerid, d_ad_redit, DIALOG_STYLE_INPUT, header_string, inputtext_string, "Принять", "Отмена");
				}
				case 3:
				{
					for(new i = _ad_id; i < MAX_ADVERTS; i ++)
					{

						if(_ad_id + 1 <= 29 && ! ad_info[_ad_id + 1][ad_busy])
						{
							strdel(ad_info[_ad_id][ad_sender], 0, 24);
							ad_info[_ad_id][ad_phone_number] = 0;
							strdel(ad_info[_ad_id][ad_text], 0, 100);
							strdel(ad_info[_ad_id][ad_checker], 0, 24);
							ad_info[_ad_id][ad_checker_id] = -1;
							ad_info[_ad_id][ad_id] = -1;
							ad_info[_ad_id][ad_busy] = false;
							ad_info[_ad_id][ad_checked] = false;
							ad_info[_ad_id][ad_checking] = false;
							ad_info[_ad_id][ad_time] = 0;
							break;
						}
						format(ad_info[_ad_id ][ad_sender], MAX_PLAYER_NAME, "%s", ad_info[_ad_id + 1 ][ad_sender]);
						ad_info[_ad_id][ad_phone_number] = ad_info[_ad_id + 1 ][ad_phone_number];

						format(ad_info[_ad_id ][ad_text], 100, "%s", ad_info[_ad_id + 1 ][ad_text]);
						format(ad_info[_ad_id ][ad_checker], MAX_PLAYER_NAME, "%s", ad_info[_ad_id + 1 ][ad_checker]);

						ad_info[_ad_id][ad_checker_id] = ad_info[_ad_id + 1 ][ad_checker_id];
						ad_info[_ad_id][ad_id] = ad_info[_ad_id + 1][ad_id];
						ad_info[_ad_id][ad_busy] = ad_info[_ad_id + 1][ad_busy];
						ad_info[_ad_id][ad_checked] = ad_info[_ad_id + 1][ad_checked];
						ad_info[_ad_id][ad_checking] = ad_info[_ad_id + 1][ad_checking];
						ad_info[_ad_id][ad_time] = ad_info[_ad_id + 1][ad_time];

						f_info[PlayerInfo[playerid][member] -1][f_money] += ad_price / 2;
						PlayerInfo[playerid][salary] += ad_price / 2;

						new query_string[86];
						format(query_string, 86, "UPDATE `fractions` SET `f_money` = '%d' WHERE `f_id` = '%d' LIMIT 1",
						f_info[PlayerInfo[playerid][member] -1][f_money], PlayerInfo[playerid][member]);
						mysql_tquery(sql_connection, query_string, "", "");

						if(i < 29)
						{
							strdel(ad_info[_ad_id + 1][ad_sender], 0, 24);
							ad_info[_ad_id + 1][ad_phone_number] = 0;
							strdel(ad_info[_ad_id + 1][ad_text], 0, 100);
							strdel(ad_info[_ad_id + 1][ad_checker], 0, 24);
							ad_info[_ad_id + 1][ad_checker_id] = -1;
							ad_info[_ad_id + 1][ad_id] = -1;
							ad_info[_ad_id + 1][ad_busy] = false;
							ad_info[_ad_id + 1][ad_checked] = false;
							ad_info[_ad_id + 1][ad_checking] = false;
							ad_info[_ad_id + 1][ad_time] = 0;
						}
					}
					show_ad_list(playerid);
				}
				case 4:
				{
					new header_string[MAX_PLAYER_NAME + 9],
						inputtext_string[180 + 9];
					strcat(header_string, ""c_server"");
					strcat(header_string, ad_info[_ad_id][ad_sender]);
					strcat(inputtext_string, "{cccc99}");
					strcat(inputtext_string, ad_info[_ad_id][ad_text]);
					strcat(inputtext_string, ""c_white"\n\nВведите причину удаления:");
					return show_dialog(playerid, d_ad_delete, DIALOG_STYLE_INPUT, header_string, inputtext_string, "Принять", "Отмена");

				}
				default:
				{
					ad_info[_ad_id][ad_checking] = false;
					show_ad_list(playerid);
				}
			}
		}
		case d_ad_delete:
		{
			if(!response)
			{
			    ad_info[GetPVarInt(playerid, "ad_listitem")-1][ad_checking] = false;
				show_ad_list(playerid);
				return 1;
			}
			new _ad_id = GetPVarInt(playerid, "ad_listitem")-1,
				_text_string[144];

			format(_text_string, sizeof(_text_string), "Ваше объявление было отклонено сотрудником %s. Причина: %s", PlayerInfo[playerid][name], inputtext);
			SendClientMessage(ad_info[_ad_id][ad_id], -1, _text_string);

			format(_text_string, 144, ""c_orange_red"* REPORT [AD] %s:"c_white" %s", ad_info[_ad_id][ad_sender], ad_info[_ad_id][ad_text]);
			foreach(new i: admin_players) SendClientMessage(i, col_gray, _text_string);

			for(new i = _ad_id; i < MAX_ADVERTS; i ++)
			{

				if(_ad_id + 1 <= 29 && ! ad_info[_ad_id + 1][ad_busy])
				{
					strdel(ad_info[_ad_id][ad_sender], 0, 24);
					ad_info[_ad_id][ad_phone_number] = 0;
					strdel(ad_info[_ad_id][ad_text], 0, 100);
					strdel(ad_info[_ad_id][ad_checker], 0, 24);
					ad_info[_ad_id][ad_checker_id] = -1;
					ad_info[_ad_id][ad_id] = -1;
					ad_info[_ad_id][ad_busy] = false;
					ad_info[_ad_id][ad_checked] = false;
					ad_info[_ad_id][ad_checking] = false;
					ad_info[_ad_id][ad_time] = 0;
					break;
				}
				format(ad_info[_ad_id ][ad_sender], MAX_PLAYER_NAME, "%s", ad_info[_ad_id + 1 ][ad_sender]);
				ad_info[_ad_id][ad_phone_number] = ad_info[_ad_id + 1 ][ad_phone_number];

				format(ad_info[_ad_id ][ad_text], 100, "%s", ad_info[_ad_id + 1 ][ad_text]);
				format(ad_info[_ad_id ][ad_checker], MAX_PLAYER_NAME, "%s", ad_info[_ad_id + 1 ][ad_checker]);

				ad_info[_ad_id][ad_checker_id] = ad_info[_ad_id + 1 ][ad_checker_id];
				ad_info[_ad_id][ad_id] = ad_info[_ad_id + 1][ad_id];
				ad_info[_ad_id][ad_busy] = ad_info[_ad_id + 1][ad_busy];
				ad_info[_ad_id][ad_checked] = ad_info[_ad_id + 1][ad_checked];
				ad_info[_ad_id][ad_checking] = ad_info[_ad_id + 1][ad_checking];
				ad_info[_ad_id][ad_time] = ad_info[_ad_id + 1][ad_time];
				if(i < 29)
				{
					strdel(ad_info[_ad_id + 1][ad_sender], 0, 24);
					ad_info[_ad_id + 1][ad_phone_number] = 0;
					strdel(ad_info[_ad_id + 1][ad_text], 0, 100);
					strdel(ad_info[_ad_id + 1][ad_checker], 0, 24);
					ad_info[_ad_id + 1][ad_checker_id] = -1;
					ad_info[_ad_id + 1][ad_id] = -1;
					ad_info[_ad_id + 1][ad_busy] = false;
					ad_info[_ad_id + 1][ad_checked] = false;
					ad_info[_ad_id + 1][ad_checking] = false;
					ad_info[_ad_id + 1][ad_time] = 0;
				}
			}
			show_ad_list(playerid);
		}
		case d_ad_redit:
		{
			if(!response)
			{
			    ad_info[GetPVarInt(playerid, "ad_listitem")-1][ad_checking] = false;
				show_ad_list(playerid);
				return 1;
			}
			new _ad_id = GetPVarInt(playerid, "ad_listitem")-1;
			if(strfind(inputtext,"{")!= -1)
			{
				new header_string[MAX_PLAYER_NAME + 9],
					inputtext_string[100 + 9];
				strcat(header_string, ""c_server"");
				strcat(header_string, ad_info[_ad_id][ad_sender]);
				strcat(inputtext_string, ""c_white"");
				strcat(inputtext_string, ad_info[_ad_id][ad_text]);
				return show_dialog(playerid, d_ad_redit, DIALOG_STYLE_INPUT, header_string, inputtext_string, "Принять", "Отмена");
			}

			format(ad_info[_ad_id][ad_text], 100,"%s", inputtext);
			ad_info[_ad_id][ad_time] = 15;
			format(ad_info[_ad_id][ad_checker], MAX_PLAYER_NAME, "%s", PlayerInfo[playerid][name]);
			ad_info[_ad_id][ad_checker_id] = playerid;
			ad_info[_ad_id][ad_checking] = false;
			DeletePVar(playerid, "ad_listitem");
			ad_info[_ad_id][ad_checked] = true;
			show_ad_list(playerid);
		}
		case d_advert:
		{
			if(!response) return 1;
			if(ad_cooldown >= gettime()) return SendClientMessage(playerid, col_gray, "Нельзя посылать объявление чаще одного в минуту.");
			if(PlayerInfo[playerid][money] < ad_price) return SendClientMessage(playerid, col_gray,"У вас недостаточно денег.");
			new slot = -1;
			for(new i; i < MAX_ADVERTS; i ++)
			{
				if(!ad_info[i][ad_busy])
				{
					slot = i;
					break;
				}
			}
			if(slot == -1) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Нет места для объявлений, попробуйте позже.");
			new ad_inputtext[100];
			GetPVarString(playerid, "advert_text", ad_inputtext, 100);
			DeletePVar(playerid, "advert_text");
			give_money(playerid, -ad_price);

			ad_cooldown = gettime() + 30;
			format(ad_info[slot][ad_sender], MAX_PLAYER_NAME, "%s", PlayerInfo[playerid][name]);
			ad_info[slot][ad_id] = playerid;
			ad_info[slot][ad_phone_number] = PlayerInfo[playerid][number];
			format(ad_info[slot][ad_text], 100,"%s", ad_inputtext);
			ad_info[slot][ad_busy] = true;

			SendClientMessage(playerid, 0xCCCCCCFF, "Вы успешно отправили объявление. Ожидайте пока его проверят.");
			new _text_string[84 + MAX_PLAYER_NAME + 3];
			format(_text_string, sizeof(_text_string),"[R] Пришло новое объявление от %s (ID: %d) | Подробнее /edit", PlayerInfo[playerid][name], playerid);
			foreach(new i: logged_players) if(PlayerInfo[i][member] >= 26)SendClientMessage(i, col_lblue, _text_string);
			return 1;
		}
		case d_news_menu:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: pc_cmd_ether(playerid);
				case 1: SetPVarInt(playerid, "news_menu", 1), show_dialog(playerid, d_news_phone, DIALOG_STYLE_INPUT, ""c_server"News Panel", ""c_white"Введите ID игрока для поключения его к эфиру:", "Подключить", "Назад");
				case 2: SetPVarInt(playerid, "news_menu", 2), show_dialog(playerid, d_news_phone, DIALOG_STYLE_INPUT, ""c_server"News Panel", ""c_white"Введите ID игрока для того, чтобы выгнать из эфира:", "Подключить", "Назад");
				case 3:
				{
					if(cas_price[PlayerInfo[playerid][member] -26] == 0)
					{
						show_dialog(playerid, d_news_phone, DIALOG_STYLE_INPUT, ""c_server"News Panel", ""c_white"Введите цену за звонок:", "Установить", "Назад");
						SetPVarInt(playerid, "news_menu", 3);
					}
					else pc_cmd_offcas(playerid);
				}
				case 4: pc_cmd_numether(playerid);
				case 5: pc_cmd_edit(playerid);
				case 6: pc_cmd_audience(playerid);
			}
			return 1;
		}
		case d_news_phone:
		{
			if(!response)
			{
				DeletePVar(playerid, "news_menu");
				return pc_cmd_nmenu(playerid);
			}
			new getnews = GetPVarInt(playerid, "news_menu");
			switch(getnews)
			{
				case 1, 2:
				{
					if(!strval(inputtext))
					{
						SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Необходимо ввести номер телефона.");
						DeletePVar(playerid, "news_menu");
						return pc_cmd_nmenu(playerid);
					}
					new str[5];
					format(str, sizeof(str), "%d", strval(inputtext));
					if(getnews == 1)pc_cmd_incas(playerid, str);
					else pc_cmd_uncas(playerid, str);
				}
				case 3:
				{
					if(!strval(inputtext))
					{
						SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Необходимо ввести цену за звонок.");
						DeletePVar(playerid, "news_menu");
						return pc_cmd_nmenu(playerid);
					}
					new str[4];
					format(str, sizeof(str), "%d", strval(inputtext));
					pc_cmd_cas(playerid, str);
				}
			}
			DeletePVar(playerid, "news_menu");
			return 1;
		}
		case d_ammo_shop:
		{
			if(!response) return 1;
			if(listitem == 7)
			{
				new b = GetPVarInt(playerid, "p_biz_id")-1;

				if(PlayerInfo[playerid][money] < b_ammo_prices[listitem]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У вас недостаточно наличных для покупки");
				if(b_info[b][b_product] < 15) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"На складе недостаточно товара.");

				b_info[b][b_product] -= 15;
				b_info[b][b_money] += b_ammo_prices[listitem] + floatround(b_ammo_prices[listitem]*(float(b_info[b][b_cost]) / 100));
				b_info[b][b_cash_today] += b_ammo_prices[listitem] + floatround(b_ammo_prices[listitem]*(float(b_info[b][b_cost]) / 100));

				give_money(playerid, -b_ammo_prices[listitem] + floatround(b_ammo_prices[listitem]*(float(b_info[b][b_cost]) / 100)));
				give_weapon(playerid, b_ammo_guns[listitem], 1);

				new gun_name[32 + 1],
					_text_string[98];

				GetWeaponName(b_ammo_guns[listitem], gun_name, 32);

				format(_text_string, 98, ""c_green"* "c_white"Вы приобрели "c_green"%s"c_white" за "c_green"%i$", gun_name, b_ammo_prices[listitem] + floatround(b_ammo_prices[listitem]*(float(b_info[b][b_cost]) / 100)));
				SendClientMessage(playerid, col_white, _text_string);

				global_string = ""c_white"Товар\t"c_white"Цена\n";
				for(new i = 0; i < 8; i++)
				{
					GetWeaponName(b_ammo_guns[i], gun_name, 16);
					format(global_string, 860, "%s"c_server"| "c_white"%s\t"c_green"%i$\n", global_string, gun_name, b_ammo_prices[i] + floatround(b_ammo_prices[i]*(float(b_info[b][b_cost]) / 100)));
				}
				show_dialog(playerid, d_ammo_shop, DIALOG_STYLE_TABLIST_HEADERS, !""scm_dialog"Аммуниция", global_string, !"Далее", !"Отмена");

				return 1;
			}


			show_dialog(playerid, d_ammo_shop_select, DIALOG_STYLE_INPUT, !""scm_dialog"Патроны", !""c_white"Введите количество патрон, которое желаете приобрести:", !"Далее", !"Отмена");
			SetPVarInt(playerid, "slot_ammo", listitem);


			return 1;
		}
		case d_ammo_shop_select:
		{
			if(!response) return DeletePVar(playerid, "slot_ammo");
			new slot = GetPVarInt(playerid,"slot_ammo");
			new b = GetPVarInt(playerid, "p_biz_id")-1;

			if(strval(inputtext)<= 0 || strval(inputtext)> 500) return show_dialog(playerid, d_ammo_shop_select, DIALOG_STYLE_INPUT, ""c_server"Патроны", ""c_orange_red"* Количество патрон должно быть от 1 до 500\n\n"c_white"Введите количество патрон, которое желаете приобрести:", "Далее", "Отмена");
			if(PlayerInfo[playerid][money] < b_ammo_prices[slot]* strval(inputtext)) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У вас недостаточно наличных для покупки");
			if(b_info[b][b_product] < 3 * strval(inputtext)) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"На складе недостаточно товара.");

			b_info[b][b_product] -= 3 * strval(inputtext);
			b_info[b][b_money] +=(b_ammo_prices[slot]* strval(inputtext));
			b_info[b][b_cash_today] +=(b_ammo_prices[slot]* strval(inputtext));

			give_money(playerid, -(b_ammo_prices[slot]* strval(inputtext)));
			give_weapon(playerid, b_ammo_guns[slot], strval(inputtext));

			new gun_name[32 + 1],
				_text_string[98];
		    GetWeaponName(b_ammo_guns[slot], gun_name,32);

			format(_text_string, 98, "Вы приобрели %s (%i патронов) за %i$",gun_name, strval(inputtext), b_ammo_prices[slot]* strval(inputtext));
			SendClientMessage(playerid, col_white, _text_string);
		    DeletePVar(playerid,"slot_ammo");


			global_string = ""c_server"Товар\t"c_server"Цена\n";
			for(new i = 0; i < 8; i++)
			{
				GetWeaponName(b_ammo_guns[i], gun_name, 16);
				format(global_string, 860, "%s"c_grey"-"c_white"%s\t"c_green"%i$\n", global_string, gun_name, b_ammo_prices[i] + floatround(b_ammo_prices[i]*(float(b_info[b][b_cost]) / 100)));
			}
			show_dialog(playerid, d_ammo_shop, DIALOG_STYLE_TABLIST_HEADERS, ""c_server"Аммуниция", global_string, "Далее", "Отмена");

			return 1;
		}
		case d_radio_list:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: PlayAudioStreamForPlayer(playerid, "http://eptop128.streamr.ru");
				case 1: PlayAudioStreamForPlayer(playerid, "https://www.radiorecord.fm/m3u/rr320-28kbps.m3u");
				case 2: StopAudioStreamForPlayer(playerid);
			}
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы включили онлайн-радио.");
			return 1;
		}
		case d_radio_select:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					PlayerInfo[playerid][radio] = 27;
					SendClientMessage(playerid, col_succes, "Вы подключились на волну радиостанции National Public Radio.");
				}
				case 1:
				{
					PlayerInfo[playerid][radio] = 0;
					SendClientMessage(playerid, col_succes, "Вы отключились от волны радиостанции National Public Radio.");
				}
			}
			update_int_sql(playerid, "u_radio", PlayerInfo[playerid][radio]);

		}
		case d_numether:
		{
			if(!response) return 1;
			if(cas_price[PlayerInfo[playerid][member] -26] != 0) return SendClientMessage(playerid, col_gray, "Нельзя изменить номер во время приёма звонков.");

			if(strval(inputtext)< 1000 || strval(inputtext)> 9999)
			{
				new _dialog_string[98];
				format(_dialog_string, sizeof _dialog_string, ""c_white"Номер: %d.\n\nЕсли хотите изменить номер, укажите его в пустую графу:", f_info[PlayerInfo[playerid][member] -1][f_materials]);
				show_dialog(playerid, d_numether, DIALOG_STYLE_INPUT, ""c_server"Номер прямого эфира", _dialog_string, "Принять", "Отмена");
				return SendClientMessage(playerid, col_gray, "Номер прямого эфира не может быть больше или меньше 4-х символов.");
			}

			f_info[PlayerInfo[playerid][member] -1][f_materials] = strval(inputtext);

			new sql_string[90];
			format(sql_string, 90, "UPDATE `fractions` SET `f_materials` = '%d' WHERE `f_id` = '%d' LIMIT 1",
			strval(inputtext),
			PlayerInfo[playerid][member]);
			mysql_tquery(sql_connection, sql_string, "", "");

			format(sql_string, 90, "Вы успешно изменили номер прямого эфира: %d.", strval(inputtext));
			SendClientMessage(playerid, col_succes, sql_string);
		}
		case d_ether_calling:
		{
			if(!response) return is_ether_calling {playerid} = 0;
			if(cas_price[is_ether_calling {playerid} -26] > PlayerInfo[playerid][phone_balance])
			{
				is_ether_calling {playerid} = 0;
				return SendClientMessage(playerid, col_gray, "На вашем счету недостаточно средств.");
			}
			give_money(playerid, -cas_price[is_ether_calling {playerid} -26]);
			cas_bank[is_ether_calling {playerid} -26] += cas_price[is_ether_calling {playerid} -26];

			new _text_string[98];
			format(_text_string, sizeof _text_string, "Радиослушатель %s пытается дозвониться в эфир. Принять звонок /incas %d.",
			PlayerInfo[playerid][name], playerid);
			foreach(new i: logged_players) if(PlayerInfo[i][member] == is_ether_calling {playerid})SendClientMessage(i, 0x7DA1FFFF, _text_string);
			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
			SetPlayerAttachedObject(playerid, 2, 18870, 6, 0.09, 0.019, -0.011, 88.90, -176.40, 0.49, 0.787, 0.753, 0.562);
		}

	  	case d_boat_exam_1:
		{
		    if(!response) return 1;
		    if(PlayerInfo[playerid][boat_lic] != 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас уже есть лицензия на водный транспорт.");
			show_dialog(playerid,d_boat_exam_2, 0,""c_server"Центр водного транспорта", "\
			"c_server"Правила управления водным транспортом:\n\n\
			"c_server"-"c_white" Скорость движения в водном пространстве ограничивается техническими характеристиками\n\
			  водного транспортного средства\n\
			"c_server"-"c_white" Запрещается совершение крутых маневров вблизи береговой полосы и водных транспортных средств\n\
			"c_server"-"c_white" Запрещается приближение к береговой линии менее чем на 5 метров без необходимости\n\
			"c_server"-"c_white" Оставлять водные транспортные средства разрешается только в специализированных швартовых зонах\n\
			"c_server"-"c_white" Перед отправлением каждое водное транспортное средство должно быть проверено на наличие \n\
			  повреждений и неисправностей\n\
			"c_server"-"c_white" По указанию сотрудников государственных органов водитель водного транспортного средства\n\
			  обязан снизить скорость и сравняться с бортом транспортного средства сотрудников государственных органов\n\
			"c_server"-"c_white" В случае ситуаций, грозящих водному транспортному средству, оно должно подать сигнал бедствия (SOS)\n\n\
			"c_server"* "c_grey"Вы ознакомились с правилами и желаете продолжить?" , "Далее","Отмена");
			return 1;
		}

		case d_boat_exam_2:
		{
		    if(!response) return 1;
		    show_dialog(playerid,d_boat_exam_3,0,""c_server"Центр водного транспорта",""c_white"Вы действительно желаете пройти экзамен?\n\n"c_grey"* Стоимость экзамена составляет "c_server"3500$"c_grey"\n* В случае провала экзамена средства не будут возвращены","Далее","Отмена");
		    return 1;
		}
		case d_boat_exam_3:
		{
		    if(!response) return 1;
			if(PlayerInfo[playerid][money] < 3500) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств. Прохождение экзамена стоит "c_orange_red"3500$");

			give_money(playerid, -3500);
			insert_money_log(playerid, INVALID_PLAYER_ID, -3500, "автосдача ВШ");

			p_t_info[playerid][p_tp_immune_time] = 4;

			new vehicle_id = CreateVehicle(473, 723.1313, -1500.1490, -0.3961, 178.8105, 3, 3, -1);
			SetPVarInt(playerid, "exam_vehicle", vehicle_id);
			SetPlayerPos(playerid, 723.1313, -1500.1490, -0.3961);
			veh_info[vehicle_id -1][v_fuel] = 100;

			SetPVarInt(playerid, "driving_cp", 1);
			SetPlayerRaceCheckpoint(playerid, 3, bs_checkpoints[0][0], bs_checkpoints[0][1], bs_checkpoints[0][2], bs_checkpoints[1][0], bs_checkpoints[1][1], bs_checkpoints[1][2], 8.0);
			Streamer_Update(playerid);
			SetVehicleVirtualWorld(vehicle_id, playerid + 2);
			set_world(playerid, playerid + 2);
			set_interior(playerid, 0);
			SetPlayerArmedWeapon(playerid, 0);

			PutPlayerInVehicle(playerid, vehicle_id, 0);
			return 1;
		}

		case d_boat_exam_test:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][money] < 2000) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_white"У вас недостаточно денежных средств.");
			if(PlayerInfo[playerid][boat_lic] == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет лицензии на водный транспорт.");

			give_money(playerid, -2000);
			insert_money_log(playerid, INVALID_PLAYER_ID, -3500, "автосдача ВШ");

			p_t_info[playerid][p_tp_immune_time] = 4;

			new vehicle_id = CreateVehicle(473, 723.1313, -1500.1490, -0.3961, 178.8105, 3, 3, -1);
			SetPVarInt(playerid, "exam_vehicle", vehicle_id);
			SetPlayerPos(playerid, 723.1313, -1500.1490, -0.3961);
			veh_info[vehicle_id -1][v_fuel] = 100;

			SetPVarInt(playerid, "driving_cp", 1);
			SetPlayerRaceCheckpoint(playerid, 3, bs_checkpoints[0][0], bs_checkpoints[0][1], bs_checkpoints[0][2], bs_checkpoints[1][0], bs_checkpoints[1][1], bs_checkpoints[1][2], 8.0);
			Streamer_Update(playerid);
			SetVehicleVirtualWorld(vehicle_id, playerid + 2);
			set_world(playerid, playerid + 2);
			set_interior(playerid, 0);
			SetPlayerArmedWeapon(playerid, 0);

			PutPlayerInVehicle(playerid, vehicle_id, 0);

			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно начали тест на навык! Время пошло.");

			p_t_info[playerid][boat_exam_status] = 1;
			p_t_info[playerid][boat_exam_time] = gettime ();
			return 1;
		}


	  	case d_fly_exam_1:
		{
		    if(!response) return 1;
		    if(PlayerInfo[playerid][fly_lic] != 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас уже есть лицензия на воздушный транспорт.");
			show_dialog(playerid,d_fly_exam_2, 0,""c_server"Центр обучения полётам", "\
			"c_server"Правила управления воздушным транспортом:\n\n\
			"c_server"-"c_white" Скорость движения в воздушном пространстве ограничивается техническими характеристиками\n\
			  транспортного средства\n\
			"c_server"-"c_white" Необходимо слушать и исполнять указания диспетчера\n\
			"c_server"-"c_white" Запрещается совершение манёвров, создающих опасность жизни в воздухе и на земле\n\
			"c_server"-"c_white" Запрещаются полёты в запретных и опасных зонах\n\
			"c_server"-"c_white" Полёты должны проходить на высоте не ниже 300 метров в населённых пунктах и не ниже\n\
			  100 метров вне населённых пунктов\n\
			"c_server"-"c_white" Каждое воздушное транспортное средство должно пройти предполётный осмотр наземными службами\n\
			"c_server"-"c_white" В случае экстренных ситуаций немедленно сообщить об этом наземным службам безопасности\n\
			  безопасности и проинформировать об этом пассажиров\n\
			"c_server"-"c_white" Оставлять воздушное транспортное средство разрешается только на территории аэропорта за\n\
			  пределами взлётно -посадочной полосы\n\n\
			"c_server"* "c_grey"Вы ознакомились с правилами и желаете продолжить?" , "Далее","Отмена");
			return 1;
		}

		case d_carbuy:
		{
			if(response)
			{
				if(PlayerInfo[playerid][gps_tracker] >= 5) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете унести более 5 GPS-трекеров."), ShowShopDialog(playerid);
				PlayerInfo[playerid][gps_tracker] += 1;
				update_int_sql(playerid, "u_gps_tracker", PlayerInfo[playerid][gps_tracker]);
				new query_string[138];
				format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы приобрели GPS-трекер | "c_green"%d/5"c_white". Введите "c_green"/setgps"c_white", чтобы установить в транспорт.", PlayerInfo[playerid][gps_tracker]);
				SendClientMessage(playerid, col_white, query_string);
			}
			new ts_id = GetPVarInt(playerid, "tshop_id")-1;
			SetPVarInt(playerid, "tp_area_used", 1);
			switch(ts_id)
			{
				case 0: set_pos(playerid, 547.6648, -1278.8979, 16.9415, 0, 0, 0);
				case 1: set_pos(playerid, -1969.2168,294.0054,35.1719, 83.8790, 0, 0);
				case 2: set_pos(playerid, 2200.7791,1394.1847,11.0625, 178.9896, 0, 0);
				case 3: set_pos(playerid, 2888.9858,-365.2157,8.1380,88.1677, 0, 0);
				case 4: set_pos(playerid, -1396.3988,-544.6662,14.1484,216.0958, 0, 0);
			}
			for(new j = 0; j < 20; j ++)
			{
				TextDrawHideForPlayer(playerid, td_tshop[j]);
				TextDrawHideForPlayer(playerid, td_color_tshop[j]);
			}
			DeletePVar(playerid, "tshop_id"), DeletePVar(playerid, "tshop_type"), DeletePVar(playerid, "tshop_car"), DeletePVar(playerid, "tshop_car2"), DeletePVar(playerid, "tshop_list");
			CancelSelectTextDraw(playerid);


			if(ts_id < 3)
			{
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно приобрели транспортное средство.");
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Оно было доставлено во двор салона.");
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Необходимо припарковаться в разрешенном месте, чтобы транспорт не был эвакуирован. Используйте "c_green"/vpark"c_white".");
				show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Информация:", "\
				"c_server"Информация о транспорте:\n\n\
				"c_server"-"c_white"Каждое транспортное средство облагается налогами. Оплатить их Вы сможете в банке или в банкомате.\n\
				В случае неуплаты налога Вы можете потерять часть своей собственности.\n\n\
				"c_server"-"c_white"По штату курсируют экипажи полиции с эвакуаторами.\n\
				В случае парковки в неположенных местах, Ваше транспортное средство будет эвакуировано на штрафстоянку.\n\
				Припарковать транспортное средство Вы можете при помощи команды /vpark.\n\
				Настоятельно рекомендуем сделать это сразу после покупки транспорта.\n\n\
				"c_server"-"c_white"Каждый игрок может иметь 2 транспортных средства.\n\n\
				"c_server"* "c_grey"Вы ознакомились с информацией и желаете продолжить?", "Закрыть", "");
			}
			else if(ts_id == 3)SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно приобрели водное транспортное средство.");
			else if(ts_id == 4)SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно приобрели воздушное транспортное средство. Оно доставлено к ангару.");
			return 1;
		}

		case d_fly_exam_2:
		{
		    if(!response) return 1;
		    show_dialog(playerid, d_fly_exam_3,0,""c_server"Центр водного транспорта",""c_white"Вы действительно желаете пройти экзамен?\n\n"c_grey"* Стоимость экзамена составляет "c_server"5000$"c_grey"\n* В случае провала экзамена средства не будут возвращены","Далее","Отмена");
		    return 1;
		}
		case d_fly_exam_3:
		{
		    if(!response) return 1;
			if(PlayerInfo[playerid][money] < 5000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств. Прохождение экзамена стоит "c_orange_red"5000$");

			give_money(playerid, -5000);
			insert_money_log(playerid, INVALID_PLAYER_ID, -5000, "автосдача ЛШ");

			p_t_info[playerid][p_tp_immune_time] = 4;

			new vehicle_id = CreateVehicle(593, 304.7228, 2456.0068, 17.0619, 358.5495, 3, 3, -1);
			SetPVarInt(playerid, "exam_vehicle", vehicle_id);
			SetPlayerPos(playerid, 304.7228, 2456.0068, 17.0619);
			veh_info[vehicle_id -1][v_fuel] = 100;


			SetPVarInt(playerid, "driving_cp", 1);
			SetPlayerRaceCheckpoint(playerid, 3, ps_checkpoints[0][0], ps_checkpoints[0][1], ps_checkpoints[0][2], ps_checkpoints[1][0], ps_checkpoints[1][1], ps_checkpoints[1][2], 4.0);
			Streamer_Update(playerid);
			SetVehicleVirtualWorld(vehicle_id, playerid + 2);
			set_world(playerid, playerid + 2);
			set_interior(playerid, 0);
			SetPlayerArmedWeapon(playerid, 0);

			PutPlayerInVehicle(playerid, vehicle_id, 0);
			return 1;
		}

		case d_air_exam_test:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][money] < 2000) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_white"У вас недостаточно денежных средств.");
			if(PlayerInfo[playerid][fly_lic] == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет лицензии на воздушный транспорт.");

			give_money(playerid, -2000);
			insert_money_log(playerid, INVALID_PLAYER_ID, -5000, "тест навыков ВШ");

			p_t_info[playerid][p_tp_immune_time] = 4;

			new vehicle_id = CreateVehicle(593, 304.7228, 2456.0068, 17.0619, 358.5495, 3, 3, -1);
			SetPVarInt(playerid, "exam_vehicle", vehicle_id);
			SetPlayerPos(playerid, 304.7228, 2456.0068, 17.0619);
			veh_info[vehicle_id -1][v_fuel] = 100;

			SetPVarInt(playerid, "driving_cp", 1);
			SetPlayerRaceCheckpoint(playerid, 3, ps_checkpoints[0][0], ps_checkpoints[0][1], ps_checkpoints[0][2], ps_checkpoints[1][0], ps_checkpoints[1][1], ps_checkpoints[1][2], 4.0);
			Streamer_Update(playerid);
			SetVehicleVirtualWorld(vehicle_id, playerid + 2);
			set_world(playerid, playerid + 2);
			set_interior(playerid, 0);
			SetPlayerArmedWeapon(playerid, 0);

			PutPlayerInVehicle(playerid, vehicle_id, 0);

			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно начали тест на навык! Время пошло.");

			p_t_info[playerid][air_exam_status] = 1;
			p_t_info[playerid][air_exam_time] = gettime ();
			return 1;
		}

		case d_auto_exam_1:
		{
		    if(!response) return 1;
		    if(PlayerInfo[playerid][drive_lic] != 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас уже есть водительские права.");

			show_dialog(playerid,d_auto_exam_2,0,""c_server"Правила:", ""c_server"Правила управления наземным транспортом:\n\n\
			"c_server"Общие положения:\n\
			"c_server"-"c_white" Разрешенная скорость передвижения для т/с, по городу -60 км/ч, за городом -110 км/ч,\n\
			на автомагистралях -150 км/ч.\n\
			"c_server"-"c_white" При необходимости, водитель обязан пропустить т/с со спец.сигналом\n\
			(Полиция,Служба спасения,Скорая помощь), а именно: постепенно снижая скорость, прижаться к обочине.\n\
			"c_server"-"c_white" Перекрестки в штате являются нерегулируемыми. Разрешается проезд на запрещающие сигналы светофора.\n\
			"c_server"-"c_white" По требованию работника правоoхранительных органов, водитель обязан остановиться и\n\
			выполнить все перечисленные требования сотрудника правоохранительных органов.\n\
			"c_server"-"c_white" В случае возникновения ДТП(Дорожно-транспортного происшествия) водитель обязан:\n\
			"c_grey"*"c_white" Оставаться на месте ДТП.\n\
			"c_grey"*"c_white" Вызвать сотрудников правоохоранительных органов.\n\
			"c_grey"*"c_white" Вызвать сотрудников скорой помощи, если того требует ситуация.\n\
			"c_server"-"c_white" Водитель обязан пропускать пешеходов, в специальных местах для перехода\n\
			(перекрестки, специальная разметка)\n\
			"c_server"-"c_white" Водитель обязан осуществлять парковку транспортного средства только на стоянках, либо на обочине,\n\
			заезжая при этом только 2-мя колесами.\n\n\
			"c_server"Запрещается:\n\
			"c_server"-"c_white" Выезд на полосу встречного движения при очевидной угрозе лобового столкновения.\n\
			"c_server"-"c_white" Экстренное торможение без везкой причины, в случае возникновения поломки т/с,\n\
			по мере возможности Вам следует:\n\
			"c_grey"*"c_white" Прижаться к обочине.\n\
			"c_grey"*"c_white" Включить сигнал, оповещающий об аварийной ситуации.\n\
			"c_server"-"c_white" Обгон впереди движущегося т/с с правой стороны,обгон разрешен лишь в случае поворота\n\
			впереди движущегося т/с.\n\
			"c_server"-"c_white" Нарушение установленного скоростного лимита.\n\
			"c_server"-"c_white" Управление транспортным средством в нетрезвом виде.\n\
			"c_server"-"c_white" Разворот в туннелях строго запрещен.\n\
			"c_server"-"c_white" Движение транспортного средства задним ходом разрешается при условии, что этот маневр\n\
			будет безопасен и не создаст помех другим участникам движения.\n\
			"c_server"-"c_white" При необходимости водитель должен прибегнуть к помощи других лиц.\n\
			"c_server"-"c_white" На автомагистралях запрещается: движение задним ходом и учебная езда.\n\n\
			"c_server"*"c_grey" Вы ознакомились с правилами и желаете продолжить?", "Далее", "Отмена");
			return 1;
		}
		case d_auto_exam_2:
		{
		    if(!response) return 1;
		    show_dialog(playerid,d_auto_exam_3,0,""c_server"Школа вождения",""c_white"Вы действительно желаете пройти экзамен?\n\n"c_grey"* Стоимость экзамена составляет "c_server"1000$"c_grey"\n* Вам нужно правильно ответить на все "c_server"5 вопросов","Далее","Отмена");
		    return 1;
		}
		case d_auto_exam_3:
		{
		    if(!response) return 1;
			if(PlayerInfo[playerid][money] < 1000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств. Прохождение экзамена стоит "c_orange_red"1000$");

			give_money(playerid, -1000);
			insert_money_log(playerid, INVALID_PLAYER_ID, -1000, "автосдача в АШ");
		    ShowTestQuestion(playerid,0,5,d_auto_test_1);
		    return 1;
		}
  		case d_auto_test_1:
		{
			if(!response) return 1;
			new q = GetPVarInt(playerid,"pTestQNumber")-1;
			if(!listitem) return ShowTestQuestion(playerid,0,2,d_auto_test_1,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"К сожалению Вы ответили неверно. Тест провален.");
			ShowTestQuestion(playerid,5,10,d_auto_test_2);
			return 1;
		}
  		case d_auto_test_2:
		{
			if(!response) return 1;
			new q = GetPVarInt(playerid,"pTestQNumber")-1;
			if(!listitem) return ShowTestQuestion(playerid,2,4,d_auto_test_2,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"К сожалению Вы ответили неверно. Тест провален.");
			ShowTestQuestion(playerid,10,15,d_auto_test_3);
			return 1;
		}
  		case d_auto_test_3:
		{
			if(!response) return DeletePVar(playerid,"AutoExam");
			new q = GetPVarInt(playerid,"pTestQNumber")-1;
			if(!listitem) return ShowTestQuestion(playerid,4,6,d_auto_test_3,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"К сожалению Вы ответили неверно. Тест провален.");
			ShowTestQuestion(playerid,15,20,d_auto_test_4);
			return 1;
		}
  		case d_auto_test_4:
		{
			if(!response) return DeletePVar(playerid,"AutoExam");
			new q = GetPVarInt(playerid,"pTestQNumber")-1;
			if(!listitem) return ShowTestQuestion(playerid,6,8,d_auto_test_4,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"К сожалению Вы ответили неверно. Тест провален.") ;
			ShowTestQuestion(playerid,20,25,d_auto_test_5);
			return 1;
		}
  		case d_auto_test_5:
		{
			if(!response) return DeletePVar(playerid,"AutoExam");
			new q = GetPVarInt(playerid,"pTestQNumber")-1;
			if(!listitem) return ShowTestQuestion(playerid,8,12,d_auto_test_5,q);
			if(listitem != gExamTrueAnswer[q]) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"К сожалению Вы ответили неверно. Тест провален.");

			DeletePVar(playerid, "pTestQNumber");
			p_t_info[playerid][p_tp_immune_time] = 4;
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Теоретический тест успешно сдан, теперь необходимо пройти практическую часть.");
			new vehicle_id = CreateVehicle(587, -2023.9032, -163.2788, 35.0321, 180.9053, 3, 3, -1);
			SetPVarInt(playerid, "exam_vehicle", vehicle_id);
			SetPlayerPos(playerid, -2023.9032, -163.2788, 35.0321);
			veh_info[vehicle_id -1][v_fuel] = 100;

			SetPVarInt(playerid, "driving_cp", 1);
			SetPlayerRaceCheckpoint(playerid, 0, ds_checkpoints[0][0], ds_checkpoints[0][1], ds_checkpoints[0][2] -1, ds_checkpoints[1][0], ds_checkpoints[1][1], ds_checkpoints[1][2], 4.0);
			Streamer_Update(playerid);
			SetVehicleVirtualWorld(vehicle_id, playerid + 2);
			set_world(playerid, playerid + 2);
			set_interior(playerid, 0);
			SetPlayerArmedWeapon(playerid, 0);

			PutPlayerInVehicle(playerid, vehicle_id, 0);
			return 1;
		}


		case d_rent_car:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			if(player_rentcar[playerid] != INVALID_VEHICLE_ID) return RemovePlayerFromVehicle(playerid), SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уже арендуете транспорт, сначала откажитесь от старого "c_orange_red"/stoprent");
			if(PlayerInfo[playerid][money] < 250) return RemovePlayerFromVehicle(playerid), SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Аренда данного транспорта стоит "c_orange_red"250$");
			new veh_id = GetPlayerVehicleID(playerid);

			if(veh_info[veh_id -1][v_type] == vehicle_type_job && veh_info[veh_id -1][v_owner] == job_trucker)
			{
				new veh_model = GetVehicleModel(veh_id);
				if(veh_model == 514 && PlayerInfo[playerid][truck_skill] < 30000) return RemovePlayerFromVehicle(playerid), SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно опыта для управления данным грузовиком.");
				if(veh_model == 515 && PlayerInfo[playerid][truck_skill] < 60000) return RemovePlayerFromVehicle(playerid), SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно опыта для управления данным грузовиком.");
			}
			foreach(new i: logged_players)
			{
				if(player_rentcar[i] == veh_id) return RemovePlayerFromVehicle(playerid), SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Данный транспорт уже кем-то арендован.");
			}
			give_money(playerid, -250);
			player_rentcar[playerid] = veh_id;
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно арендовали транспорт. Используйте "c_green"/rlock"c_white", чтобы закрыть его.");

			switch(veh_info[veh_id -1][v_owner])
			{
				case job_bus: show_dialog(playerid, d_bus_route, 2, ""c_server"Выберите маршрут:", "1. Лос-Сантос -Завод (3000$/рейс)\n2. Лос-Сантос -Лесопилка (3400$/рейс)\n3. Лос-Сантос -Шахта (3800$/рейс)\n4. Лос-Сантос -Автошкола (3200$/рейс)\n5. Лос-Сантос -Порт (2800$/рейс)", "Выбрать", "Отмена");
				case job_delivery:SendClientMessage(playerid, col_white, ""c_green"* "c_white"Используйте "c_green"/delivery"c_white" для начала доставки.");
				case job_fuel_delivery:SendClientMessage(playerid, col_white, ""c_green"* "c_white"Используйте "c_green"/delivery"c_white" для начала доставки.");
				case job_forklift:
				{
					forklift_ptd[playerid] = CreatePlayerTextDraw(playerid, 595.416625, 208.666702, "SHIFT_TIME 10:00");
					PlayerTextDrawLetterSize(playerid,forklift_ptd[playerid], 0.212500, 0.879260);
					PlayerTextDrawAlignment(playerid,forklift_ptd[playerid], 2);
					PlayerTextDrawColor(playerid,forklift_ptd[playerid], -1);
					PlayerTextDrawSetShadow(playerid,forklift_ptd[playerid], 1);
					PlayerTextDrawSetOutline(playerid,forklift_ptd[playerid], 0);
					PlayerTextDrawBackgroundColor(playerid,forklift_ptd[playerid], 255);
					PlayerTextDrawFont(playerid,forklift_ptd[playerid], 1);
					PlayerTextDrawSetProportional(playerid,forklift_ptd[playerid], 1);
					PlayerTextDrawSetShadow(playerid,forklift_ptd[playerid], 1);

					PlayerTextDrawShow(playerid, forklift_ptd[playerid]);
					TextDrawShowForPlayer(playerid, forklift_td);
					forklift_time[playerid] = 600;
					SetPlayerCheckpoint(playerid, 2783.1885, -2378.3904, 13.2751, 4.0);
					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Чтобы поднять контейнер нажмите "c_green"'Y'"c_white".");
				}
				case job_gazon:
				{
                    give_money(playerid, -150);
					player_rentcar[playerid] = GetPlayerVehicleID(playerid);
				    SetPVarInt(playerid, "start_job_mower",1);
				    SendClientMessage(playerid, -1, "Вы начали рабочий день. Выберите зону для работы");
				    pc_cmd_zonestatus(playerid);
				   	SetPVarInt(playerid, "veh_id_cleaner",GetPlayerVehicleID(playerid));
				   	
				   	//is_gps_used {playerid} = 0;
				}
			}
		}
		case d_bus_route:
		{
			if(!response) return 1;
			SetPVarInt(playerid,"pbusroute",listitem);
			show_dialog(playerid, d_bus_price,1,""c_server"Цена за проезд",""c_white"Введите цену билета:","Принять","Отмена");
		}
		case d_bus_price:
		{
			if(!response) return DeletePVar(playerid,"pbusroute");
			new price = strval(inputtext);
			if(price < 10 || price > 500)
			{
				return show_dialog(playerid, d_bus_price, 1, ""c_server"Цена за проезд",""c_orange_red"* Цена должна быть от 10$ до 500$\n\n"c_white"Введите цену билета:", "Принять", "Отмена");
			}

			is_gps_used {playerid} = 0;

			new route = GetPVarInt(playerid,"pbusroute");
			DeletePVar(playerid,"pbusroute");

			new routename[56];
			switch(route)
			{
				case 0: routename = "Лос-Сантос - Завод";
				case 1: routename = "Лос-Сантос - Лесопилка";
				case 2: routename = "Лос-Сантос - Шахта";
				case 3: routename = "Лос-Сантос - Автошкола";
				case 4: routename = "Лос-Сантос - Порт";
			}
			new mes[78];
			format(mes,sizeof(mes),""c_server"** %s **\n"c_grey"Стоимость билета: "c_white"%i$",routename,price);
			if(IsValid3DTextLabel(p_t_info [playerid][pBusText]))UpdateDynamic3DTextLabelText(p_t_info [playerid][pBusText], -1, mes);
			else if(!IsValid3DTextLabel(p_t_info [playerid][pBusText])) p_t_info [playerid][pBusText] = CreateDynamic3DTextLabel(mes,-1,0.0,0.0,3.0,40.0,INVALID_PLAYER_ID, player_rentcar[playerid]);


			p_t_info [playerid][pBusRoute] = route;
			p_t_info [playerid][pBusPrice] = price;
			p_t_info [playerid][pBusPos] = 0;
			SetNextBusCP(playerid,0);
		}
		case d_end:
		{
			if(!response) return 1;
			new _v_id = player_rentcar[playerid];
			if(PlayerInfo[playerid][job] == job_bus)
			{
				DisablePlayerRaceCheckpoint(playerid);
				p_t_info [playerid][pBusRoute] = 0;
				p_t_info [playerid][pBusPos] = 0;
				p_t_info [playerid][pBusPrice] = 0;
				if(IsValid3DTextLabel(p_t_info [playerid][pBusText])) DestroyDynamic3DTextLabel (p_t_info [playerid][pBusText]);
				p_t_info [playerid][pBusText] = Text3D:INVALID_3DTEXT_ID;
			}
			else if(PlayerInfo[playerid][job] == job_taxi)
			{
				p_t_info [playerid][pTaxiPrice] = 0;
				if(IsValid3DTextLabel(p_t_info[playerid][pTaxi3DText])) DestroyDynamic3DTextLabel(p_t_info[playerid][pTaxi3DText]);
				p_t_info[playerid][pTaxi3DText] = Text3D:INVALID_3DTEXT_ID;

			}
			else if(PlayerInfo[playerid][job] == job_mechanic)
			{
				p_t_info [playerid][pTaxiPrice] = 0;
				if(IsValid3DTextLabel(PlayerMehText[playerid])) DestroyDynamic3DTextLabel (PlayerMehText[playerid]);
				PlayerMehText[playerid] = Text3D:INVALID_3DTEXT_ID;
				DeletePVar(playerid, "MehName");
				DeletePVar(playerid, "toplivo");
			}
			else if(PlayerInfo[playerid][job] == job_gazon)
			{
			    SetVehicleToRespawn(GetPVarInt(playerid,"veh_id_cleaner"));
			    give_money(playerid, -150);
			    DeletePVar(playerid, "start_job_mower");
				DeletePVar(playerid, "veh_id_cleaner");
				DeletePVar(playerid, "gazon_salary");
			}
			// Удаляем груз с авто на грузчике в порту и убираем текстдрав
			if(PlayerInfo[playerid][timejob] == job_forklift)
			{
				if(GetPVarInt(playerid, "fork_object"))
				{
					DestroyDynamicObject(GetPVarInt(playerid, "fork_object"));
					DeletePVar(playerid, "fork_object");
				}
				if(forklift_ptd[playerid] != PlayerText:-1)
				{
					PlayerTextDrawDestroy(playerid, forklift_ptd[playerid]);
					TextDrawHideForPlayer(playerid, forklift_td);

					forklift_ptd[playerid] = PlayerText:-1;
					forklift_time[playerid] = -600;
				}
			}
			player_rentcar[playerid] = INVALID_VEHICLE_ID;
			SetVehicleToRespawn(_v_id);
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно прекратили аренду транспортного средства.");
		}
		case d_job:
		{
			if(!response) return 1;
			if((PlayerInfo[playerid][member] < 18 || PlayerInfo[playerid][member] > 25) && PlayerInfo[playerid][member] != 0) return SendClientMessage(playerid, col_white, !""scm_error"Представители организаций не могут трудоустроиться.");

			if(PlayerInfo[playerid][drive_lic] == 0) return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет водительского удостоверения, оно обязательно для данных работ.");
			if(player_rentcar[playerid] != INVALID_VEHICLE_ID )
			{
				if(veh_info[player_rentcar[playerid] -1][v_model] != 462) return SendClientMessage(playerid, col_white, !""scm_error"Вы не завершили работу на предыдущем рабочем месте.");
			}
			if(listitem == 7)
			{
				if(PlayerInfo[playerid][job] == 0)
				{
					show_dialog(playerid, d_job, DIALOG_STYLE_TABLIST_HEADERS,
					!""scm_dialog"Трудоустройство",
					!""c_white"Работа\t"c_white"Требуемый уровень\n\
					"c_server"1 | "c_white"Водитель автобуса\t"c_yellow"2 ур.\n\
					"c_server"2 | "c_white"Водитель такси\t"c_yellow"2 ур.\n\
					"c_server"3 | "c_white"Механик\t"c_yellow"3 ур.\n\
					"c_server"4 | "c_white"Дальнобойщик\t"c_yellow"4 ур.\n\
					"c_server"5 | "c_white"Развозчик продуктов\t"c_yellow"5 ур.\n\
					"c_server"6 | "c_white"Развозчик топлива\t"c_yellow"4 ур.\n\
					"c_server"7 | "c_white"Газонокосильщик\t"c_yellow"4 ур.\n\
					"c_orange_red"* Уволиться с работы", !"Выбрать", !"Закрыть");
					return SendClientMessage(playerid, col_white, !""scm_error"Вы не трудоустроены на постоянную работу.");

				}
				if(player_rentcar[playerid] != INVALID_VEHICLE_ID)
				{
					if(veh_info[player_rentcar[playerid] -1][v_model] != 462)
					{
						show_dialog(playerid, d_job, DIALOG_STYLE_TABLIST_HEADERS,
						!""scm_dialog"Трудоустройство",
						!""c_white"Работа\t"c_white"Требуемый уровень\n\
						"c_server"1 | "c_white"Водитель автобуса\t"c_yellow"2 ур.\n\
						"c_server"2 | "c_white"Водитель такси\t"c_yellow"2 ур.\n\
						"c_server"3 | "c_white"Механик\t"c_yellow"3 ур.\n\
						"c_server"4 | "c_white"Дальнобойщик\t"c_yellow"4 ур.\n\
						"c_server"5 | "c_white"Развозчик продуктов\t"c_yellow"5 ур.\n\
						"c_server"6 | "c_white"Развозчик топлива\t"c_yellow"4 ур.\n\
						"c_server"7 | "c_white"Газонокосильщик\t"c_yellow"4 ур.\n\
						"c_orange_red"* Уволиться с работы", !"Выбрать", !"Закрыть");
						return SendClientMessage(playerid, col_white, !""scm_error"Вы не завершили работу на предыдущем рабочем месте.");
					}
				}
				PlayerInfo[playerid][job] = 0;
				update_int_sql(playerid, "u_job", PlayerInfo[playerid][job]);
				SendClientMessage(playerid, col_white, !""scm_sucess"Вы успешно уволились с прежнего места работы.");
				show_dialog(playerid, d_job, DIALOG_STYLE_TABLIST_HEADERS,
				!""scm_dialog"Трудоустройство",
				!""c_white"Работа\t"c_white"Требуемый уровень\n\
				"c_server"1 | "c_white"Водитель автобуса\t"c_yellow"2 ур.\n\
				"c_server"2 | "c_white"Водитель такси\t"c_yellow"2 ур.\n\
				"c_server"3 | "c_white"Механик\t"c_yellow"3 ур.\n\
				"c_server"4 | "c_white"Дальнобойщик\t"c_yellow"4 ур.\n\
				"c_server"5 | "c_white"Развозчик продуктов\t"c_yellow"5 ур.\n\
				"c_server"6 | "c_white"Развозчик топлива\t"c_yellow"4 ур.\n\
				"c_server"7 | "c_white"Газонокосильщик\t"c_yellow"4 ур.\n\
				"c_orange_red"* Уволиться с работы", !"Выбрать", !"Закрыть");
				return 1;
			}
			else if(PlayerInfo[playerid][job]) return SendClientMessage(playerid, col_white, !""scm_info"Вы уже трудоустроены, чтобы уволиться с работы, используйте команду "c_orange_red"/quitjob");
			static const job_level [7] = {2, 2, 3, 4, 4, 4, 4};
			for(new i; i < 7; i ++)
				if(listitem == i && PlayerInfo[playerid][level] >= job_level[i]) break;
				else if(PlayerInfo[playerid][level] < job_level[i]) return SendClientMessage(playerid, col_white, !""scm_error"Вам необходимо прожить ещё несколько лет в штате.");
			PlayerInfo[playerid][job] = listitem + 1;
			static const job_status[][] = {
			"водителя автобуса",
			"таксиста",
			"механика",
			"дальнобойщика",
			"развозчика продуктов",
			"развозчика топлива",
			"газонокосильщик"};


			new _text_string[92];
			format(_text_string, sizeof _text_string, ""scm_sucess"Вы успешно устроились на работу "c_green"%s"c_white".", job_status[listitem]);
			SendClientMessage(playerid, col_white, _text_string);
			SendClientMessage(playerid, col_white, !""scm_info"Для поиска местоположения работы используйте "c_white"'/gps'"c_grey".");
			SendClientMessage(playerid, col_white, !""scm_info"Чтобы узнать команды используйте "c_white"'/mm >> Список комманд'"c_grey".");
			update_int_sql(playerid, "u_job", PlayerInfo[playerid][job]);
		}
		case d_taxi:
		{
			if(!response) return 1;
			new price = strval(inputtext);
			if(price < 1 || price > 70)
			{
				return show_dialog(playerid, d_taxi, DIALOG_STYLE_INPUT, !""scm_dialog"Тариф", !""c_orange_red"* Цена должна быть от 1 до 70$\n\n"c_white"Введите стоимость проезда за 1 км.:", !"Принять", !"Закрыть");
			}
			foreach(new i: logged_players)
			{
				if(i == playerid) continue;
				if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid)) return SendClientMessage(playerid,col_gray,"Назначать / изменять цену можно только когда у Вас в машине нет пассажиров.");
			}
			p_t_info [playerid][pTaxiPrice] = price;
			new mes[60];
			format(mes,sizeof(mes),"** Тариф **\n"c_grey"$%i за 1 км", price);
			if(IsValid3DTextLabel(p_t_info[playerid][pTaxi3DText]))
			{
				DestroyDynamic3DTextLabel(p_t_info[playerid][pTaxi3DText]);
				p_t_info[playerid][pTaxi3DText] = CreateDynamic3DTextLabel(mes, col_lblue, 0.0,0.0,1.5,20.0,INVALID_PLAYER_ID,GetPlayerVehicleID(playerid));
				return 1;
			}
			if(!IsValid3DTextLabel(p_t_info[playerid][pTaxi3DText])) p_t_info[playerid][pTaxi3DText] = CreateDynamic3DTextLabel(mes, col_lblue, 0.0, 0.0, 1.5, 20.0, INVALID_PLAYER_ID, GetPlayerVehicleID(playerid));
		}
		case d_taxi_mark:
		{
			new mapmark = GetPVarInt(playerid, "map_mark");
			if(mapmark == 2)
			{
				if(!response) return show_dialog(playerid, d_taxi_mark, DIALOG_STYLE_LIST, ""c_server"Навигатор таксиста", ""c_server"1. "c_white"Установить метку на карте\n"c_server"2. "c_white"Установить метку из GPS навигатора\n"c_grey"Продолжать поездку без навигатора", "Выбрать", "Закрыть"), DeletePVar(playerid, "map_mark");
				new driverid = GetPVarInt(playerid, "taxi_driver_id");
				switch(listitem)
				{
					case 0: SetPlayerRaceCheckpoint(driverid, 1, 1481.2469,-1743.4403,13.5469, 0.0, 0.0, 0.0, 2.0); // Мэрия
					case 1: SetPlayerRaceCheckpoint(driverid, 1, 1375.9095,-1088.4717,25.9133, 0.0, 0.0, 0.0, 2.0); // Банк Los-Santos
					case 2: SetPlayerRaceCheckpoint(driverid, 1, -2047.2146,-231.3838,35.4309, 0.0, 0.0, 0.0, 2.0); // Автошкола
					case 3: SetPlayerRaceCheckpoint(driverid, 1, 2645.9961,-2428.7090,13.2651, 0.0, 0.0, 0.0, 2.0); // Порт
					case 4: SetPlayerRaceCheckpoint(driverid, 1, 596.7739,868.2286,-43.0937, 0.0, 0.0, 0.0, 2.0); // Шахта
					case 5: SetPlayerRaceCheckpoint(driverid, 1, -50.2125,-282.1606,5.4297, 0.0, 0.0, 0.0, 2.0); // Завод
					case 6: SetPlayerRaceCheckpoint(driverid, 1, -1083.6823,-1647.6613,76.3672, 0.0, 0.0, 0.0, 2.0); // Лесопилка
				}
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно задали метку водителю.");
				DeletePVar(playerid, "taxi_driver_id");
				DeletePVar(playerid, "map_mark");
				is_gps_used {driverid} = 1;
			}
			if(!response) return DeletePVar(playerid, "taxi_driver_id"), DeletePVar(playerid, "map_mark");
			if(!mapmark)
			{
				switch(listitem)
				{
					case 0:
					{
						SetPVarInt(playerid, "map_mark", 1);
						SendClientMessage(playerid, col_white, ""c_server"* "c_white"Установить метку на карте (ESC -Карта -ПКМ).");
					}
					case 1:
					{
						SetPVarInt(playerid, "map_mark", 2);
						return show_dialog(playerid, d_taxi_mark, DIALOG_STYLE_LIST, ""c_server"Навигатор такси", ""c_server"1. "c_white"Мэрия Лос -Сантос\n"c_server"2. "c_white"Банк Лос -Сантос\n"c_server"3. "c_white"Автошкола\n"c_server"4. "c_white"Порт\n"c_server"5. "c_white"Шахта\n"c_server"6. "c_white"Завод\n"c_server"7. "c_white"Лесопилка", "Выбор", "Закрыть");
					}
				}
			}
			return 1;
		}
		case d_rank:
		{
			if(!response) return DeletePVar(playerid, "pl_setrank_id");
			new _pl_id = GetPVarInt(playerid, "pl_setrank_id");

			if(!IsPlayerConnected(_pl_id) || _pl_id == playerid) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Игрок не найден.");
			if(PlayerInfo[_pl_id][member] != PlayerInfo[playerid][member]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Игрок не состоит в Вашей организации.");
			if(listitem + 1 >= PlayerInfo[playerid][rank])
			{
				global_string[0] = EOS;
				for(new i = 0; i < f_info[PlayerInfo[playerid][member] -1][f_rank_settings][0]; i ++)
				{
					new line_string[72];
					format(line_string, 72, ""c_grey"%i. "c_white"%s\n", i + 1, f_rank[PlayerInfo[playerid][member] -1][i]);
					strcat(global_string, line_string);
				}
				show_dialog(playerid, d_rank, DIALOG_STYLE_LIST, ""c_server"Смена ранга", global_string, "Выбрать", "Закрыть");
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете назначить игрока на данный ранг.");
			}
			PlayerInfo[_pl_id][rank] = listitem + 1;
			update_int_sql(_pl_id, "u_rank", PlayerInfo[_pl_id][rank]);


			new _text_string[128];
			format(_text_string, 128, ""c_green"* "c_white"Вы назначили %s на ранг "c_green"%s(%d)", PlayerInfo[_pl_id][name], f_rank[PlayerInfo[_pl_id][member] -1][listitem], listitem + 1);
			SendClientMessage(playerid, col_white, _text_string);
			format(_text_string, 128, ""c_green"* %s "c_white"назначил Вас на ранг "c_green"%s(%d)", PlayerInfo[playerid][name], f_rank[PlayerInfo[_pl_id][member] -1][listitem], listitem + 1);
			SendClientMessage(_pl_id, col_succes, _text_string);
		}
		case d_refill:
		{
		    new id_mhnk = GetPVarInt(playerid,"id_refill")-1;
		    new price_mhnk = GetPVarInt(id_mhnk,"price_refill");
			new litres = GetPVarInt(id_mhnk,"litres_refill");
			if(!response)
			{
			    SendClientMessage(id_mhnk,col_gray,"Игрок отказался от предложения");
			    SendClientMessage(playerid,col_gray,"Вы отказались от предложения");
			}
			else
			{
			    new _text_string[128];
				format(_text_string,128, "%s заправил Вам автомобиль на %d литров за %i$", PlayerInfo[id_mhnk][name],litres,price_mhnk);
			    SendClientMessage(playerid,col_succes,_text_string);

			    format(_text_string,128, "Вы заправили автомобиль %s на %d литров %i$",PlayerInfo[playerid][name],litres,price_mhnk);
			    SendClientMessage(id_mhnk,col_succes,_text_string);

				give_money(playerid, -price_mhnk);
				give_money(id_mhnk, price_mhnk);

				new vehicleid = GetPlayerVehicleID(playerid);
				if(vehicleid)//PlayerInfo[playerid][p_car_fuel_first]
				{
                	veh_info[vehicleid -1][v_fuel] += float(litres);
                }
                SetPVarInt(playerid,"toplivo",GetPVarInt(playerid,"toplivo") -litres);

 				new mehname [32];
				GetPVarString(id_mhnk,"MehName",mehname,31);

				if(strlen(mehname) > 0)
				{
					format(_text_string, 128,""c_white"<< "c_server"%s "c_white">>\n"c_grey"Топливо: %d л.",mehname,GetPVarInt(id_mhnk,"toplivo") + litres);
					UpdateDynamic3DTextLabelText(PlayerMehText[id_mhnk], -1, _text_string);
				}
				else
				{
					format(_text_string, 128,""c_grey"Топливо: %d л.",GetPVarInt(id_mhnk,"toplivo") + litres);
					UpdateDynamic3DTextLabelText(PlayerMehText[id_mhnk], -1, _text_string);
				}
			}
		 	DeletePVar(id_mhnk,"id_repair");
		 	DeletePVar(id_mhnk,"price_repair");
		  	DeletePVar(playerid,"id_repair");
			return 1;
		}
		case d_repair:
		{
		    new id_mhnk = GetPVarInt(playerid,"id_repair")-1;
		    new price_mhnk = GetPVarInt(id_mhnk,"price_repair");
			if(!response)
			{
			    SendClientMessage(id_mhnk,col_gray,"Игрок отказался от предложения.");
			    SendClientMessage(playerid,col_lblue, "Вы отказались от предложения.");
			}
			else
			{
			    new _text_string[128];
				format(_text_string,128, "%s починил Вам автомобиль за %i$",PlayerInfo[id_mhnk][name],price_mhnk);
			    SendClientMessage(playerid,col_succes,_text_string);

			    format(_text_string,128, "Вы починили автомобиль %s за %i$",PlayerInfo[playerid][name],price_mhnk);
			    SendClientMessage(id_mhnk,col_succes,_text_string);

				give_money(playerid, -price_mhnk);
				give_money(id_mhnk, price_mhnk);

				new _v_id = GetPlayerVehicleID(playerid);
		 		SetVehicleHealth(_v_id, 1000.0);
		 		RepairVehicle(_v_id);
			}
		 	DeletePVar(id_mhnk,"id_repair");
		 	DeletePVar(id_mhnk,"price_repair");
		  	DeletePVar(playerid,"id_repair");
			return 1;
		}
		case d_start_mech:
		{
		    if(!response) return 1;
			if(GetPlayerVehicleID(playerid) != player_rentcar[playerid]) return 1;
			if(player_rentcar[playerid] == INVALID_VEHICLE_ID) return SendClientMessage(playerid,col_gray,"Вы должны быть в рабочей машине.");
			if(veh_info[player_rentcar[playerid] -1][v_type] != vehicle_type_job || veh_info[player_rentcar[playerid] -1][v_owner] != job_mechanic) return SendClientMessage(playerid,col_gray,"Вы должны быть в рабочей машине.");

		    if(strlen(inputtext) > 0)
		    {
		        SetPVarString(playerid,"MehName",(inputtext));
				new _text_string[128];
		    	format(_text_string, 128,""c_white"<< "c_server"%s "c_white">>\n"c_grey"Топлива нет",(inputtext));
	    		PlayerMehText[playerid] = CreateDynamic3DTextLabel(_text_string,-1,0.0,0.0,0.0,15.0,INVALID_PLAYER_ID, player_rentcar[playerid]);
			}
			else
			{
			    PlayerMehText[playerid] = CreateDynamic3DTextLabel(""c_grey"Топлива нет",-1,0.0,0.0,0.0,15.0,INVALID_PLAYER_ID, player_rentcar[playerid]);
			}
			Streamer_SetFloatData(STREAMER_TYPE_3D_TEXT_LABEL,PlayerMehText[playerid],E_STREAMER_ATTACH_OFFSET_Z, 2.0);
		    return 1;
		}
		case d_mech_contract:
		{
			if(!response) return 1;
			if(GetPlayerVehicleID(playerid) != player_rentcar[playerid]) return 1;
			if(player_rentcar[playerid] == INVALID_VEHICLE_ID) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Вы должны быть в рабочей машине.");
			if(veh_info[player_rentcar[playerid] -1][v_type] != vehicle_type_job || veh_info[player_rentcar[playerid] -1][v_owner] != job_mechanic) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Вы должны быть в рабочей машине.");
			new litres = strval(inputtext);
			if(litres < 0 || litres > 5000) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Вы ввели неверное количество топлива.");
			new _b_id = GetPVarInt(playerid,"f_biz");
			if(litres * b_info[_b_id][b_cost] > PlayerInfo[playerid][money]) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"У Вас недостаточно средств для покупки.");

			if((litres%2) > 0 || litres == 0) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Количество бензина должно быть кратным двум.");

			new mehname [32];
			GetPVarString(playerid,"MehName",mehname,31);

			if(strlen(mehname) > 0)
			{
				new _text_string[128];
			    format(_text_string, 128,""c_white"<< "c_server"%s "c_white">>\n"c_grey"Топливо: %d л.",mehname,GetPVarInt(playerid,"toplivo") + litres);
			    UpdateDynamic3DTextLabelText(PlayerMehText[playerid], -1, _text_string);
			}
			else
			{
				new _text_string[128];
		 		format(_text_string, 128,""c_grey"Топливо: %d л.",GetPVarInt(playerid,"toplivo") + litres);
			    UpdateDynamic3DTextLabelText(PlayerMehText[playerid], -1, _text_string);
			}
			give_money(playerid, -b_info[_b_id][b_cost]* litres);
			b_info[_b_id][b_money] += b_info[_b_id][b_cost]* litres;
			b_info[_b_id][b_cash_today] += b_info[_b_id][b_cost]* litres;

			SetPVarInt(playerid,"toplivo",GetPVarInt(playerid,"toplivo") + litres);
			DeletePVar(playerid,"f_biz");
			return 1;
		}
		case d_tune:
		{
            new _v_id = GetPlayerVehicleID(playerid);
		    if(!response)
			{
	 		    SelectTextDraw(playerid, 0xB0C4DEFF);
			    switch(GetPVarInt(playerid, "tuning_page"))
			    {
					case 1:
					{
						if(veh_info[_v_id -1][v_paint] != 3)
						{
							ChangeVehiclePaintjob(_v_id, veh_info[_v_id -1][v_paint]);
						}
						else
						{
							ChangeVehiclePaintjob(_v_id, 3);
							ChangeVehicleColor(_v_id, veh_info[_v_id -1][v_color][0], veh_info[_v_id -1][v_color][1]);
						}
					}
					case 2:
					{

						if(veh_info[_v_id -1][v_paint] != 3)
						{
							ChangeVehiclePaintjob(_v_id, veh_info[_v_id -1][v_paint]);

						}
						else
						{
							ChangeVehiclePaintjob(_v_id, 3);
							ChangeVehicleColor(_v_id, veh_info[_v_id -1][v_color][0], veh_info[_v_id -1][v_color][1]);
						}
					}
					case 3:
					{
					    RemoveVehicleComponent(_v_id, exhaust_models[GetPVarInt(playerid, "component_id")-1]);
					}
					case 4:
					{
					    RemoveVehicleComponent(_v_id, bullbar_models[GetPVarInt(playerid, "component_id")-1]);
					}
					case 5:
					{
					    RemoveVehicleComponent(_v_id, roof_models[GetPVarInt(playerid, "component_id")-1]);
					}
					case 6:
					{
					    RemoveVehicleComponent(_v_id, front_bumper_models[GetPVarInt(playerid, "component_id")-1]);
					}
					case 7:
					{
					    RemoveVehicleComponent(_v_id, rear_bumper_models[GetPVarInt(playerid, "component_id")-1]);
					}
					case 8:
					{
					    RemoveVehicleComponent(_v_id, spoiler_models[GetPVarInt(playerid, "component_id")-1]);
					}
					case 9:
					{
					    RemoveVehicleComponent(_v_id, sideskirt_models[GetPVarInt(playerid, "component_id")-1]);
					}
					case 10:
					{
					    RemoveVehicleComponent(_v_id, tuning_wheels[GetPVarInt(playerid, "component_id")-1]);
					}
				}
				return 1;
			}
//			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
 			if(b_info[GetPVarInt(playerid, "tuning_opened")-1][b_product] < 50) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"В автосервисе закончились запчасти.");

			switch(GetPVarInt(playerid, "tuning_page"))
		    {
			    case 1:// цвет авто
			    {
					if(PlayerInfo[playerid][money] < 1000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств.");
					if(GetPVarInt(playerid, "color_id") ==  1)
					{
				        new i = GetPVarInt(playerid, "color_iter");
						ChangeVehicleColor(_v_id, car_colors[i], veh_info[_v_id -1][v_color][1]);
	                    veh_info[_v_id -1][v_color][0] = car_colors[i];
	                    give_money(playerid, -1000);
						insert_money_log(playerid, INVALID_PLAYER_ID, -1000, "тюнинг");

	                    PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
						b_info[GetPVarInt(playerid, "tuning_opened")-1][b_money] += 1000;
						b_info[GetPVarInt(playerid, "tuning_opened")-1][b_cash_today] += 1000;
					}
					else
					{
				        new i = GetPVarInt(playerid, "color_iter");
	                    veh_info[_v_id -1][v_color][1] = car_colors[i];
	                    give_money(playerid, -1000);
						insert_money_log(playerid, INVALID_PLAYER_ID, -1000, "тюнинг");
						b_info[GetPVarInt(playerid, "tuning_opened")-1][b_money] += 1000;
						b_info[GetPVarInt(playerid, "tuning_opened")-1][b_cash_today] += 1000;
	                    PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
						if(veh_info[_v_id -1][v_paint] != 3)
						{
							ChangeVehicleColor(_v_id, veh_info[_v_id -1][v_color][0], veh_info[_v_id -1][v_color][1]);
							ChangeVehiclePaintjob(_v_id, veh_info[_v_id -1][v_paint]);
						}
						else
						{
							ChangeVehiclePaintjob(_v_id, 3);
							ChangeVehicleColor(_v_id, veh_info[_v_id -1][v_color][0], veh_info[_v_id -1][v_color][1]);
						}
					}
					for(new i = 0; i <= 41; i ++)
					{
						TextDrawHideForPlayer(playerid, td_color[i]);
					}
					TextDrawHideForPlayer(playerid, td_tun_box);

					DeletePVar(playerid, "color_iter");
					DeletePVar(playerid, "color_id");
					DeletePVar(playerid, "tuning_page");
					PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);

			    }
			    case 2: // аэрография
			    {
					if(PlayerInfo[playerid][money] < 5000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств.");
	                veh_info[_v_id -1][v_paint] = GetPVarInt(playerid, "paintjob_id");


                    give_money(playerid, -5000);
					insert_money_log(playerid, INVALID_PLAYER_ID, -5000, "тюнинг пеинт");
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_money] += 15000;
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_cash_today] += 15000;
			    }
			    case 3: //EXHAUST
			    {
 					if(PlayerInfo[playerid][money] < 15000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств.");
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    give_money(playerid, -15000);
        			insert_money_log(playerid, INVALID_PLAYER_ID, -15000, "тюнинг exhaust");
		            veh_info[_v_id -1][v_component][2] = exhaust_models[GetPVarInt(playerid, "component_id")-1];
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_money] += 15000;
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_cash_today] += 15000;
			    }
			    case 4: //BULLBARS
			    {
  					if(PlayerInfo[playerid][money] < 15000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств.");
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    give_money(playerid, -15000);
        			insert_money_log(playerid, INVALID_PLAYER_ID, -15000, "тюнинг bullbars");
		            veh_info[_v_id -1][v_component][3] = bullbar_models[GetPVarInt(playerid, "component_id")-1];
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_money] += 15000;
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_cash_today] += 15000;
			    }
			    case 5: //roof
			    {
 					if(PlayerInfo[playerid][money] < 15000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств.");
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    give_money(playerid, -15000);
        			insert_money_log(playerid, INVALID_PLAYER_ID, -15000, "тюнинг roof");
		            veh_info[_v_id -1][v_component][4] = roof_models[GetPVarInt(playerid, "component_id")-1];
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_money] += 15000;
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_cash_today] += 15000;
			    }
			    case 6: //front bumper
			    {
  					if(PlayerInfo[playerid][money] < 15000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств.");
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    give_money(playerid, -15000);
        			insert_money_log(playerid, INVALID_PLAYER_ID, -15000, "тюнинг bumper");
		            veh_info[_v_id -1][v_component][5] = front_bumper_models[GetPVarInt(playerid, "component_id")-1];
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_money] += 15000;
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_cash_today] += 15000;
			    }
			    case 7: //rear bumper
			    {
 					if(PlayerInfo[playerid][money] < 15000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств.");
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    give_money(playerid, -15000);
        			insert_money_log(playerid, INVALID_PLAYER_ID, -15000, "тюнинг bumper");
		            veh_info[_v_id -1][v_component][6] = rear_bumper_models[GetPVarInt(playerid, "component_id")-1];
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_money] += 15000;
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_cash_today] += 15000;
			    }
			    case 8: //spoiler
			    {
  					if(PlayerInfo[playerid][money] < 15000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств.");
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    give_money(playerid, -15000);
        			insert_money_log(playerid, INVALID_PLAYER_ID, -15000, "тюнинг spoiler");
		            veh_info[_v_id -1][v_component][7] = spoiler_models[GetPVarInt(playerid, "component_id")-1];
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_money] += 15000;
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_cash_today] += 15000;
			    }
			    case 9: //sideskirt
			    {
  					if(PlayerInfo[playerid][money] < 15000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств.");
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    give_money(playerid, -15000);
        			insert_money_log(playerid, INVALID_PLAYER_ID, -15000, "тюнинг sideskirt");
		            veh_info[_v_id -1][v_component][8] = sideskirt_models[GetPVarInt(playerid, "component_id")-1];
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_money] += 15000;
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_cash_today] += 15000;
			    }
			    case 10: // колёса
			    {
 					if(PlayerInfo[playerid][money] < 5000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств.");
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    give_money(playerid, -5000);
					insert_money_log(playerid, INVALID_PLAYER_ID, -5000, "тюнинг wheels");
					veh_info[_v_id -1][v_component][9] = tuning_wheels[GetPVarInt(playerid, "component_id")-1];
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_money] += 5000;
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_cash_today] += 5000;
			    }
			    case 11: // hydraulics
			    {
 					if(PlayerInfo[playerid][money] < 5000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств.");
					AddVehicleComponent(_v_id, 1087);
                    give_money(playerid, -5000);
					insert_money_log(playerid, INVALID_PLAYER_ID, -5000, "тюнинг hydra");
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					veh_info[_v_id -1][v_component][0] = 1087;
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_money] += 5000;
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_cash_today] += 5000;
			    }
			    case 12: // NITRO
			    {
 					if(PlayerInfo[playerid][money] < 10000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств.");
					AddVehicleComponent(_v_id, 1010);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    give_money(playerid, -10000);
					insert_money_log(playerid, INVALID_PLAYER_ID, -10000, "тюнинг nitro");
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_money] += 10000;
					b_info[GetPVarInt(playerid, "tuning_opened")-1][b_cash_today] += 10000;
                    veh_info[_v_id -1][v_component][1] = 1010;
			    }
		    }
			b_info[GetPVarInt(playerid, "tuning_opened")-1][b_product] -= 50;
			new query_string[266];
			format(query_string, sizeof(query_string),"UPDATE `users_vehicles` SET `v_components` = '%d|%d|%d|%d|%d|%d|%d|%d|%d|%d',`v_color_1` = '%d',`v_color_2` = '%d',`v_paint`='%d' WHERE `v_id` = '%d' LIMIT 1",
			veh_info[_v_id -1][v_component][0],
			veh_info[_v_id -1][v_component][1],
			veh_info[_v_id -1][v_component][2],
			veh_info[_v_id -1][v_component][3],
			veh_info[_v_id -1][v_component][4],
			veh_info[_v_id -1][v_component][5],
			veh_info[_v_id -1][v_component][6],
			veh_info[_v_id -1][v_component][7],
			veh_info[_v_id -1][v_component][8],
			veh_info[_v_id -1][v_component][9],
			veh_info[_v_id -1][v_color][0],
			veh_info[_v_id -1][v_color][1],
			veh_info[_v_id -1][v_paint],
			veh_info[_v_id -1][v_id]);
			mysql_tquery(sql_connection, query_string);
			SelectTextDraw(playerid, 0xB0C4DEFF);
		}
		case d_truck_buy:
		{
			if(!response) return 1;
			if(strval(inputtext)< 1 || strval(inputtext)> 10000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете загрузить менее 1 кг. и более 10.000 кг.");
			new dorm_id = -1;
			if(used_area[playerid] == loading_area[DORM_SAWMILL]) dorm_id = 0;
			else if(used_area[playerid] == loading_area[DORM_MINE]) dorm_id = 1;
			else if(used_area[playerid] == loading_area[DORM_FACTORY]) dorm_id = 4;

			if(strval(inputtext)> dorm_count[dorm_id]) return  SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"На складе столько нет.");
			if(PlayerInfo[playerid][money] < strval(inputtext)* 10) return  SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств для закупки.");
			if(player_trailer[playerid] != INVALID_VEHICLE_ID) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас уже есть груз.");



			new queue_id = -1;
			if(dorm_id == 1)
			{
				for(new i = 9; i >= 0; i --)
				{
					if(dorm_queue[DORM_MINE][i] == playerid)
					{
						SendClientMessage(playerid, col_gray, "Вы уже стоите в очереди.");
						return 1;
					}
					if(i && dorm_queue[DORM_MINE][i] == INVALID_PLAYER_ID) continue;
					dorm_queue[DORM_MINE][i] = playerid;
					queue_id = i + 1;
					break;
				}
			}
			else if(dorm_id == 0)
			{
				for(new i = 9; i >= 0; i --)
				{
					if(dorm_queue[DORM_SAWMILL][i] == playerid)
					{
						SendClientMessage(playerid, col_gray, "Вы уже стоите в очереди.");
						return 1;
					}
					if(i && dorm_queue[DORM_SAWMILL][i] == INVALID_PLAYER_ID) continue;
					dorm_queue[DORM_SAWMILL][i] = playerid;
					queue_id = i + 1;
					break;
				}
			}
			else if(dorm_id == 4)
			{
				for(new i = 9; i >= 0; i --)
				{
					if(dorm_queue[DORM_FACTORY][i] == playerid)
					{
						SendClientMessage(playerid, col_gray, "Вы уже стоите в очереди.");
						return 1;
					}
					if(i && dorm_queue[DORM_FACTORY][i] == INVALID_PLAYER_ID) continue;
					dorm_queue[DORM_FACTORY][i] = playerid;
					queue_id = i + 1;
					break;
				}
			}

			if(queue_id == -1)
			{
				SendClientMessage(playerid, col_gray, "Очередь заполнена, попробуйте позже.");
				return 1;
			}

			SetPVarInt(playerid, "truck_waiting", dorm_id + 1);
			SetPVarInt(playerid, "truck_count", strval(inputtext));
			new _string[128];
			SendClientMessage(playerid, col_gray, "* Вы встали в очередь на загрузку фуры. Ожидайте.");
			format(_string, sizeof(_string), "Вы номер %d в очереди.", queue_id);
			SendClientMessage(playerid, -1, _string);

			if(dorm_id == 1)
			{
				format(_string, sizeof(_string), "Куплено: Металл %d кг. | %d$", strval(inputtext), strval(inputtext)* 10);
			}
			else if(dorm_id == 0)
			{
				format(_string, sizeof(_string), "Куплено: Древесина %d кг. | %d$", strval(inputtext), strval(inputtext)* 10);
			}
			else if(dorm_id == 4)
			{
				format(_string, sizeof(_string), "Куплено: Заготовки %d кг. | %d$", strval(inputtext), strval(inputtext)* 10);
			}

			SendClientMessage(playerid, col_succes, _string);
			give_money(playerid, -strval(inputtext)* 10);
			insert_money_log(playerid, INVALID_PLAYER_ID, strval(inputtext)* 10, "закупка дальнобойщика");
		}
		case d_tun_engine:
		{
			if(!response) return SelectTextDraw(playerid, 0xB0C4DEFF);
			new _v_id = GetPlayerVehicleID(playerid);
			if(veh_info[_v_id -1][v_pt_engine][listitem])
			{
				SendClientMessage(playerid, col_gray, "Деталь уже установлена.");
				global_string[0] = EOS;
				new line_string[86];
				for(new i; i < 5; i ++)
				{
					if(veh_info[_v_id -1][v_pt_engine][i])
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"Установлено\n", engine_ptune[i]);
					}
					else
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"%d$\n", engine_ptune[i], engine_ptune_price[i]);
					}
					strcat(global_string, line_string);
				}
				show_dialog(playerid, d_tun_engine, DIALOG_STYLE_TABLIST, ""c_server"Производительность двигателя", global_string, "Купить", "Закрыть");
				return 1;
			}
			SetPVarInt(playerid, "performance_listitem", listitem);
			new _dialog_string[128];
			format(_dialog_string, sizeof(_dialog_string), ""c_white"Вы действительно желаете установить %s?\n\nСтоимость "c_green"%d$",
			engine_ptune[listitem], engine_ptune_price[listitem]);

			new Float:td_y = -(veh_info[_v_id -1][v_engine_boost] + engine_ptune_boost[listitem]) * 328.57;
			PlayerTextDrawTextSize(playerid, ptd_performance[playerid][0], 11.000000, td_y);
			PlayerTextDrawHide(playerid, ptd_performance[playerid][0]);
			PlayerTextDrawShow(playerid, ptd_performance[playerid][0]);

			show_dialog(playerid, d_tun_engine_accept, DIALOG_STYLE_MSGBOX, ""c_server"Установка детали", _dialog_string, "Купить", "Назад");
		}
		case d_tun_engine_accept:
		{
			if(!response)
			{
				new _v_id = GetPlayerVehicleID(playerid);
				new Float:td_y = -veh_info[_v_id -1][v_engine_boost]* 328.57;
				PlayerTextDrawTextSize(playerid, ptd_performance[playerid][0], 11.000000, td_y);
				PlayerTextDrawHide(playerid, ptd_performance[playerid][0]);
				PlayerTextDrawShow(playerid, ptd_performance[playerid][0]);
				DeletePVar(playerid, "performance_listitem");


				global_string[0] = EOS;
				new line_string[86];
				for(new i; i < 5; i ++)
				{
					if(veh_info[_v_id -1][v_pt_engine][i])
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"Установлено\n", engine_ptune[i]);
					}
					else
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"%d$\n", engine_ptune[i], engine_ptune_price[i]);
					}
					strcat(global_string, line_string);
				}
				show_dialog(playerid, d_tun_engine, DIALOG_STYLE_TABLIST, ""c_server"Производительность двигателя", global_string, "Купить", "Закрыть");
				return 1;
			}
			new list_item = GetPVarInt(playerid, "performance_listitem");
			DeletePVar(playerid, "performance_listitem");

			new _v_id = GetPlayerVehicleID(playerid);
			if(PlayerInfo[playerid][money] < engine_ptune_price[list_item])
			{
				SendClientMessage(playerid, col_gray, "Недостаточно средств для приобретения.");

				global_string[0] = EOS;
				new line_string[86];
				for(new i; i < 5; i ++)
				{
					if(veh_info[_v_id -1][v_pt_engine][i])
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"Установлено\n", engine_ptune[i]);
					}
					else
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"%d$\n", engine_ptune[i], engine_ptune_price[i]);
					}
					strcat(global_string, line_string);
				}
				show_dialog(playerid, d_tun_engine, DIALOG_STYLE_TABLIST, ""c_server"Производительность двигателя", global_string, "Купить", "Закрыть");
				return 1;

			}
			new _b_id = GetPVarInt(playerid, "ptuning_opened")-1;
			if(b_info[_b_id][b_product] < 200)
			{
				SendClientMessage(playerid, col_gray, "Недостаточно продуктов на складе бизнеса.");

				global_string[0] = EOS;
				new line_string[86];
				for(new i; i < 5; i ++)
				{
					if(veh_info[_v_id -1][v_pt_engine][i])
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"Установлено\n", engine_ptune[i]);
					}
					else
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"%d$\n", engine_ptune[i], engine_ptune_price[i]);
					}
					strcat(global_string, line_string);
				}
				show_dialog(playerid, d_tun_engine, DIALOG_STYLE_TABLIST, ""c_server"Производительность двигателя", global_string, "Купить", "Закрыть");
				return 1;
			}


			give_money(playerid, -engine_ptune_price[list_item]);

			if(b_info[_b_id][b_id] == 1 || b_info[_b_id][b_id] == 4)
			{
				b_info[_b_id][b_money] += floatround(engine_ptune_price[list_item]* 0.5);
				b_info[_b_id][b_cash_today] += floatround(engine_ptune_price[list_item]* 0.5);
			}
			else
			{
				b_info[_b_id][b_money] += floatround(engine_ptune_price[list_item]* 0.8);
				b_info[_b_id][b_cash_today] += floatround(engine_ptune_price[list_item]* 0.8);
			}
			b_info[_b_id][b_product] -= 120;
			insert_money_log(playerid, INVALID_PLAYER_ID, -engine_ptune_price[list_item], "перфоманс тюнинг");
			veh_info[_v_id -1][v_engine_boost] += engine_ptune_boost[list_item];
			SendClientMessage(playerid, col_gray, "* Вы успешно установили улучшение.");
			veh_info[_v_id -1][v_pt_engine][list_item] = 1;

			new query_string[146];
			format(query_string, sizeof(query_string),"UPDATE `users_vehicles` SET `v_eng_details` = '%d|%d|%d|%d|%d',`v_engine_boost` = '%f' WHERE `v_id` = '%d' LIMIT 1",
			veh_info[_v_id -1][v_pt_engine][0],
			veh_info[_v_id -1][v_pt_engine][1],
			veh_info[_v_id -1][v_pt_engine][2],
			veh_info[_v_id -1][v_pt_engine][3],
			veh_info[_v_id -1][v_pt_engine][4],
			veh_info[_v_id -1][v_engine_boost],
			veh_info[_v_id -1][v_id]);
			mysql_tquery(sql_connection, query_string, "", "");


			new Float:td_y = -veh_info[_v_id -1][v_engine_boost]* 328.57;

			PlayerTextDrawTextSize(playerid, ptd_performance[playerid][1], 11.000000, td_y);
			PlayerTextDrawTextSize(playerid, ptd_performance[playerid][0], 11.000000, td_y);
			PlayerTextDrawHide(playerid, ptd_performance[playerid][0]);
			PlayerTextDrawHide(playerid, ptd_performance[playerid][1]);
			PlayerTextDrawShow(playerid, ptd_performance[playerid][0]);
			PlayerTextDrawShow(playerid, ptd_performance[playerid][1]);
		}
		case d_tun_brake:
		{
			if(!response) return SelectTextDraw(playerid, 0xB0C4DEFF);
			new _v_id = GetPlayerVehicleID(playerid);
			if(veh_info[_v_id -1][v_pt_brake][listitem])
			{
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Деталь уже установлена.");
				global_string[0] = EOS;
				new line_string[86];
				for(new i; i < 5; i ++)
				{
					if(veh_info[_v_id -1][v_pt_brake][i])
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"Установлено\n", brake_ptune[i]);
					}
					else
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"%d$\n", brake_ptune[i], brake_ptune_price[i]);
					}
					strcat(global_string, line_string);
				}
				show_dialog(playerid, d_tun_brake, DIALOG_STYLE_TABLIST, ""c_server"Тормозная система", global_string, "Купить", "Закрыть");
				return 1;
			}
			SetPVarInt(playerid, "performance_listitem", listitem);
			new _dialog_string[128];
			format(_dialog_string, sizeof(_dialog_string), ""c_white"Вы действительно желаете установить %s?\n\nСтоимость "c_green"%d$",
			brake_ptune[listitem], brake_ptune_price[listitem]);

			new Float:td_y = -(veh_info[_v_id -1][v_brake_boost] + brake_ptune_boost[listitem]) * 12.7777;
			PlayerTextDrawTextSize(playerid, ptd_performance[playerid][2], 11.000000, td_y);
			PlayerTextDrawHide(playerid, ptd_performance[playerid][2]);
			PlayerTextDrawShow(playerid, ptd_performance[playerid][2]);

			show_dialog(playerid, d_tun_brake_accept, DIALOG_STYLE_MSGBOX, ""c_server"Установка детали", _dialog_string, "Купить", "Назад");
		}
		case d_tun_brake_accept:
		{
			if(!response)
			{
				new _v_id = GetPlayerVehicleID(playerid);
				new Float:td_y = -veh_info[_v_id -1][v_brake_boost]* 12.7777;
				PlayerTextDrawTextSize(playerid, ptd_performance[playerid][2], 11.000000, td_y);
				PlayerTextDrawHide(playerid, ptd_performance[playerid][2]);
				PlayerTextDrawShow(playerid, ptd_performance[playerid][2]);
				DeletePVar(playerid, "performance_listitem");


				global_string[0] = EOS;
				new line_string[86];
				for(new i; i < 5; i ++)
				{
					if(veh_info[_v_id -1][v_pt_brake][i])
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"Установлено\n", brake_ptune[i]);
					}
					else
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"%d$\n", brake_ptune[i], brake_ptune_price[i]);
					}
					strcat(global_string, line_string);
				}
				show_dialog(playerid, d_tun_brake, DIALOG_STYLE_TABLIST, ""c_server"Тормозная система", global_string, "Купить", "Закрыть");
				return 1;
			}
			new list_item = GetPVarInt(playerid, "performance_listitem");
			DeletePVar(playerid, "performance_listitem");
			new _v_id = GetPlayerVehicleID(playerid);
			if(PlayerInfo[playerid][money] < brake_ptune_price[list_item])
			{
				SendClientMessage(playerid, col_gray, "Недостаточно средств для приобретения.");

				global_string[0] = EOS;
				new line_string[86];
				for(new i; i < 5; i ++)
				{
					if(veh_info[_v_id -1][v_pt_brake][i])
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"Установлено\n", brake_ptune[i]);
					}
					else
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"%d$\n", brake_ptune[i], brake_ptune_price[i]);
					}
					strcat(global_string, line_string);
				}
				show_dialog(playerid, d_tun_brake, DIALOG_STYLE_TABLIST, ""c_server"Тормозная система", global_string, "Купить", "Закрыть");
				return 1;

			}
			new _b_id = GetPVarInt(playerid, "ptuning_opened")-1;
			if(b_info[_b_id][b_product] < 200)
			{
				SendClientMessage(playerid, col_gray, "Недостаточно продуктов на складе бизнеса.");

				global_string[0] = EOS;
				new line_string[86];
				for(new i; i < 5; i ++)
				{
					if(veh_info[_v_id -1][v_pt_engine][i])
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"Установлено\n", engine_ptune[i]);
					}
					else
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"%d$\n", engine_ptune[i], engine_ptune_price[i]);
					}
					strcat(global_string, line_string);
				}
				show_dialog(playerid, d_tun_engine, DIALOG_STYLE_TABLIST, ""c_server"Производительность двигателя", global_string, "Купить", "Закрыть");
				return 1;
			}
			give_money(playerid, -brake_ptune_price[list_item]);
			if(b_info[_b_id][b_id] == 1 || b_info[_b_id][b_id] == 4)
			{
				b_info[_b_id][b_money] += floatround(engine_ptune_price[list_item]* 0.5);
				b_info[_b_id][b_cash_today] += floatround(engine_ptune_price[list_item]* 0.5);
			}
			else
			{
				b_info[_b_id][b_money] += floatround(engine_ptune_price[list_item]* 0.8);
				b_info[_b_id][b_cash_today] += floatround(engine_ptune_price[list_item]* 0.8);
			}

			b_info[_b_id][b_product] -= 120;
			insert_money_log(playerid, INVALID_PLAYER_ID, -brake_ptune_price[list_item], "перфоманс тюнинг");
			veh_info[_v_id -1][v_brake_boost] += brake_ptune_boost[list_item];
			SendClientMessage(playerid, col_gray, "* Вы успешно установили улучшение.");
			veh_info[_v_id -1][v_pt_brake][list_item] = 1;

			new query_string[146];
			format(query_string, sizeof(query_string),"UPDATE `users_vehicles` SET `v_brake_details` = '%d|%d|%d|%d|%d',`v_brake_boost` = '%f' WHERE `v_id` = '%d' LIMIT 1",
			veh_info[_v_id -1][v_pt_brake][0],
			veh_info[_v_id -1][v_pt_brake][1],
			veh_info[_v_id -1][v_pt_brake][2],
			veh_info[_v_id -1][v_pt_brake][3],
			veh_info[_v_id -1][v_pt_brake][4],
			veh_info[_v_id -1][v_brake_boost],
			veh_info[_v_id -1][v_id]);
			mysql_tquery(sql_connection, query_string, "", "");
			new Float:td_y = -veh_info[_v_id -1][v_brake_boost]* 12.7777;

			PlayerTextDrawTextSize(playerid, ptd_performance[playerid][3], 11.000000, td_y);
			PlayerTextDrawTextSize(playerid, ptd_performance[playerid][2], 11.000000, td_y);
			PlayerTextDrawHide(playerid, ptd_performance[playerid][2]);
			PlayerTextDrawHide(playerid, ptd_performance[playerid][3]);
			PlayerTextDrawShow(playerid, ptd_performance[playerid][2]);
			PlayerTextDrawShow(playerid, ptd_performance[playerid][3]);
		}
		case d_tun_stability:
		{
			if(!response) return SelectTextDraw(playerid, 0xB0C4DEFF);
			new _v_id = GetPlayerVehicleID(playerid);
			if(veh_info[_v_id -1][v_pt_stability][listitem])
			{
				SendClientMessage(playerid, col_gray, "Деталь уже установлена.");
				global_string[0] = EOS;
				new line_string[86];
				for(new i; i < 5; i ++)
				{
					if(veh_info[_v_id -1][v_pt_stability][i])
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"Установлено\n", stability_ptune[i]);
					}
					else
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"%d$\n", stability_ptune[i], stability_ptune_price[i]);
					}
					strcat(global_string, line_string);
				}
				show_dialog(playerid, d_tun_stability, DIALOG_STYLE_TABLIST, ""c_server"Усиление устойчивости", global_string, "Купить", "Закрыть");
				return 1;
			}
			SetPVarInt(playerid, "performance_listitem", listitem);
			new _dialog_string[128];
			format(_dialog_string, sizeof(_dialog_string), ""c_white"Вы действительно желаете установить %s?\n\nСтоимость "c_green"%d$",
			stability_ptune[listitem], stability_ptune_price[listitem]);

			new Float:td_y = -(veh_info[_v_id -1][v_stability_boost] + stability_ptune_boost[listitem]);
			PlayerTextDrawTextSize(playerid, ptd_performance[playerid][4], 11.000000, td_y);
			PlayerTextDrawHide(playerid, ptd_performance[playerid][4]);
			PlayerTextDrawShow(playerid, ptd_performance[playerid][4]);

			show_dialog(playerid, d_tun_stability_accept, DIALOG_STYLE_MSGBOX, ""c_server"Установка детали", _dialog_string, "Купить", "Назад");
		}
		case d_tun_stability_accept:
		{
			if(!response)
			{
				new _v_id = GetPlayerVehicleID(playerid);
				new Float:td_y = -veh_info[_v_id -1][v_stability_boost];
				PlayerTextDrawTextSize(playerid, ptd_performance[playerid][4], 11.000000, td_y);
				PlayerTextDrawHide(playerid, ptd_performance[playerid][4]);
				PlayerTextDrawShow(playerid, ptd_performance[playerid][4]);
				DeletePVar(playerid, "performance_listitem");


				global_string[0] = EOS;
				new line_string[86];
				for(new i; i < 5; i ++)
				{
					if(veh_info[_v_id -1][v_pt_stability][i])
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"Установлено\n", stability_ptune[i]);
					}
					else
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"%d$\n", stability_ptune[i], stability_ptune_price[i]);
					}
					strcat(global_string, line_string);
				}
				show_dialog(playerid, d_tun_stability, DIALOG_STYLE_TABLIST, ""c_server"Усиление устойчивости", global_string, "Купить", "Закрыть");
				return 1;
			}
			new list_item = GetPVarInt(playerid, "performance_listitem");
			DeletePVar(playerid, "performance_listitem");
			new _v_id = GetPlayerVehicleID(playerid);
			if(PlayerInfo[playerid][money] < stability_ptune_price[list_item])
			{
				SendClientMessage(playerid, col_gray, "Недостаточно средств для приобретения.");

				global_string[0] = EOS;
				new line_string[86];
				for(new i; i < 5; i ++)
				{
					if(veh_info[_v_id -1][v_pt_stability][i])
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"Установлено\n", stability_ptune[i]);
					}
					else
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"%d$\n", stability_ptune[i], stability_ptune_price[i]);
					}
					strcat(global_string, line_string);
				}
				show_dialog(playerid, d_tun_stability, DIALOG_STYLE_TABLIST, ""c_server"Усиление устойчивости", global_string, "Купить", "Закрыть");
				return 1;

			}
			new _b_id = GetPVarInt(playerid, "ptuning_opened")-1;
			if(b_info[_b_id][b_product] < 200)
			{
				SendClientMessage(playerid, col_gray, "Недостаточно продуктов на складе бизнеса.");

				global_string[0] = EOS;
				new line_string[86];
				for(new i; i < 5; i ++)
				{
					if(veh_info[_v_id -1][v_pt_engine][i])
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"Установлено\n", engine_ptune[i]);
					}
					else
					{
						format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"%d$\n", engine_ptune[i], engine_ptune_price[i]);
					}
					strcat(global_string, line_string);
				}
				show_dialog(playerid, d_tun_engine, DIALOG_STYLE_TABLIST, ""c_server"Производительность двигателя", global_string, "Купить", "Закрыть");
				return 1;
			}

			give_money(playerid, -stability_ptune_price[list_item]);
			insert_money_log(playerid, INVALID_PLAYER_ID, -stability_ptune_price[list_item], "перфоманс тюнинг");
			veh_info[_v_id -1][v_stability_boost] += stability_ptune_boost[list_item];
			SendClientMessage(playerid, col_gray, "* Вы успешно установили улучшение.");
			veh_info[_v_id -1][v_pt_stability][list_item] = 1;


			if(b_info[_b_id][b_id] == 1 || b_info[_b_id][b_id] == 4)
			{
				b_info[_b_id][b_money] += floatround(stability_ptune_price[list_item]* 0.5);
				b_info[_b_id][b_cash_today] += floatround(stability_ptune_price[list_item]* 0.5);
			}
			else
			{
				b_info[_b_id][b_money] += floatround(stability_ptune_price[list_item]* 0.8);
				b_info[_b_id][b_cash_today] += floatround(stability_ptune_price[list_item]* 0.8);
			}

			b_info[_b_id][b_product] -= 120;

			new query_string[146];
			format(query_string, sizeof(query_string),"UPDATE `users_vehicles` SET `v_stab_details` = '%d|%d|%d|%d|%d',`v_stability_boost` = '%f' WHERE `v_id` = '%d' LIMIT 1",
			veh_info[_v_id -1][v_pt_stability][0],
			veh_info[_v_id -1][v_pt_stability][1],
			veh_info[_v_id -1][v_pt_stability][2],
			veh_info[_v_id -1][v_pt_stability][3],
			veh_info[_v_id -1][v_pt_stability][4],
			veh_info[_v_id -1][v_stability_boost],
			veh_info[_v_id -1][v_id]);
			mysql_tquery(sql_connection, query_string, "", "");
			new Float:td_y = -veh_info[_v_id -1][v_stability_boost];

			PlayerTextDrawTextSize(playerid, ptd_performance[playerid][5], 11.000000, td_y);
			PlayerTextDrawTextSize(playerid, ptd_performance[playerid][4], 11.000000, td_y);
			PlayerTextDrawHide(playerid, ptd_performance[playerid][4]);
			PlayerTextDrawHide(playerid, ptd_performance[playerid][5]);
			PlayerTextDrawShow(playerid, ptd_performance[playerid][4]);
			PlayerTextDrawShow(playerid, ptd_performance[playerid][5]);


		}
		case d_skin_shop:
		{
			if(!response) return 1;
			if(listitem == 0)
			{

				SetPVarInt(playerid, "p_skin_shop", 1);
				TogglePlayerSpectating(playerid, false);
				TogglePlayerControllable(playerid, true);
				set_world(playerid, playerid);
				SetPlayerPos(playerid, 2068.7715,1235.3546,1019.0800);
				SetPlayerFacingAngle(playerid, 229.4997);
				TogglePlayerControllable(playerid, 0);

				SetPlayerCameraPos(playerid, 2071.4302,1233.3101,1020.0800);
				SetPlayerCameraLookAt(playerid, 2068.7715,1235.3546,1019.0800);

				SelectTextDraw(playerid, 0xB0C4DEFF);
				for(new i = 0; i < 19; i ++)
				{
					TextDrawShowForPlayer(playerid, td_skinshop[i]);
				}

				td_skinshop_price[playerid] = CreatePlayerTextDraw(playerid,321.000000, 340.000000, "0$");
				PlayerTextDrawAlignment(playerid, td_skinshop_price[playerid], 2);
				PlayerTextDrawBackgroundColor(playerid, td_skinshop_price[playerid], -1);
				PlayerTextDrawFont(playerid, td_skinshop_price[playerid], 1);
				PlayerTextDrawLetterSize(playerid, td_skinshop_price[playerid], 0.267082, 1.040001);
				PlayerTextDrawColor(playerid, td_skinshop_price[playerid], -1);
				PlayerTextDrawSetOutline(playerid, td_skinshop_price[playerid], 0);
				PlayerTextDrawSetProportional(playerid, td_skinshop_price[playerid], 1);
				PlayerTextDrawSetShadow(playerid, td_skinshop_price[playerid], 0);
				PlayerTextDrawSetSelectable(playerid, td_skinshop_price[playerid], 0);
				PlayerTextDrawShow(playerid, td_skinshop_price[playerid]);
				SetPlayerSkin(playerid, shop_skins[PlayerInfo[playerid][gender]][0]);
				new _td_string[12];
				format(_td_string, 12, "%d$", shop_skins_price[PlayerInfo[playerid][gender]][0]);
				PlayerTextDrawSetString(playerid, td_skinshop_price[playerid], _td_string);
			}
			else if(listitem == 1)
			{
				show_dialog(playerid, d_accessories, DIALOG_STYLE_LIST, ""c_server"Аксессуары", ""c_grey"-"c_white"Наушники\n"c_grey"-"c_white"Шапки\n"c_grey"-"c_white"Панамы\n"c_grey"-"c_white"Кепки\n"c_grey"-"c_white"Каски\n"c_grey"-"c_white"Береты\n"c_grey"-"c_white"Парики\n"c_grey"-"c_white"Очки\n"c_grey"-"c_white"Повязки\n"c_grey"-"c_white"Шляпы\n"c_grey"-"c_white"Часы\n"c_grey"-"c_white"Портфели\n"c_grey"-"c_white"Банданы", "Выбрать", "Закрыть");
			}
		}

		case d_accessories:
		{
			if(!response) return 1;
			GiveItem(playerid, accessories_items[listitem][0]);

			SetPVarInt(playerid, "p_acc_listitem", listitem + 1);
			TogglePlayerSpectating(playerid, false);
			TogglePlayerControllable(playerid, true);
			set_world(playerid, playerid);
			SetPlayerPos(playerid, 2068.7715,1235.3546,1019.0800);
			SetPlayerFacingAngle(playerid, 229.4997);
			TogglePlayerControllable(playerid, 0);

			SetPlayerCameraPos(playerid, 2071.4302,1233.3101,1020.0800);
			SetPlayerCameraLookAt(playerid, 2068.7715,1235.3546,1019.0800);

			SelectTextDraw(playerid, 0xB0C4DEFF);
			for(new i = 0; i < 11; i ++)
			{
				TextDrawShowForPlayer(playerid, acc_td[i]);
			}
			acc_ptd[playerid] = CreatePlayerTextDraw(playerid, 310.784210, 366.750274, "PRICE:_~GR~1000$");
			PlayerTextDrawLetterSize(playerid, acc_ptd[playerid], 0.228705, 0.777499);
			PlayerTextDrawAlignment(playerid, acc_ptd[playerid], 2);
			PlayerTextDrawColor(playerid, acc_ptd[playerid], -1);
			PlayerTextDrawSetShadow(playerid, acc_ptd[playerid], 0);
			PlayerTextDrawSetOutline(playerid, acc_ptd[playerid], 0);
			PlayerTextDrawBackgroundColor(playerid, acc_ptd[playerid], 255);
			PlayerTextDrawFont(playerid, acc_ptd[playerid], 1);
			PlayerTextDrawSetProportional(playerid, acc_ptd[playerid], 1);
			PlayerTextDrawSetShadow(playerid, acc_ptd[playerid], 0);

			new _td_string[24];
			format(_td_string, 24, "PRICE:_~GR~%d$", accessories_items_price[listitem][0]);
			PlayerTextDrawSetString(playerid, acc_ptd[playerid], _td_string);
			PlayerTextDrawShow(playerid, acc_ptd[playerid]);
		}
		case d_buy_accessories:
		{
			if(!response) return SelectTextDraw(playerid, 0xB0C4DEFF);
			new line_string[42];
			global_string[0] = EOS;
			strcat(global_string, ""c_server"Выберите слот аксессуара\n");
			for(new j = 0; j < 8; j ++)
			{
				if(PlayerInfo[playerid][accessories][j] == 0)
				{
					strcat(global_string, ""c_grey"-Пусто\n");
				}
				else
				{
					format(line_string, 42, ""c_white"-%s\n", get_accessorie_name(PlayerInfo[playerid][accessories][j]));
					strcat(global_string, line_string);
				}
			}
			show_dialog(playerid, d_accept_accessories, DIALOG_STYLE_LIST, ""c_server"Аксессуары", global_string, "Выбрать", "Назад");
		}
		case d_accept_accessories:
		{
			if(!response) return SelectTextDraw(playerid, 0xB0C4DEFF);
			if(listitem == 0)
			{
				new line_string[42];
				global_string[0] = EOS;
				strcat(global_string, ""c_server"Выберите слот аксессуара\n");
				for(new j = 0; j < 8; j ++)
				{
					if(PlayerInfo[playerid][accessories][j] == 0)
					{
						strcat(global_string, ""c_grey"-Пусто\n");
					}
					else
					{
						format(line_string, 42, ""c_white"-%s\n", get_accessorie_name(PlayerInfo[playerid][accessories][j]));
						strcat(global_string, line_string);
					}
				}
				show_dialog(playerid, d_accept_accessories, DIALOG_STYLE_LIST, ""c_server"Аксессуары", global_string, "Выбрать", "Назад");
				return 1;
			}


			if(PlayerInfo[playerid][money] < accessories_items_price[GetPVarInt(playerid, "p_acc_listitem")-1][GetPVarInt(playerid, "p_acc_id")]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств для приобретения аксессуара.");
			give_money(playerid, -accessories_items_price[GetPVarInt(playerid, "p_acc_listitem")-1][GetPVarInt(playerid, "p_acc_id")]);
			insert_money_log(playerid, INVALID_PLAYER_ID, -accessories_items_price[GetPVarInt(playerid, "p_acc_listitem")-1][GetPVarInt(playerid, "p_acc_id")], "Покупка аксессуара");

			new b = GetPVarInt(playerid, "p_biz_id")-1;
			b_info[b][b_money] += floatround(accessories_items_price[GetPVarInt(playerid, "p_acc_listitem")-1][GetPVarInt(playerid, "p_acc_id")]* 0.03);
			b_info[b][b_product] -= RandomEx(100, 170);
			b_info[b][b_cash_today] += floatround(accessories_items_price[GetPVarInt(playerid, "p_acc_listitem")-1][GetPVarInt(playerid, "p_acc_id")]* 0.03);

			PlayerInfo[playerid][accessories_used][listitem -1] = 0;
			PlayerInfo[playerid][accessories][listitem -1] = accessories_items[GetPVarInt(playerid, "p_acc_listitem")-1][GetPVarInt(playerid, "p_acc_id")];
			new _query[136];
			format(_query, sizeof(_query), "UPDATE `users` SET `u_accessories_used`='%d|%d|%d|%d|%d%d|%d|%d' WHERE `u_id` = '%d'",
			PlayerInfo[playerid][accessories_used][0], PlayerInfo[playerid][accessories_used][1], PlayerInfo[playerid][accessories_used][2],
			PlayerInfo[playerid][accessories_used][3], PlayerInfo[playerid][accessories_used][4], PlayerInfo[playerid][accessories_used][5], PlayerInfo[playerid][accessories_used][6],
			PlayerInfo[playerid][accessories_used][7], PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, _query);

			format(_query, sizeof(_query), "UPDATE `users` SET `u_accessories`='%d|%d|%d|%d|%d%d|%d|%d' WHERE `u_id` = '%d'",
			PlayerInfo[playerid][accessories][0], PlayerInfo[playerid][accessories][1], PlayerInfo[playerid][accessories][2],
			PlayerInfo[playerid][accessories][3], PlayerInfo[playerid][accessories][4], PlayerInfo[playerid][accessories][5], PlayerInfo[playerid][accessories][6],
			PlayerInfo[playerid][accessories][7], PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, _query);


			DeletePVar(playerid, "p_acc_id");
			DeletePVar(playerid, "p_acc_listitem");

			TogglePlayerControllable(playerid, true);
			SetCameraBehindPlayer(playerid);
			set_world(playerid, 0);

			for(new i = 0; i < 11; i ++)
			{
				TextDrawHideForPlayer(playerid, acc_td[i]);
				if(i >= 5)
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
				}
			}
			for(new j = 0; j < 8; j ++)
			{
				if(PlayerInfo[playerid][accessories_used][j] == 0) continue;
				GiveItem(playerid, PlayerInfo[playerid][accessories][j]);
			}

			CancelSelectTextDraw(playerid);
			PlayerTextDrawDestroy(playerid, acc_ptd[playerid]);
			acc_ptd[playerid] = PlayerText:-1;


			set_world(playerid, b_info[b][b_id] + 1000);
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно приобрели аксессуар. Панель управления аксессуарами находится в личном меню.");

		}

		case d_accessories_exit:
		{
			if(!response) return SelectTextDraw(playerid, 0xB0C4DEFF);

			DeletePVar(playerid, "p_acc_id");
			DeletePVar(playerid, "p_acc_listitem");

			TogglePlayerControllable(playerid, true);
			SetCameraBehindPlayer(playerid);
			set_world(playerid, 0);

			for(new i = 0; i < 11; i ++)
			{
				TextDrawHideForPlayer(playerid, acc_td[i]);
				if(i >= 5)
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
				}
			}
			for(new j = 0; j < 8; j ++)
			{
				if(PlayerInfo[playerid][accessories_used][j] == 0) continue;
				GiveItem(playerid, PlayerInfo[playerid][accessories][j]);
			}

			CancelSelectTextDraw(playerid);
			PlayerTextDrawDestroy(playerid, acc_ptd[playerid]);
			acc_ptd[playerid] = PlayerText:-1;


			set_world(playerid, b_info[GetPVarInt(playerid, "p_biz_id")-1][b_id] + 1000);
		}
		case d_buy_skin:
		{
			if(!response) return SelectTextDraw(playerid, 0xB0C4DEFF);
			new line_string[36];
			global_string[0] = EOS;
			strcat(global_string, ""c_server"Выберите слот одежды\n");
			for(new j = 0; j < 5; j ++)
			{
				if(PlayerInfo[playerid][temp_skin][j] == 0)
				{
					strcat(global_string, ""c_grey"-Пусто\n");
				}
				else
				{
					format(line_string, 36, ""c_white"Одежда | %d\n", PlayerInfo[playerid][temp_skin][j]);
					strcat(global_string, line_string);
				}
			}
			show_dialog(playerid, d_ss_clothes, DIALOG_STYLE_LIST, ""c_server"Магазин одежды", global_string, "Выбрать", "Назад");
		}
		case d_ss_clothes:
		{
			if(!response) return SelectTextDraw(playerid, 0xB0C4DEFF);
			if(listitem == 0)
			{
				new line_string[36];
				global_string[0] = EOS;
				strcat(global_string, ""c_server"Выберите слот одежды\n");
				for(new j = 0; j < 5; j ++)
				{
					if(PlayerInfo[playerid][temp_skin][j] == 0)
					{
						strcat(global_string, ""c_grey"-Пусто\n");
					}
					else
					{
						format(line_string, 36, ""c_white"Одежда | %d\n", PlayerInfo[playerid][temp_skin][j]);
						strcat(global_string, line_string);
					}
				}
				show_dialog(playerid, d_ss_clothes, DIALOG_STYLE_LIST, ""c_server"Магазин одежды", global_string, "Выбрать", "Назад");
				return 1;
			}

			if(PlayerInfo[playerid][money] < shop_skins_price[PlayerInfo[playerid][gender]][GetPVarInt(playerid, "skin_select_number")]) return SendClientMessage(playerid, col_gray, "У Вас недостаточно средств для приобретения одежды.");
			give_money(playerid, -shop_skins_price[PlayerInfo[playerid][gender]][GetPVarInt(playerid, "skin_select_number")]);
			insert_money_log(playerid, INVALID_PLAYER_ID, -shop_skins_price[PlayerInfo[playerid][gender]][GetPVarInt(playerid, "skin_select_number")], "Покупка скина");

			if(quest_status[playerid][7] == 1)
			{
				quest_status[playerid][7] = 2;
				SendClientMessage(playerid, col_succes, "Задание успешно выполнено. Отправляйтесь к одному из помощников, чтобы получить своё вознаграждение.");
				update_quest_data(playerid);
			}
			set_skin(playerid, shop_skins[PlayerInfo[playerid][gender]][GetPVarInt(playerid, "skin_select_number")]);
			PlayerInfo[playerid][temp_skin][listitem -1] = shop_skins[PlayerInfo[playerid][gender]][GetPVarInt(playerid, "skin_select_number")];

			new _query[126];
			format(_query, sizeof(_query), "UPDATE `users` SET `u_tempskin`='%d|%d|%d|%d|%d' WHERE `u_name` = '%s'",
			PlayerInfo[playerid][temp_skin][0], PlayerInfo[playerid][temp_skin][1], PlayerInfo[playerid][temp_skin][2],
			PlayerInfo[playerid][temp_skin][3], PlayerInfo[playerid][temp_skin][4], PlayerInfo[playerid][name]);
			mysql_tquery(sql_connection, _query);


			new b = GetPVarInt(playerid, "p_biz_id")-1;
			TogglePlayerControllable(playerid, true);
			SetCameraBehindPlayer(playerid);
			set_world(playerid, b_info[b][b_id] + 1000);
			b_info[b][b_money] += floatround(shop_skins_price[PlayerInfo[playerid][gender]][GetPVarInt(playerid, "skin_select_number")]* 0.22);
			b_info[b][b_product] -= 75;
			b_info[b][b_cash_today] += floatround(shop_skins_price[PlayerInfo[playerid][gender]][GetPVarInt(playerid, "skin_select_number")]* 0.22);

			for(new i = 0; i < 19; i ++)
			{
				TextDrawHideForPlayer(playerid, td_skinshop[i]);
			}
			CancelSelectTextDraw(playerid);
			PlayerTextDrawDestroy(playerid, td_skinshop_price[playerid]);
			td_skinshop_price[playerid] = PlayerText:-1;
			DeletePVar(playerid, "skin_select_number");
			DeletePVar(playerid, "p_skin_shop");
		}

		case d_fixcar:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][money] < 350) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств.");
			if(listitem == 0)
			{
				new line_str[78];


				format(global_string, sizeof(global_string), ""c_server"Выберите транспорт для буксировки:\t\n");
				foreach(new veh_id:player_vehicles[playerid])
				{
					format(line_str, 78, ""c_grey"-"c_white"%s\t"c_grey"%s\n", vehicle_name[GetVehicleModel(veh_id)-400], veh_info[veh_id -1][v_plate]);
					strcat(global_string, line_str);
				}
				show_dialog(playerid, d_fixcar, DIALOG_STYLE_TABLIST, ""c_server"Аварийная служба", global_string, "Выбрать", "Закрыть");
				return 1;
			}
			new _step = 1,
				carid;
			foreach(new _v_id:player_vehicles[playerid])
			{
				if(_step == listitem)
				{
					carid = _v_id;
				}
				_step ++;
			}
			foreach(new i: logged_players)
			{
				if(IsPlayerInVehicle(i, carid))
				{
					return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Транспорт используется.");
				}
				if(is_player_in_boat[i] == carid) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Нельзя отбуксировать яхту, внутри которой находитесь Вы или другие люди.");

			}
			SetVehicleToRespawn(carid);
			give_money(playerid, -350);

			insert_money_log(playerid, INVALID_PLAYER_ID, -350, "/fixcar");
			GameTextForPlayer(playerid, "~r~-350$", 2000, 1);
			SendClientMessage(playerid, col_gray, "* Транспорт отремонтирован и отбуксирован к месту стоянки.");
		}
		case d_sellcar:
		{
			new targetid = GetPVarInt(playerid, "sc_seller") -1;
			if(!response)
			{
				DeletePVar(targetid, "sc_buyer");
				DeletePVar(targetid, "sc_price");
				DeletePVar(playerid, "sc_seller");
				DeletePVar(playerid, "sc_sellveh");
				SendClientMessage(targetid, col_gray, "Игрок отказался приобретать транспорт.");
				return 1;
			}
			if(!IsPlayerConnected(targetid)|| p_t_info[targetid][p_logged] == false) return SendClientMessage(playerid, col_gray, "Произошла ошибка при продаже транспорта. Код: 19.");
			new veh_id = GetPVarInt(playerid, "sc_sellveh");
			if(veh_info[veh_id -1][v_owner] != PlayerInfo[targetid][id] || veh_info[veh_id -1][v_type] != vehicle_type_player)
			{
				DeletePVar(targetid, "sc_buyer");
				DeletePVar(targetid, "sc_price");
				DeletePVar(playerid, "sc_seller");
				DeletePVar(playerid, "sc_sellveh");
				return SendClientMessage(playerid, col_gray, "Транспорт уже не принадлежит игроку, произошла ошибка.");
			}
			new _sell_price = GetPVarInt(targetid, "sc_price");
			if(PlayerInfo[playerid][money] < _sell_price)
			{
				DeletePVar(targetid, "sc_buyer");
				DeletePVar(targetid, "sc_price");
				DeletePVar(playerid, "sc_seller");
				DeletePVar(playerid, "sc_sellveh");
				SendClientMessage(targetid, col_gray, "У игрока недостаточно средств для приобретения транспорта.");
				return SendClientMessage(playerid, col_gray, "У Вас недостаточно средств для приобретения  транспорта.");
			}
			if(!IsPlayerInRangeOfPoint(playerid, 5.00, p_t_info[targetid][p_pos][0], p_t_info[targetid][p_pos][1], p_t_info[targetid][p_pos][2]) || p_t_info[playerid][p_data][1] != p_t_info[targetid][p_data][1])
			{
				DeletePVar(targetid, "sc_buyer");
				DeletePVar(targetid, "sc_price");
				DeletePVar(playerid, "sc_seller");
				DeletePVar(playerid, "sc_sellveh");
				SendClientMessage(targetid, col_gray, "Вы слишком далеко от покупателя.");
				return SendClientMessage(playerid, col_gray, "Вы слишком далеко от продавца.");
			}
			if(!IsPlayerConnected(targetid)|| p_t_info[targetid][p_logged] == false)
			{
				DeletePVar(targetid, "sc_buyer");
				DeletePVar(targetid, "sc_price");
				DeletePVar(playerid, "sc_seller");
				DeletePVar(playerid, "sc_sellveh");
				return SendClientMessage(playerid, col_gray, "Произошла ошибка при продаже транспорта. Код: 19.");
			}
			if(get_player_veh_count(playerid)>= PlayerInfo[playerid][max_veh])
			{
				DeletePVar(targetid, "sc_buyer");
				DeletePVar(targetid, "sc_price");
				DeletePVar(playerid, "sc_seller");
				DeletePVar(playerid, "sc_sellveh");
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Для начала нужно продать одно из имещихся транспортных средств.");
			}

			give_money(playerid,-_sell_price);
			give_money(targetid, _sell_price);
			insert_money_log(playerid, targetid, -_sell_price, "покупка транспорта");
			insert_money_log(targetid, playerid, _sell_price, "продажа транспорта");

			SendClientMessage(playerid, col_succes, "Вы успешно приобрели транспорт.");
		 	SendClientMessage(targetid, col_succes, "Транспорт успешно продан.");

			new query_string[168];
			format(query_string, sizeof(query_string), "UPDATE `users_vehicles` SET `v_owner`='%d' WHERE `v_id` = '%d'",PlayerInfo[playerid][id], veh_info[veh_id -1][v_id]);
			mysql_tquery(sql_connection, query_string);
			DeletePVar(targetid, "sc_buyer");
			DeletePVar(targetid, "sc_price");
			DeletePVar(playerid, "sc_seller");
			DeletePVar(playerid, "sc_sellveh");
			Iter_Remove(player_vehicles[targetid], veh_id);
			veh_info[veh_id -1][v_owner] = PlayerInfo[playerid][id];
			Iter_Add(player_vehicles[playerid], veh_id);
		}
		case d_sellcar_gov:
		{
			if(!response)
			{
				DeletePVar(playerid, "sc_sellveh");
				return 1;
			}
			new veh_id = GetPVarInt(playerid, "sc_sellveh");
			if(veh_info[veh_id -1][v_owner] != PlayerInfo[playerid][id] || veh_info[veh_id -1][v_type] != vehicle_type_player)
			{
				DeletePVar(playerid, "sc_sellveh");
				return SendClientMessage(playerid, col_gray, "Произошла ошибка при продаже транспорта. Код: 21.");
			}

			new veh_model = GetVehicleModel(veh_id);
			new veh_price = GetModelPrice(veh_model);

			veh_price = veh_price -veh_price / 10;

			give_money(playerid, veh_price);
			insert_money_log(playerid, INVALID_PLAYER_ID, veh_price, "продажа транспорта в гос.");


			new query_string[128];
		 	format(query_string, 128, ""c_green"* "c_white" Вы успешно продали "c_green"%s"c_white" за "c_green"%d"c_white".", vehicle_name[veh_model -400], veh_price);
			SendClientMessage(playerid, col_white, query_string);

			format(query_string, sizeof(query_string), "DELETE FROM `users_vehicles` WHERE `v_id` = '%d'", veh_info[veh_id -1][v_id]);
			mysql_tquery(sql_connection, query_string);

			DeletePVar(playerid, "sc_sellveh");
			Iter_Remove(player_vehicles[playerid], veh_id);
			DestroyVehicle(veh_id);
		}
		case d_carpanel:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: pc_cmd_en(playerid);
				case 1: pc_cmd_light(playerid);
				case 2:
				{
					new string[5];
					format(string, sizeof(string), "%d", playerid);
					pc_cmd_pts(playerid, string);
				}
				case 3:
				{
					SetPVarInt(playerid, "cpanel_choosen", 1);
					return show_doors(playerid);
				}
				case 4:
				{
					SetPVarInt(playerid, "cpanel_choosen", 2);
					return show_dialog(playerid, d_carpanel_2, DIALOG_STYLE_INPUT, ""c_server"Передача ключей от автомобиля", ""c_white"Введите ID игрока которому хотите передать ключи от Вашего автомобиля:", "Передать", "Назад"); // Сделать вызов диалога STYLE_INPUT и потом вызывать команду которую создам: pc_cmd_givevkey(playerid, params []);
				}
				case 5: pc_cmd_vpark(playerid);
			}
			return 1;
		}

		case d_carpanel_2:
		{
			if(!response)
			{
				DeletePVar(playerid, "cpanel_choosen");
				return show_dialog(playerid, d_carpanel, DIALOG_STYLE_LIST, ""c_server"Меню управления автомобилем", "1. Управление двигателем\n2. Управление фарами\n3. Просмотреть технический паспорт автомобиля\n4. Управление дверьми\n5. Передать ключи от автомобиля\n6. Припарковать автомобиль", "Выбрать", "Закрыть");
			}
			new cpanelchoosen = GetPVarInt(playerid, "cpanel_choosen");
			if(cpanelchoosen == 1)
			{
				new veh_id = GetPlayerVehicleID(playerid);
				if(v_bike(veh_id)|| v_boat(veh_id)|| v_plane(veh_id)) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Доступно только в автомобиле.");


				new car_doors[4];

				GetVehicleParamsCarDoors(veh_id, car_doors[0], car_doors[1], car_doors[2], car_doors[3]);

				for(new j = 0; j < 4; j ++)
				{
					if(car_doors[j] != -1)veh_info[veh_id -1][v_door_status][j] = car_doors[j];

				}
				if(veh_info[veh_id -1][v_door_status][listitem] != 1)veh_info[veh_id -1][v_door_status][listitem] = 1;
				else veh_info[veh_id -1][v_door_status][listitem] = 0;
				SetVehicleParamsCarDoors(veh_id, veh_info[veh_id -1][v_door_status][0], veh_info[veh_id -1][v_door_status][1], veh_info[veh_id -1][v_door_status][2], veh_info[veh_id -1][v_door_status][3]);
				return show_doors(playerid);
			}
			else if(cpanelchoosen == 2)
			{
				new string[5];
				format(string, sizeof(string), "%d", strval(inputtext));
				pc_cmd_givevkey(playerid, string);
			}
			DeletePVar(playerid, "cpanel_choosen");
			return 1;
		}

		case d_phone_main:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: return pc_cmd_service(playerid);
				case 1: show_dialog(playerid, d_phone_menu, DIALOG_STYLE_INPUT, ""c_server"Звонок на номер телефона", ""c_white"Введите номер телефона на который хотите позвонить:", "Звонок", "Назад");
				case 2: show_dialog(playerid, d_phone_menu, DIALOG_STYLE_INPUT, ""c_server"Отправка сообщения на номер", ""c_white"Введите номер телефона на который хотите отправить сообщение:", "Далее", "Назад");
				case 3: show_phone_book(playerid);
				case 4:
				{
					if(PlayerInfo[playerid][phones] > 9) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете добавить ещё контактов.");
					show_dialog(playerid, d_phone_menu, DIALOG_STYLE_INPUT, ""c_server"Добавление контакта", ""c_white"Введите номер телефона который хотите добавить:", "Далее", "Назад");
				}
				case 5: pc_cmd_togphone(playerid);
			}
			SetPVarInt(playerid, "phone_dialog", listitem);
			return 1;
		}

		case d_phone_menu:
		{
			if(!response)
			{
				DeletePVar(playerid, "phone_dialog");
				return pc_cmd_phone(playerid);
			}
			new getpvr = GetPVarInt(playerid, "phone_dialog");
			switch(getpvr)
			{
				case 1:
				{
					if(!strval(inputtext)|| strlen(inputtext)< 6 || strlen(inputtext)> 6) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Необходимо ввести номер телефона от 6 символов."), DeletePVar(playerid, "phone_dialog");
					new str[7];
					format(str, sizeof(str), "%d", strval(inputtext));
					pc_cmd_call(playerid, str);
				}
				case 2:
				{
					if(!strval(inputtext)|| strlen(inputtext)< 6 || strlen(inputtext)> 6) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Необходимо ввести номер телефона от 6 символов."), DeletePVar(playerid, "phone_dialog");
					SetPVarInt(playerid, "phone_dialog", strval(inputtext));
					return show_dialog(playerid, d_phone_menu, DIALOG_STYLE_INPUT, ""c_server"Отправка сообщения на номер", ""c_white"Введите текст сообщения для отправки:", "Отправить", "Назад");
				}
				case 3:
				{
					new str[128];
					format(str, sizeof(str), "DELETE FROM `users_phonebook` WHERE `u_id` = '%d' AND `u_phone_name` = '%s' AND `u_phone_num` = '%d'", PlayerInfo[playerid][id], phone_info[playerid][listitem -1], PlayerInfo[playerid][phone_num][listitem -1]);
					mysql_query(sql_connection, str);
					load_phonebook(playerid);
					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно удалили контакт из друзей.");
				}
				case 4:
				{
					if(!strval(inputtext)|| strlen(inputtext)< 6 || strlen(inputtext)> 6) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Необходимо ввести номер телефона от 6 символов."), DeletePVar(playerid, "phone_dialog");
					SetPVarInt(playerid, "add_cont", strval(inputtext));
					SetPVarInt(playerid, "phone_dialog", 5);
					return show_dialog(playerid, d_phone_menu, DIALOG_STYLE_INPUT, ""c_server"Добавление контакта", ""c_white"Введите имя контакту:", "Принять", "Назад");
				}
				case 5:
				{
					if(strlen(inputtext)< 6 || strlen(inputtext)> MAX_PLAYER_NAME) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Имя контакта должно состоять от 6 до 24 символов."), DeletePVar(playerid, "phone_dialog"), DeletePVar(playerid, "add_cont");
					new str[72];
					format(str, sizeof(str), "INSERT INTO `users_phonebook` VALUES ('%d', '%s', '%d')", PlayerInfo[playerid][id], inputtext, GetPVarInt(playerid, "add_cont"));
					mysql_query(sql_connection, str);
					load_phonebook(playerid);
					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно добавили контакт!");
				}
				default:
				{
					if(strlen(inputtext)< 6 || strlen(inputtext)> 56) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Введённый текст для отправки может состоять от 6 до 56 символов."), DeletePVar(playerid, "phone_dialog");
					new str[7 + 56];
					format(str, sizeof(str), "%d %s", GetPVarInt(playerid, "phone_dialog"), inputtext);
					pc_cmd_sms(playerid, str);
				}
			}
			DeletePVar(playerid, "phone_dialog");
			return 1;
		}

		case d_pd_elevator:
		{
			if(!response) return DeletePVar(playerid, "pd_door");
			if(!cop_player(playerid) && ! fbi_player(playerid) && PlayerInfo[playerid][member] != 11) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас нет доступа."), DeletePVar(playerid, "pd_door");
			switch(listitem)
			{
				case 0:
				{
					set_pos(playerid, 1472.2991,-1785.2577,2342.1479,90.0, 1, GetPVarInt(playerid, "pd_door"));
					DeletePVar(playerid, "pd_door");
				}
				case 1:
				{
					set_pos(playerid, 1458.8945,-1779.7505,3740.8970,90.0, 1, GetPVarInt(playerid, "pd_door"));
					DeletePVar(playerid, "pd_door");
				}
				case 2:
				{
					new _pd_id = GetPVarInt(playerid, "pd_door");
					if(_pd_id == 1)
					{
						set_pos(playerid, 1568.7019,-1690.0790,6.2188,176.7902, 0, 0);
					}
					else if(_pd_id == 2)
					{
						set_pos(playerid, -1594.0649,716.3134,-4.9063,268.9173, 0, 0);
					}
					else if(_pd_id == 3)
					{
						set_pos(playerid, 2297.0200,2451.3398,10.8203,84.5278, 0, 0);
					}
					DeletePVar(playerid, "pd_door");
				}
				case 3:
				{
					new _pd_id = GetPVarInt(playerid, "pd_door");
					if(_pd_id == 1)
					{
						set_pos(playerid, 1564.9071, -1666.8641, 28.3949, 355.6790, 0, 0);
					}
					else if(_pd_id == 3)
					{
						set_pos(playerid, 2279.7100, 2458.3066, 38.6837, 355.1302, 0, 0);
					}
					DeletePVar(playerid, "pd_door");
				}

			}
		}
		case d_mc_elevator:
		{
			if(!response) return DeletePVar(playerid, "pd_door");

			switch(listitem)
			{
				case 0: set_pos(playerid, 1151.5480, -1333.3646, 1015.4130, 270.0, 1, GetPVarInt(playerid, "pd_door"));
				case 1: set_pos(playerid, 1177.3707, -1319.1165, 2015.4130, 180.0, 1, GetPVarInt(playerid, "pd_door"));
				case 2:
				{
					if(!medic_player(playerid)) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Этаж предназначен только для персонала.");
					set_pos(playerid, 1177.3370, -1330.7200, 3015.4128, 180.0, 1, GetPVarInt(playerid, "pd_door"));
				}
			}
			DeletePVar(playerid, "pd_door");
		}
		case d_mc_menu:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][hospital] == GetPlayerInterior(playerid)) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уже записаны в данную больницу.");
					show_dialog(playerid, d_mc_hospital, DIALOG_STYLE_MSGBOX, ""c_server"Запись в больницу", ""c_white"Вы действительно хотите записаться в данную больницу?", "Да", "Нет");
				}
				case 1:
				{
					foreach(new i : logged_players) if(medic_player(i)) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Обратитесь к другому специалисту.");
					show_dialog(playerid, d_mc_medcard, DIALOG_STYLE_MSGBOX, ""c_server"Получение мед. карты", ""c_white"Вы действительно хотите получить медицинскую карточку?", "Да", "Нет");
				}
				case 2:
				{
					foreach(new i : logged_players) if(medic_player(i)) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Обратитесь к другому специалисту.");
					show_dialog(playerid, d_mc_heal, DIALOG_STYLE_MSGBOX, ""c_server"Экспресс лечение", ""c_white"Вы действительно хотите вылечиться при помощью таблетки?", "Да", "Нет");
				}
				case 3:
				{
					if(PlayerInfo[playerid][leader]&& medic_player(playerid)) return show_complaints(playerid);
					show_dialog(playerid, d_mc_complaints, DIALOG_STYLE_INPUT, ""c_server"Книга жалоб", ""c_white"Введите ID игрока и причину жалобы чтобы пожаловатся?\n"c_grey"Пример: "c_server"'30, Плохо работает'", "Далее", "Назад");
				}
			}
			return 1;
		}
		case d_mc_hospital:
		{
			if(!response) return show_dialog(playerid, d_mc_menu, DIALOG_STYLE_LIST, ""c_server"Больница", ""c_server"1. "c_white"Записаться в больницу\n"c_server"2. "c_white"Получить медицинскую карту\n"c_server"3. "c_white"Экспресс лечение\n"c_server"4. "c_white"Книга жалоб", "Выбрать", "Закрыть");
			PlayerInfo[playerid][hospital] = GetPlayerVirtualWorld(playerid);
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно записались в данную больницу.");
			return 1;
		}
		case d_mc_medcard:
		{
			if(!response) return show_dialog(playerid, d_mc_menu, DIALOG_STYLE_LIST, ""c_server"Больница", ""c_server"1. "c_white"Записаться в больницу\n"c_server"2. "c_white"Получить медицинскую карту\n"c_server"3. "c_white"Экспресс лечение\n"c_server"4. "c_white"Книга жалоб", "Выбрать", "Закрыть");

			SendClientMessage(playerid, col_lblue, "Сотрудник выдал вам медицинскую карту: 'Полностью здоров(-a)'");

			new text_string[238];
			mysql_format(sql_connection, text_string, 96, "SELECT * FROM `users_medcards` WHERE `mc_owner` = '%d' LIMIT 1",
			PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, text_string, "check_mc");



			mysql_format(sql_connection, text_string, sizeof(text_string), "INSERT INTO `users_medcards` (`mc_result`,`mc_dname`,`mc_owner`,`mc_date`) VALUES ('2','Сотрудник','%d',NOW())",
			PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, text_string);
			return 1;
		}
		case d_mc_heal:
		{
			if(!response) return show_dialog(playerid, d_mc_menu, DIALOG_STYLE_LIST, ""c_server"Больница", ""c_server"1. "c_white"Записаться в больницу\n"c_server"2. "c_white"Получить медицинскую карту\n"c_server"3. "c_white"Экспресс лечение\n"c_server"4. "c_white"Книга жалоб", "Выбрать", "Закрыть");

			show_dialog(playerid, d_heal_2, DIALOG_STYLE_MSGBOX, ""c_server"Медицинское обслуживание", ""c_server"Сотрудник "c_white"предлагает вылечить Вас за {33AA33}1000$", "Принять", "Закрыть");
		}
		case d_mc_complaints:
		{
			if(!response) return show_dialog(playerid, d_mc_menu, DIALOG_STYLE_LIST, ""c_server"Больница", ""c_server"1. "c_white"Записаться в больницу\n"c_server"2. "c_white"Получить медицинскую карту\n"c_server"3. "c_white"Экспресс лечение\n"c_server"4. "c_white"Книга жалоб", "Выбрать", "Закрыть");

			new plid, text[64];
			if(sscanf(inputtext, "p<,>ds[64]", plid, text)) return show_dialog(playerid, d_mc_complaints, DIALOG_STYLE_INPUT, ""c_server"Книга жалоб", ""c_white"Введите ID игрока и причину жалобы чтобы пожаловатся?\n"c_grey"Пример: "c_server"'30, Плохо работает'", "Далее", "Назад");

			if(!medic_player(plid)) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Игрок не работает в больнице.");
			if(strlen(text)> 64) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Максимальная длина жалобы 64 символа.");
			new string[222];
			format(string, 59, "SELECT * FROM `users_complaints` WHERE `u_fromname` = '%s'", PlayerInfo[playerid][name]);
			mysql_query(sql_connection, string);
			new rows, fields;
			cache_get_data(rows, fields);
			if(rows) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уже оставляли жалобу сегодня.");

			format(string, sizeof(string), "INSERT INTO `users_complaints` (`u_fromname`, `u_toname`, `u_reason`, `u_fraction`) VALUES ('%s','%s','%s','%d')", PlayerInfo[playerid][name], PlayerInfo[plid][name], text, PlayerInfo[plid][member]);
			mysql_query(sql_connection, string);
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно создали жалобу.");
			return 1;
		}
		case d_complaints_list:
		{
			if(!response) return show_dialog(playerid, d_mc_menu, DIALOG_STYLE_LIST, ""c_server"Больница", ""c_server"1. "c_white"Записаться в больницу\n"c_server"2. "c_white"Получить медицинскую карту\n"c_server"3. "c_white"Экспресс лечение\n"c_server"4. "c_white"Книга жалоб", "Выбрать", "Закрыть");
			new string[212];
			format(string, 53, "SELECT * FROM `users_complaints` WHERE `u_id` = '%d'", listitem + 1);
			mysql_query(sql_connection, string);

			new fromname[MAX_PLAYER_NAME], toname[MAX_PLAYER_NAME], reason[64];
			cache_get_field_content(0, "u_fromname", fromname, sql_connection, MAX_PLAYER_NAME);
			cache_get_field_content(0, "u_toname", toname, sql_connection, MAX_PLAYER_NAME);
			cache_get_field_content(0, "u_reason", reason, sql_connection, 64);

			string[0] = EOS;
			format(string, sizeof(string), "\n"c_server"Жалоба от игрока: "c_white"%s"c_grey" на игрока: "c_white"%s\n\n"c_server"Причина жалобы: "c_white"%s", fromname, toname, reason);
			show_dialog(playerid, d_clearinfo, DIALOG_STYLE_MSGBOX, ""c_server"Просмотр жалобы", string, "Закрыть", "");
			return 1;
		}
        case d_player_target:
		{
		    if(!response) return 1;
			new pl_targid[8];
			format(pl_targid, 5, "%d", GetPVarInt(playerid, "playerTarget"));
			switch(listitem)
			{
			    case 0: pc_cmd_pass(playerid, pl_targid);
			    case 1: pc_cmd_lic(playerid, pl_targid);
				case 2: pc_cmd_med(playerid, pl_targid);
				case 3: pc_cmd_joblist(playerid, pl_targid);
				case 4: pc_cmd_givegun(playerid, pl_targid);
				case 5:
				{
					format(pl_targid, 8, "%d 10", GetPVarInt(playerid, "playerTarget"));
					pc_cmd_givedrugs(playerid, pl_targid);
				}
			}
			DeletePVar(playerid,"playerTarget");
		}
		case d_lmenu:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:show_dialog(playerid, d_invite, DIALOG_STYLE_INPUT, ""c_server"Принять игрока", ""c_white"Введите ID игрока, которого хотите принять в организацию:", "Принять", "Назад");
				case 1:show_dialog(playerid, d_uninvite, DIALOG_STYLE_INPUT, ""c_server"Уволить игрока", ""c_white"Введите ID игрока, которого хотите уволить из организации:", "Уволить", "Назад");
				case 2:show_dialog(playerid, d_setrank_id, DIALOG_STYLE_INPUT, ""c_server"Изменить ранг", ""c_white"Введите ID игрока, которого хотите повысить/понизить:", "Далее", "Назад");
				case 3:pc_cmd_find(playerid);
				case 4:show_dialog(playerid, d_offmembers_selection, DIALOG_STYLE_LIST, ""c_server"Члены организации", "Все члены организации оффлайн\nФильтр по рангу", "Выбрать", "Назад");
				case 5:
				{
					format(global_string, sizeof(global_string), ""c_white"Буксировка всего транспорта\t"c_green"1000$\n");
					new veh_point = 0;
					for(new vehicleid = 0; vehicleid < vehicle_count; vehicleid ++)
					{
						if(!IsValidVehicle(vehicleid + 1)) continue;
						if(veh_info[vehicleid][v_type] != vehicle_type_server || veh_info[vehicleid][v_owner] != PlayerInfo[playerid][member]) continue;

						veh_point ++;
						new line_string[62];
						format(line_string, sizeof(line_string), ""c_white"%d. %s\t"c_green"100$\n", veh_point, vehicle_name[veh_info[vehicleid][v_model] -400]);
						strcat(global_string, line_string);
						show_dialog(playerid, d_lmenu_fixcar, DIALOG_STYLE_TABLIST, ""c_server"Буксировка транспорта", global_string, "Выбрать", "Назад");
					}
				}
				case 6:
				{
					show_dialog(playerid, d_blacklist, DIALOG_STYLE_LIST, ""c_server"Чёрный список", "Добавить человека в чёрный список\nОчистить черный список\nУбрать человека из черного списка", "Выбрать", "Назад");
				}
				case 7:
				{
					new sql_string[92];
					if(f_info[PlayerInfo[playerid][member] -1][f_dorm_status])
					{
						f_info[PlayerInfo[playerid][member] -1][f_dorm_status] = 0;
						format(sql_string, sizeof(sql_string), "UPDATE `fractions` SET `f_dorm_status` = '%d' WHERE `f_id` = '%d' LIMIT 1",
						f_info[PlayerInfo[playerid][member] -1][f_dorm_status],
						PlayerInfo[playerid][member]);
						mysql_tquery(sql_connection, sql_string);
						GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~ DORM UNLOCKED", 3000, 3);
						SendClientMessage(playerid, col_white, ""c_green"* "c_white"Склад успешно "c_green"открыт"c_white".");

					}
					else
					{
						f_info[PlayerInfo[playerid][member] -1][f_dorm_status] = 1;
						format(sql_string, sizeof(sql_string), "UPDATE `fractions` SET `f_dorm_status` = '%d' WHERE `f_id` = '%d' LIMIT 1",
						f_info[PlayerInfo[playerid][member] -1][f_dorm_status],
						PlayerInfo[playerid][member]);
						mysql_tquery(sql_connection, sql_string);
						GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~ DORM LOCKED", 3000, 3);
						SendClientMessage(playerid, col_white, ""c_green"* "c_white"Склад успешно "c_green"закрыт"c_white".");
					}
					ShowLeaderMenu(playerid);
				}
			}
		}
		case d_blacklist:
		{
			if(!response) return ShowLeaderMenu(playerid);
			switch(listitem)
			{
				case 0:
				{
					show_dialog(playerid, d_blinvite, DIALOG_STYLE_INPUT, ""c_server"Чёрный список", ""c_white"Введите ID игрока, которого хотите добавить в чёрный список:", "Принять", "Назад");
				}
				case 1:
				{
					show_dialog(playerid, d_blclear, DIALOG_STYLE_MSGBOX, ""c_server"Чёрный список", "\
					"c_white"\n\nВы действительно желаете очистить чёрный список организации?\n\n\
					"c_grey"* Отменить данное действие будет невозможно", "Принять", "Назад");
				}
				case 2:
				{
					show_dialog(playerid, d_bluninvite, DIALOG_STYLE_INPUT, ""c_server"Чёрный список", ""c_white"Введите имя игрока, которого хотите удалить из чёрного списка:", "Принять", "Назад");
				}
			}
		}
		case d_blclear:
		{
			if(!response) return show_dialog(playerid, d_blacklist, DIALOG_STYLE_LIST, ""c_server"Чёрный список", "Добавить человека в чёрный список\nОчистить черный список\nУбрать человека из черного списка", "Выбрать", "Назад");
			new sql_string[128];
			format(sql_string, sizeof(sql_string), "DELETE FROM `fractions_blacklist` WHERE `bl_fraction`='%d'",
			PlayerInfo[playerid][member]);
			mysql_tquery(sql_connection, sql_string);

			SendClientMessage(playerid, col_succes, "Чёрный список успешно очищен.");
			show_dialog(playerid, d_blacklist, DIALOG_STYLE_LIST, ""c_server"Чёрный список", "Добавить человека в чёрный список\nОчистить черный список\nУбрать человека из черного списка", "Выбрать", "Назад");
		}
		case d_bluninvite:
		{
			if(!response)
			{
				show_dialog(playerid, d_blacklist, DIALOG_STYLE_LIST, ""c_server"Чёрный список", "Добавить человека в чёрный список\nОчистить черный список\nУбрать человека из черного списка", "Выбрать", "Назад");
				return 1;
			}
			if(!strlen(inputtext)) return show_dialog(playerid, d_bluninvite, DIALOG_STYLE_INPUT, ""c_server"Чёрный список", ""c_grey"Неверный формат никнейма!\n\n{FFFFFFВведите имя игрока, которого хотите удалить из чёрного списка:", "Принять", "Назад");
			if(is_text_invalid(inputtext)) return show_dialog(playerid, d_bluninvite, DIALOG_STYLE_INPUT, ""c_server"Чёрный список", ""c_grey"Неверный формат никнейма!\n\n{FFFFFFВведите имя игрока, которого хотите удалить из чёрного списка:", "Принять", "Назад");
			if(strlen(inputtext)< 6 || strlen(inputtext)> 24) return show_dialog(playerid, d_bluninvite, DIALOG_STYLE_INPUT, ""c_server"Чёрный список", ""c_grey"Неверный формат никнейма!\n\n{FFFFFFВведите имя игрока, которого хотите удалить из чёрного списка:", "Принять", "Назад");

			new query_string[138];
			mysql_format(sql_connection, query_string, sizeof(query_string),"SELECT `bl_player` FROM `fractions_blacklist` WHERE `bl_name` = '%e' AND `bl_fraction`='%d' LIMIT 1",
			inputtext, PlayerInfo[playerid][member]);
			mysql_tquery(sql_connection, query_string, "check_bl_list", "ds", playerid, inputtext);
		}

		case d_blinvite:
		{
			if(!response)
			{
				show_dialog(playerid, d_blacklist, DIALOG_STYLE_LIST, ""c_server"Чёрный список", "Добавить человека в чёрный список\nОчистить черный список\nУбрать человека из черного списка", "Выбрать", "Назад");
				return 1;
			}
			new targetid = strval(inputtext);
			if(targetid < 0) return show_dialog(playerid, d_blinvite, DIALOG_STYLE_INPUT, ""c_server"Чёрный список", ""c_grey"Неверный ID игрока!\n\n"c_white"Введите ID игрока, которого хотите добавить в чёрный список:", "Принять", "Назад");
			if(!IsPlayerConnected(targetid)|| targetid == playerid) return show_dialog(playerid, d_blinvite, DIALOG_STYLE_INPUT, ""c_server"Чёрный список", ""c_grey"Неверный ID игрока!\n\n"c_white"Введите ID игрока, которого хотите добавить в чёрный список:", "Принять", "Назад");
			if(PlayerInfo[targetid][member] == PlayerInfo[playerid][member]) return show_dialog(playerid, d_blinvite, DIALOG_STYLE_INPUT, ""c_server"Чёрный список", ""c_grey"Игрок в Вашей организации!\n\n"c_white"Введите ID игрока, которого хотите добавить в чёрный список:", "Принять", "Назад");


			new sql_string[128];
			format(sql_string, sizeof(sql_string), "INSERT INTO `fractions_blacklist`(`bl_player`,`bl_fraction`,`bl_name`) VALUES ('%d','%d','%s')",
			PlayerInfo[targetid][id], PlayerInfo[playerid][member], PlayerInfo[targetid][name]);
			mysql_tquery(sql_connection, sql_string);

			format(sql_string, sizeof(sql_string), ""c_green"* "c_white"%s добавил Вас в чёрный список \"%s\".", PlayerInfo[playerid][name], f_info[PlayerInfo[playerid][member] -1][f_name]);
			SendClientMessage(targetid, col_white, sql_string);
			format(sql_string, sizeof(sql_string), ""c_green"* "c_white"Вы добавили в чёрный список %s.", PlayerInfo[targetid][name]);
			SendClientMessage(playerid, col_white, sql_string);
			show_dialog(playerid, d_blacklist, DIALOG_STYLE_LIST, ""c_server"Чёрный список", "Добавить человека в чёрный список\nОчистить черный список\nУбрать человека из черного списка", "Выбрать", "Назад");

		}
		case d_offmembers_selection:
		{
			if(!response) return ShowLeaderMenu(playerid);
			if(listitem == 0)
			{
				SetPVarInt(playerid, "ofm_list_page", 1);
				new query_string[128];
				mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_name`,`u_rank`,`u_last_date` FROM `users` WHERE `u_member` = '%d' AND `u_online` = '0'", PlayerInfo[playerid][member]);
				mysql_tquery(sql_connection, query_string, "callback_offmembers", "i", playerid);

			}
			else show_dialog(playerid, d_offmembers_filter, DIALOG_STYLE_INPUT, ""c_server"Члены организации", ""c_white"Введите ранг для фильтра:", "Далее", "Назад");
		}
		case d_offmembers_filter:
		{
			if(!response) return show_dialog(playerid, d_offmembers_selection, DIALOG_STYLE_LIST, ""c_server"Члены организации", "Все члены организации оффлайн\nФильтр по рангу", "Выбрать", "Назад");
			if(strval(inputtext)< 1 || strval(inputtext)> f_info[PlayerInfo[playerid][member] -1][f_rank_settings][0]) return show_dialog(playerid, d_offmembers_filter, DIALOG_STYLE_INPUT, ""c_server"Члены организации", ""c_grey"Неверный номер ранга!\n\n"c_white"Введите ранг для фильтра:", "Далее", "Назад");
			SetPVarInt(playerid, "ofm_type", strval(inputtext));

			SetPVarInt(playerid, "ofm_list_page", 1);
			new query_string[128];
			mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_name`,`u_rank`,`u_last_date` FROM `users` WHERE `u_member` = '%d' AND `u_rank` = '%d' AND `u_online` = '0'", PlayerInfo[playerid][member], strval(inputtext));
			mysql_tquery(sql_connection, query_string, "callback_offmembers", "i", playerid);

		}
		case d_offmembers_list:
		{
			if(!response)
			{
				for(new i = 0; i < 10; i ++)
				{
					new pvar_string[8];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", i);
					DeletePVar(playerid, pvar_string);
				}
				DeletePVar(playerid, "ofm_list_page");
				DeletePVar(playerid, "ofm_list_rows");
				DeletePVar(playerid, "ofm_listitem");
				DeletePVar(playerid, "ofm_type");
				show_dialog(playerid, d_offmembers_selection, DIALOG_STYLE_LIST, ""c_server"Члены организации", ""c_white"Все члены организации оффлайн\nФильтр по рангу", "Выбрать", "Назад");
				return 1;
			}
			if(listitem == 0)
			{
				new page_id = GetPVarInt(playerid, "ofm_list_page")-1;
				if(page_id == 0)
				{
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы находитесь на первой странице списка членов организации.");
					if(!GetPVarInt(playerid, "ofm_type"))
					{
						new query_string[128];
						mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_name`,`u_rank`,`u_last_date` FROM `users` WHERE `u_member` = '%d' AND `u_online` = '0'", PlayerInfo[playerid][member]);
						mysql_tquery(sql_connection, query_string, "callback_offmembers", "i", playerid);
						return 1;
					}
					new query_string[128];
					mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_name`,`u_rank`,`u_last_date` FROM `users` WHERE `u_member` = '%d' AND `u_rank` = '%d' AND `u_online` = '0'", PlayerInfo[playerid][member], GetPVarInt(playerid, "ofm_type"));
					mysql_tquery(sql_connection, query_string, "callback_offmembers", "i", playerid);
					return 1;

				}
				SetPVarInt(playerid, "ofm_list_page", page_id);

				if(!GetPVarInt(playerid, "ofm_type"))
				{
					new query_string[128];
					mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_name`,`u_rank`,`u_last_date` FROM `users` WHERE `u_member` = '%d' AND `u_online` = '0'", PlayerInfo[playerid][member]);
					mysql_tquery(sql_connection, query_string, "callback_offmembers", "i", playerid);
					return 1;
				}
				new query_string[128];
				mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_name`,`u_rank`,`u_last_date` FROM `users` WHERE `u_member` = '%d' AND `u_rank` = '%d' AND `u_online` = '0'", PlayerInfo[playerid][member], GetPVarInt(playerid, "ofm_type"));
				mysql_tquery(sql_connection, query_string, "callback_offmembers", "i", playerid);

			}
			else if(listitem == 1)
			{
				new page_id = GetPVarInt(playerid, "ofm_list_page")-1;
				if((page_id + 1)* 10 >= GetPVarInt(playerid, "ofm_list_rows"))
				{
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы находитесь на последней странице списка членов организации.");
					if(!GetPVarInt(playerid, "ofm_type"))
					{
						new query_string[128];
						mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_name`,`u_rank`,`u_last_date` FROM `users` WHERE `u_member` = '%d' AND `u_online` = '0'", PlayerInfo[playerid][member]);
						mysql_tquery(sql_connection, query_string, "callback_offmembers", "i", playerid);
						return 1;
					}
					new query_string[128];
					mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_name`,`u_rank`,`u_last_date` FROM `users` WHERE `u_member` = '%d' AND `u_rank` = '%d' AND `u_online` = '0'", PlayerInfo[playerid][member], GetPVarInt(playerid, "ofm_type"));
					mysql_tquery(sql_connection, query_string, "callback_offmembers", "i", playerid);

					return 1;
				}
				SetPVarInt(playerid, "ofm_list_page", page_id + 2);
				if(!GetPVarInt(playerid, "ofm_type"))
				{
					new query_string[128];
					mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_name`,`u_rank`,`u_last_date` FROM `users` WHERE `u_member` = '%d' AND `u_online` = '0'", PlayerInfo[playerid][member]);
					mysql_tquery(sql_connection, query_string, "callback_offmembers", "i", playerid);
					return 1;
				}
				new query_string[128];
				mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_name`,`u_rank`,`u_last_date` FROM `users` WHERE `u_member` = '%d' AND `u_rank` = '%d' AND `u_online` = '0'", PlayerInfo[playerid][member], GetPVarInt(playerid, "ofm_type"));
				mysql_tquery(sql_connection, query_string, "callback_offmembers", "i", playerid);
			}
			else
			{
				new pvar_string[28], pl_name[20];
				format(pvar_string, 10, "ofm_%d", listitem -2);
				GetPVarString(playerid, pvar_string, pl_name, 20);
				SetPVarInt(playerid, "ofm_listitem", listitem -2);
				format(pvar_string, sizeof(pvar_string), ""c_server"%s", pl_name);
				show_dialog(playerid, d_offmembers_pl_menu, DIALOG_STYLE_LIST, pvar_string, ""c_white"Информация об игроке\nУволить из организации\nПовысить/понизить игрока", "Выбрать", "Назад");
			}
			return 1;
		}

		case d_offmembers_pl_menu:
		{
			if(!response)
			{
				DeletePVar(playerid, "ofm_listitem");
				if(!GetPVarInt(playerid, "ofm_type"))
				{
					new query_string[128];
					mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_name`,`u_rank`,`u_last_date` FROM `users` WHERE `u_member` = '%d' AND `u_online` = '0'", PlayerInfo[playerid][member]);
					mysql_tquery(sql_connection, query_string, "callback_offmembers", "i", playerid);
					return 1;
				}
				new query_string[128];
				mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_name`,`u_rank`,`u_last_date` FROM `users` WHERE `u_member` = '%d' AND `u_rank` = '%d' AND `u_online` = '0'", PlayerInfo[playerid][member], GetPVarInt(playerid, "ofm_type"));
				mysql_tquery(sql_connection, query_string, "callback_offmembers", "i", playerid);
				return 1;
			}
			switch(listitem)
			{
				case 0:
				{
					new pvar_string[18], pl_name[20];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, "ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, 20);
					new query_string[128];
					mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_rank`,`u_fraction_date`,`u_last_date` FROM `users` WHERE `u_name` = '%s' LIMIT 1", pl_name);
					mysql_tquery(sql_connection, query_string, "callback_offmembers_info", "i", playerid);
				}
				case 1:
				{
					new pvar_string[28], pl_name[20];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, "ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, 20);
					format(pvar_string, sizeof(pvar_string), ""c_server"%s", pl_name);

					new query_string[128];
					format(query_string,sizeof(query_string),"UPDATE `users` SET `u_member` = '0', `u_rank` = '0' WHERE `u_name` = '%s' LIMIT 1", pl_name);
					mysql_tquery(sql_connection, query_string, "", "");
					format(query_string, sizeof query_string, "Вы уволили "c_server"%s"c_white" из организации", pl_name);
					SendClientMessage(playerid, col_white, query_string);

					DeletePVar(playerid, "ofm_listitem");
					if(!GetPVarInt(playerid, "ofm_type"))
					{
						mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_name`,`u_rank`,`u_last_date` FROM `users` WHERE `u_member` = '%d' AND `u_online` = '0'", PlayerInfo[playerid][member]);
						mysql_tquery(sql_connection, query_string, "callback_offmembers", "i", playerid);
						return 1;
					}
					mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_name`,`u_rank`,`u_last_date` FROM `users` WHERE `u_member` = '%d' AND `u_rank` = '%d' AND `u_online` = '0'", PlayerInfo[playerid][member], GetPVarInt(playerid, "ofm_type"));
					mysql_tquery(sql_connection, query_string, "callback_offmembers", "i", playerid);

				}
				case 2:show_dialog(playerid, d_offmembers_pl_rank, DIALOG_STYLE_INPUT, ""c_server"Изменение ранга игрока", ""c_white"Введите номер ранга, который хотите установить для игрока:", "Выбрать", "Назад");
			}
		}
		case d_offmembers_pl_rank:
		{
			new pvar_string[28],
				pl_name[MAX_PLAYER_NAME -4];
			format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, "ofm_listitem"));
			GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME -4);
			if(strval(inputtext)< 1 || strval(inputtext)> f_info[PlayerInfo[playerid][member] -1][f_rank_settings][0]) return show_dialog(playerid, d_offmembers_pl_rank, DIALOG_STYLE_INPUT, ""c_server"Повышение/понижение", ""c_grey"Неверный номер ранга!\n\n"c_white"Введите номер ранга, который хотите установить для игрока:", "Выбрать", "Назад"), SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Неверное значение ранга.");
			if(response)
			{
				new _text_string[128];
				format(_text_string,sizeof(_text_string),"UPDATE `users` SET `u_rank` = '%d' WHERE `u_name` = '%s' LIMIT 1",
				strval(inputtext), pl_name);
				mysql_tquery(sql_connection, _text_string, "", "");
				format(_text_string, sizeof _text_string, "Вы изменили ранг "c_server"%s"c_white" на "c_server"%d", pl_name, strval(inputtext));
				SendClientMessage(playerid, col_white, _text_string);

			}
			format(pvar_string, sizeof(pvar_string), ""c_server"%s", pl_name);
			show_dialog(playerid, d_offmembers_pl_menu, DIALOG_STYLE_LIST, pvar_string, ""c_white"Информация об игроке\nУволить из организации\nПовысить/понизить игрока", "Выбрать", "Назад");

		}
		case d_offmembers_pl_menu_info:
		{
			new pvar_string[38],
				pl_name[MAX_PLAYER_NAME -4];

			format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, "ofm_listitem"));
			GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME -4);
			format(pvar_string, sizeof(pvar_string), ""c_server"%s", pl_name);
			show_dialog(playerid, d_offmembers_pl_menu, DIALOG_STYLE_LIST, pvar_string, "Информация об игроке\nУволить из организации\nПовысить/понизить игрока", "Выбрать", "Назад");
		}
		case d_invite:
		{
			if(!response)
			{
				ShowLeaderMenu(playerid);
				return 1;
			}
			new targetid = strval(inputtext);
			if(!targetid) return show_dialog(playerid, d_invite, DIALOG_STYLE_INPUT, ""c_server"Принять игрока", ""c_grey"Неверный ID игрока!\n\n"c_white"Введите ID игрока, которого хотите принять в организацию:", "Принять", "Назад");
			if(!IsPlayerConnected(targetid)|| targetid == playerid) return show_dialog(playerid, d_invite, DIALOG_STYLE_INPUT, ""c_server"Принять игрока", ""c_grey"Неверный ID игрока!\n\n"c_white"Введите ID игрока, которого хотите принять в организацию:", "Принять", "Назад");
			if(PlayerInfo[targetid][member] || GetPVarInt(playerid, "frac_invite")) return show_dialog(playerid, d_invite, DIALOG_STYLE_INPUT, ""c_server"Принять игрока", ""c_grey"Игрок уже в организации!\n\n"c_white"Введите ID игрока, которого хотите принять в организацию:", "Принять", "Назад");
			if(p_t_info[targetid][p_dialog] != -1) return show_dialog(playerid, d_invite, DIALOG_STYLE_INPUT, ""c_server"Принять игрока", ""c_grey"Данный игрок занят!\n\n"c_white"Введите ID игрока, которого хотите принять в организацию:", "Принять", "Назад");
			if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[targetid][p_pos][0], p_t_info[targetid][p_pos][1], p_t_info[targetid][p_pos][2]) || GetPlayerVirtualWorld(targetid)!= GetPlayerVirtualWorld(playerid)) return show_dialog(playerid, d_invite, DIALOG_STYLE_INPUT, ""c_server"Принять игрока", ""c_grey"Данный игрок слишком далеко от Вас!\n\n"c_white"Введите ID игрока, которого хотите принять в организацию:", "Принять", "Назад");
			if(get_player_warn_count(targetid)!= 0) return show_dialog(playerid, d_invite, DIALOG_STYLE_INPUT, ""c_server"Принять игрока", ""c_orange_red"* Нельзя принять в организацию игрока с предупреждением.\n\n"c_white"Введите ID игрока, которого хотите принять в организацию:", "Принять", "Назад");
			if(is_player_fraction_bl(targetid, PlayerInfo[playerid][member])!= 0) return show_dialog(playerid, d_invite, DIALOG_STYLE_INPUT, ""c_server"Принять игрока", ""c_orange_red"* Нельзя принять в организацию игрока из чёрного списка организации.\n\n"c_white"Введите ID игрока, которого хотите принять в организацию:", "Принять", "Назад");


			new _text_string[128];
			format(_text_string, sizeof _text_string, "Вы пригласили %s в организацию", PlayerInfo[targetid][name]);
			SendClientMessage(playerid, col_gray, _text_string);
			format(_text_string, sizeof _text_string, ""c_server"%s "c_white"предлагает Вам вступить в организацию "c_grey"\"%s\"", PlayerInfo[playerid][name], f_info[PlayerInfo[playerid][member] -1][f_name]);
			show_dialog(targetid, d_invite_box, DIALOG_STYLE_MSGBOX, ""c_server"Вступление в организацию", _text_string, "Вступить", "Отклонить");
			SetPVarInt(targetid, "frac_invite", PlayerInfo[playerid][member]);
			SetPVarInt(targetid, "frac_invite_pl_id", playerid + 1);
		}
		case d_uninvite_reason:
		{
			if(!response)
			{
				show_dialog(playerid, d_uninvite, DIALOG_STYLE_INPUT, ""c_server"Уволить игрока", ""c_white"Введите ID игрока, которого хотите уволить из организации:", "Принять", "Назад");
				DeletePVar(playerid, "uninvite_plid");
				return 1;
			}
			if(strlen(inputtext)< 3 || strlen(inputtext)> 68)
            {
 				show_dialog(playerid, d_uninvite_reason, DIALOG_STYLE_INPUT, ""c_server"Уволить игрока", ""c_white"Введите причину увольнения игрока\n\n"c_orange_red"* * Длина причины должна составлять от 3 до 48 символов", "Принять", "Назад");
				return 1;
			}
			if(is_text_invalid(inputtext))
            {
				show_dialog(playerid, d_uninvite_reason, DIALOG_STYLE_INPUT, ""c_server"Уволить игрока", ""c_white"Введите причину увольнения игрока\n\n"c_orange_red"* Присутствуют запрещённые символы", "Принять", "Назад");
				return 1;
			}
			new targetid = GetPVarInt(playerid, "uninvite_plid");



			new scm_string[266];
			format(scm_string, 128, "%s уволил Вас из организации. Причина: "c_white"%s", PlayerInfo[playerid][name], inputtext);
			SendClientMessage(targetid, 0x14A3FFFF, scm_string);
			format(scm_string, 128, "Вы уволили %s из организации. Причина: "c_white"%s", PlayerInfo[targetid][name], inputtext);
			SendClientMessage(playerid, 0x14A3FFFF, scm_string);
			if(gang_player(playerid))
			{
				format(scm_string, 128, "%s(%d) %s выселил %s(%d) %s с района. Причина: %s",
				f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1],
				PlayerInfo[playerid][rank],
				PlayerInfo[playerid][name],

				f_rank[PlayerInfo[targetid][member] -1][PlayerInfo[targetid][rank] -1],
				PlayerInfo[targetid][rank],
				PlayerInfo[targetid][name], inputtext);
				foreach(new i: logged_players) if((PlayerInfo[i][member] == PlayerInfo[playerid][member] || is_control_chat {i} == PlayerInfo[playerid][member]) && PlayerInfo[i][settings][0] != 0)SendClientMessage(i, 0x4682B4AA, scm_string);
			}

			format(scm_string,sizeof(scm_string),
			"INSERT INTO `users_jobinfo` (`ji_uid`,`ji_date_invite`,`ji_date_uninvite`,`ji_reason`,`ji_fraction`,`ji_fwarnings`)SELECT `u_id`, `u_fraction_date`, NOW(), '%s','%d','%d' FROM `users` WHERE `u_id` = '%d'",
			inputtext, PlayerInfo[targetid][member],PlayerInfo[targetid][f_warning], PlayerInfo[targetid][id]);
			mysql_tquery(sql_connection, scm_string, "", "");

			PlayerInfo[targetid][member] = 0;
			PlayerInfo[targetid][rank] = 0;
			PlayerInfo[targetid][org_skin] = 0;
			update_int_sql(targetid, "u_member", PlayerInfo[targetid][member]);
			update_int_sql(targetid, "u_rank", PlayerInfo[targetid][rank]);

			if(is_fraction_duty {targetid})is_fraction_duty {targetid} = 0;
			SetPlayerSkin(targetid, PlayerInfo[targetid][skin]);
			SetPlayerColor(targetid, 0xFFFFFFFF); // col_white
		}
		case d_uninvite:
		{
			if(!response)
			{
				ShowLeaderMenu(playerid);
				return 1;
			}
			new targetid = strval(inputtext);
			if(targetid == INVALID_PLAYER_ID || targetid < 0) return show_dialog(playerid, d_uninvite, DIALOG_STYLE_INPUT, ""c_server"Уволить игрока", ""c_grey"Неверный ID игрока!\n\n"c_white"Введите ID игрока, которого хотите уволить из организации:", "Принять", "Назад");
			if(!IsPlayerConnected(targetid)|| p_t_info[targetid][p_logged] == false || targetid == playerid) return show_dialog(playerid, d_uninvite, DIALOG_STYLE_INPUT, ""c_server"Уволить игрока", ""c_grey"Неверный ID игрока!\n\n"c_white"Введите ID игрока, которого хотите уволить из организации:", "Принять", "Назад");
			if(PlayerInfo[targetid][member] != PlayerInfo[playerid][member]) return show_dialog(playerid, d_uninvite, DIALOG_STYLE_INPUT, ""c_server"Уволить игрока", ""c_grey"Игрок не состоит в Вашей организации!\n\n"c_white"Введите ID игрока, которого хотите уволить из организации:", "Принять", "Назад");
			if(PlayerInfo[playerid][rank]<= PlayerInfo[targetid][rank]) return show_dialog(playerid, d_uninvite, DIALOG_STYLE_INPUT, ""c_server"Уволить игрока", ""c_grey"Вы не можете уволить своё руководство!\n\n"c_white"Введите ID игрока, которого хотите уволить из организации:", "Принять", "Назад");

			show_dialog(playerid, d_uninvite_reason, DIALOG_STYLE_INPUT, ""c_server"Уволить игрока", ""c_white"Введите причину увольнения игрока\n\n"c_grey"* Длина причины должна составлять от 3 до 48 символов", "Принять", "Назад");
			SetPVarInt(playerid, "uninvite_plid", targetid);
		}
		case d_setrank_id:
		{
			if(!response) return ShowLeaderMenu(playerid);
			new targetid = strval(inputtext);
			if(!IsPlayerConnected(targetid)|| p_t_info[targetid][p_logged] == false) return show_dialog(playerid, d_setrank_id, DIALOG_STYLE_INPUT, ""c_server"Изменить ранг", ""c_grey"* Неверный ID игрока.\n\n"c_white"Введите ID игрока, которого хотите повысить/понизить:", "Далее", "Назад");
			if(targetid == playerid) return show_dialog(playerid, d_setrank_id, DIALOG_STYLE_INPUT, ""c_server"Изменить ранг", ""c_grey"* Нельзя изменить ранг самому себе.\n\n"c_white"Введите ID игрока, которого хотите повысить/понизить:", "Далее", "Назад");
			if(PlayerInfo[targetid][member] != PlayerInfo[playerid][member]) return show_dialog(playerid, d_setrank_id, DIALOG_STYLE_INPUT, ""c_server"Изменить ранг", ""c_grey"Игрок не состоит в Вашей организации!\n\n"c_white"Введите ID игрока, которого хотите повысить/понизить:", "Далее", "Назад");
			if(PlayerInfo[targetid][rank] >= PlayerInfo[playerid][rank]) return show_dialog(playerid, d_setrank_id, DIALOG_STYLE_INPUT, ""c_server"Изменить ранг", ""c_grey"Вы не можете повысить или понизить своё руководство!\n\n"c_white"Введите ID игрока, которого хотите повысить/понизить:", "Далее", "Назад");

			global_string[0] = EOS;
			for(new i = 0; i < f_info[PlayerInfo[playerid][member] -1][f_rank_settings][0]; i ++)
			{
				new line_string[64];
				format(line_string, 64, ""c_white"%d. "c_grey"%s\n", i + 1, f_rank[PlayerInfo[playerid][member] -1][i]);
				strcat(global_string, line_string);
			}
			show_dialog(playerid, d_rank, DIALOG_STYLE_LIST, ""c_server"Смена ранга", global_string, "Выбрать", "Закрыть");
			SetPVarInt(playerid, "pl_setrank_id", targetid);

		}
		case d_give_lic:
		{
			if(!response) return DeletePVar(playerid, "gl_id");
			new targetid = GetPVarInt(playerid, "gl_id");
			switch(listitem)
			{
				case 0:
				{
					new t_string[82 + MAX_PLAYER_NAME];
					format(t_string, sizeof(t_string), ""c_server"* S.INFO:"c_grey" %s выдал Вам водительские права.", PlayerInfo[playerid][name]);
					SendClientMessage(targetid, col_gray, t_string);
					PlayerInfo[targetid][drive_lic] = 1;
					format(t_string, sizeof t_string, ""c_server"* A.INFO:"c_grey" %s выдал %s водительские права.", PlayerInfo[playerid][name], PlayerInfo[targetid][name]);
					foreach(new i: admin_players)SendClientMessage(i, col_gray, t_string);
					update_int_sql(targetid, "u_drive_lic", PlayerInfo[targetid][drive_lic]);
				}
				case 1:
				{
					new t_string[82 + MAX_PLAYER_NAME];
					format(t_string, sizeof(t_string), ""c_server"* S.INFO:"c_grey" %s выдал Вам лицензию на воздушный транспорт.", PlayerInfo[playerid][name]);
					SendClientMessage(targetid, col_gray, t_string);
					PlayerInfo[targetid][fly_lic] = 1;
					format(t_string, sizeof t_string, ""c_server"* A.INFO:"c_grey" %s выдал %s лицензию на воздушный транспорт.", PlayerInfo[playerid][name], PlayerInfo[targetid][name]);
					foreach(new i: admin_players)SendClientMessage(i, col_gray, t_string);
					update_int_sql(targetid, "u_fly_lic", PlayerInfo[targetid][fly_lic]);
				}
				case 2:
				{
					new t_string[82 + MAX_PLAYER_NAME];
					format(t_string, sizeof(t_string), ""c_server"* S.INFO:"c_grey" %s выдал Вам лицензию на водный транспорт.", PlayerInfo[playerid][name]);
					SendClientMessage(targetid, col_gray, t_string);
					PlayerInfo[targetid][boat_lic] = 1;
					format(t_string, sizeof t_string, ""c_server"* A.INFO:"c_grey" %s выдал %s лицензию на водный транспорт.", PlayerInfo[playerid][name], PlayerInfo[targetid][name]);
					foreach(new i: admin_players)SendClientMessage(i, col_gray, t_string);
					update_int_sql(targetid, "u_boat_lic", PlayerInfo[targetid][boat_lic]);
				}
				case 3:
				{
					new t_string[82 + MAX_PLAYER_NAME];
					format(t_string, sizeof(t_string), ""c_server"* S.INFO:"c_grey" %s выдал Вам лицензию на оружие.", PlayerInfo[playerid][name]);
					SendClientMessage(targetid, col_gray, t_string);
					PlayerInfo[targetid][gun_lic] = 1;
					format(t_string, sizeof t_string, ""c_server"* A.INFO:"c_grey" %s выдал %s лицензию на оружие.", PlayerInfo[playerid][name], PlayerInfo[targetid][name]);
					foreach(new i: admin_players)SendClientMessage(i, col_gray, t_string);
					update_int_sql(targetid, "u_gun_lic", PlayerInfo[targetid][gun_lic]);
				}
			}

			DeletePVar(playerid, "gl_id");
		}
  		case d_gps:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					show_dialog(playerid, d_gps_0, DIALOG_STYLE_LIST, !""scm_dialog"Важные места", "\
					"c_server"1 | "c_white"Мэрия\n\
					"c_server"2 | "c_white"Аэропорт Los-Santos\n\
					"c_server"3 | "c_white"Железнодорожный вокзал Los-Santos\n\
					"c_server"4 | "c_white"Автовокзал Los-Santos\n\
					"c_server"5 | "c_white"Банк Los-Santos\n\
					"c_server"6 | "c_white"Банк San-Fierro\n\
					"c_server"7 | "c_white"Банк Las-Venturas\n\
					"c_server"8 | "c_white"Больница Los-Santos\n\
					"c_server"9 | "c_white"Больница San-Fierro\n\
					"c_server"10 | "c_white"Больница Las-Venturas\n\
					"c_server"11 | "c_white"Автошкола\n\
					"c_server"12 | "c_white"Центр водного транспорта\n\
					"c_server"13 | "c_white"Авиашкола\n\
					"c_server"14 | "c_white"Военкомат", "Выбрать", "Назад");
				}
				case 1:
				{
					show_dialog(playerid, d_gps_1, DIALOG_STYLE_LIST, !""scm_dialog"По работе", "\
					"c_server"1 | "c_white"Порт\n\
					"c_server"2 | "c_white"Шахта\n\
					"c_server"3 | "c_white"Завод по производству оружия\n\
					"c_server"4 | "c_white"Лесопилка\n\
					"c_server"5 | "c_white"Склад продуктов\n\
					"c_server"6 | "c_white"Топливная база\n\
					"c_server"7 | "c_white"Стоянка автобусов\n\
					"c_server"8 | "c_white"Стоянка механиков\n\
					"c_server"9 | "c_white"Стоянка такси Los-Santos\n\
					"c_server"10 | "c_white"Стоянка такси San-Fierro\n\
					"c_server"11 | "c_white"Стоянка такси Las-Venturas\n\
					"c_server"12 | "c_white"Стоянка дальнобойщиков\n\
					"c_server"13 | "c_white"Стоянка газонокосилок\n\
					"c_server"14 | "c_white"Разгрузочная зона завода\n\
					"c_server"15 | "c_white"Разгрузочная зона порта\n\
					"c_server"16 | "c_white"Бюро фотографов", !"Выбрать", !"Назад");
				}
				case 2:
				{
					show_dialog(playerid, d_gps_2, DIALOG_STYLE_LIST, !""scm_dialog"ОФициальные организации", "\
					"c_server"1 | "c_white"Мэрия\n\
					"c_server"2 | "c_white"Федеральное Бюро Расследований\n\
					"c_server"3 | "c_white"Национальная гвардия\n\
					"c_server"4 | "c_white"Полиция Los-Santos\n\
					"c_server"5 | "c_white"Полиция San-Fierro\n\
					"c_server"6 | "c_white"Полиция Las-Venturas\n\
					"c_server"7 | "c_white"Больница Los-Santos\n\
					"c_server"8 | "c_white"Больница San-Fierro\n\
					"c_server"9 | "c_white"Больница Las-Venturas\n\
					"c_server"10 | "c_white"National Public Radio", "Выбрать", "Назад");
				}
				case 3:
				{
					show_dialog(playerid, d_gps_3, DIALOG_STYLE_LIST, !""scm_dialog"Нелегальные организации", "\
					"c_server"1 | "c_white"Grove Street\n\
					"c_server"2 | "c_white"Ballas\n\
					"c_server"3 | "c_white"Vagos\n\
					"c_server"4 | "c_white"Varios Los Aztecas\n\
					"c_server"5 | "c_white"Rifa\n\
					"c_server"6 | "c_white"La Cosa Nostra\n\
					"c_server"7 | "c_white"Русская мафия\n\
					"c_server"8 | "c_white"Yakuza", "Выбрать", "Назад");
				}
				case 4:
				{
					show_dialog(playerid, d_gps_4, DIALOG_STYLE_LIST, !""scm_dialog"Автосалоны и автосервисы", "\
					"c_server"1 | "c_white"Автосалон Los-Santos\n\
					"c_server"2 | "c_white"Автосалон San-Fierro\n\
					"c_server"3 | "c_white"Автосалон Las-Venturas\n\
					"c_server"4 | "c_white"Авторынок Los-Santos\n\
					"c_server"5 | "c_white"Авторынок San-Fierro\n\
					"c_server"6 | "c_white"Авторынок Las-Venturas\n\
					"c_server"7 | "c_white"Автосервис Dillimore\n\
					"c_server"8 | "c_white"Автосервис San-Fierro\n\
					"c_server"9 | "c_white"Автосервис Las-Venturas\n\
					"c_server"10 | "c_white"Perfomance сервис Los-Santos\n\
					"c_server"11 | "c_white"Perfomance сервис Las-Venturas", "Выбрать", "Назад");
				}
				case 5:
				{
					show_dialog(playerid, d_gps_5, DIALOG_STYLE_LIST, !""scm_dialog"Прочее", "\
					"c_server"1 | "c_white"Казино\n\
					"c_server"2 | "c_white"Штрафстоянка\n\
					"c_server"3 | "c_white"Спортзал Los-Santos\n\
					"c_server"4 | "c_white"Спортзал San-Fierro\n\
					"c_server"5 | "c_white"Спортзал Las-Venturas\n\
					"c_server"6 | "c_white"Притон\n\
					"c_server"7 | "c_white"Магазин одежды ZIP Los-Santos\n\
					"c_server"8 | "c_white"Магазин одежды ProLaps Los-Santos\n\
					"c_server"9 | "c_white"Магазин одежды Victim Los-Santos\n\
					"c_server"10 | "c_white"Магазин одежды City Mall Los-Santos\n\
					"c_server"11 | "c_white"Магазин одежды URBAN Los-Santos\n\
					"c_server"12 | "c_white"Магазин одежды Binco Los-Santos\n\
					"c_server"13 | "c_white"Магазин одежды Binco San-Fierro\n\
					"c_server"14 | "c_white"Магазин одежды Victim San-Fierro\n\
					"c_server"15 | "c_white"Магазин одежды ZIP San-Fierro\n\
					"c_server"16 | "c_white"Магазин одежды URBAN San-Fierro\n\
					"c_server"17 | "c_white"Магазин одежды ZIP Las-Venturas\n\
					"c_server"18 | "c_white"Магазин одежды URBAN Las-Venturas\n\
					"c_server"19 | "c_white"Магазин одежды Binco Las-Venturas\n\
					"c_server"20 | "c_white"Магазин одежды ZIP Las-Venturas\n\
					"c_server"21 | "c_white"Регистрация на мероприятия\n\
					"c_server"22 | "c_white"Катерная база\n\
					"c_server"23 | "c_white"Тренировочный центр\n\
					"c_server"24 | "c_white"Авиасалон", "Выбрать", "Назад");
				}
				case 6:
				{
					show_dialog(playerid, d_gps_6, DIALOG_STYLE_LIST, ""scm_dialog"Пирсы", "\
					"c_server"1 | "c_white"Пирс Los-Santos\n\
					"c_server"2 | "c_white"Пирс San-Fierro\n\
					"c_server"3 | "c_white"Пирс Las-Venturas", "Выбрать", "Назад");
				}
				case 7:
				{
					show_dialog(playerid, d_gps_7, DIALOG_STYLE_LIST, ""scm_dialog"Аукцион и порт битых авто", "\
					"c_server"1 | "c_white"Аукцион San-Fierro\n\
					"c_server"2 | "c_white"Порт San-Fierro", "Выбрать", "Назад");
				}
				case 8:
				{
					show_dialog(playerid, d_gps_8, DIALOG_STYLE_LIST, ""scm_dialog"Аптеки", "\
					"c_server"1 | "c_white"Аптека Los-Santos\n\
					"c_server"2 | "c_white"Аптека San-Fierro\n\
					"c_server"3 | "c_white"Аптека Las-Venturas", "Выбрать", "Назад");
				}
				case 9:
				{
					new Float:_distance = 3000.0,
						_atm_id;

					for(new h = 0; h < atm_count; h ++)
					{
						new Float:__distance = GetPlayerDistanceFromPoint(playerid, atm_info[h][atm_position][0],atm_info[h][atm_position][1], atm_info[h][atm_position][2]);
						if(_distance > __distance)_distance = __distance, _atm_id = h;
					}


					SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
					is_gps_used {playerid} = 1;

					SetPlayerRaceCheckpoint(playerid, 1, atm_info[_atm_id][atm_position][0], atm_info[_atm_id][atm_position][1], atm_info[_atm_id][atm_position][2] -1.4, 0.0, 0.0, 0.0, 2.0);
				}
				case 10:
				{
					new Float:_distance = 3000.0,
						_b_id;

					for(new h = 0; h < b_count; h ++)
					{
						if(b_info[h][b_type] != bizz_type_shop) continue;
						new Float:__distance = GetPlayerDistanceFromPoint(playerid, b_info[h][b_position][0], b_info[h][b_position][1], b_info[h][b_position][2]);
						if(_distance > __distance)_distance = __distance, _b_id = h;
					}


					SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
					is_gps_used {playerid} = 1;

					SetPlayerRaceCheckpoint(playerid, 1, b_info[_b_id][b_position][0], b_info[_b_id][b_position][1], b_info[_b_id][b_position][2],0.0,0.0,0.0,2.0);

				}
				case 11:
				{
					new Float:_distance = 3000.0,
						_b_id;

					for(new h = 0; h < b_count; h ++)
					{
						if(b_info[h][b_type] != bizz_type_gas) continue;
						new Float:__distance = GetPlayerDistanceFromPoint(playerid, b_info[h][b_position][0], b_info[h][b_position][1], b_info[h][b_position][2]);
						if(_distance > __distance)_distance = __distance, _b_id = h;
					}


					SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
					is_gps_used {playerid} = 1;

					SetPlayerRaceCheckpoint(playerid, 1, b_info[_b_id][b_position][0], b_info[_b_id][b_position][1], b_info[_b_id][b_position][2],0.0,0.0,0.0,2.0);

				}
				case 12:
				{
					if(Iter_Count(player_vehicles[playerid]) == 0)
					{
						show_gps(playerid);
						return SendClientMessage(playerid, col_gray,"У Вас нет транспорта.");
					}
					new dialog_str[186],
						line_str[46];
					foreach(new veh_id:player_vehicles[playerid])
					{
						format(line_str, 46, "-%s[%s]\n", vehicle_name[GetVehicleModel(veh_id)-400], veh_info[veh_id -1][v_plate]);
						strcat(dialog_str, line_str);
					}
					show_dialog(playerid, d_gps_car, DIALOG_STYLE_LIST, ""scm_dialog"Поиск транспорта", dialog_str, "Выбрать", "Закрыть");

				}
			}
		}
		case d_gps_8:
		{
		    if(!response) return show_gps(playerid);
    		switch(listitem)
			{
				case 0:SetPlayerRaceCheckpoint(playerid, 1, 1022.2275, -979.9044, 42.5971, 0.0, 0.0, 0.0, 2.0); // Аптека Лос-Сантос
				case 1:SetPlayerRaceCheckpoint(playerid, 1, -2427.6448, 20.7939, 35.2299, 0.0, 0.0, 0.0, 2.0); // Аптека Сан-Фиерро
				case 2:SetPlayerRaceCheckpoint(playerid, 1, 2435.3816, 1651.5731, 10.8203, 0.0, 0.0, 0.0, 2.0); // Аптека Лас-Вентурас
			}
			SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
			is_gps_used {playerid} = 1;
		}
		case d_gps_7:
		{
		    if(!response) return show_gps(playerid);
			switch(listitem)
			{
				case 0:SetPlayerRaceCheckpoint(playerid, 1, -2332.4517, -158.1945, 35.3203, 0.0, 0.0, 0.0, 2.0); // Аукцион Сан-Фиерро
				case 1:SetPlayerRaceCheckpoint(playerid, 1, -1742.2302, 28.3208, 3.5547, 0.0, 0.0, 0.0, 2.0); // Порт Сан-Фиерро
			}
			SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
			is_gps_used {playerid} = 1;
		}
		case d_gps_6:
		{
			if(!response) return show_gps(playerid);
			switch(listitem)
			{
				case 0:SetPlayerRaceCheckpoint(playerid, 1, 848.7500, -1817.5187, 12.1922, 0.0, 0.0, 0.0, 2.0); // Пирс Лос-Сантос
				case 1:SetPlayerRaceCheckpoint(playerid, 1, -1552.1974, 1277.2759, 7.1858, 0.0, 0.0, 0.0, 2.0); // Пирс Сан-Фиерро
				case 2:SetPlayerRaceCheckpoint(playerid, 1, 2359.8523, 547.8397, 1.7969, 0.0, 0.0, 0.0, 2.0); // Пирс Лас-Вентурас
			}
			SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
			is_gps_used {playerid} = 1;
		}
		case d_gps_0:
		{
			if(!response) return show_gps(playerid);
			switch(listitem)
			{
				case 0:SetPlayerRaceCheckpoint(playerid, 1, 1481.2469,-1743.4403,13.5469, 0.0, 0.0, 0.0, 2.0); // Мэрия
				case 1:SetPlayerRaceCheckpoint(playerid, 1, 1685.4384,-2326.0999,13.5469, 0.0, 0.0, 0.0, 2.0); // Аэропорт Los-Santos
				case 2:SetPlayerRaceCheckpoint(playerid, 1, 1770.2854,-1899.6664,13.5570, 0.0, 0.0, 0.0, 2.0); // Железнодорожный вокзал Los-Santos
				case 3:SetPlayerRaceCheckpoint(playerid, 1, 996.5671,-1364.7584,13.8630, 0.0, 0.0, 0.0, 2.0); // Автовокзал Los-Santos
				case 4:SetPlayerRaceCheckpoint(playerid, 1, 1375.9095,-1088.4717,25.9133, 0.0, 0.0, 0.0, 2.0); // Банк Los-Santos
				case 5:SetPlayerRaceCheckpoint(playerid, 1, -2759.0283,376.1519,4.3359, 0.0, 0.0, 0.0, 2.0); // Банк San-Fierro
				case 6:SetPlayerRaceCheckpoint(playerid, 1, 2444.5293,2376.1658,12.1216, 0.0, 0.0, 0.0, 2.0); // Банк Las-Venturas
				case 7:SetPlayerRaceCheckpoint(playerid, 1, 1177.6394,-1323.2059,14.0806, 0.0, 0.0, 0.0, 2.0); // Больница Los-Santos
				case 8:SetPlayerRaceCheckpoint(playerid, 1, -2655.0811,634.1520,14.4531, 0.0, 0.0, 0.0, 2.0); // Больница San-Fierro
				case 9:SetPlayerRaceCheckpoint(playerid, 1, 1608.1101,1820.5635,10.8280, 0.0, 0.0, 0.0, 2.0); // Больница Las-Venturas
				case 10:SetPlayerRaceCheckpoint(playerid, 1, -2047.2146,-231.3838,35.4309, 0.0, 0.0, 0.0, 2.0); // Автошкола
				case 11:SetPlayerRaceCheckpoint(playerid, 1, 725.1122,-1437.9624,13.5318, 0.0, 0.0, 0.0, 2.0); // Центр водного транспорта
				case 12:SetPlayerRaceCheckpoint(playerid, 1, 342.4999,2540.6550,16.8427, 0.0, 0.0, 0.0, 2.0); // Авиашкола
				case 13:SetPlayerRaceCheckpoint(playerid, 1, 1541.4363,1011.1181,10.9312, 0.0, 0.0, 0.0, 2.0); // Военкомат

			}
			SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
			is_gps_used {playerid} = 1;
		}
		case d_gps_1:
		{
			if(!response) return show_gps(playerid);
			switch(listitem)
			{
				case 0:SetPlayerRaceCheckpoint(playerid, 1, 2645.9961,-2428.7090,13.2651, 0.0, 0.0, 0.0, 2.0); // Порт
				case 1:SetPlayerRaceCheckpoint(playerid, 1, 596.7739,868.2286,-43.0937, 0.0, 0.0, 0.0, 2.0); // Шахта
				case 2:SetPlayerRaceCheckpoint(playerid, 1, -50.2125,-282.1606,5.4297, 0.0, 0.0, 0.0, 2.0); // Завод
				case 3:SetPlayerRaceCheckpoint(playerid, 1, -1083.6823,-1647.6613,76.3672, 0.0, 0.0, 0.0, 2.0); // Лесопилка
				case 4:SetPlayerRaceCheckpoint(playerid, 1, 1666.7046,1012.2650,10.8203, 0.0, 0.0, 0.0, 2.0); // Склад продуктов
				case 5:SetPlayerRaceCheckpoint(playerid, 1, -1039.4039,-587.8505,32.0078, 0.0, 0.0, 0.0, 2.0); // Топливная база
				case 6:SetPlayerRaceCheckpoint(playerid, 1, 1267.4451,-1837.5916,13.3843, 0.0, 0.0, 0.0, 2.0); // Стоянка автобусов
				case 7:SetPlayerRaceCheckpoint(playerid, 1, 844.7337,-579.0624,16.7022, 0.0, 0.0, 0.0, 2.0); // Стоянка механиков
				case 8:SetPlayerRaceCheckpoint(playerid, 1, 1548.1969,-2296.5710,13.5488, 0.0, 0.0, 0.0, 2.0); // Стоянка такси Los-Santos
				case 9:SetPlayerRaceCheckpoint(playerid, 1, -2196.6113,310.1165,35.1172, 0.0, 0.0, 0.0, 2.0); // Стоянка такси San-Fierro
				case 10:SetPlayerRaceCheckpoint(playerid, 1, 2255.6587,2032.9498,10.8203, 0.0, 0.0, 0.0, 2.0); // Стоянка такси Las-Venturas
				case 11:SetPlayerRaceCheckpoint(playerid, 1, -490.5908,-561.7574,25.5234, 0.0, 0.0, 0.0, 2.0); // Стоянка дальнобойщиков
				case 12:SetPlayerRaceCheckpoint(playerid, 1, 1419.4921,-1838.0229,13.5469, 0.0, 0.0, 0.0, 2.0); // Стоянка газонокосилок
				case 13:SetPlayerRaceCheckpoint(playerid, 1, -18.8481, -272.7238, 5.4297, 0.0, 0.0, 0.0, 2.0); // завод
				case 14:SetPlayerRaceCheckpoint(playerid, 1, 2783.1785,-2391.0684,13.2751, 0.0, 0.0, 0.0, 2.0); // порт
				case 15:SetPlayerRaceCheckpoint(playerid, 1, -1822.6549, 540.6161, 35.1641, 0.0, 0.0, 0.0, 2.0); // бюро фотографов
			}
			SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
			is_gps_used {playerid} = 1;
		}
		case d_gps_2:
		{
			if(!response) return show_gps(playerid);
			switch(listitem)
			{
				case 0:SetPlayerRaceCheckpoint(playerid, 1, 1481.2469,-1743.4403,13.5469, 0.0, 0.0, 0.0, 2.0); // Мэрия
				case 1:SetPlayerRaceCheckpoint(playerid, 1, -2441.6599,504.5082,29.9486, 0.0, 0.0, 0.0, 2.0); // Федеральное Бюро Расследований
				case 2:SetPlayerRaceCheckpoint(playerid, 1, 132.2429,1951.3892,19.3990, 0.0, 0.0, 0.0, 2.0); // Национальная гвардия
				case 3:SetPlayerRaceCheckpoint(playerid, 1, 1551.5583,-1675.6575,15.9018, 0.0, 0.0, 0.0, 2.0); // Полиция Los-Santos
				case 4:SetPlayerRaceCheckpoint(playerid, 1, -1605.4452,717.9850,11.9641, 0.0, 0.0, 0.0, 2.0); // Полиция San-Fierro
				case 5:SetPlayerRaceCheckpoint(playerid, 1, 2289.7886,2423.5234,10.8203, 0.0, 0.0, 0.0, 2.0); // Полиция Las-Venturas
				case 6:SetPlayerRaceCheckpoint(playerid, 1, 1177.6394,-1323.2059,14.0806, 0.0, 0.0, 0.0, 2.0); // Больница Los-Santos
				case 7:SetPlayerRaceCheckpoint(playerid, 1, -2655.0811,634.1520,14.4531, 0.0, 0.0, 0.0, 2.0); // Больница San-Fierro
				case 8:SetPlayerRaceCheckpoint(playerid, 1, 1608.1101,1820.5635,10.8280, 0.0, 0.0, 0.0, 2.0); // Больница Las-Venturas
				case 9:SetPlayerRaceCheckpoint(playerid, 1, -2047.8457,463.8552,35.1719, 0.0, 0.0, 0.0, 2.0); // National Public Radio
			}
			SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
			is_gps_used {playerid} = 1;
		}
		case d_gps_3:
		{
			if(!response) return show_gps(playerid);
			switch(listitem)
			{
				case 0:SetPlayerRaceCheckpoint(playerid, 1, 2495.1611,-1686.8903,13.5144, 0.0, 0.0, 0.0, 2.0); // Grove Street
				case 1:SetPlayerRaceCheckpoint(playerid, 1, 1933.3119,-1127.9442,25.3154, 0.0, 0.0, 0.0, 2.0); // Ballas
				case 2:SetPlayerRaceCheckpoint(playerid, 1, 2786.8120,-1618.6207,10.9219, 0.0, 0.0, 0.0, 2.0); // Vagos
				case 3:SetPlayerRaceCheckpoint(playerid, 1, 2184.2168,-1804.2817,13.3699, 0.0, 0.0, 0.0, 2.0); // Varios Los Aztecas
				case 4:SetPlayerRaceCheckpoint(playerid, 1, 2726.9119,-1951.4961,13.5469, 0.0, 0.0, 0.0, 2.0); // Rifa
				case 5:SetPlayerRaceCheckpoint(playerid, 1, 1488.5848, 706.9007, 10.6719, 0.0, 0.0, 0.0, 2.0); // LCN
				case 6:SetPlayerRaceCheckpoint(playerid, 1, 1006.1592, 1731.9249, 10.7734, 0.0, 0.0, 0.0, 2.0); // RM
				case 7:SetPlayerRaceCheckpoint(playerid, 1, 2507.9148, 1823.6072, 10.8872, 0.0, 0.0, 0.0, 2.0); // YAKUZA
			}
			SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
			is_gps_used {playerid} = 1;
		}
		case d_gps_4:
		{
			if(!response) return show_gps(playerid);
			switch(listitem)
			{
				case 0:SetPlayerRaceCheckpoint(playerid, 1, 542.8738,-1279.4734,17.2422, 0.0, 0.0, 0.0, 2.0); // Автосалон Los-Santos
				case 1:SetPlayerRaceCheckpoint(playerid, 1, -1977.2920,293.7332,35.1719, 0.0, 0.0, 0.0, 2.0); // Автосалон San-Fierro
				case 2:SetPlayerRaceCheckpoint(playerid, 1, 2200.3027,1389.5463,10.8203, 0.0, 0.0, 0.0, 2.0); // Автосалон Las-Venturas
				case 3:SetPlayerRaceCheckpoint(playerid, 1, 2475.9170,-1518.5189,24.0068, 0.0, 0.0, 0.0, 2.0); // Авторынок Los-Santos
				case 4:SetPlayerRaceCheckpoint(playerid, 1, -2566.2539,548.0242,14.6242, 0.0, 0.0, 0.0, 2.0); // Авторынок San-Fierro
				case 5:SetPlayerRaceCheckpoint(playerid, 1, 2559.1948,1393.5327,10.6808, 0.0, 0.0, 0.0, 2.0); // Авторынок Las-Venturas
				case 6:SetPlayerRaceCheckpoint(playerid, 1, 844.7337,-579.0624,16.7022, 0.0, 0.0, 0.0, 2.0); // Автосервис Dillimore
				case 7:SetPlayerRaceCheckpoint(playerid, 1, -1787.7020,1197.0492,25.1194, 0.0, 0.0, 0.0, 2.0); // Автосервис San-Fierro
				case 8:SetPlayerRaceCheckpoint(playerid, 1, 1648.8748,2187.7236,10.8203, 0.0, 0.0, 0.0, 2.0); // Автосервис Las-Venturas
				case 9:SetPlayerRaceCheckpoint(playerid, 1, 1618.3093,-1886.6254,13.5469, 0.0, 0.0, 0.0, 2.0); // Perfomance сервис Los-Santos
				case 10:SetPlayerRaceCheckpoint(playerid, 1, 2393.8086,1479.7675,10.8203, 0.0, 0.0, 0.0, 2.0); // Perfomance сервис Las-Venturas
			}
			SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
			is_gps_used {playerid} = 1;
		}
		case d_gps_5:
		{
			if(!response) return show_gps(playerid);
			switch(listitem)
			{
				case 0:SetPlayerRaceCheckpoint(playerid, 1, 2032.7915,1008.2941,10.8203, 0.0, 0.0, 0.0, 2.0); // Казино
				case 1:SetPlayerRaceCheckpoint(playerid, 1, 223.9873,14.9095,2.5781, 0.0, 0.0, 0.0, 2.0); // Штрафстоянка
				case 2:SetPlayerRaceCheckpoint(playerid, 1, 2226.9744,-1722.8468,13.5542, 0.0, 0.0, 0.0, 2.0); // Спортзал Los-Santos
				case 3:SetPlayerRaceCheckpoint(playerid, 1, -2267.8867,-155.3427,35.3203, 0.0, 0.0, 0.0, 2.0); // Спортзал San-Fierro
				case 4:SetPlayerRaceCheckpoint(playerid, 1, 1953.0270,2291.6316,10.8203, 0.0, 0.0, 0.0, 2.0); // Спортзал Las-Venturas
				case 5:SetPlayerRaceCheckpoint(playerid, 1, 2169.5923,-1675.0739,15.0859, 0.0, 0.0, 0.0, 2.0); // Притон
				case 6:SetPlayerRaceCheckpoint(playerid, 1, 1461.7216,-1141.8759,24.3906, 0.0, 0.0, 0.0, 2.0); // Магазин одежды ZIP Los-Santos
				case 7:SetPlayerRaceCheckpoint(playerid, 1, 502.0023,-1357.2284,16.1328, 0.0, 0.0, 0.0, 2.0); // Магазин одежды ProLaps Los-Santos
				case 8:SetPlayerRaceCheckpoint(playerid, 1, 457.7069,-1501.4133,31.0385, 0.0, 0.0, 0.0, 2.0); // Магазин одежды Victim Los-Santos
				case 9:SetPlayerRaceCheckpoint(playerid, 1, 1142.4976,-1517.4814,15.7969, 0.0, 0.0, 0.0, 2.0); // Магазин одежды City Mall Los-Santos
				case 10:SetPlayerRaceCheckpoint(playerid, 1, 2112.8811,-1214.5518,23.9674, 0.0, 0.0, 0.0, 2.0); // Магазин одежды URBAN Los-Santos
				case 11:SetPlayerRaceCheckpoint(playerid, 1, 2244.8875,-1663.3180,15.4766, 0.0, 0.0, 0.0, 2.0); // Магазин одежды Binco Los-Santos
				case 12:SetPlayerRaceCheckpoint(playerid, 1, -2377.6899,910.1583,45.4453, 0.0, 0.0, 0.0, 2.0); // Магазин одежды Binco San-Fierro
				case 13:SetPlayerRaceCheckpoint(playerid, 1, -1702.9193,941.2182,24.8906, 0.0, 0.0, 0.0, 2.0); // Магазин одежды Victim San-Fierro
				case 14:SetPlayerRaceCheckpoint(playerid, 1, -1884.6798,863.3488,35.1719, 0.0, 0.0, 0.0, 2.0); // Магазин одежды ZIP San-Fierro
				case 15:SetPlayerRaceCheckpoint(playerid, 1, -2494.1118,-28.9622,25.7656, 0.0, 0.0, 0.0, 2.0); // Магазин одежды URBAN San-Fierro
				case 16:SetPlayerRaceCheckpoint(playerid, 1, 2571.9722,1895.7080,10.8280, 0.0, 0.0, 0.0, 2.0); // Магазин одежды ZIP Las-Venturas
				case 17:SetPlayerRaceCheckpoint(playerid, 1, 2773.4866,2447.1626,10.8203, 0.0, 0.0, 0.0, 2.0); // Магазин одежды URBAN Las-Venturas
				case 18:SetPlayerRaceCheckpoint(playerid, 1, 1653.8080,1733.3215,10.8203, 0.0, 0.0, 0.0, 2.0); // Магазин одежды Binco Las-Venturas
				case 19:SetPlayerRaceCheckpoint(playerid, 1, 2090.5264,2221.8210,10.8203, 0.0, 0.0, 0.0, 2.0); // Магазин одежды ZIP Las-Venturas
				case 20:SetPlayerRaceCheckpoint(playerid, 1, 1310.1250,-1372.3296,13.6004, 0.0, 0.0, 0.0, 2.0); // Регистрация на мероприятия
				case 21:SetPlayerRaceCheckpoint(playerid, 1, 2890.6497, -365.0804, 8.1380, 0.0, 0.0, 0.0, 2.0); // катерная база
				case 22:SetPlayerRaceCheckpoint(playerid, 1, 2460.2515,-2120.6069,13.5530, 0.0, 0.0, 0.0, 2.0); // тренировочный ценрт
				case 23:SetPlayerRaceCheckpoint(playerid, 1, -1397.3505,-542.3858,14.1484, 0.0, 0.0, 0.0, 2.0); // авиасалон
			}
			SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
			is_gps_used {playerid} = 1;
		}
		case d_gps_car:
		{
			if(!response)
			{
				show_gps(playerid);
				return 1;
			}

			new _step = 0,
				carid;
			foreach(new _v_id:player_vehicles[playerid])
			{
				if(_step == listitem)
				{
					carid = _v_id;
				}
				_step ++;
			}
			if(veh_info[carid -1][v_gps_tracker] == 0)
			{
				if(Iter_Count(player_vehicles[playerid]) == 0)
				{
					show_gps(playerid);
					return SendClientMessage(playerid, col_gray,"У Вас нет транспорта или Ваш автомобиль на штрафстаянке.");
				}
				new dialog_str[186],
					line_str[46];
				foreach(new veh_id:player_vehicles[playerid])
				{
					format(line_str, 46, "-%s[%s]\n", vehicle_name[GetVehicleModel(veh_id)-400], veh_info[veh_id -1][v_plate]);
					strcat(dialog_str, line_str);
				}
				show_dialog(playerid, d_gps_car, DIALOG_STYLE_LIST, ""c_server"Поиск транспорта", dialog_str, "Выбрать", "Закрыть");
				return SendClientMessage(playerid, col_gray,"В данном транспорте нет GPS-трекера.");
			}
			SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
			is_gps_used {playerid} = 1;
			SetPlayerRaceCheckpoint(playerid, 1, veh_info[carid -1][v_now_pos][0], veh_info[carid -1][v_now_pos][1], veh_info[carid -1][v_now_pos][2], 0.0, 0.0, 0.0, 2.0);
		}
		case d_take:
		{
			if(!response) return DeletePVar(playerid, "target_id");
			new targetid = GetPVarInt(playerid, "target_id");
			if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, col_gray, "Игрок не найден."),DeletePVar(playerid, "target_id");
			if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[targetid][p_pos][0], p_t_info[targetid][p_pos][1], p_t_info[targetid][p_pos][2]) || GetPlayerVirtualWorld(targetid)!= GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, col_gray, "Игрок слишком далеко."),DeletePVar(playerid, "target_id");
			switch(listitem)
			{
				case 0:
				{
					if(!PlayerInfo[targetid][drive_lic])
					{
						new header_string[18 + MAX_PLAYER_NAME];
						format(header_string, sizeof(header_string), ""c_server"Изъять у %s", PlayerInfo[targetid][name]);
						show_dialog(playerid, d_take, DIALOG_STYLE_LIST, header_string, "Водительские права\nЛицензию на вод.транспорт\nЛицензию на возд.транспорт\nЛицензию на оружие\nПатроны\nЕд.оружия\nНаркотики", "Выбрать", "Закрыть");
						return SendClientMessage(playerid, col_gray, "У игрока нет водительских прав.");
					}
					PlayerInfo[targetid][drive_lic] = 0;
					new t_string[92];
					format(t_string, sizeof(t_string),"%s %s изъял у Вас водительские права.",
					f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1],
					PlayerInfo[playerid][name]);
					SendClientMessage(targetid, col_wavy, t_string);
					format(t_string, 62,"Вы изъяли у %s водительские права.",
					PlayerInfo[targetid][name]);
					SendClientMessage(playerid, col_wavy, t_string);
					update_int_sql(targetid, "u_drive_lic", PlayerInfo[targetid][drive_lic]);
				}
				case 1:
				{
					if(!PlayerInfo[targetid][boat_lic])
					{
						new header_string[18 + MAX_PLAYER_NAME];
						format(header_string, sizeof(header_string), ""c_server"Изъять у %s", PlayerInfo[targetid][name]);
						show_dialog(playerid, d_take, DIALOG_STYLE_LIST, header_string, "Водительские права\nЛицензию на вод.транспорт\nЛицензию на возд.транспорт\nЛицензию на оружие\nПатроны\nЕд.оружия\nНаркотики", "Выбрать", "Закрыть");
						return SendClientMessage(playerid, col_gray, "У игрока нет лицензии на управление водным транспортом.");
					}
					PlayerInfo[targetid][boat_lic] = 0;
					new t_string[128];
					format(t_string, sizeof(t_string),"%s %s изъял у Вас лицензию на управление водным транспортом.",
					f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1],
					PlayerInfo[playerid][name]);
					SendClientMessage(targetid, col_wavy, t_string);
					format(t_string, 90,"Вы изъяли у %s лицензию на управление водным транспортом.",
					PlayerInfo[targetid][name]);
					SendClientMessage(playerid, col_wavy, t_string);
					update_int_sql(targetid, "u_boat_lic", PlayerInfo[targetid][boat_lic]);
				}
				case 2:
				{
					if(!PlayerInfo[targetid][fly_lic])
					{
						new header_string[18 + MAX_PLAYER_NAME];
						format(header_string, sizeof(header_string), ""c_server"Изъять у %s", PlayerInfo[targetid][name]);
						show_dialog(playerid, d_take, DIALOG_STYLE_LIST, header_string, "Водительские права\nЛицензию на вод.транспорт\nЛицензию на возд.транспорт\nЛицензию на оружие\nПатроны\nЕд.оружия\nНаркотики", "Выбрать", "Закрыть");
						return SendClientMessage(playerid, col_gray, "У игрока нет лицензии на управление воздушным транспортом.");
					}
					PlayerInfo[targetid][fly_lic] = 0;
					new t_string[128];
					format(t_string, sizeof(t_string),"%s %s изъял у Вас лицензию на управление воздушным транспортом.",
					f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1],
					PlayerInfo[playerid][name]);
					SendClientMessage(targetid, col_wavy, t_string);
					format(t_string, 90,"Вы изъяли у %s лицензию на управление воздушным транспортом.",
					PlayerInfo[targetid][name]);
					SendClientMessage(playerid, col_wavy, t_string);
					update_int_sql(targetid, "u_fly_lic", PlayerInfo[targetid][fly_lic]);
				}
				case 3:
				{
					if(!PlayerInfo[targetid][gun_lic])
					{
						new header_string[18 + MAX_PLAYER_NAME];
						format(header_string, sizeof(header_string), ""c_server"Изъять у %s", PlayerInfo[targetid][name]);
						show_dialog(playerid, d_take, DIALOG_STYLE_LIST, header_string, "Водительские права\nЛицензию на вод.транспорт\nЛицензию на возд.транспорт\nЛицензию на оружие\nПатроны\nЕд.оружия\nНаркотики", "Выбрать", "Закрыть");
						return SendClientMessage(playerid, col_gray, "У игрока нет лицензии на оружие.");
					}
					PlayerInfo[targetid][gun_lic] = 0;
					new t_string[128];
					format(t_string, sizeof(t_string),"%s %s изъял у Вас лицензию на оружие.",
					f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1],
					PlayerInfo[playerid][name]);
					SendClientMessage(targetid, col_wavy, t_string);
					format(t_string, 90,"Вы изъяли у %s лицензию на оружие.",
					PlayerInfo[targetid][name]);
					SendClientMessage(playerid, col_wavy, t_string);
					update_int_sql(targetid, "u_gun_lic", PlayerInfo[targetid][gun_lic]);
				}
				case 4:
				{
					if(!PlayerInfo[targetid][crim_ammo])
					{
						new header_string[18 + MAX_PLAYER_NAME];
						format(header_string, sizeof(header_string), ""c_server"Изъять у %s", PlayerInfo[targetid][name]);
						show_dialog(playerid, d_take, DIALOG_STYLE_LIST, header_string, "Водительские права\nЛицензию на вод.транспорт\nЛицензию на возд.транспорт\nЛицензию на оружие\nПатроны\nЕд.оружия\nНаркотики", "Выбрать", "Закрыть");
						return SendClientMessage(playerid, col_gray, "У игрока нет патронов.");
					}
					PlayerInfo[targetid][crim_ammo] = 0;
					new t_string[128];
					format(t_string, sizeof(t_string),"%s %s изъял у Вас патроны.",
					f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1],
					PlayerInfo[playerid][name]);
					SendClientMessage(targetid, col_wavy, t_string);
					format(t_string, 54,"Вы изъяли у %s патроны.",
					PlayerInfo[targetid][name]);
					SendClientMessage(playerid, col_wavy, t_string);
					update_int_sql(targetid, "u_ammo", PlayerInfo[targetid][crim_ammo]);
				}
				case 5:
				{
					if(!PlayerInfo[targetid][crim_guns])
					{
						new header_string[18 + MAX_PLAYER_NAME];
						format(header_string, sizeof(header_string), ""c_server"Изъять у %s", PlayerInfo[targetid][name]);
						show_dialog(playerid, d_take, DIALOG_STYLE_LIST, header_string, "Водительские права\nЛицензию на вод.транспорт\nЛицензию на возд.транспорт\nЛицензию на оружие\nПатроны\nЕд.оружия\nНаркотики", "Выбрать", "Закрыть");
						return SendClientMessage(playerid, col_gray, "У игрока нет ед.оружия.");
					}
					new t_string[128];
					format(t_string, sizeof(t_string),"%s %s изъял у Вас %d ед.оружия.",
					f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1],
					PlayerInfo[playerid][name],
					PlayerInfo[targetid][crim_guns]);
					SendClientMessage(targetid, col_wavy, t_string);
					format(t_string, 72,"Вы изъяли у %s %d ед.оружия.",
					PlayerInfo[targetid][name], PlayerInfo[targetid][crim_guns]);
					PlayerInfo[targetid][crim_guns] = 0;
					SendClientMessage(playerid, col_wavy, t_string);
					update_int_sql(targetid, "u_guns", PlayerInfo[targetid][crim_guns]);
				}
				case 6:
				{
					if(!PlayerInfo[targetid][drugs])
					{
						new header_string[18 + MAX_PLAYER_NAME];
						format(header_string, sizeof(header_string), ""c_server"Изъять у %s", PlayerInfo[targetid][name]);
						show_dialog(playerid, d_take, DIALOG_STYLE_LIST, header_string, "Водительские права\nЛицензию на вод.транспорт\nЛицензию на возд.транспорт\nЛицензию на оружие\nПатроны\nЕд.оружия\nНаркотики", "Выбрать", "Закрыть");
						return SendClientMessage(playerid, col_gray, "У игрока нет наркотиков.");
					}
					new t_string[128];
					format(t_string, sizeof(t_string),"%s %s изъял у Вас %d грамм наркотиков.",
					f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1],
					PlayerInfo[playerid][name],
					PlayerInfo[targetid][drugs]);
					SendClientMessage(targetid, col_wavy, t_string);
					format(t_string, 72,"Вы изъяли у %s %d грамм наркотиков.",
					PlayerInfo[targetid][name], PlayerInfo[targetid][drugs]);
					PlayerInfo[targetid][drugs] = 0;
					SendClientMessage(playerid, col_wavy, t_string);
					update_int_sql(targetid, "u_drugs", PlayerInfo[targetid][drugs]);
				}
			}
			DeletePVar(playerid, "target_id");
		}
		case d_cellarmenu:
		{
			new house_id = PlayerInfo[playerid][cellar] -1;
			switch(listitem)
			{
				case 0:
				{
					if(cellar_info[house_id][cl_closed] == 0)
					{
						cellar_info[house_id][cl_closed] = 1;
						GameTextForPlayer(playerid,"~r~closed", 2000, 3);
					}
					else
					{
						cellar_info[house_id][cl_closed] = 0;
						GameTextForPlayer(playerid, "~g~opened", 2000, 3);
					}
					new query_string[98];
					format(query_string, sizeof(query_string), "UPDATE `cellars` SET `cl_closed` = '%d' WHERE `cl_id` = '%d'", cellar_info[house_id][cl_closed], house_id + 1);
					mysql_tquery(sql_connection, query_string);
				}
				case 1:
				{
					global_string[0] = EOS;
					for(new i;i<4;i++)
					{
						new c[16];
						if(cellar_info[house_id][cl_improve][i]) c = ""c_green"";
						else if(!i || cellar_info[house_id][cl_improve][i -1]) c = ""c_white"";
						else c = ""c_grey"";
						if(!i) format(global_string, sizeof(global_string),"%s%d. %s", c, i + 1, cl_improve_name[i]);
						else format(global_string, sizeof(global_string),"%s\n%s%d. %s", global_string, c, i + 1, cl_improve_name[i]);
					}
					show_dialog(playerid, d_cl_improvement, DIALOG_STYLE_LIST, ""c_server"Улучшения подвала", global_string, "Выбрать", "Назад");
				}
				case 2:
				{
					if(!cellar_info[house_id][cl_improve][1]) return show_cellarmenu(playerid), SendClientMessage(playerid, col_gray, "У Вас нет данного улучшения");
					show_dialog(playerid, d_cl_warehouse_access, DIALOG_STYLE_LIST, ""c_server"Cклад", "Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие", "Выбрать", "Закрыть");
				}
			}
		}
		case d_cl_improvement:
		{
			if(!response) return show_cellarmenu(playerid);
			new house_id = PlayerInfo[playerid][cellar] -1;
			if(cellar_info[house_id][cl_improve][listitem])
			{
				SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас уже установлено это улучшение.");
				show_cellarmenu(playerid);
				return 1;
			}
			else if((!listitem && !cellar_info[house_id][cl_improve][listitem]) || (cellar_info[house_id][cl_improve][listitem-1] && !cellar_info[house_id][cl_improve][listitem]))
			{
				new mes[128];
				format(mes, sizeof(mes),""c_white"Вы хотите купить улучшение: "c_server"\"%s\"?\n\n"c_white"Оно обойдется Вам в "c_green"$%d.",cl_improve_name[listitem], cl_improve_price[listitem]);
				show_dialog(playerid, d_cl_improvement_accept, DIALOG_STYLE_MSGBOX,""c_server"Улучшения подвала",mes,"Купить","Отмена");
				SetPVarInt(playerid,"improveid", listitem);
			}
			else
			{
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Это улучшение еще не доступно Вам.");
				show_cellarmenu(playerid);
			}
		}
		case d_cl_improvement_accept:
		{
			new improveid = GetPVarInt(playerid,"improveid");
			DeletePVar(playerid,"improveid");
			if(!response) return show_cellarmenu(playerid);
			new price = cl_improve_price[improveid];
			if(PlayerInfo[playerid][money] < price)
			{
				show_cellarmenu(playerid);
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно денег.");
			}
			new house_id = PlayerInfo[playerid][cellar] -1;

			cellar_info[house_id][cl_improve][improveid] = 1;
			new data[32], query[128];
			for(new i;i<4;i++)
			{
				if(!i) format(data, sizeof(data),"%d", cellar_info[house_id][cl_improve][i]);
				else format(data, sizeof(data),"%s|%d", data, cellar_info[house_id][cl_improve][i]);
			}
			format(query,sizeof(query),"UPDATE `cellars` SET `cl_improve` = '%s' WHERE `cl_id` = '%d'", data, house_id + 1);
			mysql_tquery(sql_connection, query);


			give_money(playerid, -price);
			insert_money_log(playerid, INVALID_PLAYER_ID, -price, "Улучшение подвала");

			SendClientMessage(playerid, col_white,""c_green"* "c_white"Поздравляем, Вы купили улучшение для подвала.");
			for(new i;i<4;i++)
			{
				new c[16];
				if(cellar_info[house_id][cl_improve][i]) c = ""c_green"";
				else if(!i || cellar_info[house_id][cl_improve][i -1]) c = ""c_white"";
				else c = ""c_grey"";
				if(!i) format(global_string, sizeof(global_string),"%s%d. %s", c, i + 1, cl_improve_name[i]);
				else format(global_string, sizeof(global_string),"%s\n%s%d. %s", global_string, c, i + 1, cl_improve_name[i]);
			}
			show_dialog(playerid, d_cl_improvement, DIALOG_STYLE_LIST, ""c_server"Улучшения подвала", global_string, "Выбрать", "Назад");
		}
		case d_cl_warehouse_access:
		{
			if(!response) return show_cellarmenu(playerid);
			if(response)
			{
				switch(listitem)
				{
					case 0:
					{
						new string[144];
					    new h = GetPVarInt(playerid, "cellar_id")-1;
						format(string, sizeof string, ""c_white"На складе "c_green" %d$"c_white".\nВведите сумму, которую желаете взять:",cellar_info[h][cl_safe_data][1]);
						show_dialog(playerid, d_cl_warehouse_money_get, DIALOG_STYLE_INPUT, ""c_server"Взять деньги", string, "Принять", "Назад");
					}
					case 1:
					{
					    new string[144];
					    new h = GetPVarInt(playerid, "cellar_id")-1;
						format(string, sizeof string, ""c_white"На складе "c_green" %d$"c_white".\nВведите сумму, которую желаете положить в склад:",cellar_info[h][cl_safe_data][1]);
						show_dialog(playerid, d_cl_warehouse_money_put, DIALOG_STYLE_INPUT, ""c_server"Положить деньги", string, "Принять", "Назад");
					}
					case 2:
					{
						new string[144];
					    new h = GetPVarInt(playerid, "cellar_id")-1;
						format(string, sizeof string, ""c_white"На складе "c_green" %d"c_white" грамм наркотиков.\nВведите количество, которое желаете взять:",cellar_info[h][cl_safe_data][0]);
						show_dialog(playerid, d_cl_warehouse_drugs_get, DIALOG_STYLE_INPUT, ""c_server"Взять наркотики", string, "Принять", "Назад");
					}
					case 3:
					{
						new string[144];
					    new h = GetPVarInt(playerid, "cellar_id")-1;
						format(string, sizeof string, ""c_white"На складе "c_green" %d"c_white" грамм наркотиков.\nВведите количество, которое желаете положить:",cellar_info[h][cl_safe_data][0]);
						show_dialog(playerid, d_cl_warehouse_drugs_put, DIALOG_STYLE_INPUT, ""c_server"Положить наркотики", string, "Принять", "Назад");
					}
					case 4:
					{
						new string[198];
						new h = GetPVarInt(playerid, "cellar_id")-1;
						for(new i = 0; i < 3;i++)
						{
						    new str[98], gunname[32];
							if(cellar_info[h][cl_safe_guns][i] > 38 || cellar_info[h][cl_safe_guns][i] < 1 || cellar_info[h][cl_safe_guns][i + 3] == 0)strcat(string, ""c_grey"-Пусто\n");
							else
							{
								GetWeaponName(cellar_info[h][cl_safe_guns][i], gunname, 32);
								format(str, sizeof str, ""c_white"Оружие: "c_server"%s"c_white"   |   "c_server"%d пт.\n", gunname, cellar_info[h][cl_safe_guns][i + 3]);
								strcat(string, str);
							}
						}
						show_dialog(playerid, d_cl_warehouse_guns, DIALOG_STYLE_LIST, ""c_server"Оружие на складе:", string, "Выбрать", "Назад");
					}
				}
			}
		}
		case d_cl_warehouse_guns:
		{
			if(!response) return show_dialog(playerid, d_cl_warehouse_access, DIALOG_STYLE_LIST, ""c_server"Cклад", "Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие", "Выбрать", "Закрыть");
			new house_id = GetPVarInt(playerid, "cellar_id")-1;
			SetPVarInt(playerid,"listitem",listitem);
			new weaponid = GetPlayerWeapon(playerid);
			if(cellar_info[house_id][cl_safe_guns][listitem] == 0)
			{
				if(!weaponid)
				{
					new string[198];
					new h = GetPVarInt(playerid, "cellar_id")-1;
					for(new i = 0; i < 3;i++)
					{
						new str[98], gunname[32];
						if(cellar_info[h][cl_safe_guns][i] > 38 || cellar_info[h][cl_safe_guns][i] < 1 || cellar_info[h][cl_safe_guns][i + 3] == 0)strcat(string, ""c_grey"-Пусто\n");
						else
						{
							GetWeaponName(cellar_info[h][cl_safe_guns][i], gunname, 32);
							format(str, sizeof str, ""c_white"Оружие: "c_server"%s"c_white"   |   "c_server"%d пт.\n", gunname, cellar_info[h][cl_safe_guns][i + 3]);
							strcat(string, str);
						}
					}
					show_dialog(playerid, d_cl_warehouse_guns, DIALOG_STYLE_LIST, ""c_server"Оружие на складе:", string, "Выбрать", "Назад");
					return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Возьмите в руку оружие которое хотите положить в склад.");
				}
				new string[144];
				format(string, sizeof string, ""c_white"На складе "c_server" %d"c_white" патронов.\nВведи количество, которое желаете положить:",cellar_info[house_id][cl_safe_guns][listitem + 3]);
				show_dialog(playerid, d_cl_warehouse_guns_put, DIALOG_STYLE_INPUT, ""c_server"Положить оружие", string, "Принять", "Назад");
				return 0;
			}
			if(weaponid == cellar_info[house_id][cl_safe_guns][listitem])
			{
				new string[144];
				format(string, sizeof string, ""c_white"На складе "c_server" %d"c_white" патронов.\nВведи количество, которое желаете положить:",cellar_info[house_id][cl_safe_guns][listitem + 3]);
				show_dialog(playerid, d_cl_warehouse_guns_put, DIALOG_STYLE_INPUT, ""c_server"Положить оружие", string, "Принять", "Назад");
				return 0;
			}
			if(weaponid != cellar_info[house_id][cl_safe_guns][listitem])
			{
				new string[144];
				format(string, sizeof string, ""c_white"На складе "c_server" %d"c_white" патронов.\nВведи количество, которое желаете взять:",cellar_info[house_id][cl_safe_guns][listitem + 3]);
				show_dialog(playerid, d_cl_warehouse_guns_get, DIALOG_STYLE_INPUT, ""c_server"Взять оружие", string, "Принять", "Назад");
				return 0;
			}
		}
		case d_cl_warehouse_drugs_put:
		{
			if(!response) return show_dialog(playerid, d_cl_warehouse_access, DIALOG_STYLE_LIST, ""c_server"Cклад", "Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие", "Выбрать", "Закрыть");
			if(response)
			{
				new h = GetPVarInt(playerid, "cellar_id")-1,
						_drugs = strval(inputtext);

				if(_drugs > PlayerInfo[playerid][drugs])
				{
					new string[144];
					format(string, sizeof string, ""c_white"На складе "c_green" %d"c_white" грамм наркотиков.\nВведите количество, которое желаете положить:",cellar_info[h][cl_safe_data][0]);
					show_dialog(playerid, d_cl_warehouse_drugs_put, DIALOG_STYLE_INPUT, ""c_server"Положить наркотики", string, "Принять", "Назад");
					return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"У вас нет такого кол-ва наркотиков.");
				}
				if(_drugs < 0 || _drugs > 1000)
				{
					new string[144];
					format(string, sizeof string, ""c_white"На складе "c_green" %d"c_white" грамм наркотиков.\nВведите количество, которое желаете положить:",cellar_info[h][cl_safe_data][0]);
					show_dialog(playerid, d_cl_warehouse_drugs_put, DIALOG_STYLE_INPUT, ""c_server"Положить наркотики", string, "Принять", "Назад");
					return SendClientMessage(playerid,col_gray, ""c_orange_red"* "c_grey"Число не может быть меньше 0 или больше 1000.");
				}
				cellar_info[h][cl_safe_data][0] += _drugs;
				PlayerInfo[playerid][drugs] -= _drugs;
				update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);


				new _text_string[148];
				format(_text_string, sizeof _text_string, "UPDATE `cellars` SET `cl_safe_data` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `cl_id` = '%d' LIMIT 1",
				cellar_info[h][cl_safe_data][0], cellar_info[h][cl_safe_data][1],
				cellar_info[h][cl_safe_guns][0],	cellar_info[h][cl_safe_guns][1], cellar_info[h][cl_safe_guns][2],
				cellar_info[h][cl_safe_guns][3],	cellar_info[h][cl_safe_guns][4], cellar_info[h][cl_safe_guns][5],
				cellar_info[h][cl_id]);
				mysql_tquery(sql_connection, _text_string);
				format(_text_string, 128, ""c_green"* "c_white"Вы положили "c_green"%d гр."c_white" наркотиков в склад. Теперь на складе: "c_green"%i гр.", _drugs, cellar_info[h][cl_safe_data][0]);
				SendClientMessage(playerid, col_white, _text_string);
				show_dialog(playerid, d_cl_warehouse_access, DIALOG_STYLE_LIST, ""c_server"Cклад", "Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие", "Выбрать", "Закрыть");

			}
		}
		case d_cl_warehouse_drugs_get:
		{
			if(!response) return show_dialog(playerid, d_cl_warehouse_access, DIALOG_STYLE_LIST, ""c_server"Cклад", "Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие", "Выбрать", "Закрыть");
			if(response)
			{
				new h = GetPVarInt(playerid, "cellar_id")-1, _drugs = strval(inputtext);
				if(_drugs > cellar_info[h][cl_safe_data][0])
				{
					new string[144];
					format(string, sizeof string, ""c_white"На складе "c_green" %d"c_white" грамм наркотиков.\nВведите количество, которое желаете взять:",cellar_info[h][cl_safe_data][0]);
					show_dialog(playerid, d_cl_warehouse_drugs_get, DIALOG_STYLE_INPUT, ""c_server"Взять наркотики", string, "Принять", "Назад");
					return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"У вас нет такого кол-ва наркотиков на складе.");
				}
				if(_drugs < 0 || _drugs > 1000)
				{
					new string[144];
					format(string, sizeof string, ""c_white"На складе "c_green" %d"c_white" грамм наркотиков.\nВведите количество, которое желаете взять:",cellar_info[h][cl_safe_data][0]);
					show_dialog(playerid, d_cl_warehouse_drugs_get, DIALOG_STYLE_INPUT, ""c_server"Взять наркотики", string, "Принять", "Назад");
					return SendClientMessage(playerid,col_gray, ""c_orange_red"* "c_grey"Число не может быть меньше 0 или больше 1000.");

				}
				cellar_info[h][cl_safe_data][0] -= _drugs;
				PlayerInfo[playerid][drugs] += _drugs;
				update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);

				new _text_string[148];
				format(_text_string, sizeof _text_string, "UPDATE `cellars` SET `cl_safe_data` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `cl_id` = '%d' LIMIT 1",
				cellar_info[h][cl_safe_data][0], cellar_info[h][cl_safe_data][1],
				cellar_info[h][cl_safe_guns][0],	cellar_info[h][cl_safe_guns][1], cellar_info[h][cl_safe_guns][2],
				cellar_info[h][cl_safe_guns][3],	cellar_info[h][cl_safe_guns][4], cellar_info[h][cl_safe_guns][5],
				cellar_info[h][cl_id]);
				mysql_tquery(sql_connection, _text_string);
				format(_text_string, 68, "Вы взяли %d гр. наркотиков со склада. Теперь на складе: %i гр.", _drugs, cellar_info[h][cl_safe_data][0]);
				SendClientMessage(playerid, col_wavy, _text_string);
				show_dialog(playerid, d_cl_warehouse_access, DIALOG_STYLE_LIST, ""c_server"Cклад", "Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие", "Выбрать", "Закрыть");
			}
		}
		case d_cl_warehouse_money_put:
		{
			if(!response) return show_dialog(playerid, d_cl_warehouse_access, DIALOG_STYLE_LIST, ""c_server"Cклад", "Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие", "Выбрать", "Закрыть");
			if(response)
			{
				new h = GetPVarInt(playerid, "cellar_id")-1,
						_money = strval(inputtext);
				if(_money > PlayerInfo[playerid][money])
				{
					new string[144];
					format(string, sizeof string, ""c_white"На складе "c_green" %d$"c_white".\nВведите сумму, которую желаете положить в склад:",cellar_info[h][cl_safe_data][1]);
					show_dialog(playerid, d_cl_warehouse_money_put, DIALOG_STYLE_INPUT, ""c_server"Положить деньги", string, "Принять", "Назад");
					return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У вас нет такого кол-ва наличных денег.");
				}
				if(_money < 0 || _money > 5000000)
				{
					new string[144];
					format(string, sizeof string, ""c_white"На складе "c_green" %d$"c_white".\nВведите сумму, которую желаете положить в склад:",cellar_info[h][cl_safe_data][1]);
					show_dialog(playerid, d_cl_warehouse_money_put, DIALOG_STYLE_INPUT, ""c_server"Положить деньги", string, "Принять", "Назад");
					return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Число не может быть меньше 0 или больше 5.000.000.");
				}
				cellar_info[h][cl_safe_data][1] += _money;
				give_money(playerid, -_money);
				insert_money_log(playerid, INVALID_PLAYER_ID, -_money, "склад подвала");

				new _text_string[148];
				format(_text_string, sizeof _text_string, "UPDATE `cellars` SET `cl_safe_data` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `cl_id` = '%d' LIMIT 1",
				cellar_info[h][cl_safe_data][0], cellar_info[h][cl_safe_data][1],
				cellar_info[h][cl_safe_guns][0],	cellar_info[h][cl_safe_guns][1], cellar_info[h][cl_safe_guns][2],
				cellar_info[h][cl_safe_guns][3],	cellar_info[h][cl_safe_guns][4], cellar_info[h][cl_safe_guns][5],
				cellar_info[h][cl_id]);
				mysql_tquery(sql_connection, _text_string);
				format(_text_string, 128, ""c_green"* "c_white"Вы положили "c_green"%d$"c_white" в склад. Теперь на складе: "c_green"%i$"c_white".", _money, cellar_info[h][cl_safe_data][1]);
				SendClientMessage(playerid, col_white, _text_string);
				show_dialog(playerid, d_cl_warehouse_access, DIALOG_STYLE_LIST, ""c_server"Cклад", "Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие", "Выбрать", "Закрыть");

			}
		}
		case d_cl_warehouse_money_get:
		{
			if(!response) return show_dialog(playerid, d_cl_warehouse_access, DIALOG_STYLE_LIST, ""c_server"Cклад", "Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие", "Выбрать", "Закрыть");
			if(response)
			{
				new h = GetPVarInt(playerid, "cellar_id")-1,
						_money = strval(inputtext);

				if(_money > cellar_info[h][cl_safe_data][1])
				{
					new string[144];
					format(string, sizeof string, ""c_white"На складе "c_green" %d$"c_white".\nВведите сумму, которую взять со склада:",cellar_info[h][cl_safe_data][1]);
					show_dialog(playerid, d_cl_warehouse_money_get, DIALOG_STYLE_INPUT, ""c_server"Взять деньги", string, "Принять", "Назад");
					return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У вас на складе нет такого кол-ва денег.");
				}
				if(_money < 0 || _money > 5000000)
				{
					new string[144];
					format(string, sizeof string, ""c_white"На складе "c_green" %d$"c_white".\nВведите сумму, которую взять со склада:",cellar_info[h][cl_safe_data][1]);
					show_dialog(playerid, d_cl_warehouse_money_get, DIALOG_STYLE_INPUT, ""c_server"Взять деньги", string, "Принять", "Назад");
					return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Число не может быть меньше 0 или больше 5.000.000.");
				}
				cellar_info[h][cl_safe_data][1] -= _money;
				give_money(playerid, _money);
				insert_money_log(playerid, INVALID_PLAYER_ID, _money, "склад подвала");


				new _text_string[148];
				format(_text_string, sizeof _text_string, "UPDATE `cellars` SET `cl_safe_data` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `cl_id` = '%d' LIMIT 1",
				cellar_info[h][cl_safe_data][0], cellar_info[h][cl_safe_data][1],
				cellar_info[h][cl_safe_guns][0],	cellar_info[h][cl_safe_guns][1], cellar_info[h][cl_safe_guns][2],
				cellar_info[h][cl_safe_guns][3],	cellar_info[h][cl_safe_guns][4], cellar_info[h][cl_safe_guns][5],
				cellar_info[h][cl_id]);
				mysql_tquery(sql_connection, _text_string);
				format(_text_string, 128, ""c_green"* "c_white"Вы взяли "c_green"%d$"c_white" со склада. Теперь на складе: "c_green"%i$"c_white".", _money, cellar_info[h][cl_safe_data][1]);
				SendClientMessage(playerid, col_white, _text_string);
				show_dialog(playerid, d_cl_warehouse_access, DIALOG_STYLE_LIST, ""c_server"Cклад", "Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие", "Выбрать", "Закрыть");

			}
		}
		case d_cl_warehouse_guns_put:
		{
			if(!response) return show_dialog(playerid, d_cl_warehouse_access, DIALOG_STYLE_LIST, ""c_server"Cклад", "Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие", "Выбрать", "Закрыть");
			if(response)
			{
				new h = GetPVarInt(playerid, "cellar_id")-1;
				listitem = GetPVarInt(playerid,"listitem");
				DeletePVar(playerid,"listitem");
				new p_ammo, weaponid = GetPlayerWeapon(playerid), slot = get_weapon_slot(weaponid);
				GetPlayerWeaponData(playerid, slot, weaponid, p_ammo);
				if(p_t_info[playerid][p_gun_ammo][slot] < p_ammo)p_ammo = p_t_info[playerid][p_gun_ammo][slot];
				if(strval(inputtext) > p_ammo)
				{
					new string[198];
					for(new i = 0; i < 3;i++)
					{
						new str[98], gunname[32];
						if(cellar_info[h][cl_safe_guns][i] > 38 || cellar_info[h][cl_safe_guns][i] < 1 || cellar_info[h][cl_safe_guns][i + 3] == 0)strcat(string, ""c_grey"-Пусто\n");
						else
						{
							GetWeaponName(cellar_info[h][cl_safe_guns][i], gunname, 32);
							format(str, sizeof str, ""c_white"Оружие: "c_server"%s"c_white"   |   "c_server"%d пт.\n", gunname, cellar_info[h][cl_safe_guns][i + 3]);
							strcat(string, str);
						}
					}
					show_dialog(playerid, d_cl_warehouse_guns, DIALOG_STYLE_LIST, ""c_server"Оружие на складе:", string, "Выбрать", "Назад");
					return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"У вас нет такого кол-ва патронов.");
				}
				cellar_info[h][cl_safe_guns][listitem] = weaponid;
				cellar_info[h][cl_safe_guns][listitem + 3] += strval(inputtext);
				give_weapon(playerid,weaponid, -strval(inputtext));
				show_dialog(playerid, d_cl_warehouse_access, DIALOG_STYLE_LIST, ""c_server"Cклад", "Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие", "Выбрать", "Закрыть");
				new _text_string[148];
				format(_text_string, sizeof _text_string, "UPDATE `cellars` SET `cl_safe_data` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `cl_id` = '%d' LIMIT 1",
				cellar_info[h][cl_safe_data][0], cellar_info[h][cl_safe_data][1],
				cellar_info[h][cl_safe_guns][0],	cellar_info[h][cl_safe_guns][1], cellar_info[h][cl_safe_guns][2],
				cellar_info[h][cl_safe_guns][3],	cellar_info[h][cl_safe_guns][4], cellar_info[h][cl_safe_guns][5],
				cellar_info[h][cl_id]);
				mysql_tquery(sql_connection, _text_string);
				show_dialog(playerid, d_cl_warehouse_access, DIALOG_STYLE_LIST, ""c_server"Cклад", "Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие", "Выбрать", "Закрыть");
			}
		}
		case d_cl_warehouse_guns_get:
		{
			if(!response) return show_dialog(playerid, d_cl_warehouse_access, DIALOG_STYLE_LIST, ""c_server"Cклад", "Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие", "Выбрать", "Закрыть");
			if(response)
			{
				new h = GetPVarInt(playerid, "cellar_id")-1;
				listitem = GetPVarInt(playerid,"listitem");
				DeletePVar(playerid,"listitem");
				if(strval(inputtext)> cellar_info[h][cl_safe_guns][listitem + 3])
				{
					new string[198];
					for(new i = 0; i < 3;i++)
					{
						new str[98], gunname[32];
						if(cellar_info[h][cl_safe_guns][i] > 38 || cellar_info[h][cl_safe_guns][i] < 1 || cellar_info[h][cl_safe_guns][i + 3] == 0)strcat(string, ""c_grey"-Пусто\n");
						else
						{
							GetWeaponName(cellar_info[h][cl_safe_guns][i], gunname, 32);
							format(str, sizeof str, ""c_white"Оружие: "c_server"%s"c_white"   |   "c_server"%d пт.\n", gunname, cellar_info[h][cl_safe_guns][i]);
							strcat(string, str);
						}
					}
					show_dialog(playerid, d_cl_warehouse_guns, DIALOG_STYLE_LIST, ""c_server"Оружие на складе:", string, "Выбрать", "Назад");
					return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"На складе нет такого кол-ва патронов.");
				}


				give_weapon(playerid, cellar_info[h][cl_safe_guns][listitem], strval(inputtext));
				if(strval(inputtext) == cellar_info[h][cl_safe_guns][listitem + 3])
				{
					cellar_info[h][cl_safe_guns][listitem] = 0;
					cellar_info[h][cl_safe_guns][listitem + 3] = 0;
				}
				else cellar_info[h][cl_safe_guns][listitem + 3] -= strval(inputtext);

				new _text_string[148];
				format(_text_string, sizeof _text_string, "UPDATE `cellars` SET `cl_safe_data` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `cl_id` = '%d' LIMIT 1",
				cellar_info[h][cl_safe_data][0], cellar_info[h][cl_safe_data][1],
				cellar_info[h][cl_safe_guns][0],	cellar_info[h][cl_safe_guns][1], cellar_info[h][cl_safe_guns][2],
				cellar_info[h][cl_safe_guns][3],	cellar_info[h][cl_safe_guns][4], cellar_info[h][cl_safe_guns][5],
				cellar_info[h][cl_id]);
				mysql_tquery(sql_connection, _text_string);

				show_dialog(playerid, d_cl_warehouse_access, DIALOG_STYLE_LIST, ""c_server"Cклад", "Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие", "Выбрать", "Закрыть");
			}
		}
		case d_cellar_cl_ceedmenu:
		{
			if(!response) return 1;
			if(!listitem) return 1;
			switch(listitem)
			{
				case 1:
				{
					show_dialog(playerid, d_cellar_clseed, DIALOG_STYLE_INPUT, ""c_server"Посадка семян", ""c_white"Введите количество семян, которое желаете посадить:", "Принять", "Назад");
				}
				case 2:
				{
					new h = GetPVarInt(playerid, "cellar_id")-1;
					if(cellar_info[h][cl_seed_result]<= 0)
					{
						new d_string[172];
						format(d_string, sizeof(d_string), "\
						"c_server"Посажено семян: "c_grey"%d гр."c_server" | Урожай: "c_grey"%d гр.\n\
						"c_grey"-"c_white"Посадить семена\n"c_grey"-"c_white"Переработка урожая",
						cellar_info[h][cl_seed], cellar_info[h][cl_seed_result]);
						show_dialog(playerid, d_cellar_cl_ceedmenu, DIALOG_STYLE_LIST, ""c_server"Подвал", d_string, "Выбрать", "Закрыть");
						return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Для начала нужно вырастить урожай.");
					}
					action_type {playerid} = ACTION_CLCELLAR;
					action_step {playerid} = 0;
					action_td_status(playerid, true);
				}
			}
		}
		case d_cellar_clseed:
		{
			new h = GetPVarInt(playerid, "cellar_id")-1;
			if(!response)
			{
				new d_string[172];
				format(d_string, sizeof(d_string), "\
				"c_server"Посажено семян: "c_grey"%d гр."c_server" | Урожай: "c_grey"%d гр.\n\
				"c_grey"-"c_white"Посадить семена\n"c_grey"-"c_white"Переработка урожая",
				cellar_info[h][cl_seed], cellar_info[h][cl_seed_result]);
				show_dialog(playerid, d_cellar_cl_ceedmenu, DIALOG_STYLE_LIST, ""c_server"Подвал", d_string, "Выбрать", "Закрыть");
				return 1;
			}
			new d_amount = strval(inputtext);
			new d_string[172];

			if(d_amount < 1) return show_dialog(playerid, d_cellar_clseed, DIALOG_STYLE_INPUT, ""c_server"Посадка семян", ""c_orange_red"* Количество не может быть менее 1 гр.\n\n"c_white"Введите количество семян, которое желаете посадить:", "Принять", "Назад");
			if(PlayerInfo[playerid][seed] < d_amount) return show_dialog(playerid, d_cellar_clseed, DIALOG_STYLE_INPUT, ""c_server"Посадка семян", ""c_orange_red"*"c_grey" У Вас нет такого количества семян.\n\n"c_white"Введите количество семян, которое желаете посадить:", "Принять", "Назад");

			PlayerInfo[playerid][seed] -= d_amount;
			update_int_sql(playerid, "u_seed", PlayerInfo[playerid][seed]);
			cellar_info[h][cl_seed] += d_amount;

			format(d_string, 112, ""c_green"*"c_white" Вы посадили "c_green"%d гр."c_white" семян. Ожидайте их созревания.", d_amount);
			SendClientMessage(playerid, col_white, d_string);

			format(d_string, sizeof(d_string), "\
			"c_server"Посажено семян: "c_grey"%d гр."c_server" | Урожай: "c_grey"%d гр.\n\
			"c_grey"-"c_white"Посадить семена\n"c_grey"-"c_white"Переработка урожая",
			cellar_info[h][cl_seed], cellar_info[h][cl_seed_result]);
			show_dialog(playerid, d_cellar_cl_ceedmenu, DIALOG_STYLE_LIST, ""c_server"Подвал", d_string, "Выбрать", "Закрыть");
			return 1;

		}
		case d_island:
		{
			if(!response) return 1;

			new island_id = PlayerInfo[playerid][island] -1;
			switch(listitem)
			{
				case 0:
				{
					new island_tax = floatround(fi_info[island_id][fi_price] / 250);
					if(fi_info[island_id][fi_improve][fi_improve_subsidies]) island_tax = floatround(fi_info[island_id][fi_price] / 500);

					slobal_string[0] = EOS;

					new line_string[60];
					format(line_string, sizeof(line_string), ""c_white"Тип: "c_orange"%s\n", island_classes[fi_info[island_id][fi_int] -1]);
					strcat(slobal_string, line_string);
					format(line_string, sizeof(line_string), ""c_white"Номер острова: %d\n", fi_info[island_id][fi_id]);
					strcat(slobal_string, line_string);
					format(line_string, sizeof(line_string), ""c_white"Стоимость: "c_green"%s$\n", convert_money(fi_info[island_id][fi_price], ","));
					strcat(slobal_string, line_string);
					format(line_string, sizeof(line_string), ""c_white"Налог в сутки: "c_green"%s$\n", convert_money(island_tax, ","));
					strcat(slobal_string, line_string);

					show_dialog(playerid, d_island_stats, DIALOG_STYLE_MSGBOX, !""scm_dialog"Информация об острове", slobal_string, !"Назад", !"Закрыть");
				}
				case 1:
				{
					slobal_string[0] = EOS;
					for(new i; i < 6; i++)
					{
						new line_string[105];
						format(line_string, sizeof(line_string), "%s | %s\n", fi_improve_name[i], fi_info[island_id][fi_improve][i] ? (""c_green"Установлено") : (""c_orange_red"Отсутствует"));
						strcat(slobal_string, line_string);
					}
					show_dialog(playerid, d_island_improve, DIALOG_STYLE_LIST, !""scm_dialog"Улучшения", slobal_string, !"Выбрать", !"Назад");
				}
			}
		}
		case d_island_stats:
		{
			if(!response) return 1;
			pc_cmd_island(playerid);
		}
		case d_island_freeze:
		{
			if(!response) return 1;

			if(PlayerInfo[playerid][hunger] >= 100) return SendClientMessage(playerid, col_white, !""scm_error"Вы не голодны.");

			new prod_name[24], prod_hunger;
			switch(listitem)
			{
				case 0:
				{
					strcat(prod_name, "хот-дог");
					prod_hunger = 20;
				}
				case 1:
				{
					strcat(prod_name, "бургер");
					prod_hunger = 30;
				}
				case 2:
				{
					strcat(prod_name, "пиццу");
					prod_hunger = 60;
				}
			}
			new text_string[60];
			format(text_string, sizeof(text_string), "взял(-а) %s из холодильника", prod_name);
			me_action(playerid, text_string);

			ApplyAnimation(playerid, !"FOOD", !"EAT_Burger", 2.0, 0, 0, 0, 0, 5000, 1);

			if(PlayerInfo[playerid][hunger] + prod_hunger > 100)
				PlayerInfo[playerid][hunger] = 100;
			else
				PlayerInfo[playerid][hunger] += prod_hunger;
		}
		case d_island_healme:
		{
			if(!response) return 1;

			new Float:pl_health;
			GetPlayerHealth(playerid, pl_health);
			if(pl_health >= 100) return SendClientMessage(playerid, col_white, !""scm_error"Вы не нуждаетесь в лечении.");

			set_health(playerid, 100);
			SendClientMessage(playerid, col_white, !""scm_info"Вы успешно восстановили себе здоровье.");
		}
		case d_island_radio_url:
		{
			if(!response) return 1;

			new fi = PlayerInfo[playerid][island] -1;
			format(fi_info[fi][fi_radio_url], 128, "%s", inputtext);

			foreach(new i: streamed_players[playerid]) PlayAudioStreamForPlayer(i, fi_info[fi][fi_radio_url]);
			PlayAudioStreamForPlayer(playerid, fi_info[fi][fi_radio_url]);

			SendClientMessage(playerid, col_white, !""scm_info"Акустическая система успешно включена.");
			fi_info[fi][fi_radio_status] = 1;

			new query_string[250];
			mysql_format(sql_connection, query_string, sizeof(query_string), "UPDATE `family_island` SET `fi_radio_status`='%d',`fi_radio_url`='%e' WHERE `fi_id`='%d' LIMIT 1", fi_info[fi][fi_radio_status], fi_info[fi][fi_radio_url], PlayerInfo[playerid][island]);
			mysql_query(sql_connection, query_string);
			return 1;
		}
        case d_island_improve:
        {
            if(!response) return pc_cmd_island(playerid);

            new island_id = PlayerInfo[playerid][island] -1;
            if(fi_info[island_id][fi_improve][listitem])
            {
                SendClientMessage(playerid, col_white, !""scm_error"У Вас уже установлено это улучшение.");
                return pc_cmd_island(playerid);
            }
            else if((!listitem && !fi_info[island_id][fi_improve][listitem]) || (fi_info[island_id][fi_improve][listitem -1] && !fi_info[island_id][fi_improve][listitem]))
            {
                new dialog_string[140];
                format(dialog_string, sizeof(dialog_string), ""c_white"Вы хотите купить улучшение: "c_server"%s"c_white"?\nСтоимость улучшения: "c_green"%d$", fi_improve_name[listitem], fi_improve_price[listitem]);
                show_dialog(playerid, d_island_improve_accept, DIALOG_STYLE_MSGBOX, !""scm_dialog"Улучшения", dialog_string, !"Купить", !"Отмена");

                SetPVarInt(playerid, !"improveid", listitem);
            }
            else
            {
                SendClientMessage(playerid, col_white, !""scm_error"Это улучшение еще не доступно Вам.");
                pc_cmd_island(playerid);
            }
        }
		case d_island_improve_accept:
		{
            if(!response) return pc_cmd_island(playerid);

            new improveid = GetPVarInt(playerid, !"improveid");
            DeletePVar(playerid, !"improveid");

            new price = fi_improve_price[improveid], family_id = PlayerInfo[playerid][family];
            if(family_info[family_id -1][fam_bank] < price)
            {
                pc_cmd_island(playerid);
                return SendClientMessage(playerid, col_white, !""scm_error"На счету семьи недостаточно средств.");
            }
            new island_id = PlayerInfo[playerid][island] -1;

			new fint = fi_info[island_id][fi_int] -1;
			switch(improveid)
			{
				case fi_improve_safe: CreateDynamic3DTextLabel("Склад\n"c_grey"Нажмите клавишу "c_white"[Y]"c_grey" для взаимодействия", col_server, island_safe_pos[fint][0], island_safe_pos[fint][1], island_safe_pos[fint][2], 3.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, fi_info[island_id][fi_id], 3);
				case fi_improve_freeze: CreateDynamic3DTextLabel("Холодильник\n"c_grey"Нажмите клавишу "c_white"[Y]"c_grey" для взаимодействия", col_server, island_freeze_pos[fint][0], island_freeze_pos[fint][1], island_freeze_pos[fint][2], 3.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, fi_info[island_id][fi_id], 3);
				case fi_improve_healme: CreateDynamic3DTextLabel("Мед. пункт\n"c_grey"Нажмите клавишу "c_white"[Y]"c_grey" для взаимодействия", col_server, island_healme_pos[fint][0], island_healme_pos[fint][1], island_healme_pos[fint][2], 3.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, fi_info[island_id][fi_id], 3);
			}

			fi_info[island_id][fi_improve][improveid] = 1;

			new data[32];
			for(new i; i < 6; i++)
			{
				if(!i) format(data, sizeof(data), "%d", fi_info[island_id][fi_improve][i]);
				else format(data, sizeof(data), "%s|%d", data, fi_info[island_id][fi_improve][i]);
			}
			new query_string[90];
			format(query_string, sizeof(query_string), "UPDATE `family_island` SET `fi_improve`='%s' WHERE `fi_id`='%d'", data, island_id + 1);
			mysql_query(sql_connection, query_string);

			family_info[family_id -1][fam_bank] -= price;

			mysql_format(sql_connection, query_string, sizeof(query_string), "UPDATE `family` SET `fam_bank`='%d' WHERE `fam_id`='%d' LIMIT 1", family_info[family_id -1][fam_bank], family_id);
			mysql_query(sql_connection, query_string);

            new _text_string[144];
            format(_text_string, sizeof(_text_string), ""scm_info"Вы успешно купили улучшение "c_gold"%s"c_white" стоимостью "c_green"%d$", fi_improve_name[improveid], fi_improve_price[improveid]);
            SendClientMessage(playerid, col_white, _text_string);

			if(improveid == fi_improve_safe)
			{
                fi_info[island_id][fi_safe_code] = 0;

                format(query_string, sizeof(query_string), "UPDATE `family_island` SET `fi_safe_code`='0000' WHERE `fi_id`='%d' LIMIT 1", island_id + 1);
                mysql_query(sql_connection, query_string);

                SendClientMessage(playerid, col_white, !""scm_info"Код склада по умолчанию: "c_gold"0000");
			}

			slobal_string[0] = EOS;
			for(new i; i < 6; i++)
			{
				new line_string[105];
				format(line_string, sizeof(line_string), "%s | %s\n", fi_improve_name[i], fi_info[island_id][fi_improve][i] ? (""c_green"Установлено") : (""c_orange_red"Отсутствует"));
				strcat(slobal_string, line_string);
			}
			show_dialog(playerid, d_island_improve, DIALOG_STYLE_LIST, !""scm_dialog"Улучшения", slobal_string, !"Выбрать", !"Назад");
		}
		case d_hmenu:
		{
			if(!response) return 1;
			new house_id = PlayerInfo[playerid][house] -1;
			switch(listitem)
			{
				case 0:
				{
					if(h_info[house_id][h_closed] == 0)
					{
						h_info[house_id][h_closed] = 1;
						GameTextForPlayer(playerid,"~r~closed", 2000, 3);
					}
					else
					{
						h_info[house_id][h_closed] = 0;
						GameTextForPlayer(playerid, "~g~opened", 2000, 3);
					}
					new query_string[78];
					format(query_string, sizeof(query_string), "UPDATE `houses` SET `h_closed` = '%d' WHERE `h_id` = '%d'", h_info[house_id][h_closed], house_id + 1);
					mysql_tquery(sql_connection, query_string);
				}
				case 1:
				{

					global_string[0] = EOS;
					format(global_string, 322, "\n\
					"c_white"Класс:\t\t\t"c_server"%s\n\
					"c_white"Номер дома:\t\t"c_server"%d\n\
					"c_white"Налог в сутки:\t\t"c_server"%d$\n\n",
					house_classes[h_info[house_id][h_int] -1], h_info[house_id][h_id],
					floatround(h_info[house_id][h_price]/ 400));
					show_dialog(playerid, d_hmenu_stats, DIALOG_STYLE_MSGBOX, ""c_server"Информация о доме:", global_string, "Назад", "Закрыть");

/*
					new query_string[128];
					format(query_string, sizeof(query_string),"SELECT `u_name` FROM `users` WHERE `u_house` = '%d' LIMIT 1",
					house_id + 1);
					mysql_tquery(sql_connection, query_string, "house_info_callback");*/
				}
				case 2:
				{
					slobal_string[0] = EOS;
					for(new i; i < 8; i++)
					{
						new line_string[105];
						format(line_string, sizeof(line_string), "%s | %s\n", h_improve_name[i], h_info[house_id][h_improve][i] ? (""c_green"Установлено") : (""c_orange_red"Отсутствует"));
						strcat(slobal_string, line_string);
					}
					show_dialog(playerid, d_h_improvement, DIALOG_STYLE_LIST, !""scm_dialog"Улучшения дома", slobal_string, !"Выбрать", !"Назад");
				}
				case 3:
				{
					if(h_info[house_id][h_improve][improve_wardrobe] == 0)
					{
						show_hmenu(playerid);
						return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет гардероба.");
					}
					new line_string[36];
					global_string[0] = EOS;
					for(new j = 0; j < 5; j ++)
					{
						if(PlayerInfo[playerid][temp_skin][j] == 0)
						{
							strcat(global_string, ""c_grey"-Пусто\n");
						}
						else
						{
							format(line_string, 36, ""c_white"Одежда | %d\n", PlayerInfo[playerid][temp_skin][j]);
							strcat(global_string, line_string);
						}
					}
					strcat(global_string, "Одежда организации");
					show_dialog(playerid, d_h_clothes, DIALOG_STYLE_LIST, ""c_server"Гардероб", global_string, "Выбрать", "Назад");
				}
				case 4:
				{
					show_dialog(playerid, d_h_rent_mn, DIALOG_STYLE_LIST, ""c_server"Подселение", ""c_server"1."c_white" Подселить человека\n"c_server"2."c_white" Список жильцов", "Выбрать", "Назад");
				}
				case 5:
				{
					if(h_info[house_id][h_improve][improve_cellar] == 0)
					{
						show_hmenu(playerid);
						return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет оборудованного подвала.");
					}
					set_pos(playerid, 1393.4222,-14.3322,1001.0812,262.5292, 4, h_info[house_id][h_id]);
					SetPVarInt(playerid, "tp_area_used", 1);
					teleport_tick[playerid] = GetTickCount();
				}
				case 6:
				{
					if(h_info[house_id][h_garage] == 0)
					{
						show_hmenu(playerid);
						return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет гаража.");
					}
					set_pos(playerid, 2169.6265, -368.4799, 1594.9048, 176.5608, 1, h_info[house_id][h_id]);
					SetPVarInt(playerid, "tp_area_used", 1);
					teleport_tick[playerid] = GetTickCount();
				}
			}
		}
		case d_h_rent_invite:
		{
			if(!response) return show_dialog(playerid, d_h_rent_mn, DIALOG_STYLE_LIST, ""c_server"Подселение", ""c_server"1."c_white" Подселить человека\n"c_server"2."c_white" Список жильцов", "Выбрать", "Назад");
			new targetid;
			if(sscanf(inputtext, "u", targetid)) return show_dialog(playerid, d_h_rent_invite, DIALOG_STYLE_INPUT, ""c_server"Подселение", ""c_grey"* Введёт некорректный ID игрока.\n\n"c_white"Введите ID игрока, которого желаете подселить в дом:", "Принять", "Назад");
			if(!IsPlayerConnected(targetid)|| p_t_info[targetid][p_logged] == false || targetid == playerid) return show_dialog(playerid, d_h_rent_invite, DIALOG_STYLE_INPUT, ""c_server"Подселение", ""c_grey"* Введёт некорректный ID игрока.\n\n"c_white"Введите ID игрока, которого желаете подселить в дом:", "Принять", "Назад");

			if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[targetid][p_pos][0], p_t_info[targetid][p_pos][1], p_t_info[targetid][p_pos][2]) || GetPlayerVirtualWorld(targetid)!= GetPlayerVirtualWorld(playerid)) return show_dialog(playerid, d_h_rent_invite, DIALOG_STYLE_INPUT, ""c_server"Подселение", ""c_grey"* Игрок слишком далеко.\n\n"c_white"Введите ID игрока, которого желаете подселить в дом:", "Принять", "Назад");
			if(PlayerInfo[targetid][rent_house] != -1 || PlayerInfo[targetid][house] != -1) return show_dialog(playerid, d_h_rent_invite, DIALOG_STYLE_INPUT, ""c_server"Подселение", ""c_grey"* Игрок уже где-то проживает.\n\n"c_white"Введите ID игрока, которого желаете подселить в дом:", "Принять", "Назад");

			SetPVarInt(targetid, "rhouse_id", playerid);
			SetPVarInt(playerid, "rhouse_id", targetid);

			show_dialog(playerid, d_rent_invite_money, DIALOG_STYLE_INPUT, ""c_server"Подселение", ""c_white"Введите сумму, за которую желаете сдать игроку жильё:", "Принять", "Назад");
		}
		case d_rent_invite_money:
		{
			if(!response) return show_dialog(playerid, d_h_rent_invite, DIALOG_STYLE_INPUT, ""c_server"Подселение", ""c_white"Введите ID игрока, которого желаете подселить в дом:", "Принять", "Назад");
			new money_count = strval(inputtext);
			if(money_count < 1 || money_count > 10000) return show_dialog(playerid, d_rent_invite_money, DIALOG_STYLE_INPUT, ""c_server"Подселение", ""c_grey"* Сумма должна быть от 1$ до 10.000$\n\n"c_white"Введите сумму, за которую желаете сдать игроку жильё:", "Принять", "Назад");



			SetPVarInt(playerid, "rhouse_money", money_count);

			show_dialog(playerid, d_rent_invite_days, DIALOG_STYLE_INPUT, ""c_server"Подселение", ""c_white"Введите количество дней, на которое желаете сдать игроку жильё:", "Принять", "Назад");

		}
		case d_rent_invite_days:
		{
			if(!response)
			{
				show_dialog(playerid, d_rent_invite_money, DIALOG_STYLE_INPUT, ""c_server"Подселение", ""c_white"Введите сумму, за которую желаете сдать игроку жильё:", "Принять", "Назад");
				return DeletePVar(playerid, "rhouse_money");
			}
			new day_count = strval(inputtext);
			if(day_count < 1 || day_count > 7) return show_dialog(playerid, d_rent_invite_money, DIALOG_STYLE_INPUT, ""c_server"Подселение", ""c_grey"* Количество дней должно составлять от 1 до 7.\n\n"c_white"Введите количество дней, на которое желаете сдать игроку жильё:", "Принять", "Назад");
			new targetid = GetPVarInt(playerid, "rhouse_id");
			new money_count = GetPVarInt(playerid, "rhouse_money");

			SetPVarInt(playerid, "rhouse_inv", 1);

			new _dialog_string[144];
			format(_dialog_string,sizeof(_dialog_string),""c_green"* "c_white"Вы предложили "c_green"%s "c_white"проживание в Вашем доме за "c_green"%d$", PlayerInfo[targetid][name], money_count);
			SendClientMessage(playerid, col_white, _dialog_string);

			format(_dialog_string, sizeof(_dialog_string),""c_white"%s предлагает Вам подселиться к нему на %d дней за %d$.\n\n"c_grey"* Вы согласны на предложение?", PlayerInfo[playerid][name], day_count, money_count);
			show_dialog(targetid, d_rent_accept, DIALOG_STYLE_MSGBOX, ""c_server"Подселение",_dialog_string, "Да", "Нет");
		}
		case d_rent_accept:
		{
			new opponent_id = GetPVarInt(playerid, "rhouse_id");
			if(!response)
			{
				DeletePVar(opponent_id, "rhouse_inv");
				DeletePVar(playerid, "rhouse_price");
				DeletePVar(opponent_id, "rhouse_id");
				return DeletePVar(playerid, "rhouse_id");
			}
			if(PlayerInfo[playerid][money] < GetPVarInt(playerid, "rhouse_price"))
			{
				DeletePVar(opponent_id, "rhouse_inv");
				SendClientMessage(playerid, col_gray, "* У Вас недостаточно средств для принятия предложения.");
				DeletePVar(playerid, "rhouse_price");
				DeletePVar(opponent_id, "rhouse_id");
				return DeletePVar(playerid, "rhouse_id");
			}
			if(PlayerInfo[opponent_id][money] < GetPVarInt(playerid, "rhouse_price"))
			{
				DeletePVar(opponent_id, "rhouse_inv");
				SendClientMessage(opponent_id, col_gray, "* У Вас недостаточно средств для подселения.");
				SendClientMessage(playerid, col_gray, "* У игрока недостаточно средств для подселения.");

				DeletePVar(playerid, "rhouse_price");
				DeletePVar(opponent_id, "rhouse_id");
				return DeletePVar(playerid, "rhouse_id");
			}
			if(GetPVarInt(opponent_id, "rhouse_inv") ==  0)
			{
				DeletePVar(opponent_id, "rhouse_inv");
				SendClientMessage(playerid, col_gray, "* Игрок уже покинул игру.");
				DeletePVar(playerid, "rhouse_price");
				DeletePVar(opponent_id, "rhouse_id");
				return DeletePVar(playerid, "rhouse_id");
			}
			PlayerInfo[playerid][rent_house] = PlayerInfo[opponent_id][house];
			update_int_sql(playerid, "u_renthouse", PlayerInfo[playerid][rent_house]);

			new _text_string[128];
			format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы успешно подселились к "c_green"%s"c_white".",PlayerInfo[opponent_id][name]);
			SendClientMessage(playerid, col_white, _text_string);
			format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы успешно подселили "c_green"%s"c_white".", PlayerInfo[playerid][name]);
			SendClientMessage(opponent_id, col_white, _text_string);


			DeletePVar(opponent_id, "rhouse_inv");
			DeletePVar(opponent_id, "rhouse_price");

			DeletePVar(playerid, "rhouse_id");
			DeletePVar(opponent_id, "rhouse_id");
		}

		case d_h_rent_mn:
		{
			if(!response) return show_hmenu(playerid);
			if(h_info[PlayerInfo[playerid][house] -1][h_improve][improve_sleeping] == 0)
			{
				show_dialog(playerid, d_h_rent_mn, DIALOG_STYLE_LIST, ""c_server"Подселение", ""c_server"1."c_white" Подселить человека\n"c_server"2."c_white" Список жильцов", "Выбрать", "Назад");
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет спальных мест.");
			}

			if(listitem == 0)show_dialog(playerid, d_h_rent_invite, DIALOG_STYLE_INPUT, ""c_server"Подселение", ""c_white"Введите ID игрока, которого желаете подселить в дом:", "Принять", "Назад");
			else
			{
				new query_str[128];
				format(query_str, sizeof(query_str), "SELECT `u_name`,`u_id` FROM `users` WHERE `u_renthouse`='%d'",  PlayerInfo[playerid][house]);
				new Cache:result = mysql_query(sql_connection, query_str);
				new _num_rows = cache_num_rows();


				if(_num_rows == 0)
				{
					cache_delete(result);
					SendClientMessage(playerid, col_gray, "* У Вас нет подселённых жильцов");
					return show_dialog(playerid, d_h_rent_mn, DIALOG_STYLE_LIST, ""c_server"Подселение", ""c_server"1."c_white" Подселить человека\n"c_server"2."c_white" Список жильцов", "Выбрать", "Назад");
				}
				else
				{
					new line_string[30 + MAX_PLAYER_NAME];

					global_string[0] = EOS;
					for(new i = 0; i < _num_rows; i++)
					{
						new account_id = cache_get_field_content_int(i, "u_id", sql_connection);

						new pvar_string[20];
						format(pvar_string, sizeof(pvar_string), "ofm_%d", i);
						SetPVarInt(playerid, pvar_string, account_id);

						new pl_name[MAX_PLAYER_NAME];
						cache_get_field_content(i, "u_name", pl_name, sql_connection, MAX_PLAYER_NAME);


						format(line_string, sizeof(line_string), ""c_server"%d. "c_white"%s\n", i + 1, pl_name);
						strcat(global_string, line_string);
					}
					cache_delete(result);
				}
				show_dialog(playerid, d_h_rent_list, DIALOG_STYLE_LIST, ""c_server"Жильцы", global_string, "Выбрать", "Назад");
			}
		}
		case d_h_rent_list:
		{
			if(!response)
			{
				for(new i = 0; i < 3; i ++)
				{
					new pvar_string[8];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", i);
					DeletePVar(playerid, pvar_string);
				}
				return show_dialog(playerid, d_h_rent_mn, DIALOG_STYLE_LIST, ""c_server"Подселение", ""c_server"1."c_white" Подселить человека\n"c_server"2."c_white" Список жильцов", "Выбрать", "Назад");
			}
			SetPVarInt(playerid, "dialog_listitem", listitem);
			show_dialog(playerid, d_h_rent_select, DIALOG_STYLE_LIST, ""c_server"Подселение", ""c_server"1."c_white" Выселить", "Выбрать", "Назад");
		}
		case d_h_rent_select:
		{
			if(!response)
			{
				DeletePVar(playerid, "dialog_listitem");


				new query_str[128];
				format(query_str, sizeof(query_str), "SELECT `u_name`,`u_id` FROM `users` WHERE `u_renthouse`='%d'",  PlayerInfo[playerid][house]);
				new Cache:result = mysql_query(sql_connection, query_str);
				new _num_rows = cache_num_rows();

				if(_num_rows == 0)
				{
					for(new i = 0; i < 3; i ++)
					{
						new pvar_string[8];
						format(pvar_string, sizeof(pvar_string), "ofm_%d", i);
						DeletePVar(playerid, pvar_string);
					}
					cache_delete(result);
					return show_dialog(playerid, d_h_rent_mn, DIALOG_STYLE_LIST, ""c_server"Подселение", ""c_server"1."c_white" Подселить человека\n"c_server"2."c_white" Список жильцов", "Выбрать", "Назад");
				}
				else
				{
					new line_string[30 + MAX_PLAYER_NAME];

					global_string[0] = EOS;
					for(new i = 0; i < _num_rows; i++)
					{
						new account_id = cache_get_field_content_int(i, "u_id", sql_connection);

						new pvar_string[20];
						format(pvar_string, sizeof(pvar_string), "ofm_%d", i);
						SetPVarInt(playerid, pvar_string, account_id);

						new pl_name[MAX_PLAYER_NAME];
						cache_get_field_content(i, "u_name", pl_name, sql_connection, MAX_PLAYER_NAME);


						format(line_string, sizeof(line_string), ""c_server"%d. "c_white"%s\n", i + 1, pl_name);
						strcat(global_string, line_string);
					}
					cache_delete(result);
				}
				show_dialog(playerid, d_h_rent_list, DIALOG_STYLE_LIST, ""c_server"Жильцы", global_string, "Выбрать", "Назад");
				return 1;
			}
			switch(listitem)
			{
				case 0:
				{
					new pvar_string[20];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, "dialog_listitem"));
					new account_id = GetPVarInt(playerid, pvar_string);
					DeletePVar(playerid, "dialog_listitem");

					new query_str[128];

					format(query_str, sizeof(query_str), "UPDATE `users` SET `u_renthouse`='-1' WHERE `u_id`='%d'",  account_id);
					mysql_query(sql_connection, query_str);


					new targetid = INVALID_PLAYER_ID;
					foreach(new i : logged_players)
					{
						if(PlayerInfo[i][id] !=account_id) continue;
						targetid = i;
						break;
					}

					if(targetid != INVALID_PLAYER_ID)
					{
						format(query_str, sizeof(query_str), "%s[%d] уволил Вас с подработки в теневом бизнесе.",PlayerInfo[playerid][name], playerid);
						SendClientMessage(targetid, col_succes, query_str);

						format(query_str, sizeof(query_str), "Вы уволили с подработки в Вашем теневом бизнесе %s[%d].",PlayerInfo[targetid][name], targetid);
						SendClientMessage(playerid, col_succes, query_str);

						PlayerInfo[targetid][id]=-1;
					}
					else SendClientMessage(playerid, col_succes, "Игрок успешно выселен из Вашего дома");



					format(query_str, sizeof(query_str), "SELECT `u_name`,`u_id` FROM `users` WHERE `u_renthouse`='%d'",  PlayerInfo[playerid][house]);
					new Cache:result = mysql_query(sql_connection, query_str);
					new _num_rows = cache_num_rows();

					if(_num_rows == 0)
					{
						cache_delete(result);
						SendClientMessage(playerid, col_gray, "* У Вас нет подселённых жильцов");

						return show_dialog(playerid, d_h_rent_mn, DIALOG_STYLE_LIST, ""c_server"Подселение", ""c_server"1."c_white" Подселить человека\n"c_server"2."c_white" Список жильцов", "Выбрать", "Назад");
					}
					else
					{
						new line_string[30 + MAX_PLAYER_NAME];

						global_string[0] = EOS;
						for(new i = 0; i < _num_rows; i++)
						{
							account_id = cache_get_field_content_int(i, "u_id", sql_connection);

							format(pvar_string, sizeof(pvar_string), "ofm_%d", i);
							SetPVarInt(playerid, pvar_string, account_id);

							new pl_name[MAX_PLAYER_NAME];
							cache_get_field_content(i, "u_name", pl_name, sql_connection, MAX_PLAYER_NAME);


							format(line_string, sizeof(line_string), ""c_server"%d. "c_white"%s\n", i + 1, pl_name);
							strcat(global_string, line_string);
						}
						cache_delete(result);
					}
					show_dialog(playerid, d_h_rent_list, DIALOG_STYLE_LIST, ""c_server"Жильцы", global_string, "Выбрать", "Назад");
				}
			}

		}
		case d_h_clothes:
		{
			if(!response) return show_hmenu(playerid);
			if(listitem == 5)
			{
				if(PlayerInfo[playerid][member] == 0)
				{
					new line_string[36];
					global_string[0] = EOS;

					for(new j = 0; j < 5; j ++)
					{
						if(PlayerInfo[playerid][temp_skin][j] == 0)
						{
							strcat(global_string, ""c_grey"-Пусто\n");
						}
						else
						{
							format(line_string, 36, ""c_white"Одежда | %d\n", PlayerInfo[playerid][temp_skin][j]);
							strcat(global_string, line_string);
						}
					}
					strcat(global_string, "Одежда организации");
					show_dialog(playerid, d_h_clothes, DIALOG_STYLE_LIST, ""c_server"Гардероб", global_string, "Выбрать", "Назад");
					return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не состоите в организации.");
				}
				SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
				SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
				is_fraction_duty {playerid} = 1;


				new line_string[36];
				global_string[0] = EOS;
				for(new j = 0; j < 5; j ++)
				{
					if(PlayerInfo[playerid][temp_skin][j] == 0)
					{
						strcat(global_string, ""c_grey"-Пусто\n");
					}
					else
					{
						format(line_string, 36, ""c_white"Одежда | %d\n", PlayerInfo[playerid][temp_skin][j]);
						strcat(global_string, line_string);
					}
				}
				strcat(global_string, "Одежда организации");
				show_dialog(playerid, d_h_clothes, DIALOG_STYLE_LIST, ""c_server"Гардероб", global_string, "Выбрать", "Назад");
				return 1;
			}
			if(PlayerInfo[playerid][temp_skin][listitem] == 0)
			{
				new line_string[36];
				global_string[0] = EOS;

				for(new j = 0; j < 5; j ++)
				{
					if(PlayerInfo[playerid][temp_skin][j] == 0)
					{
						strcat(global_string, ""c_grey"-Пусто\n");
					}
					else
					{
						format(line_string, 36, ""c_white"Одежда | %d\n", PlayerInfo[playerid][temp_skin][j]);
						strcat(global_string, line_string);
					}
				}
				strcat(global_string, "Одежда организации");
				show_dialog(playerid, d_h_clothes, DIALOG_STYLE_LIST, ""c_server"Гардероб", global_string, "Выбрать", "Назад");
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"В данном слоте нет одежды.");
			}
			set_skin(playerid, PlayerInfo[playerid][temp_skin][listitem]);
			new line_string[36];
			global_string[0] = EOS;

			for(new j = 0; j < 5; j ++)
			{
				if(PlayerInfo[playerid][temp_skin][j] == 0)
				{
					strcat(global_string, ""c_grey"-Пусто\n");
				}
				else
				{
					format(line_string, 36, ""c_white"Одежда | %d\n", PlayerInfo[playerid][temp_skin][j]);
					strcat(global_string, line_string);
				}
			}
			strcat(global_string, "Одежда организации");
			show_dialog(playerid, d_h_clothes, DIALOG_STYLE_LIST, ""c_server"Гардероб", global_string, "Выбрать", "Назад");
		}
		case d_boat_clothes:
		{
			if(!response) return 1;
			if(listitem == 5)
			{
				if(PlayerInfo[playerid][member] == 0)
				{
					new line_string[36];
					global_string[0] = EOS;

					for(new j = 0; j < 5; j ++)
					{
						if(PlayerInfo[playerid][temp_skin][j] == 0)
						{
							strcat(global_string, ""c_grey"-Пусто\n");
						}
						else
						{
							format(line_string, 36, ""c_white"Одежда | %d\n", PlayerInfo[playerid][temp_skin][j]);
							strcat(global_string, line_string);
						}
					}
					strcat(global_string, "Одежда организации");
					show_dialog(playerid, d_boat_clothes, DIALOG_STYLE_LIST, ""c_server"Гардероб", global_string, "Выбрать", "Назад");
					return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не состоите в организации.");
				}
				SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
				SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
				is_fraction_duty {playerid} = 1;


				new line_string[36];
				global_string[0] = EOS;
				for(new j = 0; j < 5; j ++)
				{
					if(PlayerInfo[playerid][temp_skin][j] == 0)
					{
						strcat(global_string, ""c_grey"-Пусто\n");
					}
					else
					{
						format(line_string, 36, ""c_white"Одежда | %d\n", PlayerInfo[playerid][temp_skin][j]);
						strcat(global_string, line_string);
					}
				}
				strcat(global_string, "Одежда организации");
				show_dialog(playerid, d_boat_clothes, DIALOG_STYLE_LIST, ""c_server"Гардероб", global_string, "Выбрать", "Назад");
				return 1;
			}
			if(PlayerInfo[playerid][temp_skin][listitem] == 0)
			{
				new line_string[36];
				global_string[0] = EOS;

				for(new j = 0; j < 5; j ++)
				{
					if(PlayerInfo[playerid][temp_skin][j] == 0)
					{
						strcat(global_string, ""c_grey"-Пусто\n");
					}
					else
					{
						format(line_string, 36, ""c_white"Одежда | %d\n", PlayerInfo[playerid][temp_skin][j]);
						strcat(global_string, line_string);
					}
				}
				strcat(global_string, "Одежда организации");
				show_dialog(playerid, d_boat_clothes, DIALOG_STYLE_LIST, ""c_server"Гардероб", global_string, "Выбрать", "Назад");
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"В данном слоте нет одежды.");
			}
			set_skin(playerid, PlayerInfo[playerid][temp_skin][listitem]);
			new line_string[36];
			global_string[0] = EOS;

			for(new j = 0; j < 5; j ++)
			{
				if(PlayerInfo[playerid][temp_skin][j] == 0)
				{
					strcat(global_string, ""c_grey"-Пусто\n");
				}
				else
				{
					format(line_string, 36, ""c_white"Одежда | %d\n", PlayerInfo[playerid][temp_skin][j]);
					strcat(global_string, line_string);
				}
			}
			strcat(global_string, "Одежда организации");
			show_dialog(playerid, d_boat_clothes, DIALOG_STYLE_LIST, ""c_server"Гардероб", global_string, "Выбрать", "Назад");
		}
		case d_hmenu_stats:
		{
			if(!response) return 1;
			show_hmenu(playerid);
		}
		case d_h_improvement:
		{
			if(!response) return show_hmenu(playerid);
			new house_id = PlayerInfo[playerid][house] -1;
			if(h_info[house_id][h_improve][listitem])
			{
				SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас уже установлено это улучшение.");
				show_hmenu(playerid);
				return 1;
			}
			else if((!listitem && !h_info[house_id][h_improve][listitem]) || (h_info[house_id][h_improve][listitem-1] && !h_info[house_id][h_improve][listitem]))
			{
				new mes[128];
				format(mes, sizeof(mes),""c_white"Вы хотите купить улучшение: "c_server"\"%s\"?\n\n"c_white"Оно обойдется Вам в "c_green"$%d.",h_improve_name[listitem], h_improve_price[listitem]);
				show_dialog(playerid, d_h_improvement_accept, DIALOG_STYLE_MSGBOX,""c_server"Улучшения дома",mes,"Купить","Отмена");
				SetPVarInt(playerid,"improveid", listitem);
			}
			else
			{
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Это улучшение еще не доступно Вам.");
				show_hmenu(playerid);
			}
		}
		case d_h_improvement_accept:
		{
            if(!response) return pc_cmd_home(playerid);

            new improveid = GetPVarInt(playerid, !"improveid");
            DeletePVar(playerid, !"improveid");

            new price = h_improve_price[improveid];
            if(PlayerInfo[playerid][money] < price)
            {
                pc_cmd_home(playerid);
                return SendClientMessage(playerid, col_white, !""scm_error"У Вас недостаточно средств.");
            }
            new house_id = PlayerInfo[playerid][house] -1;

			new hintid =  h_info[house_id][h_int] -1;
			switch(improveid)
			{
				case improve_safe: CreateDynamic3DTextLabel("Сейф\n"c_grey"Нажмите клавишу "c_white"[Y]"c_grey" для взаимодействия", col_server, house_safe_pos[hintid][0], house_safe_pos[hintid][1], house_safe_pos[hintid][2], 3.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, h_info[house_id][h_id], 2);
				case improve_freeze: CreateDynamic3DTextLabel("Холодильник\n"c_grey"Нажмите клавишу "c_white"[Y]"c_grey" для взаимодействия", col_server, house_freeze_pos[hintid][0], house_freeze_pos[hintid][1], house_freeze_pos[hintid][2], 3.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, h_info[house_id][h_id], 2);
			}

			h_info[house_id][h_improve][improveid] = 1;

			new data[32];
			for(new i; i < 8; i++)
			{
				if(!i) format(data, sizeof(data), "%d", h_info[house_id][h_improve][i]);
				else format(data, sizeof(data), "%s|%d", data, h_info[house_id][h_improve][i]);
			}
			new query_string[90];
			format(query_string, sizeof(query_string), "UPDATE `houses` SET `h_improve`='%s' WHERE `h_id`='%d'", data, house_id + 1);
			mysql_query(sql_connection, query_string);

			give_money(playerid, -price);
			insert_money_log(playerid, INVALID_PLAYER_ID, -price, "улучшение дома");

            new _text_string[144];
            format(_text_string, sizeof(_text_string), ""scm_info"Вы успешно купили улучшение "c_gold"%s"c_white" стоимостью "c_green"%d$", h_improve_name[improveid], h_improve_price[improveid]);
            SendClientMessage(playerid, col_white, _text_string);

			if(improveid == improve_safe)
			{
                h_info[house_id][h_safe_code] = 0;

                format(query_string, sizeof(query_string), "UPDATE `houses` SET `h_safe_code`='0000' WHERE `h_id`='%d' LIMIT 1",h_info[house_id][h_id]);
                mysql_tquery(sql_connection, query_string);

                SendClientMessage(playerid, col_white, !""scm_info"Код сейфа по умолчанию: "c_gold"0000");
			}

			slobal_string[0] = EOS;
			for(new i; i < 8; i++)
			{
				new line_string[105];
				format(line_string, sizeof(line_string), "%s | %s\n", h_improve_name[i], h_info[house_id][h_improve][i] ? (""c_green"Установлено") : (""c_orange_red"Отсутствует"));
				strcat(slobal_string, line_string);
			}
			show_dialog(playerid, d_h_improvement, DIALOG_STYLE_LIST, !""scm_dialog"Улучшения дома", slobal_string, !"Выбрать", !"Назад");
		}
		case d_safe_pin:
		{
			if(!response) return 1;

			if(GetPVarInt(playerid, !"house_id") != 0)
			{
				new house_id = GetPVarInt(playerid, !"house_id") -1;
				if(strval(inputtext) != h_info[house_id][h_safe_code]) return SendClientMessage(playerid, col_gray, "Вы ввели неправильный код от сейфа.");

				new line_string[68],
					gun_name[32];

				global_string[0] = EOS;
				format(global_string, 368,""c_white"Наркотики["c_green"%d грамм"c_white"]\n\
										Деньги["c_green"%d$"c_white"]\n\n\
										{cccc99}Оружие:"c_white"\n\n", h_info[house_id][h_safe_data][0], h_info[house_id][h_safe_data][1]);

				for(new j = 0; j < 3; j ++)
				{
					if(h_info[house_id][h_safe_guns][j] > 38 || h_info[house_id][h_safe_guns][j] < 1 || h_info[house_id][h_safe_guns][j + 3] == 0)strcat(global_string, ""c_grey"-Пусто\n");
					else
					{
						GetWeaponName(h_info[house_id][h_safe_guns][j], gun_name, 32);
						format(line_string, sizeof line_string, ""c_server"%s"c_white"   |   "c_server"%d пт.\n", gun_name, h_info[house_id][h_safe_guns][j + 3]);
						strcat(global_string, line_string);
					}
				}
				return show_dialog(playerid, d_safe, DIALOG_STYLE_MSGBOX, ""c_server"Сейф", global_string, "Далее", "Закрыть");
			}
			if(GetPVarInt(playerid, !"island_id") != 0)
			{
				new island_id = GetPVarInt(playerid, !"island_id") -1;
				if(strval(inputtext) != fi_info[island_id][fi_safe_code]) return SendClientMessage(playerid, col_white, !""scm_error"Вы ввели неправильный код от склада.");

				dlobal_string[0] = EOS;
				format(dlobal_string, 130, ""c_white"Наркотики -"c_gold"%d грамм\n"c_white"Деньги -"c_green"%d$\n\n"c_silver"Оружие:"c_white"\n\n", fi_info[island_id][fi_safe_data][0], fi_info[island_id][fi_safe_data][1]);

				for(new j = 0; j < 3; j++)
				{
					if(fi_info[island_id][fi_safe_guns][j] > 38 || fi_info[island_id][fi_safe_guns][j] < 1 || fi_info[island_id][fi_safe_guns][j + 3] == 0) strcat(dlobal_string, ""c_grey"Пусто\n");
					else
					{
						new gun_name[32];
						GetWeaponName(fi_info[island_id][fi_safe_guns][j], gun_name, 32);

						new line_string[68];
						format(line_string, sizeof line_string, ""c_white"%s | "c_silver"%d пт.\n", gun_name, fi_info[island_id][fi_safe_guns][j + 3]);
						strcat(dlobal_string, line_string);
					}
				}
				return show_dialog(playerid, d_safe, DIALOG_STYLE_MSGBOX, !""scm_dialog"Склад", dlobal_string, "Далее", "Закрыть");
			}
		}
		case d_safe:
		{
			if(!response) return 1;

			if(GetPVarInt(playerid, !"house_id") != 0)
				show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Сейф", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
			if(GetPVarInt(playerid, !"island_id") != 0)
				show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Склад", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
		}
		case d_safe_access:
		{
			if(!response) return true;

			switch(listitem)
			{
				case 0:
				{
					new dialog_string[144];
					if(GetPVarInt(playerid, !"house_id") != 0)
					{
						new h = GetPVarInt(playerid, !"house_id") -1;
						format(dialog_string, sizeof(dialog_string), ""c_white"В сейфе: "c_green"%d$"c_white"\nВведите сумму, которую желаете взять:", h_info[h][h_safe_data][1]);
						show_dialog(playerid, d_safe_money_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять деньги", dialog_string, !"Далее", !"Назад");
					}

					if(GetPVarInt(playerid, !"island_id") != 0)
					{
						new fi = GetPVarInt(playerid, !"island_id") -1;
						format(dialog_string, sizeof(dialog_string), ""c_white"На складе: "c_green"%d$"c_white"\nВведите сумму, которую желаете взять:", fi_info[fi][fi_safe_data][1]);
						show_dialog(playerid, d_safe_money_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять деньги", dialog_string, !"Далее", !"Назад");
					}
				}
				case 1:
				{
					new dialog_string[144];
					if(GetPVarInt(playerid, !"house_id") != 0)
					{
						new h = GetPVarInt(playerid, !"house_id") -1;
						format(dialog_string, sizeof(dialog_string), ""c_white"В сейфе: "c_green"%d$"c_white"\nВведите сумму, которую желаете положить в сейф:", h_info[h][h_safe_data][1]);
						show_dialog(playerid, d_safe_money_put, DIALOG_STYLE_INPUT, !""scm_dialog"Положить деньги", dialog_string, !"Далее", !"Назад");
					}

					if(GetPVarInt(playerid, !"island_id") != 0)
					{
						new fi = GetPVarInt(playerid, !"island_id") -1;
						format(dialog_string, sizeof(dialog_string), ""c_white"На складе: "c_green"%d$"c_white"\nВведите сумму, которую желаете положить на склад:", fi_info[fi][fi_safe_data][1]);
						show_dialog(playerid, d_safe_money_put, DIALOG_STYLE_INPUT, !""scm_dialog"Положить деньги", dialog_string, !"Далее", !"Назад");
					}
				}
				case 2:
				{
					new dialog_string[144];
					if(GetPVarInt(playerid, !"house_id") != 0)
					{
						new h = GetPVarInt(playerid, !"house_id") -1;
						format(dialog_string, sizeof(dialog_string), ""c_white"В сейфе: "c_green"%d"c_white" грамм наркотиков.\nВведите количество, которое желаете взять:", h_info[h][h_safe_data][0]);
						show_dialog(playerid, d_safe_drugs_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять наркотики", dialog_string, !"Далее", !"Назад");
					}

					if(GetPVarInt(playerid, !"island_id") != 0)
					{
						new fi = GetPVarInt(playerid, !"island_id") -1;
						format(dialog_string, sizeof(dialog_string), ""c_white"На складе: "c_green"%d"c_white" грамм наркотиков.\nВведите количество, которое желаете взять:", fi_info[fi][fi_safe_data][0]);
						show_dialog(playerid, d_safe_drugs_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять наркотики", dialog_string, !"Далее", !"Назад");
					}
				}
				case 3:
				{
					new dialog_string[144];
					if(GetPVarInt(playerid, !"house_id") != 0)
					{
						new h = GetPVarInt(playerid, !"house_id") -1;
						format(dialog_string, sizeof(dialog_string), ""c_white"В сейфе: "c_green"%d"c_white" грамм наркотиков.\nВведите количество, которое желаете положить:", h_info[h][h_safe_data][0]);
						show_dialog(playerid, d_safe_drugs_put, DIALOG_STYLE_INPUT, !""scm_dialog"Положить наркотики", dialog_string, !"Далее", !"Назад");
					}

					if(GetPVarInt(playerid, !"island_id") != 0)
					{
						new fi = GetPVarInt(playerid, !"island_id") -1;
						format(dialog_string, sizeof(dialog_string), ""c_white"На складе: "c_green"%d"c_white" грамм наркотиков.\nВведите количество, которое желаете положить:", fi_info[fi][fi_safe_data][0]);
						show_dialog(playerid, d_safe_drugs_put, DIALOG_STYLE_INPUT, !""scm_dialog"Положить наркотики", dialog_string, !"Далее", !"Назад");
					}
				}
				case 4:
				{
					new dialog_string[200];
					if(GetPVarInt(playerid, !"house_id") != 0)
					{
						new h = GetPVarInt(playerid, !"house_id") -1;
						for(new i = 0; i < 3; i++)
						{
							if(h_info[h][h_safe_guns][i] > 38 || h_info[h][h_safe_guns][i] < 1 || h_info[h][h_safe_guns][i + 3] == 0) strcat(dialog_string, ""c_grey"Пусто\n");
							else
							{
								new gunname[32];
								GetWeaponName(h_info[h][h_safe_guns][i], gunname, 32);

								new line_string[80];
								format(line_string, sizeof(line_string), ""c_white"%s | "c_silver"%d пт.\n", gunname, h_info[h][h_safe_guns][i + 3]);
								strcat(dialog_string, line_string);
							}
						}
						show_dialog(playerid, d_safe_guns, DIALOG_STYLE_LIST, !""scm_dialog"Оружие в сейфе", dialog_string, !"Выбрать", !"Назад");
					}

					if(GetPVarInt(playerid, !"island_id") != 0)
					{
						new fi = GetPVarInt(playerid, !"island_id") -1;
						for(new i = 0; i < 3; i++)
						{
							if(fi_info[fi][fi_safe_guns][i] > 38 || fi_info[fi][fi_safe_guns][i] < 1 || fi_info[fi][fi_safe_guns][i + 3] == 0) strcat(dialog_string, ""c_grey"Пусто\n");
							else
							{
								new gunname[32];
								GetWeaponName(fi_info[fi][fi_safe_guns][i], gunname, 32);

								new line_string[80];
								format(line_string, sizeof(line_string), ""c_white"%s | "c_silver"%d пт.\n", gunname, fi_info[fi][fi_safe_guns][i + 3]);
								strcat(dialog_string, line_string);
							}
						}
						show_dialog(playerid, d_safe_guns, DIALOG_STYLE_LIST, !""scm_dialog"Оружие на складе", dialog_string, !"Выбрать", !"Назад");
					}
				}
				case 5:
				{
					if(GetPVarInt(playerid, !"house_id") != 0)
					{
						if(PlayerInfo[playerid][house] != GetPVarInt(playerid, !"house_id")) return SendClientMessage(playerid, col_white, !""scm_error"Код от сейфа может изменить только владелец дома.");
						show_dialog(playerid, d_safe_changepin, DIALOG_STYLE_INPUT, !""scm_dialog"Cменить пароль", !""c_white"Введите новый пароль для сейфа:", !"Далее", !"Закрыть");
					}

					if(GetPVarInt(playerid, !"island_id") != 0)
					{
						if(PlayerInfo[playerid][island] != GetPVarInt(playerid, !"island_id")) return SendClientMessage(playerid, col_white, !""scm_error"Код от склада может изменить только глава семьи.");
						show_dialog(playerid, d_safe_changepin, DIALOG_STYLE_INPUT, !""scm_dialog"Cменить пароль", !""c_white"Введите новый пароль для склада:", !"Далее", !"Закрыть");
					}
				}
			}
		}
		case d_safe_changepin:
		{
			if(GetPVarInt(playerid, !"house_id") != 0)
			{
				new h = GetPVarInt(playerid, !"house_id") -1;

				if(strval(inputtext) < 1000 || strval(inputtext) > 9999) return show_dialog(playerid, d_safe_changepin, DIALOG_STYLE_INPUT, !""scm_dialog"Cменить пароль", !""c_grey"Используйте числа в диапазоне от 1000 до 9999\n"c_white"Введите новый пароль для сейфа:", !"Далее", !"Закрыть");

				h_info[h][h_safe_code] = strval(inputtext);

				new query_string[128];
				format(query_string, sizeof(query_string), "UPDATE `houses` SET `h_safe_code`='%d' WHERE `h_id`='%d' LIMIT 1", h_info[h][h_safe_code], h_info[h][h_id]);
				mysql_query(sql_connection, query_string);

				format(query_string, sizeof(query_string), ""scm_info"Новый PIN-код установлен: "c_gold"%d", strval(inputtext));
				SendClientMessage(playerid, col_white, query_string);

				return show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Сейф", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
			}

			if(GetPVarInt(playerid, !"island_id") != 0)
			{
				new fi = GetPVarInt(playerid, "island_id") -1;

				if(strval(inputtext) < 1000 || strval(inputtext) > 9999) return show_dialog(playerid, d_safe_changepin, DIALOG_STYLE_INPUT, !""scm_dialog"Cменить пароль", !""c_grey"Используйте числа в диапазоне от 1000 до 9999\n"c_white"Введите новый пароль для склада:", !"Далее", !"Закрыть");

				fi_info[fi][fi_safe_code] = strval(inputtext);

				new query_string[128];
				format(query_string, sizeof(query_string), "UPDATE `family_island` SET `fi_safe_code`='%d' WHERE `fi_id`='%d' LIMIT 1", fi_info[fi][fi_safe_code], fi_info[fi][fi_id]);
				mysql_query(sql_connection, query_string);

				format(query_string, sizeof(query_string), ""scm_info"Новый PIN-код установлен: "c_gold"%d", strval(inputtext));
				SendClientMessage(playerid, col_white, query_string);

				return show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Склад", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
			}
		}
		case d_safe_guns:
		{
			if(!response)
			{
				if(GetPVarInt(playerid, !"house_id") != 0)
					show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Сейф", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
				if(GetPVarInt(playerid, !"island_id") != 0)
					show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Склад", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
				return 1;
			}
			new dialog_string[200];
			if(GetPVarInt(playerid, !"house_id") != 0)
			{
				new h = GetPVarInt(playerid, !"house_id") -1;
				SetPVarInt(playerid, !"listitem", listitem);

				new weaponid = GetPlayerWeapon(playerid);
				if(h_info[h][h_safe_guns][listitem] == 0)
				{
					if(!weaponid)
					{
						for(new i = 0; i < 3; i++)
						{
							if(h_info[h][h_safe_guns][i] > 38 || h_info[h][h_safe_guns][i] < 1 || h_info[h][h_safe_guns][i + 3] == 0) strcat(dialog_string, ""c_grey"Пусто\n");
							else
							{
								new gunname[32];
								GetWeaponName(h_info[h][h_safe_guns][i], gunname, 32);

								new line_string[80];
								format(line_string, sizeof(line_string), ""c_white"%s | "c_silver"%d пт.\n", gunname, h_info[h][h_safe_guns][i + 3]);
								strcat(dialog_string, line_string);
							}
						}
						show_dialog(playerid, d_safe_guns, DIALOG_STYLE_LIST, !""scm_dialog"Оружие в сейфе", dialog_string, !"Выбрать", !"Назад");
						return SendClientMessage(playerid, col_gray, !""scm_error"Возьмите в руку оружие которое хотите положить в сейф.");
					}
					new text_string[144];
					format(text_string, sizeof(text_string), ""c_white"В сейфе "c_gold"%d"c_white" патронов\nВведи количество, которое желаете положить:", h_info[h][h_safe_guns][listitem + 3]);
					show_dialog(playerid, d_safe_guns_put, DIALOG_STYLE_INPUT, !""scm_dialog"Положить оружие", text_string, !"Далее", !"Назад");
					return 0;
				}
				if(weaponid == h_info[h][h_safe_guns][listitem])
				{
					new text_string[144];
					format(text_string, sizeof(text_string), ""c_white"В сейфе "c_gold"%d"c_white" патронов\nВведи количество, которое желаете положить:", h_info[h][h_safe_guns][listitem + 3]);
					show_dialog(playerid, d_safe_guns_put, DIALOG_STYLE_INPUT, !""scm_dialog"Положить оружие", text_string, !"Далее", !"Назад");
					return 0;
				}
				if(weaponid != h_info[h][h_safe_guns][listitem])
				{
					new text_string[144];
					format(text_string, sizeof(text_string), ""c_white"В сейфе "c_gold"%d"c_white" патронов\nВведи количество, которое желаете взять:", h_info[h][h_safe_guns][listitem + 3]);
					show_dialog(playerid, d_safe_guns_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять оружие", text_string, !"Далее", !"Назад");
					return 0;
				}
				return 1;
			}

			if(GetPVarInt(playerid, !"island_id") != 0)
			{
				new fi = GetPVarInt(playerid, !"island_id") -1;
				SetPVarInt(playerid, !"listitem", listitem);

				new weaponid = GetPlayerWeapon(playerid);
				if(fi_info[fi][fi_safe_guns][listitem] == 0)
				{
					if(!weaponid)
					{
						for(new i = 0; i < 3; i++)
						{
							if(fi_info[fi][fi_safe_guns][i] > 38 || fi_info[fi][fi_safe_guns][i] < 1 || fi_info[fi][fi_safe_guns][i + 3] == 0) strcat(dialog_string, ""c_grey"Пусто\n");
							else
							{
								new gunname[32];
								GetWeaponName(fi_info[fi][fi_safe_guns][i], gunname, 32);

								new line_string[80];
								format(line_string, sizeof(line_string), ""c_white"%s | "c_silver"%d пт.\n", gunname, fi_info[fi][fi_safe_guns][i + 3]);
								strcat(dialog_string, line_string);
							}
						}
						show_dialog(playerid, d_safe_guns, DIALOG_STYLE_LIST, !""scm_dialog"Оружие на складе", dialog_string, !"Выбрать", !"Назад");
						return SendClientMessage(playerid, col_gray, !""scm_error"Возьмите в руку оружие которое хотите положить на склад.");
					}
					new text_string[144];
					format(text_string, sizeof(text_string), ""c_white"На складе: "c_gold"%d"c_white" патронов\nВведи количество, которое желаете положить:", fi_info[fi][fi_safe_guns][listitem + 3]);
					show_dialog(playerid, d_safe_guns_put, DIALOG_STYLE_INPUT, !""scm_dialog"Положить оружие", text_string, !"Далее", !"Назад");
					return 0;
				}
				if(weaponid == fi_info[fi][fi_safe_guns][listitem])
				{
					new text_string[144];
					format(text_string, sizeof(text_string), ""c_white"На складе: "c_gold"%d"c_white" патронов\nВведи количество, которое желаете положить:", fi_info[fi][fi_safe_guns][listitem + 3]);
					show_dialog(playerid, d_safe_guns_put, DIALOG_STYLE_INPUT, !""scm_dialog"Положить оружие", text_string, !"Далее", !"Назад");
					return 0;
				}
				if(weaponid != fi_info[fi][fi_safe_guns][listitem])
				{
					new text_string[144];
					format(text_string, sizeof(text_string), ""c_white"На складе: "c_gold"%d"c_white" патронов\nВведи количество, которое желаете взять:", fi_info[fi][fi_safe_guns][listitem + 3]);
					show_dialog(playerid, d_safe_guns_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять оружие", text_string, !"Далее", !"Назад");
					return 0;
				}
				return 1;
			}
		}
		case d_safe_drugs_put:
		{
			new dialog_string[100];
			if(GetPVarInt(playerid, !"house_id") != 0)
			{
				new h = GetPVarInt(playerid, !"house_id") -1, _drugs = strval(inputtext);
				if(_drugs > PlayerInfo[playerid][drugs])
				{
					format(dialog_string, sizeof(dialog_string), ""c_white"В сейфе: "c_green"%d"c_white" грамм наркотиков.\nВведите количество, которое желаете положить:", h_info[h][h_safe_data][0]);
					show_dialog(playerid, d_safe_drugs_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять деньги", dialog_string, !"Далее", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет такого количества наркотиков.");
				}
				if(_drugs < 1 || _drugs > 1000)
				{
					format(dialog_string, sizeof(dialog_string), ""c_white"В сейфе: "c_green"%d"c_white" грамм наркотиков.\nВведите количество, которое желаете положить:", h_info[h][h_safe_data][0]);
					show_dialog(playerid, d_safe_drugs_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять деньги", dialog_string, !"Далее", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"Используйте количество наркотиков в диапазоне от 1 до 1.000 г.");
				}
				h_info[h][h_safe_data][0] += _drugs;
				PlayerInfo[playerid][drugs] -= _drugs;
				update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);

				new query_string[150];
				format(query_string, sizeof(query_string), "UPDATE `houses` SET `h_safe_data`='%d|%d|%d|%d|%d|%d|%d|%d' WHERE `h_id`='%d' LIMIT 1", h_info[h][h_safe_data][0], h_info[h][h_safe_data][1], h_info[h][h_safe_guns][0], h_info[h][h_safe_guns][1], h_info[h][h_safe_guns][2], h_info[h][h_safe_guns][3], h_info[h][h_safe_guns][4], h_info[h][h_safe_guns][5], h_info[h][h_id]);
				mysql_query(sql_connection, query_string);

				format(query_string, 100, ""scm_info"Вы успешно положили "c_gold"%d гр."c_white" наркотиков в сейф", _drugs);
				SendClientMessage(playerid, col_white, query_string);

				return show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Сейф", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
			}

			if(GetPVarInt(playerid, !"island_id") != 0)
			{
				new fi = GetPVarInt(playerid, !"island_id") -1, _drugs = strval(inputtext);
				if(_drugs > PlayerInfo[playerid][drugs])
				{
					format(dialog_string, sizeof(dialog_string), ""c_white"На складе: "c_green"%d"c_white" грамм наркотиков.\nВведите количество, которое желаете положить:", fi_info[fi][fi_safe_data][0]);
					show_dialog(playerid, d_safe_drugs_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять деньги", dialog_string, !"Далее", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет такого количества наркотиков.");
				}
				if(_drugs < 1 || _drugs > 1000)
				{
					format(dialog_string, sizeof(dialog_string), ""c_white"На складе: "c_green"%d"c_white" грамм наркотиков.\nВведите количество, которое желаете положить:", fi_info[fi][fi_safe_data][0]);
					show_dialog(playerid, d_safe_drugs_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять деньги", dialog_string, !"Далее", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"Используйте количество наркотиков в диапазоне от 1 до 1.000 г.");
				}
				fi_info[fi][fi_safe_data][0] += _drugs;
				PlayerInfo[playerid][drugs] -= _drugs;
				update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);

				new query_string[150];
				format(query_string, sizeof(query_string), "UPDATE `family_island` SET `fi_safe_data`='%d|%d|%d|%d|%d|%d|%d|%d' WHERE `fi_id`='%d' LIMIT 1", fi_info[fi][fi_safe_data][0], fi_info[fi][fi_safe_data][1], fi_info[fi][fi_safe_guns][0], fi_info[fi][fi_safe_guns][1], fi_info[fi][fi_safe_guns][2], fi_info[fi][fi_safe_guns][3], fi_info[fi][fi_safe_guns][4], fi_info[fi][fi_safe_guns][5], fi_info[fi][fi_id]);
				mysql_query(sql_connection, query_string);

				format(query_string, 100, ""scm_info"Вы успешно положили "c_gold"%d гр."c_white" наркотиков на склад", _drugs);
				SendClientMessage(playerid, col_white, query_string);

				return show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Склад", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
			}
		}
		case d_safe_drugs_get:
		{
			if(!response)
			{
				if(GetPVarInt(playerid, !"house_id") != 0)
					show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Сейф", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
				if(GetPVarInt(playerid, !"island_id") != 0)
					show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Склад", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
				return 1;
			}
		    
			new dialog_string[100];
			if(GetPVarInt(playerid, !"house_id") != 0)
			{
				new h = GetPVarInt(playerid, !"house_id") -1, _drugs = strval(inputtext);
				if(_drugs > h_info[h][h_safe_data][0])
				{
					format(dialog_string, sizeof(dialog_string), ""c_white"В сейфе: "c_green"%d"c_white" грамм наркотиков.\nВведите количество, которое желаете взять:", h_info[h][h_safe_data][0]);
					show_dialog(playerid, d_safe_drugs_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять наркотики", dialog_string, !"Далее", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"В сейфе нет такого количества наркотиков.");
				}
				if(_drugs < 1 || _drugs > 1000)
				{
					format(dialog_string, sizeof(dialog_string), ""c_white"В сейфе: "c_green"%d"c_white" грамм наркотиков.\nВведите количество, которое желаете взять:", h_info[h][h_safe_data][0]);
					show_dialog(playerid, d_safe_drugs_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять наркотики", dialog_string, !"Далее", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"Используйте количество наркотиков в диапазоне от 1 до 1.000 г.");
				}
				h_info[h][h_safe_data][0] -= _drugs;
				PlayerInfo[playerid][drugs] += _drugs;
				update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);

				new query_string[150];
				format(query_string, sizeof(query_string), "UPDATE `houses` SET `h_safe_data`='%d|%d|%d|%d|%d|%d|%d|%d' WHERE `h_id`='%d' LIMIT 1", h_info[h][h_safe_data][0], h_info[h][h_safe_data][1], h_info[h][h_safe_guns][0], h_info[h][h_safe_guns][1], h_info[h][h_safe_guns][2], h_info[h][h_safe_guns][3], h_info[h][h_safe_guns][4], h_info[h][h_safe_guns][5], h_info[h][h_id]);
				mysql_query(sql_connection, query_string);

				format(query_string, 100, ""scm_info"Вы успешно взяли "c_gold"%d гр."c_white" наркотиков из сейфа", _drugs);
				SendClientMessage(playerid, col_white, query_string);

				return show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Сейф", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
			}

			if(GetPVarInt(playerid, !"island_id") != 0)
			{
				new fi = GetPVarInt(playerid, !"island_id") -1, _drugs = strval(inputtext);
				if(_drugs > fi_info[fi][fi_safe_data][0])
				{
					format(dialog_string, sizeof(dialog_string), ""c_white"На складе: "c_green"%d"c_white" грамм наркотиков.\nВведите количество, которое желаете взять:", fi_info[fi][fi_safe_data][0]);
					show_dialog(playerid, d_safe_drugs_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять деньги", dialog_string, !"Далее", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"На складе нет такого количества наркотиков.");
				}
				if(_drugs < 1 || _drugs > 1000)
				{
					format(dialog_string, sizeof(dialog_string), ""c_white"На складе: "c_green"%d"c_white" грамм наркотиков.\nВведите количество, которое желаете взять:", fi_info[fi][fi_safe_data][0]);
					show_dialog(playerid, d_safe_drugs_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять деньги", dialog_string, !"Далее", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"Используйте количество наркотиков в диапазоне от 1 до 1.000 г.");
				}
				fi_info[fi][fi_safe_data][0] -= _drugs;
				PlayerInfo[playerid][drugs] += _drugs;
				update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);

				new query_string[150];
				format(query_string, sizeof(query_string), "UPDATE `family_island` SET `fi_safe_data`='%d|%d|%d|%d|%d|%d|%d|%d' WHERE `fi_id`='%d' LIMIT 1", fi_info[fi][fi_safe_data][0], fi_info[fi][fi_safe_data][1], fi_info[fi][fi_safe_guns][0], fi_info[fi][fi_safe_guns][1], fi_info[fi][fi_safe_guns][2], fi_info[fi][fi_safe_guns][3], fi_info[fi][fi_safe_guns][4], fi_info[fi][fi_safe_guns][5], fi_info[fi][fi_id]);
				mysql_query(sql_connection, query_string);

				format(query_string, 100, ""scm_info"Вы успешно взяли "c_gold"%d гр."c_white" наркотиков со склада", _drugs);
				SendClientMessage(playerid, col_white, query_string);

				return show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Склад", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
			}
		}
		case d_safe_money_put:
		{
			if(!response)
			{
				if(GetPVarInt(playerid, !"house_id") != 0)
					show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Сейф", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
				if(GetPVarInt(playerid, !"island_id") != 0)
					show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Склад", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
				return 1;
			}
			new dialog_string[100];
			if(GetPVarInt(playerid, !"house_id") != 0)
			{
				new h = GetPVarInt(playerid, !"house_id") -1, _money = strval(inputtext);
				if(_money > PlayerInfo[playerid][money])
				{
					format(dialog_string, sizeof(dialog_string), ""c_white"В сейфе: "c_green"%d$"c_white"\nВведите сумму, которую желаете положить в сейф:", h_info[h][h_safe_data][1]);
					show_dialog(playerid, d_safe_money_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять деньги", dialog_string, !"Далее", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет такого количества денег.");
				}
				if(_money < 1 || _money > 10000000)
				{
					format(dialog_string, sizeof(dialog_string), ""c_white"В сейфе: "c_green"%d$"c_white"\nВведите сумму, которую желаете положить в сейф:", h_info[h][h_safe_data][1]);
					show_dialog(playerid, d_safe_money_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять деньги", dialog_string, !"Далее", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"Используйте сумму в диапазоне от 1 до 10.000.000$");
				}
				h_info[h][h_safe_data][1] += _money;

				give_money(playerid, -_money);
				insert_money_log(playerid, INVALID_PLAYER_ID, -_money, "положил деньги в сейф [дом]");

				new query_string[150];
				format(query_string, sizeof(query_string), "UPDATE `houses` SET `h_safe_data`='%d|%d|%d|%d|%d|%d|%d|%d' WHERE `h_id`='%d' LIMIT 1", h_info[h][h_safe_data][0], h_info[h][h_safe_data][1], h_info[h][h_safe_guns][0], h_info[h][h_safe_guns][1], h_info[h][h_safe_guns][2], h_info[h][h_safe_guns][3], h_info[h][h_safe_guns][4], h_info[h][h_safe_guns][5], h_info[h][h_id]);
				mysql_query(sql_connection, query_string);

				format(query_string, 90, ""scm_info"Вы успешно положили "c_green"%d$"c_white" в сейф", _money);
				SendClientMessage(playerid, col_white, query_string);

				return show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Сейф", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
			}

			if(GetPVarInt(playerid, !"island_id") != 0)
			{
				new fi = GetPVarInt(playerid, !"island_id") -1, _money = strval(inputtext);
				if(_money > PlayerInfo[playerid][money])
				{
					format(dialog_string, sizeof(dialog_string), ""c_white"На складе: "c_green"%d$"c_white"\nВведите сумму, которую желаете положить на склад:", fi_info[fi][fi_safe_data][1]);
					show_dialog(playerid, d_safe_money_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять деньги", dialog_string, !"Далее", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет такого количества денег.");
				}
				if(_money < 1 || _money > 10000000)
				{
					format(dialog_string, sizeof(dialog_string), ""c_white"На складе: "c_green"%d$"c_white"\nВведите сумму, которую желаете положить на склад:", fi_info[fi][fi_safe_data][1]);
					show_dialog(playerid, d_safe_money_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять деньги", dialog_string, !"Далее", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"Используйте сумму в диапазоне от 1 до 10.000.000$");
				}
				fi_info[fi][fi_safe_data][1] += _money;

				give_money(playerid, -_money);
				insert_money_log(playerid, INVALID_PLAYER_ID, -_money, "положил деньги на склад [семейный дом]");

				new query_string[150];
				format(query_string, sizeof(query_string), "UPDATE `family_island` SET `fi_safe_data`='%d|%d|%d|%d|%d|%d|%d|%d' WHERE `fi_id`='%d' LIMIT 1", fi_info[fi][fi_safe_data][0], fi_info[fi][fi_safe_data][1], fi_info[fi][fi_safe_guns][0], fi_info[fi][fi_safe_guns][1], fi_info[fi][fi_safe_guns][2], fi_info[fi][fi_safe_guns][3], fi_info[fi][fi_safe_guns][4], fi_info[fi][fi_safe_guns][5], fi_info[fi][fi_id]);
				mysql_query(sql_connection, query_string);

				format(query_string, 90, ""scm_info"Вы успешно положили "c_green"%d$"c_white" на склад", _money);
				SendClientMessage(playerid, col_white, query_string);

				return show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Склад", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
			}
		}
		case d_safe_money_get:
		{
			if(!response)
			{
				if(GetPVarInt(playerid, !"house_id") != 0)
					show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Сейф", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
				if(GetPVarInt(playerid, !"island_id") != 0)
					show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Склад", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
				return 1;
			}
			new dialog_string[100];
			if(GetPVarInt(playerid, !"house_id") != 0)
			{
				new h = GetPVarInt(playerid, !"house_id") -1, _money = strval(inputtext);
				if(_money > h_info[h][h_safe_data][1])
				{
					format(dialog_string, sizeof(dialog_string), ""c_white"В сейфе: "c_green"%d$"c_white"\nВведите сумму, которую желаете взять:", h_info[h][h_safe_data][1]);
					show_dialog(playerid, d_safe_money_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять деньги", dialog_string, !"Далее", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"В сейфе нет такого количества денег.");
				}
				if(_money < 1 || _money > 10000000)
				{
					format(dialog_string, sizeof(dialog_string), ""c_white"В сейфе: "c_green"%d$"c_white"\nВведите сумму, которую желаете взять:", h_info[h][h_safe_data][1]);
					show_dialog(playerid, d_safe_money_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять деньги", dialog_string, !"Далее", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"Используйте сумму в диапазоне от 1 до 10.000.000$");
				}
				h_info[h][h_safe_data][1] -= _money;

				give_money(playerid, _money);
				insert_money_log(playerid, INVALID_PLAYER_ID, _money, "взял деньги с сейфа [дом]");

				new query_string[150];
				format(query_string, sizeof(query_string), "UPDATE `houses` SET `h_safe_data`='%d|%d|%d|%d|%d|%d|%d|%d' WHERE `h_id`='%d' LIMIT 1", h_info[h][h_safe_data][0], h_info[h][h_safe_data][1], h_info[h][h_safe_guns][0], h_info[h][h_safe_guns][1], h_info[h][h_safe_guns][2], h_info[h][h_safe_guns][3], h_info[h][h_safe_guns][4], h_info[h][h_safe_guns][5], h_info[h][h_id]);
				mysql_query(sql_connection, query_string);

				format(query_string, 80, ""scm_info"Вы успешно взяли "c_green"%d$"c_white" из сейфа", _money);
				SendClientMessage(playerid, col_white, query_string);

				return show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Сейф", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
			}

			if(GetPVarInt(playerid, !"island_id") != 0)
			{
				new fi = GetPVarInt(playerid, !"island_id") -1, _money = strval(inputtext);
				if(_money > fi_info[fi][fi_safe_data][1])
				{
					format(dialog_string, sizeof(dialog_string), ""c_white"На складе: "c_green"%d$"c_white"\nВведите сумму, которую желаете взять:", fi_info[fi][fi_safe_data][1]);
					show_dialog(playerid, d_safe_money_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять деньги", dialog_string, !"Далее", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"На складе нет такого количества денег.");
				}
				if(_money < 1 || _money > 10000000)
				{
					format(dialog_string, sizeof(dialog_string), ""c_white"На складе: "c_green"%d$"c_white"\nВведите сумму, которую желаете взять:", fi_info[fi][fi_safe_data][1]);
					show_dialog(playerid, d_safe_money_get, DIALOG_STYLE_INPUT, !""scm_dialog"Взять деньги", dialog_string, !"Далее", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"Используйте сумму в диапазоне от 1 до 10.000.000$");
				}
				fi_info[fi][fi_safe_data][1] -= _money;

				give_money(playerid, _money);
				insert_money_log(playerid, INVALID_PLAYER_ID, _money, "взял деньги со склада [семейный дом]");

				new query_string[150];
				format(query_string, sizeof(query_string), "UPDATE `family_island` SET `fi_safe_data`='%d|%d|%d|%d|%d|%d|%d|%d' WHERE `fi_id`='%d' LIMIT 1", fi_info[fi][fi_safe_data][0], fi_info[fi][fi_safe_data][1], fi_info[fi][fi_safe_guns][0], fi_info[fi][fi_safe_guns][1], fi_info[fi][fi_safe_guns][2], fi_info[fi][fi_safe_guns][3], fi_info[fi][fi_safe_guns][4], fi_info[fi][fi_safe_guns][5], fi_info[fi][fi_id]);
				mysql_query(sql_connection, query_string);

				format(query_string, 80, ""scm_info"Вы успешно взяли "c_green"%d$"c_white" со склада", _money);
				SendClientMessage(playerid, col_white, query_string);

				return show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Склад", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
			}
		}
		case d_safe_guns_put:
		{
			if(!response)
			{
				if(GetPVarInt(playerid, !"house_id") != 0)
					show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Сейф", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
				if(GetPVarInt(playerid, !"island_id") != 0)
					show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Склад", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
				return 1;
			}
			new dialog_string[200];
			if(GetPVarInt(playerid, !"house_id") != 0)
			{
				new h = GetPVarInt(playerid, !"house_id") -1;
				listitem = GetPVarInt(playerid, !"listitem");
				DeletePVar(playerid, !"listitem");

				new p_ammo, weaponid = GetPlayerWeapon(playerid), slot = get_weapon_slot(weaponid);
				GetPlayerWeaponData(playerid, slot, weaponid, p_ammo);

				if(p_t_info[playerid][p_gun_ammo][slot] < p_ammo) p_ammo = p_t_info[playerid][p_gun_ammo][slot];
				if(strval(inputtext) > p_ammo)
				{
					for(new i = 0; i < 3; i++)
					{
						if(h_info[h][h_safe_guns][i] > 38 || h_info[h][h_safe_guns][i] < 1 || h_info[h][h_safe_guns][i + 3] == 0) strcat(dialog_string, ""c_grey"Пусто\n");
						else
						{
							new gunname[32];
							GetWeaponName(h_info[h][h_safe_guns][i], gunname, 32);

							new line_string[80];
							format(line_string, sizeof(line_string), ""c_white"%s | "c_silver"%d пт.\n", gunname, h_info[h][h_safe_guns][i + 3]);
							strcat(dialog_string, line_string);
						}
					}
					show_dialog(playerid, d_safe_guns, DIALOG_STYLE_LIST, !""scm_dialog"Оружие в сейфе", dialog_string, !"Выбрать", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет такого количества патронов.");
				}
				h_info[h][h_safe_guns][listitem] = weaponid;
				h_info[h][h_safe_guns][listitem + 3] += strval(inputtext);

				give_weapon(playerid, weaponid, -strval(inputtext));

				new query_string[150];
				format(query_string, sizeof(query_string), "UPDATE `houses` SET `h_safe_data`='%d|%d|%d|%d|%d|%d|%d|%d' WHERE `h_id`='%d' LIMIT 1", h_info[h][h_safe_data][0], h_info[h][h_safe_data][1], h_info[h][h_safe_guns][0], h_info[h][h_safe_guns][1], h_info[h][h_safe_guns][2], h_info[h][h_safe_guns][3], h_info[h][h_safe_guns][4], h_info[h][h_safe_guns][5], h_info[h][h_id]);
				mysql_query(sql_connection, query_string);

				return show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Сейф", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
			}

			if(GetPVarInt(playerid, !"island_id") != 0)
			{
				new fi = GetPVarInt(playerid, !"island_id") -1;
				listitem = GetPVarInt(playerid, !"listitem");
				DeletePVar(playerid, !"listitem");

				new p_ammo, weaponid = GetPlayerWeapon(playerid), slot = get_weapon_slot(weaponid);
				GetPlayerWeaponData(playerid, slot, weaponid, p_ammo);

				if(p_t_info[playerid][p_gun_ammo][slot] < p_ammo) p_ammo = p_t_info[playerid][p_gun_ammo][slot];
				if(strval(inputtext) > p_ammo)
				{
					for(new i = 0; i < 3; i++)
					{
						if(fi_info[fi][fi_safe_guns][i] > 38 || fi_info[fi][fi_safe_guns][i] < 1 || fi_info[fi][fi_safe_guns][i + 3] == 0) strcat(dialog_string, ""c_grey"Пусто\n");
						else
						{
							new gunname[32];
							GetWeaponName(fi_info[fi][fi_safe_guns][i], gunname, 32);

							new line_string[80];
							format(line_string, sizeof(line_string), ""c_white"%s | "c_silver"%d пт.\n", gunname, fi_info[fi][fi_safe_guns][i + 3]);
							strcat(dialog_string, line_string);
						}
					}
					show_dialog(playerid, d_safe_guns, DIALOG_STYLE_LIST, !""scm_dialog"Оружие на складе", dialog_string, !"Выбрать", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет такого количества патронов.");
				}
				fi_info[fi][fi_safe_guns][listitem] = weaponid;
				fi_info[fi][fi_safe_guns][listitem + 3] += strval(inputtext);

				give_weapon(playerid, weaponid, -strval(inputtext));

				new query_string[150];
				format(query_string, sizeof(query_string), "UPDATE `family_island` SET `fi_safe_data`='%d|%d|%d|%d|%d|%d|%d|%d' WHERE `fi_id`='%d' LIMIT 1", fi_info[fi][fi_safe_data][0], fi_info[fi][fi_safe_data][1], fi_info[fi][fi_safe_guns][0], fi_info[fi][fi_safe_guns][1], fi_info[fi][fi_safe_guns][2], fi_info[fi][fi_safe_guns][3], fi_info[fi][fi_safe_guns][4], fi_info[fi][fi_safe_guns][5], fi_info[fi][fi_id]);
				mysql_query(sql_connection, query_string);

				return show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Склад", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
			}
		}
		case d_safe_guns_get:
		{
			if(!response)
			{
				if(GetPVarInt(playerid, !"house_id") != 0)
					show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Сейф", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
				if(GetPVarInt(playerid, !"island_id") != 0)
					show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Склад", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
				return 1;
			}
			new dialog_string[200];
			if(GetPVarInt(playerid, !"house_id") != 0)
			{
				new h = GetPVarInt(playerid, !"house_id") -1;
				listitem = GetPVarInt(playerid, !"listitem");
				DeletePVar(playerid, !"listitem");

				if(strval(inputtext) > h_info[h][h_safe_guns][listitem + 3])
				{
					for(new i = 0; i < 3; i++)
					{
						if(h_info[h][h_safe_guns][i] > 38 || h_info[h][h_safe_guns][i] < 1 || h_info[h][h_safe_guns][i + 3] == 0) strcat(dialog_string, ""c_grey"Пусто\n");
						else
						{
							new gunname[32];
							GetWeaponName(h_info[h][h_safe_guns][i], gunname, 32);

							new line_string[80];
							format(line_string, sizeof(line_string), ""c_white"%s | "c_silver"%d пт.\n", gunname, h_info[h][h_safe_guns][i + 3]);
							strcat(dialog_string, line_string);
						}
					}
					show_dialog(playerid, d_safe_guns, DIALOG_STYLE_LIST, !""scm_dialog"Оружие в сейфе", dialog_string, !"Выбрать", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"В сейфе нет такого количества патронов.");
				}

				give_weapon(playerid, h_info[h][h_safe_guns][listitem], strval(inputtext));
				if(strval(inputtext) == h_info[h][h_safe_guns][listitem + 3])
				{
					h_info[h][h_safe_guns][listitem] = 0;
					h_info[h][h_safe_guns][listitem + 3] = 0;
				}
				else h_info[h][h_safe_guns][listitem + 3] -= strval(inputtext);

				new query_string[150];
				format(query_string, sizeof(query_string), "UPDATE `houses` SET `h_safe_data`='%d|%d|%d|%d|%d|%d|%d|%d' WHERE `h_id`='%d' LIMIT 1", h_info[h][h_safe_data][0], h_info[h][h_safe_data][1], h_info[h][h_safe_guns][0], h_info[h][h_safe_guns][1], h_info[h][h_safe_guns][2], h_info[h][h_safe_guns][3], h_info[h][h_safe_guns][4], h_info[h][h_safe_guns][5], h_info[h][h_id]);
				mysql_query(sql_connection, query_string);

				return show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Сейф", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
			}

			if(GetPVarInt(playerid, !"island_id") != 0)
			{
				new fi = GetPVarInt(playerid, !"island_id") -1;
				listitem = GetPVarInt(playerid, !"listitem");
				DeletePVar(playerid, !"listitem");

				if(strval(inputtext) > fi_info[fi][fi_safe_guns][listitem + 3])
				{
					for(new i = 0; i < 3; i++)
					{
						if(fi_info[fi][fi_safe_guns][i] > 38 || fi_info[fi][fi_safe_guns][i] < 1 || fi_info[fi][fi_safe_guns][i + 3] == 0) strcat(dialog_string, ""c_grey"Пусто\n");
						else
						{
							new gunname[32];
							GetWeaponName(fi_info[fi][fi_safe_guns][i], gunname, 32);

							new line_string[80];
							format(line_string, sizeof(line_string), ""c_white"%s | "c_silver"%d пт.\n", gunname, fi_info[fi][fi_safe_guns][i + 3]);
							strcat(dialog_string, line_string);
						}
					}
					show_dialog(playerid, d_safe_guns, DIALOG_STYLE_LIST, !""scm_dialog"Оружие на складе", dialog_string, !"Выбрать", !"Назад");
					return SendClientMessage(playerid, col_white, !""scm_error"На складе нет такого количества патронов.");
				}

				give_weapon(playerid, fi_info[fi][fi_safe_guns][listitem], strval(inputtext));
				if(strval(inputtext) == fi_info[fi][fi_safe_guns][listitem + 3])
				{
					fi_info[fi][fi_safe_guns][listitem] = 0;
					fi_info[fi][fi_safe_guns][listitem + 3] = 0;
				}
				else fi_info[fi][fi_safe_guns][listitem + 3] -= strval(inputtext);

				new query_string[150];
				format(query_string, sizeof(query_string), "UPDATE `family_island` SET `fi_safe_data`='%d|%d|%d|%d|%d|%d|%d|%d' WHERE `fi_id`='%d' LIMIT 1", fi_info[fi][fi_safe_data][0], fi_info[fi][fi_safe_data][1], fi_info[fi][fi_safe_guns][0], fi_info[fi][fi_safe_guns][1], fi_info[fi][fi_safe_guns][2], fi_info[fi][fi_safe_guns][3], fi_info[fi][fi_safe_guns][4], fi_info[fi][fi_safe_guns][5], fi_info[fi][fi_id]);
				mysql_query(sql_connection, query_string);

				return show_dialog(playerid, d_safe_access, DIALOG_STYLE_LIST, !""scm_dialog"Склад", !"Взять деньги\nПоложить деньги\nВзять наркотики\nПоложить наркотики\nОружие\n"c_silver"Сменить PIN-код", !"Выбрать", !"Закрыть");
			}
		}
		case d_h_freeze:
		{
			if(!response) return 1;

			new prod_needed,
				prod_name[24],
				prod_hunger;

			switch(listitem)
			{
				case 0: prod_needed = 10, strcat(prod_name,"хот-дог"), prod_hunger = 20;
				case 1: prod_needed = 15, strcat(prod_name,"бургер"), prod_hunger = 30;
				case 2: prod_needed = 30, strcat(prod_name,"пиццу"), prod_hunger = 60;
			}
			new h = GetPVarInt(playerid, "house_id")-1;
			if(h_info[h][h_prods] < prod_needed)
			{
				new t_string[98];
				format(t_string, sizeof(t_string), ""c_orange_red"* "c_grey"У Вас в холодильнике недостаточно продуктов. "c_orange_red"%d/%d"c_grey".", h_info[h][h_prods], prod_needed);
				SendClientMessage(playerid, col_gray, t_string);
				show_dialog(playerid, d_h_freeze, DIALOG_STYLE_LIST, ""c_server"Холодильник", "Хот-дог ("c_orange_red"-10 прод. "c_green"+20 сытость"c_white")\nБургер ("c_orange_red"-15 прод. "c_green"+30 сытость"c_white")\nПицца ("c_orange_red"-30 прод. "c_green"+60 сытость"c_white")", "Съесть", "Закрыть");
				return 1;
			}
			new query[128];
			format(query,sizeof(query),"UPDATE `houses` SET `h_prods` = '%d' WHERE `h_id` = '%d'", h_info[h][h_prods] -prod_needed, h_info[h][h_id]);
			mysql_tquery(sql_connection, query);
			h_info[h][h_prods] -= prod_needed;


			format(query,68, "взял(а) %s из холодильника.", prod_name);
			me_action(playerid, query);

			ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0, 0, 0, 0, 0, 5000, 1);

			if(PlayerInfo[playerid][hunger] + prod_hunger > 100)PlayerInfo[playerid][hunger] = 100;
			else PlayerInfo[playerid][hunger] += prod_hunger;
		}
		case d_boat_freeze:
		{
			if(!response) return 1;

			new prod_name[24],
				prod_hunger;

			switch(listitem)
			{
				case 0: strcat(prod_name,"хот-дог"), prod_hunger = 20;
				case 1: strcat(prod_name,"бургер"), prod_hunger = 30;
				case 2:strcat(prod_name,"пиццу"), prod_hunger = 60;
			}
			new query[68];
			format(query,68, "взял(а) %s из холодильника.", prod_name);
			me_action(playerid, query);

			ApplyAnimation(playerid,"FOOD","EAT_Burger", 2.0, 0, 0, 0, 0, 5000, 1);

			if(PlayerInfo[playerid][hunger] + prod_hunger > 100)PlayerInfo[playerid][hunger] = 100;
			else PlayerInfo[playerid][hunger] += prod_hunger;
		}
		case d_cop_break:
		{
        	if(!response) return 1;
			if(GetPVarInt(playerid, "SetBlock")> 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уже поставили заграждение, уберите его с помощью команды "c_orange_red"/break"c_grey".");
			ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 6.1, 0, 0, 0, 0, 0,1);

			static const Float:z_differ[] = {1.0, 1.0, 0.5, 0.5, 0.5, 0.5};
			SetPVarInt(playerid, "SetBlock", CreateDynamicObject(cop_breaks[listitem], p_t_info[playerid][p_pos][0] + 1, p_t_info[playerid][p_pos][1], p_t_info[playerid][p_pos][2] -z_differ[listitem], 0.00, 0.00, 30.00));
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Заграждение успешно установлено. Для удаления заграждение используйте "c_green"/break"c_grey".");
		}
		case d_police_comp:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(police_gz[playerid])
				    {
				        GangZoneHideForPlayer(playerid, police_gz[playerid]);
				        GangZoneDestroy(police_gz[playerid]);
						police_gz[playerid] = 0;
				        SendClientMessage(playerid, col_white, ""c_server"* "c_white"Предыдущее местоположение было скрыто с Вашего радара.");
				    }
					show_dialog(playerid, d_police_comp_2, DIALOG_STYLE_INPUT, ""c_server"Определение местоположения", ""c_white"Вы желаете определить местоположение жителя штата.\n\nВведите в поле ниже ID игрока:", "Поиск", "Назад");
				}
				case 1: show_dialog(playerid, d_police_comp_2, DIALOG_STYLE_INPUT, !""scm_dialog"Досье жителей", !""c_white"Введите ID игрока для поиска досье:", !"Поиск", !"Назад");
				case 2:
				{
					return pdcam_status(playerid, true);
				}
				case 3:
				{
					if(PlayerInfo[playerid][member] != 7) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Недоступно.");
					show_dialog(playerid, d_police_comp_2, DIALOG_STYLE_INPUT, ""c_server"Определение местоположения", ""c_white"Вы желаете определить местоположение жителя штата по номеру телефона.\n\nВведите в поле ниже необходимый номер телефона:", "Поиск", "Назад");
				}
				case 4:
				{
				    new wantinfo, wantinfo2, jailinfo;
				    foreach(new i: logged_players)
				    {
				        if(PlayerInfo[i][wanted]) wantinfo++;
				        if(PlayerInfo[i][wanted] > 3)wantinfo2++;
				        if(PlayerInfo[i][bail]) jailinfo++;
				    }
					new str[218];
				    format(str, sizeof(str), ""c_server"Общая статистика штата на текущий момент:\n\n"c_white"Количество преступников в розыске: "c_grey"%d\n"c_white"Количество особо опасных преступников: "c_grey"%d\n"c_white"Количество сидящих в тюрьме: "c_grey"%d",
					wantinfo, wantinfo2, jailinfo);
					return show_dialog(playerid, d_clearinfo, DIALOG_STYLE_MSGBOX, ""c_server"Статистика штата", str, "Закрыть", "");
				}
				case 5:
				{
					if(p_t_info[playerid][phone_audition] != 0)
					{
						SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно отключили прослушивание телефонных звонков.");
						p_t_info[playerid][phone_audition] = 0;
					}
					show_dialog(playerid, d_police_comp_2, DIALOG_STYLE_INPUT, ""c_server"Прослушивание телефонных звонков", ""c_white"Для прослушивания звонков с определённого номера телефона, введите его в поле ниже:", "Прослушивать", "Назад");
				}
				case 6:
				{
					new stringer[135];
					format(stringer, sizeof(stringer), ""c_white"Количество нелегально проданного оружия:\t\t"c_server"%d\n"c_white"Количество нелегально проданных наркотиков:\t\t"c_server"%d", gunrow, drugsrow);
					return show_dialog(playerid, d_clearinfo, DIALOG_STYLE_MSGBOX, ""c_server"Информация о чёрном рынке", stringer, "Закрыть", "");
				}
				case 7:
				{
    				new wantinfo, wantinfo2, jailinfo;
				    foreach(new i: logged_players)
				    {
				        if(PlayerInfo[i][wanted]) wantinfo++;
				        if(PlayerInfo[i][wanted] > 3) wantinfo2++;
				        if(PlayerInfo[i][bail]) jailinfo++;
				    }
					new dialog_string[240];
				    format(dialog_string, sizeof(dialog_string), ""c_server"Общая статистика штата на текущий момент:\n\n"c_white"Количество преступников в розыске: "c_silver"%d\n"c_white"Количество особо опасных преступников: "c_silver"%d\n"c_white"Количество сидящих в тюрьме: "c_silver"%d", wantinfo, wantinfo2, jailinfo);
					return show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, !""scm_dialog"Статистика штата", dialog_string, !"Закрыть", !"");
				}
			}
			SetPVarInt(playerid, "police_computer", listitem);
		}

		case d_police_comp_2:
		{
			if(!response)
			{
				DeletePVar(playerid, "police_computer");
				pc_cmd_comp(playerid);
				return 1;
			}
			new pdcomp = GetPVarInt(playerid, "police_computer");
			switch(pdcomp)
			{
			    case 0:
			    {
			        new Float: pos[4],
						plid = strval(inputtext);
					get_gz_pos(p_t_info[plid][p_pos][0], p_t_info[plid][p_pos][1], 80.0, pos[0], pos[1], pos[2], pos[3]);
					police_gz[playerid] = GangZoneCreate(pos[0], pos[1], pos[2], pos[3]);
					GangZoneShowForPlayer(playerid, police_gz[playerid], 0x000000AA);
					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Местоположение определено и отмечено на карте");
				}
				case 1:
				{
					new plid = strval(inputtext);
					if(!IsPlayerConnected(plid)) return show_dialog(playerid, d_police_comp_2, DIALOG_STYLE_INPUT, !""scm_dialog"Досье жителей", !""c_grey"Игрок не найден\n"c_white"Введите ID игрока для поиска досье:", !"Поиск", !"Назад");
					return show_pass(plid, playerid);
				}
			    case 3:
				{
					if(strlen(inputtext)< 6 || ! strval(inputtext))
			        {
			            SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Необходимо ввести номер телефона.");
			            DeletePVar(playerid, "police_computer");
						pc_cmd_comp(playerid);
			            return 1;
			        }
			        new str[5],
						phnum = strval(inputtext);
			        foreach(new i: logged_players)
			        {
			            if(PlayerInfo[i][number] == phnum && p_t_info[i][phone_toggled])
			            {
			                format(str, sizeof(str), "%d", i);
							DeletePVar(playerid, "police_computer");
							return pc_cmd_search(playerid, str);
			            }
			            continue;
			        }
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Не удалось определить местоположение жителя с данным номером телефона.");
				}
				case 5:
				{
					if(!strval(inputtext)|| strlen(inputtext)< 6)
					{
						SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Необходимо ввести номер телефона.");
						DeletePVar(playerid, "police_computer");
						return 1;
					}
					p_t_info[playerid][phone_audition] = strval(inputtext);
					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно начали прослушивать телефонные звонки с введённого номера.");
					return 1;
				}
			}
			DeletePVar(playerid, "police_computer");
		}
		case d_carmarket:
		{
			if(!response) return 1;

			new _step = 0,
				carid;
			foreach(new _v_id:player_vehicles[playerid])
			{
				if(_step == listitem -1)
				{
					carid = _v_id;
				}
				_step ++;
			}
			SetPVarInt(playerid, "sc_id", carid);
			new d_string[128];
			format(d_string, sizeof(d_string), ""c_white"Введите цену продажи транспорта:\n\n"c_grey"* Стоимость услуг авторынка составляет "c_green"%d$",
			b_info[GetPVarInt(playerid, "p_biz_id")-1][b_cost]);
			show_dialog(playerid, d_carmarket_price, DIALOG_STYLE_INPUT, ""c_server"Авторынок", d_string, "Принять", "Назад");
		}

		case d_carmarket_price:
		{
			if(!response)
			{
				if(Iter_Count(player_vehicles[playerid]) == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас нет транспорта.");
				new dialog_str[246],
					line_str[78];

				strcat(dialog_str, ""c_server"Выберите транспорт для продажи:\n");
				foreach(new veh_id:player_vehicles[playerid])
				{
					format(line_str, 78, ""c_grey"-"c_white"%s\t"c_grey"%s\n", vehicle_name[GetVehicleModel(veh_id)-400], veh_info[veh_id -1][v_plate]);
					strcat(dialog_str, line_str);
				}
				show_dialog(playerid, d_carmarket, DIALOG_STYLE_TABLIST, ""c_server"Авторынок", dialog_str, "Выбрать", "Закрыть");
				return 1;
			}
			new b = GetPVarInt(playerid, "p_biz_id")-1;
			if(PlayerInfo[playerid][money] < b_info[b][b_cost])
			{
				new d_string[128];
				format(d_string, sizeof(d_string), ""c_white"Введите цену продажи транспорта:\n\n"c_grey"* Стоимость услуг авторынка составляет "c_green"%d$",
				b_info[b][b_cost]);
				show_dialog(playerid, d_carmarket_price, DIALOG_STYLE_INPUT, ""c_server"Авторынок", d_string, "Принять", "Назад");
				return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас недостаточно средств.");
			}
			new price = strval(inputtext);
			if(price <= 0 || price >= 5000000)
			{
				new d_string[128];
				format(d_string, sizeof(d_string), ""c_white"Введите цену продажи транспорта:\n\n"c_grey"* Стоимость услуг авторынка составляет "c_green"%d$",
				b_info[b][b_cost]);
				show_dialog(playerid, d_carmarket_price, DIALOG_STYLE_INPUT, ""c_server"Авторынок", d_string, "Принять", "Назад");
				return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Цена должна составлять сумму от 1$ до 5.000.000$.");
			}


			new current_slot = -1,
				carmarket_id;

			switch(b_info[b][b_id])
			{
				case 8:
				{
					carmarket_id = 0;
				}
				case 9:
				{
					carmarket_id = 1;
				}
				case 10:
				{
					carmarket_id = 2;
				}
			}

			for(new i = 0; i < CAR_MARKET_SLOTS; i ++)
			{
				if(car_market_slotes_toggled[carmarket_id][i] == true) continue;
				current_slot = i;
				break;
			}
			if(current_slot == -1) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"На авторынке нет свободных мест для транспорта.");


			new vehicle_id = GetPVarInt(playerid, "sc_id");

			if(v_plane(GetVehicleModel(vehicle_id)) || v_boat(GetVehicleModel(vehicle_id)))
			{
				if(Iter_Count(player_vehicles[playerid]) == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас нет транспорта.");
				new dialog_str[246],
					line_str[78];

				strcat(dialog_str, ""c_server"Выберите транспорт для продажи:\n");
				foreach(new veh_id:player_vehicles[playerid])
				{
					format(line_str, 78, ""c_grey"-"c_white"%s\t"c_grey"%s\n", vehicle_name[GetVehicleModel(veh_id)-400], veh_info[veh_id -1][v_plate]);
					strcat(dialog_str, line_str);
				}
				show_dialog(playerid, d_carmarket, DIALOG_STYLE_TABLIST, ""c_server"Авторынок", dialog_str, "Выбрать", "Закрыть");


				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете выставить на авторынок данное транспортное средство.");
			}
			Iter_Remove(player_vehicles[playerid], vehicle_id);
			give_money(playerid, -b_info[b][b_cost]);
			insert_money_log(playerid, INVALID_PLAYER_ID, -b_info[b][b_cost], "Авторынок");

			veh_info[vehicle_id -1][v_sell_price] = price;
			veh_info[vehicle_id -1][v_sell_slot] = current_slot;
			veh_info[vehicle_id -1][v_sell_carmarket] = carmarket_id;

			car_market_slotes_toggled[carmarket_id][current_slot] = true;


			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Машина успешно выставлена на продажу.");

			new query_string[136];
			format(query_string, sizeof(query_string), "UPDATE `users_vehicles` SET `v_sell_slot`='%d',`v_sell_price`='%d',`v_sell_carmarket`='%d' WHERE `v_id` = '%d'",
			veh_info[vehicle_id -1][v_sell_slot],
			veh_info[vehicle_id -1][v_sell_price],
			veh_info[vehicle_id -1][v_sell_carmarket],
			veh_info[vehicle_id -1][v_id]);
			mysql_tquery(sql_connection, query_string);
			format(query_string, sizeof(query_string),"SELECT * FROM `users_vehicles` WHERE `v_id` = '%d' LIMIT 1",
			veh_info[vehicle_id -1][v_id]);
			mysql_tquery(sql_connection, query_string, "users_vehicles_loading");

			DestroyVehicle(vehicle_id);

		}
		case d_carmarket_buy:
		{
			new veh_id = GetPlayerVehicleID(playerid);
			if(!response)
			{
				RemovePlayerFromVehicle(playerid);
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
				if(engine==1) SetVehicleParamsEx(veh_id,VEHICLE_PARAMS_OFF,false,false,false,false,false,objective);
				return 1;
			}
			if(veh_id == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы покинули транспортное средство.");
			new _text_string[128];
			if(veh_info[veh_id -1][v_owner] == PlayerInfo[playerid][id])
			{
				format(_text_string, sizeof(_text_string), "UPDATE `users_vehicles` SET `v_sell_slot`='0',`v_sell_price`='0',`v_sell_carmarket`='0' WHERE `v_id` = '%d'", veh_info[veh_id -1][v_id]);
				mysql_tquery(sql_connection, _text_string);
				Iter_Add(player_vehicles[playerid], veh_id);

				car_market_slotes_toggled[veh_info[veh_id -1][v_sell_carmarket]][veh_info[veh_id -1][v_sell_slot]] = false;
				veh_info[veh_id -1][v_sell_price] = 0;
				veh_info[veh_id -1][v_sell_slot] = 0;
				veh_info[veh_id -1][v_sell_carmarket] = 0;
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Транспорт снят с продажи.");

				speedometr_status(playerid, true);
				speed_timer[playerid] = SetTimerEx("UpdatePlayerSpeedometr", 200, 1, "d", playerid);
				SendClientMessage(playerid, col_white, "Чтобы завести автомобиль, нажмите \"CTRL\"");

				if(IsValidDynamic3DTextLabel(veh_info[veh_id -1][v_sell_text]))
				{
					DestroyDynamic3DTextLabel(veh_info[veh_id -1][v_sell_text]);
					veh_info[veh_id -1][v_sell_text] = Text3D:INVALID_3DTEXT_ID;
				}
				return 1;

			}
			if(veh_info[veh_id -1][v_sell_price] < 1)
			{
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Данный транспорт уже не продаётся.");

				RemovePlayerFromVehicle(playerid);
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
				if(engine==1) SetVehicleParamsEx(veh_id,VEHICLE_PARAMS_OFF,false,false,false,false,false,objective);
				return 1;
			}
			if(PlayerInfo[playerid][money] < veh_info[veh_id -1][v_sell_price])
			{
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств для приобретения данного транспорта.");

				RemovePlayerFromVehicle(playerid);
				new engine, lights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
				if(engine==1) SetVehicleParamsEx(veh_id,VEHICLE_PARAMS_OFF,false,false,false,false,false,objective);
				return 1;
			}
			if(get_player_veh_count(playerid)>= PlayerInfo[playerid][max_veh]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Для начала нужно продать одно из имещихся транспортных средств.");


			format(_text_string, sizeof(_text_string), "UPDATE `users_vehicles` SET `v_owner`='%d',`v_sell_price` = '0' WHERE `v_id` = '%d'", PlayerInfo[playerid][id], veh_info[veh_id -1][v_id]);
			mysql_tquery(sql_connection, _text_string);


			format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы успешно приобрели "c_green"%s "c_white"за "c_green"%d$", vehicle_name[GetVehicleModel(veh_id)-400], veh_info[veh_id -1][v_sell_price]);
			SendClientMessage(playerid, col_white, _text_string);

			new targetid = INVALID_PLAYER_ID;
			foreach(new i: logged_players)
			{
				if(PlayerInfo[i][id] != veh_info[veh_id -1][v_owner]) continue;
				targetid = i;
			}
			veh_info[veh_id -1][v_owner] = PlayerInfo[playerid][id];
			give_money(playerid, -veh_info[veh_id -1][v_sell_price]);
			insert_money_log(playerid, INVALID_PLAYER_ID, -veh_info[veh_id -1][v_sell_price], "покупка БУ транспорта");
			if(IsValidDynamic3DTextLabel(veh_info[veh_id -1][v_sell_text]))
			{
				DestroyDynamic3DTextLabel(veh_info[veh_id -1][v_sell_text]);
				veh_info[veh_id -1][v_sell_text] = Text3D:INVALID_3DTEXT_ID;
			}
			veh_info[veh_id -1][v_fuel] = 60.0;
			car_market_slotes_toggled[veh_info[veh_id -1][v_sell_carmarket]][veh_info[veh_id -1][v_sell_slot]] = false;

			if(targetid != INVALID_PLAYER_ID)
			{
				give_money(targetid, veh_info[veh_id -1][v_sell_price]);
				format(_text_string, sizeof(_text_string), ""c_green"* "c_white"%s приобрел Ваш "c_green"%s "c_white"за "c_green"%d$", PlayerInfo[playerid][name], vehicle_name[GetVehicleModel(veh_id)-400], veh_info[veh_id -1][v_sell_price]);
				SendClientMessage(targetid, col_white, _text_string);
				insert_money_log(targetid, INVALID_PLAYER_ID, veh_info[veh_id -1][v_sell_price], "продажа БУ транспорта");
			}
			else
			{
				format(_text_string, sizeof(_text_string), "UPDATE `users` SET `u_money`=`u_money`+'%d' WHERE `u_id` = '%d'",veh_info[veh_id -1][v_sell_price], veh_info[veh_id -1][v_owner]);
				mysql_tquery(sql_connection, _text_string);
			}
			veh_info[veh_id -1][v_sell_price] = 0;
			veh_info[veh_id -1][v_sell_slot] = 0;
			veh_info[veh_id -1][v_sell_carmarket] = 0;
			Iter_Add(player_vehicles[playerid], veh_id);
			speedometr_status(playerid, true);
			speed_timer[playerid] = SetTimerEx("UpdatePlayerSpeedometr", 200, 1, "d", playerid);
			SendClientMessage(playerid, col_white, "Чтобы завести автомобиль, нажмите \"CTRL\"");

		}
		case d_atm:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					show_dialog(playerid, d_main_atm, DIALOG_STYLE_LIST, ""c_server"Основной счёт", "Информация о счете\nСнять деньги", "Выбрать", "Назад");
				}
				case 1:
				{
					show_dialog(playerid, d_atm_phone, DIALOG_STYLE_INPUT, ""c_server"Баланс телефона", ""c_grey"* Деньги положенные на некорректный номер возврату не подлежат.\n\n"c_white"Введите номер телефона, который желаете пополнить:", "Далее", "Назад");
				}
				case 2:
				{
					new d_string[148];
					format(d_string, sizeof(d_string), ""c_grey"Ваша задолженность по налогам составляет "c_server"%d$\n\n"c_white"Введите сумму, которую желаете внести в счёт уплаты налогов:",
					PlayerInfo[playerid][tax]);
					show_dialog(playerid, d_atm_bills, DIALOG_STYLE_INPUT, ""c_server"Оплата налогов", d_string, "Принять", "Назад");
				}
				case 3:
				{
					SetPVarInt(playerid, "ticket_list_page", 1);
					new query_string[60];
					format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
					mysql_tquery(sql_connection, query_string, "ticket_list_callback", "i", playerid);
				}
			}

		}
		case d_atm_bills:
		{
			if(!response) return show_dialog(playerid, d_atm, DIALOG_STYLE_LIST, ""c_server"Банкомат", "Управление картой\nПополнить баланс телефона\nОплата налогов\nОплата штрафов", "Далее", "Закрыть");
			new tax_count = strval(inputtext);
			if(tax_count < 1 || tax_count > 25000)
			{
				new d_string[268];
				format(d_string, sizeof(d_string), ""c_orange_red"* Сумма платежа не может быть меньше 1$ и более 25.000$\n\n"c_grey"Ваша задолженность по налогам составляет "c_server"%d$\n\n"c_white"Введите сумму, которую желаете внести в счёт уплаты налогов:",
				PlayerInfo[playerid][tax]);
				show_dialog(playerid, d_atm_bills, DIALOG_STYLE_INPUT, ""c_server"Оплата налогов", d_string, "Принять", "Назад");
				return 1;
			}
			if(PlayerInfo[playerid][money] < tax_count)
			{
				new d_string[268];
				format(d_string, sizeof(d_string), ""c_orange_red"* У Вас недостаточно средств для платежа.\n\n"c_grey"Ваша задолженность по налогам составляет "c_server"%d$\n\n"c_white"Введите сумму, которую желаете внести в счёт уплаты налогов:",
				PlayerInfo[playerid][tax]);
				show_dialog(playerid, d_atm_bills, DIALOG_STYLE_INPUT, ""c_server"Оплата налогов", d_string, "Принять", "Назад");
				return 1;
			}
			if(PlayerInfo[playerid][tax] < tax_count)
			{
				new d_string[268];
				format(d_string, sizeof(d_string), ""c_orange_red"* Вносимая сумма превышает сумму долга.\n\n"c_grey"Ваша задолженность по налогам составляет "c_server"%d$\n\n"c_white"Введите сумму, которую желаете внести в счёт уплаты налогов:",
				PlayerInfo[playerid][tax]);
				show_dialog(playerid, d_atm_bills, DIALOG_STYLE_INPUT, ""c_server"Оплата налогов", d_string, "Принять", "Назад");
				return 1;
			}
			PlayerInfo[playerid][tax] -= tax_count;

			update_int_sql(playerid, "u_tax", PlayerInfo[playerid][tax]);
			give_money(playerid, -tax_count);
			insert_money_log(playerid, INVALID_PLAYER_ID, -tax_count, "оплата налогов");
			new t_string[128];
			format(t_string, sizeof(t_string), ""c_green"* "c_white"Вы внесли "c_green"%d$"c_white" в счёт уплаты налогов. На данный момент задолженность составляет "c_green"%d$",
			tax_count, PlayerInfo[playerid][tax]);
			SendClientMessage(playerid, col_white, t_string);

			f_info[10][f_money] += tax_count;
			mysql_format(sql_connection, t_string, sizeof(t_string), "UPDATE `fractions` SET `f_money` = '%d' WHERE `f_id` = '11' LIMIT 1",
			f_info[10][f_money]);
			mysql_tquery(sql_connection, t_string, "", "");

			show_dialog(playerid, d_atm, DIALOG_STYLE_LIST, ""c_server"Банкомат", "Управление картой\nПополнить баланс телефона\nОплата налогов\nОплата штрафов", "Далее", "Закрыть");
		}
		case d_ticket_info:
		{
			if(!response)
			{
				SetPVarInt(playerid, "ticket_list_page", 1);
				new query_string[72];
				format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
				mysql_tquery(sql_connection, query_string, "ticket_list_callback", "i", playerid);
				return 1;
			}
			if(listitem == 0)
			{
				new pvar_string[8],
					ticket_id,
					query_string[108];

				format(pvar_string, sizeof(pvar_string), "tlc_%d", GetPVarInt(playerid, "ticket_listitem"));
				ticket_id = GetPVarInt(playerid, pvar_string);
				mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `t_count`,`t_reason`,`t_date`,`t_cop_name` FROM `users_tickets` WHERE `t_id` = '%d' LIMIT 1", ticket_id);
				mysql_tquery(sql_connection, query_string, "callback_ticket_info", "i", playerid);
				return 1;
			}
			else if(listitem == 1)
			{
				new pvar_string[8],
					ticket_id,
					query_string[78];

				format(pvar_string, sizeof(pvar_string), "tlc_%d", GetPVarInt(playerid, "ticket_listitem"));
				ticket_id = GetPVarInt(playerid, pvar_string);
				mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `t_count` FROM `users_tickets` WHERE `t_id` = '%d' LIMIT 1", ticket_id);
				mysql_tquery(sql_connection, query_string, "callback_ticket_payment", "i", playerid);
				return 1;
			}
		}
		case d_ticket_list:
		{
			if(!response)
			{
				for(new i = 0; i < 10; i ++)
				{
					new pvar_string[8];
					format(pvar_string, sizeof(pvar_string), "tlc_%d", i);
					DeletePVar(playerid, pvar_string);
				}
				DeletePVar(playerid, "ticket_list_page");
				DeletePVar(playerid, "ticket_list_rows");
				show_dialog(playerid, d_atm, DIALOG_STYLE_LIST, ""c_server"Банкомат", "Управление картой\nПополнить баланс телефона\nОплата налогов\nОплата штрафов", "Далее", "Закрыть");
				return 1;
			}
			if(listitem == 0)
			{
				new page_id = GetPVarInt(playerid, "ticket_list_page")-1;
				if(page_id == 0)
				{
					new query_string[60];
					format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
					mysql_tquery(sql_connection, query_string, "ticket_list_callback", "i", playerid);
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы находитесь на первой странице списка штрафов!");
					return 1;

				}
				SetPVarInt(playerid, "ticket_list_page", page_id);
				new query_string[60];
				format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
				mysql_tquery(sql_connection, query_string, "ticket_list_callback", "i", playerid);

			}
			else if(listitem == 1)
			{
				new page_id = GetPVarInt(playerid, "ticket_list_page")-1;
				if((page_id + 1)* 10 >= GetPVarInt(playerid, "ticket_list_rows"))
				{
					new query_string[60];
					format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
					mysql_tquery(sql_connection, query_string, "ticket_list_callback", "i", playerid);
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы находитесь на последней странице списка штрафов!");
					return 1;
				}
				SetPVarInt(playerid, "ticket_list_page", page_id + 2);
				new query_string[60];
				format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
				mysql_tquery(sql_connection, query_string, "ticket_list_callback", "i", playerid);
			}
			else
			{
				SetPVarInt(playerid, "ticket_listitem", listitem -2);
				show_dialog(playerid, d_ticket_info, DIALOG_STYLE_LIST, ""c_server"Штраф", "Информация о штрафе\nОплатить штраф", "Выбрать", "Назад");
			}
			return 1;
		}
		case d_ticket_stats:
		{
			show_dialog(playerid, d_ticket_info, DIALOG_STYLE_LIST, ""c_server"Штраф", "Информация о штрафе\nОплатить штраф", "Выбрать", "Назад");
			return 1;
		}

		case d_atm_phone:
		{
			if(!response) return show_dialog(playerid, d_atm, DIALOG_STYLE_LIST, ""c_server"Банкомат", "Управление картой\nПополнить баланс телефона\nОплата налогов\nОплата штрафов", "Далее", "Закрыть");
//			if(!isNumeric(inputtext)) return show_dialog(playerid, d_atm_phone, DIALOG_STYLE_INPUT, ""c_server"Баланс телефона", ""c_grey"* Деньги положенные на некорректный номер возврату не подлежат.\n\n"c_white"Введите номер телефона, который желаете пополнить:", "Далее", "Назад");
			if(strval(inputtext)< 100 || strval(inputtext)> 9999999) return show_dialog(playerid, d_atm_phone, DIALOG_STYLE_INPUT, ""c_server"Баланс телефона", ""c_grey"* Деньги положенные на некорректный номер возврату не подлежат.\n\n"c_white"Введите номер телефона, который желаете пополнить:", "Далее", "Назад");
			SetPVarInt(playerid, "atm_phone", strval(inputtext));
			new d_string[112];
			format(d_string, sizeof(d_string), ""c_white"Введите сумму, на которую желаете пополнить баланс телефона "c_green"%d"c_white":",strval(inputtext));
			show_dialog(playerid, d_atm_phone_money, DIALOG_STYLE_INPUT, ""c_server"Баланс телефона", d_string, "Далее", "Назад");

		}
		case d_atm_phone_money:
		{
			if(!response) return show_dialog(playerid, d_atm_phone, DIALOG_STYLE_INPUT, ""c_server"Баланс телефона", ""c_grey"* Деньги положенные на некорректный номер возврату не подлежат.\n\n"c_white"Введите номер телефона, который желаете пополнить:", "Далее", "Назад");

			if(strval(inputtext)< 1 || strval(inputtext)> 10000)
			{
				new d_string[112];
				format(d_string, sizeof(d_string), ""c_white"Введите сумму, на которую желаете пополнить баланс телефона "c_green"%d"c_white":", GetPVarInt(playerid, "atm_phone"));
				show_dialog(playerid, d_atm_phone_money, DIALOG_STYLE_INPUT, ""c_server"Баланс телефона", d_string, "Далее", "Назад");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Сумма не может быть меньше "c_orange_red"1$"c_grey" или больше "c_orange_red"10000$"c_grey".");
				return 1;
			}
			if(strval(inputtext)> PlayerInfo[playerid][money])
			{
				new d_string[112];
				format(d_string, sizeof(d_string), ""c_white"Введите сумму, на которую желаете пополнить баланс телефона "c_green"%d"c_white":", GetPVarInt(playerid, "atm_phone"));
				show_dialog(playerid, d_atm_phone_money, DIALOG_STYLE_INPUT, ""c_server"Баланс телефона", d_string, "Далее", "Назад");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств для пополнения баланса телефона.");
				return 1;
			}
			new phone_number = GetPVarInt(playerid, "atm_phone");
			new d_string[112];
			format(d_string, sizeof(d_string), ""c_green"* "c_white"Вы успешно пополнили номер "c_green"%d"c_white" на сумму "c_green"%d$"c_white".", phone_number, strval(inputtext));
			SendClientMessage(playerid,  col_white, d_string);

			give_money(playerid, -strval(inputtext));
			insert_money_log(playerid, INVALID_PLAYER_ID, -strval(inputtext), "пополнение телефона");

			DeletePVar(playerid, "atm_phone");
			show_dialog(playerid, d_atm, DIALOG_STYLE_LIST, ""c_server"Банкомат", "Управление картой\nПополнить баланс телефона\nОплата налогов\nОплата штрафов", "Далее", "Закрыть");

			if(PlayerInfo[playerid][number] == phone_number)
			{
				PlayerInfo[playerid][phone_balance] += strval(inputtext);
				format(d_string, sizeof(d_string), "SMS: Ваш баланс пополнен на сумму %d$. Баланс: %d$ | Отправитель: SA BANK", strval(inputtext), PlayerInfo[playerid][phone_balance]);
				SendClientMessage(playerid,  col_yellow, d_string);
				return 1;
			}
			else
			{
				foreach(new i: logged_players)
				{
					if(PlayerInfo[i][number] == phone_number)
					{
						PlayerInfo[i][phone_balance] += strval(inputtext);
						format(d_string, sizeof(d_string), "SMS: Ваш баланс пополнен на сумму %d$. Баланс: %d$ | Отправитель: SA BANK", strval(inputtext), PlayerInfo[i][phone_balance]);
						SendClientMessage(i,  col_yellow, d_string);
						return 1;
					}
				}
			}
			format(d_string, sizeof(d_string), "UPDATE `users` SET `u_phohe_balance`=`u_phohe_balance`+'%d' WHERE `u_number` = '%d'",strval(inputtext), phone_number);
			mysql_tquery(sql_connection, d_string);
		}
		case d_main_atm:
		{
			if(!response) return show_dialog(playerid, d_atm, DIALOG_STYLE_LIST, ""c_server"Банкомат", "Управление картой\nПополнить баланс телефона\nОплата налогов\nОплата штрафов", "Далее", "Закрыть");
			switch(listitem)
			{
				case 0:
				{
					new dialog_string[78];
					format(dialog_string, sizeof(dialog_string), ""c_white"Деньги на вашем счету: {4CC238}%d$", PlayerInfo[playerid][bank]);
					show_dialog(playerid, d_atm_info, DIALOG_STYLE_MSGBOX, ""c_server"Информация о счете", dialog_string, "Назад", "Закрыть");
				}
				case 1:
				{
					show_dialog(playerid, d_atm_take, DIALOG_STYLE_INPUT, ""c_server"Снять деньги", ""c_white"Введите сумму, которую хотите снять со счета:", "Принять", "Назад");
				}
			}
		}
		case d_atm_info:
		{
			if(response) return show_dialog(playerid, d_main_atm, DIALOG_STYLE_LIST, ""c_server"Основной счёт", "Информация о счете\nСнять деньги", "Выбрать", "Назад");
		}
		case d_atm_take:
		{
			if(!response) return show_dialog(playerid, d_main_atm, DIALOG_STYLE_LIST, ""c_server"Основной счёт", "Информация о счете\nСнять деньги", "Выбрать", "Назад");
			if(strval(inputtext)< 1 || strval(inputtext)> 100000) return show_dialog(playerid, d_atm_take, DIALOG_STYLE_INPUT, ""c_server"Снять деньги", ""c_white"Введите сумму, которую хотите снять со счета:", "Принять", "Назад"),
													SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Сумма не может быть меньше "c_orange_red"1$"c_grey" или больше "c_orange_red"100.000$"c_grey".");
			if(PlayerInfo[playerid][bank] < strval(inputtext)) return show_dialog(playerid, d_atm_take, DIALOG_STYLE_INPUT, ""c_server"Снять деньги", ""c_white"Введите сумму, которую хотите снять со счета:", "Принять", "Назад"),
																				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"На вашем счету недостаточно средств.");

			give_money(playerid, strval(inputtext));
			PlayerInfo[playerid][bank] -= strval(inputtext);
			update_int_sql(playerid, "u_bank", PlayerInfo[playerid][bank]);

			new dialog_string[68];
			format(dialog_string, sizeof(dialog_string), ""c_green"* "c_white"Вы сняли с основного счета "c_green"%d$", strval(inputtext));
			SendClientMessage(playerid, col_white, dialog_string);
			show_dialog(playerid, d_main_atm, DIALOG_STYLE_LIST, ""c_server"Основной счёт", "Информация о счете\nСнять деньги", "Выбрать", "Назад");
		}
		case d_gz_sell_accept:
		{
			if(seller_id[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Продавец покинул игру.");
			if(!response)
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"Игрок отказался от покупки территории.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				sell_item[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			if(gz_info[sell_item[seller_id[playerid]]][gz_time] > 0)
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"Сейчас ведётся война за данную территорию.");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Сейчас ведётся война за данную территорию.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				sell_item[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			if(PlayerInfo[playerid][money] < sell_price[seller_id[playerid]])
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"У игрока недостаточно денег для приобретения.");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно денег для приобретения.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				sell_item[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			if(PlayerInfo[seller_id[playerid]][member] != gz_info[sell_item[seller_id[playerid]]][gz_owner])
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"Данная территория уже не принадлежит Вам.");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Данная территория уже не принадлежит игроку.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				sell_item[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			gz_info[sell_item[seller_id[playerid]]][gz_owner] = PlayerInfo[playerid][member];

			new _text_string[128];
			format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы купили территорию у "c_green"%s"c_white" за "c_green"%d$"c_white".",PlayerInfo[seller_id[playerid]][name], sell_price[seller_id[playerid]]);
			SendClientMessage(playerid, col_white, _text_string);
			format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы продали территорию "c_green"%s"c_white" за "c_green"%d$"c_white".", PlayerInfo[playerid][name], sell_price[seller_id[playerid]]);
			SendClientMessage(seller_id[playerid], col_white, _text_string);

			give_money(playerid,-sell_price[seller_id[playerid]]);
			give_money(seller_id[playerid], sell_price[seller_id[playerid]]);
			insert_money_log(seller_id[playerid], playerid, sell_price[seller_id[playerid]], "sellzone");

			GangZoneStopFlashForAll(gz_info[sell_item[seller_id[playerid]]][gz_created]);
			GangZoneHideForAll(gz_info[sell_item[seller_id[playerid]]][gz_created]);
			GangZoneShowForAll(gz_info[sell_item[seller_id[playerid]]][gz_created], GetGangZoneColor(gz_info[sell_item[seller_id[playerid]]][gz_owner]));
			SaveGangZone(sell_item[seller_id[playerid]]);


			buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
			sell_price[seller_id[playerid]] = -1;
			sell_item[seller_id[playerid]] = -1;
			seller_id[playerid] = INVALID_PLAYER_ID;


		}
		case d_makegun:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][crim_guns] < mg_info[listitem][mg_guns])
			{
			    new _text_string[108];
				format(_text_string, 108, ""c_orange_red"* "c_grey"Вам нужно "c_orange_red"%d"c_grey" ед.оружия для сборки этого оружия.", mg_info[listitem][mg_guns]);
			    SendClientMessage(playerid, col_gray, _text_string);
			    return 1;
			}
            show_dialog(playerid, d_makegun_, DIALOG_STYLE_INPUT, ""c_server"Сборка оружия",""c_white"Сколько патронов вы хотите использовать для этого оружия?", "Собрать", "Отмена");
			SetPVarInt(playerid, "makegun_listitem", listitem);

		}
		case d_makegun_:
		{
			if(!response)
			{
				global_string = ""c_white"Название оружия\t"c_white"Количество ед.оружия\n";
				for(new i = 0; i < 7; i++)
				{
					format(global_string, 1000, "%s%s\t%i\n", global_string, mg_info[i][mg_name], mg_info[i][mg_guns]);
				}
				show_dialog(playerid, d_makegun, DIALOG_STYLE_TABLIST_HEADERS, ""c_server"Сборка оружия", global_string, "Выбрать", "Закрыть");
				DeletePVar(playerid, "makegun_listitem");
				return 1;
			}

   			new ammos = strval(inputtext);
   			new listitem_gun = GetPVarInt(playerid, "makegun_listitem");
			if(ammos < 1 || ammos > 500)
			{
				SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Можно сделать от "c_orange_red"1 "c_grey"до "c_orange_red"500"c_grey".");
				return show_dialog(playerid, d_makegun_, DIALOG_STYLE_INPUT, ""c_server"Сборка оружия",""c_white"Сколько патронов вы хотите использовать для этого оружия?", "Собрать", "Отмена");
			}
			if(PlayerInfo[playerid][crim_ammo] < ammos) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У вас нет столько патронов.");

		    give_weapon(playerid, mg_info[listitem_gun][mg_gunid], ammos);

			me_action(playerid, "сделал(-а) оружие из деталей");
			SetPlayerChatBubble(playerid, "собрал оружие", col_light_purple, 30.0, 10000);

            PlayerInfo[playerid][crim_ammo] -= ammos;
            if(GetPlayerWeapon(playerid)!= mg_info[listitem_gun][mg_gunid])
            {
				PlayerInfo[playerid][crim_guns] -= mg_info[listitem_gun][mg_guns];
			}
			update_int_sql(playerid, "u_ammo", PlayerInfo[playerid][crim_ammo]);
			update_int_sql(playerid, "u_guns", PlayerInfo[playerid][crim_guns]);


			DeletePVar(playerid, "makegun_listitem");
		    return 1;
		}
		case d_gun_sell_accept:
		{
			if(seller_id[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Продавец покинул игру.");
			if(!response)
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"Игрок отказался от покупки оружия.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				sell_item[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}




			if(PlayerInfo[playerid][money] < sell_price[seller_id[playerid]])
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"У игрока недостаточно денег для приобретения.");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно денег для приобретения.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				sell_item[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			new weapon_id = GetPVarInt(seller_id[playerid], "sell_gunid");
			new weapon_slot = get_weapon_slot(weapon_id);

			if(p_t_info[seller_id[playerid]][p_gun_ammo][weapon_slot] < sell_item[seller_id[playerid]])
			{
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У игрока нет такого количества патронов.");
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"У Вас нет такого количества патронов.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				sell_item[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			if(p_t_info[seller_id[playerid]][p_gun_slot][weapon_slot] != weapon_id)
			{
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У игрока уже нет этого оружия.");
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"У Вас уже нет оружия, которое Вы хотели продать.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				sell_item[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}


			give_money(playerid, -sell_price[seller_id[playerid]]);
			give_money(seller_id[playerid], sell_price[seller_id[playerid]]);

			insert_money_log(seller_id[playerid], playerid, sell_price[seller_id[playerid]], "sellgun");

			give_weapon(playerid, weapon_id, sell_item[seller_id[playerid]]);
			give_weapon(seller_id[playerid], weapon_id, -sell_item[seller_id[playerid]]);
			new gun_name[24];
			GetWeaponName(weapon_id, gun_name, sizeof(gun_name));


			new string[82];
			format(string, sizeof(string),""c_green"* %s "c_white"купил %s.", PlayerInfo[playerid][name], gun_name);
			SendClientMessage(seller_id[playerid], col_white, string);
			format(string, sizeof(string),""c_green"* "c_white"Вы купили %s у "c_green"%s", gun_name, PlayerInfo[seller_id[playerid]][name]);
			SendClientMessage(playerid, col_white, string);
			format(string, sizeof(string),"передал(-а) оружие %s.", PlayerInfo[playerid][name]);
			me_action(seller_id[playerid], string);

			buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
			sell_price[seller_id[playerid]] = -1;
			sell_item[seller_id[playerid]] = -1;
			seller_id[playerid] = INVALID_PLAYER_ID;
			DeletePVar(seller_id[playerid], "sell_gunid");

			format(string, 77, "UPDATE `server_info` SET `serv_nelegal_gun` = `serv_nelegal_gun` + 1");
			mysql_query(sql_connection, string);

			gunrow++;
		}
		case d_drugs_sell_accept:
		{
			if(seller_id[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Продавец покинул игру.");
			if(!response)
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"Игрок отказался от покупки наркотиков.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				sell_item[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			if(PlayerInfo[playerid][money] < sell_price[seller_id[playerid]])
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"У игрока недостаточно денег для приобретения.");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно денег для приобретения.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				sell_item[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}

			if(PlayerInfo[seller_id[playerid]][drugs] < sell_item[seller_id[playerid]])
			{
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У игрока нет такого количества наркотиков.");
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"У Вас нет такого количества наркотиков.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				sell_item[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			if(PlayerInfo[playerid][drugs] + sell_item[seller_id[playerid]] > 500)
			{
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете унести более "c_orange_red"500 "c_grey"гр. наркотиков.");
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"Игрок не может унести более "c_orange_red"500 "c_grey"гр. наркотиков.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				sell_item[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}


			give_money(playerid, -sell_price[seller_id[playerid]]);
			give_money(seller_id[playerid], sell_price[seller_id[playerid]]);

			insert_money_log(seller_id[playerid], playerid, sell_price[seller_id[playerid]], "selldrugs");

			PlayerInfo[playerid][drugs] += sell_item[seller_id[playerid]];
			PlayerInfo[seller_id[playerid]][drugs] -= sell_item[seller_id[playerid]];

			update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);
			update_int_sql(seller_id[playerid], "u_drugs", PlayerInfo[seller_id[playerid]][drugs]);

			new str[77];
			drugsrow++;
			format(str, 77, "UPDATE `server_info` SET `serv_nelegal_drugs` = `serv_nelegal_drugs` + 1", drugsrow);
			mysql_query(sql_connection, str);

			new string[108];
			format(string, sizeof(string),""c_green"* %s "c_white"купил у Вас "c_green"%d "c_white"гр. наркотиков.", PlayerInfo[playerid][name], sell_item[seller_id[playerid]]);
			SendClientMessage(seller_id[playerid], col_white, string);
			format(string, sizeof(string),""c_green"* "c_white"Вы купили "c_green"%d "c_white"гр. наркотиков у "c_green"%s", sell_item[seller_id[playerid]], PlayerInfo[seller_id[playerid]][name]);
			SendClientMessage(playerid, col_white, string);
			format(string, sizeof(string),"передал(-а) пакетик %s.", PlayerInfo[playerid][name]);
			me_action(seller_id[playerid], string);

			buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
			sell_price[seller_id[playerid]] = -1;
			sell_item[seller_id[playerid]] = -1;
			seller_id[playerid] = INVALID_PLAYER_ID;
			DeletePVar(seller_id[playerid], "sell_gunid");
		}
		case d_dorm:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: show_dialog(playerid, d_drugs_put, DIALOG_STYLE_INPUT,""c_server"Положить наркотики:",""c_white"Введите количество наркотиков, которое желаете положить:","Положить","Назад");
				case 1: show_dialog(playerid, d_ammo_put, DIALOG_STYLE_INPUT,""c_server"Положить патроны:",""c_white"Введите количество патронов, которое желаете положить:","Положить","Назад");
				case 2: show_dialog(playerid, d_guns_put, DIALOG_STYLE_INPUT,""c_server"Положить ед.оружия:",""c_white"Введите количество ед.оружия, которое желаете положить:","Положить","Назад");
				case 3: show_dialog(playerid, d_money_put, DIALOG_STYLE_INPUT,""c_server"Положить деньги:",""c_white"Введите количество денег, которое желаете положить:","Положить","Назад");
				case 4:
				{
					if(f_info[PlayerInfo[playerid][member] -1][f_dorm_status]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Общак закрыт.");
					show_dialog(playerid, d_drugs_get, DIALOG_STYLE_INPUT,""c_server"Взять наркотики:",""c_white"Введите количество наркотиков, которое желаете взять:","Взять","Назад");
				}
				case 5:
				{
					if(f_info[PlayerInfo[playerid][member] -1][f_dorm_status]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Общак закрыт.");
					show_dialog(playerid, d_ammo_get, DIALOG_STYLE_INPUT,""c_server"Взять патроны:",""c_white"Введите количество патронов, которое желаете взять:","Взять","Назад");
				}
				case 6:
				{
					if(f_info[PlayerInfo[playerid][member] -1][f_dorm_status]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Общак закрыт.");
					show_dialog(playerid, d_guns_get, DIALOG_STYLE_INPUT,""c_server"Взять ед.оружия:",""c_white"Введите количество ед.оружия, которое желаете взять:","Взять","Назад");
				}
				case 7:
				{
					if(f_info[PlayerInfo[playerid][member] -1][f_dorm_status]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Общак закрыт.");
					show_dialog(playerid, d_money_get, DIALOG_STYLE_INPUT,""c_server"Взять деньги:",""c_white"Введите количество денег, которое желаете взять:","Взять","Назад");
				}
			}
			return 1;
		}
		case d_drugs_get:
		{
			if(!response) return show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");
			new d_amount = strval(inputtext);

			if(d_amount < 1 || d_amount > 500) return show_dialog(playerid, d_drugs_get,DIALOG_STYLE_INPUT,""c_server"Взять наркотики:",""c_orange_red"* "c_grey"Количество наркотиков должно быть от "c_orange_red"1 гр. "c_grey"до "c_orange_red"500 гр.\n\n"c_white"Введите количество наркотиков, которое желаете взять:","Взять","Назад");
			if(f_info[PlayerInfo[playerid][member] -1][f_drugs] < d_amount) return show_dialog(playerid, d_drugs_get,DIALOG_STYLE_INPUT,""c_server"Взять наркотики:",""c_orange_red"* "c_grey"На складе нет такого количества наркотиков.\n\n"c_white"Введите количество наркотиков, которое желаете взять:","Взять","Назад");
			if(PlayerInfo[playerid][drugs] + d_amount > 500) return show_dialog(playerid, d_drugs_get,DIALOG_STYLE_INPUT,""c_server"Взять наркотики:",""c_orange_red"* "c_grey"Вы не унесете столько наркотиков.\n\n"c_white"Введите количество наркотиков, которое желаете взять:","Взять","Назад");

			f_info[PlayerInfo[playerid][member] -1][f_drugs] -= d_amount;
			PlayerInfo[playerid][drugs] += d_amount;
			update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);

			new query_string[86];
			format(query_string, 86, "UPDATE `fractions` SET `f_drugs` = '%d' WHERE `f_id` = '%d' LIMIT 1",
			f_info[PlayerInfo[playerid][member] -1][f_drugs], PlayerInfo[playerid][member]);
			mysql_tquery(sql_connection, query_string, "", "");

			format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы взяли со склада "c_green"%d гр."c_white" наркотиков.", d_amount);
			SendClientMessage(playerid, col_white, query_string);

			format(query_string, sizeof(query_string), "%s взял со склада %d гр. наркотиков.", PlayerInfo[playerid][name], d_amount);
			foreach(new i: logged_players) if((PlayerInfo[i][member] == PlayerInfo[playerid][member] || is_control_chat {i} == PlayerInfo[playerid][member]) && PlayerInfo[i][settings][0] != 0)SendClientMessage(i, 0x4682B4AA, query_string);

			show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");

			update_gdorm_text(PlayerInfo[playerid][member]);
		}
		case d_ammo_get:
		{
			if(!response) return show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");
			new d_amount = strval(inputtext);

			if(d_amount < 1 || d_amount > 500) return show_dialog(playerid, d_ammo_get,DIALOG_STYLE_INPUT,""c_server"Взять патроны:",""c_orange_red"* "c_grey"Количество патронов должно быть от "c_orange_red"1 пт. "c_grey"до "c_orange_red"500 пт.\n\n"c_white"Введите количество патронов, которое желаете взять:","Взять","Назад");
			if(f_info[PlayerInfo[playerid][member] -1][f_materials] < d_amount) return show_dialog(playerid, d_ammo_get,DIALOG_STYLE_INPUT,""c_server"Взять патроны:",""c_orange_red"* "c_grey"На складе нет такого количества патронов.\n\n"c_white"Введите количество патронов, которое желаете взять:","Взять","Назад");
			if((PlayerInfo[playerid][crim_ammo] + d_amount > 500 && ! PlayerInfo[playerid][enhancement][0]) || PlayerInfo[playerid][crim_ammo] + d_amount > 1000) return show_dialog(playerid, d_ammo_get,DIALOG_STYLE_INPUT,""c_server"Взять патроны:",""c_orange_red"* "c_grey"Вы не унесете столько патронов.\n\n"c_white"Введите количество патронов, которое желаете взять:","Взять","Назад");

			f_info[PlayerInfo[playerid][member] -1][f_materials] -= d_amount;
			PlayerInfo[playerid][crim_ammo] += d_amount;
			update_int_sql(playerid, "u_ammo", PlayerInfo[playerid][crim_ammo]);

			new query_string[86];
			format(query_string, 86, "UPDATE `fractions` SET `f_materials` = '%d' WHERE `f_id` = '%d' LIMIT 1",
			f_info[PlayerInfo[playerid][member] -1][f_materials], PlayerInfo[playerid][member]);
			mysql_tquery(sql_connection, query_string, "", "");

			format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы взяли со склада "c_green"%d пт.", d_amount);
			SendClientMessage(playerid, col_white, query_string);

			format(query_string, sizeof(query_string), "%s взял со склада %d пт.", PlayerInfo[playerid][name], d_amount);
			foreach(new i: logged_players) if((PlayerInfo[i][member] == PlayerInfo[playerid][member] || is_control_chat {i} == PlayerInfo[playerid][member]) && PlayerInfo[i][settings][0] != 0)SendClientMessage(i, 0x4682B4AA, query_string);

			show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");
			update_gdorm_text(PlayerInfo[playerid][member]);
		}
		case d_guns_get:
		{
			if(!response) return show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");
			new d_amount = strval(inputtext);

			if(d_amount < 1 || d_amount > 500) return show_dialog(playerid, d_guns_get,DIALOG_STYLE_INPUT,""c_server"Взять ед.оружия:",""c_orange_red"* "c_grey"Количество ед.оружия должно быть от "c_orange_red"1 ед. "c_grey"до "c_orange_red"500 ед.\n\n"c_white"Введите количество ед.оружия, которое желаете взять:","Взять","Назад");
			if(f_info[PlayerInfo[playerid][member] -1][f_guns] < d_amount) return show_dialog(playerid, d_guns_get,DIALOG_STYLE_INPUT,""c_server"Взять ед.оружия:",""c_orange_red"* "c_grey"На складе нет такого количества ед.оружия.\n\n"c_white"Введите количество ед.оружия, которое желаете взять:","Взять","Назад");
			if((PlayerInfo[playerid][crim_guns] + d_amount > 500 && ! PlayerInfo[playerid][enhancement][0]) || PlayerInfo[playerid][crim_guns] + d_amount > 1000) return show_dialog(playerid, d_guns_get,DIALOG_STYLE_INPUT,""c_server"Взять ед.оружия:",""c_orange_red"* "c_grey"Вы не унесете столько ед.оружия.\n\n"c_white"Введите количество ед.оружия, которое желаете взять:","Взять","Назад");

			f_info[PlayerInfo[playerid][member] -1][f_guns] -= d_amount;
			PlayerInfo[playerid][crim_guns] += d_amount;
			update_int_sql(playerid, "u_guns", PlayerInfo[playerid][crim_guns]);

			new query_string[86];
			format(query_string, 86, "UPDATE `fractions` SET `f_guns` = '%d' WHERE `f_id` = '%d' LIMIT 1",
			f_info[PlayerInfo[playerid][member] -1][f_guns], PlayerInfo[playerid][member]);
			mysql_tquery(sql_connection, query_string, "", "");

			format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы взяли со склада "c_green"%d ед.оружия.", d_amount);
			SendClientMessage(playerid, col_white, query_string);
			format(query_string, sizeof(query_string), "%s взял со склада %d ед.оружия.", PlayerInfo[playerid][name], d_amount);
			foreach(new i: logged_players) if((PlayerInfo[i][member] == PlayerInfo[playerid][member] || is_control_chat {i} == PlayerInfo[playerid][member]) && PlayerInfo[i][settings][0] != 0)SendClientMessage(i, 0x4682B4AA, query_string);
			show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");
			update_gdorm_text(PlayerInfo[playerid][member]);
		}
		case d_money_get:
		{
			if(!response) return show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");
			if(PlayerInfo[playerid][leader] == 0) return show_dialog(playerid, d_money_get,DIALOG_STYLE_INPUT,""c_server"Взять деньги:",""c_orange_red"* "c_grey"Только лидер может брать деньги с общака.\n\n"c_white"Введите количество денег, которое желаете взять:","Взять","Назад");
			new d_amount = strval(inputtext);

			if(d_amount < 1 || d_amount > 100000) return show_dialog(playerid, d_money_get,DIALOG_STYLE_INPUT,""c_server"Взять деньги:",""c_orange_red"* "c_grey"Количество денег должно быть от "c_orange_red"1$ "c_grey"до "c_orange_red"100.000$\n\n"c_white"Введите количество денег, которое желаете взять:","Взять","Назад");
			if(f_info[PlayerInfo[playerid][member] -1][f_money] < d_amount) return show_dialog(playerid, d_money_get,DIALOG_STYLE_INPUT,""c_server"Взять деньги:",""c_orange_red"* "c_grey"На складе нет такого количества денег.\n\n"c_white"Введите количество денег, которое желаете взять:","Взять","Назад");

			if(f_info[PlayerInfo[playerid][member] -1][f_money_limit] + d_amount > 500000)
			{
				new query_string[96];

				format(query_string, sizeof(query_string), ""c_green"* "c_white"Лимит снятия средств в сутки. Остаток: "c_green"%d$", 500000 -f_info[PlayerInfo[playerid][member] -1][f_money_limit]);
				SendClientMessage(playerid, col_white, query_string);

				return 1;
			}
			f_info[PlayerInfo[playerid][member] -1][f_money_limit] += d_amount;
			f_info[PlayerInfo[playerid][member] -1][f_money] -= d_amount;
			give_money(playerid, d_amount);
			insert_money_log(playerid, INVALID_PLAYER_ID, d_amount, "взял со склада");


			new query_string[86];
			format(query_string, 86, "UPDATE `fractions` SET `f_money` = '%d' WHERE `f_id` = '%d' LIMIT 1",
			f_info[PlayerInfo[playerid][member] -1][f_money], PlayerInfo[playerid][member]);
			mysql_tquery(sql_connection, query_string, "", "");

			format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы взяли со склада "c_green"%d$", d_amount);
			SendClientMessage(playerid, col_white, query_string);
			show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");
			update_gdorm_text(PlayerInfo[playerid][member]);
		}











		case d_drugs_put:
		{
			if(!response) return show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");
			new d_amount = strval(inputtext);

			if(d_amount < 1 || d_amount > 500) return show_dialog(playerid, d_drugs_put,DIALOG_STYLE_INPUT,""c_server"Положить наркотики:",""c_orange_red"* "c_grey"Количество наркотиков должно быть от "c_orange_red"1 гр. "c_grey"до "c_orange_red"500 гр.\n\n"c_white"Введите количество наркотиков, которое желаете положить:","Положить","Назад");
			if(PlayerInfo[playerid][drugs] < d_amount) return show_dialog(playerid, d_drugs_put,DIALOG_STYLE_INPUT,""c_server"Положить наркотики:",""c_orange_red"* "c_grey"У Вас нет такого количества наркотиков.\n\n"c_white"Введите количество наркотиков, которое желаете положить:","Положить","Назад");
			if(f_info[PlayerInfo[playerid][member] -1][f_drugs] + d_amount > 10000) return show_dialog(playerid, d_drugs_put,DIALOG_STYLE_INPUT,""c_server"Положить наркотики:",""c_orange_red"* "c_grey"На складе слишком много наркотиков.\n\n"c_white"Введите количество наркотиков, которое желаете положить:","Положить","Назад");

			f_info[PlayerInfo[playerid][member] -1][f_drugs] += d_amount;
			PlayerInfo[playerid][drugs] -= d_amount;
			update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);

			new query_string[86];
			format(query_string, 86, "UPDATE `fractions` SET `f_drugs` = '%d' WHERE `f_id` = '%d' LIMIT 1",
			f_info[PlayerInfo[playerid][member] -1][f_drugs], PlayerInfo[playerid][member]);
			mysql_tquery(sql_connection, query_string, "", "");

			format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы положили на склад "c_green"%d гр."c_white" наркотиков.", d_amount);
			SendClientMessage(playerid, col_white, query_string);
			show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");
			update_gdorm_text(PlayerInfo[playerid][member]);
		}
		case d_ammo_put:
		{
			if(!response) return show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");
			new d_amount = strval(inputtext);

			if(d_amount < 1 || d_amount > 500) return show_dialog(playerid, d_ammo_put,DIALOG_STYLE_INPUT,""c_server"Положить патроны:",""c_orange_red"* "c_grey"Количество патронов должно быть от "c_orange_red"1 пт. "c_grey"до "c_orange_red"500 пт.\n\n"c_white"Введите количество патронов, которое желаете положить:","Положить","Назад");
			if(PlayerInfo[playerid][crim_ammo] < d_amount) return show_dialog(playerid, d_ammo_put,DIALOG_STYLE_INPUT,""c_server"Положить патроны:",""c_orange_red"* "c_grey"У Вас нет такого количества патронов.\n\n"c_white"Введите количество патронов, которое желаете положить:","Положить","Назад");
			if(f_info[PlayerInfo[playerid][member] -1][f_materials] + d_amount > 300000) return show_dialog(playerid, d_ammo_put,DIALOG_STYLE_INPUT,""c_server"Положить патроны:",""c_orange_red"* "c_grey"На складе слишком много патронов.\n\n"c_white"Введите количество патронов, которое желаете положить:","Положить","Назад");

			f_info[PlayerInfo[playerid][member] -1][f_materials] += d_amount;
			PlayerInfo[playerid][crim_ammo] -= d_amount;
			update_int_sql(playerid, "u_ammo", PlayerInfo[playerid][crim_ammo]);

			new query_string[86];
			format(query_string, 86, "UPDATE `fractions` SET `f_materials` = '%d' WHERE `f_id` = '%d' LIMIT 1",
			f_info[PlayerInfo[playerid][member] -1][f_materials], PlayerInfo[playerid][member]);
			mysql_tquery(sql_connection, query_string, "", "");

			format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы положили на склад "c_green"%d пт.", d_amount);
			SendClientMessage(playerid, col_white, query_string);
			show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");
			update_gdorm_text(PlayerInfo[playerid][member]);
		}
		case d_guns_put:
		{
			if(!response) return show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");
			new d_amount = strval(inputtext);

			if(d_amount < 1 || d_amount > 500) return show_dialog(playerid, d_guns_put,DIALOG_STYLE_INPUT,""c_server"Положить ед.оружия:",""c_orange_red"* "c_grey"Количество ед.оружия должно быть от "c_orange_red"1 ед. "c_grey"до "c_orange_red"500 ед.\n\n"c_white"Введите количество ед.оружия, которое желаете положить:","Положить","Назад");
			if(PlayerInfo[playerid][crim_guns] < d_amount) return show_dialog(playerid, d_guns_put,DIALOG_STYLE_INPUT,""c_server"Положить ед.оружия:",""c_orange_red"* "c_grey"У Вас нет такого количества ед.оружия.\n\n"c_white"Введите количество ед.оружия, которое желаете положить:","Положить","Назад");
			if(f_info[PlayerInfo[playerid][member] -1][f_guns] + d_amount > 300000) return show_dialog(playerid, d_guns_put,DIALOG_STYLE_INPUT,""c_server"Положить ед.оружия:",""c_orange_red"* "c_grey"На складе слишком много ед.оружия.\n\n"c_white"Введите количество ед.оружия, которое желаете положить:","Положить","Назад");

			f_info[PlayerInfo[playerid][member] -1][f_materials] += d_amount;
			PlayerInfo[playerid][crim_guns] -= d_amount;
			update_int_sql(playerid, "u_guns", PlayerInfo[playerid][crim_guns]);

			new query_string[86];
			format(query_string, 86, "UPDATE `fractions` SET `f_guns` = '%d' WHERE `f_id` = '%d' LIMIT 1",
			f_info[PlayerInfo[playerid][member] -1][f_guns], PlayerInfo[playerid][member]);
			mysql_tquery(sql_connection, query_string, "", "");

			format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы положили на склад "c_green"%d ед.оружия.", d_amount);
			SendClientMessage(playerid, col_white, query_string);
			show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");
			update_gdorm_text(PlayerInfo[playerid][member]);
		}
		case d_money_put:
		{
			if(!response) return show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");
			new d_amount = strval(inputtext);

			if(d_amount < 1 || d_amount > 1000000) return show_dialog(playerid, d_money_put,DIALOG_STYLE_INPUT,""c_server"Положить деньги:",""c_orange_red"* Количество денег не может быть меньше "c_orange_red"1$ или больше 1.000.000$\n\n"c_white"Введите количество денег, которое желаете положить:","Положить","Назад");
			if(PlayerInfo[playerid][money] < d_amount) return show_dialog(playerid, d_money_put,DIALOG_STYLE_INPUT,""c_server"Положить деньги:",""c_orange_red"* "c_grey"У Вас нет такого количества денег.\n\n"c_white"Введите количество денег, которое желаете положить:","Положить","Назад");


			f_info[PlayerInfo[playerid][member] -1][f_money] += d_amount;
			give_money(playerid, -d_amount);
			insert_money_log(playerid, INVALID_PLAYER_ID, -d_amount, "положил на склад");

			new query_string[86];
			format(query_string, 86, "UPDATE `fractions` SET `f_money` = '%d' WHERE `f_id` = '%d' LIMIT 1",
			f_info[PlayerInfo[playerid][member] -1][f_guns], PlayerInfo[playerid][member]);
			mysql_tquery(sql_connection, query_string, "", "");

			format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы положили на склад "c_green"%d$", d_amount);
			SendClientMessage(playerid, col_white, query_string);
			show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");
			update_gdorm_text(PlayerInfo[playerid][member]);
		}
		case d_lspd_payments:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(Iter_Count(player_vehicles[playerid]) == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет транспорта, который можно зарегистрировать."),
																		   show_dialog(playerid, d_lspd_payments, DIALOG_STYLE_LIST, ""c_server"Платные услуги", "Регистрация транспорта["c_green"250$"c_white"]\nВнесение залога\nИнформация о залоге", "Выбрать", "Закрыть");
					if(PlayerInfo[playerid][money] < 150) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Для регистрации транспорта необходимо "c_orange_red"250$"),
																	 show_dialog(playerid, d_lspd_payments, DIALOG_STYLE_LIST, ""c_server"Платные услуги", "Регистрация транспорта["c_green"250$"c_white"]\nВнесение залога\nИнформация о залоге", "Выбрать", "Закрыть");

					new veh_slot = 0,
						dialog_string[332];
					foreach(new veh_id:player_vehicles[playerid])
					{
						if(!GetString(veh_info[veh_id -1][v_plate], "Transit")) continue;
						new pvar_string[8];
						format(pvar_string, 8, "rv_%d", veh_slot);
						SetPVarInt(playerid, pvar_string, veh_id);
						veh_slot ++;

						strcat(dialog_string, vehicle_name[veh_info[veh_id -1][v_model] -400]);
						strcat(dialog_string, "\n");
					}
					show_dialog(playerid, d_reg_vehicle, DIALOG_STYLE_LIST, ""c_server"Регистрация транспорта", dialog_string, "Выбрать", "Назад");

					if(veh_slot == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Весь Ваш транспорт уже зарегистрирован."),
														show_dialog(playerid, d_lspd_payments, DIALOG_STYLE_LIST, ""c_server"Платные услуги", "Регистрация транспорта["c_green"250$"c_white"]\nВнесение залога\nИнформация о залоге", "Выбрать", "Закрыть");
					SetPVarInt(playerid, "rv_listitems", veh_slot);
				}
				case 1:
				{
					show_dialog(playerid, d_bail, DIALOG_STYLE_INPUT, ""c_server"Выплата залога", ""c_white"Введите ID или имя игрока, за которого хотите внести залог:", "Принять", "Назад");
				}
				case 2:
				{
					show_dialog(playerid, d_bail_info, DIALOG_STYLE_INPUT, ""c_server"Информация о залоге", ""c_white"Введите ID или имя игрока, информацию о залоге которого хотите узнать:", "Принять", "Назад");
				}
			}
			return 1;
		}
		case d_reg_vehicle:
		{
			if(!response)
			{
				for(new i = 0; i < GetPVarInt(playerid, "rv_listitems"); i ++)
				{
					new pvar_string[8];
					format(pvar_string, 8, "rv_%d", i);
					DeletePVar(playerid, pvar_string);
				}
				DeletePVar(playerid, "rv_listitems");
				show_dialog(playerid, d_lspd_payments, DIALOG_STYLE_LIST, ""c_server"Платные услуги", "Регистрация транспорта["c_green"250$"c_white"]\nВнесение залога\nИнформация о залоге", "Выбрать", "Закрыть");
				return 1;
			}
			new pvar_string[8];
			format(pvar_string, 8, "rv_%d", listitem);
			new veh_id = GetPVarInt(playerid, pvar_string);
			give_money(playerid, -150);


			format(veh_info[veh_id -1][v_plate], 32,"%c%d%d%d%c%c", RandomEx(65, 90),random(10), random(10), random(10), RandomEx(65, 90), RandomEx(65, 90));
			new query_string[144];
			SetVehicleNumberPlate(veh_info[veh_id -1][v_vehicle], veh_info[veh_id -1][v_plate]);
			format(query_string, 102,"UPDATE `users_vehicles` SET `v_plate` = '%s' WHERE `v_id` = '%d' LIMIT 1",
			veh_info[veh_id -1][v_plate],
			veh_info[veh_id -1][v_id]);
			mysql_tquery(sql_connection, query_string, "", "");

			for(new i = 0; i < GetPVarInt(playerid, "rv_listitems"); i ++)
			{
				format(pvar_string, 8, "rv_%d", i);
				DeletePVar(playerid, pvar_string);
			}
			DeletePVar(playerid, "rv_listitems");

			format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы успешно зарегистрировали "c_green"%s"c_white". Новый номер транспорта: "c_green"%s",
			vehicle_name[veh_info[veh_id -1][v_model] -400], veh_info[veh_id -1][v_plate]);
			SendClientMessage(playerid, col_white, query_string);
			return 1;
		}
		case d_bail:
		{
			if(!response) return show_dialog(playerid, d_lspd_payments, DIALOG_STYLE_LIST, ""c_server"Платные услуги", "Регистрация транспорта["c_green"250$"c_white"]\nВнесение залога\nИнформация о залоге", "Выбрать", "Закрыть");
			new targetid;
			if(sscanf(inputtext, "u", targetid)) return show_dialog(playerid, d_bail, DIALOG_STYLE_INPUT, ""c_server"Выплата залога", ""c_white"Введите ID или имя игрока, за которого хотите внести залог:", "Принять", "Назад");
			if(!IsPlayerConnected(targetid)|| p_t_info[targetid][p_logged] == false || targetid == playerid) return show_dialog(playerid, d_bail, DIALOG_STYLE_INPUT, ""c_server"Выплата залога", ""c_orange_red"* "c_grey"Данный игрок не найден.\n\n"c_white"Введите ID или имя игрока, за которого хотите внести залог:", "Принять", "Назад");
			if(PlayerInfo[targetid][jailed] == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Данный игрок не находится под заключением."),
														show_dialog(playerid, d_lspd_payments, DIALOG_STYLE_LIST, ""c_server"Платные услуги", "Регистрация транспорта["c_green"250$"c_white"]\nВнесение залога\nИнформация о залоге", "Выбрать", "Закрыть");

			if(PlayerInfo[targetid][bail] == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"За данного игрока нельзя внести залог."),
														show_dialog(playerid, d_lspd_payments, DIALOG_STYLE_LIST, ""c_server"Платные услуги", "Регистрация транспорта["c_green"250$"c_white"]\nВнесение залога\nИнформация о залоге", "Выбрать", "Закрыть");
			if(PlayerInfo[targetid][bail] > PlayerInfo[playerid][money]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас не хватает денег для внесения залога."),
														show_dialog(playerid, d_lspd_payments, DIALOG_STYLE_LIST, ""c_server"Платные услуги", "Регистрация транспорта["c_green"250$"c_white"]\nВнесение залога\nИнформация о залоге", "Выбрать", "Закрыть");


			give_money(playerid, -PlayerInfo[targetid][bail]);


			set_pos(targetid, 1471.1569, -1775.9679, 2342.1479, 90.0, 1, PlayerInfo[targetid][jail]);
			PlayerInfo[targetid][jailed] = 0;

			PlayerInfo[targetid][jail] = 0;
			update_int_sql(targetid, "u_jail", PlayerInfo[targetid][jail]);

			PlayerInfo[targetid][bail] = 0;
			update_int_sql(targetid, "u_bail", PlayerInfo[targetid][bail]);

			new t_string[128];
			format(t_string, sizeof(t_string), ""c_green"* %s "c_white"внёс за Вас залог, теперь Вы свободны.", PlayerInfo[playerid][name]);
			SendClientMessage(targetid, col_white, t_string);
			format(t_string, sizeof(t_string), ""c_green"* "c_white"Вы внесли залог за "c_green"%s"c_white", теперь он свободен.", PlayerInfo[targetid][name]);
			SendClientMessage(playerid, col_white, t_string);
			return 1;

		}
		case d_bail_info:
		{
			if(!response) return show_dialog(playerid, d_lspd_payments, DIALOG_STYLE_LIST, ""c_server"Платные услуги", "Регистрация транспорта["c_green"250$"c_white"]\nВнесение залога\nИнформация о залоге", "Выбрать", "Закрыть");
			new targetid;
			if(sscanf(inputtext, "u", targetid)) return show_dialog(playerid, d_bail, DIALOG_STYLE_INPUT, ""c_server"Выплата залога", ""c_white"Введите ID или имя игрока, за которого хотите внести залог:", "Принять", "Назад");
			if(!IsPlayerConnected(targetid)|| p_t_info[targetid][p_logged] == false || targetid == playerid) return show_dialog(playerid, d_bail, DIALOG_STYLE_INPUT, ""c_server"Выплата залога", ""c_orange_red"* "c_grey"Данный игрок не найден.\n\n"c_white"Введите ID или имя игрока, за которого хотите внести залог:", "Принять", "Назад");
			if(PlayerInfo[targetid][jailed] == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Данный игрок не находится под заключением."),
														show_dialog(playerid, d_lspd_payments, DIALOG_STYLE_LIST, ""c_server"Платные услуги", "Регистрация транспорта["c_green"250$"c_white"]\nВнесение залога\nИнформация о залоге", "Выбрать", "Закрыть");
			if(PlayerInfo[targetid][bail] == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"За данного игрока нельзя внести залог."),
														show_dialog(playerid, d_lspd_payments, DIALOG_STYLE_LIST, ""c_server"Платные услуги", "Регистрация транспорта["c_green"250$"c_white"]\nВнесение залога\nИнформация о залоге", "Выбрать", "Закрыть");
			new dialog_string[126];
			format(dialog_string, sizeof(dialog_string),
			""c_server"\t\tВЫПИСКА ИЗ ДЕЛА\n\n\
			"c_grey"Имя заключенного: "c_server"%s\n\
			"c_grey"Сумма залога: "c_server"%d$",
			PlayerInfo[targetid][name], PlayerInfo[targetid][bail]);

			show_dialog(playerid, d_bail_info_list, DIALOG_STYLE_MSGBOX, ""c_server"Информация о залоге", dialog_string, "Назад", "");
			return 1;
		}
		case d_bail_info_list:
		{
			show_dialog(playerid, d_lspd_payments, DIALOG_STYLE_LIST, ""c_server"Платные услуги", "Регистрация транспорта["c_green"250$"c_white"]\nВнесение залога\nИнформация о залоге", "Выбрать", "Закрыть");
		}
		case d_duty:
		{
			if(!response) return 1;
			if(!is_fraction_duty {playerid})
			{
				is_fraction_duty {playerid} = 1;
				SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы начали рабочий день.");
				SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
				if(radio_player(playerid)) give_weapon(playerid, 43, 50);
			}
			else
			{
				is_fraction_duty {playerid} = 0;
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы завершили рабочий день.");
				SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
				SetPlayerColor(playerid, 0xFFFFFF80); // col_white
				set_player_ammo(playerid, 43, 0);
			}
			return 1;
		}
		case d_armoury:
		{
	        if(!response) return 1;
			if(f_info[PlayerInfo[playerid][member] -1][f_materials] < 75)
			{
				show_dialog(playerid, d_armoury, DIALOG_STYLE_LIST, ""c_server"Оружейная", "Silenced Pistol | Tazer (35 пт.)\nDesert Eagle (35 пт.)\nM4 (150 пт.)\nMP5 (100 пт.)\nShotgun (50 пт.)\nДубинка\nБронежилет\nМаска", "Выбрать", "Закрыть");
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"На складе нет боеприпасов.");
			}
			show_dialog(playerid, d_armoury, DIALOG_STYLE_LIST, ""c_server"Оружейная", "Silenced Pistol | Tazer (35 пт.)\nDesert Eagle (35 пт.)\nM4 (150 пт.)\nMP5 (100 пт.)\nShotgun (50 пт.)\nДубинка\nБронежилет\nМаска", "Выбрать", "Закрыть");
			f_info[PlayerInfo[playerid][member] -1][f_materials] -= 75;
			new query_string[142];
			format(query_string, 86, "UPDATE `fractions` SET `f_materials` = '%d' WHERE `f_id` = '%d' LIMIT 1",
			f_info[PlayerInfo[playerid][member] -1][f_materials], PlayerInfo[playerid][member]);
			mysql_tquery(sql_connection, query_string, "", "");
			switch(listitem)
	        {
	            case 0:
				{
					give_weapon(playerid, 23, 50);
				}
	            case 1:
				{
					give_weapon(playerid, 24, 35);
				}
	            case 2:
				{
					give_weapon(playerid, 31, 150);
				}
				case 3:
				{
					give_weapon(playerid, 29, 100);
				}
	            case 4:
				{
					give_weapon(playerid, 25, 50);
				}
	            case 5:
				{
					give_weapon(playerid, 3, 1);
				}
				case 6:
				{
				    if(p_t_info[playerid][p_armour] > 99) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас уже есть бронежилет");
					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы надели бронежилет.");
			        set_armour(playerid, 100);
				}
				case 7:
				{
					if(PlayerInfo[playerid][mask] >= 3) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете унести более 3 масок.");
					PlayerInfo[playerid][mask] += 1;
					update_int_sql(playerid, "u_mask", PlayerInfo[playerid][mask]);
					format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы взяли маску | "c_green"%d/3"c_white". Введите "c_green"/mask"c_white", чтобы надеть маску.", PlayerInfo[playerid][mask]);
					SendClientMessage(playerid, col_white, query_string);
				}
	        }
		}
		case d_drug_dealer:
		{
			if(!response) return 1;
			new d_amount = strval(inputtext);

			if(d_amount < 1) return show_dialog(playerid, d_drug_dealer, DIALOG_STYLE_INPUT, ""c_server"Наркоторговец", ""c_orange_red"* Количество не может быть менее 1 гр.\n\n"c_white"Введите количество грамм семян, которое желаете приобрести:\n\n"c_grey"* Стоимость 1 гр. семян составляет -"c_white"100$"c_grey".", "Купить", "Закрыть");
			if(PlayerInfo[playerid][seed] + d_amount > 500) return show_dialog(playerid, d_drug_dealer, DIALOG_STYLE_INPUT, ""c_server"Наркоторговец", ""c_orange_red"* Вы не можете унести более 500 гр. семян.\n\n"c_white"Введите количество грамм семян, которое желаете приобрести:\n\n"c_grey"* Стоимость 1 гр. семян составляет -"c_white"100$"c_grey".", "Купить", "Закрыть");
			if(PlayerInfo[playerid][money] < d_amount * 100) return show_dialog(playerid, d_drug_dealer, DIALOG_STYLE_INPUT, ""c_server"Наркоторговец", ""c_orange_red"* У Вас нет такого количества денег.\n\n"c_white"Введите количество грамм семян, которое желаете приобрести:\n\n"c_grey"* Стоимость 1 гр. семян составляет -"c_white"100$"c_grey".", "Купить", "Закрыть");

			PlayerInfo[playerid][seed] += d_amount;
			give_money(playerid, -d_amount * 100);
			insert_money_log(playerid, INVALID_PLAYER_ID, -d_amount, "покупка семян");
			update_int_sql(playerid, "u_seed", PlayerInfo[playerid][seed]);

			new query_string[112];
			format(query_string, sizeof(query_string), ""c_green"* "c_white"Вы приобрели у дилера "c_green"%i гр."c_white" семян за "c_green"%i$"c_white".", d_amount, d_amount * 100);
			SendClientMessage(playerid, col_white, query_string);
			if(!mafia_player(playerid)) SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы можете вырастить семена в подвале дома, чтобы получить наркотики.");
			else SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы можете вырастить семена в подвале дома или на базе мафии, чтобы получить наркотики.");

		}
		case d_cellar_menu:
		{
			if(!response) return 1;
			if(!listitem) return 1;
			switch(listitem)
			{
				case 1:
				{
					show_dialog(playerid, d_cellar_seed, DIALOG_STYLE_INPUT, ""c_server"Посадка семян", ""c_white"Введите количество семян, которое желаете посадить:", "Принять", "Назад");
				}
				case 2:
				{
					new h = GetPVarInt(playerid, "house_id")-1;
					if(h_info[h][h_seed_result]<= 0)
					{
						new d_string[172];
						format(d_string, sizeof(d_string), "\
						"c_server"Посажено семян: "c_grey"%d гр."c_server" | Урожай: "c_grey"%d гр.\n\
						"c_grey"-"c_white"Посадить семена\n"c_grey"-"c_white"Переработка урожая",
						h_info[h][h_seed], h_info[h][h_seed_result]);
						show_dialog(playerid, d_cellar_menu, DIALOG_STYLE_LIST, ""c_server"Подвал", d_string, "Выбрать", "Закрыть");
						return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Для начала нужно вырастить урожай.");
					}
					action_type {playerid} = ACTION_CELLAR;
					action_step {playerid} = 0;
					action_td_status(playerid, true);

				}
			}
		}
		case d_cellar_seed:
		{
			new h = GetPVarInt(playerid, "house_id")-1;
			if(!response)
			{
				new d_string[172];
				format(d_string, sizeof(d_string), "\
				"c_server"Посажено семян: "c_grey"%d гр."c_server" | Урожай: "c_grey"%d гр.\n\
				"c_grey"-"c_white"Посадить семена\n"c_grey"-"c_white"Переработка урожая",
				h_info[h][h_seed], h_info[h][h_seed_result]);
				show_dialog(playerid, d_cellar_menu, DIALOG_STYLE_LIST, ""c_server"Подвал", d_string, "Выбрать", "Закрыть");
				return 1;
			}
			new d_amount = strval(inputtext);
			new d_string[172];

			if(d_amount < 1) return show_dialog(playerid, d_cellar_seed, DIALOG_STYLE_INPUT, ""c_server"Посадка семян", ""c_orange_red"* Количество не может быть менее 1 гр.\n\n"c_white"Введите количество семян, которое желаете посадить:", "Принять", "Назад");
			if(PlayerInfo[playerid][seed] < d_amount) return show_dialog(playerid, d_cellar_seed, DIALOG_STYLE_INPUT, ""c_server"Посадка семян", ""c_orange_red"*"c_grey" У Вас нет такого количества семян.\n\n"c_white"Введите количество семян, которое желаете посадить:", "Принять", "Назад");

			PlayerInfo[playerid][seed] -= d_amount;
			update_int_sql(playerid, "u_seed", PlayerInfo[playerid][seed]);
			h_info[h][h_seed] += d_amount;

			format(d_string, 112, ""c_green"*"c_white" Вы посадили "c_green"%d гр."c_white" семян. Ожидайте их созревания.", d_amount);
			SendClientMessage(playerid, col_white, d_string);

			format(d_string, sizeof(d_string), "\
			"c_server"Посажено семян: "c_grey"%d гр."c_server" | Урожай: "c_grey"%d гр.\n\
			"c_grey"-"c_white"Посадить семена\n"c_grey"-"c_white"Переработка урожая",
			h_info[h][h_seed], h_info[h][h_seed_result]);
			show_dialog(playerid, d_cellar_menu, DIALOG_STYLE_LIST, ""c_server"Подвал", d_string, "Выбрать", "Закрыть");
			return 1;

		}
		case d_car_shop:
		{
			if(!response) return DeletePVar(playerid, "tshop_id");
			if(listitem == 0)
			{
				show_dialog(playerid, d_car_shop, DIALOG_STYLE_LIST, ""c_server"Автосалон", ""c_server"Выберите тип кузова:\n"c_grey"-"c_white"Джип\n"c_grey"-"c_white"Купе\n"c_grey"-"c_white"Пикап\n"c_grey"-"c_white"Седан\n"c_grey"-"c_white"Универсал\n"c_grey"-"c_white"Фургон\n"c_grey"-"c_white"Мото-транспорт", "Выбрать", "Закрыть");
				return 1;
			}
			listitem --;
			p_t_info[playerid][last_alt] = GetTickCount();

			SetPVarInt(playerid, "tshop_type", listitem + 1);
			new veh_id = CreateVehicle(t_shop_models[0][listitem],
																		t_shop_pos[listitem][0],
																		t_shop_pos[listitem][1],
																		t_shop_pos[listitem][2],
																		t_shop_pos[listitem][3],
																		0, 0, -1);

			new veh_id2 = CreateVehicle(t_shop_models[random(4)][listitem],
																		2322.279,
																		923.559,
																		1028.370,
																		319.648,
																		random(255), random(255), -1);

			Streamer_Update(playerid);

			SetPVarInt(playerid, "tshop_car", veh_id);
			SetPVarInt(playerid, "tshop_car2", veh_id2);

			SetVehicleVirtualWorld(veh_id2, playerid + 2);
			SetVehicleVirtualWorld(veh_id, playerid + 2);
			set_world(playerid, playerid + 2);
			set_interior(playerid, 0);
			SetPlayerArmedWeapon(playerid, 0);
			p_t_info[playerid][p_tp_immune_time] = 4;
			SetPlayerPos(playerid, 2333.7551,912.1205,1028.5376);
			TogglePlayerControllable(playerid, false);

			SetPlayerCameraPos(playerid,  t_shop_pos[listitem][4],
											t_shop_pos[listitem][5],
											t_shop_pos[listitem][6]);

			SetPlayerCameraLookAt(playerid,   t_shop_pos[listitem][0],
												t_shop_pos[listitem][1],
												t_shop_pos[listitem][2]);

			new td_string[32];
			format(td_string, sizeof(td_string), "%s", vehicle_name[t_shop_models[0][listitem] -400]);

			ptd_tshop [playerid][0] = CreatePlayerTextDraw(playerid, 78.705871, 355.666778, td_string);
			PlayerTextDrawLetterSize(playerid, ptd_tshop [playerid][0], 0.406116, 1.669999);
			PlayerTextDrawAlignment(playerid, ptd_tshop [playerid][0], 1);
			PlayerTextDrawColor(playerid, ptd_tshop [playerid][0], -1);
			PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][0], 0);
			PlayerTextDrawSetOutline(playerid, ptd_tshop [playerid][0], 0);
			PlayerTextDrawBackgroundColor(playerid, ptd_tshop [playerid][0], 255);
			PlayerTextDrawFont(playerid, ptd_tshop [playerid][0], 1);
			PlayerTextDrawSetProportional(playerid, ptd_tshop [playerid][0], 1);
			PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][0], 0);

			format(td_string, sizeof(td_string), "%s", t_shop_category[listitem]);
			ptd_tshop [playerid][1] = CreatePlayerTextDraw(playerid, 78.235282, 373.166656, td_string);
			PlayerTextDrawLetterSize(playerid, ptd_tshop [playerid][1], 0.228235, 0.958333);
			PlayerTextDrawAlignment(playerid, ptd_tshop [playerid][1], 1);
			PlayerTextDrawColor(playerid, ptd_tshop [playerid][1], -1);
			PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][1], 0);
			PlayerTextDrawSetOutline(playerid, ptd_tshop [playerid][1], 0);
			PlayerTextDrawBackgroundColor(playerid, ptd_tshop [playerid][1], 255);
			PlayerTextDrawFont(playerid, ptd_tshop [playerid][1], 1);
			PlayerTextDrawSetProportional(playerid, ptd_tshop [playerid][1], 1);
			PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][1], 0);

			format(td_string, sizeof(td_string), "$%d", GetModelPrice(t_shop_models[0][listitem]));
			ptd_tshop [playerid][2] = CreatePlayerTextDraw(playerid, 78.235282, 381.333435, td_string);
			PlayerTextDrawLetterSize(playerid, ptd_tshop [playerid][2], 0.228235, 0.958333);
			PlayerTextDrawAlignment(playerid, ptd_tshop [playerid][2], 1);
			PlayerTextDrawColor(playerid, ptd_tshop [playerid][2], -1);
			PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][2], 0);
			PlayerTextDrawSetOutline(playerid, ptd_tshop [playerid][2], 0);
			PlayerTextDrawBackgroundColor(playerid, ptd_tshop [playerid][2], 255);
			PlayerTextDrawFont(playerid, ptd_tshop [playerid][2], 1);
			PlayerTextDrawSetProportional(playerid, ptd_tshop [playerid][2], 1);
			PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][2], 0);

			ptd_tshop [playerid][3] = CreatePlayerTextDraw(playerid, 8.529381, 345.166595, "");
			PlayerTextDrawLetterSize(playerid, ptd_tshop [playerid][3], 0.000000, 0.000000);
			PlayerTextDrawTextSize(playerid, ptd_tshop [playerid][3], 56.117614, 56.749965);
			PlayerTextDrawAlignment(playerid, ptd_tshop [playerid][3], 1);
			PlayerTextDrawColor(playerid, ptd_tshop [playerid][3], -1);
			PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][3], 0);
			PlayerTextDrawSetOutline(playerid, ptd_tshop [playerid][3], 0);
			PlayerTextDrawBackgroundColor(playerid, ptd_tshop [playerid][3], 522133503);
			PlayerTextDrawFont(playerid, ptd_tshop [playerid][3], 5);
			PlayerTextDrawSetProportional(playerid, ptd_tshop [playerid][3], 0);
			PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][3], 0);
			PlayerTextDrawSetPreviewModel(playerid, ptd_tshop [playerid][3], t_shop_models[0][listitem]);
			PlayerTextDrawSetPreviewRot(playerid, ptd_tshop [playerid][3], -30.000000, 0.000000, 30.000000, 1.000000);
			PlayerTextDrawSetPreviewVehCol(playerid, ptd_tshop [playerid][3], 1, 1);

			for(new j = 0; j < 4; j ++)
			{
				PlayerTextDrawShow(playerid, ptd_tshop [playerid][j]);
			}
			for(new j = 0; j < 20; j ++)
			{
				TextDrawShowForPlayer(playerid, td_tshop[j]);
				TextDrawShowForPlayer(playerid, td_color_tshop[j]);
			}

			SelectTextDraw(playerid, 0xB0C4DEFF);
		}
		case d_delivery:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					new d_string[110];
					format(d_string, sizeof(d_string), ""c_server"Товара в транспорте: "c_grey"%d кг.\n"c_white"Закупка товара\nСписок заказов\nВзять заказ",
					veh_info[GetPlayerVehicleID(playerid)-1][v_cargo]);
					show_dialog(playerid, d_delivery, DIALOG_STYLE_LIST, ""c_server"Доставка", d_string, "Выбрать", "Закрыть");
					return 1;
				}
				case 1:
				{
					if(PlayerInfo[playerid][job] == job_fuel_delivery)
					{
						if(veh_info[GetPlayerVehicleID(playerid)-1][v_model] == 578)
						{
							SendClientMessage(playerid, col_white, ""c_green"* "c_white"Направляйтесь на заливку топлива.");
							is_gps_used {playerid} = 5;
							SetPlayerRaceCheckpoint(playerid, 1, -983.0082, -705.4687, 32.6332, 0.0, 0.0, 0.0, 3.0);
							return 1;
						}
						else if(veh_info[GetPlayerVehicleID(playerid)-1][v_model] == 403)
						{
							SendClientMessage(playerid, col_white, ""c_green"* "c_white"Направляйтесь на заливку топлива. Не забудьте подцепить прицеп.");
							is_gps_used {playerid} = 5;
							SetPlayerRaceCheckpoint(playerid, 1, -983.0082, -705.4687, 32.6332, 0.0, 0.0, 0.0, 3.0);
							return 1;
						}
					}


					if(PlayerInfo[playerid][job] == job_delivery)
					{
						SendClientMessage(playerid, col_white, ""c_green"* "c_white"Направляйтесь в порт Los-Santos для закупки товара.");
						is_gps_used {playerid} = 10 ;
						SetPlayerRaceCheckpoint(playerid, 1, 2646.1821, -2374.5737, 13.3588, 0.0, 0.0, 0.0, 4.0);
					}
					return 1;
				}
				case 2:
				{
					if(PlayerInfo[playerid][job] == job_delivery)
					{
						mysql_tquery(sql_connection, "SELECT * FROM `businesses_orders` WHERE `bo_type` != 1 ORDER BY `businesses_orders`.`bo_date` DESC", "order_list_callback", "i", playerid);
					}
					else
					{
						mysql_tquery(sql_connection, "SELECT * FROM `businesses_orders` WHERE `bo_type` = 1 ORDER BY `businesses_orders`.`bo_date` DESC", "order_list_callback", "i", playerid);
					}
					return 1;
				}
				case 3:
				{
					show_dialog(playerid, d_delivery_bid, DIALOG_STYLE_INPUT, ""c_server"Взять заказ", ""c_white"Введите номер заказа, который желаете взять:", "Взять", "Назад");
					return 1;
				}
			}
		}
		case d_delivery_buy:
		{
			if(!response)
			{
				new d_string[110];
				format(d_string, sizeof(d_string), ""c_server"Товара в транспорте: "c_grey"%d кг.\n"c_white"Закупка товара\nСписок заказов\nВзять заказ",
				veh_info[GetPlayerVehicleID(playerid)-1][v_cargo]);
				show_dialog(playerid, d_delivery, DIALOG_STYLE_LIST, ""c_server"Доставка", d_string, "Выбрать", "Закрыть");
				return 1;
			}
			if(PlayerInfo[playerid][job] == job_delivery)
			{
				new order_count = strval(inputtext);
				if(order_count < 1)
				{
					show_dialog(playerid, d_delivery_buy, DIALOG_STYLE_INPUT, ""c_server"Закупка товара", ""c_orange_red"* Невозможно закупить менее 1 кг. товара.\n\n"c_white"Введите количество товара, которое желаете закупить:", "Принять", "Назад");
					return 1;
				}
				if(player_rentcar[playerid] == INVALID_VEHICLE_ID || player_rentcar[playerid] != player_vehicle[playerid]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нужно находиться в рабочей машине.");
				if(veh_info[GetPlayerVehicleID(playerid)-1][v_cargo] + order_count > 5000)
				{
					show_dialog(playerid, d_delivery_buy, DIALOG_STYLE_INPUT, ""c_server"Закупка товара", ""c_orange_red"* Невозможно загрузить более 5000 кг.\n\n"c_white"Введите количество товара, которое желаете закупить:", "Принять", "Назад");
					return 1;
				}
				if(order_count * 2 > PlayerInfo[playerid][money])
				{
					show_dialog(playerid, d_delivery_buy, DIALOG_STYLE_INPUT, ""c_server"Закупка товара", ""c_orange_red"* У Вас недостаточно средств.\n\n"c_white"Введите количество товара, которое желаете закупить:", "Принять", "Назад");
					return 1;
				}
				veh_info[GetPlayerVehicleID(playerid)-1][v_cargo] += order_count;
				new string[108];
				format(string, sizeof(string), ""c_green"* "c_white"Вы загрузили "c_green"%d/5000 кг."c_white" товара за "c_green"%d$"c_white".", order_count, order_count * 2);
				SendClientMessage(playerid, col_white, string);
				give_money(playerid, -order_count * 2);
				insert_money_log(playerid, INVALID_PLAYER_ID, -order_count * 2, "закупка товаров");
			}
			else if(PlayerInfo[playerid][job] == job_fuel_delivery)
			{
				new order_count = strval(inputtext);
				if(order_count < 1)
				{
					show_dialog(playerid, d_delivery_buy, DIALOG_STYLE_INPUT, ""c_server"Закупка бензина", ""c_orange_red"* Невозможно закупить менее 1 л. бензина.\n\n"c_white"Введите количество бензина, которое желаете закупить:", "Принять", "Назад");
					return 1;
				}
				if(player_rentcar[playerid] == INVALID_VEHICLE_ID || player_rentcar[playerid] != player_vehicle[playerid]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нужно находиться в рабочей машине.");

				if(veh_info[GetPlayerVehicleID(playerid)-1][v_model] == 578)
				{
					if(veh_info[GetPlayerVehicleID(playerid)-1][v_cargo] + order_count > 5000)
					{
						show_dialog(playerid, d_delivery_buy, DIALOG_STYLE_INPUT, ""c_server"Закупка бензина", ""c_orange_red"* Невозможно загрузить более 5000 л.\n\n"c_white"Введите количество бензина, которое желаете закупить:", "Принять", "Назад");
						return 1;
					}
				}
				else if(veh_info[GetPlayerVehicleID(playerid)-1][v_model] == 403)
				{
					if(veh_info[GetPlayerVehicleID(playerid)-1][v_cargo] + order_count > 10000)
					{
						show_dialog(playerid, d_delivery_buy, DIALOG_STYLE_INPUT, ""c_server"Закупка бензина", ""c_orange_red"* Невозможно загрузить более 10000 л.\n\n"c_white"Введите количество бензина, которое желаете закупить:", "Принять", "Назад");
						return 1;
					}
				}
				if(order_count * 2 > PlayerInfo[playerid][money])
				{
					show_dialog(playerid, d_delivery_buy, DIALOG_STYLE_INPUT, ""c_server"Закупка бензина", ""c_orange_red"* У Вас недостаточно средств.\n\n"c_white"Введите количество бензина, которое желаете закупить:", "Принять", "Назад");
					return 1;
				}

				veh_info[GetPlayerVehicleID(playerid)-1][v_cargo] += order_count;
				new string[108];
				format(string, sizeof(string), ""c_green"* "c_white"Вы залили "c_green"%d л."c_white" бензина за "c_green"%d$"c_white".", order_count, order_count * 5);
				SendClientMessage(playerid, col_white, string);
				give_money(playerid, -order_count * 2);
				insert_money_log(playerid, INVALID_PLAYER_ID, -order_count * 2, "закупка бензина");

			}
		}
		case d_delivery_bid:
		{
			if(!response)
			{
				new d_string[110];
				format(d_string, sizeof(d_string), ""c_server"Товара в транспорте: "c_grey"%d кг.\n"c_white"Закупка товара\nСписок заказов\nВзять заказ",
				veh_info[GetPlayerVehicleID(playerid)-1][v_cargo]);
				show_dialog(playerid, d_delivery, DIALOG_STYLE_LIST, ""c_server"Доставка", d_string, "Выбрать", "Закрыть");
				return 1;
			}
			new order_id = strval(inputtext);
			if(order_id < 1 || order_id > 100000)
			{
				show_dialog(playerid, d_delivery_bid, DIALOG_STYLE_INPUT, ""c_server"Взять заказ", ""c_orange_red"* "c_grey"Данный заказ не найден в базе заказов.\n\n"c_white"Введите номер заказа, который желаете взять:", "Взять", "Назад");
				return 1;
			}
			if(PlayerInfo[playerid][job] == job_delivery)
			{
				new query_string[96];
				format(query_string, sizeof query_string, "SELECT * FROM `businesses_orders` WHERE `bo_id` = '%d' AND `bo_type` != 1", order_id);
				mysql_tquery(sql_connection, query_string, "order_get_callback", "i", playerid);
			}
			else
			{
				new query_string[96];
				format(query_string, sizeof query_string, "SELECT * FROM `businesses_orders` WHERE `bo_id` = '%d' AND `bo_type` = 1", order_id);
				mysql_tquery(sql_connection, query_string, "order_get_callback", "i", playerid);

			}
			return 1;
		}
		case d_delivery_list:
		{
			new d_string[110];
			format(d_string, sizeof(d_string), ""c_server"Товара в транспорте: "c_grey"%d кг.\n"c_white"Закупка товара\nСписок заказов\nВзять заказ",
			veh_info[GetPlayerVehicleID(playerid)-1][v_cargo]);
			show_dialog(playerid, d_delivery, DIALOG_STYLE_LIST, ""c_server"Доставка", d_string, "Выбрать", "Закрыть");
			return 1;
		}
		case d_delivery_end:
		{
			if(!response)
			{
				is_gps_used {playerid} = 0;
				return 1;
			}

			if(PlayerInfo[playerid][job] == job_delivery)
			{
				new query_string[96];
				format(query_string, sizeof query_string, "SELECT * FROM `businesses_orders` WHERE `bo_bid` = '%d' AND `bo_type` != 1", is_gps_used {playerid} -20);
				mysql_tquery(sql_connection, query_string, "order_endaccept_callback", "i", playerid);
			}
			else
			{
				new query_string[96];
				format(query_string, sizeof query_string, "SELECT * FROM `businesses_orders` WHERE `bo_bid` = '%d' AND `bo_type` = 1", is_gps_used {playerid} -20);
				mysql_tquery(sql_connection, query_string, "order_endaccept_callback", "i", playerid);
			}
		}
		case d_armpanel:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					format(global_string, 322, "\
					"c_grey"%s: "c_white"%d/50000\n\
					"c_grey"%s: "c_white"%d/50000\n\
					"c_grey"%s: "c_white"%d/50000\n\
					"c_grey"%s: "c_white"%d/50000\n\
					"c_grey"%s: "c_white"%d/500000\n",
					f_info[3][f_name], f_info[3][f_materials],
					f_info[4][f_name], f_info[4][f_materials],
					f_info[5][f_name], f_info[5][f_materials],
					f_info[6][f_name], f_info[6][f_materials],
					f_info[7][f_name], f_info[7][f_materials]);
					show_dialog(playerid, d_armpanel_info, DIALOG_STYLE_MSGBOX, ""c_server"Состояние складов", global_string, "Назад", "");
				}
				case 1:
				{
					if(GetPlayerState(playerid)!= PLAYER_STATE_DRIVER)
					{
						show_dialog(playerid, d_armpanel, DIALOG_STYLE_LIST, ""c_server"Доставка оружия", "Состояние складов\nЗагрузка оружия\nНачать доставку", "Выбрать", "Закрыть");
						return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы должны находиться за рулём транспортного средства.");
					}

					if(veh_info[GetPlayerVehicleID(playerid)-1][v_model] == 433)
					{
						show_dialog(playerid, d_armpanel_load, DIALOG_STYLE_LIST, ""c_server"Загрузка оружия", "Загрузка в порту\nЗагрузка со склада", "Выбрать", "Назад");
						return 1;
					}
					else if(veh_info[GetPlayerVehicleID(playerid)-1][v_model] == 548)
					{
						SendClientMessage(playerid, col_white, ""c_green"* "c_white"Отправляйтесь в порт Los Santos и зацепите один из армейских контейнеров.");
						SendClientMessage(playerid, col_white, ""c_green"* "c_white"Для зацепки контейнера используйте клавишу "c_green"Y");
					}
					else
					{
						show_dialog(playerid, d_armpanel, DIALOG_STYLE_LIST, ""c_server"Доставка оружия", "Состояние складов\nЗагрузка оружия\nНачать доставку", "Выбрать", "Закрыть");
						return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"В данное транспортное средство нельзя загрузить оружие.");
					}
				}
				case 2:
				{
					format(global_string, 264, "\
					%s\n\
					%s\n\
					%s\n\
					%s\n\
					%s",
					f_info[3][f_name],
					f_info[4][f_name],
					f_info[5][f_name],
					f_info[6][f_name],
					f_info[7][f_name]);
					show_dialog(playerid, d_armpanel_delivery, DIALOG_STYLE_LIST, ""c_server"Доставка оружия", global_string, "", "Назад");

				}
			}
		}

		case d_armpanel_delivery:
		{
			if(!response) return show_dialog(playerid, d_armpanel, DIALOG_STYLE_LIST, ""c_server"Доставка оружия", "Состояние складов\nЗагрузка оружия\nНачать доставку", "Выбрать", "Закрыть");
			switch(listitem)
			{
				case 0:SetPlayerCheckpoint(playerid, army_unloading[3][0], army_unloading[3][1], army_unloading[3][2], 5.0);
				case 1:SetPlayerCheckpoint(playerid, army_unloading[4][0], army_unloading[4][1], army_unloading[4][2], 5.0);
				case 2:SetPlayerCheckpoint(playerid, army_unloading[5][0], army_unloading[5][1], army_unloading[5][2], 5.0);
				case 3:SetPlayerCheckpoint(playerid, army_unloading[6][0], army_unloading[6][1], army_unloading[6][2], 5.0);
				case 4:SetPlayerCheckpoint(playerid, army_unloading[7][0], army_unloading[7][1], army_unloading[7][2], 5.0);
			}
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Метка разгрузки установлена, не забудьте загрузить транспорт.");
			is_gps_used {playerid} = 0;
		}
		case d_armpanel_load:
		{
			if(!response) return show_dialog(playerid, d_armpanel, DIALOG_STYLE_LIST, ""c_server"Доставка оружия", "Состояние складов\nЗагрузка оружия\nНачать доставку", "Выбрать", "Закрыть");
			switch(listitem)
			{
				case 0:SetPlayerCheckpoint(playerid, 2646.1821, -2374.5737, 13.3588, 5.0);
				case 1:SetPlayerCheckpoint(playerid, 307.1280, 2040.3036, 18.1088, 5.0);
			}
			is_gps_used {playerid} = 0;
		}
		case d_armpanel_info:
		{
			show_dialog(playerid, d_armpanel, DIALOG_STYLE_LIST, ""c_server"Доставка оружия", "Состояние складов\nЗагрузка оружия\nНачать доставку", "Выбрать", "Закрыть");
			return 1;
		}
		case d_economy:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					format(global_string, 720, "\
					"c_grey"%s | "c_white"%d$\n\
					"c_grey"%s | "c_white"%d$\n\
					"c_grey"%s | "c_white"%d$\n\
					"c_grey"%s | "c_white"%d$\n\
					"c_grey"%s | "c_white"%d$\n\
					"c_grey"%s | "c_white"%d$\n\
					"c_grey"%s | "c_white"%d$\n\
					"c_grey"%s | "c_white"%d$\n\
					"c_grey"%s | "c_white"%d$",
					f_info[3][f_name], f_info[3][f_money],
					f_info[4][f_name], f_info[4][f_money],
					f_info[5][f_name], f_info[5][f_money],
					f_info[6][f_name], f_info[6][f_money],
					f_info[7][f_name], f_info[7][f_money],
					f_info[10][f_name], f_info[10][f_money],
					f_info[14][f_name], f_info[14][f_money],
					f_info[15][f_name], f_info[15][f_money],
					f_info[16][f_name], f_info[16][f_money]);
					show_dialog(playerid, d_economy_info, DIALOG_STYLE_MSGBOX, ""c_server"Состояние организаций", global_string, "Назад", "");
				}
				case 1:
				{
					format(global_string, 720, "\
					"c_grey"%s\t"c_white"%d$\n\
					"c_grey"%s\t"c_white"%d$\n\
					"c_grey"%s\t"c_white"%d$\n\
					"c_grey"%s\t"c_white"%d$\n\
					"c_grey"%s\t"c_white"%d$\n\
					"c_grey"%s\t"c_white"%d$\n\
					"c_grey"%s\t"c_white"%d$\n\
					"c_grey"%s\t"c_white"%d$\n\
					"c_grey"%s\t"c_white"%d$",
					f_info[3][f_name], f_info[3][f_money],
					f_info[4][f_name], f_info[4][f_money],
					f_info[5][f_name], f_info[5][f_money],
					f_info[6][f_name], f_info[6][f_money],
					f_info[7][f_name], f_info[7][f_money],
					f_info[10][f_name], f_info[10][f_money],
					f_info[14][f_name], f_info[14][f_money],
					f_info[15][f_name], f_info[15][f_money],
					f_info[16][f_name], f_info[16][f_money]);
					show_dialog(playerid, d_economy_transit, DIALOG_STYLE_TABLIST, ""c_server"Перевод средств", global_string, "Выбрать", "Назад");
				}
				case 2:
				{
					format(global_string, 468, "\
					{%s}%s\n\
					{%s}%s\n\
					{%s}%s\n\
					{%s}%s\n\
					{%s}%s\n\
					{%s}%s\n\
					{%s}%s\n\
					{%s}%s\n\
					{%s}%s",
					f_info[3][f_chat_color], f_info[3][f_name],
					f_info[4][f_chat_color], f_info[4][f_name],
					f_info[5][f_chat_color], f_info[5][f_name],
					f_info[6][f_chat_color], f_info[6][f_name],
					f_info[7][f_chat_color], f_info[7][f_name],
					f_info[10][f_chat_color], f_info[10][f_name],
					f_info[14][f_chat_color], f_info[14][f_name],
					f_info[15][f_chat_color], f_info[15][f_name],
					f_info[16][f_chat_color], f_info[16][f_name]);
					show_dialog(playerid, d_economy_salary_fraction, DIALOG_STYLE_LIST, ""c_server"Зарплаты организаций", global_string, "Выбрать", "Назад");
				}
			}
		}
		case d_economy_salary_fraction:
		{
			if(!response) return show_dialog(playerid, d_economy, DIALOG_STYLE_LIST, ""c_server"Экономика", "Состояние организаций\nПеревод средств\nЗарплаты организаций", "Выбрать", "Закрыть");

			new fraction_id = listitem + 3;
			if(listitem == 5)fraction_id = 10;
			else if(listitem > 5)fraction_id = listitem + 8;
			new header_string[64];
			format(header_string, sizeof(header_string), ""c_server"%s", f_info[fraction_id][f_name]);

			global_string[0] = EOS;
			for(new i = 0; i < f_info[fraction_id][f_rank_settings][0]; i ++)
			{
				new line_string[104];
				format(line_string, 104, ""c_server"%d. "c_grey"%s\t"c_white"%d$\n", i + 1, f_rank[fraction_id][i], f_info[fraction_id][f_rank_salary][i]);
				strcat(global_string, line_string);
			}
			show_dialog(playerid, d_economy_salary_ranklist, DIALOG_STYLE_TABLIST, header_string, global_string, "Далее", "Назад");
			SetPVarInt(playerid, "det_fraction", fraction_id);
		}
		case d_economy_salary_ranklist:
		{
			if(!response)
			{
				format(global_string, 468, "\
				{%s}%s\n\
				{%s}%s\n\
				{%s}%s\n\
				{%s}%s\n\
				{%s}%s\n\
				{%s}%s\n\
				{%s}%s\n\
				{%s}%s\n\
				{%s}%s",
				f_info[3][f_chat_color], f_info[3][f_name],
				f_info[4][f_chat_color], f_info[4][f_name],
				f_info[5][f_chat_color], f_info[5][f_name],
				f_info[6][f_chat_color], f_info[6][f_name],
				f_info[7][f_chat_color], f_info[7][f_name],
				f_info[10][f_chat_color], f_info[10][f_name],
				f_info[14][f_chat_color], f_info[14][f_name],
				f_info[15][f_chat_color], f_info[15][f_name],
				f_info[16][f_chat_color], f_info[16][f_name]);
				show_dialog(playerid, d_economy_salary_fraction, DIALOG_STYLE_LIST, ""c_server"Зарплаты организаций", global_string, "Выбрать", "Назад");
				DeletePVar(playerid, "det_fraction");
				return 1;
			}
			SetPVarInt(playerid, "det_rank", listitem);
			new fraction_id = GetPVarInt(playerid, "det_fraction");
			format(global_string, 276, ""c_white"Введите сумму, которую желаете установить в качестве заработной платы сотруднику "c_server"%s"c_white" на должности "c_server"%s(%d)\n\n"c_grey"* Сумма должна быть не менее 1$ и не более 25.000$",
			f_info[fraction_id][f_name], f_rank[fraction_id][listitem], listitem + 1);
			show_dialog(playerid, d_economy_salary_set, DIALOG_STYLE_INPUT, ""c_server"Установка зарплаты", global_string, "Принять", "Назад");
		}
		case d_economy_salary_set:
		{
			if(!response)
			{
				new fraction_id = GetPVarInt(playerid, "det_fraction");
				new header_string[64];
				format(header_string, sizeof(header_string), ""c_server"%s", f_info[fraction_id][f_name]);
				global_string[0] = EOS;
				for(new i = 0; i < f_info[fraction_id][f_rank_settings][0]; i ++)
				{
					new line_string[104];
					format(line_string, 104, ""c_server"%d. "c_grey"%s\t"c_white"%d$\n", i + 1, f_rank[fraction_id][i], f_info[fraction_id][f_rank_salary][i]);
					strcat(global_string, line_string);
				}
				show_dialog(playerid, d_economy_salary_ranklist, DIALOG_STYLE_TABLIST, header_string, global_string, "Далее", "Назад");
				DeletePVar(playerid, "det_rank");
				return 1;
			}
			new _money = strval(inputtext),
				fraction_id = GetPVarInt(playerid, "det_fraction"),
				rank_id = GetPVarInt(playerid, "det_rank");


			if(_money < 1 || _money > 25000)
			{
				format(global_string, 276, ""c_white"Введите сумму, которую желаете установить в качестве заработной платы\nсотруднику "c_server"%s"c_white" на должности "c_server"%s(%d)\n\n"c_orange_red"* Сумма должна быть не менее 1$ и не более 25.000$",
				f_info[fraction_id][f_name], f_rank[fraction_id][rank_id], rank_id + 1);
				show_dialog(playerid, d_economy_salary_set, DIALOG_STYLE_INPUT, ""c_server"Установка зарплаты", global_string, "Принять", "Назад");
				return 1;
			}
			f_info[fraction_id][f_rank_salary][rank_id] = _money;

			new _text_string[198];
			format(_text_string, 144, ""c_green"* "c_white"Вы установили зарплату "c_green"%d$"c_white" на должность "c_green"%s(%d | %s)",
			_money, f_rank[fraction_id][rank_id], rank_id + 1, f_info[fraction_id][f_name]);
			SendClientMessage(playerid, col_white, _text_string);

			new header_string[64];
			format(header_string, sizeof(header_string), ""c_server"%s", f_info[fraction_id][f_name]);
			global_string[0] = EOS;
			for(new i = 0; i < f_info[fraction_id][f_rank_settings][0]; i ++)
			{
				new line_string[104];
				format(line_string, 104, ""c_server"%d. "c_grey"%s\t"c_white"%d$\n", i + 1, f_rank[fraction_id][i], f_info[fraction_id][f_rank_salary][i]);
				strcat(global_string, line_string);
			}
			show_dialog(playerid, d_economy_salary_ranklist, DIALOG_STYLE_TABLIST, header_string, global_string, "Далее", "Назад");
			DeletePVar(playerid, "det_rank");

			mysql_format(sql_connection, _text_string, sizeof(_text_string), "UPDATE `fractions` SET `f_salary` = '%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d' WHERE `f_id` = '%d' LIMIT 1",
			f_info[fraction_id][f_rank_salary][0],
			f_info[fraction_id][f_rank_salary][1],
			f_info[fraction_id][f_rank_salary][2],
			f_info[fraction_id][f_rank_salary][3],
			f_info[fraction_id][f_rank_salary][4],
			f_info[fraction_id][f_rank_salary][5],
			f_info[fraction_id][f_rank_salary][6],
			f_info[fraction_id][f_rank_salary][7],
			f_info[fraction_id][f_rank_salary][8],
			f_info[fraction_id][f_rank_salary][9],
			f_info[fraction_id][f_rank_salary][10],
			f_info[fraction_id][f_rank_salary][11],
			f_info[fraction_id][f_rank_salary][12],
			f_info[fraction_id][f_rank_salary][13],
			f_info[fraction_id][f_rank_salary][14],
			f_info[fraction_id][f_rank_salary][15],
			fraction_id + 1);
			mysql_tquery(sql_connection, _text_string, "", "");
			return 1;
		}
		case d_economy_transit:
		{
			if(!response) return show_dialog(playerid, d_economy, DIALOG_STYLE_LIST, ""c_server"Экономика", "Состояние организаций\nПеревод средств\nЗарплаты организаций", "Выбрать", "Закрыть");
			if(listitem == 5)
			{
				format(global_string, 720, "\
				"c_grey"%s\t"c_white"%d$\n\
				"c_grey"%s\t"c_white"%d$\n\
				"c_grey"%s\t"c_white"%d$\n\
				"c_grey"%s\t"c_white"%d$\n\
				"c_grey"%s\t"c_white"%d$\n\
				"c_grey"%s\t"c_white"%d$\n\
				"c_grey"%s\t"c_white"%d$\n\
				"c_grey"%s\t"c_white"%d$\n\
				"c_grey"%s\t"c_white"%d$",
				f_info[3][f_name], f_info[3][f_money],
				f_info[4][f_name], f_info[4][f_money],
				f_info[5][f_name], f_info[5][f_money],
				f_info[6][f_name], f_info[6][f_money],
				f_info[7][f_name], f_info[7][f_money],
				f_info[10][f_name], f_info[10][f_money],
				f_info[14][f_name], f_info[14][f_money],
				f_info[15][f_name], f_info[15][f_money],
				f_info[16][f_name], f_info[16][f_money]);
				show_dialog(playerid, d_economy_transit, DIALOG_STYLE_TABLIST, ""c_server"Перевод средств", global_string, "Выбрать", "Назад");
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете перевести средства с баланса мэрии на баланс мэрии.");
			}
			new fraction_id = listitem + 3;
			if(listitem > 5)fraction_id = listitem + 8;
			new d_string[165];
			format(d_string, sizeof(d_string), ""c_white"Введите сумму, которую желаете перевести на баланс "c_server"%s\n\n"c_grey"* Сумма не должна превышать 10.000.000$ и не может быть менее 1$",
			f_info[fraction_id][f_name]);
			SetPVarInt(playerid, "det_fraction", fraction_id);
			show_dialog(playerid, d_economy_transitcount, DIALOG_STYLE_INPUT, ""c_server"Перевод средств", d_string, "Принять", "Назад");
		}
		case d_economy_transitcount:
		{
			if(!response)
			{
				format(global_string, 720, "\
				"c_grey"%s\t"c_white"%d$\n\
				"c_grey"%s\t"c_white"%d$\n\
				"c_grey"%s\t"c_white"%d$\n\
				"c_grey"%s\t"c_white"%d$\n\
				"c_grey"%s\t"c_white"%d$\n\
				"c_grey"%s\t"c_white"%d$\n\
				"c_grey"%s\t"c_white"%d$\n\
				"c_grey"%s\t"c_white"%d$\n\
				"c_grey"%s\t"c_white"%d$",
				f_info[3][f_name], f_info[3][f_money],
				f_info[4][f_name], f_info[4][f_money],
				f_info[5][f_name], f_info[5][f_money],
				f_info[6][f_name], f_info[6][f_money],
				f_info[7][f_name], f_info[7][f_money],
				f_info[10][f_name], f_info[10][f_money],
				f_info[14][f_name], f_info[14][f_money],
				f_info[15][f_name], f_info[15][f_money],
				f_info[16][f_name], f_info[16][f_money]);
				show_dialog(playerid, d_economy_transit, DIALOG_STYLE_TABLIST, ""c_server"Перевод средств", global_string, "Выбрать", "Назад");

				DeletePVar(playerid, "det_fraction");
				return 1;
			}
			new _money = strval(inputtext);
			if(_money < 1 || _money > 10000000)
			{
				new d_string[165],
					fraction_id = GetPVarInt(playerid, "det_fraction");

				DeletePVar(playerid, "det_fraction");


				format(d_string, sizeof(d_string), ""c_white"Введите сумму, которую желаете перевести на баланс "c_server"%s\n\n"c_orange_red"* Сумма не должна превышать 10.000.000$ и не может быть менее 1$",
				f_info[fraction_id][f_name]);
				show_dialog(playerid, d_economy_transitcount, DIALOG_STYLE_INPUT, ""c_server"Перевод средств", d_string, "Принять", "Назад");
				return 1;
			}
			if(f_info[10][f_money] < _money)
			{
				new d_string[165],
					fraction_id = GetPVarInt(playerid, "det_fraction");

				DeletePVar(playerid, "det_fraction");

				format(d_string, sizeof(d_string), ""c_white"Введите сумму, которую желаете перевести на баланс "c_server"%s\n\n"c_orange_red"* На балансе мэрии нет таких средств.",
				f_info[fraction_id][f_name]);
				show_dialog(playerid, d_economy_transitcount, DIALOG_STYLE_INPUT, ""c_server"Перевод средств", d_string, "Принять", "Назад");
				return 1;
			}
			f_info[10][f_money] -= _money;
			new fraction_id = GetPVarInt(playerid, "det_fraction");
			f_info[fraction_id][f_money] += _money;
			new _text_string[128];
			format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы успешно перевели "c_green"%d$"c_white" на баланс "c_green"%s",
			_money, f_info[fraction_id][f_name]);
			SendClientMessage(playerid, col_white, _text_string);

			format(_text_string, sizeof(_text_string), "[D] %s %s перевел из казны штата %d$ на баланс %s",
			f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1], PlayerInfo[playerid][name], _money, f_info[fraction_id][f_name]);
			foreach(new i: logged_players) if(18 > PlayerInfo[i][member] > 0)SendClientMessage(i, 0xFF8282AA, _text_string);


			format(global_string, 720, "\
			"c_grey"%s\t"c_white"%d$\n\
			"c_grey"%s\t"c_white"%d$\n\
			"c_grey"%s\t"c_white"%d$\n\
			"c_grey"%s\t"c_white"%d$\n\
			"c_grey"%s\t"c_white"%d$\n\
			"c_grey"%s\t"c_white"%d$\n\
			"c_grey"%s\t"c_white"%d$\n\
			"c_grey"%s\t"c_white"%d$\n\
			"c_grey"%s\t"c_white"%d$",
			f_info[3][f_name], f_info[3][f_money],
			f_info[4][f_name], f_info[4][f_money],
			f_info[5][f_name], f_info[5][f_money],
			f_info[6][f_name], f_info[6][f_money],
			f_info[7][f_name], f_info[7][f_money],
			f_info[10][f_name], f_info[10][f_money],
			f_info[14][f_name], f_info[14][f_money],
			f_info[15][f_name], f_info[15][f_money],
			f_info[16][f_name], f_info[16][f_money]);
			show_dialog(playerid, d_economy_transit, DIALOG_STYLE_TABLIST, ""c_server"Перевод средств", global_string, "Выбрать", "Назад");
			DeletePVar(playerid, "det_fraction");
		}
		case d_economy_info:
		{
			show_dialog(playerid, d_economy, DIALOG_STYLE_LIST, ""c_server"Экономика", "Состояние организаций\nПеревод средств\nЗарплаты организаций", "Выбрать", "Закрыть");
			return 1;
		}
		case d_free_accept:
		{
			if(seller_id[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Адвокат покинул игру.");
			if(!response)
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"Игрок отказался от услуг адвоката.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			if(PlayerInfo[playerid][money] < sell_price[seller_id[playerid]])
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"У игрока недостаточно денег для приобретения услуг.");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно денег для приобретения услуг.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}

			new _text_string[128];
			format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Адвокат "c_green"%s"c_white" сократил Вам срок за "c_green"%d$"c_white".",PlayerInfo[seller_id[playerid]][name], sell_price[seller_id[playerid]]);
			SendClientMessage(playerid, col_white, _text_string);
			format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы сократили срок "c_green"%s"c_white" за "c_green"%d$"c_white".", PlayerInfo[playerid][name], sell_price[seller_id[playerid]]);
			SendClientMessage(seller_id[playerid], col_white, _text_string);

			give_money(playerid,-sell_price[seller_id[playerid]]);
			give_money(seller_id[playerid], sell_price[seller_id[playerid]]);
			insert_money_log(seller_id[playerid], playerid, sell_price[seller_id[playerid]], "услуги адвоката");

			PlayerInfo[playerid][jailed] = PlayerInfo[playerid][jailed] -floatround(PlayerInfo[playerid][jailed]* 0.65);

			format(_text_string, sizeof(_text_string), "[D] %s %s сократил срок %s за %d$",
			f_rank[PlayerInfo[seller_id[playerid]][member] -1][PlayerInfo[seller_id[playerid]][rank] -1], PlayerInfo[seller_id[playerid]][name], sell_price[seller_id[playerid]]);
			foreach(new i: logged_players) if(18 > PlayerInfo[i][member] > 0)SendClientMessage(i, 0xFF8282AA, _text_string);

			buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
			sell_price[seller_id[playerid]] = -1;
			seller_id[playerid] = INVALID_PLAYER_ID;
		}
		case d_gunlic_accept:
		{
			if(seller_id[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Продавец покинул игру.");
			if(!response)
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"Игрок отказался от покупки лицензии.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			if(PlayerInfo[playerid][money] < sell_price[seller_id[playerid]])
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"У игрока недостаточно денег для приобретения лицензии.");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно денег для приобретения лицензии.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}

			new _text_string[128];
			format(_text_string, sizeof(_text_string), ""c_green"* %s"c_white" продал Вам лицензию на оружие за "c_green"%d$"c_white".",PlayerInfo[seller_id[playerid]][name], sell_price[seller_id[playerid]]);
			SendClientMessage(playerid, col_white, _text_string);
			format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы продали лицензию на оружие "c_green"%s"c_white" за "c_green"%d$"c_white".", PlayerInfo[playerid][name], sell_price[seller_id[playerid]]);
			SendClientMessage(seller_id[playerid], col_white, _text_string);

			give_money(playerid,-sell_price[seller_id[playerid]]);
			give_money(seller_id[playerid], sell_price[seller_id[playerid]]);
			insert_money_log(seller_id[playerid], playerid, sell_price[seller_id[playerid]], "лицензия на оружие");

			PlayerInfo[playerid][gun_lic] = 1;
			update_int_sql(playerid, "u_gun_lic", PlayerInfo[playerid][gun_lic]);

			buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
			sell_price[seller_id[playerid]] = -1;
			seller_id[playerid] = INVALID_PLAYER_ID;
		}
		case d_paygang:
		{
			if(!response) return DeletePVar(playerid, "gangpay_sum");
			new gangpay_sum = GetPVarInt(playerid, "gangpay_sum");
			DeletePVar(playerid, "gangpay_sum");

			new m_count = 0;
			foreach(new i: logged_players)
			{
				if(PlayerInfo[i][member] != PlayerInfo[playerid][member] || playerid == i) continue;
				m_count ++;
			}

			if(PlayerInfo[playerid][money] < m_count * gangpay_sum) return DeletePVar(playerid, "gangpay_sum"), SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств.");
			give_money(playerid, -m_count * gangpay_sum);
			insert_money_log(playerid, INVALID_PLAYER_ID, -m_count * gangpay_sum, "премию выдал");
			foreach(new i: logged_players)
			{
				if(PlayerInfo[i][member] != PlayerInfo[playerid][member] || playerid == i) continue;
				give_money(i, gangpay_sum);
				insert_money_log(i, playerid, gangpay_sum, "премия");

				new scm_str[128];
				format(scm_str, 128, ""c_green"%s "c_white"выплатил Вам премию в размере "c_green"%d$", PlayerInfo[playerid][name], gangpay_sum);
				SendClientMessage(i, -1, scm_str);
			}
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно выдали премиальные членам Вашей организации.");
			return DeletePVar(playerid, "gangpay_sum");
		}
		case d_gangtop:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					mysql_tquery(sql_connection, "SELECT `u_name`,`u_capture_kills`,`u_captures` FROM `users` ORDER BY `users`.`u_capture_kills` DESC LIMIT 10", "callback_gangtop_killers", "i", playerid);
				}
				case 1:
				{
					mysql_tquery(sql_connection, "SELECT `u_name`,`u_capture_start` FROM `users` ORDER BY `users`.`u_capture_start` DESC LIMIT 10", "callback_gangtop_captures", "i", playerid);
				}
			}
		}
		case d_gangtop_info:
		{
			if(!response) return 1;
			show_dialog(playerid, d_gangtop, DIALOG_STYLE_LIST, ""c_server"Список лучших", "Лучшие стрелки\nТоп захватчиков", "Выбрать", "Назад");
		}
		case d_ganginfo:
		{
			if(!response) return 1;
			new gang_gz_count,
				gang_id = listitem + 18;
			for(new i = 0; i < gz_count; i ++)
			{
				if(gz_info[i][gz_owner] == gang_id)gang_gz_count ++;
			}
			new Cache:_result,
				member_count,
				points_count;


			new query_string[62];
			format(query_string, sizeof(query_string),"SELECT `u_id` FROM `users` WHERE  `u_member` = '%d'", gang_id);
			_result = mysql_query(sql_connection, query_string);
			member_count = cache_num_rows();
			cache_delete(_result);

			format(global_string, 302,"\
			"c_grey"Банда: {%s}%s\n\
			"c_grey"Количество территорий: "c_white"%d\n\
			"c_grey"Количество бандитов: "c_white"%d\n\n\
			"c_server"Контролируемые точки:"c_grey"\n",
			f_info[gang_id -1][f_chat_color],
			f_info[gang_id -1][f_name],
			gang_gz_count,
			member_count);

			if(gz_info[84][gz_owner] == gang_id)strcat(global_string, ""c_grey"-"c_white"Miko guns\n"), points_count ++;
			if(gz_info[39][gz_owner] == gang_id)strcat(global_string, ""c_grey"-"c_white"Наркопритон\n"), points_count ++;
			if(gz_info[47][gz_owner] == gang_id)strcat(global_string, ""c_grey"-"c_white"Спортзал\n"), points_count ++;
			if(gz_info[47][gz_owner] == gang_id)strcat(global_string, ""c_grey"-"c_white"Ben guns\n"), points_count ++;
			if(gz_info[64][gz_owner] == gang_id)strcat(global_string, ""c_grey"-"c_white"Emmet guns\n"), points_count ++;
			if(gz_info[50][gz_owner] == gang_id)strcat(global_string, ""c_grey"-"c_white"Автомойка\n"), points_count ++;


			if(points_count == 0)strcat(global_string, ""c_grey"-"c_white"Отсутствуют");
			else
			{
				format(query_string, sizeof(query_string), "\nВсего контролируемых точек: "c_white"%d", points_count);
				strcat(global_string, query_string);
			}
			show_dialog(playerid, d_ganginfo_stats, DIALOG_STYLE_MSGBOX, ""c_server"Информация о банде", global_string, "Назад", "Закрыть");
			return 1;
		}
		case d_ganginfo_stats:
		{
			if(!response) return 1;
			global_string[0] = EOS;

			for(new i = 0; i < 5; i ++)
			{
				strcat(global_string, "{");
				strcat(global_string, f_info[i + 17][f_chat_color]);
				strcat(global_string, "}");
				strcat(global_string, f_info[i + 17][f_name]);
				strcat(global_string, "\n");
			}
			show_dialog(playerid, d_ganginfo, DIALOG_STYLE_LIST, ""c_server"Информация о бандах", global_string, "Выбрать", "Назад");
		}
		case d_service:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:show_dialog(playerid, d_service_cop, 1, ""c_server"Вызвать полицию", ""c_white"Опишите место где вы находитесь\n"c_grey"* Сообщение должно состоять из 6 до 20 символов.", "Принять", "Назад");
				case 1:show_dialog(playerid, d_service_med, 1, ""c_server"Вызвать скорую помощь", ""c_white"Опишите место где вы находитесь\n"c_grey"* Сообщение должно состоять из 6 до 20 символов.", "Принять", "Назад");
				case 2:show_dialog(playerid, d_service_taxi, 1, ""c_server"Вызвать такси", ""c_white"Опишите место где вы находитесь\n"c_grey"* Сообщение должно состоять из 6 до 20 символов.", "Принять", "Назад");
				case 3:show_dialog(playerid, d_service_mech, 1, ""c_server"Вызвать механика", ""c_white"Опишите место где вы находитесь\n"c_grey"* Сообщение должно состоять из 6 до 20 символов.", "Принять", "Назад");
				case 4:show_dialog(playerid, d_service_prod, 1, ""c_server"Доставка продуктов", ""c_grey"* Количество продуктов в холодильнике не может превышать 500.\n* Cтоимость 1 продукта составляет "c_server"10$\n\n"c_white"Введите количество продуктов, которое желаете заказать на дом:", "Принять", "Назад");
			}
		}
		case d_service_prod:
		{
			if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
			if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");
			if(!PlayerInfo[playerid][number]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет телефона.");
			if(!p_t_info[playerid][phone_toggled]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас отключен мобильный телефон.");
			if(p_t_info[playerid][phone_id] != INVALID_PLAYER_ID || is_ether_calling {playerid} != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Закончите текущий разговор.");
			if(!response) return show_dialog(playerid, d_service, DIALOG_STYLE_LIST, ""c_server"Сервисы", "Полиция\nСкорая помощь\nТакси\nМеханик\nДоставка продуктов", "Выбрать", "Назад");
			if(PlayerInfo[playerid][house] == -1) return show_dialog(playerid, d_service_prod, 1, ""c_server"Доставка продуктов", ""c_orange_red"* У Вас нет дома для заказа продуктов\n\n"c_white"Введите количество продуктов, которое желаете заказать на дом:", "Принять", "Назад");

			new product_count = strval(inputtext);
			if(product_count < 5 || product_count > 500) return show_dialog(playerid, d_service_prod, 1, ""c_server"Доставка продуктов", ""c_orange_red"* Количество продуктов в холодильнике не может превышать 500.\n"c_grey"* Cтоимость 1 продукта составляет "c_server"10$\n\n"c_white"Введите количество продуктов, которое желаете заказать на дом:", "Принять", "Назад");
			new house_id = PlayerInfo[playerid][house] -1;
			if(h_info[house_id][h_prods] + product_count > 500) return show_dialog(playerid, d_service_prod, 1, ""c_server"Доставка продуктов", ""c_orange_red"* Количество продуктов в холодильнике не может превышать 500.\n"c_grey"* Cтоимость 1 продукта составляет "c_server"10$\n\n"c_white"Введите количество продуктов, которое желаете заказать на дом:", "Принять", "Назад");
			if(PlayerInfo[playerid][bank] < product_count * 10) return show_dialog(playerid, d_service_prod, 1, ""c_server"Доставка продуктов", ""c_orange_red"* Недостаточно средств на банковском счету для заказа.\n"c_grey"* Cтоимость 1 продукта составляет "c_server"10$\n\n"c_white"Введите количество продуктов, которое желаете заказать на дом:", "Принять", "Назад");
			h_info[house_id][h_prods] += product_count;
			PlayerInfo[playerid][bank] -= product_count * 10;
			update_int_sql(playerid, "u_bank", PlayerInfo[playerid][bank]);
			new scm_string[128];
			format(scm_string, sizeof(scm_string), ""c_green"* "c_white"Вы успешно заказали доставку "c_green"%d продуктов "c_white"на дом за "c_green"%d$", product_count, product_count * 10);
			SendClientMessage(playerid, col_white, scm_string);
			return 1;
		}
		case d_service_mech:
		{
			if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
			if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");
			if(!PlayerInfo[playerid][number]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет телефона.");
			if(!p_t_info[playerid][phone_toggled]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас отключен мобильный телефон.");
			if(p_t_info[playerid][phone_id] != INVALID_PLAYER_ID || is_ether_calling {playerid} != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Закончите текущий разговор.");
			if(!response) return show_dialog(playerid, d_service, DIALOG_STYLE_LIST, ""c_server"Сервисы", "Полиция\nСкорая помощь\nТакси\nМеханик\nДоставка продуктов", "Выбрать", "Назад");
			if(GetPlayerInterior(playerid)!= 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPlayerVirtualWorld(playerid)!= 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Не удалось определить Ваше местоположение. Выйдите из помещения.");

			if(strlen(inputtext)< 6 || strlen(inputtext)> 20) return show_dialog(playerid, d_service_mech, 1, ""c_server"Вызвать механика", ""c_white"Опишите место где вы находитесь\n"c_orange_red"* Сообщение должно состоять из 6 до 20 символов.", "Принять", "Назад");

			new full = 0;
			foreach(new i : logged_players)
			{
				if(PlayerInfo[i][job] == job_mechanic && i != playerid)full ++;
			}
			if(!full)SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"В данный момент нет механиков на дежурстве.");
			else SendClientMessage(playerid, col_white, ""c_green"* "c_white"Ваш запрос был отправлен диспетчеру службы механиков. Ожидайте ответа.");

			new trr[3];
			if(IsPlayerToSquare(playerid, -891.3302, -2950.0190, 2915.9917, 560.3257)) trr = "LS";
			else if(IsPlayerToSquare(playerid, -2929.6589, -2889.1660, -1326.9077, 1493.1770)) trr = "SF";
			else trr = "LV";

			call_mechanic {playerid} = 1;

			new scm_string[144];
			format(scm_string, 144, "%s[%i] {FFFF00}с города "c_white"%s{FFFF00}, вызывает механика, местоположение: "c_white"%s", PlayerInfo[playerid][name], playerid, trr, inputtext);
			foreach(new i : logged_players)
			{
				if(PlayerInfo[i][job] == job_mechanic)
				{
					SendClientMessage(i, col_white, scm_string);
					SendClientMessage(i, col_lblue, "Чтобы принять вызов используйте "c_white"/gomechanic");
				}
			}
			return 1;
		}
		case d_service_taxi:
		{
			if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
			if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");
			if(!PlayerInfo[playerid][number]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет телефона.");
			if(!p_t_info[playerid][phone_toggled]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас отключен мобильный телефон.");
			if(p_t_info[playerid][phone_id] != INVALID_PLAYER_ID || is_ether_calling {playerid} != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Закончите текущий разговор.");
			if(!response) return show_dialog(playerid, d_service, DIALOG_STYLE_LIST, ""c_server"Сервисы", "Полиция\nСкорая помощь\nТакси\nМеханик\nДоставка продуктов", "Выбрать", "Назад");
			if(GetPlayerInterior(playerid)!= 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPlayerVirtualWorld(playerid)!= 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Не удалось определить Ваше местоположение. Выйдите из помещения.");

			if(strlen(inputtext)< 6 || strlen(inputtext)> 20) return show_dialog(playerid, d_service_taxi, 1, ""c_server"Вызвать такси", ""c_white"Опишите место где вы находитесь\n"c_orange_red"* Сообщение должно состоять из 6 до 20 символов.", "Принять", "Назад");

			new full = 0;
			foreach(new i : logged_players)
			{
				if(PlayerInfo[i][job] == job_taxi && i != playerid)full ++;
			}
			if(!full)SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"В данный момент нет таксистов на дежурстве.");
			else SendClientMessage(playerid, col_white, ""c_green"* "c_white"Ваш запрос был отправлен диспетчеру такси. Ожидайте ответа.");

			new trr[3];
			if(IsPlayerToSquare(playerid, -891.3302, -2950.0190, 2915.9917, 560.3257)) trr = "LS";
			else if(IsPlayerToSquare(playerid, -2929.6589, -2889.1660, -1326.9077, 1493.1770)) trr = "SF";
			else trr = "LV";

			call_taxi {playerid} = 1;

			new scm_string[144];
			format(scm_string, 144, "%s[%i] {FFFF00}с города "c_white"%s{FFFF00}, вызывает такси, местоположение: "c_white"%s", PlayerInfo[playerid][name], playerid, trr, inputtext);
			foreach(new i : logged_players)
			{
				if(PlayerInfo[i][job] == job_taxi)
				{
					SendClientMessage(i, col_white, scm_string);
					SendClientMessage(i, col_lblue, "Чтобы принять вызов используйте "c_white"/gotaxi");
				}
			}
			return 1;
		}
		case d_service_med:
		{
			if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
			if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");
			if(!PlayerInfo[playerid][number]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет телефона.");
			if(!p_t_info[playerid][phone_toggled]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас отключен мобильный телефон.");
			if(p_t_info[playerid][phone_id] != INVALID_PLAYER_ID || is_ether_calling {playerid} != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Закончите текущий разговор.");
			if(!response) return show_dialog(playerid, d_service, DIALOG_STYLE_LIST, ""c_server"Сервисы", "Полиция\nСкорая помощь\nТакси\nМеханик\nДоставка продуктов", "Выбрать", "Назад");
			if(GetPlayerInterior(playerid)!= 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPlayerVirtualWorld(playerid)!= 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Не удалось определить Ваше местоположение. Выйдите из помещения.");

			if(strlen(inputtext)< 6 || strlen(inputtext)> 20) return show_dialog(playerid, d_service_med, 1, ""c_server"Вызвать скорую помощь", ""c_white"Опишите место где вы находитесь\n"c_orange_red"* Сообщение должно состоять из 6 до 20 символов.", "Принять", "Назад");

			new full = 0;
			foreach(new i : logged_players)
			{
				if(medic_player(i) && i != playerid)full ++;
			}
			if(!full)SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"В данный момент нет медиков на дежурстве.");
			else SendClientMessage(playerid, col_white, ""c_green"* "c_white"Ваш запрос был отправлен в дежурную скорой помощи. Ожидайте ответа.");

			new trr[3];
			if(IsPlayerToSquare(playerid, -891.3302, -2950.0190, 2915.9917, 560.3257)) trr = "LS";
			else if(IsPlayerToSquare(playerid, -2929.6589, -2889.1660, -1326.9077, 1493.1770)) trr = "SF";
			else trr = "LV";

			call_medic {playerid} = 1;

			new scm_string[144];
			format(scm_string, 144, "%s[%i] {FFFF00}с города "c_white"%s{FFFF00}, вызывает скорую помощь, местоположение: "c_white"%s", PlayerInfo[playerid][name], playerid, trr, inputtext);
			foreach(new i : logged_players)
			{
				if(medic_player(i))
				{
					SendClientMessage(i, col_white, scm_string);
					SendClientMessage(i, col_lblue, "Чтобы принять вызов используйте "c_white"/gomedhelp");
				}
			}
			return 1;
		}
		case d_service_cop:
		{
			if(GetPVarInt(playerid, "PlayerCuffed")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы в наручниках.");
			if(GetPVarInt(playerid, "PlayerTied")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы связаны.");
			if(!PlayerInfo[playerid][number]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас нет телефона.");
			if(!p_t_info[playerid][phone_toggled]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас отключен мобильный телефон.");
			if(p_t_info[playerid][phone_id] != INVALID_PLAYER_ID || is_ether_calling {playerid} != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Закончите текущий разговор.");
			if(!response) return show_dialog(playerid, d_service, DIALOG_STYLE_LIST, ""c_server"Сервисы", "Полиция\nСкорая помощь\nТакси\nМеханик\nДоставка продуктов", "Выбрать", "Назад");
			if(GetPlayerInterior(playerid)!= 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Не удалось определить Ваше местоположение. Выйдите из помещения.");
			if(GetPlayerVirtualWorld(playerid)!= 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Не удалось определить Ваше местоположение. Выйдите из помещения.");

			if(strlen(inputtext) < 6 || strlen(inputtext) > 20) return show_dialog(playerid, d_service_cop, 1, ""c_server"Вызвать полицию", ""c_white"Опишите место где вы находитесь\n"c_orange_red"* Сообщение должно состоять из 6 до 20 символов.", "Принять", "Назад");

			new full = 0;
			foreach(new i : logged_players)
			{
				if(cop_player(i) && i != playerid)full ++;
			}
			if(!full)SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"В данный момент нет полицейских на дежурстве.");
			else SendClientMessage(playerid, col_white, ""c_green"* "c_white"Ваш запрос был отправлен полиции. Ожидайте ответа.");

			call_police {playerid} = 1;

			new trr[3];
			if(IsPlayerToSquare(playerid, -891.3302, -2950.0190, 2915.9917, 560.3257)) trr = "LS";
			else if(IsPlayerToSquare(playerid, -2929.6589, -2889.1660, -1326.9077, 1493.1770)) trr = "SF";
			else trr = "LV";

			new scm_string[144];
			format(scm_string, 144, "%s[%i] {FFFF00}с города "c_white"%s{FFFF00}, вызывает полицию, местоположение: "c_white"%s", PlayerInfo[playerid][name], playerid, trr, inputtext);
			foreach(new i : logged_players)
			{
				if(cop_player(i))
				{
					SendClientMessage(i, col_white, scm_string);
					SendClientMessage(i, col_lblue, "Чтобы принять вызов используйте "c_white"/gopolice");
				}
			}
			return 1;
		}
		case d_direction:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					new leaders_count;
					global_string[0] = EOS;
					strcat(global_string, "{cccc99}Организация -Должность -Имя -Телефон\n\n"c_white"");
					foreach(new i: logged_players)
					{
						if(!IsPlayerConnected(i)) continue;
						if((PlayerInfo[i][leader] == 0 || PlayerInfo[i][member] == 0 || PlayerInfo[i][rank] == 0 || PlayerInfo[i][number] == 0 || PlayerInfo[i][admin] != 0) &&(PlayerInfo[i][member] != 11 || PlayerInfo[i][rank] < 6)) continue;
						new line_string[116];
						if(pl_afk_time[i] >= 0)
						{
							new afk_text[36];
							format(afk_text, 36, " {FFB859}[AFK: %s]"c_white"", convert_time(pl_afk_time[i]));

							format(line_string, sizeof(line_string), "%s -%s -%s[%d] -%d%s\n",
							f_info[PlayerInfo[i][member] -1][f_name], f_rank[PlayerInfo[i][member] -1][PlayerInfo[i][rank] -1],
							PlayerInfo[i][name], i, PlayerInfo[i][number], afk_text);
						}
						else
						{
							format(line_string, sizeof(line_string), "%s -%s -%s[%d] -%d\n",
							f_info[PlayerInfo[i][member] -1][f_name], f_rank[PlayerInfo[i][member] -1][PlayerInfo[i][rank] -1],
							PlayerInfo[i][name], i, PlayerInfo[i][number]);
						}
						strcat(global_string, line_string);
						leaders_count ++;
					}
					if(leaders_count)show_dialog(playerid, d_direction_info, DIALOG_STYLE_MSGBOX, ""c_server"Лидеры онлайн", global_string, "Назад", "Закрыть");
					else SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"В сети нет ни одного лидера."), show_dialog(playerid, d_direction, DIALOG_STYLE_LIST, ""c_server"Справочник","1. Лидеры организации онлайн\n2. Механики\n3. Таксисты\n4. Репортёры", "Далее", "Отмена");
				}
				case 1:
				{
					new leaders_count;
					global_string[0] = EOS;
					strcat(global_string, "{cccc99}Имя -Телефон\n\n"c_white"");
					foreach(new i: logged_players)
					{
						if(!IsPlayerConnected(i)) continue;
						if(PlayerInfo[i][job] != job_mechanic) continue;
						new line_string[116];
						if(pl_afk_time[i] >= 0)
						{
							new afk_text[36];
							format(afk_text, 36, " {FFB859}[AFK: %s]"c_white"", convert_time(pl_afk_time[i]));

							format(line_string, sizeof(line_string), "%s[%d] -%d%s\n",
							PlayerInfo[i][name], i, PlayerInfo[i][number], afk_text);
						}
						else
						{
							format(line_string, sizeof(line_string), " %s[%d] -%d\n",
							PlayerInfo[i][name], i, PlayerInfo[i][number]);
						}
						strcat(global_string, line_string);
						leaders_count ++;
					}
					if(leaders_count)show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Список механиков", global_string, "Закрыть", "");
					else SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"В сети нет ни одного механика."), show_dialog(playerid, d_direction, DIALOG_STYLE_LIST, ""c_server"Справочник","1. Лидеры организации онлайн\n2. Механики\n3. Таксисты\n4. Репортёры", "Далее", "Отмена");
				}
				case 2:
				{
					new leaders_count;
					global_string[0] = EOS;
					strcat(global_string, "{cccc99}Имя -Телефон\n\n"c_white"");
					foreach(new i: logged_players)
					{
						if(!IsPlayerConnected(i)) continue;
						if(PlayerInfo[i][job] != job_taxi) continue;
						new line_string[116];
						if(pl_afk_time[i] >= 0)
						{
							new afk_text[36];
							format(afk_text, 36, " {FFB859}[AFK: %s]"c_white"", convert_time(pl_afk_time[i]));

							format(line_string, sizeof(line_string), "%s[%d] -%d%s\n",
							PlayerInfo[i][name], i, PlayerInfo[i][number], afk_text);
						}
						else
						{
							format(line_string, sizeof(line_string), " %s[%d] -%d\n",
							PlayerInfo[i][name], i, PlayerInfo[i][number]);
						}
						strcat(global_string, line_string);
						leaders_count ++;
					}
					if(leaders_count)show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Список таксистов", global_string, "Закрыть", "");
					else SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"В сети нет ни одного таксиста."), show_dialog(playerid, d_direction, DIALOG_STYLE_LIST, ""c_server"Справочник","1. Лидеры организации онлайн\n2. Механики\n3. Таксисты\n4. Репортёры", "Далее", "Отмена");
				}
				case 3:
				{
					new leaders_count;
					global_string[0] = EOS;
					strcat(global_string, "{cccc99}Организация -Должность -Имя -Телефон\n\n"c_white"");
					foreach(new i: logged_players)
					{
						if(!IsPlayerConnected(i)) continue;
						if(!radio_player(i)) continue;
						new line_string[116];
						if(pl_afk_time[i] >= 0)
						{
							new afk_text[36];
							format(afk_text, 36, " {FFB859}[AFK: %s]"c_white"", convert_time(pl_afk_time[i]));

							format(line_string, sizeof(line_string), "%s -%s -%s[%d] -%d%s\n",
							f_info[PlayerInfo[i][member] -1][f_name], f_rank[PlayerInfo[i][member] -1][PlayerInfo[i][rank] -1],
							PlayerInfo[i][name], i, PlayerInfo[i][number], afk_text);
						}
						else
						{
							format(line_string, sizeof(line_string), "%s -%s -%s[%d] -%d\n",
							f_info[PlayerInfo[i][member] -1][f_name], f_rank[PlayerInfo[i][member] -1][PlayerInfo[i][rank] -1],
							PlayerInfo[i][name], i, PlayerInfo[i][number]);
						}
						strcat(global_string, line_string);
						leaders_count ++;
					}
					if(leaders_count)show_dialog(playerid, d_direction_info, DIALOG_STYLE_MSGBOX, ""c_server"Репортёры онлайн", global_string, "Назад", "Закрыть");
					else SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"В сети нет ни одного репортёра."), show_dialog(playerid, d_direction, DIALOG_STYLE_LIST, ""c_server"Справочник","1. Лидеры организации онлайн\n2. Механики\n3. Таксисты\n4. Репортёры", "Далее", "Отмена");
				}
			}
		}
		case d_direction_info:
		{
			if(response) return show_dialog(playerid, d_direction, DIALOG_STYLE_LIST, ""c_server"Справочник","1. Лидеры организации онлайн\n2. Механики\n3. Таксисты\n4. Репортёры", "Далее", "Отмена");
			return 1;
		}

		case d_crim_ammo_shop:
		{
			if(!response) return 1;
			if(listitem == 6)
			{
				if(PlayerInfo[playerid][money] < crim_ammo_prices[listitem]) return SendClientMessage(playerid, col_gray, "У вас не достаточно наличных для покупки");

				give_money(playerid, -crim_ammo_prices[listitem]);
				give_weapon(playerid, crim_ammo_guns[listitem], 1);

				new gun_name[32 + 1],
					_text_string[98];

				GetWeaponName(crim_ammo_guns[listitem], gun_name, 32);

				format(_text_string, 98, ""c_green"* "c_white"Вы приобрели "c_green"%s"c_white" за "c_green"%i$", gun_name, crim_ammo_prices[listitem]);
				SendClientMessage(playerid, col_white, _text_string);
				return 1;
			}
			else if(listitem == 7)
			{
				if(PlayerInfo[playerid][money] < crim_ammo_prices[listitem]) return SendClientMessage(playerid, col_gray, "У вас не достаточно наличных для покупки");

				give_money(playerid, -crim_ammo_prices[listitem]);
				give_weapon(playerid, crim_ammo_guns[listitem], 1);

				new gun_name[32 + 1],
					_text_string[98];

				GetWeaponName(crim_ammo_guns[listitem], gun_name, 32);

				format(_text_string, 98, ""c_green"* "c_white"Вы приобрели "c_green"%s"c_white" за "c_green"%i$", gun_name, crim_ammo_prices[listitem]);
				SendClientMessage(playerid, col_white, _text_string);
				return 1;
			}
			show_dialog(playerid, d_crim_ammo_shop_select, DIALOG_STYLE_INPUT, ""c_server"Патроны", ""c_white"Введите количество патрон, которое желаете приобрести:", "Далее", "Отмена");
			SetPVarInt(playerid, "slot_ammo", listitem);
			return 1;
		}
		case d_crim_ammo_shop_select:
		{
			if(!response) return DeletePVar(playerid, "slot_ammo");
			new slot = GetPVarInt(playerid,"slot_ammo");

			if(strval(inputtext)<= 0 || strval(inputtext)> 500) return show_dialog(playerid, d_crim_ammo_shop_select, DIALOG_STYLE_INPUT, ""c_server"Патроны", ""c_orange_red"* Количество патрон должно быть от 1 до 500\n\n"c_white"Введите количество патрон, которое желаете приобрести:", "Далее", "Отмена");
			if(PlayerInfo[playerid][money] < crim_ammo_prices[slot]* strval(inputtext)) return show_dialog(playerid, d_crim_ammo_shop_select, DIALOG_STYLE_INPUT, ""c_server"Патроны", ""c_orange_red"* У Вас недостаточно средств для приобретения\n\n"c_white"Введите количество патрон, которое желаете приобрести:", "Далее", "Отмена");




			give_money(playerid, -(crim_ammo_prices[slot]* strval(inputtext)));
			give_weapon(playerid, crim_ammo_guns[slot], strval(inputtext));

			new gun_name[32 + 1],
				_text_string[98];
		    GetWeaponName(crim_ammo_guns[slot], gun_name, 32);

			format(_text_string, 98, "Вы приобрели %s (%i патронов) за %i$",gun_name, strval(inputtext), crim_ammo_prices[slot]* strval(inputtext));
			SendClientMessage(playerid, col_white, _text_string);
		    DeletePVar(playerid,"slot_ammo");

			switch(GetPlayerVirtualWorld(playerid))
			{
				case 1: f_info[gz_info[47][gz_owner] -1][f_money] +=(crim_ammo_prices[slot]* strval(inputtext)) / 2;
				case 2: f_info[gz_info[84][gz_owner] -1][f_money] +=(crim_ammo_prices[slot]* strval(inputtext)) / 2;
				case 3: f_info[gz_info[64][gz_owner] -1][f_money] +=(crim_ammo_prices[slot]* strval(inputtext)) / 2;
			}
			global_string = ""c_white"Товар\t"c_white"Цена\n";
			for(new i = 0; i < 8; i++)
			{
				GetWeaponName(crim_ammo_guns[i], gun_name, 16);
				format(global_string, 860, "%s"c_server"%d | "c_white"%s\t"c_green"%i$\n", global_string, i + 1, gun_name, crim_ammo_prices[i]);
			}
			
			new str[128];
			
			switch(GetPlayerVirtualWorld(playerid))
			{
				case 1: format(str,sizeof(str),""scm_dialog"Аммуниция (Контроль: {%s}%s"c_white")", f_info[gz_info[47][gz_owner] -1][f_chat_color], f_info[gz_info[47][gz_owner] -1][f_name]);
				case 2: format(str,sizeof(str),""scm_dialog"Аммуниция (Контроль: {%s}%s"c_white")", f_info[gz_info[84][gz_owner] -1][f_chat_color], f_info[gz_info[84][gz_owner] -1][f_name]);
				case 3: format(str,sizeof(str),""scm_dialog"Аммуниция (Контроль: {%s}%s"c_white")", f_info[gz_info[64][gz_owner] -1][f_chat_color], f_info[gz_info[64][gz_owner] -1][f_name]);
			}

			show_dialog(playerid, d_crim_ammo_shop, DIALOG_STYLE_TABLIST_HEADERS, str, global_string, !"Далее", !"Отмена");
			return 1;
		}
		case d_gym_training:
		{
			if(!response) return 1;
			if(is_gym_training {playerid} == 0)
			{
				if(PlayerInfo[playerid][money] < 500) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средст для проведения тренировки.");
				give_money(playerid, -500);
				if(GetPlayerVirtualWorld(playerid) ==  1)
				{
					f_info[gz_info[47][gz_owner] -1][f_money] += 500;
				}
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы начали тренировку. Бейте по грушам для улучшения техники боя.");
				is_gym_training {playerid} = 1;
				SetPlayerSkin(playerid, 81);
			}
			else
			{
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно завершили тренировку.");
				is_gym_training {playerid} = 0;

				if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
				else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
			}
		}
		case d_sellsim_accept:
		{
			if(seller_id[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Продавец покинул игру.");
			if(!response)
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"Игрок отказался от покупки сим-карты.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			if(PlayerInfo[playerid][money] < sell_price[seller_id[playerid]])
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"У игрока недостаточно денег для приобретения сим-карты.");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно денег для приобретения сим-карты.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			if(PlayerInfo[seller_id[playerid]][number] != sell_type[seller_id[playerid]])
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"У Вас уже нет прежней сим-карты.");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У игрока уже нет прежней сим-карты.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				sell_type[seller_id[playerid]] = -1;
				return 1;
			}

			new _text_string[128];
			format(_text_string, sizeof(_text_string), ""c_green"* %s"c_white" продал Вам сим-карту с номером "c_green"%d "c_white"за "c_green"%d$"c_white".", PlayerInfo[seller_id[playerid]][name], PlayerInfo[seller_id[playerid]][number], sell_price[seller_id[playerid]]);
			SendClientMessage(playerid, col_white, _text_string);
			format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы продали свою сим-карту "c_green"%s"c_white" за "c_green"%d$"c_white".", PlayerInfo[playerid][name], sell_price[seller_id[playerid]]);
			SendClientMessage(seller_id[playerid], col_white, _text_string);

			give_money(playerid,-sell_price[seller_id[playerid]]);
			give_money(seller_id[playerid], sell_price[seller_id[playerid]]);
			insert_money_log(seller_id[playerid], playerid, sell_price[seller_id[playerid]], "симкарта");

			PlayerInfo[playerid][number] = PlayerInfo[seller_id[playerid]][number];
			update_int_sql(playerid, "u_number", PlayerInfo[playerid][number]);

			PlayerInfo[seller_id[playerid]][number] = 0;
			update_int_sql(seller_id[playerid], "u_number", PlayerInfo[seller_id[playerid]][number]);


			buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
			sell_price[seller_id[playerid]] = -1;
			seller_id[playerid] = INVALID_PLAYER_ID;
			sell_type[seller_id[playerid]] = -1;
		}
		case d_family_hall:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0: show_dialog(playerid, d_family_create, DIALOG_STYLE_INPUT, !""scm_dialog"Создание семьи", !""c_white"Стоимость регистрации семьи составляет "c_green"3.000.000$\n"c_white"Введите название своей семьи:", !"Далее", !"Назад");
				case 1: show_dialog(playerid, d_family_rename, DIALOG_STYLE_INPUT, !""scm_dialog"Переименование семьи", !""c_white"Стоимость внесения информационных поправок в архив составляет "c_green"750.000$\n"c_white"Введите новое название своей семьи:", !"Далее", !"Назад");
				case 2:
				{
					SetPVarInt(playerid, !"ofm_list_page", 1);
					mysql_tquery(sql_connection, "SELECT `fam_name`, `fam_chat_color` FROM `family` WHERE 1", "callback_familylist", "i", playerid);
				}
			}
			return 1;
		}
		case d_family_list:
		{
			if(response)
			{
				if(GetPVarInt(playerid, "ofm_list_page") == 1)
				{
					DeletePVar(playerid, "ofm_list_page");
					DeletePVar(playerid, "ofm_list_rows");
					return show_dialog(playerid, d_family_hall, DIALOG_STYLE_LIST, !""scm_dialog"Архив семей", !"Создать семью\nПереименовать семью\nСписок семей", !"Выбрать", !"Закрыть");
				}
				else
				{
					mysql_tquery(sql_connection, "SELECT `fam_name` FROM `family` WHERE 1", "callback_familylist", "i", playerid);
					SetPVarInt(playerid, "ofm_list_page", GetPVarInt(playerid, "ofm_list_page")-1);
				}
				return 1;
			}
			else
			{
				if((GetPVarInt(playerid, "ofm_list_page")+ 1)* 20 >= GetPVarInt(playerid, "ofm_list_rows"))
				{
					SendClientMessage(playerid, col_gray, "Вы находитесь на последней странице архива семей штата.");
					mysql_tquery(sql_connection, "SELECT `fam_name` FROM `family` WHERE 1", "callback_familylist", "i", playerid);
					SetPVarInt(playerid, "ofm_list_page", GetPVarInt(playerid, "ofm_list_page"));
					return 1;
				}
				mysql_tquery(sql_connection, "SELECT `fam_name` FROM `family` WHERE 1", "callback_familylist", "i", playerid);
				SetPVarInt(playerid, "ofm_list_page", GetPVarInt(playerid, "ofm_list_page")+ 1);
				return 1;
			}
		}
		case d_family_rename:
		{
			if(!response) return show_dialog(playerid, d_family_hall, DIALOG_STYLE_LIST, !""scm_dialog"Архив семей", !"Создать семью\nПереименовать семью\nСписок семей", !"Выбрать", !"Закрыть");
			if(PlayerInfo[playerid][money] < 750000) return show_dialog(playerid, d_family_rename, DIALOG_STYLE_INPUT, !""scm_dialog"Переименование семьи", !""c_white"Стоимость внесения информационных поправок в архив составляет "c_green"750.000$\n"c_white"Введите новое название своей семьи:", !"Далее", !"Назад");
			if(PlayerInfo[playerid][family] == 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");
			if(strlen(inputtext) < 2 || strlen(inputtext) > 68) return show_dialog(playerid, d_family_rename, DIALOG_STYLE_INPUT, !""scm_dialog"Переименование семьи", !""c_grey"Название семьи не может быть менее 2 символов или превышать 68 символов\n"c_white"Стоимость внесения информационных поправок в архив составляет "c_green"750.000$\n"c_white"Введите новое название своей семьи:", !"Далее", !"Назад");
			if(is_text_invalid(inputtext) || is_russian_text(inputtext)) return show_dialog(playerid, d_family_rename, DIALOG_STYLE_INPUT, !""scm_dialog"Переименование семьи", !""c_grey"Название семьи содержит некорректные символы\n"c_white"Стоимость внесения информационных поправок в архив составляет "c_green"750.000$\n"c_white"Введите новое название своей семьи:", !"Далее", !"Назад");
			if(find_family_name(inputtext)) return show_dialog(playerid, d_family_rename, DIALOG_STYLE_INPUT, !""scm_dialog"Переименование семьи", !""c_grey"Название уже занято другой семьёй\n"c_white"Стоимость внесения информационных поправок в архив составляет "c_green"750.000$\n"c_white"Введите новое название своей семьи:", !"Далее", !"Назад");

			new family_id = PlayerInfo[playerid][family], query_string[120];
			mysql_format(sql_connection, query_string, sizeof(query_string), "UPDATE `family` SET `fam_name`='%e' WHERE `fam_id`='%d' LIMIT 1", inputtext, family_id);
			mysql_query(sql_connection, query_string);

			give_money(playerid, -750000);
			insert_money_log(playerid, INVALID_PLAYER_ID, -750000, "изменение названия семьи");

			format(family_info[family_id -1][fam_name], 68, inputtext);

			foreach(new i: family_players[family_id])
			{
				if(PlayerInfo[i][family] != PlayerInfo[playerid][family]) continue;

				new text_string[95];
				format(text_string, sizeof(text_string), "{%s}%s "c_white"Family", family_info[family_id -1][fam_chat_color], family_info[family_id -1][fam_name]);
				UpdateDynamic3DTextLabelText(PlayerInfo[i][family_text], -1, text_string);
			}

			new text_string[95];
			format(text_string, sizeof(text_string), ""scm_info"Вы успешно переименовали семью: "c_gold"%s", family_info[family_id -1][fam_name]);
			SendClientMessage(playerid, col_white, text_string);
		}
		case d_family_create:
		{
			if(!response) return show_dialog(playerid, d_family_hall, DIALOG_STYLE_LIST, !""scm_dialog"Архив семей", !"Создать семью\nПереименовать семью\nСписок семей", !"Выбрать", !"Закрыть");
			if(PlayerInfo[playerid][money] < 3000000) return SendClientMessage(playerid, col_white, !""scm_error"У Вас недостаточно средств.");
			if(PlayerInfo[playerid][family] > 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы уже состоите в семье.");
			if(strlen(inputtext) < 2 || strlen(inputtext) > 68) return show_dialog(playerid, d_family_create, DIALOG_STYLE_INPUT, !""scm_dialog"Создание семьи", !""c_grey"Название семьи не может быть менее 2 символов или превышать 68 символов\n"c_white"Стоимость регистрации семьи составляет "c_green"3.000.000$\n"c_white"Введите название своей семьи:", !"Далее", !"Назад");
			if(is_text_invalid(inputtext) || is_russian_text(inputtext)) return show_dialog(playerid, d_family_create, DIALOG_STYLE_INPUT, !""scm_dialog"Создание семьи", !""c_grey"Название семьи содержит некорректные символы\n"c_white"Стоимость регистрации семьи составляет "c_green"3.000.000$\n"c_white"Введите название своей семьи:", !"Далее", !"Назад");
			if(find_family_name(inputtext)) return show_dialog(playerid, d_family_create, DIALOG_STYLE_INPUT, !""scm_dialog"Создание семьи", !""c_grey"Название уже занято другой семьёй\n"c_white"Стоимость регистрации семьи составляет "c_green"3.000.000$\n"c_white"Введите название своей семьи:", !"Далее", !"Назад");

			SetPVarString(playerid, !"family_name", inputtext);
			show_dialog(playerid, d_family_create_type, DIALOG_STYLE_LIST, !""scm_dialog"Выберите тип семьи", !""c_server"1 | "c_white"Бизнес\n"c_server"2 | "c_white"Мафия", !"Выбрать", !"Назад");
        }
        case d_family_create_type:
        {
			if(!response) return show_dialog(playerid, d_family_create, DIALOG_STYLE_INPUT, !""scm_dialog"Создание семьи", !""c_white"Стоимость регистрации семьи составляет "c_green"3.000.000$\n"c_white"Введите название своей семьи:", !"Далее", !"Назад");
			if(PlayerInfo[playerid][money] < 3000000) return SendClientMessage(playerid, col_white, !""scm_error"У Вас недостаточно средств.");
			if(PlayerInfo[playerid][family] > 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы уже состоите в семье.");

			new family_names[70];
			GetPVarString(playerid, !"family_name", family_names, 68);

            give_money(playerid, -3000000);
            insert_money_log(playerid, INVALID_PLAYER_ID, -3000000, "создание семьи");

            new _last_family = find_last_family();
            PlayerInfo[playerid][family] = _last_family + 1;
            PlayerInfo[playerid][family_rang] = 3;

            family_info[_last_family][fam_type] = listitem;

            format(family_info[_last_family][fam_name], 68, family_names);
            format(family_info[_last_family][fam_creator], 24, PlayerInfo[playerid][name]);
            format(family_info[_last_family][fam_chat_color], 8, "FFFFFF");
            format(family_rank[_last_family][0], 30, "Член семьи");
            format(family_rank[_last_family][1], 30, "Заместитель");
            format(family_rank[_last_family][2], 30, "Глава семьи");

            family_info[_last_family][fam_settings][0] = 3;
            family_info[_last_family][fam_settings][1] = 3;
            family_info[_last_family][fam_settings][2] = 3;
            family_info[_last_family][fam_settings][3] = 3;
            family_info[_last_family][fam_settings][4] = 3;
            family_info[_last_family][fam_settings][5] = 3;
            family_info[_last_family][fam_settings][6] = 3;
            family_info[_last_family][fam_settings][7] = 3;

            family_info[_last_family][fam_rating] = 0;
            family_info[_last_family][fam_ticket] = 0;

            family_info[_last_family][fam_max_car] = 15;
            family_info[_last_family][fam_members] = 1;
            
			new fam_types[12];
			switch(family_info[_last_family][fam_type])
			{
				case 0: fam_types = "бизнес";
				case 1: fam_types = "мафиозную";
			}

            new query_string[170];
            mysql_format(sql_connection, query_string, sizeof(query_string), "INSERT INTO `family` (`fam_type`,`fam_name`,`fam_creator`,`fam_date`) VALUES ('%d','%s','%s',NOW())", family_info[_last_family][fam_type], family_names, PlayerInfo[playerid][name]);
            mysql_query(sql_connection, query_string);

            new family_id = PlayerInfo[playerid][family];
            Iter_Add(family_players[family_id], playerid);

            format(query_string, sizeof(query_string), "UPDATE `users` SET `u_family`='%d',`u_family_rank`='3',`u_family_date` = NOW() WHERE `u_id`='%d' LIMIT 1", PlayerInfo[playerid][family], PlayerInfo[playerid][id]);
            mysql_query(sql_connection, query_string);

            format(query_string, sizeof(query_string), "UPDATE `family` SET `fam_members`='%d' WHERE `fam_id`='%d' LIMIT 1", family_info[_last_family][fam_members], _last_family + 1);
            mysql_query(sql_connection, query_string);

            new text_string[144];
            format(text_string, sizeof(text_string), ""scm_info"Вы успешно создали %s семью "c_gold"%s"c_white". Управление семьей: "c_gold"/fmenu", fam_types, family_info[_last_family][fam_name]);
            SendClientMessage(playerid, col_white, text_string);

            family_count++;
        }
		case d_family:
		{
			if(!response) return 1;
			
			switch(family_info[PlayerInfo[playerid][family] -1][fam_type])
			{
				case 0:
				{
					switch(listitem)
					{
						case 0:
						{
							new family_id = PlayerInfo[playerid][family], nationality_string[28], line_string[75];
							switch(family_info[family_id -1][fam_nationality])
							{
								case 1: nationality_string = "американцы";
								case 2: nationality_string = "японцы";
								case 3: nationality_string = "итальянцы";
								case 4: nationality_string = "мексиканцы";
								case 5: nationality_string = "латиноамериканцы";
								case 6: nationality_string = "испанцы";
								case 7: nationality_string = "русские";
								case 8: nationality_string = "португальцы";
								case 9: nationality_string = "французы";
								default: nationality_string = "неизвестно";
							}

							new fam_types[12];
							switch(family_info[family_id -1][fam_type])
							{
								case 0: fam_types = "бизнес";
								case 1: fam_types = "мафия";
							}

							global_string[0] = EOS;
							format(line_string, sizeof(line_string), ""c_white"Семья {%s}%s\n\n", family_info[family_id -1][fam_chat_color], family_info[family_id -1][fam_name]);
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"Создатель семьи: {%s}%s\n", family_info[family_id -1][fam_chat_color], family_info[family_id -1][fam_creator]);
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"Тип семьи: {%s}%s\n", family_info[family_id -1][fam_chat_color], fam_types);
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"Национальность: {%s}%s\n", family_info[family_id -1][fam_chat_color], nationality_string);
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"Онлайн: {%s}%d чел.\n", family_info[family_id -1][fam_chat_color], Iter_Count(family_players[family_id]));
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"Состав семьи: {%s}%d чел.\n\n", family_info[family_id -1][fam_chat_color], family_info[family_id -1][fam_members]);
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"Доступно мест для транспорта: {%s}%d\n", family_info[family_id -1][fam_chat_color], family_info[family_id -1][fam_max_car]);
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"У Вашей семьи транспорта: {%s}%d\n\n", family_info[family_id -1][fam_chat_color], Iter_Count(family_vehicles[family_id]));
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"Репутация семьи: {%s}%d очк.\n", family_info[family_id -1][fam_chat_color], family_info[family_id -1][fam_rating]);
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"Семейных талонов: {%s}%d шт.\n", family_info[family_id -1][fam_chat_color], family_info[family_id -1][fam_ticket]);
							strcat(global_string, line_string);

							if(family_top[0] == family_id)
							{
								strcat(global_string, "\n\n"c_white"Ваша семья первая в ТОП рейтинге.\n");

								format(line_string, sizeof(line_string), ""c_white"Бонус: {%s}%d семейных талонов в PayDay", family_info[family_id -1][fam_chat_color], family_ticket[0]);
								strcat(global_string, line_string);
							}
							if(family_top[1] == family_id)
							{
								strcat(global_string, "\n\n"c_white"Ваша семья вторая в ТОП рейтинге.\n");

								format(line_string, sizeof(line_string), ""c_white"Бонус: {%s}%d семейных талонов в PayDay", family_info[family_id -1][fam_chat_color], family_ticket[1]);
								strcat(global_string, line_string);
							}
							if(family_top[2] == family_id)
							{
								strcat(global_string, "\n\n"c_white"Ваша семья третья в ТОП рейтинге.\n");

								format(line_string, sizeof(line_string), ""c_white"Бонус: {%s}%d семейных талонов в PayDay", family_info[family_id -1][fam_chat_color], family_ticket[2]);
								strcat(global_string, line_string);
							}
							show_dialog(playerid, d_family_info, DIALOG_STYLE_MSGBOX, !""scm_dialog"Информация о семье", global_string, !"Назад", !"Закрыть");
						}
						case 1:
						{
							global_string[0] = EOS;

							new number_logged = 0;
							foreach(new i: family_players[PlayerInfo[playerid][family]])
							{
								number_logged++;

								new line_string[120];
								format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s[%d] -%s (%d)\n", number_logged, PlayerInfo[i][name], i, family_rank[PlayerInfo[i][family] -1][PlayerInfo[i][family_rang] -1], PlayerInfo[i][family_rang]);
								strcat(global_string, line_string);
							}
							show_dialog(playerid, d_family_omembers, DIALOG_STYLE_MSGBOX, !""scm_dialog"Члены семьи ["c_green"в сети"c_white"]", global_string, !"Назад", !"Закрыть");
						}
						case 2:
						{
							if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][3])
							{
								pc_cmd_fmenu(playerid);
								return SendClientMessage(playerid, col_white, !""scm_error"Список членов семьи доступен только лидеру.");
							}
							SetPVarInt(playerid, !"ofm_list_page", 1);

							new query_string[100];
							mysql_format(sql_connection, query_string, sizeof(query_string), "SELECT `u_name`,`u_last_date`,`u_family_rank` FROM `users` WHERE `u_family`='%d'", PlayerInfo[playerid][family]);
							mysql_tquery(sql_connection, query_string, "callback_offamily", "i", playerid);
						}
						case 3: family_settings(playerid);
						case 4:
						{
							if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][4])
							{
								new line_string[100];
								format(line_string, sizeof(line_string), ""scm_error"Чёрный список доступен со статуса %s (%d)", family_rank[PlayerInfo[playerid][family] -1][family_info[PlayerInfo[playerid][family] -1][fam_settings][4] -1], family_info[PlayerInfo[playerid][family] -1][fam_settings][4]);
								return SendClientMessage(playerid, col_white, line_string);
							}
							show_dialog(playerid, d_blacklist_family, DIALOG_STYLE_LIST, !""scm_dialog"Чёрный список", !""c_server"1 | "c_white"Добавить человека в чёрный список\n"c_server"2 | "c_white"Очистить черный список\n"c_server"3 | "c_white"Убрать человека из черного списка\n"c_server"4 | "c_white"Чёрный список игроков", !"Выбрать", !"Назад");
						}
						case 5:
						{
							if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][3])
							{
								pc_cmd_fmenu(playerid);
								return SendClientMessage(playerid, col_white, !""scm_error"Автопарк доступен только лидеру семьи.");
							}

							global_string[0] = EOS;

							new family_id = PlayerInfo[playerid][family], line_string[80];
							format(line_string, sizeof(line_string), ""c_white"Буксировка всего транспорта -"c_green"%d$\n", 150 * Iter_Count(family_vehicles[family_id]));
							strcat(global_string, line_string);

							new veh_point = 0;
							foreach(new vehicleid: family_vehicles[family_id])
							{
								if(!IsValidVehicle(vehicleid)) continue;

								veh_point++;
								format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s -"c_green"%d$%s\n", veh_point, vehicle_name[veh_info[vehicleid -1][v_model] -400], 150, (GetPlayerVehicleID(playerid) == vehicleid) ? (" "c_grey"Вы находитесь в этом транспорте") : (""));
								strcat(global_string, line_string);
							}
							show_dialog(playerid, d_family_fixcar, DIALOG_STYLE_LIST, !""scm_dialog"Управление автопарком", global_string, !"Выбрать", !"Назад");
						}
						case 6:
						{
							if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][3])
							{
								pc_cmd_fmenu(playerid);
								return SendClientMessage(playerid, col_white, !""scm_error"Лог семьи доступен только лидеру семьи.");
							}
							family_logs(playerid);
						}
						case 7:
						{
							if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][3])
							{
								pc_cmd_fmenu(playerid);
								return SendClientMessage(playerid, col_white, !""scm_error"Передавать семью может только создатель.");
							}
							show_dialog(playerid, d_family_creator, DIALOG_STYLE_INPUT, !""scm_dialog"Передача семьи", !""c_white"Введите ID игрока, которому хотите передать семью:", !"Далее", !"Назад");
						}
						case 8:
						{
							new family_id = PlayerInfo[playerid][family];
							if(PlayerInfo[playerid][family_rang] >= family_info[family_id -1][fam_settings][3])
							{
								pc_cmd_fmenu(playerid);
								return SendClientMessage(playerid, col_white, !""scm_error"Лидер семьи не может покинуть её.");
							}

							new line_string[120];
							format(line_string, sizeof(line_string), "{%s}[Семья] %s %s[%d] покинул(-а) Вашу семью", family_info[family_id -1][fam_chat_color], family_rank[family_id -1][PlayerInfo[playerid][family_rang] -1], PlayerInfo[playerid][name], playerid);
							family_message(family_id, col_gray, line_string);

							Iter_Remove(family_players[family_id], playerid);
							PlayerInfo[playerid][family] = PlayerInfo[playerid][family_rang] = 0;

							if(PlayerInfo[playerid][family_text] != Text3D:INVALID_3DTEXT_ID)
							{
								DestroyDynamic3DTextLabel(PlayerInfo[playerid][family_text]);
								PlayerInfo[playerid][family_text] = Text3D:INVALID_3DTEXT_ID;
							}
							family_info[family_id][fam_members] --;

							new query_string[100];
							format(query_string, sizeof(query_string), "UPDATE `family` SET `fam_members`='%d' WHERE `fam_id`='%d' LIMIT 1", family_info[family_id -1][fam_members], family_id);
							mysql_query(sql_connection, query_string);

							format(query_string, sizeof(query_string), "UPDATE `users` SET `u_family`='0',`u_family_rank`='0' WHERE `u_id`='%d' LIMIT 1", PlayerInfo[playerid][id]);
							mysql_query(sql_connection, query_string);
						}
					}
				}
				case 1:
				{
					switch(listitem)
					{
						case 0:
						{
							new family_id = PlayerInfo[playerid][family], nationality_string[28], line_string[75];
							switch(family_info[family_id -1][fam_nationality])
							{
								case 1: nationality_string = "американцы";
								case 2: nationality_string = "японцы";
								case 3: nationality_string = "итальянцы";
								case 4: nationality_string = "мексиканцы";
								case 5: nationality_string = "латиноамериканцы";
								case 6: nationality_string = "испанцы";
								case 7: nationality_string = "русские";
								case 8: nationality_string = "португальцы";
								case 9: nationality_string = "французы";
								default: nationality_string = "неизвестно";
							}

							new fam_types[12];
							switch(family_info[family_id -1][fam_type])
							{
								case 0: fam_types = "бизнес";
								case 1: fam_types = "мафия";
							}

							global_string[0] = EOS;
							format(line_string, sizeof(line_string), ""c_white"Семья {%s}%s\n\n", family_info[family_id -1][fam_chat_color], family_info[family_id -1][fam_name]);
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"Создатель семьи: {%s}%s\n", family_info[family_id -1][fam_chat_color], family_info[family_id -1][fam_creator]);
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"Тип семьи: {%s}%s\n", family_info[family_id -1][fam_chat_color], fam_types);
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"Национальность: {%s}%s\n", family_info[family_id -1][fam_chat_color], nationality_string);
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"Онлайн: {%s}%d чел.\n", family_info[family_id -1][fam_chat_color], Iter_Count(family_players[family_id]));
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"Состав семьи: {%s}%d чел.\n\n", family_info[family_id -1][fam_chat_color], family_info[family_id -1][fam_members]);
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"Доступно мест для транспорта: {%s}%d\n", family_info[family_id -1][fam_chat_color], family_info[family_id -1][fam_max_car]);
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"У Вашей семьи транспорта: {%s}%d\n\n", family_info[family_id -1][fam_chat_color], Iter_Count(family_vehicles[family_id]));
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"Репутация семьи: {%s}%d очк.\n", family_info[family_id -1][fam_chat_color], family_info[family_id -1][fam_rating]);
							strcat(global_string, line_string);
							format(line_string, sizeof(line_string), ""c_white"Семейных талонов: {%s}%d шт.\n", family_info[family_id -1][fam_chat_color], family_info[family_id -1][fam_ticket]);
							strcat(global_string, line_string);

							if(family_top[0] == family_id)
							{
								strcat(global_string, "\n\n"c_white"Ваша семья первая в ТОП рейтинге.\n");

								format(line_string, sizeof(line_string), ""c_white"Бонус: {%s}%d семейных талонов в PayDay", family_info[family_id -1][fam_chat_color], family_ticket[0]);
								strcat(global_string, line_string);
							}
							if(family_top[1] == family_id)
							{
								strcat(global_string, "\n\n"c_white"Ваша семья вторая в ТОП рейтинге.\n");

								format(line_string, sizeof(line_string), ""c_white"Бонус: {%s}%d семейных талонов в PayDay", family_info[family_id -1][fam_chat_color], family_ticket[1]);
								strcat(global_string, line_string);
							}
							if(family_top[2] == family_id)
							{
								strcat(global_string, "\n\n"c_white"Ваша семья третья в ТОП рейтинге.\n");

								format(line_string, sizeof(line_string), ""c_white"Бонус: {%s}%d семейных талонов в PayDay", family_info[family_id -1][fam_chat_color], family_ticket[2]);
								strcat(global_string, line_string);
							}
							show_dialog(playerid, d_family_info, DIALOG_STYLE_MSGBOX, !""scm_dialog"Информация о семье", global_string, !"Назад", !"Закрыть");
						}
						case 1:
						{
							global_string[0] = EOS;

							new number_logged = 0;
							foreach(new i: family_players[PlayerInfo[playerid][family]])
							{
								number_logged++;

								new line_string[120];
								format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s[%d] -%s (%d)\n", number_logged, PlayerInfo[i][name], i, family_rank[PlayerInfo[i][family] -1][PlayerInfo[i][family_rang] -1], PlayerInfo[i][family_rang]);
								strcat(global_string, line_string);
							}
							show_dialog(playerid, d_family_omembers, DIALOG_STYLE_MSGBOX, !""scm_dialog"Члены семьи ["c_green"в сети"c_white"]", global_string, !"Назад", !"Закрыть");
						}
						case 2:
						{
							if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][3])
							{
								pc_cmd_fmenu(playerid);
								return SendClientMessage(playerid, col_white, !""scm_error"Список членов семьи доступен только лидеру.");
							}
							SetPVarInt(playerid, !"ofm_list_page", 1);

							new query_string[100];
							mysql_format(sql_connection, query_string, sizeof(query_string), "SELECT `u_name`,`u_last_date`,`u_family_rank` FROM `users` WHERE `u_family`='%d'", PlayerInfo[playerid][family]);
							mysql_tquery(sql_connection, query_string, "callback_offamily", "i", playerid);
						}
						case 3: family_settings(playerid);
						case 4:
						{
							if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][4])
							{
								new line_string[100];
								format(line_string, sizeof(line_string), ""scm_error"Чёрный список доступен со статуса %s (%d)", family_rank[PlayerInfo[playerid][family] -1][family_info[PlayerInfo[playerid][family] -1][fam_settings][4] -1], family_info[PlayerInfo[playerid][family] -1][fam_settings][4]);
								return SendClientMessage(playerid, col_white, line_string);
							}
							show_dialog(playerid, d_blacklist_family, DIALOG_STYLE_LIST, !""scm_dialog"Чёрный список", !""c_server"1 | "c_white"Добавить человека в чёрный список\n"c_server"2 | "c_white"Очистить черный список\n"c_server"3 | "c_white"Убрать человека из черного списка\n"c_server"4 | "c_white"Чёрный список игроков", !"Выбрать", !"Назад");
						}
						case 5:
						{
							if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][3])
							{
								pc_cmd_fmenu(playerid);
								return SendClientMessage(playerid, col_white, !""scm_error"Автопарк доступен только лидеру семьи.");
							}

							global_string[0] = EOS;

							new family_id = PlayerInfo[playerid][family], line_string[80];
							format(line_string, sizeof(line_string), ""c_white"Буксировка всего транспорта -"c_green"%d$\n", 150 * Iter_Count(family_vehicles[family_id]));
							strcat(global_string, line_string);

							new veh_point = 0;
							foreach(new vehicleid: family_vehicles[family_id])
							{
								if(!IsValidVehicle(vehicleid)) continue;

								veh_point++;
								format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s -"c_green"%d$%s\n", veh_point, vehicle_name[veh_info[vehicleid -1][v_model] -400], 150, (GetPlayerVehicleID(playerid) == vehicleid) ? (" "c_grey"Вы находитесь в этом транспорте") : (""));
								strcat(global_string, line_string);
							}
							show_dialog(playerid, d_family_fixcar, DIALOG_STYLE_LIST, !""scm_dialog"Управление автопарком", global_string, !"Выбрать", !"Назад");
						}
						case 6:
						{
							if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][3])
							{
								pc_cmd_fmenu(playerid);
								return SendClientMessage(playerid, col_white, !""scm_error"Лог семьи доступен только лидеру семьи.");
							}
							family_logs(playerid);
						}
						case 7:
						{
							if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][3])
							{
								pc_cmd_fmenu(playerid);
								return SendClientMessage(playerid, col_white, !""scm_error"Передавать семью может только создатель.");
							}
							show_dialog(playerid, d_family_creator, DIALOG_STYLE_INPUT, !""scm_dialog"Передача семьи", !""c_white"Введите ID игрока, которому хотите передать семью:", !"Далее", !"Назад");
						}
						case 8: return pc_cmd_fambizlist(playerid);
						case 9:
						{
							new family_id = PlayerInfo[playerid][family];
							if(PlayerInfo[playerid][family_rang] >= family_info[family_id -1][fam_settings][3])
							{
								pc_cmd_fmenu(playerid);
								return SendClientMessage(playerid, col_white, !""scm_error"Лидер семьи не может покинуть её.");
							}

							new line_string[120];
							format(line_string, sizeof(line_string), "{%s}[Семья] %s %s[%d] покинул(-а) Вашу семью", family_info[family_id -1][fam_chat_color], family_rank[family_id -1][PlayerInfo[playerid][family_rang] -1], PlayerInfo[playerid][name], playerid);
							family_message(family_id, col_gray, line_string);

							Iter_Remove(family_players[family_id], playerid);
							PlayerInfo[playerid][family] = PlayerInfo[playerid][family_rang] = 0;

							if(PlayerInfo[playerid][family_text] != Text3D:INVALID_3DTEXT_ID)
							{
								DestroyDynamic3DTextLabel(PlayerInfo[playerid][family_text]);
								PlayerInfo[playerid][family_text] = Text3D:INVALID_3DTEXT_ID;
							}
							family_info[family_id][fam_members] --;

							new query_string[100];
							format(query_string, sizeof(query_string), "UPDATE `family` SET `fam_members`='%d' WHERE `fam_id`='%d' LIMIT 1", family_info[family_id -1][fam_members], family_id);
							mysql_query(sql_connection, query_string);

							format(query_string, sizeof(query_string), "UPDATE `users` SET `u_family`='0',`u_family_rank`='0' WHERE `u_id`='%d' LIMIT 1", PlayerInfo[playerid][id]);
							mysql_query(sql_connection, query_string);
						}
					}
				}
			}
		}
		case d_family_creator:
		{
			if(!response) return pc_cmd_fmenu(playerid);

			new player_id = strval(inputtext), familyid = PlayerInfo[playerid][family];
			if(player_id < 0) return show_dialog(playerid, d_family_creator, DIALOG_STYLE_INPUT, !""scm_dialog"Передача семьи", !""c_grey"Игрок не найден\n"c_white"Введите ID игрока, которому хотите передать семью:", !"Далее", !"Назад");
			if(!IsPlayerConnected(player_id)) return show_dialog(playerid, d_family_creator, DIALOG_STYLE_INPUT, !""scm_dialog"Передача семьи", !""c_grey"Игрок не найден\n"c_white"Введите ID игрока, которому хотите передать семью:", !"Далее", !"Назад");
			if(PlayerInfo[playerid][family] != PlayerInfo[player_id][family]) return show_dialog(playerid, d_family_creator, DIALOG_STYLE_INPUT, !""scm_dialog"Передача семьи", !""c_grey"Игрок не состоит в Вашей семье\n"c_white"Введите ID игрока, которому хотите передать семью:", !"Далее", !"Назад");

			format(family_info[familyid -1][fam_creator], MAX_PLAYER_NAME, "%s", PlayerInfo[player_id][name]);

			new query_string[110];
			format(query_string, sizeof(query_string), "UPDATE `family` SET `fam_creator`='%s' WHERE `fam_id`='%d' LIMIT 1", family_info[familyid -1][fam_creator], familyid);
			mysql_query(sql_connection, query_string);

			PlayerInfo[playerid][family_rang] = 1;
			PlayerInfo[player_id][family_rang] = family_info[familyid -1][fam_settings][3];

			update_int_sql(playerid, "u_family_rank", PlayerInfo[playerid][family_rang]);
			update_int_sql(player_id, "u_family_rank", PlayerInfo[player_id][family_rang]);

			new text_string[90];
			format(text_string, sizeof(text_string), ""scm_info"Вы успешно передали семью "c_gold"%s", PlayerInfo[player_id][name]);
			SendClientMessage(playerid, col_white, text_string);

			format(text_string, sizeof(text_string), ""scm_info"Теперь Вы новый лидер семьи "c_gold"%s", family_info[familyid -1][fam_name]);
			SendClientMessage(player_id, col_white, text_string);

			pc_cmd_fmenu(playerid);
		}
		case d_family_fixcar:
		{
			if(!response) return pc_cmd_fmenu(playerid);

			new family_id = PlayerInfo[playerid][family];
			if(!family_info[family_id -1][fam_house])
			{
				pc_cmd_fmenu(playerid);
				return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет дома семьи.");
			}

			if(listitem == 0)
			{
				if(family_info[family_id -1][fam_bank] < 150 * Iter_Count(family_vehicles[family_id]))
				{
					global_string[0] = EOS;
					SendClientMessage(playerid, col_white, !""scm_error"В банке семьи недостаточно средств.");

					new line_string[100];
					format(line_string, sizeof(line_string), ""c_white"Буксировка всего транспорта -"c_green"%d$\n", 150 * Iter_Count(family_vehicles[family_id]));
					strcat(global_string, line_string);

					new veh_point = 0;
					foreach(new vehicleid: family_vehicles[family_id])
					{
						if(!IsValidVehicle(vehicleid)) continue;

						veh_point++;

						format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s -"c_green"%d$%s\n", veh_point, vehicle_name[veh_info[vehicleid -1][v_model] -400], 150, (GetPlayerVehicleID(playerid) == vehicleid) ? (" "c_grey"Вы находитесь в этом транспорте") : (""));
						strcat(global_string, line_string);
					}
					return show_dialog(playerid, d_family_fixcar, DIALOG_STYLE_LIST, !""scm_dialog"Управление автопарком", global_string, !"Выбрать", !"Назад");
				}
				foreach(new vehicleid: family_vehicles[family_id])
				{
					if(!IsValidVehicle(vehicleid)) continue;
					if(is_vehicle_occupied(vehicleid) != -1) continue;

					SetVehicleToRespawn(vehicleid);
				}
				SendClientMessage(playerid, col_white, !""scm_info"Весь незанятый транспорт был отбуксирован.");
				pc_cmd_fmenu(playerid);

				family_info[family_id -1][fam_bank] -= 150 * Iter_Count(family_vehicles[family_id]);

				new query_string[75];
				mysql_format(sql_connection, query_string, sizeof(query_string), "UPDATE `family` SET `fam_bank`='%d' WHERE `fam_id`='%d' LIMIT 1", family_info[family_id -1][fam_bank], family_id);
				mysql_tquery(sql_connection, query_string);
			}
			if(family_info[family_id -1][fam_bank] < 150) return SendClientMessage(playerid, col_white, !""scm_error"В банке семьи недостаточно средств.");

			new veh_point = 0;
			foreach(new vehicleid: family_vehicles[family_id])
			{
				if(!IsValidVehicle(vehicleid)) continue;

				veh_point++;

				if(listitem == veh_point)
				{
					slobal_string[0] = EOS;
					format(slobal_string, sizeof(slobal_string), ""c_server"1 | "c_white"Ранг доступности ("c_gold"%s"c_white")\n"c_server"2 | "c_white"Отбуксировать\n"c_server"3 | "c_white"Изменить позицию автомобиля\n"c_server"4 | "c_white"Отметить на GPS", family_rank[family_id -1][veh_info[vehicleid -1][v_rank] -1]);
					show_dialog(playerid, d_family_fixcar_1, DIALOG_STYLE_LIST, !""scm_dialog"Настройки автомобиля", slobal_string, !"Выбрать", !"Назад");

					return SetPVarInt(playerid, !"VehiclelMenu", vehicleid);
				}
			}
		}
		case d_family_fixcar_1:
		{
			if(!response) return pc_cmd_fmenu(playerid);

			new family_id = PlayerInfo[playerid][family];
			switch(listitem)
			{
				case 0:
				{
					global_string[0] = EOS;
					for(new i = 0; i < family_info[family_id -1][fam_settings][3]; i++)
					{
						new line_string[80];
						format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s\n", i + 1, family_rank[family_id -1][i]);
						strcat(global_string, line_string);
					}
					show_dialog(playerid, d_family_fixcar_2, DIALOG_STYLE_LIST, !""scm_dialog"Ранг доступности", global_string, !"Выбрать", !"Назад");
				}
				case 1:
				{
					new vehicleid = GetPVarInt(playerid, !"VehiclelMenu");
					DeletePVar(playerid, !"VehiclelMenu");

					if(is_vehicle_occupied(vehicleid) != -1) return SendClientMessage(playerid, col_white, !""scm_error"Транспорт используется.");
					SetVehicleToRespawn(vehicleid);
					SendClientMessage(playerid, col_gray, !""scm_info"Транспорт отремонтирован и отбуксирован к месту стоянки.");
					family_info[family_id -1][fam_bank] -= 150;

					new query_string[80];
					mysql_format(sql_connection, query_string, sizeof(query_string), "UPDATE `family` SET `fam_bank`='%d' WHERE `fam_id`='%d' LIMIT 1", family_info[family_id -1][fam_bank], family_id);
					mysql_tquery(sql_connection, query_string);

					pc_cmd_fmenu(playerid);
				}
				case 2:
				{
					if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, col_white, !""scm_error"Нужно быть в транспорте.");

					if(!IsPlayerInRangeOfPoint(playerid, 200.0, fi_info[PlayerInfo[playerid][island] -1][fi_pos][0], fi_info[PlayerInfo[playerid][island] -1][fi_pos][1], fi_info[PlayerInfo[playerid][island] -1][fi_pos][2]))
						return SendClientMessage(playerid, col_white, !""scm_error"Вы должны находиться недалеко от семейного острова.");

					new veh_id = GetPVarInt(playerid, !"VehiclelMenu");
					DeletePVar(playerid, !"VehiclelMenu");

					if(GetPlayerVehicleID(playerid) != veh_id) return SendClientMessage(playerid, col_white, !""scm_error"Нужно быть в транспорте, который хотите переставить.");

					SendClientMessage(playerid, col_white, !""scm_info"Позиция автомобиля изменена.");

					GetVehiclePos(veh_id, veh_info[veh_id -1][v_pos][0], veh_info[veh_id -1][v_pos][1], veh_info[veh_id -1][v_pos][2]);
					GetVehicleZAngle(veh_id, veh_info[veh_id -1][v_pos][3]);

					new new_veh_id = CreateVehicle(veh_info[veh_id -1][v_model], veh_info[veh_id -1][v_pos][0], veh_info[veh_id -1][v_pos][1], veh_info[veh_id -1][v_pos][2], veh_info[veh_id -1][v_pos][3], veh_info[veh_id -1][v_color][0], veh_info[veh_id -1][v_color][1], -1);
					Iter_Add(family_vehicles[family_id], new_veh_id);

					veh_info[new_veh_id -1][v_type] = vehicle_type_family;
					veh_info[new_veh_id -1][v_id] = veh_info[veh_id -1][v_id];
					veh_info[new_veh_id -1][v_pos][0] = veh_info[veh_id -1][v_pos][0];
					veh_info[new_veh_id -1][v_pos][1] = veh_info[veh_id -1][v_pos][1];
					veh_info[new_veh_id -1][v_pos][2] = veh_info[veh_id -1][v_pos][2];
					veh_info[new_veh_id -1][v_pos][3] = veh_info[veh_id -1][v_pos][3];

					veh_info[new_veh_id -1][v_owner] = veh_info[veh_id -1][v_owner];
					veh_info[new_veh_id -1][v_color][0] = veh_info[veh_id -1][v_color][0];
					veh_info[new_veh_id -1][v_color][1] = veh_info[veh_id -1][v_color][1];

					veh_info[new_veh_id -1][v_rank] = veh_info[veh_id -1][v_rank];

					veh_info[new_veh_id -1][v_paint] = veh_info[veh_id -1][v_paint];
					if(veh_info[new_veh_id -1][v_paint] != 3) ChangeVehiclePaintjob(new_veh_id, veh_info[new_veh_id -1][v_paint]);

					veh_info[new_veh_id -1][v_locked] = veh_info[veh_id -1][v_locked];

					veh_info[new_veh_id -1][v_plate] = veh_info[veh_id -1][v_plate];
					format(veh_info[new_veh_id -1][v_plate], 12, "%s", veh_info[veh_id -1][v_plate]);

					veh_info[new_veh_id -1][v_fuel] = veh_info[veh_id -1][v_fuel];
					veh_info[new_veh_id -1][v_millage] = veh_info[veh_id -1][v_millage];

					veh_info[new_veh_id -1][v_engine_boost] = veh_info[veh_id -1][v_engine_boost];
					veh_info[new_veh_id -1][v_brake_boost] = veh_info[veh_id -1][v_brake_boost];
					veh_info[new_veh_id -1][v_vehicle] = new_veh_id;

					veh_info[new_veh_id -1][v_vw] = GetPlayerVirtualWorld(playerid);
					veh_info[new_veh_id -1][v_int] = GetPlayerInterior(playerid);
					if(veh_info[new_veh_id -1][v_int] != 0) LinkVehicleToInterior(new_veh_id, veh_info[new_veh_id -1][v_int]);
					if(veh_info[new_veh_id -1][v_vw] != 0) SetVehicleVirtualWorld(new_veh_id, veh_info[new_veh_id -1][v_vw]);

					for(new j = 0; j < 10; j ++)
					{
						veh_info[new_veh_id -1][v_component][j] = veh_info[veh_id -1][v_component][j];
						AddVehicleComponent(veh_info[new_veh_id -1][v_vehicle], veh_info[new_veh_id -1][v_component][j]);
					}

					SetVehicleNumberPlate(new_veh_id, veh_info[new_veh_id -1][v_plate]);

					DestroyVehicle(veh_id);
					Iter_Remove(family_vehicles[family_id], veh_id);

					new query_string[256];
					format(query_string, sizeof(query_string), "UPDATE `family_vehicles` SET `sv_pos_x`='%f',`sv_pos_y`='%f',`sv_pos_z`='%f',`sv_pos_a`='%f' WHERE `sv_id`='%d' LIMIT 1", veh_info[new_veh_id -1][v_pos][0], veh_info[new_veh_id -1][v_pos][1], veh_info[new_veh_id -1][v_pos][2], veh_info[new_veh_id -1][v_pos][3], veh_info[new_veh_id -1][v_id]);
					mysql_query(sql_connection, query_string);

					pc_cmd_fmenu(playerid);
				}
				case 3:
				{
					new vehicleid = GetPVarInt(playerid, !"VehiclelMenu");
					DeletePVar(playerid, !"VehiclelMenu");

					SetPlayerRaceCheckpoint(playerid, 1, veh_info[vehicleid -1][v_pos][0], veh_info[vehicleid -1][v_pos][1], veh_info[vehicleid -1][v_pos][2], 0.0, 0.0, 0.0, 2.0);
					SendClientMessage(playerid, col_white, !""scm_info"Метка успешно установлена.");
					is_gps_used{playerid} = 1;
				}
			}
		}
		case d_family_fixcar_2:
		{
			if(!response) return pc_cmd_fmenu(playerid);

			new vehicle_id = GetPVarInt(playerid, !"VehiclelMenu");
			DeletePVar(playerid, !"VehiclelMenu");

			veh_info[vehicle_id -1][v_rank] = listitem + 1;

			new query_string[90];
			format(query_string, sizeof(query_string), "UPDATE `family_vehicles` SET `sv_rank`='%d' WHERE `sv_id`='%d' LIMIT 1", veh_info[vehicle_id -1][v_rank], veh_info[vehicle_id -1][v_id]);
			mysql_query(sql_connection, query_string);

			pc_cmd_fmenu(playerid);
		}
		case d_blacklist_family:
		{
			if(!response) return pc_cmd_fmenu(playerid);
			switch(listitem)
			{
				case 0: show_dialog(playerid, d_blinvite_family, DIALOG_STYLE_INPUT, !""scm_dialog"Чёрный список", !""c_white"Введите ID игрока и причину, которого хотите добавить в чёрный список:\n\n"c_grey"Пример: 1, оскорбление семьи", !"Далее", !"Назад");
				case 1: show_dialog(playerid, d_blclear_family, DIALOG_STYLE_MSGBOX, !""scm_dialog"Чёрный список", !""c_white"Вы действительно желаете очистить чёрный список семьи?\n\n"c_grey"Отменить данное действие будет невозможно", !"Далее", !"Назад");
				case 2: show_dialog(playerid, d_bluninvite_family, DIALOG_STYLE_INPUT, !""scm_dialog"Чёрный список", !""c_white"Введите имя игрока, которого хотите удалить из чёрного списка:", !"Далее", !"Назад");
				case 3:
				{
					SetPVarInt(playerid, !"ofm_list_page", 1);

					new query_string[80];
					format(query_string, sizeof(query_string), "SELECT `bl_name`,`bl_date` FROM `family_blacklist` WHERE `bl_family`='%d'", PlayerInfo[playerid][family]);
					mysql_tquery(sql_connection, query_string, "callback_bl_family", "i", playerid);
				}
			}
		}
		case d_blclear_family:
		{
			if(!response) return show_dialog(playerid, d_blacklist_family, DIALOG_STYLE_LIST, !""scm_dialog"Чёрный список", !""c_server"1."c_white" Добавить человека в чёрный список\n"c_server"2."c_white" Очистить черный список\n"c_server"3."c_white" Убрать человека из черного списка\n"c_server"4."c_white"Чёрный список игроков", !"Выбрать", !"Назад");

			new query_string[75];
			format(query_string, sizeof(query_string), "DELETE FROM `family_blacklist` WHERE `bl_family`='%d'", PlayerInfo[playerid][family]);
			mysql_query(sql_connection, query_string);

			format(query_string, sizeof(query_string), "%s очистил(-а) чёрный список", PlayerInfo[playerid][name]);
			write_family(playerid, PlayerInfo[playerid][family], TYPE_LOG_BL, query_string);

			SendClientMessage(playerid, col_white, !""scm_info"Чёрный список успешно очищен.");
			show_dialog(playerid, d_blacklist_family, DIALOG_STYLE_LIST, !""scm_dialog"Чёрный список", !""c_server"1."c_white" Добавить человека в чёрный список\n"c_server"2."c_white" Очистить черный список\n"c_server"3."c_white" Убрать человека из черного списка\n"c_server"4."c_white"Чёрный список игроков", !"Выбрать", !"Назад");
		}
		case d_bluninvite_family:
		{
			if(!response) return show_dialog(playerid, d_blacklist_family, DIALOG_STYLE_LIST, !""scm_dialog"Чёрный список", !""c_server"1."c_white" Добавить человека в чёрный список\n"c_server"2."c_white" Очистить черный список\n"c_server"3."c_white" Убрать человека из черного списка\n"c_server"4."c_white"Чёрный список игроков", !"Выбрать", !"Назад");

			if(!strlen(inputtext)) return show_dialog(playerid, d_bluninvite_family, DIALOG_STYLE_INPUT, !""scm_dialog"Чёрный список", !""c_grey"Вы ничего не указали\n"c_white"Введите имя игрока, которого хотите удалить из чёрного списка:", !"Далее", !"Назад");
			if(is_text_invalid(inputtext)) return show_dialog(playerid, d_bluninvite_family, DIALOG_STYLE_INPUT, !""scm_dialog"Чёрный список", !""c_grey"Некорректный ник игрока\n"c_white"Введите имя игрока, которого хотите удалить из чёрного списка:", !"Далее", !"Назад");
			if(strlen(inputtext) < 6 || strlen(inputtext) > 24) return show_dialog(playerid, d_bluninvite_family, DIALOG_STYLE_INPUT, !""scm_dialog"Чёрный список", !""c_grey"Слишком короткий / длинный ник\n"c_white"Введите имя игрока, которого хотите удалить из чёрного списка:", !"Далее", !"Назад");

			new query_string[120];
			mysql_format(sql_connection, query_string, sizeof(query_string), "SELECT `bl_player` FROM `family_blacklist` WHERE `bl_name`='%e' AND `bl_family`='%d' LIMIT 1", inputtext, PlayerInfo[playerid][family]);
			mysql_tquery(sql_connection, query_string, "check_bl_list_family", "ds", playerid, inputtext);
		}
		case d_blinvite_family:
		{
			if(!response) return show_dialog(playerid, d_blacklist_family, DIALOG_STYLE_LIST, !""scm_dialog"Чёрный список", !""c_server"1."c_white" Добавить человека в чёрный список\n"c_server"2."c_white" Очистить черный список\n"c_server"3."c_white" Убрать человека из черного списка\n"c_server"4."c_white"Чёрный список игроков", !"Выбрать", !"Назад");

			new targetid, reason[24];
			if(sscanf(inputtext, "p<,>ds[24]", targetid, reason)) return show_dialog(playerid, d_blinvite_family, DIALOG_STYLE_INPUT, !""scm_dialog"Чёрный список", !""c_white"Введите ID игрока и причину, которого хотите добавить в чёрный список:\n\n"c_grey"Пример: 1, оскорбление семьи", !"Далее", !"Назад");
			if(targetid < 0) return show_dialog(playerid, d_blinvite_family, DIALOG_STYLE_INPUT, !""scm_dialog"Чёрный список", !""c_grey"Игрок не найден\n"c_white"Введите ID игрока и причину, которого хотите добавить в чёрный список:\n\n"c_grey"Пример: 1, оскорбление семьи", !"Далее", !"Назад");
			if(!IsPlayerConnected(targetid) || targetid == playerid) return show_dialog(playerid, d_blinvite_family, DIALOG_STYLE_INPUT, !""scm_dialog"Чёрный список", !""c_grey"Игрок не найден\n"c_white"Введите ID игрока и причину, которого хотите добавить в чёрный список:\n\n"c_grey"Пример: 1, оскорбление семьи", !"Далее", !"Назад");
			if(PlayerInfo[targetid][family] == PlayerInfo[playerid][family]) return show_dialog(playerid, d_blinvite_family, DIALOG_STYLE_INPUT, !""scm_dialog"Чёрный список", !""c_grey"Игрок не состоит в Вашей семье\n"c_white"Введите ID игрока и причину, которого хотите добавить в чёрный список:\n\n"c_grey"Пример: 1, оскорбление семьи", !"Далее", !"Назад");
			if(strlen(reason) < 5) return show_dialog(playerid, d_blinvite_family, DIALOG_STYLE_INPUT, !""scm_dialog"Чёрный список", !""c_grey"Причина слишком короткая\n"c_white"Введите ID игрока и причину, которого хотите добавить в чёрный список:\n\n"c_grey"Пример: 1, оскорбление семьи", !"Далее", !"Назад");
			if(strlen(reason) > 24) return show_dialog(playerid, d_blinvite_family, DIALOG_STYLE_INPUT, !""scm_dialog"Чёрный список", !""c_grey"Причина слишком длинная\n"c_white"Введите ID игрока и причину, которого хотите добавить в чёрный список:\n\n"c_grey"Пример: 1, оскорбление семьи", !"Далее", !"Назад");

			new query_string[256];
			format(query_string, sizeof(query_string), "INSERT INTO `family_blacklist`(`bl_player`,`bl_family`,`bl_name`,`bl_date`,`bl_reason`,`bl_add_name`) VALUES ('%d','%d','%s',NOW(),'%s','%s')", PlayerInfo[targetid][id], PlayerInfo[playerid][family], PlayerInfo[targetid][name], reason, PlayerInfo[playerid][name]);
			mysql_query(sql_connection, query_string);

			new text_string[144];
			format(text_string, sizeof(text_string), "%s добавил(-а) %s в чёрный список семьи %s. Причина: %s.", PlayerInfo[playerid][name], PlayerInfo[targetid][name], family_info[PlayerInfo[playerid][family] -1][fam_name], reason);
			write_family(playerid, PlayerInfo[playerid][family], TYPE_LOG_BL, text_string);

			format(text_string, sizeof(text_string), ""scm_info""c_server"%s"c_white" добавил Вас в чёрный список семьи %s. Причина: %s", PlayerInfo[playerid][name], family_info[PlayerInfo[playerid][family] -1][fam_name], reason);
			SendClientMessage(targetid, col_white, text_string);

			format(text_string, sizeof(text_string), ""scm_info"Вы добавили в чёрный список "c_server"%s", PlayerInfo[targetid][name]);
			SendClientMessage(playerid, col_white, text_string);

			show_dialog(playerid, d_blacklist_family, DIALOG_STYLE_LIST, !""scm_dialog"Чёрный список", !""c_server"1."c_white" Добавить человека в чёрный список\n"c_server"2."c_white" Очистить черный список\n"c_server"3."c_white" Убрать человека из черного списка\n"c_server"4."c_white"Чёрный список игроков", !"Выбрать", !"Назад");
		}
		case d_family_bank:
		{
			if(!response) return show_dialog(playerid, d_bank, DIALOG_STYLE_LIST, !""scm_dialog"Банк", !""c_server"1 | "c_white"Управление счетами\n"c_server"2 | "c_white"Открыть новый счёт\n"c_server"3 | "c_white"Пополнить баланс телефона\n"c_server"4 | "c_white"Оплата налогов\n"c_server"5 | "c_white"Оплата штрафов\n"c_server"6 | "c_white"Баланс организаций\n"c_server"7 | "c_white"Семейный счёт", !"Выбрать", !"Закрыть");

			switch(listitem)
			{
				case 0: show_dialog(playerid, d_family_bank_put, DIALOG_STYLE_INPUT, !""scm_dialog"Банк семьи", !""c_white"Введите сумму, которую хотите положить в банк семьи:", !"Выбрать", !"Назад");
				case 1: show_dialog(playerid, d_family_bank_take, DIALOG_STYLE_INPUT, !""scm_dialog"Банк семьи", !""c_white"Введите сумму, которую хотите взять с банка семьи:", !"Выбрать", !"Назад");
			}
		}
		case d_family_bank_put:
		{
			if(!response) return show_dialog(playerid, d_family_bank, DIALOG_STYLE_LIST, !""scm_dialog"Семейный счёт", !""c_server"1 | "c_white"Пополнить счёт\n"c_server"2 | "c_white"Снять со счёта", !"Выбрать", !"Назад");

			new _value = strval(inputtext), familyid = PlayerInfo[playerid][family];
			if(_value < 1) return show_dialog(playerid, d_family_bank_put, DIALOG_STYLE_INPUT, !""scm_dialog"Банк семьи", !""c_white"Введите сумму, которую хотите положить в банк семьи:\n\n"c_grey"Нельзя положить менее 1$", !"Выбрать", !"Назад");
			if(_value > PlayerInfo[playerid][money]) return show_dialog(playerid, d_family_bank_put, DIALOG_STYLE_INPUT, !""scm_dialog"Банк семьи", !""c_white"Введите сумму, которую хотите положить в банк семьи:\n\n"c_grey"У Вас недостаточно средств", !"Выбрать", !"Назад");

			new text_string[144];
			format(text_string, sizeof(text_string), "{%s}[Семья]"c_silver" %s %s[%d] положил(-а) в банк семьи %d$", family_info[familyid -1][fam_chat_color], family_rank[familyid -1][PlayerInfo[playerid][family_rang] -1], PlayerInfo[playerid][name], playerid, _value);
			family_message(familyid, col_silver, text_string);

			give_money(playerid, -_value);
			insert_money_log(playerid, INVALID_PLAYER_ID, -_value, "банк семьи");

			family_info[familyid -1][fam_bank] += _value;

			new query_string[80];
			mysql_format(sql_connection, query_string, sizeof(query_string), "UPDATE `family` SET `fam_bank`='%d' WHERE `fam_id`='%d' LIMIT 1", family_info[familyid -1][fam_bank], familyid);
			mysql_query(sql_connection, query_string);

			format(query_string, sizeof(query_string), "%s положил в банк семьи %d$", PlayerInfo[playerid][name], _value);
			write_family(playerid, familyid, TYPE_LOG_OBWYAK, query_string);
		}
		case d_family_bank_take:
		{
			if(!response) return show_dialog(playerid, d_family_bank, DIALOG_STYLE_LIST, !""scm_dialog"Семейный счёт", !""c_server"1 | "c_white"Пополнить счёт\n"c_server"2 | "c_white"Снять со счёта", !"Выбрать", !"Назад");

			new _value = strval(inputtext), familyid = PlayerInfo[playerid][family];
			if(family_info[familyid -1][fam_settings][3] > PlayerInfo[playerid][family_rang])
			{
				pc_cmd_fmenu(playerid);
				return SendClientMessage(playerid, col_white, !""scm_error"Брать деньги с банка семьи может только лидер.");
			}
			if(_value < 1) return show_dialog(playerid, d_family_bank_take, DIALOG_STYLE_INPUT, !""scm_dialog"Банк семьи", !""c_grey"Нельзя взять менее 1$\n"c_white"Введите сумму, которую хотите взять с банка семьи:", !"Выбрать", !"Назад");
			if(family_info[familyid -1][fam_bank] < _value) return show_dialog(playerid, d_family_bank_take, DIALOG_STYLE_INPUT, !""scm_dialog"Банк семьи", !""c_grey"В банке семьи недостаточно средств\n"c_white"Введите сумму, которую хотите взять с банка семьи:", !"Выбрать", !"Назад");

			new text_string[128];
			format(text_string, sizeof(text_string), "{%s}[Семья]"c_silver" %s %s[%d] взял(-а) c банка семьи %d$", family_info[familyid -1][fam_chat_color], family_rank[familyid -1][PlayerInfo[playerid][family_rang] -1], PlayerInfo[playerid][name], playerid, _value);
			family_message(familyid, col_silver, text_string);

			give_money(playerid, _value);
			insert_money_log(playerid, INVALID_PLAYER_ID, _value, "банк фамы");

			family_info[familyid -1][fam_bank] -= _value;

			new query_string[80];
			mysql_format(sql_connection, query_string, sizeof(query_string), "UPDATE `family` SET `fam_bank`='%d' WHERE `fam_id`='%d' LIMIT 1", family_info[familyid -1][fam_bank], familyid);
			mysql_tquery(sql_connection, query_string);

			format(query_string, sizeof(query_string), "%s взял с банка семьи %d$", PlayerInfo[playerid][name], _value);
			write_family(playerid, familyid, TYPE_LOG_OBWYAK, query_string);
		}
		case d_family_omembers:
		{
			if(!response) return 1;
			pc_cmd_fmenu(playerid);
		}
		case d_family_info:
		{
			if(response) return pc_cmd_fmenu(playerid);
		}
		case d_family_settings:
		{
			if(!response) return pc_cmd_fmenu(playerid);

			if(family_info[PlayerInfo[playerid][family] -1][fam_settings][3] > PlayerInfo[playerid][family_rang])
			{
				pc_cmd_fmenu(playerid);
				return SendClientMessage(playerid, col_white, "Настройки семьи может использовать только лидер семьи.");
			}
			switch(listitem)
			{
				case 0..6: show_settings_family(playerid, PlayerInfo[playerid][family], listitem);
				case 7: show_dialog(playerid, d_family_settings_c, DIALOG_STYLE_INPUT, !""scm_dialog"Количество статусов", !""c_white"Введите количество семейных статусов, которое желаете установить:", !"Далее", !"Назад");
				case 8:
				{
					global_string[0] = EOS;
					for(new i = 0; i < family_info[PlayerInfo[playerid][family] -1][fam_settings][3]; i++)
					{
						new line_string[80];
						format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s\n", i + 1, family_rank[PlayerInfo[playerid][family] -1][i]);
						strcat(global_string, line_string);
					}
					return show_dialog(playerid, d_family_rank_list, DIALOG_STYLE_LIST, !""scm_dialog"Название статуса", global_string, !"Выбрать", !"Назад");
				}
				case 9: show_dialog(playerid, d_family_national, DIALOG_STYLE_LIST, !""scm_dialog"Национальность семьи", !"Американцы\nЯпонцы\nИтальянцы\nМексиканцы\nЛатиноамериканцы\nИспанцы\nРусские\nПортугальцы\nФранцузы", !"Выбрать", !"Отмена");
				case 10:
				{
					new color_dialog[245];
					format(color_dialog, sizeof(color_dialog), "{%s}Цвет 1\n{%s}Цвет 2\n{%s}Цвет 3\n{%s}Цвет 4\n{%s}Цвет 5\n"c_grey"Ввести свой RGB-цвет", family_chat_color[0], family_chat_color[1] ,family_chat_color[2], family_chat_color[3], family_chat_color[4]);
					return show_dialog(playerid, d_family_color, DIALOG_STYLE_LIST, !""scm_dialog"Цвет чата", color_dialog, !"Выбрать", !"Отмена");
				}
			}
		}
		case d_family_color:
		{
			if(!response) return family_settings(playerid);

			switch(listitem)
			{
				case 5: show_dialog(playerid, d_family_color_rgb, DIALOG_STYLE_INPUT, !""scm_dialog"Цвет чата", !""c_white"Введите цвет, который желаете применить для чата семьи:\n\n"c_grey"Цвет должен быть в RGB формате, например: FFFF00", !"Далее", !"Назад");
				default:
				{
					new familyid = PlayerInfo[playerid][family];
					format(family_info[familyid -1][fam_chat_color], 8, "%s", family_chat_color[listitem]);
					SendClientMessage(playerid, col_white, !""scm_info"Цвет чата семьи изменён.");

					new query_string[85];
					mysql_format(sql_connection, query_string, sizeof(query_string), "UPDATE `family` SET `fam_chat_color`='%s' WHERE `fam_id`='%d' LIMIT 1", family_info[familyid -1][fam_chat_color], familyid);
					mysql_tquery(sql_connection, query_string);

					foreach(new i: family_players[familyid])
					{
						new text_string[80];
						format(text_string, sizeof(text_string), "{%s}%s "c_white"Family", family_info[familyid -1][fam_chat_color], family_info[familyid -1][fam_name]);
						UpdateDynamic3DTextLabelText(PlayerInfo[i][family_text], -1, text_string);
					}

					new text_string[120];
					format(text_string, sizeof(text_string), "Семейный остров №%d\nВладелец: {%s}%s Family", fi_info[family_info[familyid -1][fam_house] -1][fi_id], family_info[familyid -1][fam_chat_color], family_info[familyid -1][fam_name]);
					UpdateDynamic3DTextLabelText(fi_info[family_info[familyid -1][fam_house] -1][fi_text], col_white, text_string);

					family_settings(playerid);
				}
			}
			return 1;
		}
		case d_family_color_rgb:
		{
			if(!response)
			{
				new color_dialog[245];
				format(color_dialog, sizeof(color_dialog), "{%s}Цвет 1\n{%s}Цвет 2\n{%s}Цвет 3\n{%s}Цвет 4\n{%s}Цвет 5\n"c_grey"Ввести свой RGB-цвет", family_chat_color[0], family_chat_color[1] ,family_chat_color[2], family_chat_color[3], family_chat_color[4]);
				return show_dialog(playerid, d_family_color, DIALOG_STYLE_LIST, !""scm_dialog"Цвет чата", color_dialog, !"Выбрать", !"Отмена");
			}
			if(strlen(inputtext) != 6 || is_text_invalid(inputtext)) return show_dialog(playerid, d_family_color_rgb, DIALOG_STYLE_INPUT, !""scm_dialog"Цвет чата", !""c_white"Введите цвет, который желаете применить для чата семьи:\n\n"c_grey"Цвет должен быть в RGB формате, например: FFFF00", !"Далее", !"Назад");

			new familyid = PlayerInfo[playerid][family];
			format(family_info[familyid -1][fam_chat_color], 8, "%s", inputtext);
			SendClientMessage(playerid, col_white, !""scm_info"Цвет чата семьи изменён.");

			new query_string[85];
			mysql_format(sql_connection, query_string, sizeof(query_string), "UPDATE `family` SET `fam_chat_color`='%e' WHERE `fam_id`='%d' LIMIT 1", family_info[familyid -1][fam_chat_color], familyid);
			mysql_tquery(sql_connection, query_string);

			foreach(new i: family_players[familyid])
			{
				new text_string[80];
				format(text_string, sizeof(text_string), "{%s}%s "c_white"Family", family_info[familyid -1][fam_chat_color], family_info[familyid -1][fam_name]);
				UpdateDynamic3DTextLabelText(PlayerInfo[i][family_text], -1, text_string);
			}

			new text_string[120];
			format(text_string, sizeof(text_string), "Семейный остров №%d\nВладелец: {%s}%s Family", fi_info[family_info[familyid -1][fam_house] -1][fi_id], family_info[familyid -1][fam_chat_color], family_info[familyid -1][fam_name]);
			UpdateDynamic3DTextLabelText(fi_info[family_info[familyid -1][fam_house] -1][fi_text], col_white, text_string);

			family_settings(playerid);
		}
		case d_family_rank_list:
		{
			if(!response) return family_settings(playerid);

			SetPVarInt(playerid, !"rank_name_listitem", listitem);
			return show_dialog(playerid, d_family_rank_name, DIALOG_STYLE_INPUT, !""scm_dialog"Название статуса", !""c_white"Введите название статуса:", !"Далее", !"Назад");
		}
		case d_family_rank_name:
		{
			if(!response)
			{
				global_string[0] = EOS;
				for(new i = 0; i < family_info[PlayerInfo[playerid][family] -1][fam_settings][3]; i++)
				{
					new line_string[80];
					format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s\n", i + 1, family_rank[PlayerInfo[playerid][family] -1][i]);
					strcat(global_string, line_string);
				}
				return show_dialog(playerid, d_family_rank_list, DIALOG_STYLE_LIST, !""scm_dialog"Название статуса", global_string, !"Выбрать", !"Назад");
			}
			if(strlen(inputtext) < 3 || strlen(inputtext) > 30) return show_dialog(playerid, d_family_rank_name, DIALOG_STYLE_INPUT, !""scm_dialog"Название статуса", !""c_white"Введите название статуса:\n"c_grey"Название статуса должно составлять от 3 до 30 символов", !"Далее", !"Назад");
			if(is_text_invalid(inputtext)) return show_dialog(playerid, d_family_rank_name, DIALOG_STYLE_INPUT, !""scm_dialog"Название статуса", !""c_white"Введите название статуса:\n"c_grey"Название статуса не должно содержать некорректных символов", !"Далее", !"Назад");

			new familyid = PlayerInfo[playerid][family];
			new dialog_rank_id = GetPVarInt(playerid, !"rank_name_listitem");
			format(family_rank[familyid -1][dialog_rank_id], 30, "%s", inputtext);

			global_string[0] = EOS;
			for(new i = 0; i < family_info[PlayerInfo[playerid][family] -1][fam_settings][3]; i++)
			{
				new line_string[80];
				format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s\n", i + 1, family_rank[PlayerInfo[playerid][family] -1][i]);
				strcat(global_string, line_string);
			}
			show_dialog(playerid, d_family_rank_list, DIALOG_STYLE_LIST, !""scm_dialog"Название статуса", global_string, !"Выбрать", !"Назад");

			dlobal_string[0] = EOS;
			mysql_format(sql_connection, dlobal_string, sizeof(dlobal_string), "UPDATE `family` SET `fam_ranks`='%e|%e|%e|%e|%e|%e|%e|%e|%e|%e|%e|%e|%e|%e|%e|%e|%e|%e|%e|%e' WHERE `fam_id`='%d' LIMIT 1", family_rank[familyid -1][0], family_rank[familyid -1][1], family_rank[familyid -1][2], family_rank[familyid -1][3], family_rank[familyid -1][4], family_rank[familyid -1][5], family_rank[familyid -1][6], family_rank[familyid -1][7], family_rank[familyid -1][8], family_rank[familyid -1][9], family_rank[familyid -1][10], family_rank[familyid -1][11], family_rank[familyid -1][12], family_rank[familyid -1][13], family_rank[familyid -1][14], family_rank[familyid -1][15], family_rank[familyid -1][16], family_rank[familyid -1][17], family_rank[familyid -1][18], family_rank[familyid -1][19], familyid);
			mysql_query(sql_connection, dlobal_string);
			return 1;
		}
		case d_family_national:
		{
			if(!response) return family_settings(playerid);

			family_info[PlayerInfo[playerid][family] -1][fam_nationality] = listitem + 1;
			SendClientMessage(playerid, col_white, !""scm_info"Национальность семьи изменена.");

			new query_string[90];
			format(query_string, sizeof(query_string), "UPDATE `family` SET `fam_nationality`='%d' WHERE `fam_id`='%d' LIMIT 1", family_info[PlayerInfo[playerid][family] -1][fam_nationality], PlayerInfo[playerid][family]);
			mysql_query(sql_connection, query_string);

			family_settings(playerid);
		}
		case d_family_settings_c:
		{
			if(!response) return family_settings(playerid);

			new rank_count = strval(inputtext);
			if(rank_count < 3 || rank_count > 20) return show_dialog(playerid, d_family_settings_c, DIALOG_STYLE_INPUT, !""scm_dialog"Количество статусов", !""c_white"Введите количество семейных статусов, которое желаете установить:\n"c_grey"Количество статусов не может быть меньше 3 и больше 20", !"Далее", !"Назад");

			PlayerInfo[playerid][family_rang] = rank_count;
			family_info[PlayerInfo[playerid][family] -1][fam_settings][3] = rank_count;

			family_settings(playerid);
			family_sql(PlayerInfo[playerid][family]);

			update_int_sql(playerid, "u_family_rank", PlayerInfo[playerid][family_rang]);
		}
		case d_family_settings_select:
		{
			if(!response) return family_settings(playerid);

			family_info[PlayerInfo[playerid][family] -1][fam_settings][GetPVarInt(playerid, !"select_id")] = listitem + 1;
			DeletePVar(playerid, !"select_id");

			family_settings(playerid);
			family_sql(PlayerInfo[playerid][family]);
		}
		case d_family_invite:
		{
			if(!response) return 1;

			new player_family_id = GetPVarInt(playerid, !"family_player"), family_id = GetPVarInt(playerid, !"family_id");
			DeletePVar(playerid, !"family_player");
			DeletePVar(playerid, !"family_id");

			PlayerInfo[playerid][family] = family_id;
			PlayerInfo[playerid][family_rang] = 1;

			Iter_Add(family_players[family_id], playerid);

			new text_string[125];
			format(text_string, sizeof(text_string), "{%s}[Семья]"c_silver" %s[%d] присоединился к семье", family_info[family_id -1][fam_chat_color], PlayerInfo[playerid][name], playerid);
			family_message(family_id, col_silver, text_string);

			new query_string[130];
			format(query_string, sizeof(query_string), "UPDATE `users` SET `u_family`='%d',`u_family_rank`='1',`u_family_date`=NOW() WHERE `u_id`='%d' LIMIT 1", family_id, PlayerInfo[playerid][id]);
			mysql_query(sql_connection, query_string);

			family_info[family_id -1][fam_members] ++;

			format(query_string, sizeof(query_string), "UPDATE `family` SET `fam_members`='%d' WHERE `fam_id`='%d' LIMIT 1", family_info[family_id -1][fam_members], PlayerInfo[playerid][family]);
			mysql_query(sql_connection, query_string);

			format(query_string, sizeof(query_string), "%s принял в семью %s", PlayerInfo[player_family_id][name], PlayerInfo[playerid][name]);
			write_family(player_family_id, family_id, TYPE_LOG_INVITE, query_string);
		}
		case d_family_rank:
		{
			if(!response) return DeletePVar(playerid, !"pl_setrank_id");
			new _pl_id = GetPVarInt(playerid, !"pl_setrank_id");

			if(!IsPlayerConnected(_pl_id)  || _pl_id == playerid) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не найден.");
			if(PlayerInfo[_pl_id][family] != PlayerInfo[playerid][family]) return SendClientMessage(playerid, col_white, !""scm_error"Игрок не состоит в Вашей семье.");
			if(listitem + 1 >= PlayerInfo[playerid][family_rang] || PlayerInfo[playerid][family_rang] <= PlayerInfo[_pl_id][family_rang])
			{
				global_string[0] = EOS;
				for(new i = 0; i < family_info[PlayerInfo[playerid][family] -1][fam_settings][3]; i ++)
				{
					new line_string[80];
					format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s\n", i + 1, family_rank[PlayerInfo[playerid][family] -1][i]);
					strcat(global_string, line_string);
				}
				show_dialog(playerid, d_family_rank, DIALOG_STYLE_LIST, !""scm_dialog"Семейный статус", global_string, !"Выбрать", !"Назад");
				return SendClientMessage(playerid, col_white, !""scm_error"Вы не можете назначить игрока на статус выше Вашего.");
			}
			PlayerInfo[_pl_id][family_rang] = listitem + 1;
			update_int_sql(_pl_id, "u_family_rank", PlayerInfo[_pl_id][family_rang]);

			new text_string[144];
			format(text_string, sizeof(text_string), ""scm_info"Вы назначили "c_server"%s"c_white" на статус "c_gold"%s (%d)", PlayerInfo[_pl_id][name], family_rank[PlayerInfo[_pl_id][family] -1][listitem], listitem + 1);
			SendClientMessage(playerid, col_white, text_string);

			format(text_string, sizeof(text_string), ""scm_info""c_server"%s"c_white" назначил(-а) Вас на статус "c_gold"%s (%d)", PlayerInfo[playerid][name], family_rank[PlayerInfo[_pl_id][family] -1][listitem], listitem + 1);
			SendClientMessage(_pl_id, col_succes, text_string);

			format(text_string, sizeof(text_string), "%s назначил %s на статус %s", PlayerInfo[playerid][name], PlayerInfo[_pl_id][name], family_rank[PlayerInfo[_pl_id][family] -1][listitem]);
			write_family(playerid, PlayerInfo[playerid][family], TYPE_LOG_AGIVERANK, text_string);
		}
        case d_offamily_list:
        {
			if(!response)
			{
				for(new i = 0; i < 10; i ++)
				{
					new pvar_string[8];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", i);
					DeletePVar(playerid, pvar_string);
				}
				DeletePVar(playerid, !"ofm_list_page");
				DeletePVar(playerid, !"ofm_list_rows");
				DeletePVar(playerid, !"ofm_listitem");
				return DeletePVar(playerid, !"ofm_type");
			}

			switch(listitem)
			{
				case 0:
				{
					new page_id = GetPVarInt(playerid, !"ofm_list_page") -1;
					if(page_id == 0)
					{
						SendClientMessage(playerid, col_white, !""scm_error"Вы находитесь на первой странице списка членов семьи.");
						if(!GetPVarInt(playerid, !"ofm_type"))
						{
							new query_string[100];
							mysql_format(sql_connection, query_string, sizeof(query_string), "SELECT `u_name`,`u_last_date`,`u_family_rank` FROM `users` WHERE `u_family`='%d'", PlayerInfo[playerid][family]);
							mysql_tquery(sql_connection, query_string, "callback_offamily", "i", playerid);
							return 1;
						}
						return 1;
					}
					SetPVarInt(playerid, !"ofm_list_page", page_id);

					if(!GetPVarInt(playerid, !"ofm_type"))
					{
						new query_string[100];
						mysql_format(sql_connection, query_string, sizeof(query_string), "SELECT `u_name`,`u_last_date`,`u_family_rank` FROM `users` WHERE `u_family`='%d'", PlayerInfo[playerid][family]);
						mysql_tquery(sql_connection, query_string, "callback_offamily", "i", playerid);
						return 1;
					}
				}
				case 1:
				{
					new page_id = GetPVarInt(playerid, !"ofm_list_page") -1;
					if((page_id * 10) + 1 >= GetPVarInt(playerid, !"ofm_list_rows"))
					{
						SendClientMessage(playerid, col_white, !""scm_error"Вы находитесь на последней странице списка членов семьи.");

						if(!GetPVarInt(playerid, !"ofm_type"))
						{
							new query_string[100];
							mysql_format(sql_connection, query_string, sizeof(query_string), "SELECT `u_name`,`u_last_date`,`u_family_rank` FROM `users` WHERE `u_family`='%d'", PlayerInfo[playerid][family]);
							mysql_tquery(sql_connection, query_string, "callback_offamily", "i", playerid);
							return 1;
						}
						return 1;
					}
					SetPVarInt(playerid, !"ofm_list_page", page_id + 2);

					if(!GetPVarInt(playerid, !"ofm_type"))
					{
						new query_string[100];
						mysql_format(sql_connection, query_string, sizeof(query_string), "SELECT `u_name`,`u_last_date`,`u_family_rank` FROM `users` WHERE `u_family`='%d'", PlayerInfo[playerid][family]);
						mysql_tquery(sql_connection, query_string, "callback_offamily", "i", playerid);
						return 1;
					}
				}
				default:
				{
					new pvar_string[28], pl_name[20];
					format(pvar_string, 10, "ofm_%d", listitem -2);
					GetPVarString(playerid, pvar_string, pl_name, 20);
					SetPVarInt(playerid, !"ofm_listitem", listitem -2);

					show_dialog_offpanel(playerid, pl_name, 3);
				}
			}
			return 1;
		}
		case d_offamily_pl_menu:
		{
			if(!response)
			{
				DeletePVar(playerid, !"ofm_listitem");
				if(!GetPVarInt(playerid, !"ofm_type"))
				{
					new query_string[100];
					mysql_format(sql_connection, query_string, sizeof(query_string), "SELECT `u_name`,`u_last_date`,`u_family_rank` FROM `users` WHERE `u_family`='%d'", PlayerInfo[playerid][family]);
					mysql_tquery(sql_connection, query_string, "callback_offamily", "i", playerid);
					return 1;
				}
				return 1;
			}
			switch(listitem)
			{
				case 0:
				{
					new pvar_string[18], pl_name[20];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, 20);

					new query_string[120];
					mysql_format(sql_connection, query_string, sizeof(query_string), "SELECT `u_family_rank`,`u_family_date`,`u_last_date` FROM `users` WHERE `u_name`='%s' LIMIT 1", pl_name);
					mysql_tquery(sql_connection, query_string, "callback_offamily_info", "i", playerid);
				}
				case 1:
				{
					new pvar_string[28], pl_name[20];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, 20);
					format(pvar_string, sizeof(pvar_string), ""c_server"%s", pl_name);

					offuninvite_check(playerid, pl_name, 0);
				}
				case 2: show_dialog(playerid, d_offamily_pl_rank, DIALOG_STYLE_INPUT, !""scm_dialog"Изменение ранга игрока", !""c_white"Введите номер ранга, который хотите установить для игрока:", !"Выбрать", !"Назад");
				case 3:
				{
					new pvar_string[38], pl_name[MAX_PLAYER_NAME];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

					SetPVarInt(playerid, !"ofm_list_page", 1);

					new tquery_string[110];
					format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `name`='%s' ORDER BY `logs_family`.`id` DESC", pl_name);
					mysql_tquery(sql_connection, tquery_string, "logs_player_family", "i", playerid);
				}
			}
		}
		case d_offamily_pl_rank:
		{
			new pvar_string[28], pl_name[MAX_PLAYER_NAME -4];
			format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
			GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME -4);

			if(!response) return show_dialog_offpanel(playerid, pl_name, 3);

			if(strval(inputtext) < 1 || strval(inputtext) > family_info[PlayerInfo[playerid][family] -1][fam_settings][3]) return show_dialog(playerid, d_offamily_pl_rank, DIALOG_STYLE_INPUT, !""scm_dialog"Изменение ранга игрока", !""c_grey"Неверное значение ранга\n"c_white"Введите номер ранга, который хотите установить для игрока:", !"Выбрать", !"Назад");
			if(strval(inputtext) + 1 >= PlayerInfo[playerid][family_rang]) return show_dialog(playerid, d_offamily_pl_rank, DIALOG_STYLE_INPUT, !""scm_dialog"Изменение ранга игрока", !""c_grey"Вы не можете повысить ранг выше Вашего\n"c_white"Введите номер ранга, который хотите установить для игрока:", !"Выбрать", !"Назад");

			offmembers_rank(playerid, strval(inputtext), pl_name, 0);
		}
		case d_offamily_pl_menu_info:
		{
			new pvar_string[38], pl_name[MAX_PLAYER_NAME];
			format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
			GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

			show_dialog_offpanel(playerid, pl_name, 3);
		}
		case d_offamily_logback:
		{
			if(!response)
			{
				for(new i = 0; i < 10; i ++)
				{
					new pvar_string[8];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", i);
					DeletePVar(playerid, pvar_string);
				}
				DeletePVar(playerid, !"ofm_list_page");
				DeletePVar(playerid, !"ofm_list_rows");
				DeletePVar(playerid, !"ofm_listitem");
				DeletePVar(playerid, !"ofm_type");
				return pc_cmd_fmenu(playerid);
			}
			SetPVarInt(playerid, !"ofm_list_page", 1);

			new pvar_string[38], pl_name[MAX_PLAYER_NAME];
			format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
			GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

			new tquery_string[105];
			format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `name`='%s' ORDER BY `logs_family`.`id` DESC", pl_name);
			mysql_tquery(sql_connection, tquery_string, "logs_player_family", "i", playerid);
		}
		case d_offamily_lognext:
		{
			if(!response)
			{
				for(new i = 0; i < 10; i ++)
				{
					new pvar_string[8];
					format(pvar_string, sizeof(pvar_string), "vrl_%d", i);
					DeletePVar(playerid, pvar_string);
				}
				if(GetPVarInt(playerid, !"ofm_list_page") == 1)
				{
					DeletePVar(playerid, !"ofm_list_page");
					DeletePVar(playerid, !"ofm_list_rows");
				}
				return 1;
			}

			switch(listitem)
			{
				case 0:
				{
					if(GetPVarInt(playerid, "ofm_list_page") == 1)
					{
						for(new i = 0; i < 10; i ++)
						{
							new pvar_string[8];
							format(pvar_string, sizeof(pvar_string), "ofm_%d", i);
							DeletePVar(playerid, pvar_string);
						}
						DeletePVar(playerid, "ofm_list_page");
						DeletePVar(playerid, "ofm_list_rows");
						DeletePVar(playerid, "ofm_listitem");
						DeletePVar(playerid, "ofm_type");

						for(new i = 0; i < 10; i ++)
						{
							new pvar_string[8];
							format(pvar_string, sizeof(pvar_string), "vrl_%d", i);
							DeletePVar(playerid, pvar_string);
						}
						return 1;
					}
					else
					{
						new pvar_string[38], pl_name[MAX_PLAYER_NAME];
						format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
						GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

						new tquery_string[105];
						format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `name`='%s' ORDER BY `logs_family`.`id` DESC", pl_name);
						mysql_tquery(sql_connection, tquery_string, "logs_player_family", "i", playerid);

						SetPVarInt(playerid, !"ofm_list_page", GetPVarInt(playerid, !"ofm_list_page") -1);
					}
					return 1;
				}
				case 1:
				{
					if((GetPVarInt(playerid, !"ofm_list_page") * 10) + 1 >= GetPVarInt(playerid, !"ofm_list_rows"))
					{
						SendClientMessage(playerid, col_white, !""scm_error"Вы находитесь на последней странице логов.");

						new pvar_string[38], pl_name[MAX_PLAYER_NAME];
						format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, "ofm_listitem"));
						GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

						new tquery_string[105];
						format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `name`='%s' ORDER BY `logs_family`.`id` DESC", pl_name);
						mysql_tquery(sql_connection, tquery_string, "logs_player_family", "i", playerid);

						return SetPVarInt(playerid, !"ofm_list_page", GetPVarInt(playerid, !"ofm_list_page"));
					}

					new pvar_string[38], pl_name[MAX_PLAYER_NAME];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

					new tquery_string[105];
					format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `name`='%s' ORDER BY `logs_family`.`id` DESC", pl_name);
					mysql_tquery(sql_connection, tquery_string, "logs_player_family", "i", playerid);

					return SetPVarInt(playerid, !"ofm_list_page", GetPVarInt(playerid, !"ofm_list_page") + 1);
				}
				default:
				{
					new pvar_string[16];
					format(pvar_string, 16, "vrl_%d", listitem -2);
					new select_id = GetPVarInt(playerid, pvar_string);

					for(new i = 0; i < 10; i ++)
					{
						format(pvar_string, sizeof(pvar_string), "vrl_%d", i);
						DeletePVar(playerid, pvar_string);
					}
					DeletePVar(playerid, "ofm_list_page");
					DeletePVar(playerid, "ofm_list_rows");

					new tquery_string[105];
					format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `id`='%d' LIMIT 1", select_id);
					mysql_tquery(sql_connection, tquery_string, "logs_player_family_info", "i", playerid);
					return 1;
				}
			}
		}
		case d_family_logs:
		{
			if(!response) return pc_cmd_fmenu(playerid);

			switch(listitem)
			{
				case 0:
				{
					SetPVarInt(playerid, !"ofm_list_page", 1);
					SetPVarInt(playerid, !"logs_type", TYPE_LOG_AGIVERANK + 1);

					new tquery_string[105];
					format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `family`='%d' AND `type`='%d' ORDER BY `logs_family`.`id` DESC", PlayerInfo[playerid][family], GetPVarInt(playerid, !"logs_type") -1);
					mysql_tquery(sql_connection, tquery_string, "get_family_logs", "i", playerid);
				}
				case 1:
				{
					SetPVarInt(playerid, !"ofm_list_page", 1);
					SetPVarInt(playerid, !"logs_type", TYPE_LOG_WARN + 1);

					new tquery_string[105];
					format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `family`='%d' AND `type`='%d' ORDER BY `logs_family`.`id` DESC", PlayerInfo[playerid][family], GetPVarInt(playerid, !"logs_type") -1);
					mysql_tquery(sql_connection, tquery_string, "get_family_logs", "i", playerid);
				}
				case 2:
				{
					SetPVarInt(playerid, !"ofm_list_page", 1);
					SetPVarInt(playerid, !"logs_type", TYPE_LOG_BL + 1);

					new tquery_string[105];
					format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `family`='%d' AND `type`='%d' ORDER BY `logs_family`.`id` DESC", PlayerInfo[playerid][family], GetPVarInt(playerid, !"logs_type") -1);
					mysql_tquery(sql_connection, tquery_string, "get_family_logs", "i", playerid);
				}
				case 3:
				{
					SetPVarInt(playerid, !"ofm_list_page", 1);
					SetPVarInt(playerid, !"logs_type", TYPE_LOG_INVITE + 1);

					new tquery_string[105];
					format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `family`='%d' AND `type`='%d' ORDER BY `logs_family`.`id` DESC", PlayerInfo[playerid][family], GetPVarInt(playerid, !"logs_type") -1);
					mysql_tquery(sql_connection, tquery_string, "get_family_logs", "i", playerid);
				}
				case 4:
				{
					SetPVarInt(playerid, !"ofm_list_page", 1);
					SetPVarInt(playerid, !"logs_type", TYPE_LOG_UVAL + 1);

					new tquery_string[105];
					format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `family`='%d' AND `type`='%d' ORDER BY `logs_family`.`id` DESC", PlayerInfo[playerid][family], GetPVarInt(playerid, !"logs_type") -1);
					mysql_tquery(sql_connection, tquery_string, "get_family_logs", "i", playerid);
				}
				case 5:
				{
					SetPVarInt(playerid, !"ofm_list_page", 1);
					SetPVarInt(playerid, !"logs_type", TYPE_LOG_OBWYAK + 1);

					new tquery_string[105];
					format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `family`='%d' AND `type`='%d' ORDER BY `logs_family`.`id` DESC", PlayerInfo[playerid][family], GetPVarInt(playerid, !"logs_type") -1);
					mysql_tquery(sql_connection, tquery_string, "get_family_logs", "i", playerid);
				}
			}
		}
		case d_family_logback:
		{
			if(!response)
			{
				DeletePVar(playerid, !"logs_type");
				return pc_cmd_fmenu(playerid);
			}
			SetPVarInt(playerid, !"ofm_list_page", 1);

			new tquery_string[105];
			format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `family`='%d' AND `type`='%d' ORDER BY `logs_family`.`id` DESC", PlayerInfo[playerid][family], GetPVarInt(playerid, !"logs_type") -1);
			mysql_tquery(sql_connection, tquery_string, "get_family_logs", "i", playerid);
		}
		case d_family_lognext:
		{
			if(!response)
			{
				for(new i = 0; i < 10; i ++)
				{
					new pvar_string[8];
					format(pvar_string, sizeof(pvar_string), "vrl_%d", i);
					DeletePVar(playerid, pvar_string);
				}
				if(GetPVarInt(playerid, !"ofm_list_page") == 1)
				{
					DeletePVar(playerid, !"ofm_list_page");
					DeletePVar(playerid, !"ofm_list_rows");
					DeletePVar(playerid, !"logs_type");
				}
				return pc_cmd_fmenu(playerid);
			}

			switch(listitem)
			{
				case 0:
				{
					if(GetPVarInt(playerid, !"ofm_list_page") == 1)
					{
						for(new i = 0; i < 10; i ++)
						{
							new pvar_string[8];
							format(pvar_string, sizeof(pvar_string), "vrl_%d", i);
							DeletePVar(playerid, pvar_string);
						}
						DeletePVar(playerid, !"ofm_list_page");
						DeletePVar(playerid, !"ofm_list_rows");
						DeletePVar(playerid, !"logs_type");
						return pc_cmd_fmenu(playerid);
					}
					else
					{
						new tquery_string[105];
						format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `family`='%d' AND `type`='%d' ORDER BY `logs_family`.`id` DESC", PlayerInfo[playerid][family], GetPVarInt(playerid, !"logs_type") -1);
						mysql_tquery(sql_connection, tquery_string, "get_family_logs", "i", playerid);

						SetPVarInt(playerid, !"ofm_list_page", GetPVarInt(playerid, !"ofm_list_page") -1);
					}
					return 1;
				}
				case 1:
				{
					if((GetPVarInt(playerid, !"ofm_list_page") * 10) + 1 >= GetPVarInt(playerid, !"ofm_list_rows"))
					{
						SendClientMessage(playerid, col_white, !""scm_error"Вы находитесь на последней странице логов.");

						new tquery_string[105];
						format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `family`='%d' AND `type`='%d' ORDER BY `logs_family`.`id` DESC", PlayerInfo[playerid][family], GetPVarInt(playerid, !"logs_type") -1);
						mysql_tquery(sql_connection, tquery_string, "get_family_logs", "i", playerid);

						return SetPVarInt(playerid, !"ofm_list_page", GetPVarInt(playerid, !"ofm_list_page"));
					}
					new tquery_string[105];
					format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `family`='%d' AND `type`='%d' ORDER BY `logs_family`.`id` DESC", PlayerInfo[playerid][family], GetPVarInt(playerid, !"logs_type") -1);
					mysql_tquery(sql_connection, tquery_string, "get_family_logs", "i", playerid);

					return SetPVarInt(playerid, !"ofm_list_page", GetPVarInt(playerid, !"ofm_list_page") + 1);
				}
				default:
				{
					new pvar_string[16];
					format(pvar_string, sizeof(pvar_string), "vrl_%d", listitem -2);
					new select_id = GetPVarInt(playerid, pvar_string);

					for(new i = 0; i < 10; i++)
					{
						format(pvar_string, sizeof(pvar_string), "vrl_%d", i);
						DeletePVar(playerid, pvar_string);
					}
					DeletePVar(playerid, !"ofm_list_page");
					DeletePVar(playerid, !"ofm_list_rows");

					new tquery_string[105];
					format(tquery_string, sizeof(tquery_string), "SELECT * FROM `logs_family` WHERE `id`='%d' LIMIT 1", select_id);
					mysql_tquery(sql_connection, tquery_string, "get_family_logs_info", "i", playerid);
					return 1;
				}
			}
		}
		case d_offamily_bl_list:
		{
			if(!response)
			{
				for(new i = 0; i < 10; i ++)
				{
					new pvar_string[8];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", i);
					DeletePVar(playerid, pvar_string);
				}
				DeletePVar(playerid, !"ofm_list_page");
				DeletePVar(playerid, !"ofm_list_rows");
				DeletePVar(playerid, !"ofm_listitem");
				return DeletePVar(playerid, !"ofm_type");
			}

			switch(listitem)
			{
				case 0:
				{
					new page_id = GetPVarInt(playerid, !"ofm_list_page") -1;
					if(page_id == 0)
					{
						SendClientMessage(playerid, col_white, !""scm_error"Вы находитесь на первой странице чёрного списка.");

						if(!GetPVarInt(playerid, !"ofm_type"))
						{
							new query_string[80];
							format(query_string, sizeof(query_string), "SELECT `bl_name`,`bl_date` FROM `family_blacklist` WHERE `bl_family`='%d'", PlayerInfo[playerid][family]);
							mysql_tquery(sql_connection, query_string, "callback_bl_family", "i", playerid);
							return 1;
						}
						return 1;
					}
					SetPVarInt(playerid, !"ofm_list_page", page_id);

					if(!GetPVarInt(playerid, !"ofm_type"))
					{
						new query_string[80];
						format(query_string, sizeof(query_string), "SELECT `bl_name`,`bl_date` FROM `family_blacklist` WHERE `bl_family`='%d'", PlayerInfo[playerid][family]);
						mysql_tquery(sql_connection, query_string, "callback_bl_family", "i", playerid);
						return 1;
					}
				}
				case 1:
				{
					new page_id = GetPVarInt(playerid, !"ofm_list_page") -1;
					if((page_id * 10) + 1 >= GetPVarInt(playerid, !"ofm_list_rows"))
					{
						SendClientMessage(playerid, col_white, "Вы находитесь на последней странице чёрного списка.");
						if(!GetPVarInt(playerid, !"ofm_type"))
						{
							new query_string[80];
							format(query_string, sizeof(query_string), "SELECT `bl_name`,`bl_date` FROM `family_blacklist` WHERE `bl_family`='%d'", PlayerInfo[playerid][family]);
							mysql_tquery(sql_connection, query_string, "callback_bl_family", "i", playerid);
							return 1;
						}
						return 1;
					}
					SetPVarInt(playerid, !"ofm_list_page", page_id + 2);

					if(!GetPVarInt(playerid, !"ofm_type"))
					{
						new query_string[80];
						format(query_string, sizeof(query_string), "SELECT `bl_name`,`bl_date` FROM `family_blacklist` WHERE `bl_family`='%d'", PlayerInfo[playerid][family]);
						mysql_tquery(sql_connection, query_string, "callback_bl_family", "i", playerid);
						return 1;
					}
				}
				default:
				{
					new pvar_string[38], pl_name[MAX_PLAYER_NAME];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", listitem -2);
					GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);
					SetPVarInt(playerid, !"ofm_listitem", listitem -2);

					show_dialog_offpanel(playerid, pl_name, 4);
				}
			}
			return 1;
		}
		case d_offamily_bl_pl_menu:
		{
			if(!response)
			{
				DeletePVar(playerid, !"ofm_listitem");
				if(!GetPVarInt(playerid, !"ofm_type"))
				{
					new query_string[80];
					format(query_string, sizeof(query_string), "SELECT `bl_name`,`bl_date` FROM `family_blacklist` WHERE `bl_family`='%d'", PlayerInfo[playerid][family]);
					mysql_tquery(sql_connection, query_string, "callback_bl_family", "i", playerid);
					return 1;
				}
				return 1;
			}
			switch(listitem)
			{
				case 0:
				{
					new pvar_string[38], pl_name[MAX_PLAYER_NAME];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

					new tquery_string[90];
					mysql_format(sql_connection, tquery_string, sizeof(tquery_string), "SELECT * FROM `family_blacklist` WHERE `bl_name`='%s' LIMIT 1", pl_name);
					mysql_tquery(sql_connection, tquery_string, "callback_bl_family_info", "i", playerid);
				}
				case 1:
				{
					new pvar_string[38], pl_name[MAX_PLAYER_NAME];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);
					format(pvar_string, sizeof(pvar_string), ""scm_dialog"%s", pl_name);

					new tquery_string[120];
					mysql_format(sql_connection, tquery_string, sizeof(tquery_string), "SELECT `bl_player` FROM `family_blacklist` WHERE `bl_name`='%e' AND `bl_family`='%d' LIMIT 1", pl_name, PlayerInfo[playerid][family]);
					mysql_tquery(sql_connection, tquery_string, "check_bl_list_family", "ds", playerid, pl_name);

					DeletePVar(playerid, !"ofm_listitem");
				}
			}
		}
		case d_offamily_bl_pl_menu_info:
		{
			new pvar_string[38], pl_name[MAX_PLAYER_NAME];
			format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
			GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

			show_dialog_offpanel(playerid, pl_name, 4);
		}
		case d_election:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(election_status != election_status_none)
					{
						DestroyDynamicPickup(election_pickup);
						Delete3DTextLabel(election_text);
					}
					election_pickup = -1;
					election_text = Text3D:-1;
					election_status = election_status_none;
					new _t_string[108];
					format(_t_string, 108, ""c_server"* A.INFO: "c_grey"%s установил изменил статус выборов | Выборы закрыты.", PlayerInfo[playerid][name]);
					foreach(new i: admin_players)SendClientMessage(i, col_gray, _t_string);
					mysql_tquery(sql_connection, "UPDATE `server_variables` SET `var_count`='0' WHERE `var_id`='8'");
				}
				case 1:
				{
					if(election_status == election_status_none)
					{
						election_pickup = CreateDynamicPickup(19134, 23, 1582.4055,-1574.5140,1004.6200);
						pick_info[election_pickup][pick_type] = pick_type_server;

						election_text = Create3DTextLabel(""c_server"** Выборы **",col_lblue,1582.4055,-1574.5140,1004.6200,20.0,-1,-1);
					}
					new _t_string[108];
					format(_t_string, 108, ""c_server"* A.INFO: "c_grey"%s установил изменил статус выборов | Регистрация кандидатов.", PlayerInfo[playerid][name]);
					foreach(new i: admin_players)SendClientMessage(i, col_gray, _t_string);
					election_status = election_status_register;
					mysql_tquery(sql_connection, "UPDATE `server_variables` SET `var_count`='1' WHERE `var_id`='8'");
				}
				case 2:
				{
					if(election_status == election_status_none)
					{
						election_pickup = CreateDynamicPickup(19134, 23, 1582.4055,-1574.5140,1004.6200);
						pick_info[election_pickup][pick_type] = pick_type_server;

						election_text = Create3DTextLabel(""c_server"** Выборы **",col_lblue,1582.4055,-1574.5140,1004.6200,20.0,-1,-1);
					}
					new _t_string[108];
					format(_t_string, 108, ""c_server"* A.INFO: "c_grey"%s установил изменил статус выборов | Голосование.", PlayerInfo[playerid][name]);
					foreach(new i: admin_players)SendClientMessage(i, col_gray, _t_string);
					election_status = election_status_vote;
					mysql_tquery(sql_connection, "UPDATE `server_variables` SET `var_count`='2' WHERE `var_id`='8'");
				}
				case 3:
				{
					new _t_string[108];
					format(_t_string, 108, ""c_server"* A.INFO: "c_grey"%s очистил список кандидатов.", PlayerInfo[playerid][name]);
					foreach(new i: admin_players)SendClientMessage(i, col_gray, _t_string);
					mysql_tquery(sql_connection, "DELETE FROM `elections` WHERE 1");
					foreach(new j: logged_players)
					{
						PlayerInfo[j][vote] = 0;
					}
					mysql_tquery(sql_connection, "UPDATE `users` SET u_vote=0 WHERE 1");
				}
				case 4:
				{
					show_dialog(playerid, d_election_delete, DIALOG_STYLE_INPUT, ""c_server"Удалить кандидата", ""c_white"Введите имя игрока, которого хотите убрать из списка кандидатов:", "Принять", "Назад");



				}
			}
		}
		case d_election_delete:
		{
			if(!response) return show_dialog(playerid, d_election, DIALOG_STYLE_LIST,""c_server"Управление выборами | Статус", "Выборы закрыты\nРегистрация кандидатов\nГолосование\nУдалить кандидатов\nУдалить кандидата", "Принять", "Закрыть");
			new _t_string[98];
			format(_t_string, 98, "SELECT * FROM `elections` WHERE `e_name` = '%s'", inputtext);
			mysql_tquery(sql_connection, _t_string, "del_elections_list", "is", playerid, inputtext);

		}
		case d_vote:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][level] < 3) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Голосование доступно только с "c_orange_red"3 "c_grey"уровня.");
					if(PlayerInfo[playerid][vote] != 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уже проголосовали.");
					if(election_status != election_status_vote) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Голосование недоступно, осуществляется регистрация кандидатов.");
					mysql_tquery(sql_connection, "SELECT * FROM `elections` WHERE 1", "elections_list", "i", playerid);
				}
				case 1:
				{
					mysql_tquery(sql_connection, "SELECT * FROM `elections` WHERE 1", "elections_msgbox", "i", playerid);
				}
				case 2:
				{
					if(PlayerInfo[playerid][level] < 5) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Подача кандидатуры доступна только с "c_orange_red"5 "c_grey"уровня.");
					if(PlayerInfo[playerid][money] < 250000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Подача кандидатуры стоит "c_orange_red"250.000$");
			   		mysql_tquery(sql_connection, "SELECT * FROM `elections` WHERE 1", "elections_insert", "i", playerid);
				}
			}
		}
		case d_election_msgbox:
		{
			if(!response) return 1;
			show_dialog(playerid, d_vote, DIALOG_STYLE_LIST,""c_server"Выборы", "Голосование\nСписок кандидатов\nПодать кандидатуру(250.000$)", "Выбрать", "Закрыть");
			return 1;
		}
		case d_election_list:
		{
			if(!response)
			{
				show_dialog(playerid, d_vote, DIALOG_STYLE_LIST,""c_server"Выборы", "Голосование\nСписок кандидатов\nПодать кандидатуру(250.000$)", "Выбрать", "Закрыть");
				for(new i = 0; i < 15; i ++)
				{
					new pvar_string[8];
					format(pvar_string, sizeof(pvar_string), "el_%d", i);
					DeletePVar(playerid, pvar_string);
				}

				return 1;
			}
			new _string[98],
				_c_name[MAX_PLAYER_NAME];


			format(_string, 8, "el_%d", listitem);
			GetPVarString(playerid, _string, _c_name, MAX_PLAYER_NAME);
			format(_string, sizeof(_string), ""c_green"* "c_white"Вы успешно проголосовали за кандидата "c_green"%s", _c_name);
			SendClientMessage(playerid, col_white, _string);

			PlayerInfo[playerid][vote] = 1;
			format(_string, sizeof(_string), "UPDATE `elections` SET e_votes=e_votes+1 WHERE `e_name` = '%s'", _c_name);
			mysql_tquery(sql_connection, _string);

    		format(_string, sizeof(_string), "UPDATE `users` SET u_vote=1 WHERE `u_id` = '%d'", PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, _string);
		}
		case d_sm_bet:
		{
			if(!response) return 1;
			new bet_amount = strval(inputtext);
			if(bet_amount < 1000 || bet_amount > 15000) return show_dialog(playerid, d_sm_bet, DIALOG_STYLE_INPUT, ""c_server"Размер ставки", ""c_white"Введите размер Вашей ставки:\n\n"c_orange_red"* Сумма ставки должна составлять от 1000$ до 15.000$", "Принять", "Отмена");
			if(PlayerInfo[playerid][money] < bet_amount) return show_dialog(playerid, d_sm_bet, DIALOG_STYLE_INPUT, ""c_server"Размер ставки", ""c_white"Введите размер Вашей ставки:\n\n"c_orange_red"* У Вас недостаточно средств", "Принять", "Отмена");
			SetPVarInt(playerid, "sm_bet", bet_amount);
			new td_string[64];
			format(td_string, 64, "bet:  %d$          cash:  %d$", bet_amount, PlayerInfo[playerid][money] -bet_amount);
			PlayerTextDrawSetString(playerid, sm_ptd[playerid], td_string);
		}
		case d_dice_exit:
		{
			if(!response) return SelectTextDraw(playerid, 0xB0C4DEFF);
			return ExitBone(playerid);
		}
		case d_dice_bet:
		{
			if(!response) return 1;
			if(strval(inputtext)< 1000 || strval(inputtext)> 30000000) return show_dialog(playerid,d_dice_bet,1,""c_server"Установка ставки для игры",""c_white"Введите сумму для ставки\n\n"c_orange_red"* Ставка должна быть не менее 1000$ и не более 30.000.000$","Далее","Отмена");
			new null = 0;
			for(new i; i < 5; i ++)if(GetPVarInt(dice_info[GetPVarInt(playerid, "Stol")-1][b_player][i], "InGame")) null ++;
			if(null > 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Кто-то из игроков уже поставил ставку.");
			if(dice_info[GetPVarInt(playerid, "Stol")-1][b_started] != 0) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Вы не можете изменить ставку в процессе игры.");
			dice_info[GetPVarInt(playerid,"Stol")-1][b_bet] = strval(inputtext);
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Ставка успешно установлена.");



			return UpdateBone(GetPVarInt(playerid, "Stol")-1);
		}
		case d_camikaze_exit:
		{
			if(!response) return SelectTextDraw(playerid, 0xB0C4DEFF);
			cm_status(playerid, false);
		}
		case d_camikaze_cfexit:
		{
			if(!response) return DeletePVar(playerid, "cm_step");
			static const Float:money_cf[7] = {
			1.2,
			1.5,
			2.0,
			2.5,
			3.0,
			3.5,
			4.5	};

			new game_step = GetPVarInt(playerid, "cm_step")-1,
				win_count = floatround(roulette_bet[playerid]* money_cf[game_step]);

			DeletePVar(playerid, "cm_step");

			give_money(playerid, win_count);
			insert_money_log(playerid, INVALID_PLAYER_ID, win_count, "выигрыш камикадзе");

			new scm_string[98];
			format(scm_string, sizeof(scm_string), ""c_green"* "c_white"Вы успешно остановили игру и забрали выигрыш в размере "c_green"%d$", win_count);
			SendClientMessage(playerid, col_white, scm_string);


			cm_status(playerid, false);
		}
		case d_cm_bet:
		{
			if(!response) return 1;
			if(roulette_bet[playerid] != 0) return  SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Для начала завершите действующую игру.");
			new money_count = strval(inputtext);
			if(PlayerInfo[playerid][money] < money_count) return show_dialog(playerid, d_cm_bet, 1, ""c_server"Ставка", ""c_white"Введите сумму, которую желаете поставить\n\n"c_orange_red"* У Вас недостаточно средств для ставки", "Принять", "Отмена");
			if(money_count < 1000 || money_count > 50000) return show_dialog(playerid, d_cm_bet, 1, ""c_server"Ставка", ""c_white"Введите сумму, которую желаете поставить\n\n"c_grey"* Ставка должна быть не менее 1000$ и не более 50.000$", "Принять", "Отмена");
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Ставка успешно установлена.");
			roulette_bet[playerid] = money_count;
			give_money(playerid, -money_count);
			insert_money_log(playerid, INVALID_PLAYER_ID, -money_count, "ставка камикадзе");
			return 1;
		}
		case d_casino_job:
		{
			if(!response) return 1;
			if(GetPVarInt(playerid, "Krupje") ==  0)
			{
				if(PlayerInfo[playerid][level] < 4) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Можно работать крупье только с 4 уровня.");
				SetPVarInt(playerid, "Krupje", 1);
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно устроились работать крупье.");
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Ваша заработная плата будет формироваться из количества проведённых игр.");
				if(PlayerInfo[playerid][gender] == 0)SetPlayerSkin(playerid, 189);
				else SetPlayerSkin(playerid, 172);

			}
			else
			{
				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы завершили рабочую смену.");
				if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]), SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
				else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
				DeletePVar(playerid, "Krupje");
			}
		}
		case d_port_job:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					show_dialog(playerid, d_port_job, DIALOG_STYLE_LIST, ""c_server"Порт", ""c_server"Трудоустройство\n"c_grey"-"c_white"Грузчик\n"c_grey"-"c_white"Работа на грузоподъёмнике\n"c_grey"Завершить работу", "Выбрать", "Закрыть");
				}
				case 1:
				{
					if(PlayerInfo[playerid][timejob] != 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уже трудоустроены.");
					PlayerInfo[playerid][timejob] = job_porter;
					SendClientMessage(playerid, col_white, ""c_green"* "c_white"На улице Вас ожидает бригадир, он пояснит все нюансы работы.");

					show_payment(playerid);
					SetPlayerSkin(playerid, 27);

//					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы завершили рабочую смену.");
				}
				case 2:
				{
					if(PlayerInfo[playerid][timejob] != 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уже трудоустроены.");
					if(PlayerInfo[playerid][drive_lic] == 0)
					{
						show_dialog(playerid, d_port_job, DIALOG_STYLE_LIST, ""c_server"Порт", ""c_server"Трудоустройство\n"c_grey"-"c_white"Грузчик\n"c_grey"-"c_white"Работа на грузоподъёмнике\n"c_grey"Завершить работу", "Выбрать", "Закрыть");
						return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет прав.");
					}
					if(forklift_time[playerid] != 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы недавно закончили предыдущую смену. Работа возможна раз в 10 минут, приходите позже.");

					PlayerInfo[playerid][timejob] = job_forklift;
					SendClientMessage(playerid, col_white, ""c_green"* "c_white"На улице Вас ожидает бригадир, он пояснит все нюансы работы.");

					SetPlayerSkin(playerid, 27);

					show_payment(playerid);
				}
				case 3:
				{
					if(PlayerInfo[playerid][timejob] != job_forklift && PlayerInfo[playerid][timejob] != job_porter) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не работаете в порту.");

					give_money(playerid, PlayerInfo[playerid][salary]);
					insert_money_log(playerid, INVALID_PLAYER_ID, PlayerInfo[playerid][salary], "зп в порту");
					
					new __t_string[96];
					format(__t_string, sizeof(__t_string), ""c_green"* "c_white"Вы завершили свой рабочий день и заработали "c_green"%d$", PlayerInfo[playerid][salary]);
					SendClientMessage(playerid, col_white, __t_string);
			        PlayerInfo[playerid][salary] = 0;
					new pljob = PlayerInfo[playerid][timejob];

					if(pljob == job_forklift)
					{
						if(forklift_ptd[playerid] != PlayerText:-1)
						{
							PlayerTextDrawDestroy(playerid, forklift_ptd[playerid]);
							TextDrawHideForPlayer(playerid, forklift_td);

							forklift_ptd[playerid] = PlayerText:-1;
							forklift_time[playerid] = -600;
						}
						new _v_id = player_rentcar[playerid];
						player_rentcar[playerid] = INVALID_VEHICLE_ID;

						SetVehicleToRespawn(_v_id);
						if(GetPVarInt(playerid, "fork_object"))
						{
							DestroyDynamicObject(GetPVarInt(playerid, "fork_object"));
							DeletePVar(playerid, "fork_object");
						}
					}
					else if(pljob == job_porter)
					{
						if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
						ClearAnimations(playerid);
						DeletePVar(playerid, "have_factory_box");
					}
			        PlayerInfo[playerid][timejob] = 0;

					if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
					else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

					hide_payment(playerid);
					DisablePlayerCheckpoint(playerid);
				}
			}
		}
		case d_bank_bills:
		{
			if(!response) return show_dialog(playerid, d_bank, DIALOG_STYLE_LIST, ""scm_dialog"Банк", ""c_server"1 | "c_white"Управление счетами\n"c_server"2 | "c_white"Открыть новый счёт\n"c_server"3 | "c_white"Пополнить баланс телефона\n"c_server"4 | "c_white"Оплата налогов\n"c_server"5 | "c_white"Оплата штрафов\n"c_server"6 | "c_white"Баланс организаций\n"c_server"7 | "c_white"Семейный счёт", "Выбрать", "Закрыть");
			new tax_count = strval(inputtext);
			if(tax_count < 100 || tax_count > 25000)
			{
				new d_string[268];
				format(d_string, sizeof(d_string), ""c_orange_red"* Сумма платежа не может быть меньше 1$ и более 25.000$\n\n"c_grey"Ваша задолженность по налогам составляет "c_server"%d$\n\n"c_white"Введите сумму, которую желаете внести в счёт уплаты налогов:",
				PlayerInfo[playerid][tax]);
				show_dialog(playerid, d_bank_bills, DIALOG_STYLE_INPUT, ""c_server"Оплата налогов", d_string, "Принять", "Назад");
				return 1;
			}
			if(PlayerInfo[playerid][money] < tax_count)
			{
				new d_string[268];
				format(d_string, sizeof(d_string), ""c_orange_red"* У Вас недостаточно средств для платежа.\n\n"c_grey"Ваша задолженность по налогам составляет "c_server"%d$\n\n"c_white"Введите сумму, которую желаете внести в счёт уплаты налогов:",
				PlayerInfo[playerid][tax]);
				show_dialog(playerid, d_bank_bills, DIALOG_STYLE_INPUT, ""c_server"Оплата налогов", d_string, "Принять", "Назад");
				return 1;
			}
			if(PlayerInfo[playerid][tax] < tax_count)
			{
				new d_string[268];
				format(d_string, sizeof(d_string), ""c_orange_red"* Вносимая сумма превышает сумму долга.\n\n"c_grey"Ваша задолженность по налогам составляет "c_server"%d$\n\n"c_white"Введите сумму, которую желаете внести в счёт уплаты налогов:",
				PlayerInfo[playerid][tax]);
				show_dialog(playerid, d_bank_bills, DIALOG_STYLE_INPUT, ""c_server"Оплата налогов", d_string, "Принять", "Назад");
				return 1;
			}
			PlayerInfo[playerid][tax] -= tax_count;

			update_int_sql(playerid, "u_tax", PlayerInfo[playerid][tax]);

			give_money(playerid, -tax_count);
			insert_money_log(playerid, INVALID_PLAYER_ID, -tax_count, "оплата налогов");
			new t_string[128];
			format(t_string, sizeof(t_string), ""c_green"* "c_white"Вы внесли "c_green"%d$"c_white" в счёт уплаты налогов. На данный момент задолженность составляет "c_green"%d$",
			tax_count, PlayerInfo[playerid][tax]);
			SendClientMessage(playerid, col_white, t_string);
			show_dialog(playerid, d_bank, DIALOG_STYLE_LIST, ""scm_dialog"Банк", ""c_server"1 | "c_white"Управление счетами\n"c_server"2 | "c_white"Открыть новый счёт\n"c_server"3 | "c_white"Пополнить баланс телефона\n"c_server"4 | "c_white"Оплата налогов\n"c_server"5 | "c_white"Оплата штрафов\n"c_server"6 | "c_white"Баланс организаций\n"c_server"7 | "c_white"Семейный счёт", "Выбрать", "Закрыть");
		}
		case d_bankticket_info:
		{
			if(!response)
			{
				DeletePVar(playerid, "ticket_list_page");
				new query_string[60];
				format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
				mysql_tquery(sql_connection, query_string, "bankticket_list_callback", "i", playerid);
				return 1;
			}
			if(listitem == 0)
			{
				new pvar_string[8],
					ticket_id,
					query_string[108];

				format(pvar_string, sizeof(pvar_string), "tlc_%d", GetPVarInt(playerid, "ticket_listitem"));
				ticket_id = GetPVarInt(playerid, pvar_string);
				mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `t_count`,`t_reason`,`t_date`,`t_cop_name` FROM `users_tickets` WHERE `t_id` = '%d' LIMIT 1", ticket_id);
				mysql_tquery(sql_connection, query_string, "callback_bankticket_info", "i", playerid);
				return 1;
			}
			else if(listitem == 1)
			{
				new pvar_string[8],
					ticket_id,
					query_string[78];

				format(pvar_string, sizeof(pvar_string), "tlc_%d", GetPVarInt(playerid, "ticket_listitem"));
				ticket_id = GetPVarInt(playerid, pvar_string);
				mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `t_count` FROM `users_tickets` WHERE `t_id` = '%d' LIMIT 1", ticket_id);
				mysql_tquery(sql_connection, query_string, "callback_bankticket_payment", "i", playerid);
				return 1;
			}
		}
		case d_bankticket_list:
		{
			if(!response)
			{
				for(new i = 0; i < 10; i ++)
				{
					new pvar_string[8];
					format(pvar_string, sizeof(pvar_string), "tlc_%d", i);
					DeletePVar(playerid, pvar_string);
				}
				DeletePVar(playerid, "ticket_list_page");
				DeletePVar(playerid, "ticket_list_rows");
				show_dialog(playerid, d_bank, DIALOG_STYLE_LIST, ""scm_dialog"Банк", ""c_server"1 | "c_white"Управление счетами\n"c_server"2 | "c_white"Открыть новый счёт\n"c_server"3 | "c_white"Пополнить баланс телефона\n"c_server"4 | "c_white"Оплата налогов\n"c_server"5 | "c_white"Оплата штрафов\n"c_server"6 | "c_white"Баланс организаций\n"c_server"7 | "c_white"Семейный счёт", "Выбрать", "Закрыть");
				return 1;
			}
			if(listitem == 0)
			{
				new page_id = GetPVarInt(playerid, "ticket_list_page")-1;
				if(page_id == 0)
				{
					new query_string[60];
					format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
					mysql_tquery(sql_connection, query_string, "bankticket_list_callback", "i", playerid);
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы находитесь на первой странице списка штрафов!");
					return 1;

				}
				SetPVarInt(playerid, "ticket_list_page", page_id);
				new query_string[60];
				format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
				mysql_tquery(sql_connection, query_string, "bankticket_list_callback", "i", playerid);

			}
			else if(listitem == 1)
			{
				new page_id = GetPVarInt(playerid, "ticket_list_page")-1;
				if((page_id + 1)* 10 >= GetPVarInt(playerid, "ticket_list_rows"))
				{
					new query_string[60];
					format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
					mysql_tquery(sql_connection, query_string, "bankticket_list_callback", "i", playerid);
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы находитесь на последней странице списка штрафов!");
					return 1;
				}
				SetPVarInt(playerid, "ticket_list_page", page_id + 2);
				new query_string[60];
				format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
				mysql_tquery(sql_connection, query_string, "bankticket_list_callback", "i", playerid);
			}
			else
			{
				SetPVarInt(playerid, "ticket_listitem", listitem -2);
				show_dialog(playerid, d_bankticket_info, DIALOG_STYLE_LIST, ""c_server"Штраф", "Информация о штрафе\nОплатить штраф", "Выбрать", "Назад");
			}
			return 1;
		}
		case d_bankticket_stats:
		{
			show_dialog(playerid, d_bankticket_info, DIALOG_STYLE_LIST, ""c_server"Штраф", "Информация о штрафе\nОплатить штраф", "Выбрать", "Назад");
			return 1;
		}

		case d_bank_phone:
		{
			if(!response) return show_dialog(playerid, d_bank, DIALOG_STYLE_LIST, ""scm_dialog"Банк", ""c_server"1 | "c_white"Управление счетами\n"c_server"2 | "c_white"Открыть новый счёт\n"c_server"3 | "c_white"Пополнить баланс телефона\n"c_server"4 | "c_white"Оплата налогов\n"c_server"5 | "c_white"Оплата штрафов\n"c_server"6 | "c_white"Баланс организаций\n"c_server"7 | "c_white"Семейный счёт", "Выбрать", "Закрыть");
//			if(!isNumeric(inputtext)) return show_dialog(playerid, d_bank_phone, DIALOG_STYLE_INPUT, ""c_server"Баланс телефона", ""c_grey"* Деньги положенные на некорректный номер возврату не подлежат.\n\n"c_white"Введите номер телефона, который желаете пополнить:", "Далее", "Назад");
			if(strval(inputtext)< 100 || strval(inputtext)> 9999999) return show_dialog(playerid, d_bank_phone, DIALOG_STYLE_INPUT, ""c_server"Баланс телефона", ""c_grey"* Деньги положенные на некорректный номер возврату не подлежат.\n\n"c_white"Введите номер телефона, который желаете пополнить:", "Далее", "Назад");
			SetPVarInt(playerid, "bank_phone", strval(inputtext));
			new d_string[112];
			format(d_string, sizeof(d_string), ""c_white"Введите сумму, на которую желаете пополнить баланс телефона "c_green"%d"c_white":",strval(inputtext));
			show_dialog(playerid, d_bank_phone_money, DIALOG_STYLE_INPUT, ""c_server"Баланс телефона", d_string, "Далее", "Назад");

		}
		case d_bank_phone_money:
		{
			if(!response) return show_dialog(playerid, d_bank_phone, DIALOG_STYLE_INPUT, ""c_server"Баланс телефона", ""c_grey"* Деньги положенные на некорректный номер возврату не подлежат.\n\n"c_white"Введите номер телефона, который желаете пополнить:", "Далее", "Назад");

			if(strval(inputtext)< 1 || strval(inputtext)> 10000)
			{
				new d_string[112];
				format(d_string, sizeof(d_string), ""c_white"Введите сумму, на которую желаете пополнить баланс телефона "c_green"%d"c_white":", GetPVarInt(playerid, "bank_phone"));
				show_dialog(playerid, d_bank_phone_money, DIALOG_STYLE_INPUT, ""c_server"Баланс телефона", d_string, "Далее", "Назад");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Сумма не может быть меньше "c_orange_red"1$"c_grey" или больше "c_orange_red"10000$"c_grey".");
				return 1;
			}
			if(strval(inputtext)> PlayerInfo[playerid][money])
			{
				new d_string[112];
				format(d_string, sizeof(d_string), ""c_white"Введите сумму, на которую желаете пополнить баланс телефона "c_green"%d"c_white":", GetPVarInt(playerid, "bank_phone"));
				show_dialog(playerid, d_bank_phone_money, DIALOG_STYLE_INPUT, ""c_server"Баланс телефона", d_string, "Далее", "Назад");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств для пополнения баланса телефона.");
				return 1;
			}
			new phone_number = GetPVarInt(playerid, "bank_phone");
			new d_string[112];
			format(d_string, sizeof(d_string), ""c_green"* "c_white"Вы успешно пополнили номер "c_green"%d"c_white" на сумму "c_green"%d$"c_white".", phone_number, strval(inputtext));
			SendClientMessage(playerid,  col_white, d_string);

			give_money(playerid, -strval(inputtext));
			insert_money_log(playerid, INVALID_PLAYER_ID, -strval(inputtext), "пополнение телефона");

			DeletePVar(playerid, "bank_phone");
			show_dialog(playerid, d_bank, DIALOG_STYLE_LIST, ""scm_dialog"Банк", ""c_server"1 | "c_white"Управление счетами\n"c_server"2 | "c_white"Открыть новый счёт\n"c_server"3 | "c_white"Пополнить баланс телефона\n"c_server"4 | "c_white"Оплата налогов\n"c_server"5 | "c_white"Оплата штрафов\n"c_server"6 | "c_white"Баланс организаций\n"c_server"7 | "c_white"Семейный счёт", "Выбрать", "Закрыть");

			if(PlayerInfo[playerid][number] == phone_number)
			{
				PlayerInfo[playerid][phone_balance] += strval(inputtext);
				format(d_string, sizeof(d_string), "SMS: Ваш баланс пополнен на сумму %d$. Баланс: %d$ | Отправитель: SA BANK", strval(inputtext), PlayerInfo[playerid][phone_balance]);
				SendClientMessage(playerid,  col_yellow, d_string);
				return 1;
			}
			else
			{
				foreach(new i: logged_players)
				{
					if(PlayerInfo[i][number] == phone_number)
					{
						PlayerInfo[i][phone_balance] += strval(inputtext);
						format(d_string, sizeof(d_string), "SMS: Ваш баланс пополнен на сумму %d$. Баланс: %d$ | Отправитель: SA BANK", strval(inputtext), PlayerInfo[i][phone_balance]);
						SendClientMessage(i,  col_yellow, d_string);
						return 1;
					}
				}
			}
			format(d_string, sizeof(d_string), "UPDATE `users` SET `u_phohe_balance`=`u_phohe_balance`+'%d' WHERE `u_number` = '%d'",strval(inputtext), phone_number);
			mysql_tquery(sql_connection, d_string);
		}
		case d_fine:
		{
			if(!response)
			{
				for(new i = 0; i < 5; i ++)
				{
					new pvar_string[14];
					format(pvar_string, sizeof(pvar_string), "lf_listid_%d", i);
					DeletePVar(playerid, pvar_string);
				}
				return 1;
			}
			new pvar_string[14];
			format(pvar_string, sizeof(pvar_string), "lf_listid_%d", listitem);
			SetPVarInt(playerid, "fine_vehid", GetPVarInt(playerid, pvar_string));

			for(new i = 0; i < 5; i ++)
			{
				format(pvar_string, sizeof(pvar_string), "lf_listid_%d", i);
				DeletePVar(playerid, pvar_string);
			}

			show_dialog(playerid, d_fine_accept, DIALOG_STYLE_MSGBOX, ""c_server"Штрафстоянка", ""c_white"Вы действительно желаете выкупить со штрафстоянки данный транспорт?\n\n"c_grey"* Стоимость выкупа составляет 2500$", "Принять", "Назад");
		}
		case d_fine_accept:
		{
			if(!response)
			{
				new sql_string[128];
				format(sql_string, sizeof sql_string, "SELECT * FROM `users_vehicles` WHERE `v_owner` = '%d' AND `v_fine`>'0'", PlayerInfo[playerid][id]);
				mysql_tquery(sql_connection, sql_string, "load_fine_vehicles", "i", playerid);

				DeletePVar(playerid, "fine_vehid");
				return 1;
			}
			if(PlayerInfo[playerid][money] < 2500) return show_dialog(playerid, d_fine_accept, DIALOG_STYLE_MSGBOX, ""c_server"Штрафстоянка", ""c_white"Вы действительно желаете выкупить со штрафстоянки данный транспорт?\n\n"c_orange_red"* Стоимость выкупа составляет 2500$", "Принять", "Назад");

			give_money(playerid, -2500);
			insert_money_log(playerid, INVALID_PLAYER_ID, -2500, "штрафстоянка");

			new sql_string[128];
			format(sql_string, sizeof sql_string, "SELECT * FROM `users_vehicles` WHERE `v_id` = '%d'", GetPVarInt(playerid, "fine_vehid"));
			mysql_tquery(sql_connection, sql_string, "load_player_vehicles", "i", playerid);

			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Транспортное средство выкуплено и доставлено к зданию штрафстоняки.");
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Не забудьте припарковать Ваше транспортное средство в этот раз.");
			DeletePVar(playerid, "fine_vehid");
			return 1;
		}
		case d_b_fee_enter:
		{
			if(!response) return DeletePVar(playerid, "p_biz_id");
			new t = GetPVarInt(playerid, "p_biz_id")-1;
			if(PlayerInfo[playerid][money] < b_info[t][b_fee]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно средств для входа в бизнес");
			give_money(playerid, -b_info[t][b_fee]);
			insert_money_log(playerid, INVALID_PLAYER_ID, -b_info[t][b_fee], "вход в бизнес");
			b_info[t][b_money] += b_info[t][b_fee];
			b_info[t][b_cash_today] += b_info[t][b_fee];

			new bis_int = b_info[t][b_int];
			if(bis_int == -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Произошла ошибка при входе в бизнес.");
			set_pos(playerid, b_interior[bis_int][i_position][0], b_interior[bis_int][i_position][1], b_interior[bis_int][i_position][2], b_interior[bis_int][i_position][3], b_interior[bis_int][i_interior], b_info[t][b_id] + 1000);
			SetPVarInt(playerid, "tp_area_used", 1);
			teleport_tick[playerid] = GetTickCount();

			if(b_info[t][b_improve][1]) SendClientMessage(playerid, col_gray, "* В этом бизнесе имеется аптечка. Чтобы восстановить здоровье используйте "c_green"/bheal"c_grey" ("c_green"250$"c_grey")");

		}
		case d_main_accessories:
		{
			if(!response) return pc_cmd_menu(playerid);
			if(listitem == 0)
			{
				new line_string[42];
				global_string[0] = EOS;
				strcat(global_string, ""c_server"Выберите слот аксессуара\n");
				for(new j = 0; j < 8; j ++)
				{
					if(PlayerInfo[playerid][accessories][j] == 0)
					{
						strcat(global_string, ""c_grey"-Пусто\n");
					}
					else
					{
						format(line_string, 42, ""c_white"-%s\n", get_accessorie_name(PlayerInfo[playerid][accessories][j]));
						strcat(global_string, line_string);
					}
				}
				show_dialog(playerid, d_main_accessories, DIALOG_STYLE_LIST, ""c_server"Аксессуары", global_string, "Выбрать", "Назад");
				return 1;
			}
			if(PlayerInfo[playerid][accessories][listitem -1] == 0)
			{
				SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Данный слот аксессуаров пуст.");
				new line_string[42];
				global_string[0] = EOS;
				strcat(global_string, ""c_server"Выберите слот аксессуара\n");
				for(new j = 0; j < 8; j ++)
				{
					if(PlayerInfo[playerid][accessories][j] == 0)
					{
						strcat(global_string, ""c_grey"-Пусто\n");
					}
					else
					{
						format(line_string, 42, ""c_white"-%s\n", get_accessorie_name(PlayerInfo[playerid][accessories][j]));
						strcat(global_string, line_string);
					}
				}
				show_dialog(playerid, d_main_accessories, DIALOG_STYLE_LIST, ""c_server"Аксессуары", global_string, "Выбрать", "Назад");
				return 1;

			}
			SetPVarInt(playerid, "acc_listitem", listitem -1);
			show_dialog(playerid, d_use_accessories, DIALOG_STYLE_LIST, ""c_server"Аксессуары", ""c_grey"-"c_white"Надеть\n"c_grey"-"c_white"Снять\n"c_grey"-"c_white"Выбросить", "Выбрать", "Назад");

		}
		case d_use_accessories:
		{
			if(!response)
			{
				DeletePVar(playerid, "acc_listitem");
				new line_string[42];
				global_string[0] = EOS;
				strcat(global_string, ""c_server"Выберите слот аксессуара\n");
				for(new j = 0; j < 8; j ++)
				{
					if(PlayerInfo[playerid][accessories][j] == 0)
					{
						strcat(global_string, ""c_grey"-Пусто\n");
					}
					else
					{
						format(line_string, 42, ""c_white"-%s\n", get_accessorie_name(PlayerInfo[playerid][accessories][j]));
						strcat(global_string, line_string);
					}
				}
				show_dialog(playerid, d_main_accessories, DIALOG_STYLE_LIST, ""c_server"Аксессуары", global_string, "Выбрать", "Назад");
				return 1;
			}
			new item_id = GetPVarInt(playerid, "acc_listitem");
			switch(listitem)
			{
				case 0:
				{
					PlayerInfo[playerid][accessories_used][item_id] = 1;
					GiveItem(playerid, PlayerInfo[playerid][accessories][item_id]);
					new _query[136];
					format(_query, sizeof(_query), "UPDATE `users` SET `u_accessories_used`='%d|%d|%d|%d|%d%d|%d|%d' WHERE `u_id` = '%d'",
					PlayerInfo[playerid][accessories_used][0], PlayerInfo[playerid][accessories_used][1], PlayerInfo[playerid][accessories_used][2],
					PlayerInfo[playerid][accessories_used][3], PlayerInfo[playerid][accessories_used][4], PlayerInfo[playerid][accessories_used][5], PlayerInfo[playerid][accessories_used][6],
					PlayerInfo[playerid][accessories_used][7], PlayerInfo[playerid][id]);
					mysql_tquery(sql_connection, _query);
					SendClientMessage(playerid, col_gray, "* Аксессуар успешно надет на персонажа.");
				}
				case 1:
				{
					PlayerInfo[playerid][accessories_used][item_id] = 0;
					for(new i = 5; i < 10; i ++)
					{
						if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
					}
					for(new j = 0; j < 8; j ++)
					{
						if(PlayerInfo[playerid][accessories_used][j] == 0) continue;
						GiveItem(playerid, PlayerInfo[playerid][accessories][j]);
					}

					new _query[136];
					format(_query, sizeof(_query), "UPDATE `users` SET `u_accessories_used`='%d|%d|%d|%d|%d%d|%d|%d' WHERE `u_id` = '%d'",
					PlayerInfo[playerid][accessories_used][0], PlayerInfo[playerid][accessories_used][1], PlayerInfo[playerid][accessories_used][2],
					PlayerInfo[playerid][accessories_used][3], PlayerInfo[playerid][accessories_used][4], PlayerInfo[playerid][accessories_used][5], PlayerInfo[playerid][accessories_used][6],
					PlayerInfo[playerid][accessories_used][7], PlayerInfo[playerid][id]);
					mysql_tquery(sql_connection, _query);
					SendClientMessage(playerid, col_gray, "* Аксессуар успешно снят с персонажа.");
				}
				case 2:
				{
					PlayerInfo[playerid][accessories_used][item_id] = 0;
					PlayerInfo[playerid][accessories][item_id] = 0;
					for(new i = 5; i < 10; i ++)
					{
						if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
					}
					for(new j = 0; j < 8; j ++)
					{
						if(PlayerInfo[playerid][accessories_used][j] == 0) continue;
						GiveItem(playerid, PlayerInfo[playerid][accessories][j]);
					}

					new _query[136];
					format(_query, sizeof(_query), "UPDATE `users` SET `u_accessories_used`='%d|%d|%d|%d|%d%d|%d|%d' WHERE `u_id` = '%d'",
					PlayerInfo[playerid][accessories_used][0], PlayerInfo[playerid][accessories_used][1], PlayerInfo[playerid][accessories_used][2],
					PlayerInfo[playerid][accessories_used][3], PlayerInfo[playerid][accessories_used][4], PlayerInfo[playerid][accessories_used][5], PlayerInfo[playerid][accessories_used][6],
					PlayerInfo[playerid][accessories_used][7], PlayerInfo[playerid][id]);
					mysql_tquery(sql_connection, _query);
					format(_query, sizeof(_query), "UPDATE `users` SET `u_accessories`='%d|%d|%d|%d|%d%d|%d|%d' WHERE `u_id` = '%d'",
					PlayerInfo[playerid][accessories][0], PlayerInfo[playerid][accessories][1], PlayerInfo[playerid][accessories][2],
					PlayerInfo[playerid][accessories][3], PlayerInfo[playerid][accessories][4], PlayerInfo[playerid][accessories][5], PlayerInfo[playerid][accessories][6],
					PlayerInfo[playerid][accessories][7], PlayerInfo[playerid][id]);
					mysql_tquery(sql_connection, _query);

					SendClientMessage(playerid, col_gray, "* Вы успешно выбросили аксессуар.");
				}
			}
			DeletePVar(playerid, "acc_listitem");
			new line_string[42];
			global_string[0] = EOS;
			strcat(global_string, ""c_server"Выберите слот аксессуара\n");
			for(new j = 0; j < 8; j ++)
			{
				if(PlayerInfo[playerid][accessories][j] == 0)
				{
					strcat(global_string, ""c_grey"-Пусто\n");
				}
				else
				{
					format(line_string, 42, ""c_white"-%s\n", get_accessorie_name(PlayerInfo[playerid][accessories][j]));
					strcat(global_string, line_string);
				}
			}
			show_dialog(playerid, d_main_accessories, DIALOG_STYLE_LIST, ""c_server"Аксессуары", global_string, "Выбрать", "Назад");
		}
		case d_help:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					show_dialog(playerid, d_help_box, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по игре", ""c_server"О проекте:\n\n\
					"c_white"Elive Role Play -один из наиболее уникальных проектов из индустрии San Andreas Multiplayer.\n\
					Мы постарались учесть все пожелания игроков, чтобы их времяпровождение на сервере было максимально интересным.\n\
					Наши системы и внешнее оформление сервера являются уникальными в своём роде и продуманы до мелочей.\n\
					Вы можете выбрать работу по душе, открыть своё дело, а можете пойти и по преступному пути.\n\
					Можете поступить в правоохранительные органы или стать журналистом,стать первоклассным гонщиком или стрелком -тут воля Ваша.\n\
					Мы надеемся, что время, проведённое на Elive Role Play, будет наиболее интересным и поможет скоротать несколько часов с удовольствием.", "Назад", "Закрыть");

				}
				case 1:
				{
					show_dialog(playerid, d_help_box, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по игре", ""c_server"Безопасность:\n\n\
					"c_white"Не стоит и забывать о безопасности аккаунта. Ваш аккаунт -Ваша собственность.\n\
					Никому ни под каким предлогом НЕ давайте свои регистрационные данные, иначе Вы рискуете остаться ни с чем.\n\
					Настоятельно НЕ рекомендуем использовать чит -программы и прочий софт, который мешает игровому процессу и другим игрокам.\n\
					Для игроков Elive Role Play были созданы расширенные настройки безопасности,\n\
					при использовании которых возможность взлома аккаунта стремится к нулю. Подробнее: команда /menu => Безопасность.", "Назад", "Закрыть");
				}
				case 2:
				{
					show_dialog(playerid, d_help_box, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по игре", ""c_server"Role Play:\n\n\
					"c_white"Role Play -это вид игры, в котором каждый игрок исполняет свою роль. Каждый игрок волен определять,\n\
					кем он хочет быть: полицейским или бандитом, водителем автобуса или механиком, таксистом или военным.\n\
					Role Play режим подразумевает знание некоторых правил, за несоблюдение которых Вы будете наказаны.\n\
					С этой информацией Вы можете ознакомиться на форуме нашего проекта.\n", "Назад", "Закрыть");
				}
				case 3:
				{
					show_dialog(playerid, d_help_box, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по игре", ""c_server"Основы игры:\n\n\
					"c_white"Играя на Elive Role Play, Вы получаете очки опыта.\n\
					При накоплении определенного количества очков происходит переход на следующий игровой уровень.\n\
					С получением каждого нового уровня открываются новые возможности и появляется доступ к более интересным функциям.\n\
					В игровом процессе будет необходимость пользования командами. Они вводятся в чат [F6] через косую черту [/].\n\
					Например: /gps, /pass. С полным списком команд Вы можете ознакомиться с помощью /menu => Список команд,\n\
					где написаны все необходимые команды для игры и их назначение.\n\
					Посмотреть статистику Вы можете через /menu => Статистика персонажа.", "Назад", "Закрыть");
				}
				case 4:
				{
					show_dialog(playerid, d_help_box, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по игре", ""c_server"Первые шаги:\n\n\
					"c_white"Для начала Вам необходимо заработать первые деньги. В государстве есть предприятия, где Вы сможете подработать.\n\
					Это шахта, завод, лесопилка и порт. Работая на них Вы получаете прибыль и поддерживаете экономическую составляющую государства.\n\
					Также во время работы Вы сможете обрести новых друзей и получить удовольствие.\n\
					Все предприятия Вы сможете найти с помощью GPS -навигатора, который включается при помощи команды /gps.\n\
					Добраться до места работы Вы сможете с помощью автобусного транспорта.\n\
					На автобус Вы сможете сесть при выходе из аэропорта, железнодорожного вокзала, мэрии и непосредственно автовокзала.\n\
					После того, как Вы заработаете определенную сумму денег, Вам следует отправиться в автошколу и сдать на права.\n\
					Они позволят Вам купить или арендовать автомобиль и устроиться на более высокооплачиваемую и интересную работу.\n\
					Сдача на права стоит 1000$. Перед поездкой в автошколу убедитесь, что Вы имеете такую сумму.\n\
					Найти автошколу Вы сможете с помощью GPS -навигатора, добраться до неё Вам поможет автобусный транспорт.\n", "Назад", "Закрыть");
				}
				case 5:
				{
					show_dialog(playerid, d_help_box, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по игре", ""c_server"Транспорт:\n\n\
					"c_white"Транспортная система очень важна для нашего штата. С её помощью осуществляется работа предприятий и организаций.\n\
					Основной вид транспорта -автобус. Автобусные маршруты связывают большинство предприятий и населённых пунктов штата.\n\
					Наиболее удобный вид транспорта -такси. С его помощью Вы сможете добраться в любую точку штата, однако\n\
					поездка на такси обойдется Вам значительно дороже, чем поездка на автобусе.\n\
					Также Вы сможете купить или арендовать какое -либо наземное или водное транспортное средство.\n\
					Велосипед или роскошная яхта -дело вкуса и денег. Найти места покупки и аренды транспорта Вы сможете с помощью GPS -навигатора.\n\
					Не стоит забывать о том, что государственным транспортным компаниям всегда требуются новые работники.\n\
					Узнать подробнее о вакансиях и требованиях к работнику можно в мэрии. Найти мэрию Вы сможете с помощью GPS -навигатора.\n", "Назад", "Закрыть");
				}
				case 6:
				{
					show_dialog(playerid, d_help_box, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по игре", ""c_server"Общение:\n\n\
					"c_white"Во время игры Вам постоянно придётся взаимодействовать с другими людьми. Для этого существуют 2 вида чатов:\n\
					1. IC (In Character) -общение внутри игры. Используется для внутриигровых ситуаций.\n\
					Чат активируется нажатием клавиши [F6], далее Вы вводите сообщение.\n\
					2. OOC (Out Of Character) -здесь Вы сообщаете информацию, не касающуюся игры.\n\
					Чат Чат активируется нажатием клавиши [F6], далее Вы прописываете команду /n и вводите сообщение.\n\
					Помимо этого существуют и другие способы общения. Мы можете общаться по телефону или передавать SMS -сообщения.\n\
					В организациях Вам также будет доступно общение по рации.\n\
					Информацию обо всех способах общения Вы можете узнать с помощью /menu => Список команд => Общение.", "Назад", "Закрыть");
				}
				case 7:
				{
					show_dialog(playerid, d_help_box, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по игре", ""c_server"Жильё:\n\n\
					"c_white"По всему штату расположены жилые дома, которые Вы сможете приобрести.\n\
					Каждый дом имеет свою стоимость, которая определяют множество факторов: от местоположения и интерьера до наличия гаража.\n\
					Можно купить вагончик или трейлер на окраине города, а можно выложить несколько миллионов за роскошный особняк в элитном районе.\n\
					Если у Вас есть дом, Вы можете купить улучшения, такие как шкаф, автоматические двери, сейф, гардероб,\n\
					оборудования подвала и субсидии для снижения квартирной платы. Также во многих домах имеется гараж, в котором Вы сможете держать свой автомобиль.\n\
					В зависимости от престижности жилья с Вас будет взиматься квартирная плата. Если Вы перестанете её оплачивать,\n\
					работники Мэрии могут выселить Вас и оставить у разбитого корыта.", "Назад", "Закрыть");
				}
				case 8:
				{
					show_dialog(playerid, d_help_box, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по игре", ""c_server"Бизнес:\n\n\
					"c_white"Вы можете открыть собственный бизнес и зарабатывать неплохие деньги. Это может быть магазин одежды, закусочная,\n\
					автозаправочная станция или элитный ночной клуб. В нашем штате имеется множество различных предприятий.\n\
					При наличии бизнеса у Вас открываются новые возможности для привлечения клиентов.\n\
					Вы сможете регулировать цены, улучшать и развивать свой бизнес -в этом Вы вольны.", "Назад", "Закрыть");
				}
				case 9:
				{
					show_dialog(playerid, d_help_box, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по игре", ""c_server"Банки и хранение средств:\n\n\
					"c_white"В штате имеется банковская система.\n\
					Вы банках, расположенных в трёх городах, Вы можете открыть свой счёт, на который Вам будет приходить зарплата и прочие доходы.\n\
					Имея счёт, вы можете положить и снять деньги, перевести деньги на другой счёт и пополнить баланс телефона.\n\
					Найти банки Вы сможете с помощью GPS -навигатора.", "Назад", "Закрыть");
				}
				case 10:
				{
					show_dialog(playerid, d_help_box, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по игре", ""c_server"Работы:\n\n\
					"c_white"В мэрии штата работает отдел трудоустройства, где Вы можете устроиться на любую из представленных работ.\n\
					Однако Вы не сможете одновременно работать и состоять в организации.\n\
					Помимо основной работы Вы сможете подработать на предприятиях штата. К ним относятся шахта, завод, лесопилка и порт. \n\
					Чтобы найти места работ, Вы можете воспользоваться GPS -навигатором.\n\
					Так же можно трудоустроиться в отделе кадров казино.", "Назад", "Закрыть");
				}
				case 11:
				{
					show_dialog(playerid, d_help_box, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по игре", ""c_server"Организации:\n\n\
					"c_white"В нашем штате имеется большое количество организаций. Они могут быть как официальными\n\
					(Правительство, Полицейский департамент, Министерство Обороны, Министерство здравоохранения, Новостное агенство и др.) и неофициальными (банды и мафии).\n\
					Руководство организаций может выдвинуть дополнительные требования для вступления.\n\
					Например, чтобы стать репортером, Вам необходимы навыки редактирования объявлений, а членам банд придётся продемонстрировать навыки владения оружием.\n\
					О дополнительных требованиях сообщит руководство организации во время набора сотрудников.\n\
					После вступления в организацию Вы можете пойти вверх по карьерной лестнице, постепенно Вам будут открываться новые возможности.\n\
					С повышением должности Ваш статус и заработная плата будут увеличиваться. Со временем Вы можете занять одну из руководящих должностей.\n\
					Также Вы найдете себе новых друзей и сможете весело провести время.", "Назад", "Закрыть");
				}
			}
			return 1;
		}
		case d_help_box:
		{
			if(!response) return 1;
			show_dialog(playerid, d_help, DIALOG_STYLE_LIST, ""c_server"Помощь по игре", ""c_server"1. "c_white"О проекте\n"c_server"2. "c_white"Безопасность\n"c_server"3. "c_white"Role Play\n"c_server"4. "c_white"Основы игры\n"c_server"5. "c_white"Первые шаги\n"c_server"6. "c_white"Транспорт\n"c_server"7. "c_white"Общение\n"c_server"8. "c_white"Жильё\n"c_server"9. "c_white"Бизнес\n"c_server"10. "c_white"Банки и хранение средств\n"c_server"11. "c_white"Работы\n"c_server"12. "c_white"Организации", "Выбрать", "Закрыть");
			return 1;
		}
		case d_debtors_list:
		{
			if(!response)
			{
				for(new i = 0; i < 10; i ++)
				{
					new pvar_string[8];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", i);
					DeletePVar(playerid, pvar_string);
				}
				DeletePVar(playerid, "ofm_list_page");
				DeletePVar(playerid, "ofm_list_rows");
				DeletePVar(playerid, "ofm_listitem");
				DeletePVar(playerid, "ofm_type");
				return 1;
			}
			if(listitem == 0)
			{
				new page_id = GetPVarInt(playerid, "ofm_list_page")-1;
				if(page_id == 0)
				{
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы находитесь на первой странице списка должников.");
					mysql_tquery(sql_connection, "SELECT `u_name`,`u_tax` FROM `users` WHERE `u_tax` > 10000 ORDER BY `users`.`u_tax` DESC", "callback_debtors", "i", playerid);
					return 1;

				}
				SetPVarInt(playerid, "ofm_list_page", page_id);
				mysql_tquery(sql_connection, "SELECT `u_name`,`u_tax` FROM `users` WHERE `u_tax` > 10000 ORDER BY `users`.`u_tax` DESC", "callback_debtors", "i", playerid);
			}
			else if(listitem == 1)
			{
				new page_id = GetPVarInt(playerid, "ofm_list_page")-1;
				if((page_id + 1)* 10 >= GetPVarInt(playerid, "ofm_list_rows"))
				{
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы находитесь на последней странице списка должников.");
					mysql_tquery(sql_connection, "SELECT `u_name`,`u_tax` FROM `users` WHERE `u_tax` > 10000 ORDER BY `users`.`u_tax` DESC", "callback_debtors", "i", playerid);
					return 1;
				}
				SetPVarInt(playerid, "ofm_list_page", page_id + 2);
				mysql_tquery(sql_connection, "SELECT `u_name`,`u_tax` FROM `users` WHERE `u_tax` > 10000 ORDER BY `users`.`u_tax` DESC", "callback_debtors", "i", playerid);
			}
			else
			{
				new pvar_string[28], pl_name[20];
				format(pvar_string, 10, "ofm_%d", listitem -2);
				GetPVarString(playerid, pvar_string, pl_name, 20);
				SetPVarInt(playerid, "ofm_listitem", listitem -2);
				format(pvar_string, sizeof(pvar_string), ""c_server"%s", pl_name);
				show_dialog(playerid, d_debtors_pl_menu, DIALOG_STYLE_LIST, pvar_string, "Информация об имуществе\nПродать имущество\nСписать деньги с банковского счета\nВыслать извещение", "Выбрать", "Назад");
			}
			return 1;
		}
		case d_debtors_pl_menu:
		{
			if(!response)
			{
				DeletePVar(playerid, "ofm_listitem");
				mysql_tquery(sql_connection, "SELECT `u_name`,`u_tax` FROM `users` WHERE `u_tax` > 10000 ORDER BY `users`.`u_tax` DESC", "callback_debtors", "i", playerid);
				return 1;
			}
			switch(listitem)
			{
				case 0:
				{
					new pvar_string[18], pl_name[20];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, "ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, 20);
					new query_string[128];
					format(query_string, sizeof query_string, "SELECT `u_id`,`u_bank`,`u_house`,`u_business`,`u_tax` FROM `users` WHERE `u_name` = '%s' LIMIT 1", pl_name);
					mysql_tquery(sql_connection, query_string, "callback_debtor_info", "i", playerid);
				}
				case 1:
				{
					new pvar_string[18], pl_name[20];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, "ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, 20);
					new query_string[128];
					format(query_string, sizeof query_string, "SELECT `u_id`,`u_house`,`u_business` FROM `users` WHERE `u_name` = '%s' LIMIT 1", pl_name);
					mysql_tquery(sql_connection, query_string, "callback_debtor_property", "i", playerid);

				}
				case 2:
				{
					new pvar_string[18], pl_name[20];
					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, "ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, 20);
					new query_string[128];
					format(query_string, sizeof query_string, "SELECT `u_id`,`u_bank`,`u_tax` FROM `users` WHERE `u_name` = '%s' LIMIT 1", pl_name);
					mysql_tquery(sql_connection, query_string, "callback_debtor_bankmoney", "is", playerid, pl_name);

				}
				case 3:
				{
					new query_string[232];
					format(query_string, sizeof query_string, "INSERT INTO `debtor_message`(`dm_text`, `dm_dest`) VALUES ('"c_white"Сотрудники мэрии вынесли Вам предупреждение за невыплату налогов.\n\n"c_grey"* В случае неоплаты налогов Вы можете потерять часть собственности','%d')",
					GetPVarInt(playerid, "debt_uid"));
					mysql_tquery(sql_connection, query_string);

					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Должник успешно уведомлен о его задолженностях.");

					new pvar_string[38],
						pl_name[MAX_PLAYER_NAME -4];

					format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, "ofm_listitem"));
					GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME -4);
					format(pvar_string, sizeof(pvar_string), ""c_server"%s", pl_name);
					show_dialog(playerid, d_debtors_pl_menu, DIALOG_STYLE_LIST, pvar_string, "Информация об имуществе\nПродать имущество\nСписать деньги с банковского счета\nВыслать извещение", "Выбрать", "Назад");

				}
			}
		}
		case d_debtor_info:
		{
			new pvar_string[38],
				pl_name[MAX_PLAYER_NAME -4];

			format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, "ofm_listitem"));
			GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME -4);
			format(pvar_string, sizeof(pvar_string), ""c_server"%s", pl_name);
			show_dialog(playerid, d_debtors_pl_menu, DIALOG_STYLE_LIST, pvar_string, "Информация об имуществе\nПродать имущество\nСписать деньги с банковского счета\nВыслать извещение", "Выбрать", "Назад");
			return 1;
		}

		case d_debtor_sell:
		{
			if(!response)
			{
				new pvar_string[28], pl_name[20];
				format(pvar_string, 10, "ofm_%d", listitem -2);
				GetPVarString(playerid, pvar_string, pl_name, 20);
				SetPVarInt(playerid, "ofm_listitem", listitem -2);
				format(pvar_string, sizeof(pvar_string), ""c_server"%s", pl_name);
				show_dialog(playerid, d_debtors_pl_menu, DIALOG_STYLE_LIST, pvar_string, "Информация об имуществе\nПродать имущество\nСписать деньги с банковского счета\nВыслать извещение", "Выбрать", "Назад");

				DeletePVar(playerid, "debt_house");
				DeletePVar(playerid, "debt_business");
				DeletePVar(playerid, "debt_tax");
				DeletePVar(playerid, "debt_uid");
				return 1;
			}
			if(listitem == 0)
			{
				new s_house_id = GetPVarInt(playerid, "debt_house");
				new pvar_string[18], pl_name[20];
				format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, "ofm_listitem"));
				GetPVarString(playerid, pvar_string, pl_name, 20);
				if(s_house_id == -1)
				{
					SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У игрока нет дома.");
					new query_string[128];
					format(query_string, sizeof query_string, "SELECT `u_id`,`u_house`,`u_business` FROM `users` WHERE `u_name` = '%s' LIMIT 1", pl_name);
					mysql_tquery(sql_connection, query_string, "callback_debtor_property", "i", playerid);
					return 1;
				}
				else
				{
					new _pl_id;
					sscanf(pl_name, "u", _pl_id);
					if(IsPlayerConnected(_pl_id))
					{
						DestroyDynamicPickup(h_info[s_house_id -1][h_pickup]);
						if(!h_info[s_house_id -1][h_vw]) DestroyDynamicMapIcon(h_info[s_house_id -1][h_icon_id]);
						h_info[s_house_id -1][h_pickup] = CreateDynamicPickup(1273, 23, h_info[s_house_id -1][h_pos][0], h_info[s_house_id -1][h_pos][1], h_info[s_house_id -1][h_pos][2], h_info[s_house_id -1][h_vw], -1);
						if(!h_info[s_house_id -1][h_vw]) h_info[s_house_id -1][h_icon_id] = CreateDynamicMapIcon(h_info[s_house_id -1][h_pos][0], h_info[s_house_id -1][h_pos][1], h_info[s_house_id -1][h_pos][2], 31, 0, 0, 0, -1, 300.0);

						save_house(s_house_id -1);


						new data[48], _text_string[148];
						for(new i;i<8;i++)
						{
							h_info[s_house_id -1][h_improve][i] = 0;
							if(!i) format(data, sizeof(data),"%d", h_info[s_house_id -1][h_improve][i]);
							else format(data, sizeof(data),"%s|%d", data, h_info[s_house_id -1][h_improve][i]);
						}
						format(_text_string,sizeof(_text_string),"UPDATE `houses` SET `h_improve` = '%s' WHERE `h_id` = '%d'", data, s_house_id);
						mysql_tquery(sql_connection, _text_string);

						format(_text_string, sizeof _text_string, "UPDATE `houses` SET `h_safe_data` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `h_id` = '%d' LIMIT 1",
						h_info[s_house_id -1][h_safe_data][0], h_info[s_house_id -1][h_safe_data][1],
						h_info[s_house_id -1][h_safe_guns][0], h_info[s_house_id -1][h_safe_guns][1], h_info[s_house_id -1][h_safe_guns][2],
						h_info[s_house_id -1][h_safe_guns][3], h_info[s_house_id -1][h_safe_guns][4], h_info[s_house_id -1][h_safe_guns][5],
						h_info[s_house_id -1][h_id]);
						mysql_tquery(sql_connection, _text_string);

						PlayerInfo[_pl_id][house] = -1;
						update_int_sql(_pl_id, "u_house", PlayerInfo[_pl_id][house]);


						SendClientMessage(_pl_id, col_gray, "* Сотрудники мэрии изъяли Вашу недвижимость в счёт оплаты долгов.");
						SendClientMessage(_pl_id, col_gray, "* Остаточная стоимость была переведена на Ваш банковский счёт.");

						new _debt_tax = GetPVarInt(playerid, "debt_tax");
						if(h_info[s_house_id -1][h_price] > _debt_tax)
						{
							format(_text_string, 148,"UPDATE `users` SET `u_tax` = '0',`u_bank`=`u_bank`+'%d',`u_house`='-1' WHERE `u_id` = '%d'",
							h_info[s_house_id -1][h_price] -_debt_tax, GetPVarInt(playerid, "debt_uid"));
							mysql_tquery(sql_connection, _text_string);
							PlayerInfo[_pl_id][bank] += h_info[s_house_id -1][h_price] -_debt_tax;
							PlayerInfo[_pl_id][tax] = 0;
						}
						else
						{
							format(_text_string, 148,"UPDATE `users` SET `u_tax` = u_tax-'%d',`u_house`='-1' WHERE `u_id` = '%d'",
							h_info[s_house_id -1][h_price], GetPVarInt(playerid, "debt_uid"));
							mysql_tquery(sql_connection, _text_string);

							PlayerInfo[_pl_id][tax] -= h_info[s_house_id -1][h_price];
						}
					}
					else
					{

						format(h_info[s_house_id -1][h_owner_name], MAX_PLAYER_NAME, "Собственность штата");

						h_info[s_house_id -1][h_owner] = -1;
						h_info[s_house_id -1][h_closed] = 0;



						DestroyDynamicPickup(h_info[s_house_id -1][h_pickup]);
						if(!h_info[s_house_id -1][h_vw]) DestroyDynamicMapIcon(h_info[s_house_id -1][h_icon_id]);
						h_info[s_house_id -1][h_pickup] = CreateDynamicPickup(1273, 23, h_info[s_house_id -1][h_pos][0], h_info[s_house_id -1][h_pos][1], h_info[s_house_id -1][h_pos][2], h_info[s_house_id -1][h_vw], -1);
						if(!h_info[s_house_id -1][h_vw]) h_info[s_house_id -1][h_icon_id] = CreateDynamicMapIcon(h_info[s_house_id -1][h_pos][0], h_info[s_house_id -1][h_pos][1], h_info[s_house_id -1][h_pos][2], 31, 0, 0, 0, -1, 300.0);

						save_house(s_house_id -1);


						new data[48], _text_string[262];
						for(new i;i<8;i++)
						{
							h_info[s_house_id -1][h_improve][i] = 0;
							if(!i) format(data, sizeof(data),"%d", h_info[s_house_id -1][h_improve][i]);
							else format(data, sizeof(data),"%s|%d", data, h_info[s_house_id -1][h_improve][i]);
						}
						format(_text_string, 128,"UPDATE `houses` SET `h_improve` = '%s' WHERE `h_id` = '%d'", data, s_house_id);
						mysql_tquery(sql_connection, _text_string);

						format(_text_string, 148 , "UPDATE `houses` SET `h_safe_data` = '%d|%d|%d|%d|%d|%d|%d|%d' WHERE `h_id` = '%d' LIMIT 1",
						h_info[s_house_id -1][h_safe_data][0], h_info[s_house_id -1][h_safe_data][1],
						h_info[s_house_id -1][h_safe_guns][0], h_info[s_house_id -1][h_safe_guns][1], h_info[s_house_id -1][h_safe_guns][2],
						h_info[s_house_id -1][h_safe_guns][3], h_info[s_house_id -1][h_safe_guns][4], h_info[s_house_id -1][h_safe_guns][5],
						h_info[s_house_id -1][h_id]);
						mysql_tquery(sql_connection, _text_string);

						format(_text_string, sizeof _text_string, "INSERT INTO `debtor_message`(`dm_text`, `dm_dest`) VALUES ('"c_white"Ваш дом был изъят сотрудниками мэрии в счёт оплаты налогов\n\n"c_grey"* Остаточная стоимость была переведена на Ваш банковский счёт.','%d')",
						GetPVarInt(playerid, "debt_uid"));
						mysql_tquery(sql_connection, _text_string);

						new _debt_tax = GetPVarInt(playerid, "debt_tax");
						if(h_info[s_house_id -1][h_price] > _debt_tax)
						{
							format(_text_string, 148,"UPDATE `users` SET `u_tax` = '0',`u_bank`=`u_bank`+'%d',`u_house`='-1' WHERE `u_id` = '%d' LIMIT 1",
							h_info[s_house_id -1][h_price] -_debt_tax, GetPVarInt(playerid, "debt_uid"));
							mysql_tquery(sql_connection, _text_string);
						}
						else
						{
							format(_text_string, 148,"UPDATE `users` SET `u_tax` = u_tax-'%d',`u_house`='-1' WHERE `u_id` = '%d' LIMIT 1",
							h_info[s_house_id -1][h_price], GetPVarInt(playerid, "debt_uid"));
							mysql_tquery(sql_connection, _text_string);
						}
					}
					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Имущество должника успешно продано.");
					DeletePVar(playerid, "debt_house");
					DeletePVar(playerid, "debt_business");
					DeletePVar(playerid, "debt_tax");
					DeletePVar(playerid, "debt_uid");
					DeletePVar(playerid, "ofm_listitem");
					mysql_tquery(sql_connection, "SELECT `u_name`,`u_tax` FROM `users` WHERE `u_tax` > 10000 ORDER BY `users`.`u_tax` DESC", "callback_debtors", "i", playerid);

				}
			}
			else
			{
				new business_id = GetPVarInt(playerid, "debt_business")-1;
				new pvar_string[18], pl_name[20];
				format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, "ofm_listitem"));
				GetPVarString(playerid, pvar_string, pl_name, 20);
				if(business_id == -2)
				{
					SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У игрока нет бизнеса.");
					new query_string[128];
					format(query_string, sizeof query_string, "SELECT `u_id`,`u_house`,`u_business` FROM `users` WHERE `u_name` = '%s' LIMIT 1", pl_name);
					mysql_tquery(sql_connection, query_string, "callback_debtor_property", "i", playerid);
					return 1;
				}
				else
				{
					new _pl_id;
					sscanf(pl_name, "u", _pl_id);
					if(IsPlayerConnected(_pl_id))
					{
						b_info[business_id][b_owner_inc] = -1;

						new query_string[200 + MAX_PLAYER_NAME + 1];
						format(query_string, 136,"UPDATE `businesses` SET `b_owner_inc` = '-1', `b_owner_name` = 'The State' WHERE `b_id` = '%d' LIMIT 1", b_info[business_id][b_id]);
						mysql_tquery(sql_connection, query_string);

						if(b_info[business_id][b_type] == bizz_type_bar || b_info[business_id][b_type] == bizz_type_pharm || b_info[business_id][b_type] == bizz_type_electronic || b_info[business_id][b_type] == bizz_type_club || b_info[business_id][b_type] == bizz_type_cafe || b_info[business_id][b_type] == bizz_type_shop || b_info[business_id][b_type] == bizz_type_clothes || b_info[business_id][b_type] == bizz_type_carshop)
						{
							format(query_string, sizeof(query_string), ""c_server"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Бизнес продаётся", b_types[b_info[business_id][b_type]], b_info[business_id][b_price], mafia_owner_name[b_info[business_id][b_mafia] -1]);
							UpdateDynamic3DTextLabelText(b_info[business_id][b_label], -1, query_string);
						}

						else if(b_info[business_id][b_type] == bizz_type_gas)
						{
							format(query_string, sizeof(query_string), ""c_server"%s\n"c_grey"Стоимость: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Бизнес продаётся (/buygas)", b_types[b_info[business_id][b_type]], b_info[business_id][b_price], mafia_owner_name[b_info[business_id][b_mafia] -1]);
							UpdateDynamic3DTextLabelText(b_info[business_id][b_label], -1, query_string);
						}
						else if(b_info[business_id][b_type] == bizz_type_ammo)
						{
							format(query_string, sizeof(query_string), ""c_server"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Бизнес продаётся", b_types[b_info[business_id][b_type]], b_info[business_id][b_price], family_info[b_info[business_id][b_family] -1][fam_name]);
							UpdateDynamic3DTextLabelText(b_info[business_id][b_label], -1, query_string);
						}
						else if(b_info[business_id][b_type] == bizz_type_tune)
						{
							format(query_string, sizeof(query_string), ""c_server"%s\n"c_grey"Стоимость: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Автостанция продаётся (/buytune)", b_types[b_info[business_id][b_type]], b_info[business_id][b_price], mafia_owner_name[b_info[business_id][b_mafia] -1]);
							UpdateDynamic3DTextLabelText(b_info[business_id][b_label], -1, query_string);
						}
						new _debt_tax = GetPVarInt(playerid, "debt_tax");
						if(b_info[business_id][b_price] > _debt_tax)
						{
							format(query_string, 148,"UPDATE `users` SET `u_tax` = '0',`u_bank`=`u_bank`+'%d',`u_business`='-1' WHERE `u_id` = '%d' LIMIT 1",
							b_info[business_id][b_price] -_debt_tax, GetPVarInt(playerid, "debt_uid"));
							mysql_tquery(sql_connection, query_string);
							PlayerInfo[_pl_id][bank] += b_info[business_id][b_price] -_debt_tax;
							PlayerInfo[_pl_id][tax] = 0;
						}
						else
						{
							format(query_string, 148,"UPDATE `users` SET `u_tax` = u_tax-'%d',`u_business`='-1' WHERE `u_id` = '%d' LIMIT 1",
							b_info[business_id][b_price], GetPVarInt(playerid, "debt_uid"));
							mysql_tquery(sql_connection, query_string);
							PlayerInfo[_pl_id][tax] -= b_info[business_id][b_price];
						}
						format(query_string, sizeof query_string, "INSERT INTO `debtor_message`(`dm_text`, `dm_dest`) VALUES ('"c_white"Ваш бизнес был изъят сотрудниками мэрии в счёт оплаты налогов\n\n"c_grey"* Остаточная стоимость была переведена на Ваш банковский счёт.','%d')",
						GetPVarInt(playerid, "debt_uid"));
						mysql_tquery(sql_connection, query_string);

						PlayerInfo[_pl_id][business] = -1;
						update_int_sql(_pl_id, "u_business", PlayerInfo[_pl_id][business]);
						SendClientMessage(_pl_id, col_gray, "* Сотрудники мэрии изъяли Вашу недвижимость в счёт оплаты долгов.");
						SendClientMessage(_pl_id, col_gray, "* Остаточная стоимость была переведена на Ваш банковский счёт.");
					}
					else
					{
						b_info[business_id][b_owner_inc] = -1;

						new _query_string[200 + MAX_PLAYER_NAME + 1];
						format(_query_string, 136,"UPDATE `businesses` SET `b_owner_inc` = '-1', `b_owner_name` = 'The State' WHERE `b_id` = '%d' LIMIT 1", b_info[business_id][b_id]);
						mysql_tquery(sql_connection, _query_string);

						if(b_info[business_id][b_type] == bizz_type_bar || b_info[business_id][b_type] == bizz_type_pharm || b_info[business_id][b_type] == bizz_type_electronic || b_info[business_id][b_type] == bizz_type_club || b_info[business_id][b_type] == bizz_type_cafe || b_info[business_id][b_type] == bizz_type_shop || b_info[business_id][b_type] == bizz_type_clothes || b_info[business_id][b_type] == bizz_type_carshop)
						{
							format(_query_string, sizeof(_query_string), ""c_server"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Бизнес продаётся", b_types[b_info[business_id][b_type]], b_info[business_id][b_price], mafia_owner_name[b_info[business_id][b_mafia] -1]);
							UpdateDynamic3DTextLabelText(b_info[business_id][b_label], -1, _query_string);
						}

						else if(b_info[business_id][b_type] == bizz_type_gas)
						{
							format(_query_string, sizeof(_query_string), ""c_server"%s\n"c_grey"Стоимость: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Бизнес продаётся (/buygas)", b_types[b_info[business_id][b_type]], b_info[business_id][b_price], mafia_owner_name[b_info[business_id][b_mafia] -1]);
							UpdateDynamic3DTextLabelText(b_info[business_id][b_label], -1, _query_string);
						}
						else if(b_info[business_id][b_type] == bizz_type_ammo)
						{
							format(_query_string, sizeof(_query_string), ""c_server"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Бизнес продаётся", b_types[b_info[business_id][b_type]], b_info[business_id][b_price], family_info[b_info[business_id][b_family] -1][fam_name]);
							UpdateDynamic3DTextLabelText(b_info[business_id][b_label], -1, _query_string);
						}
						else if(b_info[business_id][b_type] == bizz_type_tune)
						{
							format(_query_string, sizeof(_query_string), ""c_server"%s\n"c_grey"Стоимость: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Автостанция продаётся (/buytune)", b_types[b_info[business_id][b_type]], b_info[business_id][b_price], mafia_owner_name[b_info[business_id][b_mafia] -1]);
							UpdateDynamic3DTextLabelText(b_info[business_id][b_label], -1, _query_string);
						}
						new __debt_tax = GetPVarInt(playerid, "debt_tax");
						if(b_info[business_id][b_price] > __debt_tax)
						{
							format(_query_string, 148,"UPDATE `users` SET `u_tax` = '0',`u_bank`=`u_bank`+'%d',`u_business`='-1' WHERE `u_id` = '%d' LIMIT 1",
							b_info[business_id][b_price] -__debt_tax, GetPVarInt(playerid, "debt_uid"));
							mysql_tquery(sql_connection, _query_string);
						}
						else
						{
							format(_query_string, 128,"UPDATE `users` SET `u_tax` = `u_tax`-'%d',`u_business`='-1' WHERE `u_id` = '%d' LIMIT 1",
							b_info[business_id][b_price], GetPVarInt(playerid, "debt_uid"));
							mysql_tquery(sql_connection, _query_string);
						}
						format(_query_string, sizeof _query_string, "INSERT INTO `debtor_message`(`dm_text`, `dm_dest`) VALUES ('"c_white"Ваш бизнес был изъят сотрудниками мэрии в счёт оплаты налогов\n\n"c_grey"* Остаточная стоимость была переведена на Ваш банковский счёт.','%d')",
						GetPVarInt(playerid, "debt_uid"));
						mysql_tquery(sql_connection, _query_string);
					}
					SendClientMessage(playerid, col_white, ""c_green"* "c_white"Бизнес должника успешно продан.");
					DeletePVar(playerid, "debt_house");
					DeletePVar(playerid, "debt_business");
					DeletePVar(playerid, "debt_tax");
					DeletePVar(playerid, "debt_uid");
					DeletePVar(playerid, "ofm_listitem");
					mysql_tquery(sql_connection, "SELECT `u_name`,`u_tax` FROM `users` WHERE `u_tax` > 10000 ORDER BY `users`.`u_tax` DESC", "callback_debtors", "i", playerid);
				}
			}
		}
		case d_port_help:
		{
			if(!response) return SetCameraBehindPlayer(playerid);
			if(PlayerInfo[playerid][timejob] == job_forklift)
			{
				InterpolateCameraPos(playerid, 2701.9277, -2378.6743, 17.4182, 2814.8062, -2420.0977, 24.6413, 10000, CAMERA_MOVE);
				InterpolateCameraLookAt(playerid, 2701.5447, -2377.7532, 17.2832, 2814.0027, -2420.6921, 24.2813, 10000, CAMERA_MOVE);

				show_dialog(playerid, d_port_help_1, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по работе", "\
				"c_grey"Работа на погрузчике:\n\
				"c_white"После аренды погрузчика Вам необходимо подъехать к одному из кранов, которые спускают контейнеры с корабля.\n\
				Необходимо дождаться момента, когда контейнер окажется на земле.\n\
				После этого поднимите контейнер с помощью клавиши "c_server"Y"c_white"",
				"Далее", "Закрыть");
				return 1;
			}
			else if(PlayerInfo[playerid][timejob] == job_porter)
			{
				InterpolateCameraPos(playerid, 2667.4717, -2523.0828, 28.0960, 2680.4277, -2388.7642, 19.6739, 10000, CAMERA_MOVE);
				InterpolateCameraLookAt(playerid, 2668.0283, -2522.2534, 27.8110, 2679.5945, -2388.2141, 19.5189, 10000, CAMERA_MOVE);
				show_dialog(playerid, d_port_help_1, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по работе", "\
				"c_grey"Работа грузчиком:\n\
				"c_white"Взяв коробку из контейнера, необходимо отнести его на центральный склад порта.",
				"Далее", "Назад");
				return 1;
			}
		}
		case d_port_help_1:
		{
			if(!response) return SetCameraBehindPlayer(playerid);
			if(PlayerInfo[playerid][timejob] == job_forklift)
			{
				InterpolateCameraPos(playerid, 2814.8062, -2420.0977, 24.6413, 2677.9243, -2484.2791, 19.1436, 10000, CAMERA_MOVE);
				InterpolateCameraLookAt(playerid, 2814.0027, -2420.6921, 24.2813, 2678.4658, -2483.4387, 19.0086, 10000, CAMERA_MOVE);

				show_dialog(playerid, d_port_help_2, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по работе", "\
				"c_grey"Работа на погрузчике:\n\
				"c_white"Контейнеры необходимо отвозить на свободные места центральной площадки порта,\n\
				для последующей разгрузки контейнеров грузчиками.\n\
				Контейнеры можно ставить друг на друга, в высоту не превышающую 2 контейнера.\n\
				Для спуска контейнер используйте клавишу "c_grey"Y"c_white"",
				"Закрыть", "");
				return 1;
			}
			else if(PlayerInfo[playerid][timejob] == job_porter)
			{
				InterpolateCameraPos(playerid, 2680.4277, -2388.7642, 19.6739, 2656.5679, -2358.1609, 14.6043, 10000, CAMERA_MOVE);
				InterpolateCameraLookAt(playerid, 2679.5945, -2388.2141, 19.5189, 2655.9648, -2358.9563, 14.4743, 10000, CAMERA_MOVE);

				show_dialog(playerid, d_port_help_2, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по работе", "\
				"c_grey"Работа грузчиком:\n\
				"c_white"Оплата зависит от количества перенесённых ящиков.\n\nНу а теперь, приступайте к работе.",
				"Закрыть", "");
				return 1;
			}
		}
		case d_port_help_2:
		{
			SetCameraBehindPlayer(playerid);
		}
		case d_spawnchange:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0: return pc_cmd_spawnchange(playerid);
				case 1: SendClientMessage(playerid, col_white, !""scm_info"Вы успешно изменили место появление на: "c_gold"На вокзале");
				case 2:
				{
					if(PlayerInfo[playerid][house] == -1) return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет дома.");
					SendClientMessage(playerid, col_white, !""scm_info"Вы успешно изменили место появление на: "c_gold"В собственном доме");
				}
				case 3:
				{
					if(PlayerInfo[playerid][member] == 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в организации.");
					SendClientMessage(playerid, col_white, !""scm_info"Вы успешно изменили место появление на: "c_gold"На базе организации");
				}
				case 4:
				{
					new yacht_id = 0;
					foreach(new veh_id: player_vehicles[playerid])
					{
						if(!v_boat_int(veh_id)) continue;
						yacht_id++;
						break;
					}
					if(!yacht_id) return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет личной яхты.");
					SendClientMessage(playerid, col_white, !""scm_info"Вы успешно изменили место появление на: "c_gold"В личной яхте");
				}
				case 5:
				{
					if(PlayerInfo[playerid][rent_house] == -1) return SendClientMessage(playerid, col_white, !""scm_error"Вы не арендуете дом.");
					SendClientMessage(playerid, col_white, !""scm_info"Вы успешно изменили место появление на: "c_gold"В арендованом доме");
				}
				case 6:
				{
					if(PlayerInfo[playerid][family] == 0) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");
					if(!family_info[PlayerInfo[playerid][family] -1][fam_house]) return SendClientMessage(playerid, col_white, !""scm_error"У Вашей семьи нет семейного дома.");
					SendClientMessage(playerid, col_white, !""scm_info"Вы успешно изменили место появление на: "c_gold"В семейном доме");
				}
			}
			PlayerInfo[playerid][spawnchange] = listitem -1;
			update_int_sql(playerid, "u_spawnchange", PlayerInfo[playerid][spawnchange]);
			return 1;
		}
		case d_reg_mp:
		{
		    if(!response) return 1;


			switch(listitem)
		    {
		        case 0:
		        {
                    if(StartPaintBall != 1)
					{
						SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Регистрация закрыта.");
						return 1;
					}
					if(TeamPaint[playerid])
					{
						SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уже зарегистрированы.");
						return 1;
					}
					if(PlayerInfo[playerid][money] < 500) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас недостаточно средств для регистрации.");
					KillPaint[playerid] = DeathPaint[playerid] = 0;
					if(RedPlayer == 0 && BluePlayer == 0 || BluePlayer < RedPlayer || RedPlayer == BluePlayer)
					{
						SendClientMessage(playerid, col_gray, ""c_yellow"* S.INFO: Вы зарегестрированы на матч. Вы играете за команду синих.");
						BluePlayer ++;
						TeamPaint[playerid] = 1;
					}
					else if(BluePlayer > RedPlayer)
					{
						SendClientMessage(playerid, col_gray, ""c_yellow"* S.INFO: Вы зарегистрированы на матч. Вы играете за команду красных.");
						RedPlayer ++;
						TeamPaint[playerid] = 2;
					}
					give_money(playerid, -500);
					insert_money_log(playerid, INVALID_PLAYER_ID, -500, "регистрация на мп");
					paintball_bank += 500;
		        }
		        case 1:
		        {
		            if(StartRace != 1)
					{
						SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Регистрация закрыта.");
						return 1;
					}
					if(is_player_race_regged[playerid])
					{
						SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уже зарегистрированны.");
						return 1;
					}
					if(PlayerInfo[playerid][money] < 500) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас недостаточно средств для регистрации.");
					is_player_race_regged[playerid] = 1;
					PlayerRaceCount ++;
					SendClientMessage(playerid, col_gray, ""c_yellow"* S.INFO: Вы зарегестрированы на гонку, ожидайте начала гонки.");
					give_money(playerid, -500);
					insert_money_log(playerid, INVALID_PLAYER_ID, -500, "регистрация на мп");
					race_bank += 500;
		        }
		    }
		    return 1;
		}
		case d_rent_faggio:
		{
			if(!response) return 1;
			if(player_rentcar[playerid] != INVALID_VEHICLE_ID) return RemovePlayerFromVehicle(playerid), SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уже арендуете транспорт, сначала откажитесь от старого "c_orange_red"/stoprent");
			if(PlayerInfo[playerid][money] < 50) return RemovePlayerFromVehicle(playerid), SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Аренда скутера стоит "c_orange_red"50$");

			for(new j = 0; j < 7; j ++)
			{
				if(!IsPlayerInRangeOfPoint(playerid, 10, faggio_spawn[j][0], faggio_spawn[j][1], faggio_spawn[j][2])) continue;
				new _vehicle_id = CreateVehicle(462, faggio_spawn[j][0], faggio_spawn[j][1], faggio_spawn[j][2], faggio_spawn[j][3], 1, 1, 300);

				veh_info[_vehicle_id -1][v_type] = vehicle_type_job;
				veh_info[_vehicle_id -1][v_fuel] = 100;

				SetVehicleNumberPlate(_vehicle_id, "Faggio");
				give_money(playerid, -50);
				player_rentcar[playerid] = _vehicle_id;
				PutPlayerInVehicle(playerid, _vehicle_id, 0);


				new engine, lights, alarm, doors, bonnet, boot, objective;
				veh_info[player_rentcar[playerid] -1][v_locked] = true;
				GetVehicleParamsEx(player_rentcar[playerid], engine, lights, alarm, doors, bonnet, boot, objective);
				SetVehicleParamsEx(player_rentcar[playerid], engine, lights, alarm, true, bonnet, boot, objective);
				GameTextForPlayer(playerid,"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~ CAR LOCK", 3000, 3);

				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно арендовали транспорт. Используйте "c_green"/rlock"c_white", чтобы закрыть его.");
				return 1;
			}
		}
		case d_donate:
		{
			if(!response) return pc_cmd_menu(playerid);
			switch(listitem)
			{
				case 7, 8:
				{
					show_donate(playerid);
					return 1;
				}
				case 0:
				{
					show_dialog(playerid, d_donate_money, DIALOG_STYLE_INPUT, ""c_server"Донат услуги","\
					"c_grey"-"c_white"Игровая валюта:\n\n\
					"c_grey"* Курс виртуальной валюты: "c_green"1 E-coin"c_grey" = "c_green"1,000$"c_grey".\n\
					"c_grey"* Введите количество E-coin Вы хотите обменять на \""c_white"Виртуальную валюту"c_grey"\".","Принять", "Назад");
					return 1;
				}
				case 1:
				{
					show_dialog(playerid, d_donate_rename, DIALOG_STYLE_INPUT, ""c_server"Донат услуги","\
					"c_grey"-"c_white"Смена Ник-Нейма:\n\n\
					"c_grey"* Цена: "c_green"20 E-coin"c_grey".\n\
					"c_grey"* Вы действительно хотите сменить Ваш \""c_white"Ник-Нейм"c_grey"\".","Принять", "Назад");
					return 1;
				}
				case 2:
				{
					show_dialog(playerid, d_donate_unwarn, DIALOG_STYLE_MSGBOX, ""c_server"Донат услуги","\
					"c_grey"-"c_white"Снять предупреждение:\n\n\
					"c_grey"* Цена: "c_green"100 E-coin"c_grey".\n\
					"c_grey"* Вы действительно хотите снять \""c_white"Предупреждение"c_grey"\"?","Принять", "Назад");
					return 1;
				}
				case 3:
				{
					show_dialog(playerid, d_donate_age, DIALOG_STYLE_INPUT, ""c_server"Донат услуги","\
					"c_grey"-"c_white"Смена возраста:\n\n\
					"c_grey"* Цена: "c_green"50 E-coin"c_grey".\n\
					"c_grey"* Вы действительно хотите сменить Ваш \""c_white"Возраст"c_grey"\"?","Принять", "Назад");
					return 1;
				}
				case 4:
				{
					show_dialog(playerid, d_donate_skin, DIALOG_STYLE_LIST, ""c_server"Донат услуги","\
					"c_grey"-"c_white"Kent Paul\n\
					"c_grey"-"c_white"Cesar Vialpando\n\
					"c_grey"-"c_white"Og Lock\n\
					"c_grey"-"c_white"Sean 'Sweet' Johnson\n\
					"c_grey"-"c_white"Clown\n\
					"c_grey"-"c_white"Ryder with robbery mask\n\
					"c_grey"-"c_white"Big Smoke Armored\n\
					"c_grey"* Цена: "c_green"150 E-coin","Принять", "Назад");
					return 1;
				}
				case 5:
				{
					show_dialog(playerid, d_donate_jobinfo, DIALOG_STYLE_MSGBOX, ""c_server"Донат услуги","\
					"c_grey"-"c_white"Получить новую трудовую книжку:\n\n\
					"c_grey"-"c_white"Если Вы состояли в незаконных вооружённых формированиях и Вас не берут на работу\n\
					"c_white"  в государственные службы или в Радиоцентры? Вы можете поменять трудовую книжку.\n\n\
					"c_grey"* Цена: "c_green"50 E-coin"c_grey".\n\
					"c_grey"* Вы действительно хотите получить \""c_white"Новую трудовую книжку"c_grey"\"?","Принять", "Назад");
					return 1;
				}
				case 6:
				{
					show_dialog(playerid, d_donate_vipgold, DIALOG_STYLE_MSGBOX, ""c_server"Донат услуги","\
					"c_grey"-"c_white"Привилегия VIP "c_server"'Gold'"c_white" даёт Вам следующие возможности:\n\n\
					"c_grey"-"c_white"Смена стиля походки\n\
					"c_grey"-"c_white"Смена стиля разговора\n\
					"c_grey"-"c_white"Бесконечный голод\n\
					"c_grey"-"c_white"Дополнительный слот для автомобиля\n\
					"c_grey"-"c_white"Лимит денежных средств на банковском счету увеличивается в 3 раза\n\
					"c_grey"-"c_white"Каждый час кол-во денег на банковском счету увеличивается на 1.5%\n\
					"c_grey"-"c_white"Не кикает за долгий AFK\n\
					"c_grey"* Цена: "c_green"700 E-coin"c_grey".\n\
					"c_grey"* Вы действительно хотите получить привилегию\""c_white"VIP "c_server"'Gold'"c_grey"\"?","Принять", "Назад");
					return 1;
				}
			}
		}
		case d_donate_skin:
		{
			if(!response) return show_donate(playerid);

			if(150 > get_player_donate(playerid))
			{
				show_dialog(playerid, d_donate_skin, DIALOG_STYLE_LIST, ""c_server"Донат услуги","\
				"c_grey"-"c_white"Kent Paul\n\
				"c_grey"-"c_white"Cesar Vialpando\n\
				"c_grey"-"c_white"Og Lock\n\
				"c_grey"-"c_white"Sean 'Sweet' Johnson\n\
				"c_grey"-"c_white"Clown\n\
				"c_grey"-"c_white"Ryder with robbery mask\n\
				"c_grey"-"c_white"Big Smoke Armored\n\
				"c_orange_red"* Цена: 150 E-coin","Принять", "Назад");
				return 1;
			}
			if(listitem == 7)
			{
				show_dialog(playerid, d_donate_skin, DIALOG_STYLE_LIST, ""c_server"Донат услуги","\
				"c_grey"-"c_white"Kent Paul\n\
				"c_grey"-"c_white"Cesar Vialpando\n\
				"c_grey"-"c_white"Og Lock\n\
				"c_grey"-"c_white"Sean 'Sweet' Johnson\n\
				"c_grey"-"c_white"Clown\n\
				"c_grey"-"c_white"Ryder with robbery mask\n\
				"c_grey"-"c_white"Big Smoke Armored\n\
				"c_grey"* Цена: "c_green"150 E-coin","Принять", "Назад");
				return 1;

			}
			set_skin(playerid, donate_skinlist[listitem]);
			//PlayerInfo[playerid][org_skin] = donate_skinlist[listitem];
			//update_int_sql(playerid, "u_org_skin", PlayerInfo[playerid][org_skin]);

			new query_string[108];
			format(query_string, sizeof(query_string),"UPDATE `users` SET `u_donate` = `u_donate`-'150' WHERE `u_id` = '%d' LIMIT 1",
			PlayerInfo[playerid][id]);
			mysql_query(sql_connection, query_string);

			new line_string[36];
			global_string[0] = EOS;
			strcat(global_string, ""c_server"Выберите слот одежды\n");
			for(new j = 0; j < 5; j ++)
			{
				if(PlayerInfo[playerid][temp_skin][j] == 0)
				{
					strcat(global_string, ""c_grey"-Пусто\n");
				}
				else
				{
					format(line_string, 36, ""c_white"Одежда | %d\n", PlayerInfo[playerid][temp_skin][j]);
					strcat(global_string, line_string);
				}
			}
			show_dialog(playerid, d_donate_skin_list, DIALOG_STYLE_LIST, ""c_server"Гардероб", global_string, "Выбрать", "Назад");

		}
		case d_donate_skin_list:
		{
			if(!response)
			{
				PlayerInfo[playerid][temp_skin][0] = PlayerInfo[playerid][skin];
				show_donate(playerid);
				return 1;
			}
			if(listitem == 0)
			{
				new line_string[36];
				global_string[0] = EOS;
				strcat(global_string, ""c_server"Выберите слот одежды\n");
				for(new j = 0; j < 5; j ++)
				{
					if(PlayerInfo[playerid][temp_skin][j] == 0)
					{
						strcat(global_string, ""c_grey"-Пусто\n");
					}
					else
					{
						format(line_string, 36, ""c_white"Одежда | %d\n", PlayerInfo[playerid][temp_skin][j]);
						strcat(global_string, line_string);
					}
				}
				show_dialog(playerid, d_donate_skin_list, DIALOG_STYLE_LIST, ""c_server"Гардероб", global_string, "Выбрать", "Назад");
				return 1;
			}


			PlayerInfo[playerid][temp_skin][listitem -1] = PlayerInfo[playerid][skin];

			new _query[126];
			format(_query, sizeof(_query), "UPDATE `users` SET `u_tempskin`='%d|%d|%d|%d|%d' WHERE `u_name` = '%s'",
			PlayerInfo[playerid][temp_skin][0], PlayerInfo[playerid][temp_skin][1], PlayerInfo[playerid][temp_skin][2],
			PlayerInfo[playerid][temp_skin][3], PlayerInfo[playerid][temp_skin][4], PlayerInfo[playerid][name]);
			mysql_tquery(sql_connection, _query);
			show_donate(playerid);

		}
		case d_donate_droul:
		{
			if(!response) return show_donate(playerid);
			if(50 > get_player_donate(playerid))
			{
				show_dialog(playerid, d_donate_droul, DIALOG_STYLE_MSGBOX, ""c_server"Донат услуги","\
				"c_orange_red"* У Вас недостаточно средств для приобретения данной услуги.\n\n\
				"c_grey"-"c_white"Очки для рулетки-удачи:\n\n\
				"c_grey"-"c_white"1 очко позволяет запустить рулетку-удачи 1 раз.\n\n\
				"c_grey"* Цена: "c_green"50 E-coin"c_grey".\n\
				"c_grey"* Вы действительно хотите получить \""c_white"1 очко рулетки-удачи"c_grey"\"?","Принять", "Назад");
				return 1;
			}

			PlayerInfo[playerid][donate_roulette] += 1;

			new query_string[148];
			format(query_string, sizeof(query_string),"UPDATE `users` SET `u_donate` = `u_donate`-'50',`u_droulette`='%d' WHERE `u_id` = '%d' LIMIT 1",
			PlayerInfo[playerid][donate_roulette], PlayerInfo[playerid][id]);
			mysql_query(sql_connection, query_string);

			show_donate(playerid);
			SendClientMessage(playerid, col_white, !""scm_sucess"Донат услуга успешно приобретена.");
		}
		case d_donate_jobinfo:
		{
			if(!response) return show_donate(playerid);

			if(50 > get_player_donate(playerid))
			{
				show_dialog(playerid, d_donate_jobinfo, DIALOG_STYLE_MSGBOX, ""c_server"Донат услуги","\
				"c_orange_red"* У Вас недостаточно средств для приобретения данной услуги.\n\n\
				"c_grey"-"c_white"Получить новую трудовую книжку:\n\n\
				"c_grey"-"c_white"Если Вы состояли в незаконных вооружённых формированиях и Вас не берут на работу\n\
				"c_white"  в государственные службы или в Радиоцентры? Вы можете поменять трудовую книжку.\n\n\
				"c_grey"* Цена: "c_green"50 E-coin"c_grey".\n\
				"c_grey"* Вы действительно хотите получить \""c_white"Новую трудовую книжку"c_grey"\"?","Принять", "Назад");
				return 1;
			}

			new query_string[96];
			format(query_string, sizeof(query_string),"DELETE FROM `users_jobinfo` WHERE `ji_uid` = '%d'",
			PlayerInfo[playerid][id]);
			mysql_query(sql_connection, query_string);

			format(query_string, sizeof(query_string), "UPDATE `users` SET `u_donate` = `u_donate`-'50' WHERE `u_id` = '%d'", PlayerInfo[playerid][id]);

			show_donate(playerid);
			SendClientMessage(playerid, col_white, !""scm_sucess"Донат услуга успешно приобретена.");
			return 1;
		}
		case d_donate_vipgold:
		{
			if(!response) return show_donate(playerid);
			if(PlayerInfo[playerid][vip] == 1) return show_donate(playerid), SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас уже имеется VIP "c_server"'Gold'"c_grey".");
			if(get_player_donate(playerid)< 700)
			{
				show_dialog(playerid, d_donate_vipgold, DIALOG_STYLE_MSGBOX, ""c_server"Донат услуги","\
				"c_orange_red"* У Вас недостаточно средств для приобретения данной услуги.\n\n\
				"c_grey"-"c_white"Привилегия VIP "c_server"'Gold'"c_white":\n\n\
				"c_grey"-"c_white"Смена стиля походки\n\
				"c_grey"-"c_white"Смена стиля разговора\n\
				"c_grey"-"c_white"Бесконечный голод\n\
				"c_grey"-"c_white"Дополнительный слот для автомобиля\n\
				"c_grey"-"c_white"Лимит денежных средств на банковском счету увеличивается в 3 раза\n\
				"c_grey"-"c_white"Каждый час кол-во денег на банковском счету увеличивается на 1.5%\n\
				"c_grey"-"c_white"Не кикает за долгий AFK\n\
				"c_grey"* Цена: "c_green"700 E-coin"c_grey".\n\
				"c_grey"* Вы действительно хотите получить привилегию\""c_white"VIP "c_server"'Gold'"c_grey"\"?","Принять", "Назад");
				return 1;
			}

			PlayerInfo[playerid][vip] = 1;
			PlayerInfo[playerid][hunger_immune] = 1;
			PlayerInfo[playerid][hunger] = 100;
			PlayerInfo[playerid][max_veh] += 1;

			give_money(playerid, 100000);
			insert_money_log(playerid, INVALID_PLAYER_ID, 100000, "Покупка VIP");

			new query_string[139 + MAX_PLAYER_NAME];
			format(query_string, sizeof(query_string), "UPDATE `users` SET `u_vip` = '1', `u_donate` = `u_donate` -'700', `u_maxveh` = '%d',`u_hungerimmune` = '1' WHERE `u_id` = '%d' LIMIT 1", PlayerInfo[playerid][max_veh], PlayerInfo[playerid][id]);
			mysql_query(sql_connection, query_string);
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно приобрели услугу VIP "c_server"'Gold'"c_white".");
			return 1;
		}
		case d_donate_unwarn:
		{
			if(!response) return show_donate(playerid);

			if(100 > get_player_donate(playerid))
			{
				show_dialog(playerid, d_donate_maxveh, DIALOG_STYLE_MSGBOX, ""c_server"Донат услуги","\
				"c_orange_red"* У Вас недостаточно средств для приобретения данной услуги.\n\n\
				"c_grey"-"c_white"Снять предупреждение:\n\n\
				"c_grey"* Цена: "c_green"100 E-coin"c_grey".\n\
				"c_grey"* Вы действительно хотите снять \""c_white"Предупреждение"c_grey"\"?","Принять", "Назад");
				return 1;
			}
			new scm_string[98];
			format(scm_string, sizeof scm_string, "SELECT * FROM `users_warns` WHERE `w_owner` = '%d' AND `w_end` > NOW()LIMIT 3", PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, scm_string, "donate_unwarns", "i", playerid);

		}
		case d_donate_maxveh:
		{
			if(!response) return show_donate(playerid);

			if(PlayerInfo[playerid][max_veh] > 4)
			{
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Максимум можно иметь 4 слота для автомобиля.");
				return show_donate(playerid);
			}
			if(300 > get_player_donate(playerid))
			{
				show_dialog(playerid, d_donate_maxveh, DIALOG_STYLE_MSGBOX, ""c_server"Донат услуги","\
				"c_orange_red"* У Вас недостаточно средств для приобретения данной услуги.\n\n\
				"c_grey"-"c_white"Дополнительный слот для машины:\n\n\
				"c_grey"-"c_white"Даёт Вам право иметь ещё одним транспортным средством.\n\n\
				"c_grey"* Цена: "c_green"300 E-coin"c_grey".\n\
				"c_grey"* Вы действительно хотите получить \""c_white"Дополнительный слот для автомобиля"c_grey"\"?","Принять", "Назад");
				return 1;
			}
			PlayerInfo[playerid][max_veh] += 1;

			new query_string[148];
			format(query_string, sizeof(query_string),"UPDATE `users` SET `u_donate` = `u_donate`-'300',`u_maxveh` = '%d',`u_hungerimmune` = '1' WHERE `u_id` = '%d' LIMIT 1",
			PlayerInfo[playerid][max_veh], PlayerInfo[playerid][id]);
			mysql_query(sql_connection, query_string);

			show_donate(playerid);
			SendClientMessage(playerid, col_white, !""scm_sucess"Донат услуга успешно приобретена.");
			return 1;
		}
		case d_donate_hunger:
		{
			if(!response) return show_donate(playerid);

			if(150 > get_player_donate(playerid))
			{
				show_dialog(playerid, d_donate_hunger, DIALOG_STYLE_MSGBOX, ""c_server"Донат услуги","\
				"c_orange_red"* У Вас недостаточно средств для приобретения данной услуги.\n\n\
				"c_grey"-"c_white"Бесконечную сытость:\n\n\
				"c_grey"-"c_white"Теперь Вам не нужно искать закусочные, чтобы перекусить,\n\
				"c_white"  у Вас не будет в этом необходимости.\n\n\
				"c_grey"* Цена: "c_green"150 E-coin"c_grey".\n\
				"c_grey"* Вы действительно хотите получить \""c_white"Бесконечную сытость"c_grey"\"?","Принять", "Назад");
				return 1;
			}
			if(PlayerInfo[playerid][hunger_immune])
			{
				show_dialog(playerid, d_donate_hunger, DIALOG_STYLE_MSGBOX, ""c_server"Донат услуги","\
				"c_orange_red"* У Вас уже активирована бесконечная сытость.\n\n\
				"c_grey"-"c_white"Бесконечную сытость:\n\n\
				"c_grey"-"c_white"Теперь Вам не нужно искать закусочные, чтобы перекусить,\n\
				"c_white"  у Вас не будет в этом необходимости.\n\n\
				"c_grey"* Цена: "c_green"150 E-coin"c_grey".\n\
				"c_grey"* Вы действительно хотите получить \""c_white"Бесконечную сытость"c_grey"\"?","Принять", "Назад");
				return 1;
			}
			PlayerInfo[playerid][hunger_immune] = 1;
			PlayerInfo[playerid][hunger] = 100;

			new query_string[128];
			format(query_string, sizeof(query_string),"UPDATE `users` SET `u_donate` = `u_donate`-'150',`u_hungerimmune` = '1' WHERE `u_id` = '%d' LIMIT 1",
			PlayerInfo[playerid][id]);
			mysql_query(sql_connection, query_string);

			show_donate(playerid);
			SendClientMessage(playerid, col_white, !""scm_sucess"Донат услуга успешно приобретена.");
			return 1;
		}
		case d_donate_money:
		{
			if(!response) return show_donate(playerid);

			new money_count = strval(inputtext);
			if(money_count < 1 || money_count > 10000)
			{
				show_dialog(playerid, d_donate_money, DIALOG_STYLE_INPUT, ""c_server"Донат услуги","\
				"c_orange_red"* Сумма не может быть меньше 1 E-coin или больше 10.000 E-coin.\n\n\
				"c_grey"-"c_white"Игровая валюта:\n\n\
				"c_grey"* Курс виртуальной валюты: "c_green"1 E-coin"c_grey" = "c_green"1,000$"c_grey".\n\
				"c_grey"* Введите количество E-coin Вы хотите обменять на \""c_white"Виртуальную валюту"c_grey"\".","Принять", "Назад");
				return 1;
			}
			if(money_count > get_player_donate(playerid))
			{
				show_dialog(playerid, d_donate_money, DIALOG_STYLE_INPUT, ""c_server"Донат услуги","\
				"c_orange_red"* У Вас недостаточно средств для приобретения виртуальной валюты.\n\n\
				"c_grey"-"c_white"Игровая валюта:\n\n\
				"c_grey"* Курс виртуальной валюты: "c_green"1 E-coin"c_grey" = "c_green"1,000$"c_grey".\n\
				"c_grey"* Введите количество E-coin Вы хотите обменять на \""c_white"Виртуальную валюту"c_grey"\".","Принять", "Назад");
				return 1;
			}

			new query_string[118];
			format(query_string, sizeof(query_string),"UPDATE `users` SET `u_donate` = `u_donate`-'%d' WHERE `u_id` = '%d' LIMIT 1", money_count, PlayerInfo[playerid][id]);
			mysql_query(sql_connection, query_string);

			give_money(playerid, money_count * 1000);
			insert_money_log(playerid, INVALID_PLAYER_ID, money_count * 1000, "Донат валюты");
			show_donate(playerid);
			SendClientMessage(playerid, col_white, !""scm_sucess"Донат услуга успешно приобретена.");
			return 1;
		}
		case d_donate_rename:
		{
			if(!response) return show_donate(playerid);

			if(20 > get_player_donate(playerid))
			{
				show_dialog(playerid, d_donate_rename, DIALOG_STYLE_INPUT, ""c_server"Донат услуги","\
				"c_orange_red"* Вы ввели некорректный формат никнейма.\n\n\
				"c_grey"-"c_white"Смена Ник-Нейма:\n\n\
				"c_grey"* Цена: "c_green"20 E-coin"c_grey".\n\
				"c_grey"* Вы действительно хотите сменить Ваш \""c_white"Ник-Нейм"c_grey"\".","Принять", "Назад");
				return 1;
			}
			if(!strlen(inputtext))
			{
				show_dialog(playerid, d_donate_rename, DIALOG_STYLE_INPUT, ""c_server"Донат услуги","\
				"c_orange_red"* Вы ввели некорректный формат никнейма.\n\n\
				"c_grey"-"c_white"Смена Ник-Нейма:\n\n\
				"c_grey"* Цена: "c_green"20 E-coin"c_grey".\n\
				"c_grey"* Вы действительно хотите сменить Ваш \""c_white"Ник-Нейм"c_grey"\".","Принять", "Назад");
				return 1;
			}
			if(is_text_invalid(inputtext))
			{
				show_dialog(playerid, d_donate_rename, DIALOG_STYLE_INPUT, ""c_server"Донат услуги","\
				"c_orange_red"* Вы ввели некорректный формат никнейма.\n\n\
				"c_grey"-"c_white"Смена Ник-Нейма:\n\n\
				"c_grey"* Цена: "c_green"20 E-coin"c_grey".\n\
				"c_grey"* Вы действительно хотите сменить Ваш \""c_white"Ник-Нейм"c_grey"\".","Принять", "Назад");
				return 1;
			}
			if(strlen(inputtext)< 6 || strlen(inputtext)> 24)
			{
				show_dialog(playerid, d_donate_rename, DIALOG_STYLE_INPUT, ""c_server"Донат услуги","\
				"c_orange_red"* Вы ввели некорректный формат никнейма.\n\n\
				"c_grey"-"c_white"Смена Ник-Нейма:\n\n\
				"c_grey"* Цена: "c_green"20 E-coin"c_grey".\n\
				"c_grey"* Вы действительно хотите сменить Ваш \""c_white"Ник-Нейм"c_grey"\".","Принять", "Назад");
				return 1;
			}
			if(!IsARPName(inputtext))
			{
				show_dialog(playerid, d_donate_rename, DIALOG_STYLE_INPUT, ""c_server"Донат услуги","\
				"c_orange_red"* Вы ввели некорректный формат никнейма.\n\n\
				"c_grey"-"c_white"Смена Ник-Нейма:\n\n\
				"c_grey"* Цена: "c_green"20 E-coin"c_grey".\n\
				"c_grey"* Вы действительно хотите сменить Ваш \""c_white"Ник-Нейм"c_grey"\".","Принять", "Назад");
				return 1;
			}

			new query_string[138];
			mysql_format(sql_connection, query_string, sizeof(query_string),"SELECT `u_name` FROM `users` WHERE `u_name` = '%e' LIMIT 1",
			inputtext);
			mysql_tquery(sql_connection, query_string, "change_donate_name", "ds", playerid, inputtext);

		}
		case d_donate_age:
		{
			if(!response) return show_donate(playerid);

			if(50 > get_player_donate(playerid))
			{
				show_dialog(playerid, d_donate_age, DIALOG_STYLE_INPUT, ""c_server"Донат услуги","\
				"c_orange_red"* У Вас недостаточно средств для приобретения данной услуги.\n\n\
				"c_grey"-"c_white"Смена игрового возраста:\n\n\
				"c_grey"* Цена: "c_green"50 E-coin"c_grey".\n\
				"c_grey"* Вы действительно хотите сменить Ваш \""c_white"Возраст"c_grey"\".","Принять", "Назад");
				return 1;
			}
			if(strval(inputtext)< 18 || strval(inputtext)> 32)
			{
				show_dialog(playerid, d_donate_age, DIALOG_STYLE_INPUT, ""c_server"Донат услуги","\
				"c_orange_red"* Вы ввели некорректный возраст персонажа.\n\n\
				"c_grey"-"c_white"Смена игрового возраста:\n\n\
				"c_grey"* Цена: "c_green"50 E-coin"c_grey".\n\
				"c_grey"* Вы действительно хотите сменить Ваш \""c_white"Возраст"c_grey"\".","Принять", "Назад");
				return 1;
			}

			new query_string[61 + MAX_PLAYER_NAME];
			mysql_format(sql_connection, query_string, sizeof(query_string),"UPDATE `users` SET `u_age` = '%d' WHERE `u_name` = '%e' LIMIT 1",
			strval(inputtext), inputtext);
			mysql_query(sql_connection, query_string);
			PlayerInfo[playerid][age] = strval(inputtext);
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно сменили игровой возраст персонажа.");

		}
		case d_truck_panel:
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					format(global_string, 722, ""c_server"Состояние складов:\n\n\
					"c_grey"-"c_white"Лесопилка\n\n\t"c_grey"Древесина: "c_white"%d кг.\n\n\
					"c_grey"-"c_white"Шахта\n\n\t"c_grey"Металл: "c_white"%d кг.\n\n\
					"c_grey"-"c_white"Завод\n\n\t"c_grey"Заготовки:"c_white" %i/1000000\n\t"c_grey"Металл:"c_white" %i/1000000\n\t"c_grey"Древесина:"c_white" %i/1000000",
					dorm_count[DORM_SAWMILL], dorm_count[DORM_MINE], dorm_count[DORM_FACTORY_GUNS], dorm_count[DORM_FACTORY_MINE], dorm_count[DORM_FACTORY_WOOD]);
					show_dialog(playerid, d_truck_info, DIALOG_STYLE_MSGBOX, !""scm_dialog"Состояние складов", global_string, !"Назад", !"Закрыть");
					return 1;
				}
				case 1:
				{
					new dialog_string[128];
					format(dialog_string, sizeof(dialog_string), "Шахта\t%d м.\nЛесопилка\t%d м.\nЗавод\t%d м.",
					floatround(GetPlayerDistanceFromPoint(playerid, 655.3007, 869.1117, -42.0791)),
					floatround(GetPlayerDistanceFromPoint(playerid, -1088.2982, -1630.4126, 76.3672)),
					floatround(GetPlayerDistanceFromPoint(playerid, -117.2966, -320.5717, 1.4219)));
					show_dialog(playerid, d_truck_loadings, DIALOG_STYLE_TABLIST, !""scm_dialog"Точки загрузки", dialog_string, !"Выбрать", !"Назад");
				}
				case 2:
				{
					new dialog_string[128];
					format(dialog_string, sizeof(dialog_string), "Завод\t%d м.\nПорт\t%d м.",
					floatround(GetPlayerDistanceFromPoint(playerid, -18.8481, -272.7238, 5.4297)),
					floatround(GetPlayerDistanceFromPoint(playerid, 2783.1785,-2391.0684,13.2751)));
					show_dialog(playerid, d_truck_unloadings, DIALOG_STYLE_TABLIST, !""scm_dialog"Точки разгрузки", dialog_string, !"Выбрать", !"Назад");
				}

			}
		}
		case d_truck_info:
		{
			if(response) return show_dialog(playerid, d_truck_panel, DIALOG_STYLE_LIST, !""scm_dialog"Панель дальнобойщика", !"Состояние складов\nТочки загрузки\nТочки разгрузки", !"Выбрать", !"Закрыть");
		}
		case d_truck_loadings:
		{
			if(!response) return show_dialog(playerid, d_truck_panel, DIALOG_STYLE_LIST, !""scm_dialog"Панель дальнобойщика", !"Состояние складов\nТочки загрузки\nТочки разгрузки", !"Выбрать", !"Закрыть");
			switch(listitem)
			{
				case 0:SetPlayerRaceCheckpoint(playerid, 1, 655.3007, 869.1117, -42.0791, 0.0, 0.0, 0.0, 2.0); // Шахта
				case 1:SetPlayerRaceCheckpoint(playerid, 1, -1088.2982, -1630.4126, 76.3672, 0.0, 0.0, 0.0, 2.0); // Лесопилка
				case 2:SetPlayerRaceCheckpoint(playerid, 1, -117.2966, -320.5717, 1.4219, 0.0, 0.0, 0.0, 2.0); // Завод
			}
			SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
			is_gps_used {playerid} = 1;
			return 1;
		}
		case d_truck_unloadings:
		{
			if(!response) return show_dialog(playerid, d_truck_panel, DIALOG_STYLE_LIST, !""scm_dialog"Панель дальнобойщика", !"Состояние складов\nТочки загрузки\nТочки разгрузки", !"Выбрать", !"Закрыть");
			switch(listitem)
			{
				case 0:SetPlayerRaceCheckpoint(playerid, 1, -18.8481, -272.7238, 5.4297, 0.0, 0.0, 0.0, 2.0); // Завод
				case 1:SetPlayerRaceCheckpoint(playerid, 1, 2783.1785,-2391.0684,13.2751, 0.0, 0.0, 0.0, 2.0); // Порт
			}
			SendClientMessage(playerid, col_white, !""scm_info"[GPS] - Метка установлена.");
			is_gps_used {playerid} = 1;
			return 1;
		}
		case d_mp:
		{
			if(response)
			{
				if(listitem == 0)
				{
					show_dialog(playerid, d_mp_gun, DIALOG_STYLE_INPUT,""c_server"Выдача оружия", ""c_white"Используйте id оружия и патроны\nПример: {FF0000}31,500\n"c_white"Где {FF0000}31 m4 "c_white"а {FF0000}500 патроны", "Выдать", "Закрыть");
				}
				if(listitem == 1)
				{
					foreach(new i:streamed_players[playerid])
					{
						if(GetDistanceBetweenPlayers(playerid,i) < 100 && playerid != i)
						{
							set_health(i, 100.0);
							new _t_string[98];
							format(_t_string, 98, ""c_yellow"* S.INFO: Администратор %s[%d] пополнил вам уровень здоровья", PlayerInfo[playerid][name], playerid);
							SendClientMessage(i, col_gray,_t_string);
						}
					}
					set_health(playerid, 100.0);
				}
				if(listitem == 2)
				{
					foreach(new i:streamed_players[playerid])
					{
						if(GetDistanceBetweenPlayers(playerid,i) < 100 && playerid != i)
						{
							reset_player_weapon(i);
							new _t_string[98];
							format(_t_string, 98, ""c_yellow"* S.INFO: Администратор %s[%d] забрал у вас оружие", PlayerInfo[playerid][name], playerid);
							SendClientMessage(i, col_gray, _t_string);
						}
					}
				}
				if(listitem == 3)
				{
					foreach(new i:streamed_players[playerid])
					{
						if(GetDistanceBetweenPlayers(playerid,i) < 100 && playerid != i)
						{
							set_armour(i, 100.0);
							new _t_string[98];
							format(_t_string, 98, ""c_yellow"* S.INFO: Администратор %s[%d] выдал вам броню.", PlayerInfo[playerid][name], playerid);
							SendClientMessage(i, col_gray,_t_string);
						}
					}
					set_armour(playerid, 100.0);
				}
			}
		}
		case d_mp_gun:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return show_dialog(playerid, d_mp_gun, DIALOG_STYLE_INPUT,""c_server"Выдача оружия", ""c_white"Используйте id оружия и патроны\nПример: {FF0000}31,500\n"c_white"Где {FF0000}31 m4 "c_white"а {FF0000}500 патроны", "Выдать", "Закрыть");
			if(strfind(inputtext,",", true) == -1) return show_dialog(playerid, d_mp_gun, DIALOG_STYLE_INPUT,""c_server"Выдача оружия", ""c_white"Используйте id оружия и патроны\nПример: {FF0000}31,500\n"c_white"Где {FF0000}31 m4 "c_white"а {FF0000}500 патроны", "Выдать", "Закрыть");
			new razdel[2];
			sscanf(inputtext,"p<,>ii",razdel[0],razdel[1]);
			if(razdel[0] == 9 || razdel[0] == 26 || razdel[0] == 16 || razdel[0] == 27 || razdel[0] == 37 || razdel[0] == 38 ||
			razdel[0] == 36 || razdel[0] == 39 || razdel[0] == 44 || razdel[0] == 45) return SendClientMessage (playerid, col_gray,""c_orange_red"* "c_grey"Нельзя выдавать запрещенное оружие.");
			foreach(new i:streamed_players[playerid])
			{
				if(GetDistanceBetweenPlayers(playerid,i) < 100 && playerid != i)
				{
					give_weapon(i, razdel[0], razdel[1]);
					new _t_string[98];
					format(_t_string, 98, ""c_yellow"* S.INFO: Администратор %s[%d] выдал вам оружие.", PlayerInfo[playerid][name], playerid);
					SendClientMessage(i, col_gray, _t_string);
				}
			}
			give_weapon(playerid, razdel[0], razdel[1]);

			return 1;
		}
		case d_filling:
		{
			if(!response) return DeletePVar(playerid, "f_biz");
			switch(listitem)
			{
				case 0:
				{
					if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return DeletePVar(playerid, "f_biz"), SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Вы должны быть в машине.");


					filling_ptd[playerid][0] = CreatePlayerTextDraw(playerid, 236.666671, 337.000091, "LD_SPAC:white");
					PlayerTextDrawLetterSize(playerid, filling_ptd[playerid][0], 0.000000, 0.000000);
					PlayerTextDrawTextSize(playerid, filling_ptd[playerid][0], veh_info[GetPlayerVehicleID(playerid)-1][v_fuel]* 1.65, 12.740736);
					PlayerTextDrawAlignment(playerid, filling_ptd[playerid][0], 1);
					PlayerTextDrawColor(playerid, filling_ptd[playerid][0], 524379391);
					PlayerTextDrawSetShadow(playerid, filling_ptd[playerid][0], 0);
					PlayerTextDrawSetOutline(playerid, filling_ptd[playerid][0], 0);
					PlayerTextDrawBackgroundColor(playerid, filling_ptd[playerid][0], 255);
					PlayerTextDrawFont(playerid, filling_ptd[playerid][0], 4);
					PlayerTextDrawSetProportional(playerid, filling_ptd[playerid][0], 0);
					PlayerTextDrawSetShadow(playerid, filling_ptd[playerid][0], 0);

					filling_ptd[playerid][1] = CreatePlayerTextDraw(playerid, 319.166687, 321.185180, "PRICE_0$");
					PlayerTextDrawLetterSize(playerid, filling_ptd[playerid][1], 0.280833, 1.216295);
					PlayerTextDrawAlignment(playerid, filling_ptd[playerid][1], 2);
					PlayerTextDrawColor(playerid, filling_ptd[playerid][1], -1);
					PlayerTextDrawSetShadow(playerid, filling_ptd[playerid][1], 0);
					PlayerTextDrawSetOutline(playerid, filling_ptd[playerid][1], 0);
					PlayerTextDrawBackgroundColor(playerid, filling_ptd[playerid][1], 255);
					PlayerTextDrawFont(playerid, filling_ptd[playerid][1], 1);
					PlayerTextDrawSetProportional(playerid, filling_ptd[playerid][1], 1);
					PlayerTextDrawSetShadow(playerid, filling_ptd[playerid][1], 0);

					new ptd_text[16];
					format(ptd_text, 16, "FUEL %d/100", floatround(veh_info[GetPlayerVehicleID(playerid)-1][v_fuel]));
					filling_ptd[playerid][2] = CreatePlayerTextDraw(playerid, 318.750091, 337.259277, ptd_text);
					PlayerTextDrawLetterSize(playerid, filling_ptd[playerid][2], 0.280833, 1.216295);
					PlayerTextDrawAlignment(playerid, filling_ptd[playerid][2], 2);
					PlayerTextDrawColor(playerid, filling_ptd[playerid][2], -1);
					PlayerTextDrawSetShadow(playerid, filling_ptd[playerid][2], 0);
					PlayerTextDrawSetOutline(playerid, filling_ptd[playerid][2], 0);
					PlayerTextDrawBackgroundColor(playerid, filling_ptd[playerid][2], 255);
					PlayerTextDrawFont(playerid, filling_ptd[playerid][2], 1);
					PlayerTextDrawSetProportional(playerid, filling_ptd[playerid][2], 1);
					PlayerTextDrawSetShadow(playerid, filling_ptd[playerid][2], 0);

					for(new i = 0; i < 8; i ++)
					{
						if(i < 3)PlayerTextDrawShow(playerid, filling_ptd[playerid][i]);
						TextDrawShowForPlayer(playerid, filling_td[i]);
					}
					SelectTextDraw(playerid, 0xB0C4DEFF);
					toggle_controlable(playerid, false, false);
					return 1;
				}
				case 1:
				{

					format(global_string, sizeof(global_string),
					""c_white"Вы действитель желаете приобрести канистру?\n\nСтоимость покупки составляет "c_green"%d$",
					15 * b_info[GetPVarInt(playerid, "f_biz")][b_cost] + 50);
					show_dialog(playerid, d_filling_canister, DIALOG_STYLE_MSGBOX, ""c_server"Покупка канистры", global_string, "Купить", "Назад");

					return 1;
				}
			}

		}
		case d_filling_canister:
		{
			if(!response) return show_dialog(playerid, d_filling, DIALOG_STYLE_LIST, ""c_server"Заправочная станция", "Заправить транспорт\nКанистра", "Выбрать", "Закрыть");
			new b = GetPVarInt(playerid, "f_biz");
			if(PlayerInfo[playerid][money] < 15 * b_info[b][b_cost] + 50)
			{
				format(global_string, sizeof(global_string),
				""c_white"Вы действитель желаете приобрести канистру?\n\n"c_orange_red"* Стоимость покупки составляет %d$",
				15 * b_info[b][b_cost] + 50);
				show_dialog(playerid, d_filling_canister, DIALOG_STYLE_MSGBOX, ""c_server"Покупка канистры", global_string, "Купить", "Назад");
				return 1;
			}
			if(PlayerInfo[playerid][canister] >= 1)
			{
				show_dialog(playerid, d_filling, DIALOG_STYLE_LIST, ""c_server"Заправочная станция", "Заправить транспорт\nКанистра", "Выбрать", "Закрыть");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не можете унести более 1 канистры с бензином.");
				return 1;
			}
			give_money(playerid, -15 * b_info[b][b_cost] + 50);
			insert_money_log(playerid, INVALID_PLAYER_ID, -15 * b_info[b][b_cost] + 50, "канистра");

			b_info[b][b_product] -= 20;
			b_info[b][b_money] += 15 * b_info[b][b_cost] + 50;
			b_info[b][b_cash_today] += 15 * b_info[b][b_cost] + 50;

			PlayerInfo[playerid][canister] += 1;
			update_int_sql(playerid, "u_canister", PlayerInfo[playerid][canister]);

			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы приобрели канистру. Введите "c_green"/usecanister"c_white", чтобы использовать.");

			show_dialog(playerid, d_filling, DIALOG_STYLE_LIST, ""c_server"Заправочная станция", "Заправить транспорт\nКанистра", "Выбрать", "Закрыть");

		}
		case d_rd_end:
		{
			SelectTextDraw(playerid, 0xB0C4DEFF);
		}
		case d_dr_skin:
		{
			if(!response) return SelectTextDraw(playerid, 0xB0C4DEFF);
			if(listitem == 0)
			{
				new line_string[36];
				global_string[0] = EOS;
				strcat(global_string, ""c_server"Выберите слот одежды\n");
				for(new j = 0; j < 5; j ++)
				{
					if(PlayerInfo[playerid][temp_skin][j] == 0)
					{
						strcat(global_string, ""c_grey"-Пусто\n");
					}
					else
					{
						format(line_string, 36, ""c_white"Одежда | %d\n", PlayerInfo[playerid][temp_skin][j]);
						strcat(global_string, line_string);
					}
				}
				show_dialog(playerid, d_dr_skin, DIALOG_STYLE_LIST, ""c_server"Гардероб", global_string, "Выбрать", "Назад");
				return 1;
			}

			set_skin(playerid, dr_slot_model[playerid][4]);
			PlayerInfo[playerid][temp_skin][listitem -1] = dr_slot_model[playerid][4];

			new _query[126];
			format(_query, sizeof(_query), "UPDATE `users` SET `u_tempskin`='%d|%d|%d|%d|%d' WHERE `u_name` = '%s'",
			PlayerInfo[playerid][temp_skin][0], PlayerInfo[playerid][temp_skin][1], PlayerInfo[playerid][temp_skin][2],
			PlayerInfo[playerid][temp_skin][3], PlayerInfo[playerid][temp_skin][4], PlayerInfo[playerid][name]);
			mysql_tquery(sql_connection, _query);
			SelectTextDraw(playerid, 0xB0C4DEFF);

		}

		case d_referals_list:
		{
			if(response)
			{
				if(GetPVarInt(playerid, "ofm_list_page") ==  1)
				{
					DeletePVar(playerid, "ofm_list_page");
					DeletePVar(playerid, "ofm_list_rows");
					return 1;
				}
				else
				{
					new _text_string[128];
					format(_text_string, sizeof(_text_string), "SELECT `u_name` FROM `users` WHERE `u_referal`='%s'", PlayerInfo[playerid][name]);
					mysql_tquery(sql_connection, _text_string, "callback_referallist", "i", playerid);
					SetPVarInt(playerid, "ofm_list_page", GetPVarInt(playerid, "ofm_list_page")-1);
				}
			}
			else
			{
				if((GetPVarInt(playerid, "ofm_list_page")+ 1)* 20 >= GetPVarInt(playerid, "ofm_list_rows"))
				{
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы находитесь на последней странице списка рефералов.");
					new _text_string[128];
					format(_text_string, sizeof(_text_string), "SELECT `u_name` FROM `users` WHERE `u_referal`='%s'", PlayerInfo[playerid][name]);
					mysql_tquery(sql_connection, _text_string, "callback_referallist", "i", playerid);
					return 1;
				}
				new _text_string[128];
				format(_text_string, sizeof(_text_string), "SELECT `u_name` FROM `users` WHERE `u_referal`='%s'", PlayerInfo[playerid][name]);
				mysql_tquery(sql_connection, _text_string, "callback_referallist", "i", playerid);
				SetPVarInt(playerid, "ofm_list_page", GetPVarInt(playerid, "ofm_list_page")+ 1);
				return 1;
			}
		}
		case d_lmenu_fixcar:
		{
			if(!response) return ShowLeaderMenu(playerid);
			if(listitem == 0)
			{
				if(f_info[PlayerInfo[playerid][member] -1][f_money] < 1000)
				{
					SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"В банке организации недостаточно средств.");

					format(global_string, sizeof(global_string), ""c_white"Буксировка всего транспорта\t"c_green"2500$\n");
					new veh_point = 0;
					for(new vehicleid = 0; vehicleid < vehicle_count; vehicleid ++)
					{
						if(!IsValidVehicle(vehicleid + 1)) continue;
						if(veh_info[vehicleid][v_type] != vehicle_type_server || veh_info[vehicleid][v_owner] != PlayerInfo[playerid][member]) continue;

						veh_point ++;
						new line_string[62];
						format(line_string, sizeof(line_string), ""c_white"%d. %s\t"c_green"300$\n", veh_point, vehicle_name[veh_info[vehicleid][v_model] -400]);
						strcat(global_string, line_string);
						show_dialog(playerid, d_lmenu_fixcar, DIALOG_STYLE_TABLIST, ""c_server"Буксировка транспорта", global_string, "Выбрать", "Назад");
					}
					return 1;
				}
				for(new vehicleid = 0; vehicleid < vehicle_count; vehicleid ++)
				{
					if(!IsValidVehicle(vehicleid + 1)) continue;
					if(veh_info[vehicleid][v_type] != vehicle_type_server || veh_info[vehicleid][v_owner] != PlayerInfo[playerid][member]) continue;
					if(is_vehicle_occupied(vehicleid + 1)!= -1) continue;

					SetVehicleToRespawn(vehicleid + 1);
				}
				SendClientMessage(playerid, col_gray, "* Весь незанятый транспорт был отбуксирован.");
				ShowLeaderMenu(playerid);

				f_info[PlayerInfo[playerid][member] -1][f_money] -= 1000;
				update_gdorm_text(PlayerInfo[playerid][member]);
			}
			if(f_info[PlayerInfo[playerid][member] -1][f_money] < 100) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"В банке организации недостаточно средств.");
			new veh_point = 0;
			for(new vehicleid = 0; vehicleid < vehicle_count; vehicleid ++)
			{
				if(!IsValidVehicle(vehicleid + 1)) continue;
				if(veh_info[vehicleid][v_type] != vehicle_type_server || veh_info[vehicleid][v_owner] != PlayerInfo[playerid][member]) continue;
				veh_point ++;


				if(listitem == veh_point)
				{
					if(is_vehicle_occupied(vehicleid + 1)!= -1) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Транспорт используется.");
					SetVehicleToRespawn(vehicleid + 1);
					SendClientMessage(playerid, col_gray, "* Транспорт отремонтирован и отбуксирован к месту стоянки.");
					f_info[PlayerInfo[playerid][member] -1][f_money] -= 100;
					update_gdorm_text(PlayerInfo[playerid][member]);
					ShowLeaderMenu(playerid);
					return 1;
				}
			}
		}
		case d_training_centr:
		{
			if(!response) return 1;

			if(listitem == 0)
			{
				if(PlayerInfo[playerid][money] < 2500) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У вас недостаточно денежных средств.");
				set_pos(playerid, 978.6815, -29.9175, 1125.9558, 272.2665, 0, playerid);

				give_money(playerid, -2500);
				insert_money_log(playerid, INVALID_PLAYER_ID, -2500, "тренировка");

				player_practice_step_timer[playerid] = SetTimerEx("practice_next_step", 5000, 0, "ii", playerid, true);

				player_practice {playerid} = 2;
				player_practice_timer[playerid] = 300;

				new object_cell = random(7);
				player_practice_object[playerid] = CreatePlayerObject(playerid, practice_objects_model[random(8)], practice_objects_pos[GetPracticeStep(playerid)][object_cell][0],
																						practice_objects_pos[GetPracticeStep(playerid)][object_cell][1],
																						practice_objects_pos[GetPracticeStep(playerid)][object_cell][2],
																						practice_objects_pos[GetPracticeStep(playerid)][object_cell][3],
																						practice_objects_pos[GetPracticeStep(playerid)][object_cell][4],
																						practice_objects_pos[GetPracticeStep(playerid)][object_cell][5],
																						150.0);


				SendClientMessage(playerid, col_white, ""c_green"* "c_white"Чтобы покинуть тренировочный центр используйте "c_green"/texit"c_white".");
				for(new i = 0; i < 12; i ++)
				{
					duel_guns[playerid][i][0] = p_t_info[playerid][p_gun_slot][i];
					duel_guns[playerid][i][1] = p_t_info[playerid][p_gun_ammo][i];

				}
				ResetPlayerWeapons(playerid);

				give_weapon(playerid, 24, 75);
				give_weapon(playerid, 25, 75);
				give_weapon(playerid, 31, 250);

			}
			else if(listitem == 1)
			{
				show_dialog(playerid, d_duel_invite, DIALOG_STYLE_INPUT, ""c_server"Дуэли", ""c_white"Введите ID игрока, которого желаете вызвать на дуэль:", "Принять", "Назад");
			}
		}
		case d_duel_invite:
		{
			if(!response) return show_dialog(playerid, d_training_centr, DIALOG_STYLE_LIST, ""c_server"Тренировочный комплекс", "Тренировка навыков стрельбы\t"c_green"2500$\n"c_white"Дуэли", "Выбрать", "Закрыть");
			new targetid;
			if(sscanf(inputtext, "u", targetid)) return show_dialog(playerid, d_duel_invite, DIALOG_STYLE_INPUT, ""c_server"Дуэли", ""c_grey"* Введёт некорректный ID игрока.\n\n"c_white"Введите ID игрока, которого желаете вызвать на дуэль:\n\n", "Принять", "Назад");
			if(!IsPlayerConnected(targetid)|| p_t_info[targetid][p_logged] == false || targetid == playerid) return show_dialog(playerid, d_duel_invite, DIALOG_STYLE_INPUT, ""c_server"Дуэли", ""c_grey"* Игрок не найден.\n\n"c_white"Введите ID игрока, которого желаете вызвать на дуэль:", "Принять", "Назад");

			if(!IsPlayerInRangeOfPoint(playerid, 5, p_t_info[targetid][p_pos][0], p_t_info[targetid][p_pos][1], p_t_info[targetid][p_pos][2]) || GetPlayerVirtualWorld(targetid)!= GetPlayerVirtualWorld(playerid)) return show_dialog(playerid, d_duel_invite, DIALOG_STYLE_INPUT, ""c_server"Дуэли", ""c_grey"* Игрок слишком далеко.\n\n"c_white"Введите ID игрока, которого желаете вызвать на дуэль:", "Принять", "Назад");
			if(GetPVarInt(targetid, "duel_price")!= 0) return show_dialog(playerid, d_duel_invite, DIALOG_STYLE_INPUT, ""c_server"Дуэли", ""c_grey"* Данный игрок уже имеет приглашение.\n\n"c_white"Введите ID игрока, которого желаете вызвать на дуэль:", "Принять", "Назад");


			SetPVarInt(targetid, "duel_id", playerid);
			SetPVarInt(playerid, "duel_id", targetid);
			show_dialog(playerid, d_duel_invite_money, DIALOG_STYLE_INPUT, ""c_server"Дуэли", ""c_white"Введите сумму, на которую желаете предложить дуэль:", "Принять", "Назад");

		}
		case d_duel_invite_money:
		{
			if(!response) return show_dialog(playerid, d_duel_invite, DIALOG_STYLE_INPUT, ""c_server"Дуэли", ""c_white"Введите ID игрока, которого желаете вызвать на дуэль:", "Принять", "Назад");
			new money_count = strval(inputtext);
			if(money_count < 1 || money_count > 100000) return show_dialog(playerid, d_duel_invite_money, DIALOG_STYLE_INPUT, ""c_server"Дуэли", ""c_grey"* Сумма должна быть от 1$ до 100.000$\n\n"c_white"Введите сумму, на которую желаете предложить дуэль:", "Принять", "Назад");
			if(PlayerInfo[playerid][money] < money_count) return show_dialog(playerid, d_duel_invite_money, DIALOG_STYLE_INPUT, ""c_server"Дуэли", ""c_grey"* У Вас нет такого количества средств.\n\n"c_white"Введите сумму, на которую желаете предложить дуэль:", "Принять", "Назад");
			new targetid = GetPVarInt(playerid, "duel_id");
			SetPVarInt(targetid, "duel_price", money_count);

			SetPVarInt(playerid, "duel_inv", 1);

			new _dialog_string[144];
			format(_dialog_string,sizeof(_dialog_string),""c_green"* "c_white"Вы предложили "c_green"%s "c_white"дуэль на "c_green"%d$", PlayerInfo[targetid][name], money_count);
			SendClientMessage(playerid, col_white, _dialog_string);

			format(_dialog_string, sizeof(_dialog_string),""c_white"%s вызывает Вас на дуэль на %d$.\n\n"c_grey"* Вы согласны на дуэль?", PlayerInfo[playerid][name], money_count);
			show_dialog(targetid, d_accept_duel, DIALOG_STYLE_MSGBOX, ""c_server"Дуэль",_dialog_string, "Да", "Нет");
		}
		case d_accept_duel:
		{
			new opponent_id = GetPVarInt(playerid, "duel_id");
			if(!response)
			{
				DeletePVar(opponent_id, "duel_inv");
				DeletePVar(playerid, "duel_price");
				DeletePVar(opponent_id, "duel_id");
				return DeletePVar(playerid, "duel_id");
			}
			if(PlayerInfo[playerid][money] < GetPVarInt(playerid, "duel_price"))
			{
				DeletePVar(opponent_id, "duel_inv");
				SendClientMessage(playerid, col_gray, "* У Вас недостаточно средств для принятия вызова.");
				DeletePVar(playerid, "duel_price");
				DeletePVar(opponent_id, "duel_id");
				return DeletePVar(playerid, "duel_id");
			}
			if(PlayerInfo[opponent_id][money] < GetPVarInt(playerid, "duel_price"))
			{
				DeletePVar(opponent_id, "duel_inv");
				SendClientMessage(opponent_id, col_gray, "* У Вас недостаточно средств для дуэли.");
				SendClientMessage(playerid, col_gray, "* У игрока недостаточно средств для дуэли.");

				DeletePVar(playerid, "duel_price");
				DeletePVar(opponent_id, "duel_id");
				return DeletePVar(playerid, "duel_id");
			}
			if(GetPVarInt(opponent_id, "duel_inv") ==  0)
			{
				DeletePVar(opponent_id, "duel_inv");
				SendClientMessage(playerid, col_gray, "* Игрок уже покинул игру.");
				DeletePVar(playerid, "duel_price");
				DeletePVar(opponent_id, "duel_id");
				return DeletePVar(playerid, "duel_id");
			}

			DeletePVar(opponent_id, "duel_inv");

			DeletePVar(playerid, "duel_id");
			DeletePVar(opponent_id, "duel_id");



			duel_opponent[playerid] = opponent_id;
			duel_opponent[opponent_id] = playerid;
			duel_price[playerid] = GetPVarInt(playerid, "duel_price");
			duel_price[opponent_id] = GetPVarInt(playerid, "duel_price");

			give_money(playerid, -duel_price[playerid]);
			give_money(duel_opponent[playerid], -duel_price[playerid]);
			insert_money_log(playerid, INVALID_PLAYER_ID, duel_price[playerid], "дуэль ставка");
			insert_money_log(duel_opponent[playerid], INVALID_PLAYER_ID, duel_price[playerid], "дуэль ставка");

			for(new i = 0; i < 12; i ++)
			{
				duel_guns[playerid][i][0] = p_t_info[playerid][p_gun_slot][i];
				duel_guns[playerid][i][1] = p_t_info[playerid][p_gun_ammo][i];

			}
			ResetPlayerWeapons(playerid);




			give_weapon(playerid, 24, 900);
			give_weapon(playerid, 25, 900);
			give_weapon(playerid, 31, 900);

			give_weapon(opponent_id, 24, 900);
			give_weapon(opponent_id, 25, 900);
			give_weapon(opponent_id, 31, 900);


			DeletePVar(playerid, "duel_price");
			set_pos(playerid, 883.3180, 596.6877, 1151.2711, 277.4071, 1, playerid);
			set_pos(opponent_id, 914.4659, 597.5054, 1151.2711, 88.0449, 1, playerid);
			set_health(playerid, 100);
			set_health(opponent_id, 100);
		}
		case d_offadmin:
		{
			if(response)
			{
				if(GetPVarInt(playerid, "ofm_list_page") ==  1)
				{
					DeletePVar(playerid, "ofm_list_page");
					DeletePVar(playerid, "ofm_list_rows");
					return 1;
				}
				else
				{
					mysql_tquery(sql_connection, "SELECT * FROM `users_admins` WHERE 1", "offadmins_callback", "i", playerid);
					SetPVarInt(playerid, "ofm_list_page", GetPVarInt(playerid, "ofm_list_page")-1);
				}
			}
			else
			{
				if((GetPVarInt(playerid, "ofm_list_page")+ 1)* 20 -19 >= GetPVarInt(playerid, "ofm_list_rows"))
				{
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы находитесь на последней странице списка администрации.");
					mysql_tquery(sql_connection, "SELECT * FROM `users_admins` WHERE 1", "offadmins_callback", "i", playerid);
					return 1;
				}
				mysql_tquery(sql_connection, "SELECT * FROM `users_admins` WHERE 1", "offadmins_callback", "i", playerid);
				SetPVarInt(playerid, "ofm_list_page", GetPVarInt(playerid, "ofm_list_page")+ 1);
				return 1;
			}
		}
		case d_mw_list:
		{
			if(!response) return 1;

			new count_business = 0;


			global_string[0] = EOS;
			strcat(global_string, ""c_white"");
			new line_string[92];
			for(new b = 0; b < b_count; b ++)
			{
				if(b_info[b][b_mafia] != PlayerInfo[playerid][member]) continue;
				if(count_business <= 40)
				{
					count_business ++;
					continue;
				}
				format(line_string, sizeof(line_string), "%i. %s\n", count_business + 1, b_info[b][b_name]);
				strcat(global_string, line_string);
				count_business ++;
			}
			show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Бизнесы мафии", global_string, "Закрыть", "");
		}
		case d_capture_freeze:
		{
			if(!response) return 1;

			global_string[0] = EOS;


			if(capture_gang_freezed[listitem] == 0)capture_gang_freezed[listitem] = 1;
			else capture_gang_freezed[listitem] = 0;


			for(new j = 0; j < 5; j ++)
			{
				new line_string[98];
				if(capture_gang_freezed[j] == 0)format(line_string, sizeof(line_string), ""c_white"%s\t"c_green"Разморожено\n", f_info[j + 17][f_name]);
				else format(line_string, sizeof(line_string), ""c_white"%s\t"c_orange_red"Заморожено\n", f_info[j + 17][f_name]);
				strcat(global_string, line_string);
			}
			show_dialog(playerid, d_capture_freeze, DIALOG_STYLE_TABLIST, ""c_server"Статусы заморозки", global_string, "Изменить", "Закрыть");

			new _sql_string[112];
			format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '12' LIMIT 1", capture_gang_freezed[0]);
			mysql_tquery(sql_connection, _sql_string);
			format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '13' LIMIT 1", capture_gang_freezed[1]);
			mysql_tquery(sql_connection, _sql_string);
			format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '14' LIMIT 1", capture_gang_freezed[2]);
			mysql_tquery(sql_connection, _sql_string);
			format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '15' LIMIT 1", capture_gang_freezed[3]);
			mysql_tquery(sql_connection, _sql_string);
			format(_sql_string, 112, "UPDATE `server_variables` SET `var_count` = '%d' WHERE `var_id` = '16' LIMIT 1", capture_gang_freezed[4]);
			mysql_tquery(sql_connection, _sql_string);



			return 1;
		}

		case d_biz_sell_accept:
		{
			if(seller_id[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Продавец покинул игру.");
			if(!response)
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"Игрок отказался от покупки контроля бизнеса.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				sell_item[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			if(mw_biz == sell_item[seller_id[playerid]])
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"Сейчас ведётся война за данный бизнес.");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Сейчас ведётся война за данный бизнес.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				sell_item[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			if(PlayerInfo[playerid][money] < sell_price[seller_id[playerid]])
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"У игрока недостаточно денег для приобретения.");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас недостаточно денег для приобретения.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				sell_item[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			if(PlayerInfo[seller_id[playerid]][member] != b_info[sell_item[seller_id[playerid]]][b_mafia])
			{
				SendClientMessage(seller_id[playerid], col_gray, ""c_orange_red"* "c_grey"Данный бизнес уже не подконтролен Вам.");
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Данный бизнес уже не подконтролен игроку.");
				buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
				sell_price[seller_id[playerid]] = -1;
				sell_item[seller_id[playerid]] = -1;
				seller_id[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
			b_info[sell_item[seller_id[playerid]]][b_mafia] = PlayerInfo[playerid][member];

			new _text_string[128];
			format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы купили контроль над бизнесом "c_green"%s"c_white" за "c_green"%d$"c_white".", PlayerInfo[seller_id[playerid]][name], sell_price[seller_id[playerid]]);
			SendClientMessage(playerid, col_white, _text_string);
			format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы продали контроль над бизнесом "c_green"%s"c_white" за "c_green"%d$"c_white".", PlayerInfo[playerid][name], sell_price[seller_id[playerid]]);
			SendClientMessage(seller_id[playerid], col_white, _text_string);

			give_money(playerid,-sell_price[seller_id[playerid]]);
			give_money(seller_id[playerid], sell_price[seller_id[playerid]]);
			insert_money_log(seller_id[playerid], playerid, sell_price[seller_id[playerid]], "sellbiz");



			new query_string[228];
			if(b_info[sell_item[seller_id[playerid]]][b_type] == bizz_type_shop || b_info[sell_item[seller_id[playerid]]][b_type] == bizz_type_pharm || b_info[sell_item[seller_id[playerid]]][b_type] == bizz_type_electronic || b_info[sell_item[seller_id[playerid]]][b_type] == bizz_type_clothes || b_info[sell_item[seller_id[playerid]]][b_type] == bizz_type_carshop || b_info[sell_item[seller_id[playerid]]][b_type] == bizz_type_cafe || b_info[sell_item[seller_id[playerid]]][b_type] == bizz_type_club || b_info[sell_item[seller_id[playerid]]][b_type] == bizz_type_bar)
			{
				format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
				b_types[b_info[sell_item[seller_id[playerid]]][b_type]], b_info[sell_item[seller_id[playerid]]][b_id], b_info[sell_item[seller_id[playerid]]][b_owner_name], b_info[sell_item[seller_id[playerid]]][b_price], mafia_owner_name[b_info[sell_item[seller_id[playerid]]][b_mafia] -1],(! b_info[sell_item[seller_id[playerid]]][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
				UpdateDynamic3DTextLabelText(b_info[sell_item[seller_id[playerid]]][b_label], -1, query_string);
			}

			else if(b_info[sell_item[seller_id[playerid]]][b_type] == bizz_type_gas)
			{
				format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль:"c_white" %s\n"c_grey"Состояние: "c_white"%s",
				b_types[b_info[sell_item[seller_id[playerid]]][b_type]], b_info[sell_item[seller_id[playerid]]][b_id], b_info[sell_item[seller_id[playerid]]][b_owner_name], b_info[sell_item[seller_id[playerid]]][b_price], mafia_owner_name[b_info[sell_item[seller_id[playerid]]][b_mafia] -1],(! b_info[seller_id[playerid]][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
				UpdateDynamic3DTextLabelText(b_info[sell_item[seller_id[playerid]]][b_label], -1, query_string);
			}
			else if(b_info[sell_item[seller_id[playerid]]][b_type] == bizz_type_ammo)
			{
				format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
				b_types[b_info[sell_item[seller_id[playerid]]][b_type]], b_info[sell_item[seller_id[playerid]]][b_id], b_info[sell_item[seller_id[playerid]]][b_owner_name], b_info[sell_item[seller_id[playerid]]][b_price], family_info[b_info[sell_item[seller_id[playerid]]][b_family] -1][fam_name],(! b_info[sell_item[seller_id[playerid]]][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
				UpdateDynamic3DTextLabelText(b_info[sell_item[seller_id[playerid]]][b_label], -1, query_string);
			}
			else if(b_info[sell_item[seller_id[playerid]]][b_type] == bizz_type_tune)
			{
				format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_white"Владелец: %s\nКонтроль: %s\nСостояние: %s",
				b_types[b_info[sell_item[seller_id[playerid]]][b_type]], b_info[sell_item[seller_id[playerid]]][b_id], b_info[sell_item[seller_id[playerid]]][b_owner_name], mafia_owner_name[b_info[sell_item[seller_id[playerid]]][b_mafia] -1],(! b_info[sell_item[seller_id[playerid]]][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
				UpdateDynamic3DTextLabelText(b_info[sell_item[seller_id[playerid]]][b_label], -1, query_string);
			}


			format(query_string, 118,"UPDATE `businesses` SET `b_mafia` = '%d' WHERE `b_id` = '%d' LIMIT 1", b_info[sell_item[seller_id[playerid]]][b_mafia], b_info[sell_item[seller_id[playerid]]][b_id]);
			mysql_tquery(sql_connection, query_string);


			buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
			sell_price[seller_id[playerid]] = -1;
			sell_item[seller_id[playerid]] = -1;
			seller_id[playerid] = INVALID_PLAYER_ID;


		}
		case d_fbi_cover:
		{
			if(!response) return 1;
			new dialog_string[max_rank * 6];
			switch(listitem)
			{
				case 0..7:
				{
					for(new j = 0; j < max_rank; j ++)
					{
						if(f_skin[listitem + 17][PlayerInfo[playerid][gender]][j] == 1) break;
						new line_string[7];
						format(line_string, 7, "%d\n", f_skin[listitem + 17][PlayerInfo[playerid][gender]][j]);
						strcat(dialog_string, line_string);
					}
				}
				case 8:
				{
					for(new j = 0; j < max_rank; j ++)
					{
						if(f_skin[3][PlayerInfo[playerid][gender]][j] == 1) break;
						new line_string[7];
						format(line_string, 7, "%d\n", f_skin[3][PlayerInfo[playerid][gender]][j]);
						strcat(dialog_string, line_string);
					}
				}
				case 9:
				{
					for(new j = 0; j < max_rank; j ++)
					{
						if(f_skin[7][PlayerInfo[playerid][gender]][j] == 1) break;
						new line_string[7];
						format(line_string, 7, "%d\n", f_skin[3][PlayerInfo[playerid][gender]][j]);
						strcat(dialog_string, line_string);
					}
				}
			}
			SetPVarInt(playerid, "cover_listitem", listitem);
			show_dialog(playerid, d_fbi_cover_skin, DIALOG_STYLE_LIST, ""c_server"Выбор одежды", dialog_string, "Выбрать", "Отмена");
		}
		case d_fbi_cover_skin:
		{
			if(!response) return DeletePVar(playerid, "cover_listitem");

			new fraction_cell = GetPVarInt(playerid, "cover_listitem");

			DeletePVar(playerid, "cover_listitem");
			switch(fraction_cell)
			{
				case 0..7:
				{
					SetPlayerSkin(playerid, f_skin[fraction_cell + 17][PlayerInfo[playerid][gender]][listitem]);
					SetPlayerColor(playerid, f_info[fraction_cell + 17][f_radar_color]);

					is_fraction_duty {playerid} = 1;

				}
				case 8:
				{
					SetPlayerSkin(playerid, f_skin[3][PlayerInfo[playerid][gender]][listitem]);
					SetPlayerColor(playerid, f_info[3][f_radar_color]);

					is_fraction_duty {playerid} = 1;

				}
				case 9:
				{
					SetPlayerSkin(playerid, f_skin[7][PlayerInfo[playerid][gender]][listitem]);
					SetPlayerColor(playerid, f_info[7][f_radar_color]);

					is_fraction_duty {playerid} = 1;
				}
			}
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Маскировка успешно надета.");
		}
		case d_h_radio:
		{
			if(!response) return 1;
			if(h_info[PlayerInfo[playerid][house] -1][h_radio_status] == 0)show_dialog(playerid, d_h_radio_url, DIALOG_STYLE_INPUT, ""c_server"Аудио система", ""c_white"Введи URL-ссылку для начала произведения аудио", "Принять", "Назад");
			else
			{
				h_info[PlayerInfo[playerid][house] -1][h_radio_status] = 0;

				new sql_str[98];
				format(sql_str, sizeof(sql_str), "UPDATE `houses` SET `h_radio_status`='%d' WHERE `h_id`='%d' LIMIT 1",
				h_info[PlayerInfo[playerid][house] -1][h_radio_status], PlayerInfo[playerid][house]);
				mysql_tquery(sql_connection, sql_str);

				SendClientMessage(playerid, col_succes, "Аудио-система успешно выключена.");
				foreach(new i:streamed_players[playerid])
				{
					StopAudioStreamForPlayer(i);
				}
				StopAudioStreamForPlayer(playerid);

			}
			return 1;
		}
		case d_h_radio_url:
		{
			if(!response)
			{
				if(h_info[PlayerInfo[playerid][house] -1][h_radio_status] == 0)show_dialog(playerid, d_h_radio, DIALOG_STYLE_LIST, ""c_server"Аудио система", ""c_server"1."c_green" Включить аудио", "Выбрать", "Закрыть");
				else show_dialog(playerid, d_h_radio, DIALOG_STYLE_LIST, ""c_server"Аудио система", ""c_server"1."c_orange_red" Выключить аудио", "Выбрать", "Закрыть");
				return 1;
			}
			format(h_info[PlayerInfo[playerid][house] -1][h_radio_url], 128, "%s", inputtext);

			foreach(new i:streamed_players[playerid])
			{
				PlayAudioStreamForPlayer(i, h_info[PlayerInfo[playerid][house] -1][h_radio_url]);
			}
			PlayAudioStreamForPlayer(playerid, h_info[PlayerInfo[playerid][house] -1][h_radio_url]);
			SendClientMessage(playerid, col_succes, "Аудио-система успешно включена.");

			h_info[PlayerInfo[playerid][house] -1][h_radio_status] = 1;
			new sql_str[98 + 128];
			mysql_format(sql_connection, sql_str, sizeof(sql_str), "UPDATE `houses` SET `h_radio_status`='%d',`h_radio_url`='%e' WHERE `h_id`='%d' LIMIT 1",
			h_info[PlayerInfo[playerid][house] -1][h_radio_status], h_info[PlayerInfo[playerid][house] -1][h_radio_url], PlayerInfo[playerid][house]);
			mysql_tquery(sql_connection, sql_str);
			return 1;
		}
		case d_ffind:
		{
			if(!response) return 1;
			new fraction_id;
			switch(PlayerInfo[playerid][rank])
			{
				case 6:
				{
					switch(listitem)
					{
						case 0..2:fraction_id = listitem + 15;
					}
				}
				case 7:
				{
					switch(listitem)
					{
						case 0..3:fraction_id = listitem + 4;
					}
				}
				case 8:
				{
					switch(listitem)
					{
						case 0:fraction_id = listitem + 8;
					}
				}
			}
			global_string[0] = EOS;

			new line_string[92],
				fr_count;

			foreach(new i: logged_players)
			{
				if(PlayerInfo[i][member] != fraction_id) continue;
				fr_count ++;
			}
			format(line_string, sizeof(line_string), ""c_white"Всего онлайн: {cccc99}%d\nID\tУровень\tТелефон\tРанг\tВыговоры\tИмя игрока\n\n"c_white"", fr_count);
			strcat(global_string, line_string);

			foreach(new i: logged_players)
			{
				if(PlayerInfo[i][member] != fraction_id) continue;

				format(line_string, sizeof(line_string), "%d\t%d\t\t%d\t\t%d\t%d/3\t\t%s%s\n", i, PlayerInfo[i][level], PlayerInfo[i][number], PlayerInfo[i][rank], PlayerInfo[i][f_warning], PlayerInfo[i][name],
				(pl_afk_time[i] >= 2)?(""c_server"[AFK]"c_white""):(""));
				strcat(global_string, line_string);
			}
			show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Члены организации онлайн", global_string, "Закрыть", "");
		}
		case d_ssf:
		{
			if(!response) return 1;
			switch(PlayerInfo[playerid][rank])
			{
				case 6:
				{
					switch(listitem)
					{
						case 0..2:player_ssf {playerid} = listitem + 15;
						case 3: player_ssf {playerid} = 0;
					}
				}
				case 7:
				{
					switch(listitem)
					{
						case 0..3:player_ssf {playerid} = listitem + 4;
						case 4:player_ssf {playerid} = 0;
					}
				}
				case 8:
				{
					switch(listitem)
					{
						case 0:player_ssf {playerid} = listitem + 8;
						case 1:player_ssf {playerid} = 0;
					}
				}
			}
			SendClientMessage(playerid, col_succes, "Вы успешно подключились к рации организации. Используйте /sf для связи.");
		}
		case d_giveleader:
		{
			if(!response) return 1;
			new targetid = GetPVarInt(playerid, "pl_giveleader_id");
			DeletePVar(playerid, "pl_giveleader_id");
			switch(PlayerInfo[playerid][rank])
			{
				case 6:
				{
					switch(listitem)
					{
						case 0..2:
						{
							if(PlayerInfo[targetid][leader] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок уже обладает правами лидера.");
							if(PlayerInfo[targetid][member] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок уже состоит в какой-то организации.");
							PlayerInfo[targetid][member] = listitem + 15;
							PlayerInfo[targetid][leader] = listitem + 15;
							PlayerInfo[targetid][rank] = f_info[listitem + 14][f_rank_settings][0];
							PlayerInfo[targetid][org_skin] = f_skin[listitem + 14][PlayerInfo[targetid][gender]][0];
							update_int_sql(targetid, "u_org_skin", PlayerInfo[targetid][org_skin]);

							new query_string[178];

							if(PlayerInfo[targetid][admin] != 0)
							{
								format(f_info[listitem + 14][f_leader_name], MAX_PLAYER_NAME, "%s", PlayerInfo[targetid][name]);
								format(query_string, 100, "UPDATE `fractions` SET `f_leader_name` = '%s' WHERE `f_id` = '%d' LIMIT 1",
								PlayerInfo[targetid][name], listitem + 15);
							}

							PlayerInfo[targetid][f_warning] = 0;
							update_int_sql(targetid, "u_f_warning", PlayerInfo[targetid][f_warning]);
							PlayerInfo[targetid][spawnchange] = 2;
							update_int_sql(targetid, "u_spawnchange", PlayerInfo[targetid][spawnchange]);

							mysql_tquery(sql_connection, query_string, "", "");

							format(query_string,sizeof(query_string),"UPDATE `users` SET `u_member` = '%d', `u_leader` = '%d',\
							`u_rank` = '%d', `u_fraction_date` = NOW() WHERE `u_id` = '%d' LIMIT 1",
							PlayerInfo[targetid][member], PlayerInfo[targetid][leader], PlayerInfo[targetid][rank], PlayerInfo[targetid][id]);
							mysql_tquery(sql_connection, query_string, "", "");
							SetPlayerColor(targetid, f_info[PlayerInfo[targetid][member] -1][f_radar_color]);

							new scm_string[144];
							format(scm_string, sizeof scm_string, "Вы успешно назначили %s на должность лидера организации \""c_white"%s"c_grey"\"", PlayerInfo[targetid][name], f_info[PlayerInfo[targetid][member] -1][f_name]);
							SendClientMessage(playerid, col_succes, scm_string);
							format(scm_string, sizeof scm_string, "Министр %s назначил Вас на должность лидера организации \""c_white"%s"c_grey"\"", PlayerInfo[playerid][name], f_info[PlayerInfo[targetid][member] -1][f_name]);
							SendClientMessage(targetid, col_succes, scm_string);
						}
						case 3:
						{
							if(PlayerInfo[targetid][leader] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не является лидером.");
							if(PlayerInfo[targetid][leader] != 0 && ! medic_player(targetid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не подчиняется Вам.");

							new scm_string[144];
							format(scm_string, sizeof scm_string, "Вы успешно сняли %s с должности лидера организации \""c_white"%s"c_grey"\"", PlayerInfo[targetid][name], f_info[PlayerInfo[targetid][member] -1][f_name]);
							SendClientMessage(playerid, col_succes, scm_string);
							format(scm_string, sizeof scm_string, "Министр %s снял Вас с должности лидера организации \""c_white"%s"c_grey"\"", PlayerInfo[playerid][name], f_info[PlayerInfo[targetid][member] -1][f_name]);
							SendClientMessage(targetid, col_succes, scm_string);

							new query_string[268];

							mysql_format(sql_connection, query_string,sizeof(query_string),
							"INSERT INTO `users_jobinfo` (`ji_uid`,`ji_date_invite`,`ji_date_uninvite`,`ji_reason`,`ji_fraction`,`ji_fwarnings`)SELECT `u_id`, `u_fraction_date`, NOW(), 'снят','%d','%d' FROM `users` WHERE `u_id` = '%d'",
							PlayerInfo[targetid][member], PlayerInfo[targetid][id]);
							mysql_tquery(sql_connection, query_string, "", "");


							PlayerInfo[targetid][member] = 0;
							PlayerInfo[targetid][leader] = 0;
							PlayerInfo[targetid][rank] = 0;

							format(query_string, 138, "UPDATE `users` SET `u_member` = '0', `u_leader` = '0',\
							`u_rank` = '0'	WHERE `u_id` = '%d' LIMIT 1",
							PlayerInfo[targetid][id]);
							mysql_tquery(sql_connection, query_string, "", "");


							SetPlayerSkin(targetid, PlayerInfo[targetid][skin]);
							SetPlayerColor(targetid, 0xFFFFFFFF); // col_white
						}
					}
				}
				case 7:
				{
					switch(listitem)
					{
						case 0..3:
						{
							if(PlayerInfo[targetid][leader] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок уже обладает правами лидера.");
							if(PlayerInfo[targetid][member] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок уже состоит в какой-то организации.");
							PlayerInfo[targetid][member] = listitem + 4;
							PlayerInfo[targetid][leader] = listitem + 4;
							PlayerInfo[targetid][rank] = f_info[listitem + 3][f_rank_settings][0];
							PlayerInfo[targetid][org_skin] = f_skin[listitem + 3][PlayerInfo[targetid][gender]][0];
							update_int_sql(targetid, "u_org_skin", PlayerInfo[targetid][org_skin]);

							new query_string[178];

							if(PlayerInfo[targetid][admin] != 0)
							{
								format(f_info[listitem + 14][f_leader_name], MAX_PLAYER_NAME, "%s", PlayerInfo[targetid][name]);
								format(query_string, 100, "UPDATE `fractions` SET `f_leader_name` = '%s' WHERE `f_id` = '%d' LIMIT 1",
								PlayerInfo[targetid][name], listitem + 4);
							}

							PlayerInfo[targetid][f_warning] = 0;
							update_int_sql(targetid, "u_f_warning", PlayerInfo[targetid][f_warning]);
							PlayerInfo[targetid][spawnchange] = 2;
							update_int_sql(targetid, "u_spawnchange", PlayerInfo[targetid][spawnchange]);

							mysql_tquery(sql_connection, query_string, "", "");

							format(query_string,sizeof(query_string),"UPDATE `users` SET `u_member` = '%d', `u_leader` = '%d',\
							`u_rank` = '%d', `u_fraction_date` = NOW() WHERE `u_id` = '%d' LIMIT 1",
							PlayerInfo[targetid][member], PlayerInfo[targetid][leader], PlayerInfo[targetid][rank], PlayerInfo[targetid][id]);
							mysql_tquery(sql_connection, query_string, "", "");
							SetPlayerColor(targetid, f_info[PlayerInfo[targetid][member] -1][f_radar_color]);

							new scm_string[144];
							format(scm_string, sizeof scm_string, "Вы успешно назначили %s на должность лидера организации \""c_white"%s"c_grey"\"", PlayerInfo[targetid][name], f_info[PlayerInfo[targetid][member] -1][f_name]);
							SendClientMessage(playerid, col_succes, scm_string);
							format(scm_string, sizeof scm_string, "Министр %s назначил Вас на должность лидера организации \""c_white"%s"c_grey"\"", PlayerInfo[playerid][name], f_info[PlayerInfo[targetid][member] -1][f_name]);
							SendClientMessage(targetid, col_succes, scm_string);
						}
						case 4:
						{
							if(PlayerInfo[targetid][leader] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не является лидером.");
							if(PlayerInfo[targetid][leader] != 0 && ! cop_player(targetid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не подчиняется Вам.");

							new scm_string[144];
							format(scm_string, sizeof scm_string, "Вы успешно сняли %s с должности лидера организации \""c_white"%s"c_grey"\"", PlayerInfo[targetid][name], f_info[PlayerInfo[targetid][member] -1][f_name]);
							SendClientMessage(playerid, col_succes, scm_string);
							format(scm_string, sizeof scm_string, "Министр %s снял Вас с должности лидера организации \""c_white"%s"c_grey"\"", PlayerInfo[playerid][name], f_info[PlayerInfo[targetid][member] -1][f_name]);
							SendClientMessage(targetid, col_succes, scm_string);

							new query_string[268];

							mysql_format(sql_connection, query_string,sizeof(query_string),
							"INSERT INTO `users_jobinfo` (`ji_uid`,`ji_date_invite`,`ji_date_uninvite`,`ji_reason`,`ji_fraction`,`ji_fwarnings`)SELECT `u_id`, `u_fraction_date`, NOW(), 'снят','%d','%d' FROM `users` WHERE `u_id` = '%d'",
							PlayerInfo[targetid][member], PlayerInfo[targetid][id]);
							mysql_tquery(sql_connection, query_string, "", "");


							PlayerInfo[targetid][member] = 0;
							PlayerInfo[targetid][leader] = 0;
							PlayerInfo[targetid][rank] = 0;

							format(query_string, 138, "UPDATE `users` SET `u_member` = '0', `u_leader` = '0',\
							`u_rank` = '0'	WHERE `u_id` = '%d' LIMIT 1",
							PlayerInfo[targetid][id]);
							mysql_tquery(sql_connection, query_string, "", "");


							SetPlayerSkin(targetid, PlayerInfo[targetid][skin]);
							SetPlayerColor(targetid, 0xFFFFFFFF); // col_white
						}
					}
				}
				case 8:
				{
					switch(listitem)
					{
						case 0:
						{
							if(PlayerInfo[targetid][leader] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок уже обладает правами лидера.");
							if(PlayerInfo[targetid][member] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок уже состоит в какой-то организации.");
							PlayerInfo[targetid][member] = listitem + 8;
							PlayerInfo[targetid][leader] = listitem + 8;
							PlayerInfo[targetid][rank] = f_info[listitem + 7][f_rank_settings][0];
							PlayerInfo[targetid][org_skin] = f_skin[listitem + 7][PlayerInfo[targetid][gender]][0];
							update_int_sql(targetid, "u_org_skin", PlayerInfo[targetid][org_skin]);

							new query_string[178];

							if(PlayerInfo[targetid][admin] != 0)
							{
								format(f_info[listitem + 14][f_leader_name], MAX_PLAYER_NAME, "%s", PlayerInfo[targetid][name]);
								format(query_string, 100, "UPDATE `fractions` SET `f_leader_name` = '%s' WHERE `f_id` = '%d' LIMIT 1",
								PlayerInfo[targetid][name], listitem + 8);
							}

							PlayerInfo[targetid][f_warning] = 0;
							update_int_sql(targetid, "u_f_warning", PlayerInfo[targetid][f_warning]);
							PlayerInfo[targetid][spawnchange] = 2;
							update_int_sql(targetid, "u_spawnchange", PlayerInfo[targetid][spawnchange]);

							mysql_tquery(sql_connection, query_string, "", "");

							format(query_string,sizeof(query_string),"UPDATE `users` SET `u_member` = '%d', `u_leader` = '%d',\
							`u_rank` = '%d', `u_fraction_date` = NOW() WHERE `u_id` = '%d' LIMIT 1",
							PlayerInfo[targetid][member], PlayerInfo[targetid][leader], PlayerInfo[targetid][rank], PlayerInfo[targetid][id]);
							mysql_tquery(sql_connection, query_string, "", "");
							SetPlayerColor(targetid, f_info[PlayerInfo[targetid][member] -1][f_radar_color]);

							new scm_string[144];
							format(scm_string, sizeof scm_string, "Вы успешно назначили %s на должность лидера организации \""c_white"%s"c_grey"\"", PlayerInfo[targetid][name], f_info[PlayerInfo[targetid][member] -1][f_name]);
							SendClientMessage(playerid, col_succes, scm_string);
							format(scm_string, sizeof scm_string, "Министр %s назначил Вас на должность лидера организации \""c_white"%s"c_grey"\"", PlayerInfo[playerid][name], f_info[PlayerInfo[targetid][member] -1][f_name]);
							SendClientMessage(targetid, col_succes, scm_string);
						}
						case 1:
						{
							if(PlayerInfo[targetid][leader] == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не является лидером.");
							if(PlayerInfo[targetid][leader] != 0 && ! army_player(targetid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок не подчиняется Вам.");

							new scm_string[144];
							format(scm_string, sizeof scm_string, "Вы успешно сняли %s с должности лидера организации \""c_white"%s"c_grey"\"", PlayerInfo[targetid][name], f_info[PlayerInfo[targetid][member] -1][f_name]);
							SendClientMessage(playerid, col_succes, scm_string);
							format(scm_string, sizeof scm_string, "Министр %s снял Вас с должности лидера организации \""c_white"%s"c_grey"\"", PlayerInfo[playerid][name], f_info[PlayerInfo[targetid][member] -1][f_name]);
							SendClientMessage(targetid, col_succes, scm_string);

							new query_string[268];

							mysql_format(sql_connection, query_string,sizeof(query_string),
							"INSERT INTO `users_jobinfo` (`ji_uid`,`ji_date_invite`,`ji_date_uninvite`,`ji_reason`,`ji_fraction`,`ji_fwarnings`)SELECT `u_id`, `u_fraction_date`, NOW(), 'снят','%d','%d' FROM `users` WHERE `u_id` = '%d'",
							PlayerInfo[targetid][member], PlayerInfo[targetid][id]);
							mysql_tquery(sql_connection, query_string, "", "");


							PlayerInfo[targetid][member] = 0;
							PlayerInfo[targetid][leader] = 0;
							PlayerInfo[targetid][rank] = 0;

							format(query_string, 138, "UPDATE `users` SET `u_member` = '0', `u_leader` = '0',\
							`u_rank` = '0'	WHERE `u_id` = '%d' LIMIT 1",
							PlayerInfo[targetid][id]);
							mysql_tquery(sql_connection, query_string, "", "");


							SetPlayerSkin(targetid, PlayerInfo[targetid][skin]);
							SetPlayerColor(targetid, 0xFFFFFFFF); // col_white
						}
					}
				}
			}
		}
  		case d_makeadmin:
        {
            if(!response) return DeletePVar(playerid, !"target_id");
            new targetid = GetPVarInt(playerid, !"target_id");
            DeletePVar(playerid, !"target_id");

            new tquery_string[128];
            format(tquery_string, sizeof(tquery_string), "SELECT `u_a_level` FROM `users_admins` WHERE `u_a_name`='%s' LIMIT 1",  PlayerInfo[targetid][name]);
            mysql_tquery(sql_connection, tquery_string, "makeadmin_callback", "iii", playerid, targetid, listitem);
            return 1;
        }
		case d_makeleader:
		{
			if(!response) return DeletePVar(playerid, !"target_id");

			new targetid = GetPVarInt(playerid, !"target_id");
			DeletePVar(playerid, !"target_id");

			new params[3];
			valstr(params, targetid);
			if(listitem == 0) return callcmd::unmakeleader(playerid, params);

			new text_string[144];
			format(text_string, sizeof(text_string), ""c_server"* A.INFO:"c_grey" %s[%d] назначил %s[%d] лидером организации \"%s\"", PlayerInfo[playerid][name], playerid, PlayerInfo[targetid][name], targetid, f_info[listitem -1][f_name]);
			foreach(new i: admin_players) SendClientMessage(i, col_gray, text_string);

			format(text_string, sizeof(text_string), ""scm_info"Администратор "c_server"%s"c_white" назначил Вас лидером организации \"%s\"", PlayerInfo[playerid][name], f_info[listitem -1][f_name]);
			SendClientMessage(targetid, col_white, text_string);

			PlayerInfo[targetid][member] = listitem;
			PlayerInfo[targetid][leader] = listitem;
			PlayerInfo[targetid][rank] = f_info[listitem -1][f_rank_settings][0];
			PlayerInfo[targetid][org_skin] = f_skin[listitem -1][PlayerInfo[targetid][gender]][0];
			update_int_sql(targetid, "u_org_skin", PlayerInfo[targetid][org_skin]);

			new query_string[178];

			if(PlayerInfo[targetid][admin] == 0)
			{
				format(f_info[listitem -1][f_leader_name], MAX_PLAYER_NAME, "%s", PlayerInfo[targetid][name]);

				format(query_string, 95, "UPDATE `fractions` SET `f_leader_name`='%s' WHERE `f_id`='%d' LIMIT 1", PlayerInfo[targetid][name], listitem + 1);
				mysql_query(sql_connection, query_string);
			}

			PlayerInfo[targetid][f_warning] = 0;
			update_int_sql(targetid, "u_f_warning", PlayerInfo[targetid][f_warning]);

			format(query_string, sizeof(query_string), "UPDATE `users` SET `u_member`='%d',`u_leader`='%d',`u_rank`='%d',`u_fraction_date`=NOW() WHERE `u_id`='%d' LIMIT 1", PlayerInfo[targetid][member], PlayerInfo[targetid][leader], PlayerInfo[targetid][rank], PlayerInfo[targetid][id]);
			mysql_query(sql_connection, query_string);

			SetPlayerColor(targetid, f_info[PlayerInfo[targetid][member] -1][f_radar_color]);
		}
		case d_questlist:
		{
			if(!response) return 1;
//			if(PlayerInfo[playerid][pLevel] > 3) return  SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Задания доступны только новичкам.");
			if(listitem == MAX_QUESTS)
			{
				new is_quest_taken = -1;
				for(new j = 0; j < MAX_QUESTS; j ++)
				{
					if(quest_status[playerid][j] != 2 && quest_status[playerid][j] != 1) continue;
					is_quest_taken = j;
					break;
				}
				if(is_quest_taken == -1) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"Вы не брали задание.");
				if(quest_status[playerid][is_quest_taken] == 2) return SendClientMessage(playerid, col_gray, !""c_orange_red"* "c_grey"Вы не можете отменить задание, которое ожидает сдачи.");
				quest_status[playerid][is_quest_taken] = 0;
				quest_progress[playerid][is_quest_taken] = 0;
				SendClientMessage(playerid, col_succes, !"Задание успешно отменено.");

				static const status_names[][] = {
				""c_orange_red"Не выполнен",
				""c_server"Выполняется",
				""c_green"Готово",
				""c_green"Выполнен"};

				new dialog_string [(64 + 26)* MAX_QUESTS + 42];
				for(new k = 0; k < MAX_QUESTS; k ++)
				{

					new line_string[64 + 26];
					format(line_string, sizeof(line_string), "%s\t%s\n", quest_info[k][q_name], status_names[quest_status[playerid][k]]);
					strcat(dialog_string, line_string);
				}
				strcat(dialog_string, ""c_orange_red"Отменить действующее задание");
				show_dialog(playerid, d_questlist, DIALOG_STYLE_TABLIST, ""c_server"Задания", dialog_string, "Выбрать", "Закрыть");

				update_quest_data(playerid);
				return 1;
			}
			if(quest_status[playerid][listitem] == 3)
			{
				static const status_names[][] = {
				""c_orange_red"Не выполнен",
				""c_server"Выполняется",
				""c_green"Готово",
				""c_green"Выполнен"};

				new dialog_string [(64 + 26)* MAX_QUESTS + 42];
				for(new k = 0; k < MAX_QUESTS; k ++)
				{

					new line_string[64 + 26];
					format(line_string, sizeof(line_string), "%s\t%s\n", quest_info[k][q_name], status_names[quest_status[playerid][k]]);
					strcat(dialog_string, line_string);
				}
				strcat(dialog_string, ""c_orange_red"Отменить действующее задание");
				show_dialog(playerid, d_questlist, DIALOG_STYLE_TABLIST, ""c_server"Задания", dialog_string, "Выбрать", "Закрыть");
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Данное задание уже выполнено.");
			}
			else if(quest_status[playerid][listitem] == 1)
			{
				static const status_names[][] = {
				""c_orange_red"Не выполнен",
				""c_server"Выполняется",
				""c_green"Готово",
				""c_green"Выполнен"};

				new dialog_string [(64 + 26)* MAX_QUESTS + 42];
				for(new k = 0; k < MAX_QUESTS; k ++)
				{

					new line_string[64 + 26];
					format(line_string, sizeof(line_string), "%s\t%s\n", quest_info[k][q_name], status_names[quest_status[playerid][k]]);
					strcat(dialog_string, line_string);
				}
				strcat(dialog_string, ""c_orange_red"Отменить действующее задание");
				show_dialog(playerid, d_questlist, DIALOG_STYLE_TABLIST, ""c_server"Задания", dialog_string, "Выбрать", "Закрыть");
				return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Это задание уже выполняется.");
			}
			else if(quest_status[playerid][listitem] == 2)
			{
				quest_status[playerid][listitem] = 3;
				SendClientMessage(playerid, col_succes, !"Вы успешно сдали задание, награда получена!");
				update_quest_data(playerid);
				switch(listitem)
				{
					case 0:
					{

						give_money(playerid, 3000);
						insert_money_log(playerid, INVALID_PLAYER_ID, 3000, "квест");
						new _t_string[156];
						PlayerInfo[playerid][exp] += 2;
						if(PlayerInfo[playerid][exp] >=(PlayerInfo[playerid][level] + 1)* 4)
						{

							PlayerInfo[playerid][exp] -=(PlayerInfo[playerid][level] + 1)* 4;
							PlayerInfo[playerid][level] ++;
							PlayerInfo[playerid][age] ++;
							SetPlayerScore(playerid, PlayerInfo[playerid][level]);
							update_int_sql(playerid, "u_level", PlayerInfo[playerid][level]);
							update_int_sql(playerid, "u_age", PlayerInfo[playerid][age]);

							PlayerInfo[playerid][donate_roulette] += 1;
							update_int_sql(playerid, "u_droulette", PlayerInfo[playerid][donate_roulette]);
							SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы получили 1 очко для рулетки-удачи, введите "c_green"/roulette"c_white", чтобы сыграть.");

							SendClientMessage(playerid, col_white, ""c_green"* "c_white"Ваш игровой уровень повысился.");

							if(PlayerInfo[playerid][level] == 3)
							{
								format(_t_string, sizeof(_t_string), "SELECT `u_id`,`u_name` FROM `users` WHERE `u_name` IN (SELECT `u_referal` FROM `users` WHERE `u_id`='%d')",
								PlayerInfo[playerid][id]);
								mysql_tquery(sql_connection, _t_string, "referal_bonus_callback", "i", playerid);
							}
						}
						format(_t_string, sizeof(_t_string), "UPDATE `users` SET `u_exp` = '%d',`u_tax` = '%d',`u_bank` = '%d' WHERE `u_id` = '%i' LIMIT 1",
						PlayerInfo[playerid][exp], PlayerInfo[playerid][tax], PlayerInfo[playerid][bank], PlayerInfo[playerid][id]);
						mysql_tquery(sql_connection, _t_string);
					}
					case 1:
					{
						new _t_string[156];
						PlayerInfo[playerid][exp] += 3;
						if(PlayerInfo[playerid][exp] >=(PlayerInfo[playerid][level] + 1)* 4)
						{

							PlayerInfo[playerid][exp] -=(PlayerInfo[playerid][level] + 1)* 4;
							PlayerInfo[playerid][level] ++;
							PlayerInfo[playerid][age] ++;
							SetPlayerScore(playerid, PlayerInfo[playerid][level]);
							update_int_sql(playerid, "u_level", PlayerInfo[playerid][level]);
							update_int_sql(playerid, "u_age", PlayerInfo[playerid][age]);

							PlayerInfo[playerid][donate_roulette] += 1;
							update_int_sql(playerid, "u_droulette", PlayerInfo[playerid][donate_roulette]);
							SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы получили 1 очко для рулетки-удачи, введите "c_green"/roulette"c_white", чтобы сыграть.");

							SendClientMessage(playerid, col_white, ""c_green"* "c_white"Ваш игровой уровень повысился.");

							if(PlayerInfo[playerid][level] == 3)
							{
								format(_t_string, sizeof(_t_string), "SELECT `u_id`,`u_name` FROM `users` WHERE `u_name` IN (SELECT `u_referal` FROM `users` WHERE `u_id`='%d')",
								PlayerInfo[playerid][id]);
								mysql_tquery(sql_connection, _t_string, "referal_bonus_callback", "i", playerid);
							}
						}
						format(_t_string, sizeof(_t_string), "UPDATE `users` SET `u_exp` = '%d',`u_tax` = '%d',`u_bank` = '%d' WHERE `u_id` = '%i' LIMIT 1",
						PlayerInfo[playerid][exp], PlayerInfo[playerid][tax], PlayerInfo[playerid][bank], PlayerInfo[playerid][id]);
						mysql_tquery(sql_connection, _t_string);
					}
					case 2:give_money(playerid, 5000), insert_money_log(playerid, INVALID_PLAYER_ID, 5000, "квест");
					case 3:give_money(playerid, 1000), insert_money_log(playerid, INVALID_PLAYER_ID, 1000, "квест");
					case 4:give_money(playerid, 15000), insert_money_log(playerid, INVALID_PLAYER_ID, 15000, "квест");
					case 5:give_money(playerid, 3000), insert_money_log(playerid, INVALID_PLAYER_ID, 3000, "квест");
					case 6:give_money(playerid, 7000), insert_money_log(playerid, INVALID_PLAYER_ID, 7000, "квест");
					case 7:give_money(playerid, 7000), insert_money_log(playerid, INVALID_PLAYER_ID, 7000, "квест");
				}
				static const status_names[][] = {
				""c_orange_red"Не выполнен",
				""c_server"Выполняется",
				""c_green"Готово",
				""c_green"Выполнен"};

				new dialog_string [(64 + 26)* MAX_QUESTS + 42];
				for(new k = 0; k < MAX_QUESTS; k ++)
				{

					new line_string[64 + 26];
					format(line_string, sizeof(line_string), "%s\t%s\n", quest_info[k][q_name], status_names[quest_status[playerid][k]]);
					strcat(dialog_string, line_string);
				}
				strcat(dialog_string, ""c_orange_red"Отменить действующее задание");
				show_dialog(playerid, d_questlist, DIALOG_STYLE_TABLIST, ""c_server"Задания", dialog_string, "Выбрать", "Закрыть");
				return 1;
			}
			else
			{
				new bool:is_quest_taken;
				for(new j = 0; j < MAX_QUESTS; j ++)
				{
					if(quest_status[playerid][j] != 2 && quest_status[playerid][j] != 1) continue;
					is_quest_taken = true;
					break;
				}
				if(is_quest_taken) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уже выполняете какое-либо задание.");
				SetPVarInt(playerid, "dialog_listitem", listitem);
				show_dialog(playerid, d_quest_acept, DIALOG_STYLE_MSGBOX, ""c_orange_red"Задание", quest_info[listitem][q_text], "Принять", "Назад");
			}
		}
		case d_quest_acept:
		{
			if(!response)
			{
				static const status_names[][] = {
				""c_orange_red"Не выполнен",
				""c_server"Выполняется",
				""c_green"Готово",
				""c_green"Выполнен"};

				new dialog_string [(64 + 26)* MAX_QUESTS + 42];
				for(new k = 0; k < MAX_QUESTS; k ++)
				{

					new line_string[64 + 26];
					format(line_string, sizeof(line_string), "%s\t%s\n", quest_info[k][q_name], status_names[quest_status[playerid][k]]);
					strcat(dialog_string, line_string);
				}
				strcat(dialog_string, ""c_orange_red"Отменить действующее задание");
				show_dialog(playerid, d_questlist, DIALOG_STYLE_TABLIST, ""c_server"Задания", dialog_string, "Выбрать", "Закрыть");
				return DeletePVar(playerid, "dialog_listitem");
			}
			new list_item = GetPVarInt(playerid, "dialog_listitem");
			quest_status[playerid][list_item] = 1;
			SendClientMessage(playerid, col_succes, "Вы успешно взяли задание, отправляйтесь на его выполнение.");
			
			update_quest_data(playerid);
			
			if(quest_status[playerid][1] == 1 && PlayerInfo[playerid][drive_lic] == 1)
			{
				quest_status[playerid][1] = 2;
				update_quest_data(playerid);
				SendClientMessage(playerid, col_succes, "Задание успешно выполнено. Отправляйтесь к одному из помощников, чтобы получить своё вознаграждение.");
			}
			
			return 1;
		}
		case d_vacancy:
		{
			if(!response) return 1;
			new vacancies = 0;
			for(new i = 0; i < 10; i++)
			    if(VacancyInfo[i][VacancyStatus])
			        vacancies++;

			if(PlayerInfo[playerid][leader] != 0 && ! gang_player(playerid) && ! mafia_player(playerid))
			{
			    if(listitem == 0 && vacancies == 0) {
			    	return show_dialog (playerid, d_vacancy_create, DIALOG_STYLE_INPUT, ""c_server"Добавить вакансию", ""c_white"Укажите требования для приёма в Вашу организацию:", "Принять", "Отмена");
				} else
					if(vacancies != 10 && listitem == vacancies) return show_dialog (playerid, d_vacancy_create, DIALOG_STYLE_INPUT, ""c_server"Добавить вакансию", ""c_white"Укажите требования для приёма в Вашу организацию:", "Принять", "Отмена");
			}

			if(vacancies == 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Доступных вакансий не найдено.");
			if(listitem == vacancies + 1) pc_cmd_vacancy(playerid);

			new items = 0;
			for(new i = 0; i < 10; i++)
			{
			    if(VacancyInfo[i][VacancyStatus] == true) items++;
			    if(items -1 == listitem)
				{
			        new string[63+28+100];
					format(string, sizeof(string), ""c_grey"Организация: {%s}%s\n"c_grey"Критерии: "c_white"%s\n", f_info[VacancyInfo[i][VacancyFraction] -1][f_chat_color], f_info[VacancyInfo[i][VacancyFraction] -1][f_name], VacancyInfo[i][VacancyText]);
					if(VacancyInfo[i][VacancyFraction] != PlayerInfo[playerid][leader])
					{
						return show_dialog (playerid, 0, DIALOG_STYLE_MSGBOX, ""c_server"Вакансия", string, "Закрыть", "");
					}
					return show_dialog (playerid, d_vacancy_create_end, DIALOG_STYLE_MSGBOX, ""c_server"Вакансия", string, "Принять", "Закрыть");
			    }
			}
		}
		case d_vacancy_create:
		{
			if(!response) return 1;
			new text[120];
			if(sscanf(inputtext, "s[120]", text) || strlen(inputtext) > 120) return show_dialog (playerid, d_vacancy_create, DIALOG_STYLE_INPUT, ""c_server"Добавить вакансию", ""c_grey"* Длина сообщения не может составлять более 120 символов.\n\n"c_white"Укажите требования для приёма в Вашу организацию:", "Принять", "Отмена");
            for(new i = 0; i < 10; i++)
			    if(VacancyInfo[i][VacancyFraction] == PlayerInfo[playerid][leader]&& VacancyInfo[i][VacancyStatus] == true)
			        return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вакансия Вашей организации уже добавлена, удалите старую.");

			for(new i = 0; i < 10; i++)
			{
			    if(VacancyInfo[i][VacancyStatus] == false)
				{
			        VacancyInfo[i][VacancyText] = text;
                    VacancyInfo[i][VacancyFraction] = PlayerInfo[playerid][leader];
                    VacancyInfo[i][VacancyStatus] = true;
					VacancyInfo[i][VacancyCreator] = playerid;

                    SendClientMessage(playerid, col_succes, "Вы успешно добавили новую вакансию в Вашу организацию.");
                    return pc_cmd_vacancy(playerid);
			  }
			}
			return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Список вакансий "), pc_cmd_vacancy(playerid);
		}
		case d_vacancy_create_end:
		{
		    if(!response) return pc_cmd_vacancy(playerid);
			for(new i = 0; i < 10; i++)
			{
			    if(VacancyInfo[i][VacancyFraction] == PlayerInfo[playerid][leader])
				{
			        VacancyInfo[i][VacancyStatus] = false;
					VacancyInfo[i][VacancyCreator] = INVALID_PLAYER_ID;

			        return SendClientMessage(playerid, col_succes, "Вы успешно удалили Вашу вакансию.");
			     }
			}
		}
		case d_rieltore:
		{
			if(!response) return 1;

			switch(listitem)
			{
				case 0: show_dialog(playerid, d_rieltore_house, DIALOG_STYLE_LIST, !""scm_dialog"Дома", !"\
					"c_server"1 | "c_white"Дома на продаже\n\
					"c_server"2 | "c_white"Покупка дома по номеру", !"Выбрать", !"Назад");
				case 1: show_dialog(playerid, d_rieltore_biz, DIALOG_STYLE_LIST, !""scm_dialog"Бизнесы", !"\
					"c_server"1 | "c_white"Бизнесы на продаже\n\
					"c_server"2 | "c_white"Покупка бизнеса по номеру", !"Выбрать", !"Назад");
				case 2: show_dialog(playerid, d_rieltore_island, DIALOG_STYLE_LIST, !""scm_dialog"Семейные острова", !""c_server"1 | "c_white"Острова на продаже", !"Выбрать", !"Назад");
			}
		}
		case d_rieltore_island:
		{
			if(!response) return show_dialog(playerid, d_rieltore, DIALOG_STYLE_LIST, !""scm_dialog"Риэлторская компания", !""c_server"1 | "c_white"Дома\n"c_server"2 | "c_white"Бизнесы\n"c_server"3 | "c_white"Семейные острова", !"Выбрать", !"Отмена");

			switch(listitem)
			{
				case 0:
				{
					new count_islands = 0, insert_islands = 0;

					global_string[0] = EOS;
					strcat(global_string, ""c_grey"Предыдущая страница\n"c_grey"Следующая страница\n"c_white"");
					for(new fi = 0; fi < island_count; fi++)
					{
						if(fi_info[fi][fi_owner] != -1) continue;

						new pvar_string[16];
						format(pvar_string, sizeof(pvar_string), "vrb_%d", insert_islands);
						SetPVarInt(playerid, pvar_string, fi);

						insert_islands++;

						if(count_islands > 10) continue;

						new line_string[90];
						format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s -%s\n", fi + 1, island_classes[fi_info[fi][fi_int] -1], fi_info[fi][fi_owner_name]);
						strcat(global_string, line_string);

						count_islands++;
					}
					show_dialog(playerid, d_rieltore_island_free, DIALOG_STYLE_LIST, !""scm_dialog"Острова на продаже", global_string, !"Выбрать", !"Закрыть");
					SetPVarInt(playerid, !"count_islands", 1);
					SetPVarInt(playerid, !"insert_islands", insert_islands);
				}
				case 1: SendClientMessage(playerid, col_white, !""scm_error"Временно недоступно.");
			}
		}
		case d_rieltore_island_free:
		{
			if(!response)
			{
				DeletePVar(playerid, !"count_islands");
				DeletePVar(playerid, !"insert_islands");
				return show_dialog(playerid, d_rieltore_island, DIALOG_STYLE_LIST, !""scm_dialog"Семейные острова", !""c_server"1 | "c_white"Острова на продаже", !"Выбрать", !"Назад");
			}

			switch(listitem)
			{
				case 0:
				{
					if(GetPVarInt(playerid, !"count_islands") == 1)
					{
						SendClientMessage(playerid, col_white, !""scm_error"Вы находитесь на первой странице списка домов.");

						new count_islands = 0, insert_islands = 0;

						global_string[0] = EOS;
						strcat(global_string, ""c_grey"Предыдущая страница\n"c_grey"Следующая страница\n"c_white"");
						for(new fi = 0; fi < island_count; fi++)
						{
							if(fi_info[fi][fi_owner] != -1) continue;

							new pvar_string[16];
							format(pvar_string, sizeof(pvar_string), "vrb_%d", insert_islands);
							SetPVarInt(playerid, pvar_string, fi);

							insert_islands++;

							if(count_islands > 10) continue;

							new line_string[90];
							format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s -%s\n", count_islands + 1, island_classes[fi_info[fi][fi_int] -1], fi_info[fi][fi_owner_name]);
							strcat(global_string, line_string);

							count_islands++;
						}
						show_dialog(playerid, d_rieltore_island_free, DIALOG_STYLE_LIST, !""scm_dialog"Острова на продаже", global_string, !"Выбрать", !"Закрыть");
						return SetPVarInt(playerid, !"count_islands", 1);
					}
					SetPVarInt(playerid, !"count_islands", GetPVarInt(playerid, !"count_islands") -1);

					new count_islands = 0, insert_islands = 0;

					global_string[0] = EOS;
					strcat(global_string, ""c_grey"Предыдущая страница\n"c_grey"Следующая страница\n"c_white"");
					for(new fi = 0; fi < island_count; fi ++)
					{
						if(fi_info[fi][fi_owner] != -1) continue;

						new pvar_string[16];
						format(pvar_string, sizeof(pvar_string), "vrb_%d", insert_islands);
						SetPVarInt(playerid, pvar_string, fi);

						insert_islands++;

						if(count_islands > GetPVarInt(playerid, !"count_islands") * 10) break;
						if(count_islands < (GetPVarInt(playerid, !"count_islands") * 10) -10)
						{
							count_islands++;
							continue;
						}

						new line_string[80];
						format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s -%s\n", count_islands + 1, island_classes[fi_info[fi][fi_int] -1], fi_info[fi][fi_owner_name]);
						strcat(global_string, line_string);

						count_islands++;
					}
					return show_dialog(playerid, d_rieltore_island_free, DIALOG_STYLE_LIST, !""scm_dialog"Острова на продаже", global_string, !"Выбрать", !"Закрыть");
				}
				case 1:
				{
					if(GetPVarInt(playerid, !"count_islands") * 10 >= GetPVarInt(playerid, !"insert_islands"))
					{
						SendClientMessage(playerid, col_white, !""scm_error"Вы находитесь на последней странице списка домов.");

						new count_islands = 0, insert_islands = 0;

						global_string[0] = EOS;
						strcat(global_string, ""c_grey"Предыдущая страница\nСледующая страница\n"c_white"");
						for(new fi = 0; fi < island_count; fi++)
						{
							if(fi_info[fi][fi_owner] != -1) continue;

							new pvar_string[16];
							format(pvar_string, sizeof(pvar_string), "vrb_%d", insert_islands);
							SetPVarInt(playerid, pvar_string, fi);

							insert_islands++;

							if(count_islands > 10) continue;

							new line_string[90];
							format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s -%s\n", count_islands + 1, island_classes[fi_info[fi][fi_int] -1], fi_info[fi][fi_owner_name]);
							strcat(global_string, line_string);

							count_islands ++;
						}
						show_dialog(playerid, d_rieltore_island_free, DIALOG_STYLE_LIST, !""scm_dialog"Острова на продаже", global_string, !"Выбрать", !"Закрыть");
						return SetPVarInt(playerid, !"count_islands", 1);
					}
					SetPVarInt(playerid, !"count_islands", GetPVarInt(playerid, !"count_islands") + 1);

					new count_islands = 0, insert_islands = 0;

					global_string[0] = EOS;
					strcat(global_string, ""c_grey"Предыдущая страница\nСледующая страница\n"c_white"");
					for(new fi = 0; fi < island_count; fi ++)
					{
						if(fi_info[fi][fi_owner] != -1) continue;

						new pvar_string[16];
						format(pvar_string, sizeof(pvar_string), "vrb_%d", insert_islands);
						SetPVarInt(playerid, pvar_string, fi);

						insert_islands++;

						if(count_islands > GetPVarInt(playerid, !"count_islands") * 10) break;
						if(count_islands < (GetPVarInt(playerid, !"count_islands") * 10) -10)
						{
							count_islands++;
							continue;
						}

						new line_string[90];
						format(line_string, sizeof(line_string), ""c_server"%d."c_white" %s -%s\n", count_islands + 1, island_classes[fi_info[fi][fi_int] -1], fi_info[fi][fi_owner_name]);
						strcat(global_string, line_string);

						count_islands++;
					}
					return show_dialog(playerid, d_rieltore_island_free, DIALOG_STYLE_LIST, !""scm_dialog"Острова на продаже", global_string, !"Выбрать", !"Закрыть");
				}
				default:
				{
					new pvar_string[16];
					format(pvar_string, sizeof(pvar_string), "vrb_%d", (listitem -2) + ((GetPVarInt(playerid, !"count_islands") == 1) ? (0) : ((GetPVarInt(playerid, !"count_islands") -1) * 10)));
					new select_id = GetPVarInt(playerid, pvar_string);
					SetPVarInt(playerid, !"island_id_select", select_id);

					new header_string[80];
					format(header_string, sizeof(header_string), ""scm_dialog"Номер острова: №%d", fi_info[GetPVarInt(playerid, !"island_id_select")][fi_id]);
					show_dialog(playerid, d_rieltore_island_select_info, DIALOG_STYLE_LIST, header_string, !""c_server"1 | "c_white"Отметить на карте\n"c_server"2 | "c_white"Посмотреть фотографию острова\n"c_server"3 | "c_white"Купить остров", !"Выбрать", !"Закрыть");

					DeletePVar(playerid, !"count_islands");
					DeletePVar(playerid, !"insert_islands");
				}
			}
		}
		case d_rieltore_island_select_info:
		{
			if(!response)
			{
				DeletePVar(playerid, !"count_islands");
				DeletePVar(playerid, !"island_id_select");
				return show_dialog(playerid, d_rieltore_island, DIALOG_STYLE_LIST, !""scm_dialog"Семейные острова", !""c_server"1 | "c_white"Острова на продаже", !"Выбрать", !"Назад");
			}

			switch(listitem)
			{
				case 0:
				{
					new island_id = GetPVarInt(playerid, !"island_id_select");

					SendClientMessage(playerid, col_white, !""scm_info"Метка успешно установлена.");
					is_gps_used{playerid} = 1;

					SetPlayerRaceCheckpoint(playerid, 1, fi_info[island_id][fi_pos][0], fi_info[island_id][fi_pos][1], fi_info[island_id][fi_pos][2], 0.0, 0.0, 0.0, 2.0);
					DeletePVar(playerid, !"island_id_select");
				}
				case 1:
				{
					new island_id = GetPVarInt(playerid, !"island_id_select");

					GetPlayerPos(playerid, last_coord[playerid][0], last_coord[playerid][1], last_coord[playerid][2]);
					GetPlayerFacingAngle(playerid, last_coord[playerid][3]);

					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerInterior(playerid, 0);

					toggle_controlable(playerid, false, false);
					TogglePlayerSpectating(playerid, true);

					SetPlayerCameraPos(playerid, fi_info[island_id][fi_pos][0] + 110, fi_info[island_id][fi_pos][1], fi_info[island_id][fi_pos][2] + 47);
					SetPlayerCameraLookAt(playerid, fi_info[island_id][fi_pos][0] + 109, fi_info[island_id][fi_pos][1], fi_info[island_id][fi_pos][2] + 46);

					p_t_info[playerid][camera_timer] = SetTimerEx("fixed_camera_pos", 500, 0, "iii", playerid, island_id, 3);

					SendClientMessage(playerid, col_white, !""scm_info"Для выхода из режима просмотра используйте: "c_gold"В разработке");
					DeletePVar(playerid, !"island_id_select");
				}
				case 2:
				{
					if(PlayerInfo[playerid][island] != -1)
					{
						DeletePVar(playerid, !"island_id_select");
						SendClientMessage(playerid, col_white, !""scm_error"У Вас уже имеется семейный остров.");
						return show_dialog(playerid, d_rieltore_island, DIALOG_STYLE_LIST, !""scm_dialog"Семейные острова", !""c_server"1 | "c_white"Острова на продаже", !"Выбрать", !"Назад");
					}

					new fi = GetPVarInt(playerid, !"island_id_select");
					DeletePVar(playerid, !"island_id_select");

					new fint = fi_info[fi][fi_int] -1, dialog_string[200];
					if(fi_info[fi][fi_owner] == -1)
					{
						format(dialog_string, sizeof(dialog_string), ""c_white"Номер острова: №%d\n\n"c_white"Тип: %s"c_grey"\n"c_white"Стоимость: "c_green"%d$", fi_info[fi][fi_id], island_classes[fint], fi_info[fi][fi_price]);
						show_dialog(playerid, d_island_rieltore, DIALOG_STYLE_MSGBOX, !""scm_dialog"Семейный остров", dialog_string, !"Купить", !"Отмена");

						SetPVarInt(playerid, !"island_dialog", 1);
						SetPVarInt(playerid, !"island_id", fi + 1);
					}
				}
			}
		}
		case d_island_rieltore:
		{
			if(!response)
			{
				DeletePVar(playerid, !"island_id");
				return DeletePVar(playerid, !"island_dialog");
			}

			new fi = GetPVarInt(playerid, !"island_id") -1, family_id = PlayerInfo[playerid][family];
			if(GetPVarInt(playerid, !"island_dialog") == 1)
			{
				if(fi_info[fi][fi_owner] != -1)
				{
					SendClientMessage(playerid, col_white, !""scm_error"Данный остров уже находится в частной собственности.");
					DeletePVar(playerid, !"island_id");
					return DeletePVar(playerid, !"island_dialog");
				}
				if(!PlayerInfo[playerid][family]) return SendClientMessage(playerid, col_white, !""scm_error"Вы не состоите в семье.");
				if(PlayerInfo[playerid][family_rang] < family_info[PlayerInfo[playerid][family] -1][fam_settings][3]) return SendClientMessage(playerid, col_white, !""scm_error"Купить семейный остров может только лидер семьи.");
				if(family_info[family_id -1][fam_bank] < fi_info[fi][fi_price]) return SendClientMessage(playerid, col_white, !""scm_error"На счету семьи недостаточно средств.");
				if(PlayerInfo[playerid][island] != -1) return SendClientMessage(playerid, col_white, !""scm_error"У Вас в собственности уже есть остров.");

				fi_info[fi][fi_owner] = PlayerInfo[playerid][id];
				fi_info[fi][fi_family] = PlayerInfo[playerid][family];
				format(fi_info[fi][fi_owner_name], MAX_PLAYER_NAME, "%s", PlayerInfo[playerid][name]);

				PlayerInfo[playerid][island] = fi_info[fi][fi_id];
				update_int_sql(playerid, "u_island", PlayerInfo[playerid][island]);

				for(new i; i < 6; i++)
					fi_info[fi][fi_improve][i] = 0;

				save_island(fi);

				family_info[family_id -1][fam_house] = fi_info[fi][fi_id];

				new query_string[80];
				format(query_string, sizeof(query_string), "UPDATE `family` SET `fam_house`='%d' WHERE `fam_id`='%d' LIMIT 1", fi_info[fi][fi_id], family_id);
				mysql_query(sql_connection, query_string);

				family_info[PlayerInfo[playerid][family] -1][fam_bank] -= fi_info[fi][fi_price];

				mysql_format(sql_connection, query_string, sizeof(query_string), "UPDATE `family` SET `fam_bank`='%d' WHERE `fam_id`='%d' LIMIT 1", family_info[family_id -1][fam_bank], family_id);
				mysql_query(sql_connection, query_string);

				new text_string[144];
				format(text_string, sizeof(text_string), "{%s}[Семья]"c_silver" %s %s[%d] приобрел(-а) семейный остров №%d", family_info[family_id -1][fam_chat_color], family_rank[family_id -1][PlayerInfo[playerid][family_rang] -1], PlayerInfo[playerid][name], playerid, fi_info[fi][fi_id]);
				family_message(family_id, col_white, text_string);

				format(text_string, sizeof(text_string), ""scm_info"Вы успешно приобрели семейный остров №%d стоимостью "c_green"%d$", fi_info[fi][fi_id], fi_info[fi][fi_price]);
				SendClientMessage(playerid, col_white, text_string);

				format(text_string, sizeof(text_string), "Семейный остров №%d\nВладелец: {%s}%s Family", fi_info[fi][fi_id], family_info[fi_info[fi][fi_family] -1][fam_chat_color], family_info[fi_info[fi][fi_family] -1][fam_name]);
				UpdateDynamic3DTextLabelText(fi_info[fi][fi_text], col_white, text_string);

				DeletePVar(playerid, !"island_id");
				SetPVarInt(playerid, !"tp_area_used", 1);
				teleport_tick[playerid] = GetTickCount();
			}
			DeletePVar(playerid, !"island_dialog");
		}
		case d_photographer_invite:
		{
			if(response)
			{
				if(dynamic_area_photographer_job[playerid] != -1)
					DestroyDynamicArea(dynamic_area_photographer_job[playerid]);
				#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
					printf("d_photographer_invite | listitem: %d", listitem);
				#endif
				check_cooldown_photographer(playerid, listitem);
			}
		}
		case d_photographer_invite_1:
		{
			new listitem_ = GetPVarInt(playerid, "photographer_quest_id");
			if(response)
			{

				new quest_id = quest_photographer_id[playerid];
				#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
					printf("d_photographer_invite_1 | quest_id: %d", quest_id);
				#endif
				if(quest_id < QUEST_OLD_MILITARY)
				{
					listitem_ -= 1;
					dynamic_area_photographer_job[playerid] = CreateDynamicCube(photographer_job_info[quest_id][pjXMinPos],
																				photographer_job_info[quest_id][pjYMinPos],
																				photographer_job_info[quest_id][pjZMinPos],
																				photographer_job_info[quest_id][pjXMaxPos],
																				photographer_job_info[quest_id][pjYMaxPos],
																				photographer_job_info[quest_id][pjZMaxPos],
																				_,
																				_,
																				playerid);
					gps_point_photographer[playerid] = CreateDynamicCP(photographer_gps_point[quest_id][x_pos_gps],
																	   photographer_gps_point[quest_id][y_pos_gps],
																	   photographer_gps_point[quest_id][z_pos_gps],
																	   0.0,
																	   _,
																	   0,
																	   playerid,
																	   8000.0);
					step_photographer_job[playerid] = 0;
					static const str[] = "Отлично! Сфотографируйте %s ("c_grey"местоположение указано на миникарте"c_succes")";
					new fmt_str[sizeof(str) + 7 * 2 -2 + MAX_NAME_PHOTOGRAPHER_POINT];
					format(fmt_str, sizeof(fmt_str), str, photographer_job_info[quest_id][pjName]);
					SendClientMessage(playerid, col_succes, fmt_str);
				}
				else
				{
					step_photographer_job[playerid] = 0;
					SendClientMessage(playerid, col_succes, "Отлично! Возьмите задание у актера ("c_grey"местоположение указано на миникарте"c_succes")");

					listitem_ -= 1;

					printf("d_photographer_invite_1 | index_gps: %d", QUEST_OLD_MILITARY + listitem_);
					gps_point_photographer[playerid] = CreateDynamicCP(photographer_gps_point[QUEST_OLD_MILITARY + listitem_][x_pos_gps],
																	   photographer_gps_point[QUEST_OLD_MILITARY + listitem_][y_pos_gps],
																	   photographer_gps_point[QUEST_OLD_MILITARY + listitem_][z_pos_gps],
																	   0.0,
																	   _,
																	   0,
																	   playerid,
																	   8000.0);


					dynamic_sphere_photographer[playerid] = CreateDynamicSphere(actor_pos_photographer_quest[listitem_][x_pos_actor],
																				actor_pos_photographer_quest[listitem_][y_pos_actor],
																				actor_pos_photographer_quest[listitem_][z_pos_actor],
																				5.0,
																				_,
																				_,
																				playerid);
				}
			}
			else
			{
				DeletePVar(playerid, "photographer_quest_id");
				quest_photographer_id[playerid] = -1;
			}
		}
		case d_photographer_actor_dialog:
		{
			if(response)
			{
				step_photographer_job[playerid] = 1;
				//quest_photographer_id[playerid] = GetPVarInt(playerid, "photographer_quest_id");

				new count_photo = counter_photos_taken{playerid};
				new id_quest = quest_photographer_id[playerid] + count_photo;

				id_quest += ShiftIndexArray(playerid, id_quest);
				#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
					printf("PlayerDialogShowQuestPhotogr | id_quest: %d | id_quest -QUEST_OLD_MILITARY: %d", id_quest,
																											  id_quest -_:QUEST_OLD_MILITARY);
				#endif
				new
					cache_math,
					Float: cache_x_point,
					Float: cache_y_point,
					Float: cache_z_point;
				if(id_quest < QUEST_GRANDMOTHER)
				{
					cache_math = (id_quest -QUEST_OLD_MILITARY);
					#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
						printf("Photographer | d_photographer_actor_dialog | id_quest < QUEST_GRANDMOTHER | cache_math: %d", cache_math);
					#endif
					cache_x_point = cylinder_photographer_info[cache_math][x_cilinder_photographer];
					cache_y_point = cylinder_photographer_info[cache_math][y_cilinder_photographer];
					cache_z_point = cylinder_photographer_info[cache_math][minz_cilinder_photographer];

					cylinder_photo_point[playerid] =  CreateDynamicCylinder(cache_x_point,
																			cache_y_point,
																			cache_z_point,
																			cylinder_photographer_info[cache_math][maxz_cilinder_photographer],
																			45.0,
																			_,
																			_,
																			playerid);
				}
				else if(id_quest == QUEST_WIFE)
				{
					#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
						printf("Photographer | d_photographer_actor_dialog | id_quest == QUEST_WIFE | cache_math: %d", cache_math);
					#endif
					cache_x_point = 2053.1826;
					cache_y_point = 1544.9056;
					cache_z_point = 10.6719;
				}
				else if(id_quest == QUEST_GRANDMOTHER)
				{
					#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
						printf("Photographer | d_photographer_actor_dialog | id_quest == QUEST_GRANDMOTHER | cache_math: %d", cache_math);
					#endif
					cache_x_point = 149.4180;
					cache_y_point = -1721.1514;
					cache_z_point = 8.9440;
				}
				else if(id_quest == QUEST_PRIEST)
				{
					cache_math = (id_quest -QUEST_OLD_MILITARY -2);
					#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
						printf("Photographer | d_photographer_actor_dialog | id_quest == QUEST_PRIEST | cache_math: %d", cache_math);
					#endif
					cache_x_point = cylinder_photographer_info[cache_math][x_cilinder_photographer];
					cache_y_point = cylinder_photographer_info[cache_math][y_cilinder_photographer];
					cache_z_point = cylinder_photographer_info[cache_math][minz_cilinder_photographer];
					cylinder_photo_point[playerid] =  CreateDynamicCylinder(cache_x_point,
																			cache_y_point,
																			cache_z_point,
																			cylinder_photographer_info[cache_math][maxz_cilinder_photographer],
																			45.0,
																			_,
																			_,
																			playerid);
				}
				#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
					printf("d_photographer_actor_dialog | id: %d | x_min: %f | y_min: %f | z_min: %f | x_max: %f | y_max: %f | z_max: %f",
																																	id_quest,
																																	photographer_job_info[id_quest][pjXMinPos],
																																	photographer_job_info[id_quest][pjYMinPos],
																																	photographer_job_info[id_quest][pjZMinPos],
																																	photographer_job_info[id_quest][pjXMaxPos],
																																	photographer_job_info[id_quest][pjYMaxPos],
																																	photographer_job_info[id_quest][pjZMaxPos]);

				#endif
				dynamic_area_photographer_job[playerid] = CreateDynamicCube(photographer_job_info[id_quest][pjXMinPos],
																			photographer_job_info[id_quest][pjYMinPos],
																			photographer_job_info[id_quest][pjZMinPos],
																			photographer_job_info[id_quest][pjXMaxPos],
																			photographer_job_info[id_quest][pjYMaxPos],
																			photographer_job_info[id_quest][pjZMaxPos],
																			_,
																			_,
																			playerid);
				map_icon_photographer[playerid] = CreateDynamicMapIcon(cache_x_point,
																	   cache_y_point,
																	   cache_z_point,
																	   41,
																	   0x0,
																	   _,
																	   0,
																	   playerid,
																	   8000.0,
																	   MAPICON_GLOBAL);
				SendClientMessage(playerid, col_succes, "Вы взяли задание у актера. Сделайте нужное количество фотографии ("c_grey"местоположение ракурса фотографии указанно на миникарте"c_succes")");
			}
		}
		case d_photographer_uninvite:
		{
			if(response)
			{
				EndJobPhotographer(playerid);
				SendClientMessage(playerid, col_succes, "Вы уволились с работы фотографа");
			}
		}
	}
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	#if defined debug_mode
		printf("[DEBUG][OnPlayerRequestClass]playerid:%d", playerid);
	#endif

	if(p_t_info[playerid][p_logged] == false) return false;
	p_t_info[playerid][p_gun_immune_time] = 8;
	set_health(playerid, 100);
	SetSpawnInfo(playerid, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
	SpawnPlayer(playerid);
	return 1;
}

stock GetNumberOfPlayersOnThisIP(test_ip[])
{
	new against_ip[32+1];
	new x = 0;
	new ip_count = 0;
	for(x=0; x<MAX_PLAYERS; x++)
	{
		if(IsPlayerConnected(x))
		{
		    GetPlayerIp(x,against_ip,32);
		    if(!strcmp(against_ip,test_ip)) ip_count++;
		}
	}
	return ip_count;
}




public OnPlayerConnect(playerid)
{
	#if defined debug_mode
		printf("[DEBUG] [OnPlayerConnect] playerid:%d", playerid);
	#endif

    /*
        В цикле присвамваем значение -1 каждой ячейке массива, которая отвечает за
        время последнего срабатывания каждого кода анти-чита на игрока
    */
    for(new i = 0; i < AC_MAX_CODES; i++)
        pAntiCheatLastCodeTriggerTime[playerid][i] = -1;

    pAntiCheatSettingsPage{playerid} = 0; // Присваиваем значение 0 переменной, хранящей номер страницы настроек анти-чита, на которой находится игрок
    pAntiCheatSettingsEditCodeId[playerid] = -1; // Присваиваем переменной, хранящей идентификатор (ID) кода анти-чита, который редактирует игрок, занчение -1

	//==============================================================================
	GetPlayerName(playerid, PlayerInfo[playerid][name], MAX_PLAYER_NAME);
	GetPlayerIp(playerid, p_t_info[playerid][p_ip],  16);

	new num_players_on_ip = GetNumberOfPlayersOnThisIP(p_t_info[playerid][p_ip]);

	if(num_players_on_ip > 3)
	{
		if(!is_ip_white_list(p_t_info[playerid][p_ip])) return BlockIpAddress(p_t_info[playerid][p_ip], 60 * 1000);
		SetPlayerScore(playerid, random(5)+ 1);

	}


	clear_player_data(playerid);
	SetPlayerColor(playerid, 0xFFFFFF80); // col_middle_white
	TogglePlayerSpectating(playerid, true);
	p_t_info[playerid][p_tp_immune_time] = 6;

 	#if defined __anti_godmode
	antigm_OnPlayerConnect(playerid);
	#endif

	for(new j = 0; j < 9; j ++)
	{
		TextDrawShowForPlayer(playerid, td_logo[j]);
	}
	#include "modules/objects/m_rem_objects.pwn"
	//==============================================================================
	for(new i = 0; i < 20; i ++)SendClientMessage(playerid, -1, " ");

	/*gpci(playerid, PlayerInfo[playerid][u_gpci], 40);

	player_mobile[playerid] = false;
	if(strfind(PlayerInfo[playerid][u_gpci], "ED40ED0E8089CC44C08EE9580F4C8C44EE8EE990") != -1) player_mobile[playerid] = true;
	
	if(IsPlayerMobile(playerid)) SendClientMessage(playerid, col_white, !""scm_info"Вы осуществили вход в игру с Android.");
	else SendClientMessage(playerid, col_white, !""scm_info"Вы осуществили вход в игру с PC.");*/
	
    new tquery_string[85];
    format(tquery_string, sizeof(tquery_string), "SELECT `u_id` FROM `users` WHERE `u_name`='%s' LIMIT 1", PlayerInfo[playerid][name]);
    mysql_tquery(sql_connection, tquery_string, "check_player_registered", "i", playerid);
	
	return 1;
}

public OnDynamicObjectMoved(objectid)
{
	for(new i = 0; i < sizeof(object_park_ls); i++) {
	    if(objectid == object_park_ls[i]) {
		    if(status_restore_check_job_mower[i] == false) {
		    	MoveDynamicObject(object_park_ls[i],check_job_mower[i][0], check_job_mower[i][1], check_job_mower[i][2],0.001,
				    	check_job_mower[i][3], check_job_mower[i][4], check_job_mower[i][5]);
	    		status_restore_check_job_mower[i] = true;
			}
			else {
			    status_check_job_mower[i] = false;
	            status_restore_check_job_mower[i] = false;
	            if(i <= 32) check_taxi_park--;
				if(i > 32 && i <= 79) check_verona_beach--;
				if(i > 79 && i <= 138) check_medic_ls--;
				if(i > 138 && i <= 176) check_mayor_ls--;
				if(i > 176 && i <= 226) check_glenpark_1--;
				if(i > 226) check_glenpark_2--;
			}
		}
	}
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	#if defined debug_mode
		printf("[DEBUG] [OnPlayerDisconnect] playerid:%d | reason:%d", playerid, reason);
	#endif

	if(GetPVarInt(playerid, "Registration") == 1) clear_td_registration(playerid);
	if(GetPVarInt(playerid, "Autorization") == 1) clear_td_autorization(playerid);
	if(GetPVarInt(playerid, "show_pass") == 1)
	{
		for(new i = 0; i < 39; i++)
		{
		    PlayerTextDrawDestroy(playerid, Passport_PTD[playerid][i]);
		    Passport_PTD[playerid][i] = PlayerText:-1;

			if(i < 6) TextDrawHideForPlayer(playerid, Passport_TD[i]);
		}
		DeletePVar(playerid, "show_pass");
	}
	if(GetPVarInt(playerid, "pts_show") == 1)
	{
	    for(new i = 0; i < 62; i++)
		{
		    TextDrawHideForPlayer(playerid, Carpass_TD[i]);
		    
			if(i < 7)
			{
				PlayerTextDrawDestroy(playerid, Carpass_PTD[playerid][i]);
				Carpass_PTD[playerid][i] = PlayerText:-1;
			}
		}
		DeletePVar(playerid, "pts_show");
	}
	
    if(speed_one[playerid]) destroyspeed(playerid);
	
	if(GetPVarInt(playerid, "login_timer"))KillTimer(GetPVarInt(playerid, "login_timer"));
	if(PlayerInfo[playerid][admin])
	{
		new query_string[136];
		new played_time = NetStats_GetConnectedTime(playerid)/ 1000;
		if(played_time > 3600)played_time = 0;

		format(query_string,sizeof(query_string),"UPDATE `users_admins` SET `u_a_date` = NOW(),\
														   `u_a_online`=`u_a_online`+'%d' \
												    WHERE `u_a_name` = '%s' LIMIT 1", played_time, PlayerInfo[playerid][name]);
		mysql_tquery(sql_connection, query_string, "", "");
		Iter_Remove(admin_players, playerid);
		PlayerInfo[playerid][admin] = 0;
	}
	
	if(PlayerInfo[playerid][gun_skills][0] > 0 || PlayerInfo[playerid][gun_skills][1] > 0 || PlayerInfo[playerid][gun_skills][2] > 0 || PlayerInfo[playerid][gun_skills][3] > 0 || PlayerInfo[playerid][gun_skills][4] > 0
	|| PlayerInfo[playerid][gun_skills][5] > 0 || PlayerInfo[playerid][gun_skills][6] > 0)
	{
		new text_string[96];

		format(text_string, sizeof(text_string), "UPDATE `users` SET `u_skills`='%d|%d|%d|%d|%d|%d|%d' WHERE `u_id`='%d' LIMIT 1", PlayerInfo[playerid][gun_skills][0], PlayerInfo[playerid][gun_skills][1], PlayerInfo[playerid][gun_skills][2], PlayerInfo[playerid][gun_skills][3], PlayerInfo[playerid][gun_skills][4], PlayerInfo[playerid][gun_skills][5], PlayerInfo[playerid][gun_skills][6], PlayerInfo[playerid][id]);
		mysql_query(sql_connection, text_string);
	}
	
 	if(report_id[playerid] != -1)
    {
        report_slot[report_id[playerid]] = -1;
        report_id[playerid] = -1;
    }

    for(new i; i < max_report; i++)
    {
        if(report_player[i] == -1) continue;
        if(report_player[i] == playerid) report_delete(i);
    }

	
	for(new j = 0; j < 9; j ++)
	{
		TextDrawHideForPlayer(playerid, td_logo[j]);
	}
	if(GetPVarInt(playerid, "fork_object"))
	{
		DestroyDynamicObject(GetPVarInt(playerid, "fork_object"));
		DeletePVar(playerid, "fork_object");
	}
	if(player_practice {playerid} != 0)
	{
		player_practice {playerid} = 0;
		KillTimer(player_practice_step_timer[playerid]);
		player_practice_step_timer[playerid] = -1;
	}
	foreach(new i: admin_players)
	{
		if(GetPVarInt(i, "spectate_status")-1 == playerid)
		{
			for(new j = 0; j < 7; j ++)
			{
				TextDrawHideForPlayer(i, sp_td[j]);
				if(j < 3)
				{
					PlayerTextDrawDestroy(i, sp_ptd[i][j]);
					sp_ptd[i][j] = PlayerText:-1;
				}
			}
			GameTextForPlayer(i, "~r~PLAYER DISCONNECTED", 3000, 3);
			CancelSelectTextDraw(i);
			TogglePlayerSpectating(i, false);
		}
	}
	
    if(RadarTimer[playerid] != 0) KillTimer(RadarTimer[playerid]);
    
    if(PlayerInfo[playerid][family])
    {
        new familyid = PlayerInfo[playerid][family];
        Iter_Remove(family_players[familyid], playerid);

        if(Iter_Count(family_players[familyid]) == 0)
        {
            if(family_info[familyid -1][fam_house])
            {
                if(Iter_Count(family_vehicles[familyid]) > 0)
                {
                    family_cars[familyid] = 0;
                    foreach(new i: family_vehicles[familyid])
                    {
                        DestroyVehicle(i);
                        veh_info[i -1][v_vehicle] = INVALID_VEHICLE_ID;
                    }
                    Iter_Clear(family_vehicles[familyid]);
                }
            }
        }
    }

	if(!p_t_info[playerid][p_logged]) return 1;

	if(Iter_Count(streamed_players[playerid]) != 0) Iter_Clear(streamed_players[playerid]);
	if(Iter_Count(streamed_vehicles[playerid]) != 0) Iter_Clear(streamed_vehicles[playerid]);
	Iter_Remove(logged_players, playerid);

	KillTimer(PlayerInfo[playerid][main_timer]);

	if(duel_opponent[playerid] != INVALID_PLAYER_ID)
	{
		new _text_string[144];
		format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы одержали победу над "c_green"%s"c_white" и выиграли ставку в размере "c_green"%d$", PlayerInfo[playerid][name], duel_price[playerid]);
		SendClientMessage(duel_opponent[playerid], col_white, _text_string);

		set_health(playerid, 100);
        set_health(duel_opponent[playerid], 100);

		give_money(duel_opponent[playerid], duel_price[playerid]*2);
		insert_money_log(playerid, duel_opponent[playerid], duel_price[playerid], "дуэль");

		set_pos(duel_opponent[playerid], 2460.2515, -2120.6069, 13.5530, 354.7014, 0, 0);
		SetPVarInt(duel_opponent[playerid], "tp_area_used", 1);

		reset_player_weapon(duel_opponent[playerid]);
		for(new i = 0; i < 12; i ++)
		{
			give_weapon(duel_opponent[playerid], duel_guns[duel_opponent[playerid]][i][0], duel_guns[duel_opponent[playerid]][i][1]);
		}

		duel_price[playerid] = 0;
		duel_price[duel_opponent[playerid]] = 0;

		duel_opponent[duel_opponent[playerid]] = INVALID_PLAYER_ID;
		duel_opponent[playerid] = INVALID_PLAYER_ID;
	}
	for(new i = 0; i < 10; i++)
	{
		if(VacancyInfo[i][VacancyCreator] == playerid)
		{
			VacancyInfo[i][VacancyStatus] = false;
			VacancyInfo[i][VacancyCreator] = INVALID_PLAYER_ID;
		}
	}

	if(GetPVarInt(playerid, "playerTarget")) DeletePVar(playerid, "playerTarget");
	if(GetPVarInt(playerid, "PlayerEnhancement")) DeletePVar(playerid, "PlayerEnhancement");

	if(GetPVarInt(playerid, "cpanel_choosen")) DeletePVar(playerid, "cpanel_choosen");

	if(GetPVarInt(playerid, "phone_dialog")) DeletePVar(playerid, "phone_dialog");
	if(GetPVarInt(playerid, "add_cont")) DeletePVar(playerid, "add_cont");

	if(GetPVarInt(playerid, "map_mark")) DeletePVar(playerid, "map_mark");
	if(GetPVarInt(playerid, "taxi_driver_id")) DeletePVar(playerid, "taxi_driver_id");

	if(GetPVarInt(playerid, "news_menu")) DeletePVar(playerid, "news_menu");

	if(GetPVarInt(playerid, "gangpay")) DeletePVar(playerid, "gangpay");
	if(GetPVarInt(playerid, "gangpay_sum")) DeletePVar(playerid, "gangpay_sum");

	if(GetPVarInt(playerid, "police_computer")) DeletePVar(playerid, "police_computer");
	if(police_gz[playerid])
	{
		GangZoneHideForPlayer(playerid, police_gz[playerid]);
		GangZoneDestroy(police_gz[playerid]);
	}

	if(GetPVarInt(playerid, "police_camid")) DeletePVar(playerid, "police_camid");
	if(GetPVarInt(playerid, "last_virtualworld")) DeletePVar(playerid, "last_virtualworld");
	if(GetPVarInt(playerid, "last_interior")) DeletePVar(playerid, "last_interior");

	if(GetPVarInt(playerid, "filling_timer")!= 0)KillTimer(GetPVarInt(playerid, "filling_timer"));
	if(GetPVarInt(playerid, "gz_td_status") ==  1)
	{
		for(new j = 0; j < 18; j ++)
		{
			TextDrawHideForPlayer(playerid, capture_td[j]);
		}
		DeletePVar(playerid, "gz_td_status");
	}

	if(GetPVarInt(playerid, "p_h_bed") > 0)
	{
		h_bed_toggled[GetPVarInt(playerid, "p_h_bed")-1][GetPlayerVirtualWorld(playerid)-1] = false;
	}
	if(player_vehicle[playerid] != INVALID_VEHICLE_ID)
	{
		veh_info[player_vehicle[playerid] -1][v_driver] = INVALID_PLAYER_ID;
	}

	if(GetPVarInt(playerid, "cm_used")!= 0)cm_status(playerid, false);

	if(PlayerInfo[playerid][family_text] != Text3D:INVALID_3DTEXT_ID)
	{
		DestroyDynamic3DTextLabel(PlayerInfo[playerid][family_text]);
		PlayerInfo[playerid][family_text] = Text3D:INVALID_3DTEXT_ID;
	}
	if(player_rentcar[playerid] != INVALID_VEHICLE_ID)
	{
		SetVehicleToRespawn(player_rentcar[playerid]);
		if(IsValid3DTextLabel(p_t_info[playerid][pBusText])) DestroyDynamic3DTextLabel (p_t_info[playerid][pBusText]);
		if(IsValid3DTextLabel(p_t_info[playerid][pTaxi3DText])) DestroyDynamic3DTextLabel(p_t_info[playerid][pTaxi3DText]);
		if(IsValid3DTextLabel(PlayerMehText[playerid])) DestroyDynamic3DTextLabel(PlayerMehText[playerid]);
	}
	if(GetPVarInt(playerid, "exam_vehicle")!= 0)DestroyVehicle(GetPVarInt(playerid, "exam_vehicle")), DeletePVar(playerid, "exam_vehicle");
	if(GetPVarInt(playerid, "d_price")> 0)
	{
		new pl_id = GetPVarInt(playerid, "d_pl_id");
		DeletePVar(pl_id, "d_biz_seller");
		SendClientMessage(pl_id, col_gray,""c_orange_red"* "c_grey"Продавец вышел из игры, сделка отменена.");
	}
	if(GetPVarInt(playerid, "d_biz_seller")> 0)
	{
		new pl_id = GetPVarInt(playerid, "d_biz_seller") -1;
		DeletePVar(pl_id, "d_pl_id");
		DeletePVar(pl_id, "d_price");
		SendClientMessage(pl_id, col_gray,""c_orange_red"* "c_grey"Покупатель вышел из игры, сделка отменена.");
	}
	if(GetPVarInt(playerid, "sc_price")> 0)
	{
		new pl_id = GetPVarInt(playerid, "sc_buyer") -1;
		DeletePVar(pl_id, "sc_seller");
		DeletePVar(pl_id, "sc_sellveh");

		SendClientMessage(pl_id, col_gray,""c_orange_red"* "c_grey"Продавец вышел из игры, сделка отменена.");
	}
	if(GetPVarInt(playerid, "sc_seller")> 0)
	{
		new pl_id = GetPVarInt(playerid, "sc_seller") -1;
		DeletePVar(pl_id, "sc_buyer");
		DeletePVar(pl_id, "sc_price");
		SendClientMessage(pl_id, col_gray,""c_orange_red"* "c_grey"Покупатель вышел из игры, сделка отменена.");
	}


	if(GetPVarInt(playerid, "p_sm_used"))
	{
		PlayerTextDrawDestroy(playerid, sm_ptd[playerid]);
		sm_ptd[playerid] = PlayerText:INVALID_TEXT_DRAW;
		for(new i = 0; i < 4; i ++)
		{
			TextDrawHideForPlayer(playerid, sm_td[i]);
		}
		new p_sm = GetPVarInt(playerid, "p_sm_used");
		new i =(p_sm * 2 +(p_sm -2)) -1;
		MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2], 1, sm_slot_coord[i][3], sm_slot_coord[i][4], sm_slot_coord[i][5]);
		MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2], 1, sm_slot_coord[i + 1][3], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
		MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2], 1, sm_slot_coord[i + 2][3], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);

		sm_used[p_sm -1] = false;
	}

	if(GetPVarInt(playerid, "hunger_td_active")!= 0)
	{
		for(new j = 0; j < 6; j ++)
		{
			TextDrawHideForPlayer(playerid, satiery_td[j]);
			if(j < 4)
			{
				PlayerTextDrawDestroy(playerid, satiery_ptd[playerid][j]);
				satiery_ptd[playerid][j] = PlayerText:-1;
			}
		}
	}
	if(GetPVarInt(playerid,"Stol")) ExitBone(playerid);
	if(GetPVarInt(playerid, "f_biz"))
	{
		for(new i = 0; i < 8; i ++)
		{
			if(i < 3)
			{
				PlayerTextDrawDestroy(playerid, filling_ptd[playerid][i]);
				filling_ptd[playerid][i] = PlayerText:-1;
			}
			TextDrawHideForPlayer(playerid, filling_td[i]);
		}
		DeletePVar(playerid, "f_biz");
	}


	if(buyer_id[playerid] != INVALID_PLAYER_ID)
	{
		seller_id[buyer_id[playerid]] = INVALID_PLAYER_ID;
		SendClientMessage(buyer_id[playerid], col_gray,""c_orange_red"* "c_grey"Игрок вышел из игры, сделка отменена.");
	}
	if(seller_id[playerid] != INVALID_PLAYER_ID)
	{
		buyer_id[seller_id[playerid]] = INVALID_PLAYER_ID;
		sell_price[seller_id[playerid]] = -1;
		sell_item[seller_id[playerid]] = -1;
		SendClientMessage(seller_id[playerid], col_gray,""c_orange_red"* "c_grey"Покупатель вышел из игры, сделка отменена.");
	}

	if(GetPVarInt(playerid, "PlayerCuffed")> 0)
	{
		PlayerInfo[playerid][jailed] = 3600;
		PlayerInfo[playerid][jail] = 10;
		update_int_sql(playerid, "u_jail", PlayerInfo[playerid][jail]);

		PlayerInfo[playerid][wanted] = 0;
		new scm_string[128];
		format(scm_string, sizeof(scm_string), ""c_server"* A.INFO: "c_grey"%s[%d] вышел из игры, находясь в наручниках(+3600).", PlayerInfo[playerid][name], playerid);
		foreach(new i: admin_players) SendClientMessage(i, col_gray, scm_string);
	}


    if(GetPVarInt(playerid, "SetBlock")> 0)
	{
        DestroyDynamicObject(GetPVarInt(playerid,"SetBlock"));
        DeletePVar(playerid,"SetBlock");
	}

	if(player_trailer[playerid] != INVALID_VEHICLE_ID)
	{
		for(new j = 0; j < 3; j ++)
		{
			if(dorm_queue[j][0] == playerid)
			{
				dorm_queue[j][0] = INVALID_PLAYER_ID;
			}
		}
		for(new j = 0; j < 4; j ++)
		{
			PlayerTextDrawDestroy(playerid, td_db[playerid][j]);
			td_db[playerid][j] = PlayerText:-1;
		}
		new _v_id = player_trailer[playerid];
		trailer_count[_v_id -1] = 0;
		trailer_type[_v_id -1] = -1;
		DestroyVehicle(_v_id);
	}


	if(GetPVarInt(playerid, "p_skin_shop") == 1)
	{
		PlayerTextDrawDestroy(playerid, td_skinshop_price[playerid]);
		td_skinshop_price[playerid] = PlayerText:-1;
	}

	if(speed_timer[playerid] != -1)KillTimer(speed_timer[playerid]);

	if(GetPVarInt(playerid, "player_gotome"))
	{
		new pl_id = GetPVarInt(playerid, "player_gotome")-1;
	    gotome_player[pl_id] = -1;
		DeletePVar(pl_id, "cuff_x"), DeletePVar(pl_id, "cuff_y"), DeletePVar(pl_id, "cuff_z");
	}
	if(gotome_player[playerid] != -1)
	{
		DeletePVar(gotome_player[playerid], "player_gotome");
	}
	if(job_timer[playerid] != -1)KillTimer(job_timer[playerid]);

	for(new j = 0; j < 10; j ++)
	{
		if(IsPlayerAttachedObjectSlotUsed(playerid, j)) RemovePlayerAttachedObject(playerid, j);
	}


	if(GetPVarInt(playerid, "tshop_type")> 0)
	{
		for(new j = 0; j < 4; j ++)
		{
			PlayerTextDrawHide(playerid, ptd_tshop [playerid][j]);
			PlayerTextDrawDestroy(playerid, ptd_tshop [playerid][j]);
			ptd_tshop [playerid][j] = PlayerText: -1;
		}
		DestroyVehicle(GetPVarInt(playerid, "tshop_car"));
		if(GetPVarInt(playerid, "tshop_car2")> 0)DestroyVehicle(GetPVarInt(playerid, "tshop_car2"));
		for(new j = 0; j < 20; j ++)
		{
			TextDrawHideForPlayer(playerid, td_tshop[j]);
			TextDrawHideForPlayer(playerid, td_color_tshop[j]);
		}
	}

	if(Iter_Count(player_vehicles[playerid]) != 0)
	{
		foreach(new veh_id:player_vehicles[playerid])
		{
			new query_string[146];

			format(query_string, sizeof(query_string),"UPDATE `users_vehicles` SET `v_fuel` = '%f',`v_millage` = '%f' WHERE `v_id` = '%d' LIMIT 1",
			veh_info[veh_id -1][v_fuel],
			veh_info[veh_id -1][v_millage],
			veh_info[veh_id -1][v_id]);
			mysql_tquery(sql_connection, query_string, "", "");


			veh_info[veh_id -1][v_owner] = 0;
			veh_info[veh_id -1][v_rank] = 0;
			veh_info[veh_id -1][v_type] = 0;
			DestroyVehicle(veh_id);
		}
		Iter_Clear(player_vehicles[playerid]);
	}

	if(p_t_info[playerid][phone_id] != INVALID_PLAYER_ID)
	{
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		SetPlayerSpecialAction(p_t_info[playerid][phone_id], SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(playerid, 2);
		RemovePlayerAttachedObject(p_t_info[playerid][phone_id], 2);

		SendClientMessage(p_t_info[playerid][phone_id], 0x940000FF, "Связь оборвалась...");

		p_t_info[p_t_info[playerid][phone_id]][phone_id] = INVALID_PLAYER_ID;
		p_t_info[p_t_info[playerid][phone_id]][phone_caller] = 0;

		p_t_info[playerid][phone_id] = INVALID_PLAYER_ID;
		p_t_info[playerid][phone_caller] = 0;


	}
	for(new i = 0; i < MAX_GUNWORK_TABLE; i ++)
	{
		if(table_area_toggled[i] == playerid)
		{
			table_area_toggled[i] = INVALID_PLAYER_ID;
			DestroyDynamicObject(GetPVarInt(playerid, "factory_object"));
			DeletePVar(playerid, "factory_object");
			break;
		}
	}

	if(GetPVarInt(playerid, "admin_vehicle")!= 0)
	{
		DestroyVehicle(GetPVarInt(playerid, "admin_vehicle"));
	}



	new played_time = NetStats_GetConnectedTime(playerid)/ 1000,
		query_string[428];

	if(vk_checking {playerid} == 0 && google_checking {playerid} == 0)
	{
		if(played_time > 3600)played_time = 0;
		format(query_string, sizeof(query_string), "UPDATE `users` SET `u_hunger`='%d',`u_online` = '0',`u_last_date` = NOW(),`u_last_ip`= '%s',`u_mute`='%d',`u_fmute`='%d',`u_family_mute`='%d',`u_phohe_balance` = '%d',`u_salary` = '%d',`u_jailed` = '%d',`u_hour_played` = '%d',`u_newbiejob`='%d|%d|%d|%d'  WHERE `u_id` = '%i' LIMIT 1",
		PlayerInfo[playerid][hunger], p_t_info[playerid][p_ip], PlayerInfo[playerid][mute], PlayerInfo[playerid][f_mute], PlayerInfo[playerid][fam_mute], PlayerInfo[playerid][phone_balance], PlayerInfo[playerid][salary], PlayerInfo[playerid][jailed], played_time + PlayerInfo[playerid][hour_played],
		PlayerInfo[playerid][newbie_job_skill][0], PlayerInfo[playerid][newbie_job_skill][1], PlayerInfo[playerid][newbie_job_skill][2], PlayerInfo[playerid][newbie_job_skill][3],	PlayerInfo[playerid][id]);
		mysql_tquery(sql_connection, query_string);
	}
	if(quest_photographer_id[playerid] != -1)
		EndJobPhotographer(playerid);
	p_t_info[playerid][p_logged] = false;
	return 1;
}






public OnPlayerUpdate(playerid)
{
	new pl_state = GetPlayerState(playerid);

	new Float:_speed_return;
	get_speed_float(playerid, _speed_return);

	last_speed[playerid] = _speed_return;


	if(pl_state == PLAYER_STATE_ONFOOT)
	{

		if(gotome_player[playerid] != -1)
		{
			new pl_id = gotome_player[playerid];
			new Float:pl_x, Float:pl_y, Float:pl_z, Float:pl_r;

			GetPlayerPos(pl_id, pl_x, pl_y, pl_z);
			SetPlayerFaceToPoint(playerid, pl_x, pl_y);

			new Float:g_pos[3];
			new anim = move_animation(playerid, pl_x, pl_y, pl_z);
			if(GetPlayerInterior(pl_id)!= GetPlayerInterior(playerid)|| GetPlayerVirtualWorld(pl_id)!= GetPlayerVirtualWorld(playerid)|| GetPlayerDistanceFromPoint(playerid, pl_x, pl_y, pl_z)> 10)
			{

				SetPlayerPos(playerid, pl_x, pl_y, pl_z);
				SetPlayerInterior(playerid, GetPlayerInterior(pl_id));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(pl_id));
			}
			if(anim != 1)
			{
				g_pos[0] = GetPVarFloat(playerid,"cuff_x");
				g_pos[1] = GetPVarFloat(playerid,"cuff_y");
				g_pos[2] = GetPVarFloat(playerid,"cuff_z");
				if(IsPlayerInRangeOfPoint(playerid, 0.05, g_pos[0],g_pos[1],g_pos[2]))
				{
					GetPlayerPos(playerid, pl_x, pl_y, pl_z);
					GetPlayerFacingAngle(playerid, pl_r);
					ShiftCords(pl_x, pl_y, pl_r, 1.5);
					SetPlayerPos(playerid, pl_x, pl_y, pl_z);
				}
				GetPlayerPos(playerid, pl_x, pl_y, pl_z);
				SetPVarFloat(playerid, "cuff_x", pl_x);
				SetPVarFloat(playerid, "cuff_y", pl_z);
				SetPVarFloat(playerid, "cuff_z", pl_z);
			}
		}
	}
	else if(pl_state == PLAYER_STATE_DRIVER)
	{
		new _v_id = GetPlayerVehicleID(playerid);
		new v_speed = GetVehicleSpeed_(_v_id);

		vehicle_last_speed[playerid] = v_speed;

		new veh_id = GetPlayerVehicleID(playerid);

		if(veh_info[veh_id -1][v_model] == 530)
		{
			new Float:vehicle_health_now;
			GetVehicleHealth(veh_id, vehicle_health_now);
			if(vehicle_health_now < 1000)
			{
				RepairVehicle(veh_id);
				veh_info[veh_id -1][v_fuel] = 100.0;
			}
		}
	}

	p_t_info[playerid][p_update] = GetTickCount();
	pl_afk_time[playerid] = -2;
	if(noclipdata[playerid][cameramode] == CAMERA_MODE_FLY)
	{
		new keys,ud,lr;
		GetPlayerKeys(playerid,keys,ud,lr);

		if(noclipdata[playerid][mode] && (GetTickCount() -noclipdata[playerid][lastmove] > 100))
		{
		    // If the last move was > 100ms ago, process moving the object the players camera is attached to
		    MoveCamera(playerid);
		}

		// Is the players current key state different than their last keystate?
		if(noclipdata[playerid][udold] != ud || noclipdata[playerid][lrold] != lr)
		{
			if((noclipdata[playerid][udold] != 0 || noclipdata[playerid][lrold] != 0) && ud == 0 && lr == 0)
			{  // All keys have been released, stop the object the camera is attached to and reset the acceleration multiplier
				StopPlayerObject(playerid, noclipdata[playerid][flyobject]);
				noclipdata[playerid][mode]      = 0;
				noclipdata[playerid][accelmul]  = 0.0;
			}
			else
			{  // Indicates a new key has been pressed

			    // Get the direction the player wants to move as indicated by the keys
				noclipdata[playerid][mode] = GetMoveDirectionFromKeys(ud, lr);

				// Process moving the object the players camera is attached to
				MoveCamera(playerid);
			}
		}
		noclipdata[playerid][udold] = ud; noclipdata[playerid][lrold] = lr; // Store current keys pressed for comparison next update
		return 0;
	}

	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	Iter_Add(streamed_players[forplayerid], playerid);
	if(PlayerInfo[playerid][settings][1] == 0)ShowPlayerNameTagForPlayer(playerid, forplayerid, 0);
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	Iter_Remove(streamed_players[forplayerid], playerid);
	return 1;
}
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(GetPVarInt(playerid, "fam_war_map") ==  1)
	{
		if(fam_biz != -1) return SendClientMessage(playerid, col_white, !""scm_error"Война за аммуницию уже идет."), DeletePVar(playerid, "fam_war_map");

		if(!available_gz_pos(fX, fY))
		{
			SendClientMessage(playerid, col_white, !""scm_info"Невозможно устроить стрелу на данной территории.");
			SendClientMessage(playerid, col_white, !""scm_info"Это должна быть территория в пригороде г. Лас-Вентурас."), DeletePVar(playerid, "fam_war_map");
			return 1;
		}

		if(global_hour < 12 || global_hour > 22) return SendClientMessage(playerid, col_white, !""scm_error"Захват бизнесов возможен только с 12 до 23 часов."), DeletePVar(playerid, "fam_war_map");

		for(new b = 0; b < b_count; b ++)
		{
			DeletePVar(playerid, "fam_war_map");
			if(!IsPlayerInRangeOfPoint(playerid , 3.0 , b_info[b][b_position][0], b_info[b][b_position][1], b_info[b][b_position][2])) continue;

			new zone_name[32];
			GetPlayer2DZone(playerid, zone_name, 32);

			get_gz_pos(fX, fY, 80.0, fam_quad[0], fam_quad[1], fam_quad[2], fam_quad[3]);
			fam_gangzone = GangZoneCreate(fam_quad[0], fam_quad[1], fam_quad[2], fam_quad[3]);

			fam_attacker = PlayerInfo[playerid][family];
			fam_owner = b_info[b][b_family];

			GangZoneShowForAll(fam_gangzone, 0xFF000055);

			fam_time = 600;
			fam_biz = b;

			GangZoneFlashForAll(fam_gangzone, 0xFFFFFF55);

			fam_owner_points = 0;
			fam_attacker_points = 0;

			family_cd = 7200;

			new _string[144];
			format(_string, sizeof(_string), "{%s}[Семья] %s %s[%d] начал(-а) захват аммуниции %s в месте %s у семьи %s.",
			family_info[PlayerInfo[playerid][family] -1][fam_chat_color],
			family_rank[PlayerInfo[playerid][family] -1][PlayerInfo[playerid][family_rang] -1],
			PlayerInfo[playerid][name],
			playerid,
			b_info[b][b_name],
			zone_name,
			family_info[fam_owner -1][fam_name]);
            family_message(PlayerInfo[playerid][family], col_white, _string);

			format(_string, sizeof(_string), "{%s}[Семья] %s %s[%d] начал(-а) захват аммуниции %s в месте %s у семьи %s.",
			family_info[fam_owner -1][fam_chat_color],
			family_rank[PlayerInfo[playerid][family] -1][PlayerInfo[playerid][family_rang] -1],
			PlayerInfo[playerid][name],
			playerid,
			b_info[b][b_name],
			zone_name,
			family_info[fam_owner -1][fam_name]);
			family_message(fam_owner, col_white, _string);

			format(_string, sizeof(_string), ""c_server"* A.INFO:"c_grey" Семья %s начала захват аммуниции %s (№%d) у семьи %s.",
			family_info[PlayerInfo[playerid][family] -1][fam_name],
			b_info[b][b_name],
			b,
			family_info[fam_owner -1][fam_name]);

			foreach(new j: admin_players) SendClientMessage(j, col_white, _string);

			TextDrawSetString(Family_War_TD[22], "10:00");

			TextDrawSetString(Family_War_TD[17], family_info[PlayerInfo[playerid][family] -1][fam_name]);
			TextDrawSetString(Family_War_TD[18], family_info[fam_owner -1][fam_name]);

			TextDrawSetString(Family_War_TD[23], "0");
			TextDrawSetString(Family_War_TD[24], "0");

			fam_owner_points = 0,
				fam_attacker_points	= 0;

			fam_timer = SetTimerEx("callback_fam_timer", 1000, 1, "i", b);

			return 1;
		}
		return SendClientMessage(playerid, col_white, !""scm_error"Вы не находитесь у аммуниции.");
	}

	if(GetPVarInt(playerid, "biz_war_map") ==  1)
	{
		if(mw_biz != -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Война за бизнес уже идет."), DeletePVar(playerid, "biz_war_map");

		if(!available_gz_pos(fX, fY))
		{
			SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Невозможно устроить стрелу на данной территории.");
			SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Это должна быть территория в пригороде г.Лас-Вентурас."), DeletePVar(playerid, "biz_war_map");
			return 1;
		}

		if(global_hour < 12 || global_hour > 22) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Захват бизнесов возможен только с 12 до 23 часов."), DeletePVar(playerid, "biz_war_map");





		for(new b = 0; b < b_count; b ++)
		{
			DeletePVar(playerid, "biz_war_map");
			if(!IsPlayerInRangeOfPoint(playerid , 3.0 , b_info[b][b_position][0], b_info[b][b_position][1], b_info[b][b_position][2])) continue;

			new zone_name[32];
			GetPlayer2DZone(playerid, zone_name, 32);

			get_gz_pos(fX, fY, 80.0, mw_quad[0], mw_quad[1], mw_quad[2], mw_quad[3]);
			mw_gangzone = GangZoneCreate(mw_quad[0], mw_quad[1], mw_quad[2], mw_quad[3]);

			mw_attacker = PlayerInfo[playerid][member];
			mw_owner = b_info[b][b_mafia];

			GangZoneShowForAll(mw_gangzone, f_info[mw_owner -1][f_radar_color]);

			mw_time = 600;
			mw_biz = b;

			GangZoneFlashForAll(mw_gangzone, f_info[mw_attacker -1][f_radar_color]);

			mw_owner_points = 0;
			mw_attacker_points = 0;

			mafia_cd = 7200;


			new _string[144];
			format(_string, sizeof(_string), "{%s}%s начали захват бизнеса %s в месте %s у {%s}%s ",
			f_info[PlayerInfo[playerid][member] -1][f_chat_color],
			f_info[PlayerInfo[playerid][member] -1][f_name],
			b_info[b][b_name],
			zone_name,
			f_info[mw_owner -1][f_chat_color],
			f_info[mw_owner -1][f_name]);


			SendMafiaMessage(col_gray, _string);

			format(_string, sizeof(_string), "{%s}%s %s[%d] спровоцировал войну за бизнес.",
			f_info[PlayerInfo[playerid][member] -1][f_chat_color],

			f_rank[PlayerInfo[playerid][member] -1][PlayerInfo[playerid][rank] -1],
			PlayerInfo[playerid][name],
			playerid);
			SendMafiaMessage(col_gray, _string);


			format(_string, sizeof(_string), ""c_server"* S.INFO:"c_grey" %s начали захват бизнеса у %s",
			f_info[PlayerInfo[playerid][member] -1][f_name],
			f_info[mw_owner -1][f_name]);
			foreach(new j: admin_players) SendClientMessage(j, col_gray, _string);


			TextDrawSetString(mw_td[5], "BIZWAR_TIME:_10:00");
			TextDrawSetString(mw_td[14], mafia_td_name[PlayerInfo[playerid][member] -23]);
			TextDrawSetString(mw_td[15], mafia_td_name[mw_owner -23]);
			TextDrawSetString(mw_td[16], "0");
			TextDrawSetString(mw_td[17], "0");

			mw_owner_points = 0,
				mw_attacker_points	= 0;

			TextDrawColor(mw_td [10], f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
			TextDrawColor(mw_td [11], f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
			TextDrawColor(mw_td [12], f_info[mw_owner -1][f_radar_color]);
			TextDrawColor(mw_td [13], f_info[mw_owner -1][f_radar_color]);


			mw_timer = SetTimerEx("callback_mw_timer", 1000, 1, "i", b);




			return 1;
		}
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не находитесь у бизнеса.");
	}

	if(GetPVarInt(playerid, "map_mark"))
	{
		new get_taxidriver = GetPVarInt(playerid, "taxi_driver_id");
		SetPlayerRaceCheckpoint(get_taxidriver, 1, fX, fY, fZ, 0.0, 0.0, 0.0, 2.0);
		is_gps_used {get_taxidriver} = 1;
		SendClientMessage(get_taxidriver, col_white, ""c_server"* "c_white"Вам установили метку на карте, чтобы снять введите "c_grey"'/gps'"c_white".");
		SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы установили метку таксисту.");
		DeletePVar(playerid, "map_mark");
		DeletePVar(playerid, "taxi_driver_id");
		return 1;
	}

	if(PlayerInfo[playerid][admin] == 0) return 1;
	p_t_info[playerid][p_tp_immune_time] = 4;

	SetPlayerPosFindZ(playerid,fX,fY,fZ);
    SendClientMessage(playerid, col_gray, "* Вы были телепортированы по метке на карте.");
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	#if defined debug_mode
		printf("[DEBUG] [OnPlayerDeath] playerid:%d | killerid:%d | reason:%d", playerid, killerid, reason);
	#endif
	
    #if defined __anti_godmode
	antigm_OnPlayerDeath(playerid, killerid, reason);
	#endif

	reset_player_weapon(playerid);

	p_t_info[playerid][p_tp_immune_time] = 3;
	p_t_info[playerid][p_gun_immune_time] = 8;
	p_t_info[playerid][p_dialog] = -1;

	StopAudioStreamForPlayer(playerid);

	if(!GetPVarInt(playerid, "p_dead"))
	{
		if(IsPlayerToSquare(playerid, -891.3302, -2950.0190,2915.9917,560.3257)) SetPVarInt(playerid, "p_dead", 1);	 // LS
		else if(IsPlayerToSquare(playerid,-2929.6589,-2889.1660,-1326.9077,1493.1770)) SetPVarInt(playerid, "p_dead", 2); // SF
		else SetPVarInt(playerid, "p_dead", 3);	 // LV
		if(army_player(playerid)) SetPVarInt(playerid, "p_dead", 4);
		if(gang_player(playerid) && IsPlayerToSquare(playerid,1843.9275,-2205.1902,2960.9487,-954.5435)) SetPVarInt(playerid, "p_dead", 5);


		if(GetPVarInt(playerid, "exam_vehicle")!= 0)
		{
			is_leave_exam_vehicle {playerid} = 0;
			SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы допустили грубые ошибки, экзамен провален.");
			GameTextForPlayer(playerid, "~r~FAILED", 5000, 6);
			new vehicle_id = GetPVarInt(playerid, "exam_vehicle");
			DeletePVar(playerid, "exam_vehicle");
			DeletePVar(playerid, "driving_cp");
			DisablePlayerRaceCheckpoint(playerid);

			SetPVarInt(playerid, "p_dead", GetVehicleModel(vehicle_id));
			DestroyVehicle(vehicle_id);
		}
	}
	if(GetPVarInt(playerid, "filling_timer")!= 0)KillTimer(GetPVarInt(playerid, "filling_timer")), DeletePVar(playerid, "filling_timer");
	if(GetPVarInt(playerid,"Stol")) ExitBone(playerid);

	if(GetPVarInt(playerid, "p_h_bed") > 0)
	{
		h_bed_toggled[GetPVarInt(playerid, "p_h_bed")-1][GetPlayerVirtualWorld(playerid)-1] = false;
		DeletePVar(playerid, "p_h_bed");
	}
	if((gang_player(playerid)|| mafia_player(playerid)) && IsPlayerToSquare(playerid, 80.8047, 1762.5040, 390.7005, 2093.4778))
	{
		PlayerInfo[playerid][crim_ammo] = 0;
		PlayerInfo[playerid][crim_guns] = 0;
		SendClientMessage(playerid, col_gray, "* Перед отправкой в больницу солдаты изъяли у Вас патроны и оружие.");
	}

	if(GetPVarInt(playerid,"p_masked"))DeletePVar(playerid, "p_masked");

	if(PlayerInfo[playerid][timejob])
	{
		give_money(playerid, PlayerInfo[playerid][salary]);
		PlayerInfo[playerid][salary] = 0;
		if(PlayerInfo[playerid][timejob] == job_porter || PlayerInfo[playerid][timejob] == job_forklift)
		{
			give_money(playerid, PlayerInfo[playerid][salary]);
			insert_money_log(playerid, INVALID_PLAYER_ID, PlayerInfo[playerid][salary], "зп в порту");

			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы покинули территорию порта и завершили рабочую смену.");
			new __t_string[72];
			format(__t_string, sizeof(__t_string), ""c_green"* "c_white"Заработано: "c_green"%d$", PlayerInfo[playerid][salary]);
			SendClientMessage(playerid, col_white, __t_string);

			new pljob = PlayerInfo[playerid][timejob];

			PlayerInfo[playerid][timejob] = 0;
			PlayerInfo[playerid][salary] = 0;

			if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
			else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

			hide_payment(playerid);
			DisablePlayerCheckpoint(playerid);


			if(pljob == job_forklift)
			{
				if(forklift_ptd[playerid] != PlayerText:-1)
				{
					PlayerTextDrawDestroy(playerid, forklift_ptd[playerid]);
					TextDrawHideForPlayer(playerid, forklift_td);

					forklift_ptd[playerid] = PlayerText:-1;
					forklift_time[playerid] = -600;
				}
				new _v_id = player_rentcar[playerid];
				player_rentcar[playerid] = INVALID_VEHICLE_ID;

				SetVehicleToRespawn(_v_id);
				if(GetPVarInt(playerid, "fork_object"))
				{
					DestroyDynamicObject(GetPVarInt(playerid, "fork_object"));
					DeletePVar(playerid, "fork_object");
				}
			}
			else if(pljob == job_porter)
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
				ClearAnimations(playerid);
				DeletePVar(playerid, "have_factory_box");
			}

		}
		PlayerInfo[playerid][timejob] = job_none;
		if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
		DisablePlayerCheckpoint(playerid);

	}
	if(td_db[playerid][1] != PlayerText:-1)
	{
		for(new j = 0; j < 4; j ++)
		{
			PlayerTextDrawDestroy(playerid, td_db[playerid][j]);
			td_db[playerid][j] = PlayerText:-1;
		}
	}
	if(GetPVarInt(playerid, "PlayerCuffed")> 0)
	{
		DeletePVar(playerid, "PlayerCuffed");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		RemovePlayerAttachedObject(playerid, 1);
	}
	if(GetPVarInt(playerid, "PlayerTied")> 0)
	{
		DeletePVar(playerid, "PlayerTied");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	}

	is_ether {playerid} = 0; // отключаем эфир

	if(quest_photographer_id[playerid] != -1)
		EndJobPhotographer(playerid);
	if(p_t_info[playerid][phone_id] != INVALID_PLAYER_ID)
	{
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		SetPlayerSpecialAction(p_t_info[playerid][phone_id], SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(playerid, 2);
		RemovePlayerAttachedObject(p_t_info[playerid][phone_id], 2);

		SendClientMessage(p_t_info[playerid][phone_id], 0x940000FF, "Связь оборвалась...");
		me_action(p_t_info[playerid][phone_id], "положил(а) трубку", 5.0);

		p_t_info[p_t_info[playerid][phone_id]][phone_id] = INVALID_PLAYER_ID;
		p_t_info[p_t_info[playerid][phone_id]][phone_caller] = 0;

		p_t_info[playerid][phone_id] = INVALID_PLAYER_ID;
		p_t_info[playerid][phone_caller] = 0;
	}
	if(GetPVarInt(playerid, "p_sm_used")!= 0)
	{
		CancelSelectTextDraw(playerid);
		PlayerTextDrawDestroy(playerid, sm_ptd[playerid]);
		sm_ptd[playerid] = PlayerText:INVALID_TEXT_DRAW;
		for(new i = 0; i < 4; i ++)
		{
			TextDrawHideForPlayer(playerid, sm_td[i]);
		}
		sm_used[GetPVarInt(playerid, "p_sm_used")-1] = false;
		DeletePVar(playerid, "p_sm_used");
		DeletePVar(playerid, "sm_bet");
	}

	if(GetPVarInt(playerid, "p_skin_shop") == 1)
	{
		DeletePVar(playerid, "skin_select_number");
		DeletePVar(playerid, "p_skin_shop");

		TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
		set_world(playerid, 0);

		for(new i = 0; i < 19; i ++)
		{
			TextDrawHideForPlayer(playerid, td_skinshop[i]);
		}
		CancelSelectTextDraw(playerid);
		PlayerTextDrawDestroy(playerid, td_skinshop_price[playerid]);
		td_skinshop_price[playerid] = PlayerText:-1;
		SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
	}

	if(duel_opponent[playerid] != INVALID_PLAYER_ID)
	{
		new _text_string[144];
		format(_text_string, sizeof(_text_string), ""c_green"* "c_white"Вы одержали победу над "c_green"%s"c_white" и выиграли ставку в размере "c_green"%d$", PlayerInfo[playerid][name], duel_price[playerid]);
		SendClientMessage(duel_opponent[playerid], col_white, _text_string);

        set_health(playerid, 100);
        set_health(duel_opponent[playerid], 100);

		give_money(duel_opponent[playerid], duel_price[playerid]*2);
		insert_money_log(playerid, duel_opponent[playerid], duel_price[playerid], "дуэль");

		SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы проиграли дуэль.");

		if(PlayerInfo[duel_opponent[playerid]][jailed] > 0)
		{
			if(4 > PlayerInfo[duel_opponent[playerid]][jail] > 0)
			{
				new random_jail_pos = random(2);
				set_pos(duel_opponent[playerid], jail_spawn[random_jail_pos][0],
									jail_spawn[random_jail_pos][1],
									jail_spawn[random_jail_pos][2],
									jail_spawn[random_jail_pos][3],
									1, PlayerInfo[duel_opponent[playerid]][jail]);
				if(is_fraction_duty {duel_opponent[playerid]} == 1)SetPlayerSkin(duel_opponent[playerid], PlayerInfo[duel_opponent[playerid]][org_skin]), SetPlayerColor(duel_opponent[playerid], f_info[PlayerInfo[duel_opponent[playerid]][member] -1][f_radar_color]);
				else SetPlayerSkin(duel_opponent[playerid], PlayerInfo[duel_opponent[playerid]][skin]);
			}
			else if(PlayerInfo[duel_opponent[playerid]][jail] == 10)
			{
				set_pos(duel_opponent[playerid], 217.9972, 3082.9668, 658.7508, 268.2277, 2, 15);

				if(is_fraction_duty {duel_opponent[playerid]} == 1)SetPlayerSkin(duel_opponent[playerid], PlayerInfo[duel_opponent[playerid]][org_skin]), SetPlayerColor(duel_opponent[playerid], f_info[PlayerInfo[duel_opponent[playerid]][member] -1][f_radar_color]);
				else SetPlayerSkin(duel_opponent[playerid], PlayerInfo[duel_opponent[playerid]][skin]);
			}
		}
		else set_pos(duel_opponent[playerid], 2460.2515, -2120.6069, 13.5530, 354.7014, 0, 0);
		SetPVarInt(duel_opponent[playerid], "tp_area_used", 1);


		reset_player_weapon(duel_opponent[playerid]);
		for(new i = 0; i < 12; i ++)
		{
			give_weapon(duel_opponent[playerid], duel_guns[duel_opponent[playerid]][i][0], duel_guns[duel_opponent[playerid]][i][1]);
		}
		duel_price[playerid] = 0;
		duel_price[duel_opponent[playerid]] = 0;
		duel_opponent[duel_opponent[playerid]] = INVALID_PLAYER_ID;
		duel_opponent[playerid] = INVALID_PLAYER_ID;

		SetPVarInt(playerid, "p_dead", 322);
	}
	if(GetPVarInt(playerid, "fork_object"))
	{
		DestroyDynamicObject(GetPVarInt(playerid, "fork_object"));
		DeletePVar(playerid, "fork_object");
	}

	return 1;
}


public OnPlayerSpawn(playerid)
{
	#if defined __anti_godmode
	antigm_OnPlayerSpawn(playerid);
	#endif

	if(vk_checking {playerid} == 1)
	{
		show_dialog(playerid, d_vk_entrance, DIALOG_STYLE_INPUT, ""c_server"Код безопасности", ""c_white"Введите код безопасности, который был отправлен Вам Вконтакте:", "Войти", "Отмена");
	}
	else if(google_checking {playerid} == 1)
	{
		show_dialog(playerid, d_googleauth_entrance, DIALOG_STYLE_INPUT, ""c_server"Google Auth", ""c_white"Введите код из приложения:", "Вход", "Выйти");
	}
	#if defined debug_mode
		printf("[DEBUG] [OnPlayerSpawn] playerid:%d", playerid);
	#endif
	set_health(playerid, 100);
	SetPlayerScore(playerid, PlayerInfo[playerid][level]);
	SetPlayerSkills(playerid);
	p_t_info[playerid][p_tp_immune_time] = 4;
	p_t_info[playerid][p_gun_immune_time] = 8;

	if(!p_t_info[playerid][p_logged])
	{
		TogglePlayerSpectating(playerid, false);
		TogglePlayerControllable(playerid, true);
		set_world(playerid, playerid);
		SetPlayerPos(playerid, 203.8164, -128.2053, 1003.5259);
		set_interior(playerid, 0);
		SetPlayerFacingAngle(playerid, 143.130);
		TogglePlayerControllable(playerid, 0);
		SetPlayerSkin(playerid, registration_skins[reg_info[playerid][reg_national] -1][reg_info[playerid][reg_gender] -1][0]);

		SetPlayerCameraPos(playerid, 201.5432,-131.7309,1004.5259);
		SetPlayerCameraLookAt(playerid, 203.8164,-128.2053,1003.5259);

		SelectTextDraw(playerid, 0xB0C4DEFF);
		for(new i = 0; i <= 12; i ++)
		{
			TextDrawShowForPlayer(playerid, td_regskins[i]);
		}
		return 1;
	}
	if(anim_loaded {playerid} == 0)
	{
   		PreloadAnimLib(playerid,"BASEBALL");
   		PreloadAnimLib(playerid,"RAPPING");
    	PreloadAnimLib(playerid,"SHOP");
   		PreloadAnimLib(playerid,"BEACH");
   		PreloadAnimLib(playerid,"SMOKING");
    	PreloadAnimLib(playerid,"FOOD");
    	PreloadAnimLib(playerid,"ON_LOOKERS");
    	PreloadAnimLib(playerid,"DEALER");
		PreloadAnimLib(playerid,"CRACK");
		PreloadAnimLib(playerid,"CARRY");
		PreloadAnimLib(playerid,"COP_AMBIENT");
		PreloadAnimLib(playerid,"PARK");
		PreloadAnimLib(playerid,"INT_HOUSE");
		PreloadAnimLib(playerid,"BAR");
		PreloadAnimLib(playerid,"GHANDS");
		PreloadAnimLib(playerid,"BOMBER");
		PreloadAnimLib(playerid,"DANCING");
		PreloadAnimLib(playerid,"MISC");
		PreloadAnimLib(playerid,"ped");
		PreloadAnimLib(playerid,"DEALER");
		PreloadAnimLib(playerid,"BENCHPRESS");
		PreloadAnimLib(playerid,"GANGS");
		PreloadAnimLib(playerid,"INT_OFFICE");
		PreloadAnimLib(playerid,"RYDER");
		PreloadAnimLib(playerid,"PED");
		PreloadAnimLib(playerid,"CAR_CHAT");
		anim_loaded {playerid} = 1;
	}
	if(PlayerInfo[playerid][fight_style]) SetPlayerFightingStyle(playerid, PlayerInfo[playerid][fight_style]);
	else SetPlayerFightingStyle(playerid, 0);

	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, PlayerInfo[playerid][money]);

	SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

	if(GetPVarInt(playerid, "have_box")) DeletePVar(playerid, "have_box");
	if(GetPVarInt(playerid, "have_factory_box")) DeletePVar(playerid, "have_factory_box");
	if(GetPVarInt(playerid, "exam_vehicle")!= 0)DestroyVehicle(GetPVarInt(playerid, "exam_vehicle")), DeletePVar(playerid, "exam_vehicle");
	if(action_type {playerid} != 0)
	{
		action_td_status(playerid, false);
	}

	if(PlayerInfo[playerid][salary] != 0)
	{
		new _t_string[62];
		format(_t_string, sizeof(_t_string), "Вы получили за работу компенсацию в размере %d$.", PlayerInfo[playerid][salary]);
		SendClientMessage(playerid, 0xCCCCCCFF, _t_string);
		give_money(playerid, PlayerInfo[playerid][salary]);
		insert_money_log(playerid, INVALID_PLAYER_ID, PlayerInfo[playerid][salary], "компенсация ЗП");
		PlayerInfo[playerid][salary] = 0;
	}

	if(TeamPaint[playerid] > 0)
	{
	    switch(StartPaintBall)
	    {
	        case 0:
	        {
	            TeamPaint[playerid]=
				KillPaint[playerid]=
				DeathPaint[playerid] = 0;
				TextDrawHideForPlayer(playerid, PaintTextDraws);
				PlayerTextDrawDestroy(playerid, PaintStats[playerid]);
				PaintStats[playerid] = PlayerText:-1;
			}
			case 2:
			{
				SetPlayerHealth(playerid, 100.0);
				SetPlayerSkinEx(playerid, SkinPaint[PlayerInfo[playerid][gender]][TeamPaint[playerid] -1]);

				give_weapon(playerid, 24, 2000);
				give_weapon(playerid, 25, 2000);
				give_weapon(playerid, 31, 2000);

				new spawn = random(10);
				switch(TeamPaint[playerid])
				{
				    case 1:
					{
						set_pos(playerid, SpawnBlueTeam[PaintBallMap-1][spawn][0], SpawnBlueTeam[PaintBallMap-1][spawn][1], SpawnBlueTeam[PaintBallMap-1][spawn][2], SpawnBlueTeam[PaintBallMap-1][spawn][3], 0, 45);
						SetPlayerColor(playerid, 0x33AAFFFF);
					}
					case 2:
					{
						set_pos(playerid, SpawnRedTeam[PaintBallMap-1][spawn][0], SpawnRedTeam[PaintBallMap-1][spawn][1], SpawnRedTeam[PaintBallMap-1][spawn][2], SpawnRedTeam[PaintBallMap-1][spawn][3], 0, 45);
						SetPlayerColor(playerid, 0xAA3333FF);
					}
				}
				return 1;
			}
		}
	}


	if(PlayerInfo[playerid][admin] != 0 && GetPVarInt(playerid, "spectate_status")> 0)
	{
		DeletePVar(playerid, "spectate_status");
		set_pos(playerid, p_t_info[playerid][p_pos][0], p_t_info[playerid][p_pos][1], p_t_info[playerid][p_pos][2], p_t_info[playerid][p_pos][3], p_t_info[playerid][p_data][0], p_t_info[playerid][p_data][1]);
		CancelSelectTextDraw(playerid);
		ResetPlayerWeapons(playerid);
		is_control_chat{playerid} = in_recon_chat{playerid};
		for(new j = 0; j < 7; j ++)
		{
			TextDrawHideForPlayer(playerid, sp_td[j]);
			if(j < 3)
			{
				if(sp_ptd[playerid][j] != PlayerText:-1)PlayerTextDrawDestroy(playerid, sp_ptd[playerid][j]);
				sp_ptd[playerid][j] = PlayerText:-1;
			}
		}



		for(new i = 0; i < 12; i ++)
		{
			GivePlayerWeapon(playerid, p_t_info[playerid][p_gun_slot][i], p_t_info[playerid][p_gun_ammo][i]);
		}
		return 1;
	}
	reset_player_weapon(playerid);

	if(gang_player(playerid)|| mafia_player(playerid)|| radio_player(playerid))is_fraction_duty {playerid} = 1;
	else is_fraction_duty {playerid} = 0, SetPlayerColor(playerid, 0xFFFFFF80); // col_white
	if(gang_player(playerid)) give_weapon(playerid, 5, 1);
	if(PlayerInfo[playerid][jailed] > 0)
	{
		if(4 > PlayerInfo[playerid][jail] > 0)
		{
			new random_jail_pos = random(2);
			set_pos(playerid, jail_spawn[random_jail_pos][0],
								jail_spawn[random_jail_pos][1],
								jail_spawn[random_jail_pos][2],
								jail_spawn[random_jail_pos][3],
								1, PlayerInfo[playerid][jail]);
			if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]), SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
			else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
			return 1;
		}
		else if(PlayerInfo[playerid][jail] == 10)
		{
			set_pos(playerid, 217.9972, 3082.9668, 658.7508, 268.2277, 2, 15);

			if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]), SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
			else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
			return 1;
		}
	}
	if(GetPVarInt(playerid, "p_dead") == 5)DeletePVar(playerid, "p_dead");
	if(GetPVarInt(playerid, "p_dead") >= 1)
	{
		if(GetPVarInt(playerid, "p_dead") > 5)
		{

			switch(GetPVarInt(playerid, "p_dead"))
			{
				case 593:set_pos(playerid, 739.3827, -1414.3588, 1500.9509, 176.8004, 1, 3);
				case 473:set_pos(playerid, 739.3827, -1414.3588, 1500.9509, 176.8004, 1, 2);
				case 587:set_pos(playerid, 739.3827, -1414.3588, 1500.9509, 176.8004, 1, 1);
				case 322:
				{
					set_pos(playerid, 2460.2515, -2120.6069, 13.5530, 354.7014, 0, 0);
					SetPVarInt(playerid, "tp_area_used", 1);
					reset_player_weapon(playerid);
					for(new i = 0; i < 12; i ++)
					{
						give_weapon(playerid, duel_guns[playerid][i][0], duel_guns[playerid][i][1]);
					}
					if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]), SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
					else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

				}
			}

			DeletePVar(playerid, "p_dead");
			return 1;
		}
		else if(GetPVarInt(playerid, "p_dead") == 4)
		{
			set_pos(playerid, 1868.8661, 1348.5306, 2211.6094, 86.0880, 1, 1);
			set_health(playerid, 35.0);
			SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы попали в военный госпиталь, ожидайте полного восстановления здоровья, чтобы его покинуть.");
			return 1;
		}
		new random_h_pos = random(2);
		set_pos(playerid, hospital_spawn[random_h_pos][0],
							hospital_spawn[random_h_pos][1],
							hospital_spawn[random_h_pos][2],
							hospital_spawn[random_h_pos][3],
							0, PlayerInfo[playerid][hospital]);

		set_health(playerid, 15.0);

		if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]), SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
		else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

		SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вам придется пройти курс лечения или вылечиться у медика. Займите койку в палате для более эффективного лечения.");
		return 1;
	}
	if(GetPVarInt(playerid, "police_camid")||  GetPVarInt(playerid, "stop_comp"))
	{
		if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]), SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
		else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

		SetCameraBehindPlayer(playerid);
		set_pos(playerid, last_coord[playerid][0], last_coord[playerid][1], last_coord[playerid][2], last_coord[playerid][3], GetPVarInt(playerid, "last_interior"), GetPVarInt(playerid, "last_virtualworld"));
		DeletePVar(playerid, "police_camid");
		DeletePVar(playerid, "stop_comp");
		DeletePVar(playerid, "last_virtualworld");
		DeletePVar(playerid, "last_interior");
		return 1;
	}
	if(PlayerInfo[playerid][house] != -1 && PlayerInfo[playerid][spawnchange] == 1)
	{
		new h = PlayerInfo[playerid][house] -1;
		new hint = h_info[h][h_int] -1;

		if(is_fraction_duty{playerid} == 1)
		{
			SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
			SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
		}
		else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

		set_pos(playerid, house_int[hint][hspawn_position][0], house_int[hint][hspawn_position][1], house_int[hint][hspawn_position][2], house_int[hint][hspawn_position][3], house_int[hint][hint_int], h_info[h][h_id]);
		return SetPVarInt(playerid, !"house_id", PlayerInfo[playerid][house]);
	}

	if((PlayerInfo[playerid][member] || PlayerInfo[playerid][leader]) && PlayerInfo[playerid][spawnchange] == 2)
	{
		set_pos(playerid, f_info[PlayerInfo[playerid][member] -1][f_spawn][0], f_info[PlayerInfo[playerid][member] -1][f_spawn][1], f_info[PlayerInfo[playerid][member] -1][f_spawn][2], f_info[PlayerInfo[playerid][member] -1][f_spawn][3], f_info[PlayerInfo[playerid][member] -1][f_spawn_int], f_info[PlayerInfo[playerid][member] -1][f_spawn_virt]);

		if(is_fraction_duty{playerid} == 1)
		{
			SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
			SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
		}
		else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
		return 1;
	}

	new yacht_id = 0;
	foreach(new veh_id: player_vehicles[playerid])
	{
		if(!v_boat_int(veh_id)) continue;
		yacht_id = veh_id;
		break;
	}

	if(yacht_id && PlayerInfo[playerid][spawnchange] == 3)
	{
		is_player_in_boat[playerid] = yacht_id;

		if(is_fraction_duty{playerid} == 1)
		{
			SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
			SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
		}
		else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

		set_pos(playerid, 1390.1287, -24.9963, 1001.0063, 182.7941, 5, yacht_id);
		return 1;
	}

	if(PlayerInfo[playerid][rent_house] != -1 && PlayerInfo[playerid][spawnchange] == 4)
	{
		new h = PlayerInfo[playerid][rent_house] -1;
		new hint = h_info[h][h_int] -1;

		if(is_fraction_duty{playerid} == 1)
		{
			SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
			SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
		}
		else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

		set_pos(playerid, house_int[hint][hspawn_position][0], house_int[hint][hspawn_position][1], house_int[hint][hspawn_position][2], house_int[hint][hspawn_position][3], house_int[hint][hint_int], h_info[h][h_id]);
		return SetPVarInt(playerid, "house_id", PlayerInfo[playerid][rent_house]);
	}

    if(PlayerInfo[playerid][family])
    {
        if(family_info[PlayerInfo[playerid][family] -1][fam_house] != 0 && PlayerInfo[playerid][spawnchange] == 5)
        {
            new fi = family_info[PlayerInfo[playerid][family] -1][fam_house] -1;
            new fint = fi_info[fi][fi_int] -1;

			if(is_fraction_duty{playerid} == 1)
			{
				SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
				SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
			}
			else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

            set_pos(playerid, family_int[fint][fspawn_position][0], family_int[fint][fspawn_position][1], family_int[fint][fspawn_position][2], family_int[fint][fspawn_position][3], family_int[fint][fint_int], fi_info[fi][fi_id]);
            return SetPVarInt(playerid, !"island_id", fi + 1);
        }
    }

	if(PlayerInfo[playerid][level] < 4)
	{
		new i = random(3), j = random(3);
		if(i == 2)
			set_pos(playerid, newbie_spawn_pos[i][j][0], newbie_spawn_pos[i][j][1], newbie_spawn_pos[i][j][2], newbie_spawn_pos[i][j][3], 0, 1);
		else
			set_pos(playerid, newbie_spawn_pos[i][j][0], newbie_spawn_pos[i][j][1], newbie_spawn_pos[i][j][2], newbie_spawn_pos[i][j][3], 0, 0);

		if(GetPVarInt(playerid, !"faggio_info") == 1)
		{
			SetPlayerRaceCheckpoint(playerid, 1, faggio_spawn[i][0], faggio_spawn[i][1], faggio_spawn[i][2], 0.0, 0.0, 0.0, 2.0);
			SendClientMessage(playerid, col_white, !""scm_info"Метка успешно установлена.");
			is_gps_used{playerid} = 1;
			DeletePVar(playerid, !"faggio_info");
		}
		return 1;
	}
	else if(PlayerInfo[playerid][level] < 9)
	{
		set_pos(playerid, -1974.5082, 127.5515, 27.6940, 1.2225, 0, 0);
		return 1;
	}
	else
	{
		set_pos(playerid, 2845.8667 + random(3), 1290.7941 + random(3), 11.3906, 89.6243, 0, 0);
		return 1;
	}
}


public OnPlayerShootDynamicObject(playerid, weaponid, objectid, Float:x, Float:y, Float:z)
{
	#if defined debug_mode
		printf("[DEBUG] [OnPlayerShootDynamicObject] %d | %d | %d | %f | %f | %f", playerid, weaponid, objectid, Float:x, Float:y, Float:z);
	#endif
	return 1;
}


public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	if(hittype < 0 || hittype > 4) return 0;
	if(weaponid < 22 || weaponid > 38) return 0;

	new Float:z;
 	GetPlayerPos(playerid, z, z, z);

	if(!(-20000.0 <= z <= 20000.0)) return 0;

 	if(hittype == BULLET_HIT_TYPE_PLAYER || hittype == BULLET_HIT_TYPE_VEHICLE)
	{
		if((floatabs(fX) >= 10.0) || (floatabs(fY) >= 10.0) || (floatabs(fZ) >= 10.0) || (floatabs(fX) <= -10.0) || (floatabs(fY) <= -10.0) || (floatabs(fZ) <= -10.0))
		{
			return 0;
		}
	}

	switch(hittype)
	{
		case BULLET_HIT_TYPE_VEHICLE: if(!GetVehicleModel(hitid)) return 0;
		case BULLET_HIT_TYPE_OBJECT: if(!IsValidObject(hitid)) return 0;
		case BULLET_HIT_TYPE_PLAYER_OBJECT: if(!IsValidPlayerObject(playerid, hitid)) return 0;
	}

    #if defined __anti_godmode
	antigm_OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, fX, fY, fZ);
	#endif

	p_t_info[playerid][p_gun_shots] ++;

	if(player_practice{playerid} != 0 && hittype == BULLET_HIT_TYPE_PLAYER_OBJECT)
	{
		if(hitid == player_practice_object[playerid])
		{
			DestroyPlayerObject(playerid, player_practice_object[playerid]);
			KillTimer(player_practice_step_timer[playerid]);
			player_practice_step_timer[playerid] = SetTimerEx("practice_next_step", 4000, 0, "ii", playerid, true);
			PlayerPlaySound(playerid, 6401, 0.0, 0.0, 0.0);

			new object_cell = random(7);
			player_practice_object[playerid] = CreatePlayerObject(playerid, practice_objects_model[random(8)], practice_objects_pos[GetPracticeStep(playerid)][object_cell][0], practice_objects_pos[GetPracticeStep(playerid)][object_cell][1], practice_objects_pos[GetPracticeStep(playerid)][object_cell][2], practice_objects_pos[GetPracticeStep(playerid)][object_cell][3], practice_objects_pos[GetPracticeStep(playerid)][object_cell][4], practice_objects_pos[GetPracticeStep(playerid)][object_cell][5], 150.0);

			if(fZ > 1.4) gun_skill_up{playerid} += 3;
			else gun_skill_up{playerid} += 1;
		}
	}
	if(hittype == BULLET_HIT_TYPE_PLAYER && IsPlayerConnected(hitid))
	{
 		if(weaponid == 23 && (cop_player(playerid) || fbi_player(playerid)))
		{
			if(!GetPVarInt(hitid, !"PlayerCuffed") && is_tazered{hitid} == 0 && GetPlayerState(hitid) == PLAYER_STATE_ONFOOT)
			{
				ApplyAnimation(hitid, !"CRACK", !"crckdeth2", 4.0, 1, 0, 0, 0, 0);
				SetTimerEx("untazer_timer", 15000, false, "i", hitid);
				TogglePlayerControllable(hitid, 0);
				is_tazered{hitid} = 1;

				new _text_string[125];
				format(_text_string, sizeof(_text_string), ""scm_info"Вы оглушили гражданина "c_server"%s"c_white" на 15 секунд", PlayerInfo[hitid][name]);
				SendClientMessage(playerid, col_white, _text_string);

				format(_text_string, sizeof(_text_string), ""scm_info"Вы были оглушены "c_server"%s"c_white" на 15 секунд", PlayerInfo[playerid][name]);
				SendClientMessage(hitid, col_white, _text_string);
			}
	  	}

		p_t_info[playerid][p_gun_accuracy] ++;

		foreach(new i: admin_players)
		{
			if(GetPVarInt(i, !"spectate_status") == hitid + 1 && GetPVarInt(i, !"spectate_status") != 0) PlayerPlaySound(i, 6401, 0.0, 0.0, 0.0);
		}
	}
	else if(hittype == BULLET_HIT_TYPE_VEHICLE)
	{
 		if(weaponid == 23  && (cop_player(playerid) || fbi_player(playerid)))
		{
			SetTimerEx("un_ems_timer", 25000, false, "i", hitid);
			veh_info[hitid -1][v_ems] = true;

			if(veh_info[hitid -1][v_driver] != INVALID_PLAYER_ID) SendClientMessage(veh_info[hitid -1][v_driver], col_white, !""scm_info"Ваш автомобиль был поражён системой ЭМИ.");
		}
	}

	new slot = get_weapon_slot(weaponid);
	p_t_info[playerid][p_gun_ammo][slot] --;

	switch(weaponid)
	{
		case 23:
		{
			if(PlayerInfo[playerid][gun_skills][0] >= 100) return 1;
			gun_skill_up{playerid}++;
			if(gun_skill_up{playerid} >= 12)
			{
				gun_skill_up{playerid} = 0;
				PlayerInfo[playerid][gun_skills][0] ++;

				new _query[96];
				format(_query, 72, "~n~~n~~n~~n~~g~+1 ~w~SKILLS SD PISTOL ~n~ALL: ~g~ %i/100", PlayerInfo[playerid][gun_skills][0]);
				GameTextForPlayer(playerid, _query, 2000, 5);
				SetPlayerSkills(playerid);
			}
		}
		case 24:
		{
			if(PlayerInfo[playerid][gun_skills][1] >= 100) return 1;
			gun_skill_up{playerid}++;
			if(gun_skill_up{playerid} >= 12)
			{
				gun_skill_up{playerid} = 0;
				PlayerInfo[playerid][gun_skills][1] ++;

				new _query[96];
				format(_query, 72, "~n~~n~~n~~n~~g~+1 ~w~SKILLS DEAGLE ~n~ALL: ~g~ %i/100", PlayerInfo[playerid][gun_skills][1]);
				GameTextForPlayer(playerid, _query, 2000, 5);
				SetPlayerSkills(playerid);
			}
		}
		case 25:
		{
			if(PlayerInfo[playerid][gun_skills][2] >= 100) return 1;
			gun_skill_up{playerid}++;
			if(gun_skill_up{playerid} >= 12)
			{
				gun_skill_up{playerid} = 0;
				PlayerInfo[playerid][gun_skills][2] ++;

				new _query[96];
				format(_query, 72, "~n~~n~~n~~n~~g~+1 ~w~SKILLS SHOTGUN ~n~ALL: ~g~ %i/100", PlayerInfo[playerid][gun_skills][2]);
				GameTextForPlayer(playerid, _query, 2000, 5);
				SetPlayerSkills(playerid);
			}
		}
		case 29:
		{
			if(PlayerInfo[playerid][gun_skills][3] >= 100) return 1;
			gun_skill_up{playerid}++;
			if(gun_skill_up{playerid} >= 23)
			{
				gun_skill_up{playerid} = 0;
				PlayerInfo[playerid][gun_skills][3] ++;

				new _query[96];
				format(_query, 72, "~n~~n~~n~~n~~g~+1 ~w~SKILLS MP5 ~n~ALL: ~g~ %i/100", PlayerInfo[playerid][gun_skills][3]);
				GameTextForPlayer(playerid, _query, 2000, 5);
				SetPlayerSkills(playerid);
			}
		}
		case 30:
		{
			if(PlayerInfo[playerid][gun_skills][4] >= 100) return 1;
			gun_skill_up{playerid}++;
			if(gun_skill_up{playerid} >= 34)
			{
				gun_skill_up{playerid} = 0;
				PlayerInfo[playerid][gun_skills][4] ++;

				new _query[96];
				format(_query, 72, "~n~~n~~n~~n~~g~+1 ~w~SKILLS AK47 ~n~ALL: ~g~ %i/100", PlayerInfo[playerid][gun_skills][4]);
				GameTextForPlayer(playerid, _query, 2000, 5);
				SetPlayerSkills(playerid);
			}
		}
		case 31:
		{
			if(PlayerInfo[playerid][gun_skills][5] >= 100) return 1;
			gun_skill_up{playerid}++;
			if(gun_skill_up{playerid} >= 34)
			{
				gun_skill_up{playerid} = 0;
				PlayerInfo[playerid][gun_skills][5] ++;

				new _query[96];
				format(_query, 72, "~n~~n~~n~~n~~g~+1 ~w~SKILLS M4 ~n~ALL: ~g~ %i/100", PlayerInfo[playerid][gun_skills][5]);
				GameTextForPlayer(playerid, _query, 2000, 5);
				SetPlayerSkills(playerid);
			}
		}
		case 33:
		{
			if(PlayerInfo[playerid][gun_skills][6] >= 100) return 1;
			gun_skill_up{playerid}++;
			if(gun_skill_up{playerid} >= 20)
			{
				gun_skill_up{playerid} = 0;
				PlayerInfo[playerid][gun_skills][6] ++;

				new _query[96];
				format(_query, 72, "~n~~n~~n~~n~~g~+1 ~w~SKILLS RIFLE ~n~ALL: ~g~ %i/100", PlayerInfo[playerid][gun_skills][6]);
				GameTextForPlayer(playerid, _query, 2000, 5);
				SetPlayerSkills(playerid);
			}
		}
	}
	return 1;
}

public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{
	#if defined debug_mode
		printf("[DEBUG] [OnUnoccupiedVehicleUpdate] vehicleid:%d | playerid:%d | passenger_seat:%d", vehicleid, playerid, passenger_seat);
	#endif
	
	if(passenger_seat)
	{
		p_t_info[playerid][last_unoccup_tick] = GetTickCount();
		return 0;
	}

	veh_info[vehicleid -1][v_now_pos][0] = new_x;
    veh_info[vehicleid -1][v_now_pos][1] = new_y;
    veh_info[vehicleid -1][v_now_pos][2] = new_z;


    veh_info[vehicleid -1][v_velocity][0] = vel_x;
    veh_info[vehicleid -1][v_velocity][1] = vel_y;

	if(GetVehicleDistanceFromPoint(vehicleid,new_x, new_y, new_z) < 0.0) return 0;
	GetVehiclePos(vehicleid, new_x, new_y, new_z);
	if(!IsPlayerInRangeOfPoint(playerid, 10, new_x, new_y, new_z)) return 0;

	if(GetVehicleDistanceFromPoint(vehicleid, new_x, new_y, new_z)> 15.0)
	{
		new Float:pos_x, Float:pos_y, Float:pos_z;
		GetVehiclePos(vehicleid, pos_x, pos_y, pos_z);
		if(pos_z > -70.0) SetVehiclePos(vehicleid, pos_x, pos_y, pos_z);
		return 0;
 	}
	return 1;
}
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(p_t_info[playerid][p_dialog] != -1) return 1;
	if(playertextid == dice_ptd[playerid][18]) return show_dialog(playerid, d_dice_exit,DIALOG_STYLE_MSGBOX,""c_server"Предупреждение",""c_white"Если вы сделали ставку и игра уже началась, то деньги Вам возвращены не будут\n\n"c_grey"* Вы действительно хотите покинуть стол?", "Выйти", "Отмена");
	else if(playertextid == Passport_PTD[playerid][25])
	{
		for(new i = 0; i < 39; i++)
		{
		    PlayerTextDrawDestroy(playerid, Passport_PTD[playerid][i]);
		    Passport_PTD[playerid][i] = PlayerText:-1;
		    
			if(i < 6) TextDrawHideForPlayer(playerid, Passport_TD[i]);
		}
		CancelSelectTextDraw(playerid);
		
		DeletePVar(playerid, "show_pass");
	}
	else if(playertextid == dice_ptd[playerid][14])
	{
		if(GetPVarInt(playerid,"Krupje"))
		{
			new null = 0;
			for(new i; i < 5; i++) if(GetPVarInt(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][i],"InGame")) null++;
			if(null > 0) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"В данный момент вы не можете изменить ставку.");
			return show_dialog(playerid,d_dice_bet,1,""c_server"Установка ставки для игры",""c_white"Введите сумму для ставки\n\n"c_grey"* Ставка должна быть не менее 1000$ и не более 30.000.000$","Далее","Отмена");
		}
		if(!dice_info[GetPVarInt(playerid,"Stol")-1][b_bet]) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Ставка не установлена.");
		if(GetPVarInt(playerid,"InGame")) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Ты уже поставил ставку.");
		if(PlayerInfo[playerid][money] < dice_info[GetPVarInt(playerid,"Stol")-1][b_bet]) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Недостаточно средств.");
		if(dice_info[GetPVarInt(playerid,"Stol")-1][b_started] > 0) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Игра уже запущена.");
		give_money(playerid,-dice_info[GetPVarInt(playerid,"Stol")-1][b_bet]);
		insert_money_log(playerid, INVALID_PLAYER_ID, -dice_info[GetPVarInt(playerid,"Stol")-1][b_bet], "ставка кости");

		dice_info[GetPVarInt(playerid,"Stol")-1][b_bank] += dice_info[GetPVarInt(playerid,"Stol")-1][b_bet];
		SetPVarInt(playerid,"InGame",1);
		UpdateBone(GetPVarInt(playerid,"Stol")-1);
	}
	else if(playertextid == dice_ptd[playerid][15])
	{
		if(GetPVarInt(playerid,"Krupje"))
		{
			new null = 0;
			for(new i; i < 5; i++) if(GetPVarInt(dice_info[GetPVarInt(playerid,"Stol")-1][b_player][i],"InGame")) null++;
			if(null < 2) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Не хватает игроков для старта.");
			if(dice_info[GetPVarInt(playerid,"Stol")-1][b_started] > 0) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Игра уже запущена.");
			return dice_info[GetPVarInt(playerid,"Stol")-1][b_started] = 30;
		}
		else
		{
			if(!GetPVarInt(playerid,"InGame")) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Вы не поставили ставку.");
			if(dice_info[GetPVarInt(playerid,"Stol")-1][b_started] <= 0) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"В данный момент нельзя кинуть кости.");
			if(GetPVarInt(playerid,"InGame") > 1) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Вы уже кидали кубики в этом раунде.");
			new null = 0;
			SetPVarInt(playerid,"InGame",random(11) + 2);
			UpdateBone(GetPVarInt(playerid,"Stol")-1);
			foreach(new i:logged_players)
			{
				if(GetPVarInt(i,"Stol") == GetPVarInt(playerid,"Stol") && GetPVarInt(i,"InGame") == 1) null++;
			}
			if(!null) dice_info[GetPVarInt(playerid,"Stol")-1][b_started] = 4;
		}
	}

	if(GetPVarInt(playerid, "cm_used"))
	{
		if(playertextid == cm_ptd[playerid][53])
		{
			show_dialog(playerid,d_camikaze_exit,DIALOG_STYLE_MSGBOX,""c_server"Предупреждение",""c_white"Если вы сделали ставку и игра уже началась, то деньги Вам возвращены не будут\n\n"c_grey"* Для прекращения игры нажмите кнопку стоп-коэффициент\n"c_grey"* Вы действительно хотите покинуть игру?", "Выйти", "Отмена");
			return 1;
		}
		else if(playertextid == cm_ptd[playerid][37])
		{
			if(roulette_number[playerid] != 1) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Нельзя остановиться на данном коэффициенте, вы находитесь на другом этапе.");
			SetPVarInt(playerid, "cm_step", 1);
			show_dialog(playerid, d_camikaze_cfexit, DIALOG_STYLE_MSGBOX, ""c_server"Остановка игры", ""c_white"Ваш выигрыш будет рассчитан из данного коэффициента\n\n"c_grey"* Вы действительно хотите покинуть игру?", "Выйти", "Отмена");
			return 1;
		}
		else if(playertextid == cm_ptd[playerid][39])
		{
			if(roulette_number[playerid] != 2) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Нельзя остановиться на данном коэффициенте, вы находитесь на другом этапе.");
			SetPVarInt(playerid, "cm_step", 2);
			show_dialog(playerid, d_camikaze_cfexit, DIALOG_STYLE_MSGBOX, ""c_server"Остановка игры", ""c_white"Ваш выигрыш будет рассчитан из данного коэффициента\n\n"c_grey"* Вы действительно хотите покинуть игру?", "Выйти", "Отмена");
			return 1;
		}
		else if(playertextid == cm_ptd[playerid][41])
		{
			if(roulette_number[playerid] != 3) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Нельзя остановиться на данном коэффициенте, вы находитесь на другом этапе.");
			SetPVarInt(playerid, "cm_step", 3);
			show_dialog(playerid, d_camikaze_cfexit, DIALOG_STYLE_MSGBOX, ""c_server"Остановка игры", ""c_white"Ваш выигрыш будет рассчитан из данного коэффициента\n\n"c_grey"* Вы действительно хотите покинуть игру?", "Выйти", "Отмена");
			return 1;
		}
		else if(playertextid == cm_ptd[playerid][43])
		{
			if(roulette_number[playerid] != 4) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Нельзя остановиться на данном коэффициенте, вы находитесь на другом этапе.");
			SetPVarInt(playerid, "cm_step", 4);
			show_dialog(playerid, d_camikaze_cfexit, DIALOG_STYLE_MSGBOX, ""c_server"Остановка игры", ""c_white"Ваш выигрыш будет рассчитан из данного коэффициента\n\n"c_grey"* Вы действительно хотите покинуть игру?", "Выйти", "Отмена");
			return 1;
		}
		else if(playertextid == cm_ptd[playerid][45])
		{
			if(roulette_number[playerid] != 5) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Нельзя остановиться на данном коэффициенте, вы находитесь на другом этапе.");
			SetPVarInt(playerid, "cm_step", 5);
			show_dialog(playerid, d_camikaze_cfexit, DIALOG_STYLE_MSGBOX, ""c_server"Остановка игры", ""c_white"Ваш выигрыш будет рассчитан из данного коэффициента\n\n"c_grey"* Вы действительно хотите покинуть игру?", "Выйти", "Отмена");
			return 1;
		}
		else if(playertextid == cm_ptd[playerid][47])
		{
			if(roulette_number[playerid] != 6) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Нельзя остановиться на данном коэффициенте, вы находитесь на другом этапе.");
			SetPVarInt(playerid, "cm_step", 6);
			show_dialog(playerid, d_camikaze_cfexit, DIALOG_STYLE_MSGBOX, ""c_server"Остановка игры", ""c_white"Ваш выигрыш будет рассчитан из данного коэффициента\n\n"c_grey"* Вы действительно хотите покинуть игру?", "Выйти", "Отмена");
			return 1;
		}
		else if(playertextid == cm_ptd[playerid][49])
		{
			if(roulette_number[playerid] != 7) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Нельзя остановиться на данном коэффициенте, вы находитесь на другом этапе.");
			SetPVarInt(playerid, "cm_step", 7);
			show_dialog(playerid, d_camikaze_cfexit, DIALOG_STYLE_MSGBOX, ""c_server"Остановка игры", ""c_white"Ваш выигрыш будет рассчитан из данного коэффициента\n\n"c_grey"* Вы действительно хотите покинуть игру?", "Выйти", "Отмена");
			return 1;
		}
		else if(playertextid == cm_ptd[playerid][55])
		{
			show_dialog(playerid, d_cm_bet, 1, ""c_server"Ставка", ""c_white"Введите сумму, которую желаете поставить\n\n"c_grey"* Ставка должна быть не менее 1000$ и не более 50.000$", "Принять", "Отмена");
			return 1;
		}

		for(new j = 2; j < 37; j ++)
		{
			if(playertextid == cm_ptd[playerid][j])
			{
				if(roulette_bet[playerid] == 0) return  SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Для начала необходимо сделать ставку.");
				if(j >((roulette_number[playerid] + 1)* 5)+ 1 || j <((roulette_number[playerid] + 1)* 5)-3) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Данный слот недоступен, используйте другой.");

				new useless_point = random(5);
				new td_cell =((roulette_number[playerid] + 1)* 5)-5 + useless_point;



				if(random(5) ==  3)
				{
					cm_ptd[playerid][57 + roulette_number[playerid]] = CreatePlayerTextDraw(playerid, cm_td_pos[j -2][0], cm_td_pos[j -2][1], "LD_SPAC:white");
					PlayerTextDrawFont(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 5);
					PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], -1);
					PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 0);
					PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 1);
					PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 1);
					PlayerTextDrawTextSize(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 30.000000, 30.000000);
					PlayerTextDrawSetPreviewModel(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 1654);
					PlayerTextDrawSetPreviewRot(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 0.000000, 0.000000, 90.000000, 1.000000);
					PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 0);
					PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 0);


					PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], -16776961);
					PlayerTextDrawShow(playerid, cm_ptd[playerid][57 + roulette_number[playerid]]);
					roulette_number[playerid] = 0;
					roulette_bet[playerid] = 0;
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы проиграли в игру камикадзе, сделайте новую ставку и попробуйте снова.");

					SetTimerEx("kamikaze_reset", 1500, false, "d", playerid);

				}
				else if(useless_point != j -((roulette_number[playerid] + 1)* 5)+ 2 + 1)
				{
					cm_ptd[playerid][57 + roulette_number[playerid]] = CreatePlayerTextDraw(playerid, cm_td_pos[td_cell][0], cm_td_pos[td_cell][1], "LD_SPAC:white");
					PlayerTextDrawFont(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 5);
					PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], -1);
					PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 0);
					PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 1);
					PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 1);
					PlayerTextDrawTextSize(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 30.000000, 30.000000);
					PlayerTextDrawSetPreviewModel(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 1654);
					PlayerTextDrawSetPreviewRot(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 0.000000, 0.000000, 90.000000, 1.000000);
					PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 0);
					PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 0);

					PlayerTextDrawShow(playerid, cm_ptd[playerid][57 + roulette_number[playerid]]);
					if(roulette_number[playerid] != 6)
					{
						roulette_number[playerid] ++;
					}
					else
					{
						new win_count = floatround(roulette_bet[playerid]* 4.5);

						roulette_number[playerid] = 0;
						roulette_bet[playerid] = 0;

						give_money(playerid, win_count);
						insert_money_log(playerid, INVALID_PLAYER_ID, win_count, "выигрыш камикадзе");

						new scm_string[98];
						format(scm_string, sizeof(scm_string), ""c_green"* "c_white"Вы успешно прошли игру и забрали выигрыш в размере "c_green"%d$", win_count);
						SendClientMessage(playerid, col_white, scm_string);

						cm_status(playerid, false);
						return 1;
					}
				}
				else
				{
					cm_ptd[playerid][57 + roulette_number[playerid]] = CreatePlayerTextDraw(playerid, cm_td_pos[td_cell][0], cm_td_pos[td_cell][1], "LD_SPAC:white");
					PlayerTextDrawFont(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 5);
					PlayerTextDrawLetterSize(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], -1);
					PlayerTextDrawSetOutline(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 0);
					PlayerTextDrawSetProportional(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 1);
					PlayerTextDrawSetShadow(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 1);
					PlayerTextDrawTextSize(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 30.000000, 30.000000);
					PlayerTextDrawSetPreviewModel(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 1654);
					PlayerTextDrawSetPreviewRot(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 0.000000, 0.000000, 90.000000, 1.000000);
					PlayerTextDrawSetSelectable(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 0);
					PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], 0);
					PlayerTextDrawBackgroundColor(playerid, cm_ptd[playerid][57 + roulette_number[playerid]], -16776961);
					PlayerTextDrawShow(playerid, cm_ptd[playerid][57 + roulette_number[playerid]]);
					roulette_number[playerid] = 0;
					roulette_bet[playerid] = 0;
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы проиграли в игру камикадзе, сделайте новую ставку и попробуйте снова.");

					SetTimerEx("kamikaze_reset", 1500, false, "d", playerid);
				}
			}
		}
	}
	if(playertextid == ptd_policecam[playerid][25]) // Выбор камеры в ПД (Слежение по штату) (Назад)
	{
		new camid = GetPVarInt(playerid, "police_camid");
		if(camid == 0)camid = 11;
		else camid--;
		return show_cams(playerid, camid);
	}
	else if(playertextid == ptd_policecam[playerid][26]) // (Вперёд)
	{
		new camid = GetPVarInt(playerid, "police_camid");
		if(camid == 11)camid = 0;
		else camid++;
		return show_cams(playerid, camid);
	}
	else if(playertextid == ptd_policecam[playerid][20])
	{
		pdcam_status(playerid, false);
		CancelSelectTextDraw(playerid);
		return 1;
	}
	return 1;
}



public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	if(p_t_info[playerid][p_dialog] != -1) return 1;

	if(_:clickedid == INVALID_TEXT_DRAW)
	{
		if(GetPVarInt(playerid, "AuctionMenuEnabled") == 1)
		{
			HideAuctionTextDrawsForPlayer(playerid);
			CancelSelectTextDraw(playerid);
			SetPVarInt(playerid, "AuctionMenuEnabled", 0);

			return 1;
		}
		else if(CarMenuSelectedCar[playerid] != -1)
		{
			CarMenuSelectedCar[playerid] = -1;

			for(new i = 0; i < sizeof TextDrawCarMenu; i++) TextDrawHideForPlayer(playerid, TextDrawCarMenu[i]);

			return 1;
		}
		if(GetPVarInt(playerid, "Registartion") == 1 || GetPVarInt(playerid, "Autorization") == 1)
		{
		    SelectTextDraw(playerid, 0xB0C4DEFF);
		}
	}

	if(reg_info[playerid][reg_national] != 0)
	{
		if(!(_:clickedid ^ 0xFFFF)) return SelectTextDraw(playerid, 0xB0C4DEFF);
	}
	if(GetPVarInt(playerid, "tshop_type")> 0)
	{
		if(!(_:clickedid ^ 0xFFFF))
		{
			SelectTextDraw(playerid, 0xB0C4DEFF);
			return 1;
		}
	}
	if(dr_timer[playerid] != -1 || dr_slot_item[playerid][0] != 0 || GetPVarInt(playerid, "p_skin_shop") == 1 || GetPVarInt(playerid, "p_sm_used"))
	{
		if(!(_:clickedid ^ 0xFFFF))
		{
			SelectTextDraw(playerid, 0xB0C4DEFF);
			return 1;
		}
	}
	if(GetPVarInt(playerid,"Stol"))
	{
		if(!(_:clickedid ^ 0xFFFF))
		{
			show_dialog(playerid,d_dice_exit,DIALOG_STYLE_MSGBOX,""c_server"Предупреждение",""c_white"Если вы сделали ставку и игра уже началась, то деньги Вам возвращены не будут\n\n"c_grey"* Вы действительно хотите покинуть стол?", "Выйти", "Отмена");
			return SelectTextDraw(playerid, 0xB0C4DEFF);
		}
	}
	if(GetPVarInt(playerid, "cm_used"))
	{
		if(!(_:clickedid ^ 0xFFFF))
		{
			show_dialog(playerid,d_camikaze_exit,DIALOG_STYLE_MSGBOX,""c_server"Предупреждение",""c_white"Если вы сделали ставку и игра уже началась, то деньги Вам возвращены не будут\n\n"c_grey"* Для прекращения игры нажмите кнопку стоп-коэффициент\n"c_grey"* Вы действительно хотите покинуть игру?", "Выйти", "Отмена");
			return SelectTextDraw(playerid, 0xB0C4DEFF);
		}
		return 1;
	}
	if(GetPVarInt(playerid, "p_acc_listitem"))
	{
		if(!(_:clickedid ^ 0xFFFF))
		{
			show_dialog(playerid, d_accessories_exit,DIALOG_STYLE_MSGBOX,""c_server"Отказ от покупки",""c_white"Вы действительно желаете покинуть меню покупки аксессуаров?", "Выйти", "Отмена");
		}
	}
	if(GetPVarInt(playerid, "f_biz"))
	{
		if(!(_:clickedid ^ 0xFFFF))
		{
			toggle_controlable(playerid, true, false);
			for(new i = 0; i < 8; i ++)
			{
				if(i < 3)
				{
					PlayerTextDrawDestroy(playerid, filling_ptd[playerid][i]);
					filling_ptd[playerid][i] = PlayerText:-1;
				}
				TextDrawHideForPlayer(playerid, filling_td[i]);
			}
			TextDrawHideForPlayer(playerid, filling_td[5]);
			DeletePVar(playerid, "f_biz");
			filling_count {playerid} = 0;
			CancelSelectTextDraw(playerid);
			return 1;
		}
	}
	if(GetPVarInt(playerid, "tuning_opened")|| GetPVarInt(playerid, "ptuning_opened"))
	{
		if(!(_:clickedid ^ 0xFFFF))
		{
			SelectTextDraw(playerid, 0xB0C4DEFF);
			return 1;
		}
	}
 	if(clickedid == td_regskins[3])
	{
		new skin_count = GetPVarInt(playerid, "skin_select_number");
		if(skin_count == 0) return 1;
		SetPVarInt(playerid, "skin_select_number", skin_count -1);
		SetPlayerSkin(playerid, registration_skins[reg_info[playerid][reg_national] -1][reg_info[playerid][reg_gender] -1][skin_count -1]);
		return 1;
	}
	else if(clickedid == td_regskins[5])
	{
		new skin_count = GetPVarInt(playerid, "skin_select_number");
		if(skin_count == 4) return 1;
		SetPVarInt(playerid, "skin_select_number", skin_count + 1);
		SetPlayerSkin(playerid, registration_skins[reg_info[playerid][reg_national] -1][reg_info[playerid][reg_gender] -1][skin_count + 1]);
		return 1;
	}
	else if(clickedid == td_regskins[4])
	{
		reg_info[playerid][reg_skin] = registration_skins[reg_info[playerid][reg_national] -1][reg_info[playerid][reg_gender] -1][GetPVarInt(playerid, "skin_select_number")];

		DeletePVar(playerid, "skin_select_number");
		DeletePVar(playerid, "skin_selection");
		for(new i = 0; i <= 12; i ++)
		{
			TextDrawHideForPlayer(playerid, td_regskins[i]);
			CancelSelectTextDraw(playerid);
		}

		new ds_password[32], ds_email[32], ds_referal[MAX_PLAYER_NAME], ds_gender, ds_race, ds_skin, ds_age;
		format(ds_password, 32, "%s", reg_info[playerid][reg_password]);
		format(ds_email, 32, "%s", reg_info[playerid][reg_email]);
		format(ds_referal, 24, "%s", reg_info[playerid][reg_referal]);
		ds_gender = reg_info[playerid][reg_gender];
		ds_race = reg_info[playerid][reg_national];
		ds_skin = reg_info[playerid][reg_skin];
		ds_age = reg_info[playerid][reg_age];


		new query_string[299];
		mysql_format(sql_connection, query_string, sizeof(query_string), "INSERT INTO `users` (`u_name`,`u_password`,`u_ip_registration`,`u_date_registration`,`u_referal`,`u_gender`,`u_national`,`u_email`,`u_skin`,`u_age`) VALUES ('%s',MD5('%e'),'%s',NOW(),'%s','%d','%d','%e','%d','%d')",
		PlayerInfo[playerid][name], ds_password, p_t_info[playerid][p_ip], ds_referal, ds_gender -1, ds_race, ds_email, ds_skin, ds_age);
		mysql_query(sql_connection, query_string);

		mysql_format(sql_connection, query_string, 128, "SELECT * FROM `users` WHERE `u_name` = '%s' AND `u_password` = MD5('%e') LIMIT 1", PlayerInfo[playerid][name], ds_password);
		mysql_tquery(sql_connection, query_string, "load_user", "i", playerid);
		SetPVarInt(playerid, "first_entrance", 1);
		
		return 1;
	}
	else if(clickedid == td_tshop[15]) // exit
	{
		for(new j = 0; j < 4; j ++)
		{
			PlayerTextDrawHide(playerid, ptd_tshop [playerid][j]);
			PlayerTextDrawDestroy(playerid, ptd_tshop [playerid][j]);
			ptd_tshop [playerid][j] = PlayerText: -1;
		}
		DestroyVehicle(GetPVarInt(playerid, "tshop_car"));
		if(GetPVarInt(playerid, "tshop_car2")> 0)DestroyVehicle(GetPVarInt(playerid, "tshop_car2"));

		p_t_info[playerid][last_alt] = GetTickCount();

		SetPVarInt(playerid, "tp_area_used", 1);
		switch(GetPVarInt(playerid, "tshop_id"))
		{
			case 1: set_pos(playerid, 547.6648, -1278.8979, 16.9415, 0, 0, 0);
			case 2: set_pos(playerid, -1969.2168,294.0054,35.1719, 83.8790, 0, 0);
			case 3: set_pos(playerid, 2200.7791,1394.1847,11.0625, 178.9896, 0, 0);
			case 4: set_pos(playerid, 2888.9858,-365.2157,8.1380,88.1677, 0, 0);
			case 5: set_pos(playerid, -1396.3988,-544.6662,14.1484,216.0958, 0, 0);
		}

		for(new j = 0; j < 20; j ++)
		{
			TextDrawHideForPlayer(playerid, td_tshop[j]);
			TextDrawHideForPlayer(playerid, td_color_tshop[j]);
		}
		DeletePVar(playerid, "tshop_id"), DeletePVar(playerid, "tshop_type"), DeletePVar(playerid, "tshop_car"),DeletePVar(playerid, "tshop_car2"), DeletePVar(playerid, "tshop_list");
		CancelSelectTextDraw(playerid);
		return 1;
	}
	else if(clickedid == td_tshop[14])// Buy
	{
		return show_dialog(playerid, d_buy_autosalon, DIALOG_STYLE_LIST, !""scm_dialog"Автосалон", !""c_server"1 | "c_white"Личный транспорт\n"c_server"2 | "c_white"Семейный транспорт", !"Выбрать", !"Закрыть");
	}
	else if(clickedid == Carpass_TD[53])
	{
	    if(GetPVarInt(playerid, "pts_show") != 1) return 1;
	    
	    for(new i = 0; i < 62; i++)
		{
		    TextDrawHideForPlayer(playerid, Carpass_TD[i]);

			if(i < 7)
			{
				PlayerTextDrawDestroy(playerid, Carpass_PTD[playerid][i]);
				Carpass_PTD[playerid][i] = PlayerText:-1;
			}
		}
		DeletePVar(playerid, "pts_show");
		CancelSelectTextDraw(playerid);
	}
	else if(clickedid == td_tshop[7]) // >>
	{
		new ts_vehicle = GetPVarInt(playerid, "tshop_car"),
			ts_type = GetPVarInt(playerid, "tshop_type")-1,
			ts_list = GetPVarInt(playerid, "tshop_list");

		DestroyVehicle(ts_vehicle);

		if(t_shop_models[ts_list + 1][ts_type] == 0)ts_list = 0, SetPVarInt(playerid, "tshop_list", ts_list);
		else ts_list += 1, SetPVarInt(playerid, "tshop_list", ts_list);

		p_t_info[playerid][last_alt] = GetTickCount();

		new veh_id;

		veh_id = CreateVehicle(t_shop_models[ts_list][ts_type],
									 t_shop_pos[ts_type][0],
									 t_shop_pos[ts_type][1],
									 t_shop_pos[ts_type][2],
									 t_shop_pos[ts_type][3],
									 0, 0, -1);



		SetPVarInt(playerid, "tshop_car", veh_id);
		SetVehicleVirtualWorld(veh_id, playerid + 2);

		new td_string[32];
		format(td_string, sizeof(td_string), "%s", vehicle_name[t_shop_models[ts_list][ts_type] -400]);
		PlayerTextDrawSetString(playerid, ptd_tshop [playerid][0], td_string);
		format(td_string, sizeof(td_string), "$%d", GetModelPrice(t_shop_models[ts_list][ts_type]));
		PlayerTextDrawSetString(playerid, ptd_tshop [playerid][2], td_string);
		PlayerTextDrawSetPreviewModel(playerid, ptd_tshop [playerid][3], t_shop_models[ts_list][ts_type]);

		PlayerTextDrawHide(playerid, ptd_tshop [playerid][3]);
		PlayerTextDrawShow(playerid, ptd_tshop [playerid][3]);
		return 1;
	}
	else if(clickedid == td_tshop[6]) // <<
	{
		new ts_vehicle = GetPVarInt(playerid, "tshop_car"),
			ts_type = GetPVarInt(playerid, "tshop_type")-1,
			ts_list = GetPVarInt(playerid, "tshop_list");

		DestroyVehicle(ts_vehicle);

		if(ts_list == 0)
		{
			for(new j = 0; j < 42; j ++)
			{
				if(t_shop_models[j + 1][ts_type] == 0)
				{
					ts_list = j;
					break;
				}
			}
			SetPVarInt(playerid, "tshop_list", ts_list);
		}
		else ts_list -= 1, SetPVarInt(playerid, "tshop_list", ts_list);

		p_t_info[playerid][last_alt] = GetTickCount();
		new veh_id = CreateVehicle(t_shop_models[ts_list][ts_type],
									 t_shop_pos[ts_type][0],
									 t_shop_pos[ts_type][1],
									 t_shop_pos[ts_type][2],
									 t_shop_pos[ts_type][3],
									 0, 0, -1);

		SetPVarInt(playerid, "tshop_car", veh_id);

		SetVehicleVirtualWorld(veh_id, playerid + 2);

		new td_string[32];
		format(td_string, sizeof(td_string), "%s", vehicle_name[t_shop_models[ts_list][ts_type] -400]);
		PlayerTextDrawSetString(playerid, ptd_tshop [playerid][0], td_string);
		format(td_string, sizeof(td_string), "$%d", GetModelPrice(t_shop_models[ts_list][ts_type]));
		PlayerTextDrawSetString(playerid, ptd_tshop [playerid][2], td_string);
		PlayerTextDrawSetPreviewModel(playerid, ptd_tshop [playerid][3], t_shop_models[ts_list][ts_type]);

		PlayerTextDrawHide(playerid, ptd_tshop [playerid][3]);
		PlayerTextDrawShow(playerid, ptd_tshop [playerid][3]);
		return 1;
	}
	else if(clickedid == td_tshop[5]) // info
	{
		show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Информация:", "\
		"c_server"Информация о транспорте:\n\n\
		"c_server"-"c_white"Каждое транспортное средство облагается налогами. Оплатить их Вы сможете в банке или в банкомате.\n\
		В случае неуплаты налога Вы можете потерять часть своей собственности.\n\n\
		"c_server"-"c_white"По штату курсируют экипажи полиции.\n\
		В случае парковки или швартовки в неположенных местах, Ваше транспортное средство будет отправлено на штрафстоянку.\n\
		Припарковать транспортное средство Вы можете при помощи команды /vpark.\n\
		Настоятельно рекомендуем сделать это сразу после покупки транспорта.\n\n\
		"c_server"-"c_white"Каждый игрок может иметь 2 транспортных средства.\n\n\
		"c_server"* "c_grey"Вы ознакомились с информацией и желаете продолжить?", "Закрыть", "");
		return 1;
	}



	if(clickedid == td_tuning[4]) // Цвета авто (1)
	{
		new cam_pos = GetPVarInt(playerid, "tuning_page");
		if(cam_pos >= 2 &&  cam_pos <= 10)
		{
			for(new i = 46; i < 58; i ++)
			{
				TextDrawHideForPlayer(playerid, td_tuning[i]);
			}
		}
		if(cam_pos != 0 && cam_pos != 1)
		{
			InterpolateCameraPos(playerid, tuning_camera_positions[cam_pos -1][0], tuning_camera_positions[cam_pos -1][1], tuning_camera_positions[cam_pos -1][2], tuning_camera_positions[0][0], tuning_camera_positions[0][1], tuning_camera_positions[0][2], 1000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, tuning_camera_positions[cam_pos -1][3], tuning_camera_positions[cam_pos -1][4], tuning_camera_positions[cam_pos -1][5], tuning_camera_positions[0][3], tuning_camera_positions[0][4], tuning_camera_positions[0][5], 1000, CAMERA_MOVE);
		}
		SetPVarInt(playerid, "color_id", 1);
		if(cam_pos == 1) return 1;
		for(new i = 0; i <= 41; i ++)
		{
			TextDrawShowForPlayer(playerid, td_color[i]);
		}
		TextDrawShowForPlayer(playerid, td_tun_box);
		SetPVarInt(playerid, "tuning_page", 1);
	}
	else if(clickedid == td_tuning[7]) // Цвета авто (2)
	{
		new cam_pos = GetPVarInt(playerid, "tuning_page");
		if(cam_pos >= 2 &&  cam_pos <= 10)
		{
			for(new i = 46; i < 58; i ++)
			{
				TextDrawHideForPlayer(playerid, td_tuning[i]);
			}
		}
		if(cam_pos != 0 && cam_pos != 1)
		{
			InterpolateCameraPos(playerid, tuning_camera_positions[cam_pos -1][0], tuning_camera_positions[cam_pos -1][1], tuning_camera_positions[cam_pos -1][2], tuning_camera_positions[0][0], tuning_camera_positions[0][1], tuning_camera_positions[0][2], 1000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, tuning_camera_positions[cam_pos -1][3], tuning_camera_positions[cam_pos -1][4], tuning_camera_positions[cam_pos -1][5], tuning_camera_positions[0][3], tuning_camera_positions[0][4], tuning_camera_positions[0][5], 1000, CAMERA_MOVE);
		}
		SetPVarInt(playerid, "color_id", 2);
		if(cam_pos == 1) return 1;
		for(new i = 0; i <= 41; i ++)
		{
			TextDrawShowForPlayer(playerid, td_color[i]);
		}
		TextDrawShowForPlayer(playerid, td_tun_box);
		SetPVarInt(playerid, "tuning_page", 1);
	}
	else if(clickedid == td_tuning[10]) // paint jobs
	{
        if(!paintjob_available(GetVehicleModel(GetPlayerVehicleID(playerid)))) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Аэрография недоступна для модели вашего транспорта.");
		new cam_pos = GetPVarInt(playerid, "tuning_page");
		if(cam_pos == 1)
		{
			for(new i = 0; i <= 41; i ++)
			{
				TextDrawHideForPlayer(playerid, td_color[i]);
			}
			TextDrawHideForPlayer(playerid, td_tun_box);
		}
		if(cam_pos != 0 && cam_pos != 1)
		{
			InterpolateCameraPos(playerid, tuning_camera_positions[cam_pos -1][0], tuning_camera_positions[cam_pos -1][1], tuning_camera_positions[cam_pos -1][2], tuning_camera_positions[1][0], tuning_camera_positions[1][1], tuning_camera_positions[1][2], 1000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, tuning_camera_positions[cam_pos -1][3], tuning_camera_positions[cam_pos -1][4], tuning_camera_positions[cam_pos -1][5], tuning_camera_positions[1][3], tuning_camera_positions[1][4], tuning_camera_positions[1][5], 1000, CAMERA_MOVE);
		}
		SetPVarInt(playerid, "tuning_page", 2);
		if(cam_pos >= 2 && cam_pos <= 10) return 1;
		for(new i = 46; i < 58; i ++)
		{
			TextDrawShowForPlayer(playerid, td_tuning[i]);
		}
	}
	else if(clickedid == td_tuning[13]) // EXHAUST
	{
		if(!find_available_exhaust_slot(GetVehicleModel(GetPlayerVehicleID(playerid)), 0, true)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"На данную модель транспорта нет улучшенных систем выхлопа.");
		new cam_pos = GetPVarInt(playerid, "tuning_page");
		if(cam_pos == 1)
		{
			for(new i = 0; i <= 41; i ++)
			{
				TextDrawHideForPlayer(playerid, td_color[i]);
			}
			TextDrawHideForPlayer(playerid, td_tun_box);
		}
		if(cam_pos == 0)cam_pos = 1;
		InterpolateCameraPos(playerid, tuning_camera_positions[cam_pos -1][0], tuning_camera_positions[cam_pos -1][1], tuning_camera_positions[cam_pos -1][2], tuning_camera_positions[2][0], tuning_camera_positions[2][1], tuning_camera_positions[2][2], 1000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, tuning_camera_positions[cam_pos -1][3], tuning_camera_positions[cam_pos -1][4], tuning_camera_positions[cam_pos -1][5], tuning_camera_positions[2][3], tuning_camera_positions[2][4], tuning_camera_positions[2][5], 1000, CAMERA_MOVE);
		SetPVarInt(playerid, "tuning_page", 3);
		SetPVarInt(playerid, "component_id", 1);

		if(cam_pos >= 2 && cam_pos <= 10) return 1;
		for(new i = 46; i < 58; i ++)
		{
			TextDrawShowForPlayer(playerid, td_tuning[i]);
		}
	}
	else if(clickedid == td_tuning[16]) // BULLBARS
	{
		if(!find_available_bullbar_slot(GetVehicleModel(GetPlayerVehicleID(playerid)), 0, true)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"На данную модель транспорта нет усилителей бамперов.");
		new cam_pos = GetPVarInt(playerid, "tuning_page");
		if(cam_pos == 1)
		{
			for(new i = 0; i <= 41; i ++)
			{
				TextDrawHideForPlayer(playerid, td_color[i]);
			}
			TextDrawHideForPlayer(playerid, td_tun_box);
		}
		if(cam_pos == 0)cam_pos = 1;
		InterpolateCameraPos(playerid, tuning_camera_positions[cam_pos -1][0], tuning_camera_positions[cam_pos -1][1], tuning_camera_positions[cam_pos -1][2], tuning_camera_positions[3][0], tuning_camera_positions[3][1], tuning_camera_positions[3][2], 1000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, tuning_camera_positions[cam_pos -1][3], tuning_camera_positions[cam_pos -1][4], tuning_camera_positions[cam_pos -1][5], tuning_camera_positions[3][3], tuning_camera_positions[3][4], tuning_camera_positions[3][5], 1000, CAMERA_MOVE);
		SetPVarInt(playerid, "tuning_page", 4);
		SetPVarInt(playerid, "component_id", 1);

		if(cam_pos >= 2 && cam_pos <= 10) return 1;
		for(new i = 46; i < 58; i ++)
		{
			TextDrawShowForPlayer(playerid, td_tuning[i]);
		}
	}
	else if(clickedid == td_tuning[19]) // roof
	{
		if(!find_available_roof_slot(GetVehicleModel(GetPlayerVehicleID(playerid)), 0, true)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"На данную модель транспорта нет ковшей на крышу или капот.");
		new cam_pos = GetPVarInt(playerid, "tuning_page");
		if(cam_pos == 1)
		{
			for(new i = 0; i <= 41; i ++)
			{
				TextDrawHideForPlayer(playerid, td_color[i]);
			}
			TextDrawHideForPlayer(playerid, td_tun_box);
		}
		if(cam_pos == 0)cam_pos = 1;
		InterpolateCameraPos(playerid, tuning_camera_positions[cam_pos -1][0], tuning_camera_positions[cam_pos -1][1], tuning_camera_positions[cam_pos -1][2], tuning_camera_positions[4][0], tuning_camera_positions[4][1], tuning_camera_positions[4][2], 1000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, tuning_camera_positions[cam_pos -1][3], tuning_camera_positions[cam_pos -1][4], tuning_camera_positions[cam_pos -1][5], tuning_camera_positions[4][3], tuning_camera_positions[4][4], tuning_camera_positions[4][5], 1000, CAMERA_MOVE);
		SetPVarInt(playerid, "tuning_page", 5);
		SetPVarInt(playerid, "component_id", 1);

		if(cam_pos >= 2 && cam_pos <= 10) return 1;
		for(new i = 46; i < 58; i ++)
		{
			TextDrawShowForPlayer(playerid, td_tuning[i]);
		}
	}
	else if(clickedid == td_tuning[22]) // front bumper
	{
		if(!find_available_fb_slot(GetVehicleModel(GetPlayerVehicleID(playerid)), 0, true)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"На данную модель транспорта нет передних бамперов.");
		new cam_pos = GetPVarInt(playerid, "tuning_page");
		if(cam_pos == 1)
		{
			for(new i = 0; i <= 41; i ++)
			{
				TextDrawHideForPlayer(playerid, td_color[i]);
			}
			TextDrawHideForPlayer(playerid, td_tun_box);
		}
		if(cam_pos == 0)cam_pos = 1;
		InterpolateCameraPos(playerid, tuning_camera_positions[cam_pos -1][0], tuning_camera_positions[cam_pos -1][1], tuning_camera_positions[cam_pos -1][2], tuning_camera_positions[5][0], tuning_camera_positions[5][1], tuning_camera_positions[5][2], 1000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, tuning_camera_positions[cam_pos -1][3], tuning_camera_positions[cam_pos -1][4], tuning_camera_positions[cam_pos -1][5], tuning_camera_positions[5][3], tuning_camera_positions[5][4], tuning_camera_positions[5][5], 1000, CAMERA_MOVE);
		SetPVarInt(playerid, "tuning_page", 6);
		SetPVarInt(playerid, "component_id", 1);

		if(cam_pos >= 2 && cam_pos <= 10) return 1;
		for(new i = 46; i < 58; i ++)
		{
			TextDrawShowForPlayer(playerid, td_tuning[i]);
		}
	}
	else if(clickedid == td_tuning[25]) // rear bumper
	{
		if(!find_available_rear_bumper_slot(GetVehicleModel(GetPlayerVehicleID(playerid)), 0, true)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"На данную модель транспорта нет задних бамперов.");
		new cam_pos = GetPVarInt(playerid, "tuning_page");
		if(cam_pos == 1)
		{
			for(new i = 0; i <= 41; i ++)
			{
				TextDrawHideForPlayer(playerid, td_color[i]);
			}
			TextDrawHideForPlayer(playerid, td_tun_box);
		}
		if(cam_pos == 0)cam_pos = 1;
		InterpolateCameraPos(playerid, tuning_camera_positions[cam_pos -1][0], tuning_camera_positions[cam_pos -1][1], tuning_camera_positions[cam_pos -1][2], tuning_camera_positions[6][0], tuning_camera_positions[6][1], tuning_camera_positions[6][2], 1000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, tuning_camera_positions[cam_pos -1][3], tuning_camera_positions[cam_pos -1][4], tuning_camera_positions[cam_pos -1][5], tuning_camera_positions[6][3], tuning_camera_positions[6][4], tuning_camera_positions[6][5], 1000, CAMERA_MOVE);
		SetPVarInt(playerid, "tuning_page", 7);
		SetPVarInt(playerid, "component_id", 1);

		if(cam_pos >= 2 && cam_pos <= 10) return 1;
		for(new i = 46; i < 58; i ++)
		{
			TextDrawShowForPlayer(playerid, td_tuning[i]);
		}
	}
	else if(clickedid == td_tuning[28]) // spoiler
	{
		if(!find_available_spoiler_slot(GetVehicleModel(GetPlayerVehicleID(playerid)), 0, true)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"На данную модель транспорта нет спойлеров.");
		new cam_pos = GetPVarInt(playerid, "tuning_page");
		if(cam_pos == 1)
		{
			for(new i = 0; i <= 41; i ++)
			{
				TextDrawHideForPlayer(playerid, td_color[i]);
			}
			TextDrawHideForPlayer(playerid, td_tun_box);
		}
		if(cam_pos == 0)cam_pos = 1;
		InterpolateCameraPos(playerid, tuning_camera_positions[cam_pos -1][0], tuning_camera_positions[cam_pos -1][1], tuning_camera_positions[cam_pos -1][2], tuning_camera_positions[7][0], tuning_camera_positions[7][1], tuning_camera_positions[7][2], 1000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, tuning_camera_positions[cam_pos -1][3], tuning_camera_positions[cam_pos -1][4], tuning_camera_positions[cam_pos -1][5], tuning_camera_positions[7][3], tuning_camera_positions[7][4], tuning_camera_positions[7][5], 1000, CAMERA_MOVE);
		SetPVarInt(playerid, "tuning_page", 8);
		SetPVarInt(playerid, "component_id", 1);

		if(cam_pos >= 2 && cam_pos <= 10) return 1;
		for(new i = 46; i < 58; i ++)
		{
			TextDrawShowForPlayer(playerid, td_tuning[i]);
		}
	}
	else if(clickedid == td_tuning[31]) // sideskirt
	{
		if(!find_available_sideskirt_slot(GetVehicleModel(GetPlayerVehicleID(playerid)), 0, true)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"На данную модель транспорта нет боковых юбок.");
		new cam_pos = GetPVarInt(playerid, "tuning_page");
		if(cam_pos == 1)
		{
			for(new i = 0; i <= 41; i ++)
			{
				TextDrawHideForPlayer(playerid, td_color[i]);
			}
			TextDrawHideForPlayer(playerid, td_tun_box);
		}
		if(cam_pos == 0)cam_pos = 1;
		InterpolateCameraPos(playerid, tuning_camera_positions[cam_pos -1][0], tuning_camera_positions[cam_pos -1][1], tuning_camera_positions[cam_pos -1][2], tuning_camera_positions[8][0], tuning_camera_positions[8][1], tuning_camera_positions[8][2], 1000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, tuning_camera_positions[cam_pos -1][3], tuning_camera_positions[cam_pos -1][4], tuning_camera_positions[cam_pos -1][5], tuning_camera_positions[8][3], tuning_camera_positions[8][4], tuning_camera_positions[8][5], 1000, CAMERA_MOVE);
		SetPVarInt(playerid, "tuning_page", 9);
		SetPVarInt(playerid, "component_id", 1);

		if(cam_pos >= 2 && cam_pos <= 10) return 1;
		for(new i = 46; i < 58; i ++)
		{
			TextDrawShowForPlayer(playerid, td_tuning[i]);
		}
	}
	else if(clickedid == td_tuning[34]) // wheels
	{
		if(!find_available_wheels_slot(GetVehicleModel(GetPlayerVehicleID(playerid)), 0, true)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"На данную модель транспорта нет дисков.");
		new cam_pos = GetPVarInt(playerid, "tuning_page");
		if(cam_pos == 1)
		{
			for(new i = 0; i <= 41; i ++)
			{
				TextDrawHideForPlayer(playerid, td_color[i]);
			}
			TextDrawHideForPlayer(playerid, td_tun_box);
		}
		if(cam_pos == 0)cam_pos = 1;
		InterpolateCameraPos(playerid, tuning_camera_positions[cam_pos -1][0], tuning_camera_positions[cam_pos -1][1], tuning_camera_positions[cam_pos -1][2], tuning_camera_positions[9][0], tuning_camera_positions[9][1], tuning_camera_positions[9][2], 1000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, tuning_camera_positions[cam_pos -1][3], tuning_camera_positions[cam_pos -1][4], tuning_camera_positions[cam_pos -1][5], tuning_camera_positions[9][3], tuning_camera_positions[9][4], tuning_camera_positions[9][5], 1000, CAMERA_MOVE);
		SetPVarInt(playerid, "tuning_page", 10);
		SetPVarInt(playerid, "component_id", 1);

		if(cam_pos >= 2 && cam_pos <= 10) return 1;
		for(new i = 46; i < 58; i ++)
		{
			TextDrawShowForPlayer(playerid, td_tuning[i]);
		}
	}
	else if(clickedid == td_tuning[37]) // hydraulics
	{
		if(v_bike(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"На данную модель транспорта нельзя установить гидравлику.");
		new cam_pos = GetPVarInt(playerid, "tuning_page");
		if(cam_pos == 1)
		{
			for(new i = 0; i <= 41; i ++)
			{
				TextDrawHideForPlayer(playerid, td_color[i]);
			}
			TextDrawHideForPlayer(playerid, td_tun_box);
		}
		if(cam_pos >= 2 && cam_pos <= 10)
		{
			for(new i = 46; i < 58; i ++)
			{
				TextDrawHideForPlayer(playerid, td_tuning[i]);
			}
		}
		if(cam_pos == 0)cam_pos = 1;
		InterpolateCameraPos(playerid, tuning_camera_positions[cam_pos -1][0], tuning_camera_positions[cam_pos -1][1], tuning_camera_positions[cam_pos -1][2], tuning_camera_positions[10][0], tuning_camera_positions[10][1], tuning_camera_positions[10][2], 1000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, tuning_camera_positions[cam_pos -1][3], tuning_camera_positions[cam_pos -1][4], tuning_camera_positions[cam_pos -1][5], tuning_camera_positions[10][3], tuning_camera_positions[10][4], tuning_camera_positions[10][5], 1000, CAMERA_MOVE);
		SetPVarInt(playerid, "tuning_page", 11);
		show_dialog(playerid, d_tune, DIALOG_STYLE_MSGBOX, ""c_server"Гидравлика", ""c_white"Вы хотите установить гидравлику?\n"c_white"Цена: {33AA33}5000$\n\n"c_white"Установить?", "Далее", "Отмена");
	}
	else if(clickedid == td_tuning[40]) // nitro
	{
		if(v_bike(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"На данную модель транспорта нельзя установить закись азота.");
		new cam_pos = GetPVarInt(playerid, "tuning_page");
		if(cam_pos == 1)
		{
			for(new i = 0; i <= 41; i ++)
			{
				TextDrawHideForPlayer(playerid, td_color[i]);
			}
			TextDrawHideForPlayer(playerid, td_tun_box);
		}
		if(cam_pos >= 2 &&  cam_pos <= 10)
		{
			for(new i = 46; i < 58; i ++)
			{
				TextDrawHideForPlayer(playerid, td_tuning[i]);
			}
		}
		if(cam_pos == 0)cam_pos = 1;
		InterpolateCameraPos(playerid, tuning_camera_positions[cam_pos -1][0], tuning_camera_positions[cam_pos -1][1], tuning_camera_positions[cam_pos -1][2], tuning_camera_positions[11][0], tuning_camera_positions[11][1], tuning_camera_positions[11][2], 1000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, tuning_camera_positions[cam_pos -1][3], tuning_camera_positions[cam_pos -1][4], tuning_camera_positions[cam_pos -1][5], tuning_camera_positions[11][3], tuning_camera_positions[11][4], tuning_camera_positions[11][5], 1000, CAMERA_MOVE);
		SetPVarInt(playerid, "tuning_page", 12);
		show_dialog(playerid, d_tune, DIALOG_STYLE_MSGBOX, ""c_server"Закись азота", ""c_white"Вы хотите установить закись азота?\n"c_white"Цена: {33AA33}10000$\n\n"c_white"Установить?", "Далее", "Отмена");
	}

	else if(clickedid == td_tuning[44]) // exit
	{
		new cam_pos = GetPVarInt(playerid, "tuning_page");
		if(cam_pos == 1)
		{
			for(new i = 0; i <= 41; i ++)
			{
				TextDrawHideForPlayer(playerid, td_color[i]);
			}
			TextDrawHideForPlayer(playerid, td_tun_box);
		}
		if(cam_pos >= 2 &&  cam_pos <= 10)
		{
			for(new i = 46; i < 58; i ++)
			{
				TextDrawHideForPlayer(playerid, td_tuning[i]);
			}
		}
		for(new i = 0; i <= 45; i ++)
		{
			TextDrawHideForPlayer(playerid, td_tuning[i]);
		}

		new veh_id = GetPlayerVehicleID(playerid);
		switch(GetPVarInt(playerid, "tuning_opened"))
		{
			case 2:
			{
				SetVehiclePos(veh_id, 1643.7944,2196.8401,10.5474);
				SetVehicleZAngle(veh_id, 178);

			}
			case 1:
			{
				SetVehiclePos(veh_id, 853.3621,-595.1655,17.8995);
				SetVehicleZAngle(veh_id, 91);

			}
			case 3:
			{
				SetVehiclePos(veh_id, -1777.2560,1205.3750,24.8551);
				SetVehicleZAngle(veh_id, 90);

			}
		}
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		LinkVehicleToInterior(veh_id, 0);
		SetVehicleVirtualWorld(veh_id, 0);
		SetPlayerArmedWeapon(playerid, 0);
		CancelSelectTextDraw(playerid);

		DeletePVar(playerid, "tuning_opened");
 		DeletePVar(playerid, "paintjob_id");
		DeletePVar(playerid, "tuning_page");
		DeletePVar(playerid, "color_id");
		DeletePVar(playerid, "component_id");

		TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);


		new point = 0,
			_v_model = veh_info[player_vehicle[playerid] -1][v_model];

		for(new i = 0; i <= 91; i ++)
		{
			if(_v_model == legal_tuns[i][0])
			{
				point = i;
				break;
			}
		}
		for(new j = 0; j <= 44; j ++)
		{
			RemoveVehicleComponent(player_vehicle[playerid], legal_tuns[point][j]);
		}
		for(new i = 0; i < 10; i ++)
		{
			if(veh_info[player_vehicle[playerid] -1][v_component][i] == 0) continue;
			AddVehicleComponent(player_vehicle[playerid], veh_info[player_vehicle[playerid] -1][v_component][i]);
		}
		if(veh_info[player_vehicle[playerid] -1][v_paint] != 3)
		{
			n_ChangeVehicleColor(player_vehicle[playerid], veh_info[player_vehicle[playerid] -1][v_color][0], veh_info[player_vehicle[playerid] -1][v_color][1]);
			ChangeVehiclePaintjob(player_vehicle[playerid], veh_info[player_vehicle[playerid] -1][v_paint]);
		}
		else
		{
			ChangeVehiclePaintjob(player_vehicle[playerid], 3);
			n_ChangeVehicleColor(player_vehicle[playerid], veh_info[player_vehicle[playerid] -1][v_color][0], veh_info[player_vehicle[playerid] -1][v_color][1]);
		}


		if(v_velo(player_vehicle[playerid]) || v_plane(player_vehicle[playerid]) || v_boat(player_vehicle[playerid])) return 1;
		speedometr_status(playerid, true);
		speed_timer[playerid] = SetTimerEx("UpdatePlayerSpeedometr", 200, 1, "i", playerid);
	}



	else if(clickedid == td_tuning[49]) // Лево
	{
		new _v_id = GetPlayerVehicleID(playerid);
		new tuning_page = GetPVarInt(playerid, "tuning_page");
		if(tuning_page == 2)
		{
			new paint_id = GetPVarInt(playerid, "paintjob_id");
			if(paint_id == 0)ChangeVehiclePaintjob(_v_id, 2), SetPVarInt(playerid, "paintjob_id", 2);
			else ChangeVehiclePaintjob(_v_id, paint_id -1), SetPVarInt(playerid, "paintjob_id", GetPVarInt(playerid, "paintjob_id")-1);
		}
		else if(tuning_page == 3)
		{
			new point = 0,
				_v_model = veh_info[player_vehicle[playerid] -1][v_model];
			new _id = GetPVarInt(playerid, "component_id");

			for(new i = 0; i <= 91; i ++)
			{
				if(_v_model == legal_tuns[i][0])
				{
					point = i;
					break;
				}
			}
		    for(new i = _id; i != 0; i --)
			{
				if(i == 0)i = 28;
				for(new j = 0; j <= 44; j ++)
				{
					if(legal_tuns[point][j] == exhaust_models[i])
					{
						SetPVarInt(playerid, "component_id", i);
						AddVehicleComponent(_v_id, exhaust_models[i]);
						return 1;
					}
				}
			}
		}
		else if(tuning_page == 4)
		{
			new point = 0,
				_v_model = veh_info[player_vehicle[playerid] -1][v_model];
			new _id = GetPVarInt(playerid, "component_id");

			for(new i = 0; i <= 91; i ++)
			{
				if(_v_model == legal_tuns[i][0])
				{
					point = i;
					break;
				}
			}
		    for(new i = _id; i != 0; i --)
			{
				if(i == 0)i = 3;
				for(new j = 0; j <= 44; j ++)
				{
					if(legal_tuns[point][j] == bullbar_models[i])
					{
						SetPVarInt(playerid, "component_id", i);
						AddVehicleComponent(_v_id, bullbar_models[i]);
						return 1;
					}
				}
			}
		}
		else if(tuning_page == 5)
		{
			new point = 0,
				_v_model = veh_info[player_vehicle[playerid] -1][v_model];
			new _id = GetPVarInt(playerid, "component_id");

			for(new i = 0; i <= 91; i ++)
			{
				if(_v_model == legal_tuns[i][0])
				{
					point = i;
					break;
				}
			}
		    for(new i = _id; i != 0; i --)
			{
				if(i == 0)i = 15;
				for(new j = 0; j <= 44; j ++)
				{
					if(legal_tuns[point][j] == roof_models[i])
					{
						SetPVarInt(playerid, "component_id", i);
						AddVehicleComponent(_v_id, roof_models[i]);
						return 1;
					}
				}
			}
		}
		else if(tuning_page == 6)
		{
			new point = 0,
				_v_model = veh_info[player_vehicle[playerid] -1][v_model];
			new front_bumper_id = GetPVarInt(playerid, "component_id");

			for(new i = 0; i <= 91; i ++)
			{
				if(_v_model == legal_tuns[i][0])
				{
					point = i;
					break;
				}
			}
		    for(new i = front_bumper_id; i != 0; i --)
			{
				if(i == 0)i = 21;
				for(new j = 0; j <= 44; j ++)
				{
					if(legal_tuns[point][j] == front_bumper_models[i])
					{
						SetPVarInt(playerid, "component_id", i);
						AddVehicleComponent(_v_id, front_bumper_models[i]);
						return 1;
					}
				}
			}
		}
		else if(tuning_page == 7)
		{
			new point = 0,
				_v_model = veh_info[player_vehicle[playerid] -1][v_model];
			new _id = GetPVarInt(playerid, "component_id");

			for(new i = 0; i <= 91; i ++)
			{
				if(_v_model == legal_tuns[i][0])
				{
					point = i;
					break;
				}
			}
		    for(new i = _id; i != 0; i --)
			{
				if(i == 0)i = 21;
				for(new j = 0; j <= 44; j ++)
				{
					if(legal_tuns[point][j] == rear_bumper_models[i])
					{
						SetPVarInt(playerid, "component_id", i);
						AddVehicleComponent(_v_id, rear_bumper_models[i]);
						return 1;
					}
				}
			}
		}
		else if(tuning_page == 8)
		{
			new point = 0,
				_v_model = veh_info[player_vehicle[playerid] -1][v_model];
			new _id = GetPVarInt(playerid, "component_id");

			for(new i = 0; i <= 91; i ++)
			{
				if(_v_model == legal_tuns[i][0])
				{
					point = i;
					break;
				}
			}
		    for(new i = _id; i != 0; i --)
			{
				if(i == 0)i = 19;
				for(new j = 0; j <= 44; j ++)
				{
					if(legal_tuns[point][j] == spoiler_models[i])
					{
						SetPVarInt(playerid, "component_id", i);
						AddVehicleComponent(_v_id, spoiler_models[i]);
						return 1;
					}
				}
			}
		}
		else if(tuning_page == 9)
		{
			new point = 0,
				_v_model = veh_info[player_vehicle[playerid] -1][v_model];
			new _id = GetPVarInt(playerid, "component_id");

			for(new i = 0; i <= 91; i ++)
			{
				if(_v_model == legal_tuns[i][0])
				{
					point = i;
					break;
				}
			}
		    for(new i = _id; i != 0; i --)
			{
				if(i == 0)i = 41;
				for(new j = 0; j <= 44; j ++)
				{
					if(legal_tuns[point][j] == sideskirt_models[i])
					{
						SetPVarInt(playerid, "component_id", i);
						AddVehicleComponent(_v_id, sideskirt_models[i]);
						return 1;
					}
				}
			}
		}
		else if(tuning_page == 10)
		{
		    new wheels_id = GetPVarInt(playerid, "component_id");
		    if(wheels_id == 1)wheels_id = 16;
		    else wheels_id = wheels_id -1;
		    SetPVarInt(playerid, "component_id", wheels_id);
		    AddVehicleComponent(_v_id, tuning_wheels[wheels_id -1]);
		}
	}
	else if(clickedid == td_tuning[48]) // Право
	{
		new _v_id = GetPlayerVehicleID(playerid);
		new tuning_page = GetPVarInt(playerid, "tuning_page");
		if(tuning_page == 2)
		{
			new paint_id = GetPVarInt(playerid, "paintjob_id");
			if(paint_id == 2)ChangeVehiclePaintjob(_v_id, 0), SetPVarInt(playerid, "paintjob_id", 0);
			else ChangeVehiclePaintjob(_v_id, paint_id + 1), SetPVarInt(playerid, "paintjob_id", GetPVarInt(playerid, "paintjob_id")+ 1);
		}
		else if(tuning_page == 3)
		{
			new point = 0,
				_v_model = veh_info[player_vehicle[playerid] -1][v_model];
			new _id = GetPVarInt(playerid, "component_id");

			for(new i = 0; i <= 91; i ++)
			{
				if(_v_model == legal_tuns[i][0])
				{
					point = i;
					break;
				}
			}
		    for(new i = _id; i < 29; i ++)
			{
				if(i >= 28)i = 0;
				for(new j = 0; j <= 44; j ++)
				{
					if(legal_tuns[point][j] == exhaust_models[i])
					{
						SetPVarInt(playerid, "component_id", i + 2);
						AddVehicleComponent(_v_id, exhaust_models[i]);
						return 1;
					}
				}
			}
		}
		else if(tuning_page == 4)
		{
			new point = 0,
				_v_model = veh_info[player_vehicle[playerid] -1][v_model];
			new _id = GetPVarInt(playerid, "component_id");

			for(new i = 0; i <= 91; i ++)
			{
				if(_v_model == legal_tuns[i][0])
				{
					point = i;
					break;
				}
			}
		    for(new i = _id; i < 4; i ++)
			{
				if(i >= 3)i = 0;
				for(new j = 0; j <= 44; j ++)
				{
					if(legal_tuns[point][j] == bullbar_models[i])
					{
						SetPVarInt(playerid, "component_id", i + 2);
						AddVehicleComponent(_v_id, bullbar_models[i]);
						return 1;
					}
				}
			}
		}
		else if(tuning_page == 5)
		{
			new point = 0,
				_v_model = veh_info[player_vehicle[playerid] -1][v_model];
			new _id = GetPVarInt(playerid, "component_id");

			for(new i = 0; i <= 91; i ++)
			{
				if(_v_model == legal_tuns[i][0])
				{
					point = i;
					break;
				}
			}
		    for(new i = _id; i < 16; i ++)
			{
				if(i >= 15)i = 0;
				for(new j = 0; j <= 44; j ++)
				{
					if(legal_tuns[point][j] == roof_models[i])
					{
						SetPVarInt(playerid, "component_id", i + 2);
						AddVehicleComponent(_v_id, roof_models[i]);
						return 1;
					}
				}
			}
		}


		else if(tuning_page == 6)
		{
			new point = 0,
				_v_model = veh_info[player_vehicle[playerid] -1][v_model];
			new front_bumper_id = GetPVarInt(playerid, "component_id");

			for(new i = 0; i <= 91; i ++)
			{
				if(_v_model == legal_tuns[i][0])
				{
					point = i;
					break;
				}
			}
		    for(new i = front_bumper_id; i < 22; i ++)
			{
				if(i >= 21)i = 0;
				for(new j = 0; j <= 44; j ++)
				{
					if(legal_tuns[point][j] == front_bumper_models[i])
					{
						SetPVarInt(playerid, "component_id", i + 2);
						AddVehicleComponent(_v_id, front_bumper_models[i]);
						return 1;
					}
				}
			}
		}


		else if(tuning_page == 7)
		{
			new point = 0,
				_v_model = veh_info[player_vehicle[playerid] -1][v_model];
			new _id = GetPVarInt(playerid, "component_id");

			for(new i = 0; i <= 91; i ++)
			{
				if(_v_model == legal_tuns[i][0])
				{
					point = i;
					break;
				}
			}
		    for(new i = _id; i < 22; i ++)
			{
				if(i >= 21)i = 0;
				for(new j = 0; j <= 44; j ++)
				{
					if(legal_tuns[point][j] == rear_bumper_models[i])
					{
						SetPVarInt(playerid, "component_id", i + 2);
						AddVehicleComponent(_v_id, rear_bumper_models[i]);
						return 1;
					}
				}
			}
		}
		else if(tuning_page == 8)
		{
			new point = 0,
				_v_model = veh_info[player_vehicle[playerid] -1][v_model];
			new _id = GetPVarInt(playerid, "component_id");

			for(new i = 0; i <= 91; i ++)
			{
				if(_v_model == legal_tuns[i][0])
				{
					point = i;
					break;
				}
			}
		    for(new i = _id; i < 20; i ++)
			{
				if(i >= 19)i = 0;
				for(new j = 0; j <= 44; j ++)
				{
					if(legal_tuns[point][j] == spoiler_models[i])
					{
						SetPVarInt(playerid, "component_id", i + 2);
						AddVehicleComponent(_v_id, spoiler_models[i]);
						return 1;
					}
				}
			}
		}
		else if(tuning_page == 9)
		{
			new point = 0,
				_v_model = veh_info[player_vehicle[playerid] -1][v_model];
			new _id = GetPVarInt(playerid, "component_id");

			for(new i = 0; i <= 91; i ++)
			{
				if(_v_model == legal_tuns[i][0])
				{
					point = i;
					break;
				}
			}
		    for(new i = _id; i < 42; i ++)
			{
				if(i >= 41)i = 0;
				for(new j = 0; j <= 44; j ++)
				{
					if(legal_tuns[point][j] == sideskirt_models[i])
					{
						SetPVarInt(playerid, "component_id", i + 2);
						AddVehicleComponent(_v_id, sideskirt_models[i]);
						return 1;
					}
				}
			}
		}
		else if(tuning_page == 10)
		{
		    new wheels_id = GetPVarInt(playerid, "component_id");
		    if(wheels_id == 16)wheels_id = 1;
		    else wheels_id = wheels_id + 1;
		    SetPVarInt(playerid, "component_id", wheels_id);
		    AddVehicleComponent(_v_id, tuning_wheels[wheels_id -1]);
		}
	}


	else if(clickedid == td_tuning[47]) // select
	{
		new tuning_page = GetPVarInt(playerid, "tuning_page");
		if(tuning_page == 2)
		{
			show_dialog(playerid, d_tune, DIALOG_STYLE_MSGBOX, ""c_server"Покрасочная работа", ""c_white"Вы хотите установить данную покрасочную работу?\n"c_white"Цена: {33AA33}5000$\n\n"c_white"Установить?", "Далее", "Отмена");
		}
		else if(tuning_page == 3)
		{
			show_dialog(playerid, d_tune, DIALOG_STYLE_MSGBOX, ""c_server"Выхлоп", ""c_white"Вы хотите установить данный выхлоп?\n"c_white"Цена: {33AA33}15000$\n\n"c_white"Установить?", "Далее", "Отмена");
		}
		else if(tuning_page == 4)
		{
			show_dialog(playerid, d_tune, DIALOG_STYLE_MSGBOX, ""c_server"Усилитель бампера", ""c_white"Вы хотите установить данный усилитель бампера?\n"c_white"Цена: {33AA33}15000$\n\n"c_white"Установить?", "Далее", "Отмена");
		}
		else if(tuning_page == 5)
		{
			show_dialog(playerid, d_tune, DIALOG_STYLE_MSGBOX, ""c_server"Ковш", ""c_white"Вы хотите установить данный ковш?\n"c_white"Цена: {33AA33}15000$\n\n"c_white"Установить?", "Далее", "Отмена");
		}
		else if(tuning_page == 6)
		{
			show_dialog(playerid, d_tune, DIALOG_STYLE_MSGBOX, ""c_server"Передний бампер", ""c_white"Вы хотите установить данный передний бампер?\n"c_white"Цена: {33AA33}15000$\n\n"c_white"Установить?", "Далее", "Отмена");
		}
		else if(tuning_page == 7)
		{
			show_dialog(playerid, d_tune, DIALOG_STYLE_MSGBOX, ""c_server"Задний бампер", ""c_white"Вы хотите установить данный задний бампер?\n"c_white"Цена: {33AA33}15000$\n\n"c_white"Установить?", "Далее", "Отмена");
		}
		else if(tuning_page == 8)
		{
			show_dialog(playerid, d_tune, DIALOG_STYLE_MSGBOX, ""c_server"Спойлер", ""c_white"Вы хотите установить данный спойлер?\n"c_white"Цена: {33AA33}15000$\n\n"c_white"Установить?", "Далее", "Отмена");
		}
		else if(tuning_page == 9)
		{
			show_dialog(playerid, d_tune, DIALOG_STYLE_MSGBOX, ""c_server"Боковая юбка", ""c_white"Вы хотите установить данную боковую юбку?\n"c_white"Цена: {33AA33}15000$\n\n"c_white"Установить?", "Далее", "Отмена");
		}
		else if(tuning_page == 10)
		{
			show_dialog(playerid, d_tune, DIALOG_STYLE_MSGBOX, ""c_server"Диски", ""c_white"Вы хотите установить данные диски?\n"c_white"Цена: {33AA33}5000$\n\n"c_white"Установить?", "Далее", "Отмена");
		}
		return 1;
	}
	else if(clickedid == td_performance[10]) // engine
	{
		new _v_id = GetPlayerVehicleID(playerid);

		global_string[0] = EOS;
		new line_string[86];
		for(new i; i < 5; i ++)
		{
			if(veh_info[_v_id -1][v_pt_engine][i])
			{
				format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"Установлено\n", engine_ptune[i]);
			}
			else
			{
				format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"%d$\n", engine_ptune[i], engine_ptune_price[i]);
			}
			strcat(global_string, line_string);
		}
		show_dialog(playerid, d_tun_engine, DIALOG_STYLE_TABLIST, ""c_server"Производительность двигателя", global_string, "Купить", "Закрыть");
	}
	else if(clickedid == td_performance[15]) // brake
	{
		new _v_id = GetPlayerVehicleID(playerid);

		global_string[0] = EOS;
		new line_string[86];
		for(new i; i < 5; i ++)
		{
			if(veh_info[_v_id -1][v_pt_brake][i])
			{
				format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"Установлено\n", brake_ptune[i]);
			}
			else
			{
				format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"%d$\n", brake_ptune[i], brake_ptune_price[i]);
			}
			strcat(global_string, line_string);
		}
		show_dialog(playerid, d_tun_brake, DIALOG_STYLE_TABLIST, ""c_server"Тормозная система", global_string, "Купить", "Закрыть");
	}
	else if(clickedid == td_performance[20]) // stability
	{
		new _v_id = GetPlayerVehicleID(playerid);

		global_string[0] = EOS;
		new line_string[86];
		for(new i; i < 5; i ++)
		{
			if(veh_info[_v_id -1][v_pt_stability][i])
			{
				format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"Установлено\n", stability_ptune[i]);
			}
			else
			{
				format(line_string, sizeof(line_string), ""c_server"*"c_grey"%s\t"c_green"%d$\n", stability_ptune[i], stability_ptune_price[i]);
			}
			strcat(global_string, line_string);
		}
		show_dialog(playerid, d_tun_stability, DIALOG_STYLE_TABLIST, ""c_server"Усиление устойчивости", global_string, "Купить", "Закрыть");
	}
	else if(clickedid == td_performance[24]) // exit
	{
		for(new i = 0; i < 27; i ++)
		{
			TextDrawHideForPlayer(playerid, td_performance[i]);
		}
		SetPlayerArmedWeapon(playerid, 0);
		CancelSelectTextDraw(playerid);
		TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
		for(new i = 0; i < 6; i ++)
		{
			PlayerTextDrawDestroy(playerid, ptd_performance[playerid][i]);
			ptd_performance[playerid][i] = PlayerText:-1;
		}
		new veh_id = GetPlayerVehicleID(playerid);
		switch(GetPVarInt(playerid, "ptuning_opened"))
		{
			case 4:
			{
				SetVehiclePos(veh_id, 1623.6074,-1893.0588,13.2559);
				SetVehicleZAngle(veh_id, 64.7442);

			}
			case 5:
			{
				SetVehiclePos(veh_id, 2381.2910,1485.5522,10.5280);
				SetVehicleZAngle(veh_id, 179.7277);

			}
		}
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		LinkVehicleToInterior(veh_id, 0);
		SetVehicleVirtualWorld(veh_id, 0);
		SetPlayerArmedWeapon(playerid, 0);
		CancelSelectTextDraw(playerid);

		DeletePVar(playerid, "ptuning_opened");

		TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
		if(v_velo(veh_id)|| v_plane(veh_id)|| v_boat(veh_id)) return 1;
		speedometr_status(playerid, true);
		speed_timer[playerid] = SetTimerEx("UpdatePlayerSpeedometr", 200, 1, "i", playerid);
		SendClientMessage(playerid, col_gray, ""c_server"* "c_grey"Нажмите "c_server"\"CTRL\""c_grey", чтобы завести двигатель.");
		SendClientMessage(playerid, col_gray, ""c_server"* "c_grey"Нажмите "c_server"\"Y\""c_grey", чтобы открыть меню автомобиля.");
	}
	else if(clickedid == td_skinshop[2])
	{
		new skin_count = GetPVarInt(playerid, "skin_select_number");
		if(skin_count == 0)
		{
			if(PlayerInfo[playerid][gender] == 0)
			{
				skin_count = 70;
				SetPVarInt(playerid, "skin_select_number", 70);
				SetPlayerSkin(playerid, shop_skins[PlayerInfo[playerid][gender]][70]);
				new _td_string[12];
				format(_td_string, 12, "%d$", shop_skins_price[PlayerInfo[playerid][gender]][70]);
				PlayerTextDrawSetString(playerid, td_skinshop_price[playerid], _td_string);
				return 1;
			}
			else if(PlayerInfo[playerid][gender] == 1)
			{
				skin_count = 36;
				SetPVarInt(playerid, "skin_select_number", 36);
				SetPlayerSkin(playerid, shop_skins[PlayerInfo[playerid][gender]][36]);
				new _td_string[12];
				format(_td_string, 12, "%d$", shop_skins_price[PlayerInfo[playerid][gender]][36]);
				PlayerTextDrawSetString(playerid, td_skinshop_price[playerid], _td_string);
			}
		}
		SetPVarInt(playerid, "skin_select_number", skin_count -1);
		SetPlayerSkin(playerid, shop_skins[PlayerInfo[playerid][gender]][skin_count -1]);
		new _td_string[12];
		format(_td_string, 12, "%d$", shop_skins_price[PlayerInfo[playerid][gender]][skin_count -1]);
		PlayerTextDrawSetString(playerid, td_skinshop_price[playerid], _td_string);
		return 1;
	}
	else if(clickedid == td_skinshop[3])
	{
		new skin_count = GetPVarInt(playerid, "skin_select_number");
		if(PlayerInfo[playerid][gender] == 0)
		{
			if(skin_count == 70)
			{
				skin_count = 0;
				SetPVarInt(playerid, "skin_select_number", 0);
				SetPlayerSkin(playerid, shop_skins[PlayerInfo[playerid][gender]][0]);
				new _td_string[12];
				format(_td_string, 12, "%d$", shop_skins_price[PlayerInfo[playerid][gender]][0]);
				PlayerTextDrawSetString(playerid, td_skinshop_price[playerid], _td_string);


				return 1;
			}
		}
		else if(PlayerInfo[playerid][gender] == 1)
		{
			if(skin_count == 36)
			{
				skin_count = 0;
				SetPVarInt(playerid, "skin_select_number", 0);
				SetPlayerSkin(playerid, shop_skins[PlayerInfo[playerid][gender]][0]);
				new _td_string[12];
				format(_td_string, 12, "%d$", shop_skins_price[PlayerInfo[playerid][gender]][0]);
				PlayerTextDrawSetString(playerid, td_skinshop_price[playerid], _td_string);
				return 1;
			}
		}
		SetPVarInt(playerid, "skin_select_number", skin_count + 1);
		SetPlayerSkin(playerid, shop_skins[PlayerInfo[playerid][gender]][skin_count + 1]);
		new _td_string[12];
		format(_td_string, 12, "%d$", shop_skins_price[PlayerInfo[playerid][gender]][skin_count + 1]);
		PlayerTextDrawSetString(playerid, td_skinshop_price[playerid], _td_string);
		return 1;
	}
	else if(clickedid == td_skinshop[1])
	{
		new _d_str[128];
		format(_d_str, 128, ""c_white"Стоимость:\t"c_server"%d$\n\n{FFE8AD}Вы действительно желаете приобрести данную одежду?", shop_skins_price[PlayerInfo[playerid][gender]][GetPVarInt(playerid, "skin_select_number")]);
		show_dialog(playerid, d_buy_skin, DIALOG_STYLE_MSGBOX, ""c_server"Покупка одежды", _d_str, "Купить", "Назад");
		return 1;
	}
	else if(clickedid == td_skinshop[13])
	{
		DeletePVar(playerid, "skin_select_number");
		DeletePVar(playerid, "p_skin_shop");

		TogglePlayerControllable(playerid, true);
		SetCameraBehindPlayer(playerid);
		set_world(playerid, 0);

		for(new i = 0; i < 19; i ++)
		{
			TextDrawHideForPlayer(playerid, td_skinshop[i]);
		}
		CancelSelectTextDraw(playerid);
		PlayerTextDrawDestroy(playerid, td_skinshop_price[playerid]);
		td_skinshop_price[playerid] = PlayerText:-1;

		if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]), SetPlayerColor(playerid, f_info[PlayerInfo[playerid][member] -1][f_radar_color]);
		else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

		set_world(playerid, b_info[GetPVarInt(playerid, "p_biz_id")-1][b_id] + 1000);
		return 1;
	}
	else if(clickedid == filling_td[0])// +
	{
		if(filling_count {playerid} + veh_info[player_vehicle[playerid] -1][v_fuel]<= 99)
		{
			if(filling_count {playerid} + floatround(veh_info[player_vehicle[playerid] -1][v_fuel]) <= 95)
			{
				filling_count {playerid} += 5;
			}
			else
			{
				filling_count {playerid} = floatround(100 - veh_info[player_vehicle[playerid] -1][v_fuel]);
			}

			new ptd_text[16];
			format(ptd_text, 16, "FUEL %d/100", floatround(veh_info[player_vehicle[playerid] -1][v_fuel] + filling_count {playerid}));
			PlayerTextDrawSetString(playerid, filling_ptd[playerid][2], ptd_text);
			format(ptd_text, 16, "PRICE_%d$", filling_count {playerid} * b_info[GetPVarInt(playerid, "f_biz")][b_cost]);
			PlayerTextDrawSetString(playerid, filling_ptd[playerid][1], ptd_text);

			new Float:td_x =(veh_info[player_vehicle[playerid] -1][v_fuel] + filling_count {playerid})* 1.65;
			PlayerTextDrawTextSize(playerid, filling_ptd[playerid][0], td_x, 12.740739);
			PlayerTextDrawHide(playerid, filling_ptd[playerid][0]);
			PlayerTextDrawShow(playerid, filling_ptd[playerid][0]);
		}
	}
	else if(clickedid == filling_td[2])// -
	{
		if(filling_count {playerid} > 0)
		{
			if(filling_count {playerid} > 5)
			{
				filling_count {playerid} -= 5;
			}
			else filling_count {playerid} = 0;

			new ptd_text[16];
			format(ptd_text, 16, "FUEL %d/100", floatround(veh_info[player_vehicle[playerid] -1][v_fuel] + filling_count {playerid}));
			PlayerTextDrawSetString(playerid, filling_ptd[playerid][2], ptd_text);
			format(ptd_text, 16, "PRICE_%d$", filling_count {playerid} * b_info[GetPVarInt(playerid, "f_biz")][b_cost]);
			PlayerTextDrawSetString(playerid, filling_ptd[playerid][1], ptd_text);

			new Float:td_x =(veh_info[player_vehicle[playerid] -1][v_fuel] + filling_count {playerid})* 1.65;
			PlayerTextDrawTextSize(playerid, filling_ptd[playerid][0], td_x, 12.740739);
			PlayerTextDrawHide(playerid, filling_ptd[playerid][0]);
			PlayerTextDrawShow(playerid, filling_ptd[playerid][0]);
		}
		return 1;
	}
	else if(clickedid == filling_td[4])// fill
	{
		if(filling_count {playerid} == 0)
		{
			toggle_controlable(playerid, true, false);
			for(new i = 0; i < 8; i ++)
			{
				if(i < 3)
				{
					PlayerTextDrawDestroy(playerid, filling_ptd[playerid][i]);
					filling_ptd[playerid][i] = PlayerText:-1;
				}
				TextDrawHideForPlayer(playerid, filling_td[i]);
			}
			DeletePVar(playerid, "f_biz");
			CancelSelectTextDraw(playerid);
			return 1;
		}
		new b = GetPVarInt(playerid, "f_biz");
		new fill_price = filling_count {playerid} * b_info[b][b_cost];
		if(PlayerInfo[playerid][money] < fill_price) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас недостаточно средств для заправки.");
		give_money(playerid, -fill_price);
		insert_money_log(playerid, INVALID_PLAYER_ID, -fill_price, "заправка");


		b_info[b][b_product] -= filling_count {playerid};
		b_info[b][b_money] += fill_price;
		b_info[b][b_cash_today] += fill_price;

		for(new i = 0; i < 8; i ++)
		{
			if(i < 3)
			{
				PlayerTextDrawDestroy(playerid, filling_ptd[playerid][i]);
				filling_ptd[playerid][i] = PlayerText:-1;
			}
			TextDrawHideForPlayer(playerid, filling_td[i]);
		}


		SetPVarInt(playerid, "filling_timer", SetTimerEx("filling_timer", 500, 1, "ii", playerid, player_vehicle[playerid]));
		SendClientMessage(playerid, col_gray, "* Началась заправка Вашего транспортного средства. Ожидайте завершения...");

		DeletePVar(playerid, "f_biz");
		CancelSelectTextDraw(playerid);
		return 1;
	}
	else if(clickedid == sm_td[2])
	{
		if(GetPVarInt(playerid, "sm_started")) return 1;
		SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, true);
		CancelSelectTextDraw(playerid);
		PlayerTextDrawDestroy(playerid, sm_ptd[playerid]);
		sm_ptd[playerid] = PlayerText:INVALID_TEXT_DRAW;
		for(new i = 0; i < 4; i ++)
		{
			TextDrawHideForPlayer(playerid, sm_td[i]);
		}
		sm_used[GetPVarInt(playerid, "p_sm_used")-1] = false;
		DeletePVar(playerid, "p_sm_used");
		DeletePVar(playerid, "sm_bet");
		return 1;
	}
	else if(clickedid == sm_td[0])
	{
		if(GetPVarInt(playerid, "sm_started")) return 1;
		show_dialog(playerid, d_sm_bet, DIALOG_STYLE_INPUT, ""c_server"Размер ставки", ""c_white"Введите размер Вашей ставки:\n\n"c_grey"* Сумма ставки должна составлять от 1000$ до 15.000$", "Принять", "Отмена");
		return 1;
	}
	else if(clickedid == sm_td[1])
	{
		if(GetPVarInt(playerid, "sm_started")) return 1;

		new i =(GetPVarInt(playerid, "p_sm_used")* 2 +(GetPVarInt(playerid, "p_sm_used")-2)) -1;
		MoveDynamicObject(sm_slot[i], sm_slot_coord[i][0], sm_slot_coord[i][1], sm_slot_coord[i][2], 1, sm_slot_coord[i][3], sm_slot_coord[i][4], sm_slot_coord[i][5]);
		MoveDynamicObject(sm_slot[i + 1], sm_slot_coord[i + 1][0], sm_slot_coord[i + 1][1], sm_slot_coord[i + 1][2], 1, sm_slot_coord[i + 1][3], sm_slot_coord[i + 1][4], sm_slot_coord[i + 1][5]);
		MoveDynamicObject(sm_slot[i + 2], sm_slot_coord[i + 2][0], sm_slot_coord[i + 2][1], sm_slot_coord[i + 2][2], 1, sm_slot_coord[i + 2][3], sm_slot_coord[i + 2][4], sm_slot_coord[i + 2][5]);
		DeletePVar(playerid, "sm_bet");

		new td_string[64];
		format(td_string, 64, "bet:  %d$          cash:  %d$", GetPVarInt(playerid, "sm_bet"), PlayerInfo[playerid][money]);
		PlayerTextDrawSetString(playerid, sm_ptd[playerid], td_string);
		return 1;
	}
	else if(clickedid == sm_td[3])
	{
		if(GetPVarInt(playerid, "sm_started")) return 1;
		if(GetPVarInt(playerid, "sm_bet") ==  0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не сделали ставку!");
		if(PlayerInfo[playerid][money] < GetPVarInt(playerid, "sm_bet")) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас нет такого количества денег!");

		SetPVarInt(playerid, "sm_started", 1);
		new i = GetPVarInt(playerid, "p_sm_used")-1;

		MoveDynamicObject(sm_hand[i], sm_hand_coord[i][0], sm_hand_coord[i][1], sm_hand_coord[i][2] -0.30, 1, sm_hand_coord[i][3] + 20, sm_hand_coord[i][4], sm_hand_coord[i][5]);
		SetTimerEx("sm_hand_back", 1000, false, "idd", playerid, sm_hand[i], i);

  	}
	else if(clickedid == acc_td[4])
	{
		new acc_number = GetPVarInt(playerid, "p_acc_id"),
			acc_type = GetPVarInt(playerid, "p_acc_listitem")-1;

		if(accessories_items[acc_type][acc_number + 1] == 1)
		{
			acc_number = 0;
			SetPVarInt(playerid, "p_acc_id", 0);
			GiveItem(playerid, accessories_items[acc_type][0]);
			new _td_string[24];
			format(_td_string, 24, "PRICE:_~GR~%d$", accessories_items_price[acc_type][0]);
			PlayerTextDrawSetString(playerid, acc_ptd[playerid], _td_string);
			return 1;
		}
		GiveItem(playerid, accessories_items[acc_type][acc_number + 1]);
		SetPVarInt(playerid, "p_acc_id", acc_number + 1);
		new _td_string[24];
		format(_td_string, 24, "PRICE:_~GR~%d$", accessories_items_price[acc_type][acc_number + 1]);
		PlayerTextDrawSetString(playerid, acc_ptd[playerid], _td_string);
		return 1;
	}
	else if(clickedid == acc_td[2])
	{
		new acc_number = GetPVarInt(playerid, "p_acc_id"),
			acc_type = GetPVarInt(playerid, "p_acc_listitem")-1;

		if(acc_number == 0)
		{
			for(new j = 0; j < 50; j ++)
			{
				if(accessories_items[acc_type][j + 1] == 1)
				{
					acc_number = j;
					break;
				}
			}
			SetPVarInt(playerid, "p_acc_id", acc_number);
			GiveItem(playerid, accessories_items[acc_type][acc_number]);
			new _td_string[24];
			format(_td_string, 24, "PRICE:_~GR~%d$", accessories_items_price[acc_type][acc_number]);
			PlayerTextDrawSetString(playerid, acc_ptd[playerid], _td_string);
			return 1;
		}
		new _td_string[24];
		format(_td_string, 24, "PRICE:_~GR~%d$", accessories_items_price[acc_type][acc_number -1]);
		PlayerTextDrawSetString(playerid, acc_ptd[playerid], _td_string);
		GiveItem(playerid, accessories_items[acc_type][acc_number -1]);
		SetPVarInt(playerid, "p_acc_id", acc_number -1);
		return 1;
	}
	else if(clickedid == acc_td[3])
	{
		new _d_str[128];
		format(_d_str, 128, ""c_white"Стоимость аксессуара составляет -"c_green"%i$\n\n"c_grey"* Вы действительно желаете приобрести данный аксессуар?", accessories_items_price[GetPVarInt(playerid, "p_acc_listitem")-1][GetPVarInt(playerid, "p_acc_id")]);
		show_dialog(playerid, d_buy_accessories, DIALOG_STYLE_MSGBOX, ""c_server"Покупка аксессуаров", _d_str, "Купить", "Назад");
		return 1;
	}
	else if(clickedid == dr_td[40])
	{
		if(dr_timer[playerid] != -1 || p_t_info[playerid][p_dialog] != -1) return 1;
		for(new j = 0; j < 6; j ++)
		{
			PlayerTextDrawDestroy(playerid, dr_ptd[playerid][j]);
			dr_ptd[playerid][j] = PlayerText:-1;
		}
		for(new j = 0; j < 49; j ++)
		{
			TextDrawHideForPlayer(playerid, dr_td[j]);
		}
		dr_step[playerid] = 0;
		for(new j = 0; j < 5; j ++)
		{
			dr_slot_model[playerid][j] = 0;
			dr_slot_item[playerid][j] = 0;
			dr_veh_slot[playerid][j] = 0;
		}
		CancelSelectTextDraw(playerid);
		return 1;
	}
	else if(clickedid == dr_td[48])
	{
		if(dr_timer[playerid] != -1 || p_t_info[playerid][p_dialog] != -1) return 1;
		if(PlayerInfo[playerid][donate_roulette] == 0) return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет необходимого кол-ва очков для прокрутки рулетки.");
		dr_timer[playerid] = SetTimerEx("rd_refresh", 550, true, "i", playerid);
		dr_step[playerid] = RandomEx(20, 38);


		PlayerInfo[playerid][donate_roulette] -= 1;
		update_int_sql(playerid, "u_droulette", PlayerInfo[playerid][donate_roulette]);
		new ptd_str[32];
		format(ptd_str, 32, "GAME_ROULETT_POINTS:_%d", PlayerInfo[playerid][donate_roulette]);
		PlayerTextDrawSetString(playerid, dr_ptd [playerid][5], ptd_str);

		return 1;
	}

	if(GetPVarInt(playerid, "color_id")> 0)
	{
		for(new i = 0; i <= 41; i ++)
		{
			if(clickedid == td_color[i])
			{
				if(GetPVarInt(playerid, "color_id") ==  1)
				{
					new _v_id = GetPlayerVehicleID(playerid);
					ChangeVehicleColor(_v_id, car_colors[i], veh_info[_v_id -1][v_color][1]);
					SetPVarInt(playerid, "color_iter", i);
					show_dialog(playerid, d_tune, DIALOG_STYLE_MSGBOX, ""c_server"Цвет автомобиля", ""c_white"Вы хотите перекрасить автомобиль в этот цвет?\n"c_white"Цена: {33AA33}1000$\n\n"c_white"Покрасить?", "Далее", "Отмена");
					break;
				}
				else
				{
					new _v_id = GetPlayerVehicleID(playerid);
					ChangeVehicleColor(_v_id, veh_info[_v_id -1][v_color][0], car_colors[i]);
					SetPVarInt(playerid, "color_iter", i);
					show_dialog(playerid, d_tune, DIALOG_STYLE_MSGBOX, ""c_server"Цвет автомобиля", ""c_white"Вы хотите перекрасить автомобиль в этот цвет?\n"c_white"Цена: {33AA33}1000$\n\n"c_white"Покрасить?", "Далее", "Отмена");
					break;
				}
			}
		}
	}
	if(GetPVarInt(playerid, "tshop_type")> 0)
	{
		for(new i = 4; i < 20; i ++)
		{
			if(clickedid == td_color_tshop[i])
			{
				new ts_vehicle = GetPVarInt(playerid, "tshop_car");
				n_ChangeVehicleColor(ts_vehicle, t_shop_colors[i -4], t_shop_colors[i -4]);
				break;
			}
		}
	}
	
	for(new i = 0; i < MAX_VEHICLES_IN_PAGE; i++)
	{
		if(clickedid == AuctionGlobalTextDraws[i + 8])
		{
			PlayerInfo[playerid][pCurrentTake] = i + PlayerInfo[playerid][pCurrentPage] * MAX_VEHICLES_IN_PAGE;
			ShowVehicleInformation(playerid, PlayerInfo[playerid][pCurrentTake]);
			PlayerInfo[playerid][pIsOpenAuctionMenu] = true;

			return 1;
		}
	}

	if(clickedid == AuctionGlobalTextDraws[12])
	{
		if(PlayerInfo[playerid][pCurrentPage] == 0) return 1;

		new bureau = PlayerInfo[playerid][pBureau], string[4];
		PlayerInfo[playerid][pCurrentPage] --;

		for(new i = 0, veh = PlayerInfo[playerid][pCurrentPage] * MAX_VEHICLES_IN_PAGE; i < MAX_VEHICLES_IN_PAGE; i++, veh++)
		{
			PlayerTextDrawSetPreviewModel(playerid, AuctionPlayerTextDraws[playerid][i], bureauInfo[bureau][veh][bCarModel]);
			PlayerTextDrawSetPreviewVehCol(playerid, AuctionPlayerTextDraws[playerid][i], bureauInfo[bureau][veh][bColor1], bureauInfo[bureau][veh][bColor2]);

			PlayerTextDrawShow(playerid, AuctionPlayerTextDraws[playerid][i]);

			valstr(string, veh + 1);
			PlayerTextDrawSetString(playerid, AuctionPlayerTextDraws[playerid][i + 16], string);
		}

		format(string, sizeof string, "%d/"MAX_PAGES"", PlayerInfo[playerid][pCurrentPage] + 1);
		PlayerTextDrawSetString(playerid, AuctionPlayerTextDraws[playerid][3], string);

		return 1;
	}

	else if(clickedid == AuctionGlobalTextDraws[13])
	{
		if(PlayerInfo[playerid][pCurrentPage] == strval(MAX_PAGES) -1) return 1;

		new bureau = PlayerInfo[playerid][pBureau], string[4];
		PlayerInfo[playerid][pCurrentPage] ++;

		for(new i = 0, veh = PlayerInfo[playerid][pCurrentPage] * MAX_VEHICLES_IN_PAGE; i < MAX_VEHICLES_IN_PAGE; i++, veh++)
		{
			PlayerTextDrawSetPreviewModel(playerid, AuctionPlayerTextDraws[playerid][i], bureauInfo[bureau][veh][bCarModel]);
			PlayerTextDrawSetPreviewVehCol(playerid, AuctionPlayerTextDraws[playerid][i], bureauInfo[bureau][veh][bColor1], bureauInfo[bureau][veh][bColor2]);

			PlayerTextDrawShow(playerid, AuctionPlayerTextDraws[playerid][i]);

			valstr(string, veh + 1);
			PlayerTextDrawSetString(playerid, AuctionPlayerTextDraws[playerid][i + 16], string);
		}
		format(string, sizeof string, "%d/"MAX_PAGES"", PlayerInfo[playerid][pCurrentPage] + 1);
		PlayerTextDrawSetString(playerid, AuctionPlayerTextDraws[playerid][3], string);

		return 1;
	}

	else if(clickedid == AuctionGlobalTextDraws[41])
	{
		ShowVehicleInformation(playerid, PlayerInfo[playerid][pCurrentTake] + PlayerInfo[playerid][pCurrentPage] * MAX_VEHICLES_IN_PAGE);
		return 1;
	}

	else if(clickedid == AuctionGlobalTextDraws[42])
	{
		HideAuctionTextDrawsForPlayer(playerid);
		CancelSelectTextDraw(playerid);
		SetPVarInt(playerid, "AuctionMenuEnabled", 0);

		return 1;
	}

	else if(clickedid == AuctionGlobalTextDraws[43])
	{
		if(!bureauInfo[PlayerInfo[playerid][pBureau]][PlayerInfo[playerid][pCurrentTake]][bActive])
			return SendClientMessage(playerid, COLOR_GREY, !""scm_error"Данный аукцион уже закончен");

		new body[117],
			bureau = PlayerInfo[playerid][pBureau],
			vehicle = PlayerInfo[playerid][pCurrentTake],
			pname[MAX_PLAYER_NAME -3];
			
		strcat(pname, bureauInfo[bureau][vehicle][bRateInitiator]);

		format(body, sizeof body, ""c_server"Укажите ставку.\n\n"c_white"Текущая ставка:\t\t"c_green"%d$\n"c_white"Поставил:\t\t\t"c_server"%s", (bureauInfo[bureau][vehicle][bCurrentRate] == 0) ?
		bureauInfo[bureau][vehicle][bAuctionPrice] : bureauInfo[bureau][vehicle][bCurrentRate],
		isnull(pname) ? "COPART" : pname);

		show_dialog(playerid, d_to_do_rate, DIALOG_STYLE_INPUT, !""scm_dialog"Аукцион", body, !"ОК", !"Закрыть");
		return 1;
	}
	
	if(clickedid == TextDrawCarMenu[16]) // info press
	{
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны находиться в транспорте!");

	    new _v_id = GetPlayerVehicleID(playerid);

		if(veh_info[_v_id -1][v_owner] != PlayerInfo[playerid][id] || veh_info[_v_id -1][v_type] != vehicle_type_player) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны находиться в вашем личном транспорте!");

		show_pts(playerid, playerid);
		me_action(playerid, "посмотрел(-а) паспорт транспортного средства");

		return 1;
	}

	else if(clickedid == TextDrawCarMenu[19]) // lock press
	{
		new veh_id = CarMenuSelectedCar[playerid];

		new Float: pl_pos_x, Float: pl_pos_y, Float: pl_pos_z;
		GetPlayerPos(playerid, pl_pos_x, pl_pos_y, pl_pos_z);
		if(!IsVehicleInRangeOfPoint(veh_id, 5.0, pl_pos_x, pl_pos_y, pl_pos_z)) return SendClientMessage(playerid, COLOR_GREY, "Вы находитесь слишком далеко");

		if(v_boat(veh_id))
		{
			GameTextForPlayer(playerid, (veh_info[veh_id -1][v_locked]) ? "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~ BOAT UNLOCK" :
				"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~ BOAT LOCK", 3000, 3);
		}
		else
		{
			GameTextForPlayer(playerid, (veh_info[veh_id -1][v_locked]) ? "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~ CAR UNLOCK" :
				"~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~ CAR LOCK", 3000, 3);
		}

		new engine, lights, alarm, doors, bonnet, boot, objective;

		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
		veh_info[veh_id -1][v_locked] = !veh_info[veh_id -1][v_locked];
		GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(veh_id, engine, lights, alarm, veh_info[veh_id -1][v_locked], bonnet, boot, objective);
		me_action(playerid, (!veh_info[veh_id -1][v_locked]) ? "открыл(-а) транспорт" : "закрыл(-а) транспорт");

		return 1;
	}

	else if(clickedid == TextDrawCarMenu[22]) // bonnet press
	{
		new veh_id = CarMenuSelectedCar[playerid];

		new Float: pl_pos_x, Float: pl_pos_y, Float: pl_pos_z;
		GetPlayerPos(playerid, pl_pos_x, pl_pos_y, pl_pos_z);
		if(!IsVehicleInRangeOfPoint(veh_id, 5.0, pl_pos_x, pl_pos_y, pl_pos_z)) return SendClientMessage(playerid, col_white, !""scm_error"Вы находитесь слишком далеко");

		if(v_velo(veh_id)|| v_plane(veh_id)|| v_boat(veh_id)) return SendClientMessage(playerid, col_white, !""scm_error"Недоступно для данного транспорта");

		new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
		bonnet = !bonnet;
		SetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);

		me_action(playerid, (!bonnet) ? "закрыл(-а) капот" : "открыл(-а) капот");

		return 1;
	}

	else if(clickedid == TextDrawCarMenu[25])
	{
		new veh_id = CarMenuSelectedCar[playerid];

		new Float: pl_pos_x, Float: pl_pos_y, Float: pl_pos_z;
		GetPlayerPos(playerid, pl_pos_x, pl_pos_y, pl_pos_z);
		if(!IsVehicleInRangeOfPoint(veh_id, 5.0, pl_pos_x, pl_pos_y, pl_pos_z)) return SendClientMessage(playerid, col_white, !""scm_error"Вы находитесь слишком далеко");

		if(v_velo(veh_id)|| v_plane(veh_id)|| v_boat(veh_id)) return SendClientMessage(playerid, col_white, !""scm_error"Недоступно для данного транспорта.");

		new engine, lights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
		boot = !boot;
		SetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);

		me_action(playerid, (!boot) ? "закрыл(-а) багажник" : "открыл(-а) багажник");
	}

	/* Регистрация */
	
	else if(clickedid == Registration_TD[18])
	{
		// Пароль
		show_dialog(playerid, d_reg_pass, DIALOG_STYLE_INPUT, !""scm_dialog"Регистрация нового аккаунта", !""c_white"Добро пожаловать на "c_server"Elive Role Play"c_white"\nДля продолжения игры, Вам необходимо пройти простой этап регистрации.\n\nПожалуйста, введите Ваш будущий пароль ниже:\n\n"c_grey"\t-Длина пароля должна составлять от 6 до 15 символов.\n\t-Используйте цифры и латинские буквы разного регистра.\n\t-Мы не рекомендуем вводить пароль, который Вы используете на других ресурсах.", !"Далее", !"Назад");
	}
	else if(clickedid == Registration_TD[26])
	{
		// Mail
		if(GetPVarInt(playerid, "step_reg") != 1)
			return SendClientMessage(playerid, col_white, !""scm_error"Сначала придумайте пароль.");
			
        show_dialog(playerid, d_reg_email, DIALOG_STYLE_INPUT, ""scm_dialog"Регистрация нового аккаунта", ""c_white"Пожалуйста, введите Ваш действующий E-Mail:\n\n"c_grey"-E-Mail должен содержать следующие символы: '@' и '.'\n", !"Далее", !"Назад");
	}
	
	else if(clickedid == Registration_TD[34]) // Referal
	{
        show_dialog(playerid, d_reg_referal, DIALOG_STYLE_INPUT, !""scm_dialog"Регистрация нового аккаунта", ""c_white"Пожалуйста, введите имя игрока, который пригласил Вас на данный сервер\n\n"c_grey"-По достижению Вами 3 уровня игрок получит денежное вознаграждение\n", !"Далее", !"Пропустить");
	}
	
	else if(clickedid == Registration_TD[47]) // Race
	{
		if(GetPVarInt(playerid, "step_reg") != 2)
	    	return SendClientMessage(playerid, col_white, !""scm_error"Сначала введите почту.");
	    	
        show_dialog(playerid, d_reg_gender, DIALOG_STYLE_LIST, !""scm_dialog"Регистрация нового аккаунта", !"Мужской\nЖенский", !"Далее", !"Назад");
	}
	else if(clickedid == Registration_TD[48]) // Age
	{
		if(GetPVarInt(playerid, "step_reg") != 4)
  			return SendClientMessage(playerid, col_white, !""scm_error"Сначала выберите пол и расу.");
  			
	    show_dialog(playerid, d_reg_age, DIALOG_STYLE_INPUT, !""scm_dialog"Регистрация нового аккаунта", !""c_white"Пожалуйста, введите возраст персонажа в поле ниже:\n"c_grey"-Возраст персонажа должен быть не менее 18 и не более 32 лет.", !"Далее", !"Назад");
	}
	
	else if(clickedid == Registration_TD[10]) // Continue
	{
		if(GetPVarInt(playerid, "step_reg") != 5)
		    return SendClientMessage(playerid, col_white, !""scm_error"Вы не прошли все этапы регистрации.");

        clear_td_registration(playerid);
        
		DeletePVar(playerid, "step_reg");
        
		SetSpawnInfo(playerid, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
		return SpawnPlayer(playerid);
	}
	
	/*

		Авторизация

	*/
	
	else if(clickedid == Autorization_TD[18])
	{
		new dialog_string[176 + MAX_PLAYER_NAME];
		format(dialog_string, sizeof(dialog_string),"\
		"c_white"Добро пожаловать на сервер "c_server"Elive Role Play\n\n\
	    "c_server"-"c_white" Данный аккаунт зарегистрирован.\n\
	    "c_server"-"c_white" Ваш никнейм: %s\n\
		\n"c_grey"-Введите Ваш пароль:", PlayerInfo[playerid][name]);
		show_dialog(playerid, d_login, DIALOG_STYLE_PASSWORD, !""scm_dialog"Авторизация", dialog_string, !"Вход", !"Закрыть");
		return 1;
	}
	
	else if(clickedid == Autorization_TD[10])
	{
		new password_text[32];
		GetPVarString(playerid, "password_text", password_text, 32);
		DeletePVar(playerid, "password_text");
		
		KillTimer(GetPVarInt(playerid, "login_timer"));
		DeletePVar(playerid, "login_timer");
		
		new query_string[128];
			
		mysql_format(sql_connection, query_string, sizeof(query_string), "SELECT * FROM `users` WHERE `u_name` = '%s' AND `u_password` = MD5('%e') LIMIT 1", PlayerInfo[playerid][name], password_text);
		mysql_tquery(sql_connection, query_string, "load_user", "i", playerid);
		
	    return 1;
	}

	return 1;
}
public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid, bodypart)
{
	#if defined debug_mode
		printf("[DEBUG] [OnPlayerGiveDamage] playerid:%d | damagedid:%d | amount:%f | weaponid:%d", playerid, damagedid, amount, weaponid);
	#endif
	if(weaponid == 0 && GetPlayerState(playerid)!= PLAYER_STATE_ONFOOT) return 0;
	if(weaponid == 0 &&(GetPlayerDistanceToPlayer(playerid,damagedid)> 2 || amount > 6.71 || bodypart == 9)) return 0;
    if(weaponid == 20090) return 0;
    if(amount>1000000) return 0;


    #if defined __anti_godmode
	antigm_OnPlayerGiveDamage(playerid, damagedid, amount, weaponid, bodypart);
	#endif

 	if(damagedid != INVALID_PLAYER_ID && playerid != INVALID_PLAYER_ID && IsPlayerConnected(damagedid))
	{
		if(weaponid == 3 &&(cop_player(playerid)|| fbi_player(playerid)))
		{
		    if(!GetPVarInt(damagedid, "PlayerCuffed") && is_tazered {damagedid} == 0 && GetPlayerState(damagedid) ==  PLAYER_STATE_ONFOOT)
			{
				ApplyAnimation(damagedid, "CRACK",  "crckdeth2",  4.1,  0,  1,  1,  1,  1,  1);
		 		TogglePlayerControllable(damagedid, 0);
		   		is_tazered {damagedid} = 1;
                SetTimerEx("untazer_timer", 15000, false, "i", damagedid);

				new _text_string[48];
				format(_text_string, sizeof(_text_string), "оглушил(-а) дубинкой %s", PlayerInfo[damagedid][name]);
				me_action(playerid, _text_string);
			}
		}
	}
	return 1;
}
public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
	#if defined debug_mode
		printf("[DEBUG] [OnPlayerTakeDamage] playerid:%d | issuerid:%d | amount:%f | weaponid:%d | bodypart:%d", playerid, issuerid, amount, weaponid, bodypart);
	#endif
	#if defined __anti_godmode
	antigm_OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart);
	#endif
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	#if defined debug_mode
//		printf("[DEBUG] [OnPlayerKeyStateChange] playerid:%d | newkeys:%d | oldkeys:%d", playerid, newkeys, oldkeys);
	#endif
	#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
	if(((newkeys & KEY_WALK && newkeys & KEY_UP) || (newkeys & KEY_WALK && newkeys & KEY_DOWN) || (newkeys & KEY_WALK && newkeys & KEY_LEFT) || (newkeys & KEY_WALK && newkeys & KEY_RIGHT))
			|| ((oldkeys & KEY_WALK && newkeys & KEY_UP) || (oldkeys & KEY_WALK && newkeys & KEY_DOWN) || (oldkeys & KEY_WALK && newkeys & KEY_LEFT) || (oldkeys & KEY_WALK && newkeys & KEY_RIGHT))
			|| ((newkeys & KEY_WALK && oldkeys & KEY_UP) || (newkeys & KEY_WALK && oldkeys & KEY_DOWN) || (newkeys & KEY_WALK && oldkeys & KEY_LEFT) || (newkeys & KEY_WALK && oldkeys & KEY_RIGHT))
			&& GetPlayerState(playerid) == PLAYER_STATE_ONFOOT){
				walk_timer[playerid] = SetTimerEx("walking_style_callback",400,0,"d", playerid);
			}

	if(newkeys == KEY_CROUCH)
	{
		if(army_player(playerid)|| cop_player(playerid)|| fbi_player(playerid)|| gov_player(playerid))
		{
			for(new j = 0; j < 6; j ++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 10.0, barrier_pos[j][0][0], barrier_pos[j][0][1], barrier_pos[j][0][2]))
				{
					MoveDynamicObject(barrier_object[j], barrier_pos[j][0][0], barrier_pos[j][0][1], barrier_pos[j][0][2],
														0.07,barrier_pos[j][0][3], barrier_pos[j][0][4], barrier_pos[j][0][5]);

					SendClientMessage(playerid, col_gray, ""c_server"* "c_grey"Шлагбаум опустится в течение "c_server"10 секунд"c_grey".");

					SetTimerEx("barrier_callback", 10000, 0, "i", j);
					return 1;
				}
			}
		}
	}
	if(newkeys & KEY_WALK)
	{
		if((IsPlayerInRangeOfPoint(playerid, 1.5, 1396.0505,-15.1006,1000.9233) ||
			IsPlayerInRangeOfPoint(playerid, 1.5, 1391.9778,-15.0176,1000.9233) ||
			IsPlayerInRangeOfPoint(playerid, 1.5, 1393.3925,-12.5843,1000.9233) ||
			IsPlayerInRangeOfPoint(playerid, 1.5, 1397.2654,-12.5508,1000.9233)) &&
			(0 <= GetPlayerVirtualWorld(playerid) < 3))
		{
			if(runningAuctionsCount == 0) return SendClientMessage(playerid, col_white, !""scm_error"В данный момент не проходит аукцион (Приходите каждый день в 18:00).");

			PlayerInfo[playerid][pBureau] = GetPlayerVirtualWorld(playerid);

			ShowAuctionTextDrawsForPlayer(playerid, PlayerInfo[playerid][pBureau]);
			SelectTextDraw(playerid, 0x00FF00FF);

			SetPVarInt(playerid, "AuctionMenuEnabled", 1);
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 10.0, -1734.1409,37.3734,3.5547))
		{
			new text[33 * 18];

			for(new i = 0; i < sizeof(portInfo); i++)
			{
				if(portInfo[i][bRaterID] != PlayerInfo[playerid][id]) continue;

				strcat(text, vehicle_name[portInfo[i][bCarModel] -400]);
				strcat(text, "\t\t\t");
				strcat(text, portInfo[i][bActive] ? ""c_green"Доставлен" : ""c_red"Не доставлен");
				strcat(text, "\n");
			}
			if(isnull(text)) return SendClientMessage(playerid, col_white, !""scm_error"В ордере не найдены ваши заказы");

			return show_dialog(playerid, d_car_take, DIALOG_STYLE_LIST, !""scm_dialog"Порт", text, !"Выбрать", !"Выйти");
		}
	}
	switch(GetPlayerState(playerid))
	{
		case PLAYER_STATE_ONFOOT:
		{
			if(PRESSED(KEY_FIRE) &&
				GetPlayerCameraMode(playerid) == 46 &&
				quest_photographer_id[playerid] != -1 /*&&
				GetPlayerWeapon(playerid) == WEAPON_CAMERA*/)
			{
				new
					Float: x_pos,
					Float: y_pos,
					Float: z_pos,
					Float: x_player_pos,
					Float: y_player_pos,
					Float: z_player_pos,
					Float: fVX,
					Float: fVY,
					Float: fVZ,
					Float: object_x,
					Float: object_y,
					Float: object_z,
					Float: fPX,
					Float: fPY,
					Float: fPZ,
					cache_math_1,
					cache_math_2;

				new count_photo = counter_photos_taken{playerid};
				new id_quest = quest_photographer_id[playerid] + count_photo;

				#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
					printf("After shift | OnPlayerKeyStateChange | id_quest: %d", id_quest);
				#endif

				id_quest += ShiftIndexArray(playerid, id_quest);

				if(id_quest == QUEST_PRIEST + 1 && count_photo == 1)
					id_quest -= 1;

				#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
					printf("Before shift | OnPlayerKeyStateChange | id_quest: %d", id_quest);
				#endif

				x_pos = photographer_job_info[id_quest][pjXCentr];
				y_pos = photographer_job_info[id_quest][pjYCentr];
				z_pos = photographer_job_info[id_quest][pjZCentr];

				#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
					printf("OnPlayerKeyStateChange | x_centr: %f | y_centr: %f | z_centr: %f", x_pos, y_pos, z_pos);
				#endif

				GetPlayerCameraPos(playerid, fPX, fPY, fPZ);

				GetPlayerCameraFrontVector(playerid, fVX, fVY, fVZ);

				GetPlayerPos(playerid, x_player_pos, y_player_pos, z_player_pos);
				new Float: fScale = VectorSize(x_pos -fPX, y_pos -fPY, z_pos -fPZ);

				object_x = fPX + floatmul(fVX, fScale);
				object_y = fPY + floatmul(fVY, fScale);
				object_z = fPZ + floatmul(fVZ, fScale);

				#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
					printf("OnPlayerKeyStateChange | end_x: %f | end_y: %f | end_z: %f", object_x, object_y, object_z);
				#endif

				#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
					printf("OnPlayerKeyStateChange | IsPointInDynamicArea: %d | IsPointInDynamicArea: %d", IsPointInDynamicArea(dynamic_area_photographer_job[playerid], object_x, object_y, object_z),
																									       IsPointInDynamicArea(cylinder_photo_point[playerid], x_player_pos, y_player_pos, z_player_pos));
					printf("OnPlayerKeyStateChange | dynamic_area_photographer_job[playerid]: %d", dynamic_area_photographer_job[playerid]);
					printf("0) logical val: %d", (_:QUEST_OLD_MILITARY <= id_quest <= _:QUEST_DEPUTY -1));
					printf("1) logical val: %d", (_:QUEST_BUSINESSMAN <= id_quest <= _:QUEST_GRANDMOTHER -1));
					printf("2) logical val: %d", (_:QUEST_DEPUTY <= id_quest <= _:QUEST_DEPUTY + 3));
					printf("3) logical val: %d", (_:QUEST_GRANDMOTHER <= id_quest <= _:QUEST_WIFE));
					printf("4) logical val: %d", id_quest == QUEST_PRIEST);
				#endif

				if(IsPointInDynamicArea(dynamic_area_photographer_job[playerid], object_x, object_y, object_z) &&
				   quest_photographer_id[playerid] < QUEST_OLD_MILITARY && step_photographer_job[playerid] == 0)
				{

					static const str[] = "Вы сфотографировали %s. Фотография получилась отличная!";
					new fmt_str[sizeof(str) -2 + MAX_NAME_PHOTOGRAPHER_POINT];
					format(fmt_str, sizeof(fmt_str), str, photographer_job_info[id_quest][pjName]);
					SendClientMessage(playerid, col_succes, fmt_str);
					SendClientMessage(playerid, col_succes, "Отвезите фотографию на печать в бюро фотографов.");
					DestroyDynamicCP(gps_point_photographer[playerid]);
					step_photographer_job[playerid] = 2;
					gps_point_photographer[playerid] = -1;
				}
				else if(IsPointInDynamicArea(dynamic_area_photographer_job[playerid], object_x, object_y, object_z) &&
						cylinder_photo_point[playerid] != -1 &&
						IsPointInDynamicArea(cylinder_photo_point[playerid],
											 x_player_pos,
											 y_player_pos,
											 z_player_pos) &&
						step_photographer_job[playerid] == 1)
				{
					if((_:QUEST_OLD_MILITARY <= id_quest <= _:QUEST_DEPUTY -1)  ||
						(_:QUEST_BUSINESSMAN <= id_quest <= _:QUEST_GRANDMOTHER -1))
					{
						if((count_photo & 1) == 0)
						{

							count_photo = counter_photos_taken{playerid} = counter_photos_taken{playerid} + 1;
							DestroyDynamicArea(cylinder_photo_point[playerid]);
							DestroyDynamicArea(dynamic_area_photographer_job[playerid]);
							DestroyDynamicMapIcon(map_icon_photographer[playerid]);

							cache_math_1 = id_quest + 1;
							cache_math_2 = id_quest -QUEST_OLD_MILITARY + 1;

							dynamic_area_photographer_job[playerid] = map_icon_photographer[playerid]
																	= cylinder_photo_point[playerid]
																	= -1;

							dynamic_area_photographer_job[playerid] = CreateDynamicCube(photographer_job_info[cache_math_1][pjXMinPos],
																						photographer_job_info[cache_math_1][pjYMinPos],
																						photographer_job_info[cache_math_1][pjZMinPos],
																						photographer_job_info[cache_math_1][pjXMaxPos],
																						photographer_job_info[cache_math_1][pjYMaxPos],
																						photographer_job_info[cache_math_1][pjZMaxPos],
																						_,
																						_,
																						playerid);
							cylinder_photo_point[playerid] =  CreateDynamicCylinder(cylinder_photographer_info[cache_math_2][x_cilinder_photographer],
																					cylinder_photographer_info[cache_math_2][y_cilinder_photographer],
																					cylinder_photographer_info[cache_math_2][minz_cilinder_photographer],
																					cylinder_photographer_info[cache_math_2][maxz_cilinder_photographer],
																					45.0,
																					_,
																					_,
																					playerid);

							map_icon_photographer[playerid] = CreateDynamicMapIcon(cylinder_photographer_info[cache_math_2][x_cilinder_photographer],
																			       cylinder_photographer_info[cache_math_2][y_cilinder_photographer],
																			       cylinder_photographer_info[cache_math_2][minz_cilinder_photographer],
																			       41,
																			       0x0,
																			       _,
																			       0,
																			       playerid,
																			       8000.0,
																				   MAPICON_GLOBAL);
							SendClientMessage(playerid, col_succes, "Вы сделали 1/2 нужных фотографии. Сделайте вторую фотографию. "c_grey"(местоположение указано на миникарте)");
						}
						else
						{
							count_photo = counter_photos_taken{playerid} = 0;
							DestroyDynamicArea(cylinder_photo_point[playerid]);
							DestroyDynamicArea(dynamic_area_photographer_job[playerid]);
							DestroyDynamicMapIcon(map_icon_photographer[playerid]);
							dynamic_area_photographer_job[playerid] = cylinder_photo_point[playerid]
																	= map_icon_photographer[playerid]
																	= -1;

							SendClientMessage(playerid, col_succes, "Отлично! Отвезите фотографию на печать в бюро фотографов.");
							step_photographer_job[playerid] = 2;
						}

					}
					else if((_:QUEST_DEPUTY <= id_quest <= _:QUEST_DEPUTY + 2))
					{
						if(count_photo < 2)
						{
							count_photo = counter_photos_taken{playerid} = counter_photos_taken{playerid} + 1;

							static const str[] = "Вы сделали %d/3 нужных фотографии. Сделайте вторую фотографию. ("c_grey"местоположение указано на миникарте)";
							new fmt_str[sizeof(str) + 14 -2 + 4];
							format(fmt_str, sizeof(fmt_str), str, count_photo);
							SendClientMessage(playerid, col_succes, fmt_str);

							DestroyDynamicArea(cylinder_photo_point[playerid]);
							DestroyDynamicArea(dynamic_area_photographer_job[playerid]);
							DestroyDynamicMapIcon(map_icon_photographer[playerid]);

							cache_math_1 = id_quest + 1;
							cache_math_2 = id_quest -QUEST_OLD_MILITARY + 1;

							dynamic_area_photographer_job[playerid] = cylinder_photo_point[playerid] = -1;

							dynamic_area_photographer_job[playerid] = CreateDynamicCube(photographer_job_info[cache_math_1][pjXMinPos],
																						photographer_job_info[cache_math_1][pjYMinPos],
																						photographer_job_info[cache_math_1][pjZMinPos],
																						photographer_job_info[cache_math_1][pjXMaxPos],
																						photographer_job_info[cache_math_1][pjYMaxPos],
																						photographer_job_info[cache_math_1][pjZMaxPos],
																						_,
																						_,
																						playerid);
							cylinder_photo_point[playerid] =  CreateDynamicCylinder(cylinder_photographer_info[cache_math_2][x_cilinder_photographer],
																					cylinder_photographer_info[cache_math_2][y_cilinder_photographer],
																					cylinder_photographer_info[cache_math_2][minz_cilinder_photographer],
																					cylinder_photographer_info[cache_math_2][maxz_cilinder_photographer],
																					45.0,
																					_,
																					_,
																					playerid);
							map_icon_photographer[playerid] = CreateDynamicMapIcon(cylinder_photographer_info[cache_math_2][x_cilinder_photographer],
																			       cylinder_photographer_info[cache_math_2][y_cilinder_photographer],
																			       cylinder_photographer_info[cache_math_2][minz_cilinder_photographer],
																			       41,
																			       0x0,
																			       _,
																			       0,
																			       playerid,
																			       8000.0,
																				   MAPICON_GLOBAL);
						}
						else  if(count_photo == 2)
						{
							DestroyDynamicArea(cylinder_photo_point[playerid]);
							DestroyDynamicArea(dynamic_area_photographer_job[playerid]);
							DestroyDynamicMapIcon(map_icon_photographer[playerid]);

							dynamic_area_photographer_job[playerid] = cylinder_photo_point[playerid]
																	= map_icon_photographer[playerid]
																	= -1;

							count_photo = counter_photos_taken{playerid} = counter_photos_taken{playerid} + 1;
							counter_photos_taken{playerid} = 0;
							step_photographer_job[playerid] = 2;
							SendClientMessage(playerid, col_succes, "Отлично! Отвезите фотографию на печать в бюро фотографов.");
						}
					}
					else if(id_quest == QUEST_PRIEST)
					{
						#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
							printf("OnPlayerKeyStateChange | count_photo: %d", count_photo);
						#endif
						if((count_photo & 1) == 0)
						{
							count_photo = counter_photos_taken{playerid} = counter_photos_taken{playerid} + 1;
							DestroyDynamicArea(cylinder_photo_point[playerid]);
							DestroyDynamicMapIcon(map_icon_photographer[playerid]);
							cylinder_photo_point[playerid] = map_icon_photographer[playerid] = -1;
							cache_math_1 = id_quest -QUEST_OLD_MILITARY -1;
							#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
								printf("OnPlayerKeyStateChange | id_quest == QUEST_PRIEST | cache_math_1: %d", cache_math_1);
							#endif
							cylinder_photo_point[playerid] =  CreateDynamicCylinder(cylinder_photographer_info[cache_math_1][x_cilinder_photographer],
																					cylinder_photographer_info[cache_math_1][y_cilinder_photographer],
																					cylinder_photographer_info[cache_math_1][minz_cilinder_photographer],
																					cylinder_photographer_info[cache_math_1][maxz_cilinder_photographer],
																					45.0,
																					_,
																					_,
																					playerid);
							map_icon_photographer[playerid] = CreateDynamicMapIcon(cylinder_photographer_info[cache_math_1][x_cilinder_photographer],
																			       cylinder_photographer_info[cache_math_1][y_cilinder_photographer],
																			       cylinder_photographer_info[cache_math_1][minz_cilinder_photographer],
																			       41,
																			       0x0,
																			       _,
																			       0,
																			       playerid,
																			       8000.0,
																				   MAPICON_GLOBAL);
							SendClientMessage(playerid, col_succes, "Вы сделали 1/2 нужных фотографии. Сделайте вторую фотографию. ("c_grey"местоположение указано на миникарте)");
						}
						else
						{
							count_photo = counter_photos_taken{playerid} = 0;
							DestroyDynamicArea(dynamic_area_photographer_job[playerid]);
							DestroyDynamicArea(cylinder_photo_point[playerid]);
							DestroyDynamicMapIcon(map_icon_photographer[playerid]);
							step_photographer_job[playerid] = 2;
							cylinder_photo_point[playerid] = dynamic_area_photographer_job[playerid] = -1;
							SendClientMessage(playerid, col_succes, "Отлично! Отвезите фотографию на печать в бюро фотографов.");
						}
					}
				}
				else if((IsPointInDynamicArea(dynamic_area_photographer_job[playerid], object_x, object_y, object_z) &&
						 QUEST_GRANDMOTHER <= id_quest <= QUEST_WIFE) &&
						 step_photographer_job[playerid] == 1)
				{
					DestroyDynamicMapIcon(map_icon_photographer[playerid]);
					DestroyDynamicArea(dynamic_area_photographer_job[playerid]);
					dynamic_area_photographer_job[playerid] = map_icon_photographer[playerid] = -1;
					step_photographer_job[playerid] = 2;
					SendClientMessage(playerid, col_succes, "Отлично! Отвезите фотографию на печать в бюро фотографов.");
				}
			}
			
			if(newkeys & KEY_WALK)
			{
				for(new j = 0; j < MAX_QUEST_ACTORS; j ++)
				{
					if(IsPlayerInRangeOfPoint(playerid, 2, quest_actor[j][actor_pos][0], quest_actor[j][actor_pos][1], quest_actor[j][actor_pos][2]))
					{
						static const status_names[][] = {
						""c_orange_red"Не выполнен",
						""c_server"Выполняется",
						""c_green"Готово",
						""c_green"Выполнен"};

						new dialog_string [(64 + 26)* MAX_QUESTS + 42];
						for(new k = 0; k < MAX_QUESTS; k ++)
						{

							new line_string[64 + 26];
							format(line_string, sizeof(line_string), "%s\t%s\n", quest_info[k][q_name], status_names[quest_status[playerid][k]]);
							strcat(dialog_string, line_string);
						}
						strcat(dialog_string, ""c_orange_red"Отменить действующее задание");
						show_dialog(playerid, d_questlist, DIALOG_STYLE_TABLIST, ""c_server"Задания", dialog_string, "Выбрать", "Закрыть");
						return 1;
					}
				}

				for(new j = 0; j < 3; j++)
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.5, delivery_car_pier[j][0], delivery_car_pier[j][1], delivery_car_pier[j][2]))
					{
						return show_dialog(playerid, d_pier_delivery_select, DIALOG_STYLE_LIST, !""scm_dialog"Пирс", !""c_server"1 | "c_white"Отправиться на семейный остров\n"c_server"2 | "c_white"Доставка транспорта", !"Выбрать", !"Отмена");
					}
				}

				for(new j = 0; j < 19; j++)
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.5, delivery_car_island[j][0], delivery_car_island[j][1], delivery_car_island[j][2]))
					{
						return show_dialog(playerid, d_island_delivery_select, DIALOG_STYLE_LIST, !""scm_dialog"Семейный остров", !""c_server"1 | "c_white"Отправиться на пирс\n"c_server"2 | "c_white"Доставка транспорта", !"Выбрать", !"Отмена");
					}
				}
			}
			
			if(PRESSED(KEY_YES))
			{
				new target = GetPlayerTargetPlayer(playerid);
				if(target != INVALID_PLAYER_ID)
				{
					if(!IsPlayerInRangeOfPoint(playerid, 1.5, p_t_info[target][p_pos][0], p_t_info[target][p_pos][1], p_t_info[target][p_pos][2])) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок слишком далеко.");
					SetPVarInt(playerid, "playerTarget", target);
					show_dialog(playerid, d_player_target, DIALOG_STYLE_LIST, ""c_server"Меню взаимодействия", ""c_server"1."c_white" Показать паспорт\n"c_server"2."c_white" Показать лицензии\n"c_server"3."c_white" Показать медицинскую карту\n"c_server"4."c_white" Показать трудовую книжку\n"c_server"5."c_white" Передать оружие\n"c_server"6."c_white" Передать 10 едениц наркотиков", "Выбрать", "Закрыть");
				}
			}
			if((newkeys & 2)!= 0)SetPVarInt(playerid, "player_last_c_key", GetTickCount());

			if((oldkeys & 128 && newkeys & 16) && GetPlayerWeapon(playerid) ==  0)
			{
				if((IsPlayerInRangeOfPoint(playerid, 2.5, 768.4157,-2.9372,1000.7212) || IsPlayerInRangeOfPoint(playerid, 2.5, 769.7078, 14.5487, 1000.6977)) && p_t_info[playerid][phone_caller] == 0)
				{
					if(!is_gym_training {playerid}) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы ещё не начали тренировку.");
					if(random(3) == 1 && PlayerInfo[playerid][fight_skill] < 6000)
					{
						PlayerPlaySound(playerid, (random(2) == 0)?(17805):(17806), 0.0, 0.0, 0.0);
						PlayerInfo[playerid][fight_skill] ++;
						update_int_sql(playerid, "u_fight_skill", PlayerInfo[playerid][fight_skill]);
						new string[20];
						if(PlayerInfo[playerid][fight_skill]<= 1000) format(string, sizeof(string), "%d/1000", PlayerInfo[playerid][fight_skill]);
						else if(PlayerInfo[playerid][fight_skill]<= 3000) format(string, sizeof(string), "%d/3000", PlayerInfo[playerid][fight_skill]);
						else if(PlayerInfo[playerid][fight_skill]<= 6000) format(string, sizeof(string), "%d/6000", PlayerInfo[playerid][fight_skill]);
						else format(string, sizeof(string), "%d", PlayerInfo[playerid][fight_skill]);
						GameTextForPlayer(playerid, string, 500, 6);
						switch(PlayerInfo[playerid][fight_skill])
						{
							case 1000:
							{
								SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы выучили новый стиль боя 'Бокс' 1000 ударов, используйте "c_green"/fstyle 1");
								SendClientMessage(playerid, col_white, ""c_green"* "c_white"Осталось открыть 2 стиля боя, требуется еще 2000 ударов.");
								PlayerInfo[playerid][fight_style] = 5;
								SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);


							}
							case 3000:
							{
								SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы выучили новый стиль боя 'Кунг-фу' 3000 ударов, используйте "c_green"/fstyle 2");
								SendClientMessage(playerid, col_white, ""c_green"* "c_white"Осталось открыть 1 стиль боя, требуется еще 3000 ударов.");
								PlayerInfo[playerid][fight_style] = 6;
								SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
							}
							case 6000:
							{
								SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы выучили новый стиль боя 'Кикбокс' 6000 ударов, используйте "c_green"/fstyle 3");
								SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы выучили все стили боя. Поздравляем!");
								PlayerInfo[playerid][fight_style] = 7;
								SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
							}
						}
					}
					return 1;
				}
			}
			if(PlayerInfo[playerid][timejob] != job_miner && PlayerInfo[playerid][timejob] != job_factory)
			{
				if(p_t_info[playerid][p_animation] == true && newkeys & KEY_SPRINT)
				{
					ClearAnimations(playerid);
					p_t_info[playerid][p_animation] = false;
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					return 1;
				}
				if(oldkeys & KEY_SPRINT && newkeys & KEY_JUMP)
				{
					ApplyAnimation(playerid,"PED","getup_front",4.0,0,0,0,0,0);
					return 1;
				}
			}
			if(GetPVarInt(playerid, "p_h_bed") > 0 && newkeys != KEY_SECONDARY_ATTACK && oldkeys != KEY_SECONDARY_ATTACK)
			{
				h_bed_toggled[GetPVarInt(playerid, "p_h_bed")-1][GetPlayerVirtualWorld(playerid)-1] = false;
				ClearAnimations(playerid, 1);
				SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы освободили кровать, лечение прервано.");
				DeletePVar(playerid, "p_h_bed");
				return 1;
			}
			if(action_type{playerid} == ACTION_PHOTOGRAPHER &&
			  GetPlayerInterior(playerid) == INTERIOR_ID_PHOTOGRHAPHER &&
			  newkeys == KEY_SECONDARY_ATTACK)
			{
				action_td_status(playerid, false);
				return 1;
			}
			if(PlayerInfo[playerid][timejob] == job_sawmil && PRESSED(KEY_FIRE) && GetPlayerWeapon(playerid) ==  9)
			{


				if(IsPlayerInRangeOfPoint(playerid, 3.5, tree_positions[GetPVarInt(playerid, #Derevo)][0], tree_positions[GetPVarInt(playerid, #Derevo)][1],tree_positions[GetPVarInt(playerid, #Derevo)][2]))
				{
					if(GetTickCount() -cmd_cooldown[playerid] < 500) return 1;
					cmd_cooldown[playerid] = GetTickCount();


					new animlib[35], animname[30];
					if(!strcmp(animlib, "CHAINSAW", true) && !strcmp(animname, "CSAW_1", true) || !strcmp(animlib, "CHAINSAW", true) && !strcmp(animname, "CSAW_2", true)) GivePVarInt(playerid, #LessProc, 2);
					if(GetPVarInt(playerid,#LessProc) >= 100 && GetPVarInt(playerid, #jobTimer) < 1)
					{
						MoveDynamicObject(tree_object[GetPVarInt(playerid,#Derevo)], tree_positions[GetPVarInt(playerid, #Derevo)][0], tree_positions[GetPVarInt(playerid, #Derevo)][1], tree_positions[GetPVarInt(playerid, #Derevo)][2] +0.004,0.004, tree_positions[GetPVarInt(playerid, #Derevo)][3], tree_positions[GetPVarInt(playerid, #Derevo)][4] + 90, tree_positions[GetPVarInt(playerid, #Derevo)][5]);
						SetPVarInt(playerid, #jobTimer, _:SetTimerEx("drop_tree", 2000,false,"i",playerid));
					}
					if(GetPVarInt(playerid,#LessProc) <= 100)
					{
						format(animlib, 35, "~n~~n~~n~~n~PROCESS: ~g~ %i/100", GetPVarInt(playerid,#LessProc));
						GameTextForPlayer(playerid, animlib, 2000, 5);
					}

				}
			}


			if(GetPlayerInterior(playerid)!= 0)
			{
				if(newkeys & KEY_YES)
				{
					if(is_player_in_boat[playerid] != 0)
					{
						if(IsPlayerInRangeOfPoint(playerid, 2.5, 1390.2314, -27.4337, 1001.0063))// гардероб
						{
							if(veh_info[is_player_in_boat[playerid] -1][v_owner] != PlayerInfo[playerid][id]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Гардероб может использовать только владелец.");
							new line_string[36];
							global_string[0] = EOS;
							for(new j = 0; j < 5; j ++)
							{
								if(PlayerInfo[playerid][temp_skin][j] == 0)
								{
									strcat(global_string, ""c_grey"-Пусто\n");
								}
								else
								{
									format(line_string, 36, ""c_white"Одежда | %d\n", PlayerInfo[playerid][temp_skin][j]);
									strcat(global_string, line_string);
								}
							}
							strcat(global_string, "Одежда организации");
							show_dialog(playerid, d_boat_clothes, DIALOG_STYLE_LIST, ""c_server"Гардероб", global_string, "Выбрать", "Назад");
						}
						else if(IsPlayerInRangeOfPoint(playerid, 2.5, 1388.3073, -10.9576, 1001.0063))// холодильник
						{
							show_dialog(playerid, d_boat_freeze, DIALOG_STYLE_LIST, ""c_server"Холодильник", "Хот-дог ("c_orange_red"-10 прод. "c_green"+20 сытость"c_white")\nБургер ("c_orange_red"-15 прод. "c_green"+30 сытость"c_white")\nПицца ("c_orange_red"-30 прод. "c_green"+60 сытость"c_white")", "Съесть", "Закрыть");
							return 1;

						}
					}
					if(GetPVarInt(playerid, !"house_id") != 0)
					{
						new hint = h_info[GetPVarInt(playerid, !"house_id") -1][h_int] -1;
						if(IsPlayerInRangeOfPoint(playerid, 1.5, house_safe_pos[hint][0], house_safe_pos[hint][1], house_safe_pos[hint][2])) return show_dialog(playerid, d_safe_pin, DIALOG_STYLE_PASSWORD, !""scm_dialog"Код от сейфа", !""c_white"Введите код от сейфа, чтобы получить доступ к содержимому:", !"Далее", !"Закрыть");
						else if(IsPlayerInRangeOfPoint(playerid, 1.5, house_freeze_pos[hint][0], house_freeze_pos[hint][1], house_freeze_pos[hint][2])) return show_dialog(playerid, d_h_freeze, DIALOG_STYLE_LIST, !""scm_dialog"Холодильник", !""c_white"Хот-дог -"c_gold"-10 прод. | +20 сытость\n"c_white"Бургер -"c_gold"-15 прод. | +30 сытость\n"c_white"Пицца -"c_gold"-30 прод. | +60 сытость", !"Выбрать", !"Закрыть");
					}
					if(GetPVarInt(playerid, !"island_id") != 0)
					{
						new fint = fi_info[GetPVarInt(playerid, !"island_id") -1][fi_int] -1;
						if(IsPlayerInRangeOfPoint(playerid, 2.0, island_safe_pos[fint][0], island_safe_pos[fint][1], island_safe_pos[fint][2])) return show_dialog(playerid, d_safe_pin, DIALOG_STYLE_PASSWORD, !""scm_dialog"Код от склада", !""c_white"Введите код от склада, чтобы получить доступ к содержимому:", !"Далее", !"Закрыть");
						else if(IsPlayerInRangeOfPoint(playerid, 2.0, island_freeze_pos[fint][0], island_freeze_pos[fint][1], island_freeze_pos[fint][2])) return show_dialog(playerid, d_island_freeze, DIALOG_STYLE_LIST, !""scm_dialog"Холодильник", !""c_white"Хот-дог -"c_gold"+20 сытость\n"c_white"Бургер -"c_gold"+30 сытость\n"c_white"Пицца -"c_gold"+60 сытость", !"Выбрать", !"Закрыть");
						else if(IsPlayerInRangeOfPoint(playerid, 2.0, island_healme_pos[fint][0], island_healme_pos[fint][1], island_healme_pos[fint][2])) return show_dialog(playerid, d_island_healme, DIALOG_STYLE_MSGBOX, !""scm_dialog"Мед. пункт", !""c_white"Вы действительно желаете восстановить своё здоровье?", !"Далее", !"Закрыть");
					}
					if(IsPlayerInRangeOfPoint(playerid, 2, 2146.918, -775.890, 1411.171))
					{
						if(!army_player(playerid) && ! fbi_player(playerid)) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет ключей от двери.");
						if(armdoor == true)
						{
							MoveDynamicObject(army_gate[2], 2146.918, -775.890, 1411.171, 0.12, 00.000, 00.000, 190.000); // 160.000 тоже хорошо
							armdoor = false;
						}
						else
						{
							MoveDynamicObject(army_gate[2], 2146.918, -775.890, 1411.171, 0.12, 00.000, 00.000, 90.000);
							armdoor = true;
						}
						return 1;
					}
					if(IsPlayerInRangeOfPoint(playerid, 1, -1470.4011,300.2828,1058.3457))
					{
						SetPlayerPos(playerid, -1472.2126,300.8212,1060.9886);
					}
				}
			}
			else
			{
				if(newkeys & KEY_YES)
				{
					if(GetPVarInt(playerid, "have_box") ==  1)
					{
						foreach(new veh_id:streamed_vehicles[playerid])
						{
							if(veh_info[veh_id -1][v_model] != 482) continue;
							new Float:boot_pos[3];
							GetCoordBootVehicle(veh_id, boot_pos[0], boot_pos[1], boot_pos[2]);
							if(IsPlayerInRangeOfPoint(playerid, 1.0, boot_pos[0], boot_pos[1], boot_pos[2]))
							{
								RemovePlayerAttachedObject(playerid, 0);
								ClearAnimations(playerid);
								ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
								if(veh_info[veh_id -1][v_cargo] + 500 > 10000)
								{
									veh_info[veh_id -1][v_cargo] = 10000;
									DeletePVar(playerid, "have_box");
									SendClientMessage(playerid, col_gray, "* Машина уже полностью загружена оружием");
									return 1;

								}
								else veh_info[veh_id -1][v_cargo] += 500;

								new t_string[102];
								format(t_string, sizeof(t_string), ""c_green"* "c_white"Вы положили ящик в машину. Боеприпасов и оружия в машине "c_green"%d"c_white".",
								veh_info[veh_id -1][v_cargo]);
								SendClientMessage(playerid, col_white, t_string);
								DeletePVar(playerid, "have_box");
								return 1;
							}
						}
						return 1;
					}
					for(new i = 0; i < 4; i ++)
					{
						if(!IsPlayerInRangeOfPoint(playerid, 2, army_gate_controler_pos[i][0],army_gate_controler_pos[i][1], army_gate_controler_pos[i][2])) continue;
						if(army_player(playerid)|| fbi_player(playerid))
						{
							if(IsPlayerInRangeOfPoint(playerid, 20.0, 135.642791, 1941.488647, 21.622999))
							{
								MoveDynamicObject(army_gate[1], 121.702827, 1941.488647, 21.622999, 6.0, 0.0000, 0.0000, 0.0000);
								SetTimerEx("gate_callback", 10000, 0, "i", 1);
							}
							else
							{
								MoveDynamicObject(army_gate[0], 285.988281, 1833.778564, 19.935199, 6.0, 0.0000, 0.0000, 90.0000);
								SetTimerEx("gate_callback", 10000, 0, "i", 0);
							}
							SendClientMessage(playerid, col_gray, "* Ворота закроются в течение 10 секунд.");
						}
						else
						{
							if(action_type {playerid} != 0)
							{
								action_type {playerid} = ACTION_ARMY_GATE;
								action_step {playerid} = 0;
								action_td_status(playerid, true);
							}
						}
					}

					foreach(new i:streamed_vehicles[playerid])
					{
						if(!IsValidVehicle(i)) continue;
						if(!v_boat_int(i)) continue;
						new Float:bd_x, Float:bd_y, Float:bd_z;
						GetBoatDoorPos(i, bd_x, bd_y, bd_z);
						if(IsPlayerInRangeOfPoint(playerid, 2.0, bd_x, bd_y, bd_z))
						{
							if(veh_info[i -1][v_locked]) return GameTextForPlayer(playerid, "~r~BOAT CLOSED", 2000, 4);
							is_player_in_boat[playerid] = i;
							SetPVarInt(playerid, "tp_area_used", 1);
							set_pos(playerid, 1387.0375, -13.6000, 1001.0063, 264.9616, 5, i);
							return 1;
						}
					}

					for(new t = 0; t < atm_count; t ++)
					{
						if(IsPlayerInRangeOfPoint(playerid, 3.50, atm_info[t][atm_position][0], atm_info[t][atm_position][1], atm_info[t][atm_position][2]))
						{
							show_dialog(playerid, d_atm, DIALOG_STYLE_LIST, ""c_server"Банкомат", "Управление картой\nПополнить баланс телефона\nОплата налогов\nОплата штрафов", "Далее", "Закрыть");
							return 1;
						}
					}
				}
			}
			if(action_type {playerid} > 0)
			{
				if(newkeys & action_key[playerid])
				{
					switch(random(5))
					{
						case 0..2:action_key[playerid] = KEY_YES, PlayerTextDrawSetString(playerid, action_ptd[playerid][3], "PRESS:_Y");
						case 3..5:action_key[playerid] = KEY_NO, PlayerTextDrawSetString(playerid, action_ptd[playerid][3], "PRESS:_N");
					}
					action_step {playerid} ++;

					new td_string[9];
					format(td_string, sizeof(td_string), "%d/10", action_step {playerid});
					PlayerTextDrawSetString(playerid, action_ptd[playerid][4], td_string);

					new Float:td_x = action_step {playerid} * 16.5;
					PlayerTextDrawTextSize(playerid, action_ptd[playerid][2], td_x, 12.740739);
					PlayerTextDrawHide(playerid, action_ptd[playerid][2]);
					PlayerTextDrawShow(playerid, action_ptd[playerid][2]);

					if(action_step {playerid} >= 10)
					{
						switch(action_type {playerid})
						{
							case ACTION_CELLAR:
							{
								new h = GetPVarInt(playerid, "house_id")-1;
								if(h_info[h][h_seed_result] > 15)
								{
									new seed_count = RandomEx(6, 15);
									new seed_count_give = RandomEx(6, 25);

									h_info[h][h_seed_result] -= seed_count;
									PlayerInfo[playerid][drugs] += seed_count_give;
									update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);

									new d_string[124];
									format(d_string, 124, ""c_green"* "c_white"Вы переработали "c_green"%i гр."c_white" урожая в "c_green"%i гр."c_white"наркотиков.", seed_count, seed_count_give);
									SendClientMessage(playerid, col_white, d_string);
									action_step {playerid} = 0;
									action_td_status(playerid, false);
									return 1;
								}
								else
								{
									new seed_count = h_info[h][h_seed_result];
									new seed_count_give = RandomEx(1, 15);
									h_info[h][h_seed_result] = 0;

									PlayerInfo[playerid][drugs] += seed_count_give;
									update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);

									new d_string[112];
									format(d_string, 112, ""c_green"*"c_white" Вы переработали "c_green"%d гр."c_white" урожая в %d гр. наркотиков.", seed_count, seed_count_give);
									SendClientMessage(playerid, col_white, d_string);

									action_step {playerid} = 0;
									action_td_status(playerid, false);
								}
							}
							case ACTION_CLCELLAR:
							{
								new h = GetPVarInt(playerid, "cellar_id")-1;
								if(cellar_info[h][cl_seed_result] > 15)
								{
									new seed_count = RandomEx(6, 15);
									new seed_count_give = RandomEx(6, 25);

									cellar_info[h][cl_seed_result] -= seed_count;
									PlayerInfo[playerid][drugs] += seed_count_give;
									update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);

									new d_string[124];
									format(d_string, 124, ""c_green"* "c_white"Вы переработали "c_green"%i гр."c_white" урожая в "c_green"%i гр."c_white"наркотиков.", seed_count, seed_count_give);
									SendClientMessage(playerid, col_white, d_string);
									action_step {playerid} = 0;
									action_td_status(playerid, false);
									return 1;
								}
								else
								{
									new seed_count = cellar_info[h][cl_seed_result];
									new seed_count_give = RandomEx(1, 15);
									cellar_info[h][cl_seed_result] = 0;

									PlayerInfo[playerid][drugs] += seed_count_give;
									update_int_sql(playerid, "u_drugs", PlayerInfo[playerid][drugs]);

									new d_string[112];
									format(d_string, 112, ""c_green"*"c_white" Вы переработали "c_green"%d гр."c_white" урожая в %d гр. наркотиков.", seed_count, seed_count_give);
									SendClientMessage(playerid, col_white, d_string);

									action_step {playerid} = 0;
									action_td_status(playerid, false);
								}
							}
							case ACTION_ARMY_GATE:
							{
								if(IsPlayerInRangeOfPoint(playerid, 20.0, 135.642791, 1941.488647, 21.622999))
								{
									MoveDynamicObject(army_gate[1], 121.702827, 1941.488647, 21.622999, 6.0, 0.0000, 0.0000, 0.0000);
									SetTimerEx("gate_callback", 10000, 0, "i", 1);
									me_action(playerid, "взломал(-а) пульт управления воротами.");
								}
								else
								{
									MoveDynamicObject(army_gate[0], 285.988281, 1833.778564, 19.935199, 6.0, 0.0000, 0.0000, 90.0000);
									SetTimerEx("gate_callback", 10000, 0, "i", 0);
								}
								SendClientMessage(playerid, col_gray, "* Ворота закроются в течение 10 секунд.");
								action_td_status(playerid, false);
							}
							case ACTION_PHOTOGRAPHER:
							{
								action_td_status (playerid, false);
								if(quest_photographer_id[playerid] >= 15)
								{
									SendClientMessage(playerid, col_succes, "Фотография получилась в отличных цветах. Доставь ее заказчику!");
								}
								else
								{
									SendClientMessage(playerid, col_succes, "Забери свой деньги в бюро фотографов!");
								}
								step_photographer_job[playerid] = 3;
							}
						}
					}
					return 1;
				}
				else
				{
					if(newkeys != 0)
					{
						switch(random(5))
						{
							case 0..2:action_key[playerid] = KEY_YES, PlayerTextDrawSetString(playerid, action_ptd[playerid][3], "PRESS:_Y");
							case 3..5:action_key[playerid] = KEY_NO, PlayerTextDrawSetString(playerid, action_ptd[playerid][3], "PRESS:_N");
						}
						if(action_step {playerid} > 0)
						{
							action_step {playerid} --;

							new td_string[9];
							format(td_string, sizeof(td_string), "%d/10", action_step {playerid});
							PlayerTextDrawSetString(playerid, action_ptd[playerid][4], td_string);

							new Float:td_x = action_step {playerid} * 16.5;
							PlayerTextDrawTextSize(playerid, action_ptd[playerid][2], td_x, 12.740739);
							PlayerTextDrawHide(playerid, action_ptd[playerid][2]);
							PlayerTextDrawShow(playerid, action_ptd[playerid][2]);
						}
						return 1;
					}
				}
			}

			if(newkeys & KEY_SECONDARY_ATTACK)
			{
				if(GetPlayerInterior(playerid) ==  10)
				{
					if(IsPlayerNearDice(playerid) != -1)
					{
						new null = -1;
						for(new i = 0; i != 5; i++) if(dice_info[IsPlayerNearDice(playerid)][b_player][i] == INVALID_PLAYER_ID){null = i; break;}
						if(GetPVarInt(playerid,"Krupje") && dice_info[IsPlayerNearDice(playerid)][b_crupie] != INVALID_PLAYER_ID) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Тут уже работает крупье.");
						if(GetPVarInt(playerid,"Stol")) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Вы уже зарегистрированы на другом столе.");
						if(null == -1 && !GetPVarInt(playerid,"Krupje")) return SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"За этим столом нет свободных мест.");
						if(!GetPVarInt(playerid,"Krupje")) dice_info[IsPlayerNearDice(playerid)][b_player][null] = playerid;
						else dice_info[IsPlayerNearDice(playerid)][b_crupie] = playerid;
						SetPVarInt(playerid,"Stol", IsPlayerNearDice(playerid)+ 1);
						SelectTextDraw(playerid,0x33AAFFFF);
						CreateCasinoTD(playerid);
						return UpdateBone(IsPlayerNearDice(playerid));
					}
					if(GetPVarInt(playerid, "cm_used") ==  0)
					{
						if(IsPlayerInRangeOfPoint(playerid, 3.0, 1958.780395, 1003.396545, 992.277770)|| IsPlayerInRangeOfPoint(playerid, 3.0, 1954.193481, 1003.396484, 992.27777))
						{
							return cm_status(playerid, true);
						}
					}

					if(GetPVarInt(playerid, "p_sm_used") ==  0)
					{

						for(new sm = 0; sm < sm_count; sm ++)
						{
							if(sm_used[sm] != false) continue;
							if(!IsPlayerInRangeOfPoint(playerid, 1.50, sm_coord[sm][0], sm_coord[sm][1], sm_coord[sm][2])) continue;
							SetPVarInt(playerid, "p_sm_used", sm + 1);
							TogglePlayerControllable(playerid, false);

							sm_used[sm] = true;

							new td_string[64];
							format(td_string, 64, "bet:  0$          cash:  %d$", PlayerInfo[playerid][money]);
							sm_ptd[playerid] = CreatePlayerTextDraw(playerid, 266.000000, 272.000000, td_string);
							PlayerTextDrawBackgroundColor(playerid, sm_ptd[playerid], 255);
							PlayerTextDrawFont(playerid, sm_ptd[playerid], 2);
							PlayerTextDrawLetterSize(playerid, sm_ptd[playerid], 0.310000, 2.700000);
							PlayerTextDrawColor(playerid, sm_ptd[playerid], -2711041);
							PlayerTextDrawSetOutline(playerid, sm_ptd[playerid], 1);
							PlayerTextDrawSetProportional(playerid, sm_ptd[playerid], 1);
							PlayerTextDrawSetSelectable(playerid, sm_ptd[playerid], 0);

							for(new i = 0; i < 4; i ++)
							{
								TextDrawShowForPlayer(playerid, sm_td[i]);
							}
							PlayerTextDrawShow(playerid, sm_ptd[playerid]);
							SelectTextDraw(playerid, 0xB0C4DEFF);

							SetPlayerCameraPos(playerid, sm_camera_coord[sm][0], sm_camera_coord[sm][1], sm_camera_coord[sm][2]);
							SetPlayerCameraLookAt(playerid, sm_camera_coord[sm][3], sm_camera_coord[sm][4], sm_camera_coord[sm][5]);
							break;
						}
					}
				}
				if(GetPVarInt(playerid, "house_id")> 0)// cellar
				{
					if(IsPlayerInRangeOfPoint(playerid, 2, 1396.2233,-16.9493,1000.9152))
					{
						new h = GetPVarInt(playerid, "house_id")-1;
						new d_string[172];
						format(d_string, sizeof(d_string), "\
						"c_server"Посажено семян: "c_grey"%d гр."c_server" | Урожай: "c_grey"%d гр.\n\
						"c_grey"-"c_white"Посадить семена\n"c_grey"-"c_white"Переработка урожая",
						h_info[h][h_seed], h_info[h][h_seed_result]);
						show_dialog(playerid, d_cellar_menu, DIALOG_STYLE_LIST, ""c_server"Подвал", d_string, "Выбрать", "Закрыть");
						return 1;
					}
				}
				if(GetPVarInt(playerid, "cellar_id")> 0)// cellar
				{
					if(IsPlayerInRangeOfPoint(playerid, 2, 1396.2233,-16.9493,1000.9152))
					{
						show_dialog(playerid, d_cellar_action, DIALOG_STYLE_LIST, ""c_server"Подвал", ""c_server"1."c_white"Гидропонная ферма\n"c_server"2."c_white"Снять розыск\n"c_server"3."c_white" Сбор оружия", "Выбрать", "Закрыть");




						return 1;
					}
				}
				if(p_t_info[playerid][p_data][1] >= 0)
				{
					if(p_t_info[playerid][p_data][0] == 5)//crack house
					{
						if(IsPlayerInRangeOfPoint(playerid, 2, 322.3990, 1117.2810, 1083.8828))
						{
							show_dialog(playerid, d_drug_dealer, DIALOG_STYLE_INPUT, ""c_server"Наркоторговец", ""c_white"Введите количество грамм семян, которое желаете приобрести:\n\n"c_grey"* Стоимость 1 гр. семян составляет -"c_white"100$"c_grey".", "Купить", "Закрыть");
							return 1;
						}
					}
					for(new i = 0; i < H_BED_AMOUNT; i ++)
					{
						if(!IsPlayerInRangeOfPoint(playerid, 2, h_bed_position[i][0], h_bed_position[i][1], h_bed_position[i][2])) continue;
						if(p_t_info[playerid][p_health] > 95) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не нуждаетесь в лечении.");
						if(GetPVarInt(playerid, "p_h_bed") > 0) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уже заняли койку.");
						if(h_bed_toggled[i][GetPlayerVirtualWorld(playerid)-1]) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Койка уже занята другим человеком.");

						SetPlayerPos(playerid, h_bed_position[i][0], h_bed_position[i][1], h_bed_position[i][2]);
						SetPlayerFacingAngle(playerid, h_bed_position[i][3]);
						h_bed_toggled[i][GetPlayerVirtualWorld(playerid)-1] = true;
						SetPVarInt(playerid, "p_h_bed", i + 1);
						ApplyAnimation(playerid, "CRACK", "crckidle2", 10000.0, 0, 9999, 9999, 9999, 9999);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						p_t_info[playerid][p_animation] = true;
						SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы заняли койку, постельный режим поможет Вам быстрее поправиться.");
						return 1;
					}
				}

			}
			if(PRESSED(KEY_NO) && GetPVarInt(playerid, "hunger_td_active") ==  0)
			{
				new Float:text_size_x = 25.416650;
				if(PlayerInfo[playerid][hunger]<= 25)
				{
					text_size_x = PlayerInfo[playerid][hunger]* 1.016666;
				}

				new td_line_color = 8388863;
				switch(PlayerInfo[playerid][hunger])
				{
					case 0..20: td_line_color = -1523963137;
					case 21..49: td_line_color = -5963521;
					case 50..100: td_line_color = 8388863;
				}


				satiery_ptd[playerid][0] = CreatePlayerTextDraw(playerid, 38.333286, 305.370391, "LD_SPAC:white");
				PlayerTextDrawLetterSize(playerid, satiery_ptd[playerid][0], 0.000000, 0.000000);
				PlayerTextDrawTextSize(playerid, satiery_ptd[playerid][0], text_size_x, 6.518517);
				PlayerTextDrawAlignment(playerid, satiery_ptd[playerid][0], 1);
				PlayerTextDrawColor(playerid, satiery_ptd[playerid][0], td_line_color);
				PlayerTextDrawSetShadow(playerid, satiery_ptd[playerid][0], 0);
				PlayerTextDrawSetOutline(playerid, satiery_ptd[playerid][0], 0);
				PlayerTextDrawBackgroundColor(playerid, satiery_ptd[playerid][0], 255);
				PlayerTextDrawFont(playerid, satiery_ptd[playerid][0], 4);
				PlayerTextDrawSetProportional(playerid, satiery_ptd[playerid][0], 0);
				PlayerTextDrawSetShadow(playerid, satiery_ptd[playerid][0], 0);

				text_size_x = -0.000020;
				if(PlayerInfo[playerid][hunger] > 25)
				{
					text_size_x =(PlayerInfo[playerid][hunger] -25)* 1.016666;
					if(PlayerInfo[playerid][hunger] >= 50)text_size_x = 25 * 1.016666;
				}

				satiery_ptd[playerid][1] = CreatePlayerTextDraw(playerid, 65.416664, 305.370391, "LD_SPAC:white");
				PlayerTextDrawLetterSize(playerid, satiery_ptd[playerid][1], 0.000000, 0.000000);
				PlayerTextDrawTextSize(playerid, satiery_ptd[playerid][1], text_size_x, 6.518517);
				PlayerTextDrawAlignment(playerid, satiery_ptd[playerid][1], 1);
				PlayerTextDrawColor(playerid, satiery_ptd[playerid][1], td_line_color);
				PlayerTextDrawSetShadow(playerid, satiery_ptd[playerid][1], 0);
				PlayerTextDrawSetOutline(playerid, satiery_ptd[playerid][1], 0);
				PlayerTextDrawBackgroundColor(playerid, satiery_ptd[playerid][1], 255);
				PlayerTextDrawFont(playerid, satiery_ptd[playerid][1], 4);
				PlayerTextDrawSetProportional(playerid, satiery_ptd[playerid][1], 0);
				PlayerTextDrawSetShadow(playerid, satiery_ptd[playerid][1], 0);

				text_size_x = -0.000020;
				if(PlayerInfo[playerid][hunger] > 50)
				{
					text_size_x =(PlayerInfo[playerid][hunger] -50)* 1.016666;
					if(PlayerInfo[playerid][hunger] >= 75)text_size_x = 25 * 1.016666;
				}

				satiery_ptd[playerid][2] = CreatePlayerTextDraw(playerid, 92.500015, 305.370391, "LD_SPAC:white");
				PlayerTextDrawLetterSize(playerid, satiery_ptd[playerid][2], 0.000000, 0.000000);
				PlayerTextDrawTextSize(playerid, satiery_ptd[playerid][2], text_size_x, 6.518517);
				PlayerTextDrawAlignment(playerid, satiery_ptd[playerid][2], 1);
				PlayerTextDrawColor(playerid, satiery_ptd[playerid][2], td_line_color);
				PlayerTextDrawSetShadow(playerid, satiery_ptd[playerid][2], 0);
				PlayerTextDrawSetOutline(playerid, satiery_ptd[playerid][2], 0);
				PlayerTextDrawBackgroundColor(playerid, satiery_ptd[playerid][2], 255);
				PlayerTextDrawFont(playerid, satiery_ptd[playerid][2], 4);
				PlayerTextDrawSetProportional(playerid, satiery_ptd[playerid][2], 0);
				PlayerTextDrawSetShadow(playerid, satiery_ptd[playerid][2], 0);

				text_size_x = -0.000020;
				if(PlayerInfo[playerid][hunger] > 75)
				{
					text_size_x =(PlayerInfo[playerid][hunger] -75)* 1.016666;
				}


				satiery_ptd[playerid][3] = CreatePlayerTextDraw(playerid, 119.583358, 305.370422, "LD_SPAC:white");
				PlayerTextDrawLetterSize(playerid, satiery_ptd[playerid][3], 0.000000, 0.000000);
				PlayerTextDrawTextSize(playerid, satiery_ptd[playerid][3], text_size_x, 6.518517);
				PlayerTextDrawAlignment(playerid, satiery_ptd[playerid][3], 1);
				PlayerTextDrawColor(playerid, satiery_ptd[playerid][3], td_line_color);
				PlayerTextDrawSetShadow(playerid, satiery_ptd[playerid][3], 0);
				PlayerTextDrawSetOutline(playerid, satiery_ptd[playerid][3], 0);
				PlayerTextDrawBackgroundColor(playerid, satiery_ptd[playerid][3], 255);
				PlayerTextDrawFont(playerid, satiery_ptd[playerid][3], 4);
				PlayerTextDrawSetProportional(playerid, satiery_ptd[playerid][3], 0);
				PlayerTextDrawSetShadow(playerid, satiery_ptd[playerid][3], 0);

				for(new j = 0; j < 6; j ++)
				{
					TextDrawShowForPlayer(playerid, satiery_td[j]);
					if(j < 4)PlayerTextDrawShow(playerid, satiery_ptd[playerid][j]);
				}
				SetPVarInt(playerid, "hunger_td_active", 1);

				SetTimerEx("clear_hunger_td", 2000, false, "d", playerid);
				return 1;
			}



			if(PRESSED(KEY_SECONDARY_ATTACK) || PRESSED(KEY_JUMP) || PRESSED(KEY_FIRE) || PRESSED(KEY_SPRINT) || PRESSED(KEY_CROUCH))
			{
				if(GetPVarInt(playerid, "PlayerCuffed") && !IsPlayerInAnyVehicle(playerid))
				{
					ClearAnimations(playerid);
					ApplyAnimation(playerid,"FAT","IDLE_tired",3.0,1,0,0,0,3000,1);
					SendClientMessage(playerid, col_gray, "* Вы не можете использовать это действие так как вы в наручниках.");
					return 1;
				}
				if(PlayerInfo[playerid][timejob] == job_porter && IsPlayerAttachedObjectSlotUsed(playerid, 1))
				{
					if(job_timer[playerid] != -1)KillTimer(job_timer[playerid]);
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уронили коробку. Попробуйте еще раз.");

					RemovePlayerAttachedObject(playerid, 1);
					DisablePlayerCheckpoint(playerid);

					SetPlayerCheckpoint(playerid, porter_pos_take[opened_containers -1][0], porter_pos_take[opened_containers -1][1], porter_pos_take[opened_containers -1][2], 2.5);
					job_ac_tick[playerid] = 0;

					ClearAnimations(playerid);
					ApplyAnimation(playerid, "PED","IDLE_tired", 4.1, 0, 1, 1, 0, 1);
					return 1;
				}


				if(PlayerInfo[playerid][timejob] == job_sawmil && IsPlayerAttachedObjectSlotUsed(playerid, 3))
				{
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уронили связку дров. Попробуйте еще раз.");

					RemovePlayerAttachedObject(playerid, 3);
					DisablePlayerCheckpoint(playerid);

					DeletePVar(playerid, #Derevo);
					SetPVarInt(playerid, #LessProc, 0);
					SetPVarInt(playerid, #LessStatus, 0);

					SetPVarInt(playerid, #Derevo, tree_count);
					tree_count++;
					SetPlayerCheckpoint(playerid,  tree_positions [GetPVarInt(playerid, #Derevo)][0],tree_positions[GetPVarInt(playerid, #Derevo)][1],tree_positions[GetPVarInt(playerid, #Derevo)][2], 3.0);

					ClearAnimations(playerid);
					ApplyAnimation(playerid, "PED","IDLE_tired", 4.1, 0, 1, 1, 0, 1);
					return 1;
				}

				if(PlayerInfo[playerid][timejob] == job_factory && ! GetPVarInt(playerid, "factory_table_id"))
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid, 0))
					{
						SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уронили коробку. Попробуйте еще раз.");

						RemovePlayerAttachedObject(playerid, 0);
						DisablePlayerCheckpoint(playerid);

						DeletePVar(playerid, "have_factory_box");

						ClearAnimations(playerid);
						ApplyAnimation(playerid, "PED","IDLE_tired", 4.1, 0, 1, 1, 0, 1);
					}
					return 1;
				}
				if(GetPVarInt(playerid, "have_box") ==  1)
				{
					if(job_timer[playerid] != -1)KillTimer(job_timer[playerid]);
					SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уронили коробку. Попробуйте еще раз.");

					RemovePlayerAttachedObject(playerid, 0);
					DisablePlayerCheckpoint(playerid);

					ClearAnimations(playerid);
					ApplyAnimation(playerid, "PED","IDLE_tired", 4.1, 0, 1, 1, 0, 1);
					DeletePVar(playerid, "have_box");
					return 1;
				}
				if(PlayerInfo[playerid][timejob] == job_porter && p_t_info[playerid][p_animation] == true)
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid, 1))
					{
						p_t_info[playerid][p_animation] = false;
						ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
						RemovePlayerAttachedObject(playerid, 1);

						DisablePlayerCheckpoint(playerid);

						if(opened_containers != 0)	SetPlayerCheckpoint(playerid, porter_pos_take[opened_containers -1][0], porter_pos_take[opened_containers -1][1], porter_pos_take[opened_containers -1][2], 2.5);
						else SendClientMessage (playerid, col_gray, "* Контейнера для разгрузки пока нет, ожидайте появления контейнера для разгрузки.");
						job_ac_tick[playerid] = GetTickCount();
					}
				}
				if(PlayerInfo[playerid][timejob] == job_miner && p_t_info[playerid][p_animation] == true)
				{
					if(IsPlayerAttachedObjectSlotUsed(playerid, 2) && ! GetPVarInt(playerid, "mining_ex"))
					{
						SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уронили железо. Попробуйте еще раз.");

						RemovePlayerAttachedObject(playerid, 2);
						RemovePlayerAttachedObject(playerid, 3);
						DisablePlayerCheckpoint(playerid);

						if(job_timer[playerid] != -1)KillTimer(job_timer[playerid]);

						new _random = random(6);
						SetPlayerCheckpoint(playerid, miner_cp[_random][0], miner_cp[_random][1], miner_cp[_random][2], 2.5);
						SetPVarInt(playerid, "miner_cp", _random);
						SetPlayerAttachedObject(playerid, 1, 18634, 14, 0.333391, 0.000000, 0.042249, 358.219909, 268.014739, 170.032974, 2.003867, 1.764811, 1.579773);

						ClearAnimations(playerid);
						ApplyAnimation(playerid, "PED","IDLE_tired", 4.1, 0, 1, 1, 0, 1);
						return 1;
					}
				}
			}

		}
		case PLAYER_STATE_DRIVER:
		{

			if(newkeys & KEY_JUMP)
				player_holding_key_down[playerid] = GetTickCount();
			if(oldkeys & KEY_JUMP)
				player_holding_key_down[playerid] = 0x7FFFFFFF;

			if(newkeys & 1)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				if(vehicleid != 0)
				{
					if(veh_info[vehicleid -1][v_type] == vehicle_type_job && player_rentcar[playerid] != vehicleid) return 1;
					if(v_velo(vehicleid)) return 1;
					toggle_engine(playerid, vehicleid);
				}
				return 1;
			}
			if(PRESSED(KEY_NO) && GetPVarInt(playerid, "hunger_td_active") ==  0)
			{
				new Float:text_size_x = 25.416650;
				if(PlayerInfo[playerid][hunger]<= 25)
				{
					text_size_x = PlayerInfo[playerid][hunger]* 1.016666;
				}

				new td_line_color = 8388863;
				switch(PlayerInfo[playerid][hunger])
				{
					case 0..20: td_line_color = -1523963137;
					case 21..49: td_line_color = -5963521;
					case 50..100: td_line_color = 8388863;
				}


				satiery_ptd[playerid][0] = CreatePlayerTextDraw(playerid, 38.333286, 305.370391, "LD_SPAC:white");
				PlayerTextDrawLetterSize(playerid, satiery_ptd[playerid][0], 0.000000, 0.000000);
				PlayerTextDrawTextSize(playerid, satiery_ptd[playerid][0], text_size_x, 6.518517);
				PlayerTextDrawAlignment(playerid, satiery_ptd[playerid][0], 1);
				PlayerTextDrawColor(playerid, satiery_ptd[playerid][0], td_line_color);
				PlayerTextDrawSetShadow(playerid, satiery_ptd[playerid][0], 0);
				PlayerTextDrawSetOutline(playerid, satiery_ptd[playerid][0], 0);
				PlayerTextDrawBackgroundColor(playerid, satiery_ptd[playerid][0], 255);
				PlayerTextDrawFont(playerid, satiery_ptd[playerid][0], 4);
				PlayerTextDrawSetProportional(playerid, satiery_ptd[playerid][0], 0);
				PlayerTextDrawSetShadow(playerid, satiery_ptd[playerid][0], 0);

				text_size_x = -0.000020;
				if(PlayerInfo[playerid][hunger] > 25)
				{
					text_size_x =(PlayerInfo[playerid][hunger] -25)* 1.016666;
					if(PlayerInfo[playerid][hunger] >= 50)text_size_x = 25 * 1.016666;
				}

				satiery_ptd[playerid][1] = CreatePlayerTextDraw(playerid, 65.416664, 305.370391, "LD_SPAC:white");
				PlayerTextDrawLetterSize(playerid, satiery_ptd[playerid][1], 0.000000, 0.000000);
				PlayerTextDrawTextSize(playerid, satiery_ptd[playerid][1], text_size_x, 6.518517);
				PlayerTextDrawAlignment(playerid, satiery_ptd[playerid][1], 1);
				PlayerTextDrawColor(playerid, satiery_ptd[playerid][1], td_line_color);
				PlayerTextDrawSetShadow(playerid, satiery_ptd[playerid][1], 0);
				PlayerTextDrawSetOutline(playerid, satiery_ptd[playerid][1], 0);
				PlayerTextDrawBackgroundColor(playerid, satiery_ptd[playerid][1], 255);
				PlayerTextDrawFont(playerid, satiery_ptd[playerid][1], 4);
				PlayerTextDrawSetProportional(playerid, satiery_ptd[playerid][1], 0);
				PlayerTextDrawSetShadow(playerid, satiery_ptd[playerid][1], 0);

				text_size_x = -0.000020;
				if(PlayerInfo[playerid][hunger] > 50)
				{
					text_size_x =(PlayerInfo[playerid][hunger] -50)* 1.016666;
					if(PlayerInfo[playerid][hunger] >= 75)text_size_x = 25 * 1.016666;
				}

				satiery_ptd[playerid][2] = CreatePlayerTextDraw(playerid, 92.500015, 305.370391, "LD_SPAC:white");
				PlayerTextDrawLetterSize(playerid, satiery_ptd[playerid][2], 0.000000, 0.000000);
				PlayerTextDrawTextSize(playerid, satiery_ptd[playerid][2], text_size_x, 6.518517);
				PlayerTextDrawAlignment(playerid, satiery_ptd[playerid][2], 1);
				PlayerTextDrawColor(playerid, satiery_ptd[playerid][2], td_line_color);
				PlayerTextDrawSetShadow(playerid, satiery_ptd[playerid][2], 0);
				PlayerTextDrawSetOutline(playerid, satiery_ptd[playerid][2], 0);
				PlayerTextDrawBackgroundColor(playerid, satiery_ptd[playerid][2], 255);
				PlayerTextDrawFont(playerid, satiery_ptd[playerid][2], 4);
				PlayerTextDrawSetProportional(playerid, satiery_ptd[playerid][2], 0);
				PlayerTextDrawSetShadow(playerid, satiery_ptd[playerid][2], 0);

				text_size_x = -0.000020;
				if(PlayerInfo[playerid][hunger] > 75)
				{
					text_size_x =(PlayerInfo[playerid][hunger] -75)* 1.016666;
				}


				satiery_ptd[playerid][3] = CreatePlayerTextDraw(playerid, 119.583358, 305.370422, "LD_SPAC:white");
				PlayerTextDrawLetterSize(playerid, satiery_ptd[playerid][3], 0.000000, 0.000000);
				PlayerTextDrawTextSize(playerid, satiery_ptd[playerid][3], text_size_x, 6.518517);
				PlayerTextDrawAlignment(playerid, satiery_ptd[playerid][3], 1);
				PlayerTextDrawColor(playerid, satiery_ptd[playerid][3], td_line_color);
				PlayerTextDrawSetShadow(playerid, satiery_ptd[playerid][3], 0);
				PlayerTextDrawSetOutline(playerid, satiery_ptd[playerid][3], 0);
				PlayerTextDrawBackgroundColor(playerid, satiery_ptd[playerid][3], 255);
				PlayerTextDrawFont(playerid, satiery_ptd[playerid][3], 4);
				PlayerTextDrawSetProportional(playerid, satiery_ptd[playerid][3], 0);
				PlayerTextDrawSetShadow(playerid, satiery_ptd[playerid][3], 0);

				for(new j = 0; j < 6; j ++)
				{
					TextDrawShowForPlayer(playerid, satiery_td[j]);
					if(j < 4)PlayerTextDrawShow(playerid, satiery_ptd[playerid][j]);
				}
				SetPVarInt(playerid, "hunger_td_active", 1);

				SetTimerEx("clear_hunger_td", 2000, false, "d", playerid);
				return 1;
			}
			if(newkeys & KEY_YES)
			{
				new vehicle_id = GetPlayerVehicleID(playerid);

				if(vehicle_id != 0)
				{
					if(veh_info[vehicle_id -1][v_model] == 548)
					{
						for(new i = 0; i < 2; i ++)
						{
							if(army_container_object[i] == 0) continue;
							if(IsPlayerInRangeOfPoint(playerid, 15, army_container_pos[i][0], army_container_pos[i][1], army_container_pos[i][2]))
							{
								new Float:z_position;
								GetPlayerPos(playerid, z_position, z_position, z_position);
								if(z_position < 20.2) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы слишком близко к земле, наберите немного высоты.");
								DestroyDynamicObject(army_container_object[i]);
								army_container_object[i] = 0;
								new tmpobjid = CreateDynamicObject(18886,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
								SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -8355712);
								AttachDynamicObjectToVehicle(tmpobjid, vehicle_id, 0.000, 1.421, -3.070, 0.000, 0.000, 0.000);
								veh_info[vehicle_id -1][v_cargo_object][0] = tmpobjid;
								tmpobjid = CreateDynamicObject(19087,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
								SetDynamicObjectMaterial(tmpobjid, 0, 14584, "ab_abbatoir01", "cj_sheetmetal", -8355712);
								AttachDynamicObjectToVehicle(tmpobjid, vehicle_id, 0.000, 1.441, -1.670, 0.000, 0.000, 0.000);
								veh_info[vehicle_id -1][v_cargo_object][1] = tmpobjid;
								tmpobjid = CreateDynamicObject(2935,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
								SetDynamicObjectMaterial(tmpobjid, 2, -1, "none", "none", -8355712);
								AttachDynamicObjectToVehicle(tmpobjid, vehicle_id, 0.000, 1.341, -5.550, 0.000, 0.000, 0.000);
								veh_info[vehicle_id -1][v_cargo_object][2] = tmpobjid;


								veh_info[vehicle_id -1][v_cargo] = 50000;
								SendClientMessage(playerid, col_gray, "* Контейнер прицеплен к вертолёту, доставьте его на склад армии.");
								return 1;
							}
						}
					}
				}
				if(PlayerInfo[playerid][timejob] == job_forklift)
				{
					if(veh_info[vehicle_id -1][v_model] == 530)
					{
						if(IsPlayerInRangeOfPoint(playerid, 5, 2783.443, -2470.333, 13.583) && GetPVarInt(playerid, "fork_object") ==  0 && crane_status[0] == true)
						{
							for(new i = 0; i < 6; i ++)
							{
								DestroyObject(crane_object[0][i]);

							}
							new tmpobjid = CreateDynamicObject(2932,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
							SetDynamicObjectMaterial(tmpobjid, 0, 10850, "bakerybit2_sfse", "frate64_yellow", -8355712);
							SetDynamicObjectMaterial(tmpobjid, 1, 10850, "bakerybit2_sfse", "frate_doors64yellow", -8355712);
							AttachDynamicObjectToVehicle(tmpobjid, vehicle_id, 0.000, 1.681, 1.410, 0.000, 0.000, 90.000);
							SetPVarInt(playerid, "fork_object", tmpobjid);

							crane_status[0] = false;

							crane_object[0][0] = CreateObject(3565, 2849.002197, -2470.333740, 30.853858, 0.000000, 0.000000, 0.000000);
							SetObjectMaterial(crane_object[0][0], 0, 10850, "bakerybit2_sfse", "frate64_yellow", 0xFFF0FFFF);
							SetObjectMaterial(crane_object[0][0], 1, 10850, "bakerybit2_sfse", "frate_doors64yellow", 0x00000000);

							crane_object[0][1] = CreateObject(3565, 2849.002197, -2470.333740, 30.853858, 0.019998, 180.000000, 0.000000);
							SetObjectMaterial(crane_object[0][1], 0, 10850, "bakerybit2_sfse", "frate64_yellow", 0xFFF0FFFF);
							SetObjectMaterial(crane_object[0][1], 1, 10850, "bakerybit2_sfse", "frate_doors64yellow", 0x00000000);
							AttachObjectToObject(crane_object[0][1],crane_object[0][0],0.029998, -0.009995, -0.010002, 0.019998, 180.000000, 0.000, 1);

							crane_object[0][2] = CreateObject(1390, 2849.002197, -2470.333740, 30.853858, 0.000000, 90.000000, 0.000000);
							SetObjectMaterial(crane_object[0][2], 1, -1, "none", "none", 0xFF808080);
							AttachObjectToObject(crane_object[0][2],crane_object[0][0],3.760772, -0.028572, 1.012470, 0.000000, 90.000000, 0.000000,1);

							crane_object[0][3] = CreateObject(1390, 2849.002197, -2470.333740, 30.853858, 0.000000, 90.000000, 0.000000);
							SetObjectMaterial(crane_object[0][3], 1, -1, "none", "none", 0xFF808080);
							AttachObjectToObject(crane_object[0][3],crane_object[0][0],3.070773, -0.028572, 1.012470, 0.000000, 90.000000, 0.000000,1);

							crane_object[0][4] = CreateObject(1390, 2849.002197, -2470.333740, 30.853858, 0.000000, 90.000000, 179.999893);
							SetObjectMaterial(crane_object[0][4], 1, -1, "none", "none", 0xFF808080);
							AttachObjectToObject(crane_object[0][4],crane_object[0][0],-3.739224, -0.028572, 1.012470, 0.000000, 90.000000, 179.999893,1);

							crane_object[0][5] = CreateObject(1390, 2849.002197, -2470.333740, 30.853858, 0.000000, 90.000000, 179.999893);
							SetObjectMaterial(crane_object[0][5], 1, -1, "none", "none", 0xFF808080);
							AttachObjectToObject(crane_object[0][5],crane_object[0][0],-3.049225, -0.028572, 1.012470, 0.000000, 90.000000, 179.999893,1);

							MoveObject(crane_object[0][0], 2783.420166, -2470.333740, 30.853858, 6.0, 0.000, 0.000, 0.000);
							MoveObject(crane_magnit[0], 2783.370361, -2470.375976, 33.264030, 6.0, 0.000, 0.000, 0.000);


							SetTimer("crane_moving_second_step", 12000, false);

							SendClientMessage(playerid, col_gray, "* Отвезите контейнер на главную портовую площадку и поставьте его на свободную зону.");
							return 1;
						}
						if(IsPlayerInRangeOfPoint(playerid, 5, 2783.420166, -2428.874023, 13.623873) && GetPVarInt(playerid, "fork_object") ==  0 && crane_status[1] == true)
						{
							for(new i = 0; i < 6; i ++)
							{
								DestroyObject(crane_object[1][i]);

							}
							new tmpobjid = CreateDynamicObject(2932,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
							SetDynamicObjectMaterial(tmpobjid, 0, 10850, "bakerybit2_sfse", "frate64_yellow", -8355712);
							SetDynamicObjectMaterial(tmpobjid, 1, 10850, "bakerybit2_sfse", "frate_doors64yellow", -8355712);
							AttachDynamicObjectToVehicle(tmpobjid, vehicle_id, 0.000, 1.681, 1.410, 0.000, 0.000, 90.000);
							SetPVarInt(playerid, "fork_object", tmpobjid);

							crane_status[1] = false;

							crane_object[1][0] = CreateObject(3565, 2849.002197, -2428.874023, 30.853858, 0.000000, 0.000000, 0.000000);
							SetObjectMaterial(crane_object[1][0], 0, 10850, "bakerybit2_sfse", "frate64_yellow", 0xFFF0FFFF);
							SetObjectMaterial(crane_object[1][0], 1, 10850, "bakerybit2_sfse", "frate_doors64yellow", 0x00000000);

							crane_object[1][1] = CreateObject(3565, 2849.002197, -2428.874023, 30.853858, 0.019998, 180.000000, 0.000000);
							SetObjectMaterial(crane_object[1][1], 0, 10850, "bakerybit2_sfse", "frate64_yellow", 0xFFF0FFFF);
							SetObjectMaterial(crane_object[1][1], 1, 10850, "bakerybit2_sfse", "frate_doors64yellow", 0x00000000);
							AttachObjectToObject(crane_object[1][1],crane_object[1][0],0.029998, -0.009995, -0.010002, 0.019998, 180.000000, 0.000, 1);

							crane_object[1][2] = CreateObject(1390, 2849.002197, -2428.874023, 30.853858, 0.000000, 90.000000, 0.000000);
							SetObjectMaterial(crane_object[1][2], 1, -1, "none", "none", 0xFF808080);
							AttachObjectToObject(crane_object[1][2],crane_object[1][0],3.760772, -0.028572, 1.012470, 0.000000, 90.000000, 0.000000,1);

							crane_object[1][3] = CreateObject(1390, 2849.002197, -2428.874023, 30.853858, 0.000000, 90.000000, 0.000000);
							SetObjectMaterial(crane_object[1][3], 1, -1, "none", "none", 0xFF808080);
							AttachObjectToObject(crane_object[1][3],crane_object[1][0],3.070773, -0.028572, 1.012470, 0.000000, 90.000000, 0.000000,1);

							crane_object[1][4] = CreateObject(1390, 2849.002197, -2428.874023, 30.853858, 0.000000, 90.000000, 179.999893);
							SetObjectMaterial(crane_object[1][4], 1, -1, "none", "none", 0xFF808080);
							AttachObjectToObject(crane_object[1][4],crane_object[1][0],-3.739224, -0.028572, 1.012470, 0.000000, 90.000000, 179.999893,1);

							crane_object[1][5] = CreateObject(1390, 2849.002197, -2428.874023, 30.853858, 0.000000, 90.000000, 179.999893);
							SetObjectMaterial(crane_object[1][5], 1, -1, "none", "none", 0xFF808080);
							AttachObjectToObject(crane_object[1][5],crane_object[1][0],-3.049225, -0.028572, 1.012470, 0.000000, 90.000000, 179.999893,1);

							MoveObject(crane_object[1][0], 2783.420166, -2428.874023, 30.853858, 6.0, 0.000, 0.000, 0.000);
							MoveObject(crane_magnit[1], 2783.370361, -2428.916259, 33.264030, 6.0, 0.000, 0.000, 0.000);


							SetTimer("_crane_moving_second_step", 12000, false);

							SendClientMessage(playerid, col_gray, "* Отвезите контейнер на главную портовую площадку и поставьте его на свободную зону.");
							return 1;
						}
						if(GetPVarInt(playerid, "fork_object")!= 0)
						{
							for(new i = 0; i < 2; i ++)
							{
								if(army_container_object[i] != 0) continue;
								if(IsPlayerInRangeOfPoint(playerid, 4, army_container_pos[i][0], army_container_pos[i][1], army_container_pos[i][2]))
								{

									army_container_object[i] = CreateDynamicObject(3565, army_container_pos[i][0], army_container_pos[i][1], army_container_pos[i][2],
																army_container_pos[i][3], army_container_pos[i][4], army_container_pos[i][5],
																-1, -1, -1, 300.0, 300.0);


									SetDynamicObjectMaterial(army_container_object[i], 0, 10850, "bakerybit2_sfse", "frate64_yellow", 0xFFF0FFFF);
									SetDynamicObjectMaterial(army_container_object[i], 1, 10850, "bakerybit2_sfse", "frate_doors64yellow", 0xFFF0FFFF);

									if(GetPVarInt(playerid, "fork_object"))
									{
										DestroyDynamicObject(GetPVarInt(playerid, "fork_object"));
										DeletePVar(playerid, "fork_object");
									}
									PlayerInfo[playerid][salary] += 150 * server_bonus;
									update_payment(playerid, 150 * server_bonus);


									if(quest_status[playerid][6] == 1)
									{
										quest_progress[playerid][6] += 1;
										if(quest_progress[playerid][6] > 10)
										{
											quest_status[playerid][6] = 2;
											SendClientMessage(playerid, col_succes, "Задание успешно выполнено. Отправляйтесь к одному из помощников, чтобы получить своё вознаграждение.");
										}
										update_quest_data(playerid);
									}

									return 1;
								}
							}

							new Float:_distance = 3000.0,
										container_cell;

							for(new i = 0; i < MAX_CONTAINERS; i ++)
							{
								new Float:__distance = GetPlayerDistanceFromPoint(playerid, porter_pos_take[i][0], porter_pos_take[i][1], porter_pos_take[i][2]);
								if(_distance > __distance)_distance = __distance, container_cell = i;
							}
							if(_distance < 7)
							{
								if(_distance < 2) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы должны поставить контейнер в пределы разметки(белый прямоугольник), а не находиться там сами.");
								for(new j = 0; j < 2; j ++)
								{
									if(container_info[container_cell][con_status][j] == 0 && container_info[container_cell][con_status][0] != 2)
									{
										if(j == 1)
										{
											if(container_info[container_cell][con_status][0] != 0)
											{
												container_info[container_cell][con_object][j] = CreateDynamicObject(3565,
																							container_pos_close[container_cell][j][0],
																							container_pos_close[container_cell][j][1],
																							container_pos_close[container_cell][j][2],
																							container_pos_close[container_cell][j][3],
																							container_pos_close[container_cell][j][4],
																							container_pos_close[container_cell][j][5], -1, -1, -1, 300.0, 300.0);
												SetDynamicObjectMaterial(container_info[container_cell][con_object][j], 0, 10850, "bakerybit2_sfse", "frate64_yellow", 0xFFF0FFFF);
												SetDynamicObjectMaterial(container_info[container_cell][con_object][j], 1, 10850, "bakerybit2_sfse", "frate_doors64yellow", 0xFFF0FFFF);

												container_info[container_cell][con_status][j] = 1;
												closed_containers ++;
												if(GetPVarInt(playerid, "fork_object"))
												{
													DestroyDynamicObject(GetPVarInt(playerid, "fork_object"));
													DeletePVar(playerid, "fork_object");
												}
												PlayerInfo[playerid][salary] += 150 * server_bonus;
												update_payment(playerid, 150 * server_bonus);

											}
										}
										else
										{
											container_info[container_cell][con_object][j] = CreateDynamicObject(3565,
																						container_pos_close[container_cell][j][0],
																						container_pos_close[container_cell][j][1],
																						container_pos_close[container_cell][j][2],
																						container_pos_close[container_cell][j][3],
																						container_pos_close[container_cell][j][4],
																						container_pos_close[container_cell][j][5], -1, -1, -1, 300.0, 300.0);
											SetDynamicObjectMaterial(container_info[container_cell][con_object][j], 0, 10850, "bakerybit2_sfse", "frate64_yellow", 0xFFF0FFFF);
											SetDynamicObjectMaterial(container_info[container_cell][con_object][j], 1, 10850, "bakerybit2_sfse", "frate_doors64yellow", 0xFFF0FFFF);

											container_info[container_cell][con_status][j] = 1;
											closed_containers ++;
											if(GetPVarInt(playerid, "fork_object"))
											{
												DestroyDynamicObject(GetPVarInt(playerid, "fork_object"));
												DeletePVar(playerid, "fork_object");
											}
											PlayerInfo[playerid][salary] += 150 * server_bonus;
											update_payment(playerid, 150 * server_bonus);
										}
										return 1;
									}
								}
							}
						}
					}
				}
				if(GetPVarInt(playerid, "house_id") ==  0)
				{
					for(new h = 0; h < house_count; h ++)
					{
						if(h_info[h][h_garage] == 0) continue;
						if(!IsPlayerInRangeOfPoint(playerid, 4, h_info[h][h_v_pos][0], h_info[h][h_v_pos][1], h_info[h][h_v_pos][2])) continue;
						if(h_info[h][h_closed] == 1 && h_info[h][h_owner] != PlayerInfo[playerid][id]) return 1;
						if(h_info[h][h_owner] == -1) return 1;

						new garage_id = h_info[h][h_garage] -1;

						SetPVarInt(playerid, "house_id", h + 1);

						if(v_bike(vehicle_id))
						{
							SetVehiclePos(vehicle_id, house_bike_garage[garage_id][0], house_bike_garage[garage_id][1], house_bike_garage[garage_id][2]);
							SetVehicleZAngle(vehicle_id, house_bike_garage[garage_id][3]);

						}
						else
						{
							SetVehiclePos(vehicle_id, house_veh_garage[garage_id][0], house_veh_garage[garage_id][1], house_veh_garage[garage_id][2]);
							SetVehicleZAngle(vehicle_id, house_veh_garage[garage_id][3]);
						}
						SetPlayerInterior(playerid, 1);
						SetPlayerVirtualWorld(playerid, h_info[h][h_id]);
						LinkVehicleToInterior(vehicle_id, 1);
						SetVehicleVirtualWorld(vehicle_id, h_info[h][h_id]);
						break;
					}
				}
				else if(GetPVarInt(playerid, "house_id")> 0)
				{
					new h = GetPVarInt(playerid, "house_id")-1;

					SetVehiclePos(vehicle_id, h_info[h][h_v_pos][0], h_info[h][h_v_pos][1], h_info[h][h_v_pos][2]);
					SetVehicleZAngle(vehicle_id, h_info[h][h_v_pos][3]);

					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 0);
					LinkVehicleToInterior(vehicle_id, 0);
					SetVehicleVirtualWorld(vehicle_id, 0);
					SetPlayerArmedWeapon(playerid, 0);
					CancelSelectTextDraw(playerid);

					DeletePVar(playerid, "house_id");

				}
			}
			if(newkeys & 4)
			{
				new vehicleid = GetPlayerVehicleID(playerid);
				if(v_velo(vehicleid)|| v_plane(vehicleid)|| v_boat(vehicleid)) return 1;
				toggle_lights(vehicleid);
				return 1;
			}
			if(newkeys & KEY_CROUCH)
			{
				if(IsPlayerInRangeOfPoint(playerid, 15, 285.988281, 1821.206420, 19.935199))
				{
					if(army_player(playerid)|| fbi_player(playerid))
					{
						MoveDynamicObject(army_gate[0], 285.988281, 1833.778564, 19.935199, 6.0, 0.0000, 0.0000, 90.0000);
						SetTimerEx("gate_callback", 10000, 0, "i", 0);
						SendClientMessage(playerid, col_gray, "* Ворота закроются в течение 10 секунд.");
						return 1;
					}
				}
				else if(IsPlayerInRangeOfPoint(playerid, 15, 135.642791, 1941.488647, 21.622999))
				{
					if(army_player(playerid)|| fbi_player(playerid))
					{
						MoveDynamicObject(army_gate[1], 121.702827, 1941.488647, 21.622999, 6.0, 0.0000, 0.0000, 0.0000);
						SetTimerEx("gate_callback", 10000, 0, "i", 1);
						SendClientMessage(playerid, col_gray, "* Ворота закроются в течение 10 секунд.");

					}
				}
				new veh_id = GetPlayerVehicleID(playerid);
				if(PlayerInfo[playerid][job] == job_trucker && used_area[playerid] == loading_area[DORM_FACTORY]&& veh_info[veh_id -1][v_type] == vehicle_type_job && veh_info[veh_id -1][v_owner] == job_trucker)
				{
					show_dialog(playerid, d_truck_buy, DIALOG_STYLE_INPUT, ""c_server"Закупка заготовок", ""c_white"Введите количество килограммов, которое хотите купить.\nПоддерживает тягач: 10.000 кг.\n1 кг -10$", "Купить", "Отмена");
				}
				else if(PlayerInfo[playerid][job] == job_trucker && used_area[playerid] == loading_area[DORM_SAWMILL]&& veh_info[veh_id -1][v_type] == vehicle_type_job && veh_info[veh_id -1][v_owner] == job_trucker)
				{
					show_dialog(playerid, d_truck_buy, DIALOG_STYLE_INPUT, ""c_server"Закупка древесины", ""c_white"Введите количество килограммов, которое хотите купить.\nПоддерживает тягач: 10.000 кг.\n1 кг -10$", "Купить", "Отмена");
				}
				else if(PlayerInfo[playerid][job] == job_trucker && used_area[playerid] == loading_area[DORM_MINE]&& veh_info[veh_id -1][v_type] == vehicle_type_job && veh_info[veh_id -1][v_owner] == job_trucker)
				{
					show_dialog(playerid, d_truck_buy, DIALOG_STYLE_INPUT, ""c_server"Закупка металла", ""c_white"Введите количество килограммов, которое хотите купить.\nПоддерживает тягач: 10.000 кг.\n1 кг -10$", "Купить", "Отмена");
				}
				else if(used_area[playerid] == factory_unloading_area)
				{
					if(PlayerInfo[playerid][job] == job_trucker && player_trailer[playerid] !=INVALID_VEHICLE_ID && GetVehicleTrailer(GetPlayerVehicleID(playerid)) == player_trailer[playerid])
					{
						new _trailer_id = player_trailer[playerid] -1;
						if(trailer_type[_trailer_id] == DORM_FACTORY) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете разгружать заготовки на завод, отправляйтесь в порт.");
						player_trailer[playerid] = INVALID_VEHICLE_ID;
						static const trailer_type_name[][] = {
						"древесины",
						"металла",
						"заготовок"};

						switch(trailer_type[_trailer_id])
						{
							case DORM_SAWMILL:
							{
								dorm_count[DORM_FACTORY_WOOD] += trailer_count[_trailer_id];
							}
							case DORM_FACTORY:
							{
								dorm_count[DORM_FACTORY_GUNS] += trailer_count[_trailer_id];
							}
							case DORM_MINE:
							{
								dorm_count[DORM_FACTORY_MINE] += trailer_count[_trailer_id];
							}
						}
						DestroyVehicle(_trailer_id + 1);
						for(new j = 1; j < 4; j ++)
						{
							PlayerTextDrawDestroy(playerid, td_db[playerid][j]);
							td_db[playerid][j] = PlayerText:-1;
						}
						PlayerInfo[playerid][truck_skill] += trailer_count[_trailer_id];
						update_int_sql(playerid, "u_tskill", PlayerInfo[playerid][truck_skill]);

						SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно разгрузились.");
						SendClientMessage(playerid, -1, "Информация по заказу:");
						new _text_string[128];
						format(_text_string, 128, ""c_green"* "c_white"Разгружено %s: "c_green"%i кг"c_white".", trailer_type_name[trailer_type[_trailer_id]], trailer_count[_trailer_id]);
						SendClientMessage(playerid, -1, _text_string);

						new db_endmoney;
						db_endmoney = trailer_count[_trailer_id]* 10 + floatround((trailer_count[_trailer_id]* 10)* 0.10);

						format(_text_string, 128, ""c_green"* "c_white"Заработано: "c_green"%i$"c_white".", db_endmoney);
						SendClientMessage(playerid, -1, _text_string);
						give_money(playerid, db_endmoney);
						insert_money_log(playerid, INVALID_PLAYER_ID, db_endmoney, "Доставка дальнобойщика");
						trailer_count[_trailer_id] = 0;
						trailer_type[_trailer_id] = -1;

						return 1;
					}
				}
				else if(used_area[playerid] == port_unloading_area)
				{
					if(PlayerInfo[playerid][job] == job_trucker && player_trailer[playerid] != INVALID_VEHICLE_ID && GetVehicleTrailer(GetPlayerVehicleID(playerid)) == player_trailer[playerid])
					{
						new _trailer_id_ = player_trailer[playerid] -1;
						player_trailer[playerid] = INVALID_VEHICLE_ID;
						static const _trailer_type_name[][] = {
						"древесины",
						"металла",
						"заготовок"};

						DestroyVehicle(_trailer_id_ + 1);
						for(new j = 1; j < 4; j ++)
						{
							PlayerTextDrawDestroy(playerid, td_db[playerid][j]);
							td_db[playerid][j] = PlayerText:-1;
						}

						PlayerInfo[playerid][truck_skill] += trailer_count[_trailer_id_];
						update_int_sql(playerid, "u_tskill", PlayerInfo[playerid][truck_skill]);


						SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно разгрузились.");
						SendClientMessage(playerid, -1, "Информация по заказу:");
						new _text_string[128];
						format(_text_string, 128, ""c_green"* "c_white"Разгружено %s: "c_green"%i кг"c_white".", _trailer_type_name[trailer_type[_trailer_id_]], trailer_count[_trailer_id_]);
						SendClientMessage(playerid, -1, _text_string);

						new db_endmoney;
						db_endmoney = trailer_count[_trailer_id_]* 10 + floatround((trailer_count[_trailer_id_]* 10)* 0.10);

						format(_text_string, 128, ""c_green"* "c_white"Заработано: "c_green"%i$"c_white".", db_endmoney);
						SendClientMessage(playerid, -1, _text_string);
						give_money(playerid, db_endmoney);
						insert_money_log(playerid, INVALID_PLAYER_ID, db_endmoney, "Доставка дальнобойщика");
						trailer_count[_trailer_id_] = 0;
						trailer_type[_trailer_id_] = -1;

						for(new j = 0; j < 13; j ++)
						{
							if(port_trailer_status[j] == false)
							{
								port_trailer_status[j] = true;

								new tmpobjid = CreateDynamicObject(3569,
															port_trailer_pos[j][0],
															port_trailer_pos[j][1],
															port_trailer_pos[j][2],
															port_trailer_pos[j][3],
															port_trailer_pos[j][4],
															port_trailer_pos[j][5], -1, -1, -1, 300.0, 300.0);
								SetDynamicObjectMaterial(tmpobjid, 0, 3564, "dockcargo2_las", "lastrk1", 0xFFF0FFFF);
								SetDynamicObjectMaterial(tmpobjid, 3, 3564, "dockcargo2_las", "lastrk1", 0x00000000);

								SetTimerEx("clear_trailer", 300000, false, "dd", j, tmpobjid);
								break;
							}
						}
						return 1;
					}
				}
				if(IsPlayerInRangeOfPoint(playerid, 5, 844.8434,-602.2949,18.4219))
				{
					if(veh_info[veh_id -1][v_type] != vehicle_type_player) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Доступно только для личного транспорта.");
					if(get_passenger_count(playerid)> 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Для начала высадите всех пассажиров из транспорта.");



					if(b_info[0][b_close]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Автостанция закрыта.");


					if(v_velo(veh_id)|| v_plane(veh_id)|| v_boat(veh_id)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Автостанция не обслуживает такие транспортные средства");
					SetVehiclePos(veh_id, 947.4241,-1748.4412,1013.3640);
					SetVehicleZAngle(veh_id, 179);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, playerid);
					LinkVehicleToInterior(veh_id, 0);
					SetVehicleVirtualWorld(veh_id, playerid);
					SetPlayerArmedWeapon(playerid, 0);

					new freeze_time;
					switch(GetPlayerPing(playerid))
					{
						case 5..100: freeze_time = 2500;
						case 101..200: freeze_time = 3000;
						case 201..300: freeze_time = 3000;
						default: freeze_time = 4000;
					}
					SetTimerEx("toggle_controlable", freeze_time, 0, "iii", playerid, true, true);


					SetPlayerCameraPos(playerid, tuning_camera_positions[0][0], tuning_camera_positions[0][1], tuning_camera_positions[0][2]);
					SetPlayerCameraLookAt(playerid, tuning_camera_positions[0][3], tuning_camera_positions[0][4], tuning_camera_positions[0][5]);


					speedometr_status(playerid, false);
					KillTimer(speed_timer[playerid]);
					speed_timer[playerid] = -1;
					for(new i = 0; i <= 45; i ++)
					{
						TextDrawShowForPlayer(playerid, td_tuning[i]);
					}
					SelectTextDraw(playerid, 0xB0C4DEFF);

					TogglePlayerControllable(playerid, false);
					SetPVarInt (playerid, "tuning_opened", 1);
					return 1;
				}
				else if(IsPlayerInRangeOfPoint(playerid, 5, 1649.2150,2199.1189,10.8203))
				{
					if(veh_info[veh_id -1][v_type] != vehicle_type_player) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Доступно только для личного транспорта.");
					if(get_passenger_count(playerid)> 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Для начала высадите всех пассажиров из транспорта.");

					if(v_velo(veh_id)|| v_plane(veh_id)|| v_boat(veh_id)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Автостанция не обслуживает такие транспортные средства");
					if(b_info[1][b_close]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Автостанция закрыта.");
					SetVehiclePos(veh_id, 947.4241,-1748.4412,1013.3640);
					new freeze_time;
					switch(GetPlayerPing(playerid))
					{
						case 5..100: freeze_time = 2500;
						case 101..200: freeze_time = 3000;
						case 201..300: freeze_time = 3000;
						default: freeze_time = 4000;
					}
					SetTimerEx("toggle_controlable", freeze_time, 0, "iii", playerid, true, true);
					SetVehicleZAngle(veh_id, 179);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, playerid);
					LinkVehicleToInterior(veh_id, 0);
					SetVehicleVirtualWorld(veh_id, playerid);
					SetPlayerArmedWeapon(playerid, 0);
					SetPlayerCameraPos(playerid, tuning_camera_positions[0][0], tuning_camera_positions[0][1], tuning_camera_positions[0][2]);
					SetPlayerCameraLookAt(playerid, tuning_camera_positions[0][3], tuning_camera_positions[0][4], tuning_camera_positions[0][5]);


					speedometr_status(playerid, false);
					KillTimer(speed_timer[playerid]);
					speed_timer[playerid] = -1;
					for(new i = 0; i <= 45; i ++)
					{
						TextDrawShowForPlayer(playerid, td_tuning[i]);
					}
					SelectTextDraw(playerid, 0xB0C4DEFF);

					TogglePlayerControllable(playerid, false);
					SetPVarInt (playerid, "tuning_opened", 2);

					return 1;

				}
				else if(IsPlayerInRangeOfPoint(playerid, 5, -1786.7087,1208.8735,25.1250))
				{
					if(veh_info[veh_id -1][v_type] != vehicle_type_player) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Доступно только для личного транспорта.");
					if(get_passenger_count(playerid)> 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Для начала высадите всех пассажиров из транспорта.");

					if(v_velo(veh_id)|| v_plane(veh_id)|| v_boat(veh_id)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Автостанция не обслуживает такие транспортные средства");
					if(b_info[2][b_close]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Автостанция закрыта.");
					SetVehiclePos(veh_id, 947.4241,-1748.4412,1013.3640);
					new freeze_time;
					switch(GetPlayerPing(playerid))
					{
						case 5..100: freeze_time = 2500;
						case 101..200: freeze_time = 3000;
						case 201..300: freeze_time = 3000;
						default: freeze_time = 4000;
					}
					SetTimerEx("toggle_controlable", freeze_time, 0, "iii", playerid, true, true);
					SetVehicleZAngle(veh_id, 179);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, playerid);
					LinkVehicleToInterior(veh_id, 0);
					SetVehicleVirtualWorld(veh_id, playerid);
					SetPlayerArmedWeapon(playerid, 0);
					SetPlayerCameraPos(playerid, tuning_camera_positions[0][0], tuning_camera_positions[0][1], tuning_camera_positions[0][2]);
					SetPlayerCameraLookAt(playerid, tuning_camera_positions[0][3], tuning_camera_positions[0][4], tuning_camera_positions[0][5]);


					speedometr_status(playerid, false);
					KillTimer(speed_timer[playerid]);
					speed_timer[playerid] = -1;
					for(new i = 0; i <= 45; i ++)
					{
						TextDrawShowForPlayer(playerid, td_tuning[i]);
					}
					SelectTextDraw(playerid, 0xB0C4DEFF);

					TogglePlayerControllable(playerid, false);
					SetPVarInt (playerid, "tuning_opened", 3);

					return 1;

				}
				else if(IsPlayerInRangeOfPoint(playerid, 5, 1614.0004,-1897.5763,13.5487))
				{
					if(veh_info[veh_id -1][v_type] != vehicle_type_player) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Доступно только для личного транспорта.");
					if(get_passenger_count(playerid)> 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Для начала высадите всех пассажиров из транспорта.");

					if(b_info[3][b_close]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Тюнинг-ателье закрыто.");
					if(v_velo(veh_id)|| v_plane(veh_id)|| v_boat(veh_id)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Тюнинг-ателье не обслуживает такие транспортные средства.");
					SetVehiclePos(veh_id, 947.4241,-1748.4412,1013.3640);
					new freeze_time;
					switch(GetPlayerPing(playerid))
					{
						case 5..100: freeze_time = 2500;
						case 101..200: freeze_time = 3000;
						case 201..300: freeze_time = 3000;
						default: freeze_time = 4000;
					}
					SetTimerEx("toggle_controlable", freeze_time, 0, "iii", playerid, true, true);
					SetVehicleZAngle(veh_id, 179);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, playerid);
					LinkVehicleToInterior(veh_id, 0);
					SetVehicleVirtualWorld(veh_id, playerid);
					SetPlayerArmedWeapon(playerid, 0);
					SetPlayerCameraPos(playerid, tuning_camera_positions[0][0], tuning_camera_positions[0][1], tuning_camera_positions[0][2]);
					SetPlayerCameraLookAt(playerid, tuning_camera_positions[0][3], tuning_camera_positions[0][4], tuning_camera_positions[0][5]);


					speedometr_status(playerid, false);
					KillTimer(speed_timer[playerid]);
					speed_timer[playerid] = -1;
					for(new i = 0; i < 27; i ++)
					{
						TextDrawShowForPlayer(playerid, td_performance[i]);
					}
					SelectTextDraw(playerid, 0xB0C4DEFF);

					TogglePlayerControllable(playerid, false);
					SetPVarInt (playerid, "ptuning_opened", 4);

					ptd_performance[playerid][0] = CreatePlayerTextDraw(playerid, 44.000000, 277.000000, "LD_SPAC:white");
					PlayerTextDrawBackgroundColor(playerid, ptd_performance[playerid][0], 0);
					PlayerTextDrawFont(playerid, ptd_performance[playerid][0], 4);
					PlayerTextDrawLetterSize(playerid, ptd_performance[playerid][0], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, ptd_performance[playerid][0], 10486015);
					PlayerTextDrawSetOutline(playerid, ptd_performance[playerid][0], 0);
					PlayerTextDrawSetProportional(playerid, ptd_performance[playerid][0], 1);
					PlayerTextDrawSetShadow(playerid, ptd_performance[playerid][0], 1);
					PlayerTextDrawUseBox(playerid, ptd_performance[playerid][0], 1);
					PlayerTextDrawBoxColor(playerid, ptd_performance[playerid][0], 255);
					PlayerTextDrawTextSize(playerid, ptd_performance[playerid][0], 11.000000, 0.000000);
					PlayerTextDrawSetSelectable(playerid, ptd_performance[playerid][0], 0);

					new Float:td_y = -veh_info[veh_id -1][v_engine_boost]* 328.57;

					ptd_performance[playerid][1] = CreatePlayerTextDraw(playerid, 44.000000, 277.000000, "LD_SPAC:white");
					PlayerTextDrawBackgroundColor(playerid, ptd_performance[playerid][1], 0);
					PlayerTextDrawFont(playerid, ptd_performance[playerid][1], 4);
					PlayerTextDrawLetterSize(playerid, ptd_performance[playerid][1], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, ptd_performance[playerid][1], 557867519);
					PlayerTextDrawSetOutline(playerid, ptd_performance[playerid][1], 0);
					PlayerTextDrawSetProportional(playerid, ptd_performance[playerid][1], 1);
					PlayerTextDrawSetShadow(playerid, ptd_performance[playerid][1], 1);
					PlayerTextDrawUseBox(playerid, ptd_performance[playerid][1], 1);
					PlayerTextDrawBoxColor(playerid, ptd_performance[playerid][1], 255);
					PlayerTextDrawTextSize(playerid, ptd_performance[playerid][1], 11.000000, td_y);
					PlayerTextDrawSetSelectable(playerid, ptd_performance[playerid][1], 0);

					ptd_performance[playerid][2] = CreatePlayerTextDraw(playerid, 85.000000, 277.000000, "LD_SPAC:white");
					PlayerTextDrawBackgroundColor(playerid, ptd_performance[playerid][2], 0);
					PlayerTextDrawFont(playerid, ptd_performance[playerid][2], 4);
					PlayerTextDrawLetterSize(playerid, ptd_performance[playerid][2], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, ptd_performance[playerid][2], 10486015);
					PlayerTextDrawSetOutline(playerid, ptd_performance[playerid][2], 0);
					PlayerTextDrawSetProportional(playerid, ptd_performance[playerid][2], 1);
					PlayerTextDrawSetShadow(playerid, ptd_performance[playerid][2], 1);
					PlayerTextDrawUseBox(playerid, ptd_performance[playerid][2], 1);
					PlayerTextDrawBoxColor(playerid, ptd_performance[playerid][2], 255);
					PlayerTextDrawTextSize(playerid, ptd_performance[playerid][2], 11.000000, 0.000000);
					PlayerTextDrawSetSelectable(playerid, ptd_performance[playerid][2], 0);

					td_y = -veh_info[veh_id -1][v_brake_boost]* 12.7777;
					ptd_performance[playerid][3] = CreatePlayerTextDraw(playerid, 85.000000, 277.000000, "LD_SPAC:white");
					PlayerTextDrawBackgroundColor(playerid, ptd_performance[playerid][3], 0);
					PlayerTextDrawFont(playerid, ptd_performance[playerid][3], 4);
					PlayerTextDrawLetterSize(playerid, ptd_performance[playerid][3], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, ptd_performance[playerid][3], 557867519);
					PlayerTextDrawSetOutline(playerid, ptd_performance[playerid][3], 0);
					PlayerTextDrawSetProportional(playerid, ptd_performance[playerid][3], 1);
					PlayerTextDrawSetShadow(playerid, ptd_performance[playerid][3], 1);
					PlayerTextDrawUseBox(playerid, ptd_performance[playerid][3], 1);
					PlayerTextDrawBoxColor(playerid, ptd_performance[playerid][3], 255);
					PlayerTextDrawTextSize(playerid, ptd_performance[playerid][3], 11.000000, -veh_info[veh_id -1][v_brake_boost]* 12.7777);
					PlayerTextDrawSetSelectable(playerid, ptd_performance[playerid][3], 0);

					ptd_performance[playerid][4] = CreatePlayerTextDraw(playerid, 124.000000, 277.000000, "LD_SPAC:white");
					PlayerTextDrawBackgroundColor(playerid, ptd_performance[playerid][4], 0);
					PlayerTextDrawFont(playerid, ptd_performance[playerid][4], 4);
					PlayerTextDrawLetterSize(playerid, ptd_performance[playerid][4], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, ptd_performance[playerid][4], 10486015);
					PlayerTextDrawSetOutline(playerid, ptd_performance[playerid][4], 0);
					PlayerTextDrawSetProportional(playerid, ptd_performance[playerid][4], 1);
					PlayerTextDrawSetShadow(playerid, ptd_performance[playerid][4], 1);
					PlayerTextDrawUseBox(playerid, ptd_performance[playerid][4], 1);
					PlayerTextDrawBoxColor(playerid, ptd_performance[playerid][4], 255);
					PlayerTextDrawTextSize(playerid, ptd_performance[playerid][4], 11.000000, 0.000000);
					PlayerTextDrawSetSelectable(playerid, ptd_performance[playerid][4], 0);

					td_y = -veh_info[veh_id -1][v_stability_boost];
					ptd_performance[playerid][5] = CreatePlayerTextDraw(playerid, 124.000000, 277.000000, "LD_SPAC:white");
					PlayerTextDrawBackgroundColor(playerid, ptd_performance[playerid][5], 0);
					PlayerTextDrawFont(playerid, ptd_performance[playerid][5], 4);
					PlayerTextDrawLetterSize(playerid, ptd_performance[playerid][5], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, ptd_performance[playerid][5], 557867519);
					PlayerTextDrawSetOutline(playerid, ptd_performance[playerid][5], 0);
					PlayerTextDrawSetProportional(playerid, ptd_performance[playerid][5], 1);
					PlayerTextDrawSetShadow(playerid, ptd_performance[playerid][5], 1);
					PlayerTextDrawUseBox(playerid, ptd_performance[playerid][5], 1);
					PlayerTextDrawBoxColor(playerid, ptd_performance[playerid][5], 255);
					PlayerTextDrawTextSize(playerid, ptd_performance[playerid][5], 11.000000, td_y);
					PlayerTextDrawSetSelectable(playerid, ptd_performance[playerid][5], 0);

					for(new i = 0; i < 6; i ++)
					{
						PlayerTextDrawShow(playerid, ptd_performance[playerid][i]);
					}
					return 1;
				}
				else if(IsPlayerInRangeOfPoint(playerid, 5, 2393.8142,1482.8412,10.8203))
				{
					if(veh_info[veh_id -1][v_type] != vehicle_type_player) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Доступно только для личного транспорта.");
					if(get_passenger_count(playerid)> 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Для начала высадите всех пассажиров из транспорта.");

					if(v_velo(veh_id)|| v_plane(veh_id)|| v_boat(veh_id)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Автостанция не обслуживает такие транспортные средства.");
					if(b_info[4][b_close]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Тюнинг-ателье закрыто.");
					SetVehiclePos(veh_id, 947.4241,-1748.4412,1013.3640);
					new freeze_time;
					switch(GetPlayerPing(playerid))
					{
						case 5..100: freeze_time = 2500;
						case 101..200: freeze_time = 3000;
						case 201..300: freeze_time = 3000;
						default: freeze_time = 4000;
					}
					SetTimerEx("toggle_controlable", freeze_time, 0, "iii", playerid, true, true);
					SetVehicleZAngle(veh_id, 179);
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, playerid);
					LinkVehicleToInterior(veh_id, 0);
					SetVehicleVirtualWorld(veh_id, playerid);
					SetPlayerArmedWeapon(playerid, 0);
					SetPlayerCameraPos(playerid, tuning_camera_positions[0][0], tuning_camera_positions[0][1], tuning_camera_positions[0][2]);
					SetPlayerCameraLookAt(playerid, tuning_camera_positions[0][3], tuning_camera_positions[0][4], tuning_camera_positions[0][5]);


					speedometr_status(playerid, false);
					KillTimer(speed_timer[playerid]);
					speed_timer[playerid] = -1;
					for(new i = 0; i < 27; i ++)
					{
						TextDrawShowForPlayer(playerid, td_performance[i]);
					}
					SelectTextDraw(playerid, 0xB0C4DEFF);

					TogglePlayerControllable(playerid, false);
					SetPVarInt (playerid, "ptuning_opened", 5);

					ptd_performance[playerid][0] = CreatePlayerTextDraw(playerid, 44.000000, 277.000000, "LD_SPAC:white");
					PlayerTextDrawBackgroundColor(playerid, ptd_performance[playerid][0], 0);
					PlayerTextDrawFont(playerid, ptd_performance[playerid][0], 4);
					PlayerTextDrawLetterSize(playerid, ptd_performance[playerid][0], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, ptd_performance[playerid][0], 10486015);
					PlayerTextDrawSetOutline(playerid, ptd_performance[playerid][0], 0);
					PlayerTextDrawSetProportional(playerid, ptd_performance[playerid][0], 1);
					PlayerTextDrawSetShadow(playerid, ptd_performance[playerid][0], 1);
					PlayerTextDrawUseBox(playerid, ptd_performance[playerid][0], 1);
					PlayerTextDrawBoxColor(playerid, ptd_performance[playerid][0], 255);
					PlayerTextDrawTextSize(playerid, ptd_performance[playerid][0], 11.000000, 0.000000);
					PlayerTextDrawSetSelectable(playerid, ptd_performance[playerid][0], 0);

					new Float:td_y = -veh_info[veh_id -1][v_engine_boost]* 328.57;

					ptd_performance[playerid][1] = CreatePlayerTextDraw(playerid, 44.000000, 277.000000, "LD_SPAC:white");
					PlayerTextDrawBackgroundColor(playerid, ptd_performance[playerid][1], 0);
					PlayerTextDrawFont(playerid, ptd_performance[playerid][1], 4);
					PlayerTextDrawLetterSize(playerid, ptd_performance[playerid][1], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, ptd_performance[playerid][1], 557867519);
					PlayerTextDrawSetOutline(playerid, ptd_performance[playerid][1], 0);
					PlayerTextDrawSetProportional(playerid, ptd_performance[playerid][1], 1);
					PlayerTextDrawSetShadow(playerid, ptd_performance[playerid][1], 1);
					PlayerTextDrawUseBox(playerid, ptd_performance[playerid][1], 1);
					PlayerTextDrawBoxColor(playerid, ptd_performance[playerid][1], 255);
					PlayerTextDrawTextSize(playerid, ptd_performance[playerid][1], 11.000000, td_y);
					PlayerTextDrawSetSelectable(playerid, ptd_performance[playerid][1], 0);

					ptd_performance[playerid][2] = CreatePlayerTextDraw(playerid, 85.000000, 277.000000, "LD_SPAC:white");
					PlayerTextDrawBackgroundColor(playerid, ptd_performance[playerid][2], 0);
					PlayerTextDrawFont(playerid, ptd_performance[playerid][2], 4);
					PlayerTextDrawLetterSize(playerid, ptd_performance[playerid][2], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, ptd_performance[playerid][2], 10486015);
					PlayerTextDrawSetOutline(playerid, ptd_performance[playerid][2], 0);
					PlayerTextDrawSetProportional(playerid, ptd_performance[playerid][2], 1);
					PlayerTextDrawSetShadow(playerid, ptd_performance[playerid][2], 1);
					PlayerTextDrawUseBox(playerid, ptd_performance[playerid][2], 1);
					PlayerTextDrawBoxColor(playerid, ptd_performance[playerid][2], 255);
					PlayerTextDrawTextSize(playerid, ptd_performance[playerid][2], 11.000000, 0.000000);
					PlayerTextDrawSetSelectable(playerid, ptd_performance[playerid][2], 0);

					td_y = -veh_info[veh_id -1][v_brake_boost]* 12.7777;
					ptd_performance[playerid][3] = CreatePlayerTextDraw(playerid, 85.000000, 277.000000, "LD_SPAC:white");
					PlayerTextDrawBackgroundColor(playerid, ptd_performance[playerid][3], 0);
					PlayerTextDrawFont(playerid, ptd_performance[playerid][3], 4);
					PlayerTextDrawLetterSize(playerid, ptd_performance[playerid][3], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, ptd_performance[playerid][3], 557867519);
					PlayerTextDrawSetOutline(playerid, ptd_performance[playerid][3], 0);
					PlayerTextDrawSetProportional(playerid, ptd_performance[playerid][3], 1);
					PlayerTextDrawSetShadow(playerid, ptd_performance[playerid][3], 1);
					PlayerTextDrawUseBox(playerid, ptd_performance[playerid][3], 1);
					PlayerTextDrawBoxColor(playerid, ptd_performance[playerid][3], 255);
					PlayerTextDrawTextSize(playerid, ptd_performance[playerid][3], 11.000000, -veh_info[veh_id -1][v_brake_boost]* 12.7777);
					PlayerTextDrawSetSelectable(playerid, ptd_performance[playerid][3], 0);

					ptd_performance[playerid][4] = CreatePlayerTextDraw(playerid, 124.000000, 277.000000, "LD_SPAC:white");
					PlayerTextDrawBackgroundColor(playerid, ptd_performance[playerid][4], 0);
					PlayerTextDrawFont(playerid, ptd_performance[playerid][4], 4);
					PlayerTextDrawLetterSize(playerid, ptd_performance[playerid][4], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, ptd_performance[playerid][4], 10486015);
					PlayerTextDrawSetOutline(playerid, ptd_performance[playerid][4], 0);
					PlayerTextDrawSetProportional(playerid, ptd_performance[playerid][4], 1);
					PlayerTextDrawSetShadow(playerid, ptd_performance[playerid][4], 1);
					PlayerTextDrawUseBox(playerid, ptd_performance[playerid][4], 1);
					PlayerTextDrawBoxColor(playerid, ptd_performance[playerid][4], 255);
					PlayerTextDrawTextSize(playerid, ptd_performance[playerid][4], 11.000000, 0.000000);
					PlayerTextDrawSetSelectable(playerid, ptd_performance[playerid][4], 0);

					td_y = -veh_info[veh_id -1][v_stability_boost];
					ptd_performance[playerid][5] = CreatePlayerTextDraw(playerid, 124.000000, 277.000000, "LD_SPAC:white");
					PlayerTextDrawBackgroundColor(playerid, ptd_performance[playerid][5], 0);
					PlayerTextDrawFont(playerid, ptd_performance[playerid][5], 4);
					PlayerTextDrawLetterSize(playerid, ptd_performance[playerid][5], 0.500000, 1.000000);
					PlayerTextDrawColor(playerid, ptd_performance[playerid][5], 557867519);
					PlayerTextDrawSetOutline(playerid, ptd_performance[playerid][5], 0);
					PlayerTextDrawSetProportional(playerid, ptd_performance[playerid][5], 1);
					PlayerTextDrawSetShadow(playerid, ptd_performance[playerid][5], 1);
					PlayerTextDrawUseBox(playerid, ptd_performance[playerid][5], 1);
					PlayerTextDrawBoxColor(playerid, ptd_performance[playerid][5], 255);
					PlayerTextDrawTextSize(playerid, ptd_performance[playerid][5], 11.000000, td_y);
					PlayerTextDrawSetSelectable(playerid, ptd_performance[playerid][5], 0);

					for(new i = 0; i < 6; i ++)
					{
						PlayerTextDrawShow(playerid, ptd_performance[playerid][i]);
					}
					return 1;
				}

			}
		}

	}
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	#if defined debug_mode
		printf("[DEBUG] [OnPlayerStateChange] playerid:%d | newstate:%d | oldstate:%d", playerid, newstate, oldstate);
	#endif
	if(eev_called {playerid} == 0 && newstate == PLAYER_STATE_DRIVER)
	{
		new vehicle_id = GetPlayerVehicleID(playerid);
		SetVehiclePos(vehicle_id, veh_info[vehicle_id -1][v_pos][0], veh_info[vehicle_id -1][v_pos][1], veh_info[vehicle_id -1][v_pos][2]);
 	}
	if(oldstate == 2 || oldstate == 3)
	{
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		new Float:dif = GetDistanceBetweenPoints(x, y, 0.0, p_t_info [playerid][old_pos][0], p_t_info [playerid][old_pos][1], 0.0);
		if(dif < 100)
		{
			p_t_info[playerid][old_pos][0] = x;
			p_t_info[playerid][old_pos][1] = y;
			p_t_info[playerid][old_pos][2] = z;
		}
		printf("[ERROR] PLAYER_STATE_PASSENGER && GetVehicleModel: newstate: %d, oldstate: %d", newstate, oldstate);
	}

	if(newstate == PLAYER_STATE_PASSENGER &&(GetPlayerWeapon(playerid) ==  24 || GetPlayerWeapon(playerid) ==  25)) SetPlayerArmedWeapon(playerid, 0);
	foreach(new i: admin_players)
	{
		if(GetPVarInt(i, "spectate_status")-1 == playerid)
		{
			switch(GetPlayerState(playerid))
			{
				case 1:
				{
					SetPlayerInterior(i, p_t_info[playerid][p_data][0]);
					SetPlayerVirtualWorld(i, p_t_info[playerid][p_data][1]);
					TogglePlayerSpectating(i, true);
					PlayerSpectatePlayer(i, playerid);
				}
				case 2:
				{
					SetPlayerInterior(i, p_t_info[playerid][p_data][0]);
					SetPlayerVirtualWorld(i, p_t_info[playerid][p_data][1]);
					new veh_id = GetPlayerVehicleID(playerid);
					TogglePlayerSpectating(i, true);
					PlayerSpectateVehicle(i, veh_id);
				}
				case 3:
				{
					SetPlayerInterior(i, p_t_info[playerid][p_data][0]);
					SetPlayerVirtualWorld(i, p_t_info[playerid][p_data][1]);
					new veh_id = GetPlayerVehicleID(playerid);
					TogglePlayerSpectating(i, true);
					PlayerSpectateVehicle (i, veh_id);
				}
			}
		}
	}

	switch(newstate)
	{
		case PLAYER_STATE_PASSENGER:
		{
			DeletePVar(playerid,"removetimer");
			new _v_id = GetPlayerVehicleID(playerid);
			
			if(veh_info[_v_id -1][v_type] == vehicle_type_job && veh_info[_v_id -1][v_owner] == job_taxi && veh_info[_v_id -1][v_driver] != INVALID_PLAYER_ID)
			{
				new driverid = veh_info[_v_id -1][v_driver];
				if(player_rentcar[driverid] != _v_id || ! p_t_info[driverid][pTaxiPrice]) return 1;
				if(p_t_info [driverid][pTaxiPass] == INVALID_PLAYER_ID)
				{
					if(PlayerInfo[playerid][money] < p_t_info [driverid][pTaxiPrice])
					{
						SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У вас не хватает средств для того, чтобы воспользоваться такси.");
						return RemovePlayerFromVehicle(playerid);
					}
					p_t_info [driverid][pTaxiStart] = veh_info[_v_id -1][v_millage];
					p_t_info [driverid][pTaxiPass] = playerid;
					p_t_info [driverid][pTaxiGoing] = true;
					SetPVarInt(playerid, "taxi_driver_id", driverid);
					show_dialog(playerid, d_taxi_mark, DIALOG_STYLE_LIST, ""c_server"Навигатор таксиста", ""c_server"1. "c_white"Установить метку на карте\n"c_server"2. "c_white"Установить метку из GPS навигатора\n"c_grey"Продолжать поездку без навигатора", "Выбрать", "Закрыть");
				}
				else
				{
					if(p_t_info [driverid][pTaxiTurn][0] == INVALID_PLAYER_ID) p_t_info [driverid][pTaxiTurn][0] = playerid;
					else if(p_t_info [driverid][pTaxiTurn][1] == INVALID_PLAYER_ID) p_t_info [driverid][pTaxiTurn][1] = playerid;
					else
					{
						if(!IsPlayerConnected(p_t_info [driverid][pTaxiTurn][0]) || GetPlayerVehicleID(p_t_info [driverid][pTaxiTurn][0]) != _v_id)
						{
							if(p_t_info [driverid][pTaxiTurn][1] != INVALID_PLAYER_ID)
							{
								p_t_info [driverid][pTaxiTurn][0] = p_t_info [driverid][pTaxiTurn][1];
								p_t_info [driverid][pTaxiTurn][1] = playerid;
							}
							else p_t_info [driverid][pTaxiTurn][0] = playerid;
						}
						else if(!IsPlayerConnected(p_t_info [driverid][pTaxiTurn][1]) || GetPlayerVehicleID(p_t_info [driverid][pTaxiTurn][1]) != _v_id)
						{
							p_t_info [driverid][pTaxiTurn][1] = playerid;
						}
						else
						{
							SendClientMessage(playerid,col_gray,""c_orange_red"* "c_grey"Сядьте в такси снова, произошла ошибка.");
							RemovePlayerFromVehicle(playerid);
						}
					}
				}
			}
			if(veh_info[_v_id -1][v_type] == vehicle_type_job && veh_info[_v_id -1][v_owner] == job_bus && veh_info[_v_id -1][v_driver] != INVALID_PLAYER_ID)
			{
				new driverid = veh_info[_v_id -1][v_driver];
				if(player_rentcar[driverid] != _v_id || ! p_t_info[driverid][pTaxiPrice]) return 1;
				new price = p_t_info[driverid][pBusPrice];

				if(PlayerInfo[playerid][money] < price) return me_action(playerid, "показал проездной водителю");
				give_money(driverid, price);
				give_money(playerid, -price);
				insert_money_log(driverid, playerid, price, "bus driver");

				new string[9];
				format(string, sizeof(string), "~b~+%i$", price);
				GameTextForPlayer(driverid, string, 1000, 1);
				format(string, sizeof(string), "~r~-%i$", price);
				GameTextForPlayer(playerid,string,1000, 1);
			}
		}
		case PLAYER_STATE_DRIVER:
		{
			SetPlayerArmedWeapon(playerid, 0);
			DeletePVar(playerid,"removetimer");
			new veh_id = GetPlayerVehicleID(playerid);
			player_vehicle[playerid] = veh_id;

			veh_info[veh_id -1][v_driver] = playerid;


			new exam_vehicle_id = GetPVarInt(playerid, "exam_vehicle");
			if(exam_vehicle_id > 0)
			{
				is_leave_exam_vehicle {playerid} = 0;
				DeletePVar(playerid, "leaved_ex_vehicle");
			}

			if(veh_info[veh_id -1][v_type] == vehicle_type_job && veh_info[veh_id -1][v_model] == 462 && player_rentcar[playerid] != veh_id)
			{
   				SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Данный мопед арендован другим игроком.");
				RemovePlayerFromVehicle(playerid);
				return 1;

			}

	  		if(v_boat(veh_id) && PlayerInfo[playerid][boat_lic] == 0 && exam_vehicle_id == 0)
			{
   				SendClientMessage (playerid, col_gray,""c_orange_red"* "c_grey"У вас нет лицензии на водный транспорт.");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(PlayerInfo[playerid][fly_lic] == 0 && v_plane(veh_id) && exam_vehicle_id == 0)
			{
			    SendClientMessage (playerid, col_gray,""c_orange_red"* "c_grey"У вас нет лицензии на воздушный транспорт.");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}
			if(driving_license(veh_id) && PlayerInfo[playerid][drive_lic] == 0 && exam_vehicle_id == 0)
			{
			    SendClientMessage (playerid, col_gray,""c_orange_red"* "c_grey"У вас нет водительских прав.");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}

			if(GetVehicleModel(veh_id) ==  420 && veh_info[veh_id -1][v_type] == 0)
			{
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Этот транспорт недоступен для Вас.");
				return 1;
			}
			if(veh_info[veh_id -1][v_type] == vehicle_type_server)
			{
				if(veh_info[veh_id -1][v_owner] != PlayerInfo[playerid][member])
				{
					RemovePlayerFromVehicle(playerid);
					SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Этот транспорт недоступен для Вас.");
					return 1;
				}
				if(veh_info[veh_id -1][v_rank] > PlayerInfo[playerid][rank])
				{
					RemovePlayerFromVehicle(playerid);
					new _t_string[64];
					format(_t_string, sizeof _t_string, ""c_orange_red"* "c_grey"Транспорт доступен с "c_orange_red"%d"c_grey" ранга.", veh_info[veh_id -1][v_rank]);
					SendClientMessage(playerid, col_gray, _t_string);
					return 1;
				}
			}

			else if(veh_info[veh_id -1][v_type] == vehicle_type_job)
			{
				if(veh_info[veh_id -1][v_owner] != PlayerInfo[playerid][job] && veh_info[veh_id -1][v_owner] != PlayerInfo[playerid][timejob] && veh_info[veh_id -1][v_model] != 462)
				{
					static const job_status[][] = {
					"водителем автобуса",
					"таксистом",
					"механиком",
					"дальнобойщиком",
					"развозчиком продуктов",
					"развозчиком топлива",
					"газонокосильщиком"};

					if(veh_info[veh_id -1][v_owner] != job_forklift)
					{
						RemovePlayerFromVehicle(playerid);
						new _t_string[86];
						format(_t_string, sizeof _t_string, ""c_orange_red"* "c_grey"Вы не работаете "c_orange_red"%s"c_grey".", job_status[veh_info[veh_id -1][v_owner] -1]);
						SendClientMessage(playerid, col_gray, _t_string);
					}
					else
					{
						RemovePlayerFromVehicle(playerid);
						SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не работаете "c_orange_red"водителем погрузчика"c_grey".");
					}
					return 1;
				}
				else if(veh_id != player_rentcar[playerid]&&(veh_info[veh_id -1][v_owner] == PlayerInfo[playerid][job] || veh_info[veh_id -1][v_owner] == PlayerInfo[playerid][timejob]))
				{
					show_dialog(playerid, d_rent_car, DIALOG_STYLE_MSGBOX, ""c_server"Аренда транспорта", ""c_white"Стоимость аренды составляет - "c_green"250$\n\n"c_grey"* Вы действительно желаете арендовать данный транспорт?", "Аренда", "Отмена");
				}
			}
			else if(veh_info[veh_id -1][v_type] == vehicle_type_player)
			{
				if(veh_info[veh_id -1][v_sell_price] > 0)
				{
					if(veh_info[veh_id -1][v_owner] != PlayerInfo[playerid][id])
					{
						format(global_string, sizeof(global_string),
						""c_server"Покупка транспорта:\n\n\
						"c_server"* "c_grey"Модель: "c_white"%s\n\
						"c_server"* "c_grey"Стоимость: "c_white"%d$\n\
						"c_server"* "c_grey"Номер: "c_white"%s\n\
						"c_server"* "c_grey"Пробег: "c_white"%d\n\n\
						"c_server"Установленные улучшения:\n",
						vehicle_name[GetVehicleModel(veh_id)-400],
						veh_info[veh_id -1][v_sell_price],
						veh_info[veh_id -1][v_plate],
						floatround(veh_info[veh_id -1][v_millage]));
						for(new j = 0; j < 5; j ++)
						{
							if(veh_info[veh_id -1][v_pt_engine][j] == 0) continue;
							strcat(global_string, engine_ptune[j]);
							strcat(global_string, "\n");
						}
						for(new j = 0; j < 5; j ++)
						{
							if(veh_info[veh_id -1][v_pt_brake][j] == 0) continue;
							strcat(global_string, brake_ptune[j]);
							strcat(global_string, "\n");
						}
						for(new j = 0; j < 5; j ++)
						{
							if(veh_info[veh_id -1][v_pt_stability][j] == 0) continue;
							strcat(global_string, stability_ptune[j]);
							strcat(global_string, "\n");
						}
						strcat(global_string, "\n\n");
						strcat(global_string, ""c_grey"Вы действительно желаете приобрести данный транспорт?");
						show_dialog(playerid, d_carmarket_buy, DIALOG_STYLE_MSGBOX, ""c_server"Авторынок", global_string, "Купить", "Отмена");

					}
					else if(veh_info[veh_id -1][v_owner] == PlayerInfo[playerid][id])
					{
						show_dialog(playerid, d_carmarket_buy, DIALOG_STYLE_MSGBOX, ""c_server"Продажа транспорта", ""c_white"Ваш транспорт продаётся, Вы действительно желаете снять его с продажи?\n\n"c_grey"* Стоимость услуг авторынка возвращена не будет.", "Принять", "Отмена");
					}
					return 1;
				}
			}
			if(v_velo(veh_id)|| v_plane(veh_id)|| v_boat(veh_id)) return 1;
			speedometr_status(playerid, true);

			speed_timer[playerid] = SetTimerEx("UpdatePlayerSpeedometr", 200, 1, "i", playerid);
			SendClientMessage(playerid, col_gray, ""c_server"* "c_grey"Нажмите "c_server"\"CTRL\""c_grey", чтобы завести двигатель.");
		}
	}
	if(oldstate == PLAYER_STATE_DRIVER)
    {
		if(StartRace == 2)
		{
			if(is_player_race_regged[playerid])
			{
				DestroyVehicle(player_race_vehicle[playerid]);
				new ch = (player_race_cp[playerid] -2);
				if(ch >= 0)
				{
					switch(RaceMap)
					{
						case 1:
						{
							set_race_pos(playerid, Race_Treck_Checkpoint_0[ch][0], Race_Treck_Checkpoint_0[ch][1], Race_Treck_Checkpoint_0[ch][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_Checkpoint_0[ch][0], Race_Treck_Checkpoint_0[ch][1], Race_Treck_Checkpoint_0[ch][2], Race_Treck_Checkpoint_0[ch][3], random(126), random(126), -1);
						}
						case 2:
						{
							set_race_pos(playerid, Race_Treck_Checkpoint_1[ch][0], Race_Treck_Checkpoint_1[ch][1], Race_Treck_Checkpoint_1[ch][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_Checkpoint_1[ch][0], Race_Treck_Checkpoint_1[ch][1], Race_Treck_Checkpoint_1[ch][2], Race_Treck_Checkpoint_1[ch][3], random(126), random(126), -1);
						}
						case 3:
						{
							set_race_pos(playerid, Race_Treck_Checkpoint_2[ch][0], Race_Treck_Checkpoint_2[ch][1], Race_Treck_Checkpoint_2[ch][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_Checkpoint_2[ch][0], Race_Treck_Checkpoint_2[ch][1], Race_Treck_Checkpoint_2[ch][2], Race_Treck_Checkpoint_2[ch][3], random(126), random(126), -1);
						}
						case 4:
						{
							set_race_pos(playerid, Race_Treck_Checkpoint_3[ch][0], Race_Treck_Checkpoint_3[ch][1], Race_Treck_Checkpoint_3[ch][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_Checkpoint_3[ch][0], Race_Treck_Checkpoint_3[ch][1], Race_Treck_Checkpoint_3[ch][2], Race_Treck_Checkpoint_3[ch][3], random(126), random(126), -1);
						}
						case 5:
						{
							set_race_pos(playerid, Race_Treck_Checkpoint_4[ch][0], Race_Treck_Checkpoint_4[ch][1], Race_Treck_Checkpoint_4[ch][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_Checkpoint_4[ch][0], Race_Treck_Checkpoint_4[ch][1], Race_Treck_Checkpoint_4[ch][2], Race_Treck_Checkpoint_4[ch][3], random(126), random(126), -1);
						}
						case 6:
						{
							set_race_pos(playerid, Race_Treck_Checkpoint_5[ch][0], Race_Treck_Checkpoint_5[ch][1], Race_Treck_Checkpoint_5[ch][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_Checkpoint_5[ch][0], Race_Treck_Checkpoint_5[ch][1], Race_Treck_Checkpoint_5[ch][2], Race_Treck_Checkpoint_5[ch][3], random(126), random(126), -1);
						}
						case 7:
						{
							set_race_pos(playerid, Race_Treck_Checkpoint_6[ch][0], Race_Treck_Checkpoint_6[ch][1], Race_Treck_Checkpoint_6[ch][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_Checkpoint_6[ch][0], Race_Treck_Checkpoint_6[ch][1], Race_Treck_Checkpoint_6[ch][2], Race_Treck_Checkpoint_6[ch][3], random(126), random(126), -1);
						}
						case 8:
						{
							set_race_pos(playerid, Race_Treck_Checkpoint_7[ch][0], Race_Treck_Checkpoint_7[ch][1], Race_Treck_Checkpoint_7[ch][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_Checkpoint_7[ch][0], Race_Treck_Checkpoint_7[ch][1], Race_Treck_Checkpoint_7[ch][2], Race_Treck_Checkpoint_7[ch][3], random(126), random(126), -1);
						}
						case 9:
						{
							set_race_pos(playerid, Race_Treck_Checkpoint_8[ch][0], Race_Treck_Checkpoint_8[ch][1], Race_Treck_Checkpoint_8[ch][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_Checkpoint_8[ch][0], Race_Treck_Checkpoint_8[ch][1], Race_Treck_Checkpoint_8[ch][2], Race_Treck_Checkpoint_8[ch][3], random(126), random(126), -1);
						}
					}
				}
				else
				{
					new rand = random(2);
					switch(RaceMap)
					{
						case 1:
						{
							set_race_pos(playerid, Race_Treck_VehPos_0[rand][0], Race_Treck_VehPos_0[rand][1], Race_Treck_VehPos_0[rand][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_0[rand][0], Race_Treck_VehPos_0[rand][1], Race_Treck_VehPos_0[rand][2], Race_Treck_VehPos_0[rand][3], random(126), random(126), -1);
						}
						case 2:
						{
							set_race_pos(playerid, Race_Treck_VehPos_1[rand][0], Race_Treck_VehPos_1[rand][1], Race_Treck_VehPos_1[rand][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_1[rand][0], Race_Treck_VehPos_1[rand][1], Race_Treck_VehPos_1[rand][2], Race_Treck_VehPos_1[rand][3], random(126), random(126), -1);
						}
						case 3:
						{
							set_race_pos(playerid, Race_Treck_VehPos_2[rand][0], Race_Treck_VehPos_2[rand][1], Race_Treck_VehPos_2[rand][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_2[rand][0], Race_Treck_VehPos_2[rand][1], Race_Treck_VehPos_2[rand][2], Race_Treck_VehPos_2[rand][3], random(126), random(126), -1);
						}
						case 4:
						{
							set_race_pos(playerid, Race_Treck_VehPos_3[rand][0], Race_Treck_VehPos_3[rand][1], Race_Treck_VehPos_3[rand][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_3[rand][0], Race_Treck_VehPos_3[rand][1], Race_Treck_VehPos_3[rand][2], Race_Treck_VehPos_3[rand][3], random(126), random(126), -1);
						}
						case 5:
						{
							set_race_pos(playerid, Race_Treck_VehPos_4[rand][0], Race_Treck_VehPos_4[rand][1], Race_Treck_VehPos_4[rand][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_4[rand][0], Race_Treck_VehPos_4[rand][1], Race_Treck_VehPos_4[rand][2], Race_Treck_VehPos_4[rand][3], random(126), random(126), -1);
						}
						case 6:
						{
							set_race_pos(playerid, Race_Treck_VehPos_5[rand][0], Race_Treck_VehPos_5[rand][1], Race_Treck_VehPos_5[rand][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_5[rand][0], Race_Treck_VehPos_5[rand][1], Race_Treck_VehPos_5[rand][2], Race_Treck_VehPos_5[rand][3], random(126), random(126), -1);
						}
						case 7:
						{
							set_race_pos(playerid, Race_Treck_VehPos_6[rand][0], Race_Treck_VehPos_6[rand][1], Race_Treck_VehPos_6[rand][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_6[rand][0], Race_Treck_VehPos_6[rand][1], Race_Treck_VehPos_6[rand][2], Race_Treck_VehPos_6[rand][3], random(126), random(126), -1);
						}
						case 8:
						{
							set_race_pos(playerid, Race_Treck_VehPos_7[rand][0], Race_Treck_VehPos_7[rand][1], Race_Treck_VehPos_7[rand][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_7[rand][0], Race_Treck_VehPos_7[rand][1], Race_Treck_VehPos_7[rand][2], Race_Treck_VehPos_7[rand][3], random(126), random(126), -1);
						}
						case 9:
						{
							set_race_pos(playerid, Race_Treck_VehPos_8[rand][0], Race_Treck_VehPos_8[rand][1], Race_Treck_VehPos_8[rand][2], 0.0, 0, 44);
							player_race_vehicle[playerid] = CreateVehicle(RaceVehicle, Race_Treck_VehPos_8[rand][0], Race_Treck_VehPos_8[rand][1], Race_Treck_VehPos_8[rand][2], Race_Treck_VehPos_8[rand][3], random(126), random(126), -1);
						}
					}
				}
				new carrac = player_race_vehicle[playerid];
				SetVehicleVirtualWorld(carrac, 44);
				LinkVehicleToInterior(carrac, 0);
				PutPlayerInVehicle(playerid, carrac, 0);
				SetVehicleParamsEx(carrac, 1, 1, 0, 1, 0, 0, 0);
			}
		}
		if(GetPVarInt(playerid, "f_biz"))
		{
			toggle_controlable(playerid, true, false);
			for(new i = 0; i < 8; i ++)
			{
				if(i < 3)
				{
					PlayerTextDrawDestroy(playerid, filling_ptd[playerid][i]);
					filling_ptd[playerid][i] = PlayerText:-1;
				}
				TextDrawHideForPlayer(playerid, filling_td[i]);
			}
			DeletePVar(playerid, "f_biz");
			filling_count {playerid} = 0;
		}
    }
	return 1;
}


callback: UpdatePlayerSpeedometr(playerid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new engine, lights, alarm, doors, bonnet, boot, objective, vehicleid = GetPlayerVehicleID(playerid);
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);

		new Float:_coord[3];
		GetVehicleVelocity(vehicleid,_coord[0],_coord[1],_coord[2]);

		new Float:v_speed = floatsqroot(floatpower(floatabs(_coord[0]), 2.0)+ floatpower(floatabs(_coord[1]), 2.0)+ floatpower(floatabs(_coord[2]), 2.0))* 100.3;
		new Float:veh_health_now;
		GetVehicleHealth(vehicleid,veh_health_now);
		GetVehicleRotation(vehicleid, _coord[0],_coord[1],_coord[2]);

		if(veh_health_now -veh_info[vehicleid -1][v_health] == 0 && veh_info[vehicleid -1][v_ems] == false)
		{
			if(veh_info[vehicleid -1][v_engine_boost] > 0)//(_z_angle -veh_info[vehicleid -1][v_old_zangle] < 0.1 && _z_angle -veh_info[vehicleid -1][v_old_zangle] > -0.1)
			{
				if(v_speed > 30 && ! IsVehicleDrivingBackwards(vehicleid) &&(_coord[2] -veh_info[vehicleid -1][v_old_zangle] < 1 && _coord[2] -veh_info[vehicleid -1][v_old_zangle] > -1))
				{
					if(GetVehicleSpeed(vehicleid) < max_veh_speed[GetVehicleModel(vehicleid)-400] -50 && 30 > _coord[0] > -30 && 15 > _coord[1] > -15)
					{
						if(v_speed -veh_info[vehicleid -1][v_old_speed] < 3 && v_speed -veh_info[vehicleid -1][v_old_speed] > 0.6)
						{
							SetVehicleSpeed(vehicleid, v_speed + veh_info[vehicleid -1][v_engine_boost]* 5);
							veh_info[vehicleid -1][v_old_zangle] = _coord[2];
						}
					}
					else
					{
						if(v_speed -veh_info[vehicleid -1][v_old_speed] < 3 && v_speed -veh_info[vehicleid -1][v_old_speed] >= -1.5 && GetVehicleSpeed(vehicleid) < max_veh_speed[GetVehicleModel(vehicleid)-400] -50 + veh_info[vehicleid -1][v_engine_boost]* 180)
						{
							if(30 > _coord[0] > -30 && 15 > _coord[1] > -15)
							{
								SetVehicleSpeed(vehicleid, v_speed + veh_info[vehicleid -1][v_engine_boost]* 2);
								veh_info[vehicleid -1][v_old_zangle] = _coord[2];
							}
						}
					}
					veh_info[vehicleid -1][v_old_speed] = v_speed;
				}
			}
			if(veh_info[vehicleid -1][v_brake_boost] > 0)
			{
				if(veh_info[vehicleid -1][v_old_speed] > 40 &&(_coord[2] -veh_info[vehicleid -1][v_old_zangle] < 0.3 && _coord[2] -veh_info[vehicleid -1][v_old_zangle] > -0.3) && 1000 >= GetTickCount()-player_holding_key_down[playerid] >= 150)
				{
					SetVehicleSpeed(vehicleid, v_speed -veh_info[vehicleid -1][v_brake_boost]);
					veh_info[vehicleid -1][v_old_zangle] = _coord[2];
				}
				veh_info[vehicleid -1][v_old_speed] = v_speed;
			}
		}
		if(veh_info[vehicleid -1][v_ems] == true)
		{
			if(v_speed > 30)SetVehicleSpeed(vehicleid, 30);
			veh_info[vehicleid -1][v_old_zangle] = _coord[2];

		}
		veh_info[vehicleid -1][v_old_zangle] = _coord[2];
		veh_info[vehicleid -1][v_health] = veh_health_now;
		veh_info[vehicleid -1][v_old_speed] = v_speed;

		new src[64];
		new speed = floatround((GetVehicleSpeed(vehicleid)), floatround_ceil);

		PlayerTextDrawColor(playerid, TextDrawSpeedP[playerid][1],
			(engine == VEHICLE_PARAMS_UNSET || engine == VEHICLE_PARAMS_OFF) ? -347323649 : 8388863);

		PlayerTextDrawColor(playerid, TextDrawSpeedP[playerid][2],
			(veh_info[vehicleid -1][v_locked]) ? -347323649 : 8388863);

		PlayerTextDrawColor(playerid, TextDrawSpeedP[playerid][3],
			(lights == VEHICLE_PARAMS_UNSET || lights == VEHICLE_PARAMS_OFF) ? -347323649 : 8388863);

		valstr(src, speed);
		PlayerTextDrawSetString(playerid, TextDrawSpeedP[playerid][4], src);

		format(src, 20, "%05.01f KM", veh_info[vehicleid -1][v_millage]);
		PlayerTextDrawSetString(playerid, TextDrawSpeedP[playerid][5], src);

		format(src, 20, "%.1f L", veh_info[vehicleid -1][v_fuel]);
		PlayerTextDrawSetString(playerid, TextDrawSpeedP[playerid][6], src);

		PlayerTextDrawTextSize(playerid, TextDrawSpeedP[playerid][7], (52.0000 / 700 * (veh_info[vehicleid -1][v_health] -300)), 3.0000);

		for(new td = 0; td < 8; td++) PlayerTextDrawShow(playerid, TextDrawSpeedP[playerid][td]);


		if(p_t_info[playerid][pTaxiGoing])
		{
			if(p_t_info[playerid][pTaxiTurn][0] != INVALID_PLAYER_ID)
			{
				new gig = p_t_info[playerid][pTaxiTurn][0];
				if(!IsPlayerConnected(gig)|| GetPlayerVehicleID(gig) != vehicleid)p_t_info[playerid][pTaxiTurn][0] = INVALID_PLAYER_ID;
			}
			if(p_t_info[playerid][pTaxiTurn][1] != INVALID_PLAYER_ID)
			{
				new gig = p_t_info[playerid][pTaxiTurn][1];
				if(!IsPlayerConnected(gig)|| GetPlayerVehicleID(gig) != vehicleid)p_t_info[playerid][pTaxiTurn][1] = INVALID_PLAYER_ID;
			}
			new passid = p_t_info[playerid][pTaxiPass];
			if(!IsPlayerConnected(passid)|| passid == INVALID_PLAYER_ID)
			{
				p_t_info[playerid][pTaxiGoing] = false;
				p_t_info[playerid][pTaxiPass] = INVALID_PLAYER_ID;
				p_t_info[playerid][pTaxiStart] = 0.0;
			}
			else
			{
				new sum = floatround((veh_info[vehicleid -1][v_millage] -p_t_info[playerid][pTaxiStart])*p_t_info[playerid][pTaxiPrice]);
				if(GetPlayerState(passid) == PLAYER_STATE_PASSENGER && GetPlayerVehicleID(passid) == vehicleid)
				{
					new mes[24];
					format(mes,sizeof(mes),"~w~%d$",sum);
					GameTextForPlayer(playerid,mes,300,4);
					GameTextForPlayer(passid,mes,300,4);
					if(PlayerInfo[passid][money] < sum)
					{
						SendClientMessage(passid, col_white, !""scm_error"Недостаточно денег для проезда на такси.");
						if(PlayerInfo[passid][money] -sum > -5 && sum > 0)
						{
							give_money(playerid, sum);
							give_money(passid, -sum);
						}
						p_t_info[playerid][pTaxiGoing] = false;
						p_t_info[playerid][pTaxiPass] = INVALID_PLAYER_ID;
						p_t_info[playerid][pTaxiStart] = 0.0;
						RemovePlayerFromVehicle(passid);
						DeletePVar(passid, "taxi_driver_id");
						DeletePVar(passid, "map_mark");
						passid = INVALID_PLAYER_ID;
						return 1;
					}
				}
				else
				{
					p_t_info[playerid][pTaxiGoing] = false;
					p_t_info[playerid][pTaxiPass] = INVALID_PLAYER_ID;
					p_t_info[playerid][pTaxiStart] = 0.0;
					DeletePVar(passid, "taxi_driver_id");
					DeletePVar(passid, "map_mark");
					if(sum > 0)
					{
						give_money(playerid, sum);
						give_money(passid, -sum);
					}
					passid = INVALID_PLAYER_ID;
				}
			}
			if(passid == INVALID_PLAYER_ID && p_t_info[playerid][pTaxiTurn][0] != INVALID_PLAYER_ID)
			{
				passid = p_t_info[playerid][pTaxiTurn][0];
				if(IsPlayerConnected(passid) && GetPlayerVehicleID(passid) == vehicleid)
				{
					if(PlayerInfo[passid][money] < p_t_info[playerid][pTaxiPrice])
					{
						SendClientMessage(passid, col_white, !""scm_error"Недостаточно денег для проезда на такси.");
						return RemovePlayerFromVehicle(passid);
					}
					p_t_info[playerid][pTaxiStart] = veh_info[vehicleid -1][v_millage];
					p_t_info[playerid][pTaxiPass] = passid;
					p_t_info[playerid][pTaxiGoing] = true;
					p_t_info[playerid][pTaxiTurn][0] = INVALID_PLAYER_ID;
					SetPVarInt(passid, "taxi_driver_id", playerid);
					show_dialog(passid, d_taxi_mark, DIALOG_STYLE_LIST, ""scm_dialog"Навигатор таксиста", ""c_server"1 | "c_white"Установить метку на карте\n"c_server"2 | "c_white"Установить метку из GPS навигатора\n"c_grey"Продолжать поездку без навигатора", "Выбрать", "Закрыть");
					new mes[128];
					format(mes,sizeof(mes),""scm_info"Теперь за проезд будет платить "c_green"%s"c_white".",PlayerInfo[passid][name]);
					SendClientMessage(playerid, col_white, mes);
					SendClientMessage(passid, col_white, !""scm_info"Теперь "c_green"Вы"c_white" платите за проезд.");
				}
				else p_t_info[playerid][pTaxiTurn][0] = INVALID_PLAYER_ID;
			}
			if(p_t_info[playerid][pTaxiTurn][1] != INVALID_PLAYER_ID && p_t_info[playerid][pTaxiTurn][0] == INVALID_PLAYER_ID){p_t_info[playerid][pTaxiTurn][0] = p_t_info[playerid][pTaxiTurn][1]; p_t_info[playerid][pTaxiTurn][1] = INVALID_PLAYER_ID;}
		}

	}
	else
	{
		speedometr_status(playerid, false);
		KillTimer(speed_timer[playerid]);
		speed_timer[playerid] = -1;
	}
	return 1;
}




public OnPlayerEnterDynamicArea(playerid, areaid)
{
	if(p_t_info[playerid][p_logged] == false) return 0;
	#if defined debug_mode
		printf("[DEBUG] [OnPlayerEnterDynamicArea] playerid: %d | areaid:%d", playerid, areaid);
	#endif
	#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
		printf("Photographer | OnPlayerEnterDynamicArea | area_id: %d | dynamic_sphere_photographer_id: %d", areaid,
																											 dynamic_area_photographer_job[playerid]);

	#endif
	used_area[playerid] = areaid;

    foreachRadar(i)
    {
        if(areaid == i)
        {
            if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
            {
                //if(IsAPlane(GetPlayerVehicleID(playerid)) || IsABoat(GetPlayerVehicleID(playerid)) || IsABike(GetPlayerVehicleID(playerid))) break; // ??? ??????? ????????? ?? ?????? ?? ?? ? ????????, ????? ??? ??????!!!
                RadarTimer[playerid] = SetTimerEx("CallBackRadar",500,false,"ii",playerid,areaid);
            }
            break;
        }
    }
	if(GetPlayerState(playerid) ==  PLAYER_STATE_ONFOOT)
	{
		if(areaid >= anti_dm_area[0]&& areaid <= anti_dm_area[MAX_DM_ZONE -1])
		{
			is_player_in_dmzone {playerid} = 1;
			SetPVarInt(playerid, "zz_td_status", 1);

			if(GetPVarInt(playerid, "leavezz_td_status") == 1)
			{
				DeletePVar(playerid, "leavezz_td_status");
				for(new j = 0; j < 3; j ++)
				{
					TextDrawHideForPlayer(playerid, leave_zz_td[j]);
				}
			}
			for(new j = 0; j < 3; j ++)
			{

				TextDrawShowForPlayer(playerid, zz_td[j]);
				SetTimerEx("clear_zz_td", 3300, false, "d", playerid);
			}
			return 1;
		}
		else if(areaid >= non_parking_area[0]&& areaid <= non_parking_area[MAX_NONPARKING_ZONES -1])
		{
			is_player_nonpark_zone {playerid} = 1;

			SetPVarInt(playerid, "np_td_status", 1);


			if(GetPVarInt(playerid, "leavenp_td_status") == 1)
			{
				DeletePVar(playerid, "leavenp_td_status");
				for(new j = 0; j < 3; j ++)
				{
					TextDrawHideForPlayer(playerid, leave_np_td[j]);
				}
			}

			for(new j = 0; j < 3; j ++)
			{
				TextDrawShowForPlayer(playerid, np_td[j]);
				SetTimerEx("clear_np_td", 3300, false, "d", playerid);
			}
			return 1;
		}
		if(GetPVarInt(playerid, "tp_area_used")) return DeletePVar(playerid, "tp_area_used");


		if(areaid == factory_take_area)
		{
			if(PlayerInfo[playerid][timejob] != job_factory) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Для начала необходимо устроиться на работу.");
			if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас уже есть что-то в руках.");
			SetPVarInt(playerid, "have_factory_box", 1);
			SetPlayerAttachedObject(playerid, 0, 2358,6, 0.0, 0.10, -0.2, -110.0,0.0,78.0);
			SendClientMessage (playerid, col_white , ""c_green"* "c_white"Вы взяли ящик с заготовками. Отправляйтесь к столу для укомплектовки.");
			ClearAnimations(playerid);
			p_t_info[playerid][p_animation] = true;
			ApplyAnimation(playerid,"CARRY","crry_prtial", 4.1, 0, 1, 1, 1, 1);
		}
		if(gang_player(playerid)|| mafia_player(playerid))
		{
			if(areaid == dorm_area[PlayerInfo[playerid][member] -18])
			{
				show_dialog(playerid, d_dorm, DIALOG_STYLE_LIST, ""c_server"Общак", "Положить наркотики\nПоложить патроны\nПоложить ед.оружия\nПоложить деньги\nВзять наркотики\nВзять патроны\nВзять ед.оружия\nВзять деньги", "Выбрать", "Назад");
				return 1;
			}
			if(areaid >= stolen_ammo_area[0]&& areaid <= stolen_ammo_area[4])
			{
				new need_materials = 500 -PlayerInfo[playerid][crim_guns];
				if(f_info[7][f_materials] < need_materials) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"На складе армии нет оружия и боеприпасов.");
				if(need_materials <= 0 && PlayerInfo[playerid][crim_ammo] -500 <= 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете унести больше оружия и боеприпасов.");

				f_info[7][f_materials] -= need_materials;
				PlayerInfo[playerid][crim_guns] = 500;
				PlayerInfo[playerid][crim_ammo] = 500;

				SendClientMessage(playerid, col_white, ""c_green"* "c_white" Вы украли оружие и боеприпасы со склада.");
			}
			else if(areaid >= stolen_box_area[0]&& areaid <= stolen_box_area[11])
			{
				if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас уже есть что-то в руках.");
				SetPVarInt(playerid, "have_box", 1);
				SetPlayerAttachedObject(playerid, 0, 2358,6,0.0,0.10,-0.2, -110.0,0.0,78.0);
				SendClientMessage (playerid, col_white , "Вы взяли ящик с патронами. Отнесите и положите его в фургон.");
				ClearAnimations(playerid);
				p_t_info[playerid][p_animation] = true;
				ApplyAnimation(playerid,"CARRY","crry_prtial", 4.1, 0, 1, 1, 1, 1);
			}
		}
		if(areaid >= table_area[0]&& areaid <= table_area[MAX_GUNWORK_TABLE -1])
		{
			if(PlayerInfo[playerid][timejob] != job_factory) return 1;
			if(IsPlayerAttachedObjectSlotUsed(playerid, 0) && GetPVarInt(playerid, "have_factory_box") ==  0) return 1;
			if(GetPVarInt(playerid, "have_factory_box") ==  0) return 1;
			for(new i = 0; i < MAX_GUNWORK_TABLE; i ++)
			{
				if(table_area[i] == areaid)
				{
					if(table_area_toggled[i] != INVALID_PLAYER_ID) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Данный стол уже занят другим рабочим.");
					ClearAnimations(playerid);
					ApplyAnimation(playerid, "CAR_CHAT", "CAR_Sc4_BL", 4.0, 1, 1, 1, 1, 5800, 0);
					p_t_info[playerid][p_animation] = true;

					job_timer[playerid] = SetTimerEx("main_jobs_timer",5800,false,"i",playerid);


					DeletePVar(playerid, "have_factory_box");
					SetPVarInt(playerid, "factory_table_id", i);
					SetPVarInt(playerid, "factory_object",  CreateDynamicObject(2359, factory_box_pos[i][0], factory_box_pos[i][1], factory_box_pos[i][2], factory_box_pos[i][3], factory_box_pos[i][4], factory_box_pos[i][5]));

					SetPlayerAttachedObject(playerid, 0, 18644,5, 0.078999,0.042999, -0.012999,-3.299995,0.000000,0.000000);
					SetPlayerAttachedObject(playerid, 1, 18635,6);
					break;
				}
			}
		}
	}
	else if(GetPlayerState(playerid) ==  PLAYER_STATE_DRIVER)
	{
		if(areaid >= anti_dm_area[0]&& areaid <= anti_dm_area[MAX_DM_ZONE -1])
		{
			is_player_in_dmzone {playerid} = 1;
			SetPVarInt(playerid, "zz_td_status", 1);

			if(GetPVarInt(playerid, "leavezz_td_status") == 1)
			{
				DeletePVar(playerid, "leavezz_td_status");
				for(new j = 0; j < 3; j ++)
				{
					TextDrawHideForPlayer(playerid, leave_zz_td[j]);
				}
			}
			for(new j = 0; j < 3; j ++)
			{

				TextDrawShowForPlayer(playerid, zz_td[j]);
				SetTimerEx("clear_zz_td", 3300, false, "d", playerid);
			}

		}
		else if(areaid >= non_parking_area[0]&& areaid <= non_parking_area[MAX_NONPARKING_ZONES -1])
		{
			is_player_nonpark_zone {playerid} = 1;

			SetPVarInt(playerid, "np_td_status", 1);


			if(GetPVarInt(playerid, "leavenp_td_status") == 1)
			{
				DeletePVar(playerid, "leavenp_td_status");
				for(new j = 0; j < 3; j ++)
				{
					TextDrawHideForPlayer(playerid, leave_np_td[j]);
				}
			}

			for(new j = 0; j < 3; j ++)
			{
				TextDrawShowForPlayer(playerid, np_td[j]);
				SetTimerEx("clear_np_td", 3300, false, "d", playerid);
			}

		}
		else if(areaid == loading_area[DORM_FACTORY] || areaid == loading_area[DORM_SAWMILL] || areaid == loading_area[DORM_MINE])
		{
			if(PlayerInfo[playerid][job] == job_trucker)SendClientMessage(playerid, col_gray, "* Посигнальте (`H`), чтобы произвести закупку.");
			return 1;
		}
		else if(areaid == factory_unloading_area)
		{
			if(PlayerInfo[playerid][job] == job_trucker && player_trailer[playerid] != INVALID_VEHICLE_ID && GetVehicleTrailer(GetPlayerVehicleID(playerid)) == player_trailer[playerid]) SendClientMessage(playerid, col_gray, "* Вы подъехали к месту разгрузки. Посигнальте, чтобы разгрузиться.");
			return 1;
		}
		else if(areaid == port_unloading_area)
		{
			if(PlayerInfo[playerid][job] == job_trucker && player_trailer[playerid] != INVALID_VEHICLE_ID && GetVehicleTrailer(GetPlayerVehicleID(playerid)) == player_trailer[playerid]) SendClientMessage(playerid, col_gray, "* Вы подъехали к месту разгрузки. Посигнальте, чтобы разгрузиться.");
			return 1;
		}
		else if(areaid == loading_free_area[DORM_FACTORY] || areaid == loading_free_area[DORM_SAWMILL] || areaid == loading_free_area[DORM_MINE])
		{
			if(GetVehicleTrailer(GetPlayerVehicleID(playerid)) == player_trailer[playerid]&& player_trailer[playerid] != INVALID_VEHICLE_ID)
			{
				SendClientMessage(playerid, -1, "У вас уже есть фура с грузом. Покиньте место загрузки в течении 1 минуты.");
				td_db[playerid][0] = CreatePlayerTextDraw(playerid, 543.000000, 182.000000, "~r~1:00");
				PlayerTextDrawBackgroundColor(playerid, td_db[playerid][0], 255);
				PlayerTextDrawFont(playerid, td_db[playerid][0], 2);
				PlayerTextDrawLetterSize(playerid, td_db[playerid][0], 0.319999, 1.500000);
				PlayerTextDrawColor(playerid, td_db[playerid][0], -1);
				PlayerTextDrawSetOutline(playerid, td_db[playerid][0], 0);
				PlayerTextDrawSetProportional(playerid, td_db[playerid][0], 1);
				PlayerTextDrawSetShadow(playerid, td_db[playerid][0], 1);
				PlayerTextDrawSetSelectable(playerid, td_db[playerid][0], 0);
				PlayerTextDrawShow(playerid, td_db[playerid][0]);
				player_leavearea_time[playerid] = 60;
			}
		}
	}
	if(areaid == dynamic_sphere_photographer[playerid] && quest_photographer_id[playerid] != -1 && step_photographer_job[playerid] == 0)
	{
		show_dialog(playerid,
					d_photographer_actor_dialog,
					DIALOG_STYLE_MSGBOX,
					""c_server"Информация о работе",
					photographer_msg_quest[GetPVarInt(playerid, "photographer_quest_id")],
					"Согласен", "Отказ");
	}
	else if(areaid == dynamic_sphere_photographer[playerid] &&
			quest_photographer_id[playerid] != -1 &&
			step_photographer_job[playerid] == 1)
	{
		SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы уже взяли работу у бота");
	}
	else if(areaid == dynamic_sphere_photographer[playerid] &&
			step_photographer_job[playerid] == 2 &&
			(QUEST_OLD_MILITARY <= quest_photographer_id[playerid] <= QUEST_PRIEST))
	{
		SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Хмм. Вы не отвезли фотографии на печать!");
	}
	else if(areaid == dynamic_sphere_photographer[playerid] &&
			step_photographer_job[playerid] == 3 &&
			(QUEST_OLD_MILITARY <= quest_photographer_id[playerid] <= QUEST_PRIEST))
	{
		SendMessagePhtographerSalary(playerid);
		update_cooldown_photographer(playerid, quest_photographer_id[playerid]);
		EndJobPhotographer(playerid);
	}
	#if DEBUG_PHOTOGRAPHER_SYSTEM == 1
		else if(areaid == dynamic_area_photographer_job[playerid])
		{
			SendClientMessage(playerid, -1, "Debug mode | Photo area zone.");
		}
		else if(areaid == cylinder_photo_point[playerid])
		{
			SendClientMessage(playerid, -1, "Debug mode | Point photo area zone.");
		}
	#endif
	return 1;
}

public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	if(response == EDIT_RESPONSE_FINAL){// player clicked on sav?
	    new _sql_string[200];
        if(GetPVarInt(playerid, "addrad") == 1){
            RadarInfo[TOTALRADAR][rid] = TOTALRADAR;
            RadarInfo[TOTALRADAR][rX] = fX;
            RadarInfo[TOTALRADAR][rY] = fY;
            RadarInfo[TOTALRADAR][rZ] = fZ;
            RadarInfo[TOTALRADAR][rRZ] = fRotZ;
            RadarInfo[TOTALRADAR][rR] = 50;
            RadarInfo[TOTALRADAR][rSpeed] = GetPVarInt(playerid, "speed");
            mysql_format(sql_connection, _sql_string, sizeof(_sql_string), "INSERT INTO `radars` (`rX`, `rY`, `rZ`, `rRZ`, `rR`, `rSpeed`) VALUES ('%f', '%f', '%f', '%f', '50', '%i')",fX,fY,fZ,fRotZ,RadarInfo[TOTALRADAR][rSpeed]);
            mysql_function_query(sql_connection, _sql_string, true, "", "");
            new int = CreateDynamicSphere(fX,fY,fZ, 50, 0, 0, -1);
            RadarIterator[radariter++] = int;
            //Iter_Add(RadarIterator[TOTALRADAR], int);
            RadarMaxSpeed[int] = RadarInfo[TOTALRADAR][rSpeed];
            DeletePVar(playerid, "addrad");
            DeletePVar(playerid, "speed");
            new string[200];
			format(string, sizeof(string), ""c_server"Скоростной радар\n\n"c_white"Максимальная скорость: "c_server"%d км/ч", RadarInfo[TOTALRADAR][rSpeed]);
            Create3DTextLabel(string, 0x008080FF, RadarInfo[TOTALRADAR][rX], RadarInfo[TOTALRADAR][rY], RadarInfo[TOTALRADAR][rZ]+5.0, RadarInfo[TOTALRADAR][rR], 0, 0);
        }
    }
    else if(response == EDIT_RESPONSE_CANCEL){// player cancelled (ESC)
        DestroyObject(objectid);
        if(GetPVarInt(playerid, "addrad")==1) {
            TOTALRADAR--;
            DeletePVar(playerid, "addrad");
            DeletePVar(playerid, "speed");
        }
    }
    else if(response == EDIT_RESPONSE_UPDATE){// player moved the object (edition did not stop at all)
        SetObjectPos(objectid, fX, fY, fZ);
        SetObjectRot(objectid, fRotX, fRotY, fRotZ);
    }
	return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	used_area[playerid] = -1;

    foreachRadar(i)
	{
        if(areaid == i) KillTimer(RadarTimer[playerid]);
    }
	if(GetPlayerState(playerid)!= PLAYER_STATE_SPECTATING)
	{
		if(areaid >= anti_dm_area[0]&& areaid <= anti_dm_area[MAX_DM_ZONE -1]&& GetPVarInt(playerid, "tp_area_used") ==  0)
		{
			is_player_in_dmzone {playerid} = 0;
			SetPVarInt(playerid, "leavezz_td_status", 1);
			if(GetPVarInt(playerid, "zz_td_status") == 1)
			{
				DeletePVar(playerid, "zz_td_status");
				for(new j = 0; j < 3; j ++)
				{
					TextDrawHideForPlayer(playerid, zz_td[j]);
				}
			}


			for(new j = 0; j < 3; j ++)
			{
				TextDrawShowForPlayer(playerid, leave_zz_td[j]);
				SetTimerEx("clear_leave_zz_td", 3300, false, "d", playerid);
			}
			return 1;
		}
		else if(areaid >= non_parking_area[0]&& areaid <= non_parking_area[MAX_NONPARKING_ZONES -1]&& GetPVarInt(playerid, "tp_area_used") ==  0)
		{
			is_player_nonpark_zone {playerid} = 0;
			SetPVarInt(playerid, "leavenp_td_status", 1);
			if(GetPVarInt(playerid, "np_td_status") == 1)
			{
				DeletePVar(playerid, "np_td_status");
				for(new j = 0; j < 3; j ++)
				{
					TextDrawHideForPlayer(playerid, np_td[j]);
				}
			}
			for(new j = 0; j < 3; j ++)
			{
				TextDrawShowForPlayer(playerid, leave_np_td[j]);
				SetTimerEx("clear_leave_np_td", 3300, false, "d", playerid);
			}
			return 1;
		}
	}
	if(GetPlayerState(playerid) ==  PLAYER_STATE_DRIVER)
	{
		if(areaid == loading_free_area[DORM_FACTORY])
		{
			if(PlayerInfo[playerid][job] == job_trucker && player_leavearea_time[playerid] > 0)
			{
				loading_playerid[DORM_FACTORY] = INVALID_PLAYER_ID;

				SendClientMessage(playerid, -1, ""c_green"* "c_white"Все отлично. Теперь вы можете ехать к месту разгрузки "c_white"(GPS -Работы -Разгрузочные зоны).");
				player_leavearea_time[playerid] = -1;
				PlayerTextDrawDestroy(playerid, td_db[playerid][0]);
				td_db[playerid][0] = PlayerText:-1;
			}
		}
		else if(areaid == loading_free_area[DORM_SAWMILL])
		{
			if(PlayerInfo[playerid][job] == job_trucker && player_leavearea_time[playerid] > 0)
			{
				loading_playerid[DORM_SAWMILL] = INVALID_PLAYER_ID;

				SendClientMessage(playerid, -1, ""c_green"* "c_white"Все отлично. Теперь вы можете ехать к месту разгрузки "c_white"(GPS -Работы -Разгрузочные зоны).");
				player_leavearea_time[playerid] = -1;
				PlayerTextDrawDestroy(playerid, td_db[playerid][0]);
				td_db[playerid][0] = PlayerText:-1;
			}
		}
		else if(areaid == loading_free_area[DORM_MINE])
		{
			if(PlayerInfo[playerid][job] == job_trucker && player_leavearea_time[playerid] > 0)
			{
				loading_playerid[DORM_MINE] = INVALID_PLAYER_ID;

				SendClientMessage(playerid, -1, ""c_green"* "c_white"Все отлично. Теперь вы можете ехать к месту разгрузки "c_white"(GPS -Работы -Разгрузочные зоны).");
				player_leavearea_time[playerid] = -1;
				PlayerTextDrawDestroy(playerid, td_db[playerid][0]);
				td_db[playerid][0] = PlayerText:-1;
			}
		}

		return 1;
	}
	if(table_area[0] >= areaid && table_area[MAX_GUNWORK_TABLE -1]<= areaid)
	{
		for(new i = 0; i < MAX_GUNWORK_TABLE; i ++)
		{
			if(table_area[i] == areaid)
			{
				table_area_toggled[i] = INVALID_PLAYER_ID;
				break;
			}
		}
	}
	return 1;
}

public OnPlayerText(playerid, text[])
{
	if(p_t_info[playerid][p_logged] == false) return 0;
	if(vk_checking {playerid} == 1 && p_t_info[playerid][p_dialog] != d_vk_entrance || google_checking {playerid} == 1 && p_t_info[playerid][p_dialog] != d_googleauth_entrance) return 0;
	if(PlayerInfo[playerid][mute])
	{
		new _t_string[38];
		format(_t_string, sizeof(_t_string),"У Вас бан чата | %d секунд(ы)", PlayerInfo[playerid][mute]);
		SendClientMessage(playerid, col_light_red, _t_string);
		return 0;
	}
	if(check_advertise(playerid, text)) return 0;

	if(p_t_info[playerid][phone_id] != INVALID_PLAYER_ID && p_t_info[playerid][phone_caller] == 0)
	{
		new _t_string[144];
		format(_t_string, 144, "[Тел] %s: %s", PlayerInfo[playerid][name], text);
		new phid = p_t_info[playerid][phone_id];
		SendClientMessage(phid, col_yellow, _t_string);
		SendClientMessage(playerid, col_gray, _t_string);
		foreach(new i : logged_players)
		{
			if(p_t_info[i][phone_audition] == PlayerInfo[playerid][number] ||
			p_t_info[i][phone_audition] == PlayerInfo[phid][number]) SendClientMessage(i, col_yellow, _t_string);
		}
		return 0;
	}
	if(GetTickCount() -text_cooldown[playerid] < 500)
	{
	    if(CountFloodForPlayer[playerid] >= 2) return 0;
		CountFloodForPlayer[playerid] ++;
		SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Не флудите.");
		return 0;
	}
	text_cooldown[playerid] = GetTickCount();


	for(new i; i < SMILE_COUNT; i ++)
	{
		if(GetString(text, SmileInfo[i][smInput]))
		{
		    if(PlayerInfo[playerid][gender] == 0)
			{
				me_action(playerid, SmileInfo[i][smOutput_M]);
			}
			else
			{
				me_action(playerid, SmileInfo[i][smOutput_F]);
			}
			return 0;
		}
	}

	new _t_string[144],
		t_string[144];

	if(PlayerInfo[playerid][member] > 0 && is_fraction_duty {playerid})
	{
		format(_t_string, sizeof(_t_string), "-%s {%06x}(%s) [%d]", text, GetPlayerColor(playerid) >>> 8, PlayerInfo[playerid][name], playerid);
		format(t_string, sizeof(t_string), "-%s {%06x}(%s)", text, GetPlayerColor(playerid) >>> 8, PlayerInfo[playerid][name]);
	}
	else
	{
		format(_t_string, sizeof(_t_string), "-%s (%s) [%d]", text, PlayerInfo[playerid][name], playerid);
		format(t_string, sizeof(t_string), "-%s (%s)", text, PlayerInfo[playerid][name]);

	}


    if(PlayerInfo[playerid][settings][3])SendClientMessage(playerid, col_white, _t_string);
	else SendClientMessage(playerid, col_white, t_string);



	new Float:point_x,
		Float:point_y,
		Float:point_z;
	GetPlayerPos(playerid, point_x, point_y, point_z);

	if(Iter_Count (streamed_players[playerid]) != 0)
	{

		foreach(new i:streamed_players[playerid])
		{
			if(IsPlayerInRangeOfPoint(i, 25.0, point_x, point_y, point_z) && GetPlayerVirtualWorld(i) ==  GetPlayerVirtualWorld(playerid))
			{
				new Float:distance;
				distance = GetPlayerDistanceFromPoint(i, point_x, point_y, point_z);
				if(distance >= 0.0 && distance < 15.0 / 3)
				{
					if(PlayerInfo[i][settings][3])SendClientMessage(i, col_white, _t_string);
					else SendClientMessage(i, col_white, t_string);
				}
				if(distance >= 15.0 / 3 && distance < 15.0 / 3 * 2)
				{
					if(PlayerInfo[i][settings][3])SendClientMessage(i, 0xCCCCCCFF, _t_string);
					else SendClientMessage(i, 0xCCCCCCFF, t_string);
				}
				if(distance >= 15.0 / 3 * 2 && distance <= 25.0)
				{
					if(PlayerInfo[i][settings][3])SendClientMessage(i, 0xAAAAAAFF, _t_string);
					else SendClientMessage(i, 0xAAAAAAFF, t_string);
				}
			}
		}

		SetPlayerChatBubble(playerid, text, col_white, 15, 10000);
	}
	foreach(new i:admin_players)
	{
		if(i == playerid) continue;
		if(GetPVarInt(i, "spectate_status")!= 0)
		{
			if(IsPlayerInRangeOfPoint(i, 25.0, point_x, point_y, point_z) && GetPlayerVirtualWorld(i) ==  GetPlayerVirtualWorld(playerid))
			{
				new Float:distance;
				distance = GetPlayerDistanceFromPoint(i, point_x, point_y, point_z);
				if(distance >= 0.0 && distance < 15.0 / 3)
				{
					if(PlayerInfo[i][settings][3])SendClientMessage(i, col_white, _t_string);
					else SendClientMessage(i, col_white, t_string);
				}
				if(distance >= 15.0 / 3 && distance < 15.0 / 3 * 2)
				{
					if(PlayerInfo[i][settings][3])SendClientMessage(i, 0xCCCCCCFF, _t_string);
					else SendClientMessage(i, 0xCCCCCCFF, t_string);
				}
				if(distance >= 15.0 / 3 * 2 && distance <= 25.0)
				{
					if(PlayerInfo[i][settings][3])SendClientMessage(i, 0xAAAAAAFF, _t_string);
					else SendClientMessage(i, 0xAAAAAAFF, t_string);
				}
			}
		}
	}
	if(GetPlayerState(playerid) ==  PLAYER_STATE_DRIVER || p_t_info[playerid][p_animation]) return 0;
	switch(PlayerInfo[playerid][textstyle])
	{
		case 0: ApplyAnimation(playerid, "PED", "IDLE_CHAT", 4.1, 0, 1, 1, 1, 1, 1);
		case 1: ApplyAnimation(playerid, "GANGS", "prtial_gngtlkA", 4.1, 0, 1, 1, 1, 1, 1);
		case 2: ApplyAnimation(playerid, "GANGS", "prtial_gngtlkB", 4.1, 0, 1, 1, 1, 1, 1);
		case 3: ApplyAnimation(playerid, "GANGS", "prtial_gngtlkD", 4.1, 0, 1, 1, 1, 1, 1);
		case 4: ApplyAnimation(playerid, "GANGS", "prtial_gngtlkE", 4.1, 0, 1, 1, 1, 1, 1);
		case 5: ApplyAnimation(playerid, "GANGS", "prtial_gngtlkF", 4.1, 0, 1, 1, 1, 1, 1);
		case 6: ApplyAnimation(playerid, "GANGS", "prtial_gngtlkG", 4.1, 0, 1, 1, 1, 1, 1);
		default: return 0;
	}
	SetTimerEx("clear_anim", 2000, false, "d", playerid);
	return 0;
}

public OnPlayerEnterCheckpoint(playerid)
{

	new Float:x_p, Float:y_p, Float:y_z;
	GetPlayerPos(playerid, x_p, y_p, y_z);
	#if defined debug_mode
		printf("[DEBUG] [OnPlayerEnterCheckpoint] playerid: %d %f %f %f", playerid, x_p, y_p, y_z);
	#endif
	if(GetPVarInt(playerid,"checkpoint_status") == 1)
	{
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		DisablePlayerCheckpoint(playerid);
		DeletePVar(playerid, "checkpoint_status");
		GameTextForPlayer(playerid, "~y~~h~YOUR PROPERTY", 5000, 1);
		return 1;
	}
	switch(GetPlayerState(playerid))
	{
		case PLAYER_STATE_ONFOOT:
		{
			if(PlayerInfo[playerid][timejob] == job_miner)
			{
				new cp_id = GetPVarInt(playerid, "miner_cp");

				if(IsPlayerInRangeOfPoint(playerid, 3.5, miner_cp[cp_id][0], miner_cp[cp_id][1], miner_cp[cp_id][2]))// точки добычи
				{
					ClearAnimations(playerid);
					SetPVarInt(playerid, "mining_ex", 1);

					ApplyAnimation(playerid, "BASEBALL","Bat_4", 4.1, 1, 0, 0, 1, 11000);
					p_t_info[playerid][p_animation] = true;


					DisablePlayerCheckpoint(playerid);
					job_timer[playerid] = SetTimerEx("main_jobs_timer",5800,false,"i",playerid);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 3, 2468.5256, -699.7646, 956.1261))// переплавка
				{
					p_t_info[playerid][p_animation] = false ;
					ClearAnimations(playerid);

					if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
					if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);


					PlayerInfo[playerid][newbie_job_skill][1] ++;
					switch(PlayerInfo[playerid][newbie_job_skill][1])
					{
						case 0..50:
						{
							PlayerInfo[playerid][salary] += 90 * server_bonus;
							update_payment(playerid, 90 * server_bonus);
						}
						case 51..100:
						{
							PlayerInfo[playerid][salary] += 100 * server_bonus;
							update_payment(playerid, 100 * server_bonus);
						}
						case 101..150:
						{
							PlayerInfo[playerid][salary] += 110 * server_bonus;
							update_payment(playerid, 110 * server_bonus);
						}
						case 151..200:
						{
							PlayerInfo[playerid][salary] += 120 * server_bonus;
							update_payment(playerid, 120 * server_bonus);
						}
						default:
						{
							PlayerInfo[playerid][salary] += 130 * server_bonus;
							update_payment(playerid, 130 * server_bonus);
						}
					}

					if(quest_status[playerid][2] == 1)
					{
						quest_progress[playerid][2] += 1;
						if(quest_progress[playerid][2] > 10)
						{
							quest_status[playerid][2] = 2;
							SendClientMessage(playerid, col_succes, "Задание успешно выполнено. Отправляйтесь к одному из помощников, чтобы получить своё вознаграждение.");
						}
						update_quest_data(playerid);
					}

					new _t_string[134];
					mine_count[MINE_UNMELTED] += GetPVarInt(playerid, "_mine_count");
					format(_t_string, 134, "\
					"c_server"** Переплавка **\n\
					"c_grey"Руда: "c_white"%d кг.\n\
					"c_grey"Металл: "c_white"%d кг.", mine_count[MINE_UNMELTED], mine_count[MINE_MELTED]);
					UpdateDynamic3DTextLabelText(mine_text, -1, _t_string);

					DeletePVar(playerid, "_mine_count");

					new _random = random(11);
					SetPlayerCheckpoint(playerid, miner_cp[_random][0], miner_cp[_random][1], miner_cp[_random][2], 2.5);
					SetPVarInt(playerid, "miner_cp", _random);
					SetPlayerAttachedObject(playerid,1, 18634, 14, 0.333391, 0.000000, 0.042249, 358.219909, 268.014739, 170.032974, 2.003867, 1.764811, 1.579773);
				}
			}
			else if(PlayerInfo[playerid][timejob] == job_sawmil && IsPlayerInRangeOfPoint(playerid, 3.0, -1116.3422, -1650.3342, 76.3672))
			{
				DisablePlayerCheckpoint(playerid);
				RemovePlayerAttachedObject(playerid, 3);

				new rand = 30 + random(30);
				PlayerInfo[playerid][newbie_job_skill][2] ++;
				switch(PlayerInfo[playerid][newbie_job_skill][2])
				{
					case 0..50:
					{
						PlayerInfo[playerid][salary] += 120 * server_bonus;
						update_payment(playerid, 120 * server_bonus);
						if(quest_status[playerid][0] == 1)
						{
							quest_progress[playerid][0] += 120 * server_bonus;
							if(quest_progress[playerid][0] > 2500)
							{
								quest_status[playerid][0] = 2;
								SendClientMessage(playerid, col_succes, "Задание успешно выполнено. Отправляйтесь к одному из помощников, чтобы получить своё вознаграждение.");
							}
							update_quest_data(playerid);
						}
					}
					case 51..100:
					{
						PlayerInfo[playerid][salary] += 130 * server_bonus;
						update_payment(playerid, 130 * server_bonus);
						if(quest_status[playerid][0] == 1)
						{
							quest_progress[playerid][0] += 130 * server_bonus;
							if(quest_progress[playerid][0] > 2500)
							{
								quest_status[playerid][0] = 2;
								SendClientMessage(playerid, col_succes, "Задание успешно выполнено. Отправляйтесь к одному из помощников, чтобы получить своё вознаграждение.");
							}
							update_quest_data(playerid);
						}
					}
					case 101..150:
					{
						PlayerInfo[playerid][salary] += 140 * server_bonus;
						update_payment(playerid, 140 * server_bonus);
						if(quest_status[playerid][0] == 1)
						{
							quest_progress[playerid][0] += 140 * server_bonus;
							if(quest_progress[playerid][0] > 2500)
							{
								quest_status[playerid][0] = 2;
								SendClientMessage(playerid, col_succes, "Задание успешно выполнено. Отправляйтесь к одному из помощников, чтобы получить своё вознаграждение.");
							}
							update_quest_data(playerid);
						}
					}
					case 151..200:
					{
						PlayerInfo[playerid][salary] += 150 * server_bonus;
						update_payment(playerid, 150 * server_bonus);
						if(quest_status[playerid][0] == 1)
						{
							quest_progress[playerid][0] += 150 * server_bonus;
							if(quest_progress[playerid][0] > 2500)
							{
								quest_status[playerid][0] = 2;
								SendClientMessage(playerid, col_succes, "Задание успешно выполнено. Отправляйтесь к одному из помощников, чтобы получить своё вознаграждение.");
							}
							update_quest_data(playerid);
						}
					}
					default:
					{
						PlayerInfo[playerid][salary] += 160 * server_bonus;
						update_payment(playerid, 160 * server_bonus);

						if(quest_status[playerid][0] == 1)
						{
							quest_progress[playerid][0] += 160 * server_bonus;
							if(quest_progress[playerid][0] > 2500)
							{
								quest_status[playerid][0] = 2;
								SendClientMessage(playerid, col_succes, "Задание успешно выполнено. Отправляйтесь к одному из помощников, чтобы получить своё вознаграждение.");
							}
							update_quest_data(playerid);
						}

					}
				}

				dorm_count[DORM_SAWMILL] += rand;

				new dorm_string[72];
				format(dorm_string, 72, ""c_server"** Древесина **\n"c_grey"Кол-во на складе:"c_white" %i кг.", dorm_count[DORM_SAWMILL]);
				UpdateDynamic3DTextLabelText(dorm_text[DORM_SAWMILL], 0xFFCD00FF, dorm_string);

				ClearAnimations(playerid);


				ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);

				DeletePVar(playerid, #Derevo);
				SetPVarInt(playerid, #LessProc, 0);
				SetPVarInt(playerid, #LessStatus, 0);

				SetPVarInt(playerid, #Derevo, tree_count);
				tree_count++;
				SetPlayerCheckpoint(playerid,  tree_positions [GetPVarInt(playerid, #Derevo)][0],tree_positions[GetPVarInt(playerid, #Derevo)][1],tree_positions[GetPVarInt(playerid, #Derevo)][2], 3.0);
				return 1;
			}
			else if(PlayerInfo[playerid][timejob] == job_factory)
			{
				if(!IsPlayerInRangeOfPoint(playerid, 8, -31.4789, -261.0728, 1528.6615)) return 1;
				if(!IsPlayerAttachedObjectSlotUsed(playerid, 0)|| GetPVarInt(playerid, "have_factory_box")!= 0 || IsPlayerAttachedObjectSlotUsed(playerid, 1)) return 1;
				ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);

				PlayerInfo[playerid][newbie_job_skill][3] ++;
				switch(PlayerInfo[playerid][newbie_job_skill][3])
				{
					case 0..50:
					{
						PlayerInfo[playerid][salary] += 80 * server_bonus;
						update_payment(playerid, 80 * server_bonus);
					}
					case 51..100:
					{
						PlayerInfo[playerid][salary] += 85 * server_bonus;
						update_payment(playerid, 85 * server_bonus);
					}
					case 101..150:
					{
						PlayerInfo[playerid][salary] += 90 * server_bonus;
						update_payment(playerid, 90 * server_bonus);
					}
					case 151..200:
					{
						PlayerInfo[playerid][salary] += 100 * server_bonus;
						update_payment(playerid, 100 * server_bonus);
					}
					default:
					{
						PlayerInfo[playerid][salary] += 110 * server_bonus;
						update_payment(playerid, 110 * server_bonus);
					}
				}



				if(dorm_count[DORM_FACTORY_GUNS] < 1000000 -60)dorm_count[DORM_FACTORY_GUNS] += 60;
				else dorm_count[DORM_FACTORY_GUNS] += 1000000 -dorm_count[DORM_FACTORY_GUNS];

				if(dorm_count[DORM_FACTORY_WOOD] > 0)dorm_count[DORM_FACTORY_WOOD] -= 25;
				if(dorm_count[DORM_FACTORY_MINE] > 0)dorm_count[DORM_FACTORY_MINE] -= 25;

				new dorm_string[238];
				format(dorm_string, sizeof(dorm_string), "** Состояние склада **\n"c_grey"Заготовки:"c_white" %i/1000000\n"c_grey"Металл:"c_white" %i/1000000\n"c_grey"Древесина:"c_white" %i/1000000",
																dorm_count[DORM_FACTORY_GUNS],
																dorm_count[DORM_FACTORY_WOOD],
																dorm_count[DORM_FACTORY_MINE]);

				UpdateDynamic3DTextLabelText(dorm_text[DORM_FACTORY], col_blue, dorm_string);

				p_t_info[playerid][p_animation] = false;
				RemovePlayerAttachedObject(playerid, 0);
				DisablePlayerCheckpoint(playerid);
				return 1;
			}
			else if(PlayerInfo[playerid][timejob] == job_porter)
			{
				if(!IsPlayerAttachedObjectSlotUsed(playerid, 1) && IsPlayerInRangeOfPoint(playerid, 5.0, porter_pos_take[opened_containers -1][0], porter_pos_take[opened_containers -1][1], porter_pos_take[opened_containers -1][2]))
				{
					SetPlayerAttachedObject(playerid, 1, 1558, 5, 0.126998, 0.347999, 0.233000, -77.399917, 0.499999, 14.999999, 0.577000, 0.521000, 0.624000);

					job_ac_tick[playerid] = GetTickCount();
					SendClientMessage (playerid, col_gray, "* Вы взяли ящик с контейнера, отнесите его на загрузочный склад.");

					p_t_info[playerid][p_animation] = true;
					switch(random(3))
					{
						case 0:SetPlayerCheckpoint(playerid, 2654.0056, -2367.4011, 13.2651-0.5, 4.0);
						case 1:SetPlayerCheckpoint(playerid, 2646.1121, -2367.2539, 13.2651-0.5, 4.0);
						case 2:SetPlayerCheckpoint(playerid, 2637.7830, -2367.5708, 13.2651-0.5, 4.0);
					}

					ApplyAnimation(playerid,"CARRY","crry_prtial", 4.1, 0, 1, 1, 1, 1);
					SetTimerEx("carry_timer", 500, false, "d", playerid);
					container_info[opened_containers -1][con_count] --;
					if(container_info[opened_containers -1][con_count] == 0)
					{
						foreach(new pl_id: logged_players)
						{
							if(PlayerInfo[pl_id][timejob] == job_porter && ! IsPlayerAttachedObjectSlotUsed(pl_id, 1))
							{
								SendClientMessage (playerid, col_gray, "* Контейнер разружен, ожидайте появления нового контейнера для разгрузки.");

								DisablePlayerCheckpoint(pl_id);
							}
						}
						SetTimerEx("destroy_opened_container", 5000, false, "d", opened_containers -1);
						opened_containers = 0;
					}
					return 1;
				}
				else if(IsPlayerAttachedObjectSlotUsed(playerid, 1) && IsPlayerInRangeOfPoint(playerid, 15.0,  2646.1121, -2367.2539, 13.2651))
				{
					PlayerInfo[playerid][newbie_job_skill][0] ++;
					switch(PlayerInfo[playerid][newbie_job_skill][0])
					{
						case 0..50:
						{
							PlayerInfo[playerid][salary] += 90 * server_bonus;
							update_payment(playerid, 90 * server_bonus);
						}
						case 51..100:
						{
							PlayerInfo[playerid][salary] += 95 * server_bonus;
							update_payment(playerid, 95 * server_bonus);
						}
						case 101..150:
						{
							PlayerInfo[playerid][salary] += 100 * server_bonus;
							update_payment(playerid, 100 * server_bonus);
						}
						case 151..200:
						{
							PlayerInfo[playerid][salary] += 110 * server_bonus;
							update_payment(playerid, 110 * server_bonus);
						}
						default:
						{
							PlayerInfo[playerid][salary] += 115 * server_bonus;
							update_payment(playerid, 115 * server_bonus);
						}
					}


					p_t_info[playerid][p_animation] = false;
					ApplyAnimation(playerid,"CARRY","putdwn",4.0,0,1,1,0,0,1);
					RemovePlayerAttachedObject(playerid, 1);

					DisablePlayerCheckpoint(playerid);

					SetPlayerCheckpoint(playerid, porter_pos_take[opened_containers -1][0], porter_pos_take[opened_containers -1][1], porter_pos_take[opened_containers -1][2] -0.5, 2.5);
					job_ac_tick[playerid] = GetTickCount();

				}
			}
		}
		case PLAYER_STATE_DRIVER:
		{
			if(army_player(playerid))
			{
				if(is_gps_used {playerid} == 0)
				{
					if(IsPlayerInRangeOfPoint(playerid, 15.0, 2646.1821, -2374.5737, 13.3588))
					{
						DisablePlayerCheckpoint(playerid);

						new t_string[112];
						if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 433)
						{
							if(veh_info[player_vehicle[playerid] -1][v_cargo] == 15000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"В данное транспортное средство нельзя загрузить больше оружия!");
							veh_info[GetPlayerVehicleID(playerid)-1][v_cargo] = 15000;
						}
						else return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"В данное транспортное средство нельзя загрузить оружие.");

						format(t_string, sizeof(t_string), ""c_green"* "c_white"Вы успешно загрузили "c_green"%d/%d"c_white" единиц оружия. Отправляйтесь на разгрузку.",
						veh_info[player_vehicle[playerid] -1][v_cargo], veh_info[player_vehicle[playerid] -1][v_cargo]);
						SendClientMessage(playerid, col_white, t_string);
					}
					else if(IsPlayerInRangeOfPoint(playerid, 15.0, 307.1280, 2040.3036, 18.1088))
					{
						DisablePlayerCheckpoint(playerid);
						if(f_info[7][f_materials] > 15000)
						{
							if(veh_info[player_vehicle[playerid] -1][v_model] == 433)
							{
								if(veh_info[player_vehicle[playerid] -1][v_cargo] == 15000) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"В данное транспортное средство нельзя загрузить больше оружия!");
								f_info[7][f_materials] -= 15000 -veh_info[player_vehicle[playerid] -1][v_cargo];
								veh_info[player_vehicle[playerid] -1][v_cargo] = 15000;
							}
							else return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"В данное транспортное средство нельзя загрузить оружие.");
						}
						else
						{
							veh_info[player_vehicle[playerid] -1][v_cargo] += f_info[7][f_materials];
							f_info[7][f_materials] -= f_info[7][f_materials];
						}
						new t_string[118];
						format(t_string, sizeof(t_string), ""c_green"* "c_white"Вы успешно загрузили "c_green"%d/15000"c_white" единиц оружия.",
						veh_info[player_vehicle[playerid] -1][v_cargo]);
						SendClientMessage(playerid, col_white, t_string);
						is_gps_used {playerid} = 0;
					}
					else
					{
						DisablePlayerCheckpoint(playerid);
						//SendClientMessage(playerid, col_white, ""c_green"* "c_white"Используйте "c_green"/unload"c_white" для разгрузки оружия.");
					}
				}
			}
			if(PlayerInfo[playerid][timejob] == job_forklift)
			{
				DisablePlayerCheckpoint(playerid);
			}
		}
	}
	return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	#if defined debug_mode
		printf("[DEBUG] [OnPlayerEnterVehicle] playerid:%d | vehicleid:%d | ispassenger:%d", playerid, vehicleid, ispassenger);
	#endif

	eev_called {playerid} = 1;
	if(PlayerInfo[playerid][timejob] == job_porter && IsPlayerAttachedObjectSlotUsed(playerid, 1) && job_timer[playerid] == -1)
	{
		SendClientMessage(playerid, col_white, !""scm_error"Вы уронили коробку. Попробуйте еще раз.");

		RemovePlayerAttachedObject(playerid, 1);
		DisablePlayerCheckpoint(playerid);

		SetPlayerCheckpoint(playerid, porter_pos_take[opened_containers -1][0], porter_pos_take[opened_containers -1][1], porter_pos_take[opened_containers -1][2], 2.5);
		job_ac_tick[playerid] = 0;

		DeletePVar(playerid, "have_factory_box");
		return 1;
	}
	opev_opsc_time_differ[playerid] = GetTickCount();

	opev_vehicleid[playerid] = vehicleid;
	exv_called {playerid} = 0;
	new Float:veh_x, Float:veh_y, Float:veh_z;
	GetVehiclePos(vehicleid, veh_x, veh_y, veh_z);

	opev_vehicleid[playerid] = vehicleid;
	used_enter[playerid] = true;
 	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	#if defined debug_mode
		printf("[DEBUG] [OnPlayerExitVehicle] playerid:%d | vehicleid:%d ", playerid, vehicleid);
	#endif
	exv_called {playerid} = 1;
	opev_opsc_time_differ[playerid] = 0;

	if(GetPVarInt(playerid, "exam_vehicle")> 0)
	{
		SetPVarInt(playerid, "leaved_ex_vehicle", GetPVarInt(playerid, "exam_vehicle"));
		is_leave_exam_vehicle {playerid} = 15;
		SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас есть "c_orange_red"15 секунд"c_grey" для возврата в транспорт, иначе экзамен будет провален.");
		GameTextForPlayer(playerid, "~r~15", 5000, 6);
	}
	player_vehicle[playerid] = INVALID_VEHICLE_ID;
	speedometr_status(playerid, false);
	KillTimer(speed_timer[playerid]);
	speed_timer[playerid] = -1;
	veh_info[vehicleid][v_driver] = INVALID_PLAYER_ID;
	return 1;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
    if(GetPVarInt(playerid, !"tp_area_used")) return DeletePVar(playerid, !"tp_area_used");
    if(GetTickCount() -teleport_tick[playerid] < 5000 || p_t_info[playerid][pickup_time] != -1) return 1;
    if(p_t_info[playerid][p_dialog] != -1 || p_t_info[playerid][p_logged] == false) return 1;

    p_t_info[playerid][pickup_time] = pickupid;

	switch(pick_info[pickupid][pick_type])
	{
		case pick_type_server:
		{
			if(pickupid == tree_pick[GetPVarInt(playerid, #Derevo)])
			{
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.1,0,1,1,1,1);
				p_t_info[playerid][p_animation] = true;
				SetPlayerAttachedObject(playerid, 3,1463,5,0.045000,0.152000,0.217000,100.199966,-176.199951,102.500015,0.567000,0.327000,0.516000);
				SetPlayerCheckpoint(playerid, -1116.3422, -1650.3342, 76.3672, 3.0);
				SetPVarInt(playerid, #LessStatus, 1);
				SetPlayerArmedWeapon(playerid,0);
				DestroyDynamicPickup(pickupid);
				return 1;
			}
			else if(pickupid == election_pickup)
			{
				show_dialog(playerid, d_vote, DIALOG_STYLE_LIST,""c_server"Выборы", ""c_grey"-"c_white"Голосование\n"c_grey"-"c_white"Список кандидатов\n"c_grey"-"c_white"Подать кандидатуру -"c_green"250.000$", "Выбрать", "Закрыть");
				return 1;
			}
			else if(pickupid == bureauSfEnterPick)
				return set_pos(playerid, 1397.5748, -13.5947, 1000.9233, 90.0, 3, 0);

			else if(pickupid == bureauExitPick)
			    return set_pos(playerid, -2332.2312, -154.8795, 35.3203, 180.0, 0, 0);
		}
		case pick_type_teleportation:
		{

			new ars_id, sec_id;
			for(new i = 0; i < area_amount; i ++)
			{
				if(area_info[i][a_area][0] == pickupid)
				{
					ars_id = i;
					sec_id = 1;
					break;
				}
				if(area_info[i][a_area][1] == pickupid)
				{
					ars_id = i;
					sec_id = 0;
					break;
				}
			}
			switch(area_info[ars_id][a_id])
			{
				case 1:
				{
					ShowShopDialog(playerid);
					return 1;
				}

				case 2:
				{
					if(PlayerInfo[playerid][timejob] != job_miner && PlayerInfo[playerid][timejob] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы уже трудоустроены.");
					if(PlayerInfo[playerid][timejob] != job_miner)show_dialog(playerid, d_job_miner, DIALOG_STYLE_MSGBOX, ""c_server"Работа шахтера", ""c_white"Вы хотите устроиться на работу шахтера?", "Да", "Нет");
					else show_dialog(playerid, d_job_miner, DIALOG_STYLE_MSGBOX, ""c_server"Работа шахтера", ""c_white"Вы действительно хотите закончить рабочий день?", "Да", "Нет");
					return 1;
				}
				case 3:
				{
					new _b_id = GetPVarInt(playerid, "p_biz_id");
					if(b_info[_b_id -1 ][b_type] == bizz_type_ammo)
					{
						if(!PlayerInfo[playerid][gun_lic]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Для покупки оружия необходима лицензия на ношение оружия.");
						new gun_name[16 + 1];

						global_string = ""c_server"Товар\t"c_server"Цена\n";
						for(new i = 0; i < 8; i++)
						{
							GetWeaponName(b_ammo_guns[i], gun_name, 16);
							format(global_string, 860, "%s"c_grey"-"c_white"%s\t"c_green"%i$\n", global_string, gun_name, b_ammo_prices[i] + floatround(b_ammo_prices[i]*(float(b_info[_b_id -1][b_cost]) / 100)));
						}
						show_dialog(playerid, d_ammo_shop, DIALOG_STYLE_TABLIST_HEADERS, ""c_server"Аммуниция", global_string, "Далее", "Отмена");
						return 1;
					}
					return 1;
				}
				case 5:
				{
					if(PlayerInfo[playerid][timejob] != job_factory && PlayerInfo[playerid][timejob] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы уже трудоустроены.");
					if(PlayerInfo[playerid][timejob] != job_factory)show_dialog(playerid, d_job_factory, DIALOG_STYLE_MSGBOX, ""c_server"Работа сборщика оружия", ""c_white"Вы хотите устроиться на работу сборщика оружия?", "Да", "Нет");
					else show_dialog(playerid, d_job_factory, DIALOG_STYLE_MSGBOX, ""c_server"Работа сборщика оружия", ""c_white"Вы действительно хотите закончить рабочий день?", "Да", "Нет");
					return 1;
				}
				case 6:
				{

					if(PlayerInfo[playerid][timejob] != job_sawmil && PlayerInfo[playerid][timejob] != 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы уже трудоустроены.");
					if(PlayerInfo[playerid][timejob] != job_sawmil)show_dialog(playerid, d_job_sawmil, DIALOG_STYLE_MSGBOX, ""c_server"Лесопилка", ""c_white"Вы хотите устроиться работать на лесопилку?", "Да", "Нет");
					else show_dialog(playerid, d_job_sawmil, DIALOG_STYLE_MSGBOX, ""c_server"Лесопилка", ""c_white"Вы действительно хотите закончить рабочий день?", "Да", "Нет");
					return 1;
				}
				case 7:
				{
					if(b_info[GetPVarInt(playerid, "p_biz_id")-1][b_product] < 50) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"На складе магазина недостаточно продуктов.");

					show_dialog(playerid, d_skin_shop, DIALOG_STYLE_LIST, ""c_server"Магазин одежды", ""c_grey"-"c_white"Покупка одежды\n"c_grey"-"c_white"Покупка аксессуаров", "Выбрать", "Закрыть");
					return 1;
				}
				case 11,12:
				{
					if(GetPlayerVirtualWorld(playerid)!= 2)show_dialog(playerid, d_pd_elevator, DIALOG_STYLE_LIST, ""c_server"Лифт", "Офис\nТюрьма\nГараж\nКрыша", "Выбрать", "Закрыть");
					else show_dialog(playerid, d_pd_elevator, DIALOG_STYLE_LIST, ""c_server"Лифт", "Офис\nТюрьма\nГараж", "Выбрать", "Закрыть");


					SetPVarInt(playerid, "pd_door", GetPlayerVirtualWorld(playerid));
					SetPVarInt(playerid, "tp_area_used", 1);
					return 1;
				}
				case 13, 89:
				{
					show_dialog(playerid, d_pd_elevator, DIALOG_STYLE_LIST, ""c_server"Лифт", "Офис\nТюрьма\nГараж\nКрыша", "Выбрать", "Закрыть");
					SetPVarInt(playerid, "pd_door", 1);
					SetPVarInt(playerid, "tp_area_used", 1);
					return 1;
				}
				case 14:
				{
					show_dialog(playerid, d_pd_elevator, DIALOG_STYLE_LIST, ""c_server"Лифт", "Офис\nТюрьма\nГараж", "Выбрать", "Закрыть");
					SetPVarInt(playerid, "pd_door", 2);
					SetPVarInt(playerid, "tp_area_used", 1);
					return 1;
				}
				case 15, 90:
				{
					show_dialog(playerid, d_pd_elevator, DIALOG_STYLE_LIST, ""c_server"Лифт", "Офис\nТюрьма\nГараж\nКрыша", "Выбрать", "Закрыть");
					SetPVarInt(playerid, "pd_door", 3);
					SetPVarInt(playerid, "tp_area_used", 1);
					return 1;
				}
				case 16:
				{


					if(GetPlayerVirtualWorld(playerid) ==  1)
					{
						new sql_string[128];
						format(sql_string, sizeof sql_string, "SELECT * FROM `users_vehicles` WHERE `v_owner` = '%d' AND `v_fine`>'0'", PlayerInfo[playerid][id]);
						mysql_tquery(sql_connection, sql_string, "load_fine_vehicles", "i", playerid);
						return 1;
					}
					else
					{
						if(Iter_Count(player_vehicles[playerid]) == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас нет транспорта, который можно продать.");
						new dialog_str[246],
							line_str[46];

						strcat(dialog_str, ""c_grey"Выберите транспорт для продажи:"c_white"\n");
						foreach(new veh_id:player_vehicles[playerid])
						{
							format(line_str, 46, "-%s [%s]\n", vehicle_name[GetVehicleModel(veh_id)-400], veh_info[veh_id -1][v_plate]);
							strcat(dialog_str, line_str);
						}
						show_dialog(playerid, d_carmarket, DIALOG_STYLE_LIST, ""c_server"Авторынок", dialog_str, "Выбрать", "Закрыть");
						return 1;
					}
				}
				case 17:
				{
					show_dialog(playerid, d_lspd_payments, DIALOG_STYLE_LIST, ""c_server"Платные услуги", "Регистрация транспорта["c_green"250$"c_white"]\nВнесение залога\nИнформация о залоге", "Выбрать", "Закрыть");
					return 1;
				}
				case 18:
				{
					if(!cop_player(playerid)|| GetPlayerVirtualWorld(playerid)!= PlayerInfo[playerid][member] -3) return 1;
					if(!is_fraction_duty {playerid})
					{
						show_dialog(playerid, d_duty, DIALOG_STYLE_MSGBOX, ""c_server"Раздевалка:",
						""c_server"* "c_grey"Вы действительно хотите начать рабочий день?", "Да", "Нет");
					}
					else
					{
						show_dialog(playerid, d_duty, DIALOG_STYLE_MSGBOX, ""c_server"Раздевалка:",
						""c_server"* "c_grey"Вы действительно хотите закончить рабочий день?", "Да", "Нет");
					}
					return 1;
				}
				case 19:
				{
					if(!cop_player(playerid)|| GetPlayerVirtualWorld(playerid)!= PlayerInfo[playerid][member] -3) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас нет доступа к оружейной.");
					show_dialog(playerid, d_armoury, DIALOG_STYLE_LIST, ""c_server"Оружейная", "Silenced Pistol | Tazer (35 пт.)\nDesert Eagle (35 пт.)\nM4 (150 пт.)\nMP5 (100 пт.)\nShotgun (50 пт.)\nДубинка\nБронежилет\nМаска", "Выбрать", "Закрыть");
					return 1;
				}
				case 23..24, 132:
				{
					if(GetPVarInt(playerid, "p_dead") >= 1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете пользоваться лифтом во время лечения.");
					show_dialog(playerid, d_mc_elevator, DIALOG_STYLE_LIST, ""c_server"Лифт", "1 этаж\n2 этаж\n3 этаж", "Выбрать", "Закрыть");
					SetPVarInt(playerid, "pd_door", GetPlayerVirtualWorld(playerid));
					SetPVarInt(playerid, "tp_area_used", 1);
					return 1;
				}
				case 25:
				{
					show_dialog(playerid, d_mc_menu, DIALOG_STYLE_LIST, ""c_server"Больница", ""c_server"1. "c_white"Записаться в больницу\n"c_server"2. "c_white"Получить медицинскую карту\n"c_server"3. "c_white"Экспресс лечение\n"c_server"4. "c_white"Книга жалоб", "Выбрать", "Закрыть");
					return 1;
				}
				case 26:
				{
					if(!medic_player(playerid)|| GetPlayerVirtualWorld(playerid)!= PlayerInfo[playerid][member] -14) return 1;
					if(!is_fraction_duty {playerid})
					{
						show_dialog(playerid, d_duty, DIALOG_STYLE_MSGBOX, ""c_server"Раздевалка:",
						""c_server"* "c_grey"Вы действительно хотите начать рабочий день?", "Да", "Нет");
					}
					else
					{
						show_dialog(playerid, d_duty, DIALOG_STYLE_MSGBOX, ""c_server"Раздевалка:",
						""c_server"* "c_grey"Вы действительно хотите закончить рабочий день?", "Да", "Нет");
					}
					return 1;
				}
				case 27:
				{
					if(GetPVarInt(playerid, "house_id")> 0)
					{
						new h = GetPVarInt(playerid, "house_id")-1;
						new hint = h_info[h][h_int] -1;
						set_pos(playerid, house_int[hint][hint_position][0], house_int[hint][hint_position][1], house_int[hint][hint_position][2], house_int[hint][hint_position][3], house_int[hint][hint_int], h_info[h][h_id]);
						SetPVarInt(playerid, "tp_area_used", 1);
						return 1;
					}
					else if(GetPVarInt(playerid, "cellar_id")> 0)
					{
						new h = GetPVarInt(playerid, "cellar_id")-1;
						set_pos(playerid, cellar_info[h][cl_pos][0], cellar_info[h][cl_pos][1], cellar_info[h][cl_pos][2], cellar_info[h][cl_pos][3], 0, 0);
						SetPVarInt(playerid, "tp_area_used", 1);
						DeletePVar(playerid, "cellar_id");
						return 1;
					}
				}
				case 30..32:
				{
					if(is_gym_training {playerid} != 0)
					{
						SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы покинули зал и завершили тренировку.");
						is_gym_training {playerid} = 0;
						if(is_fraction_duty {playerid} == 1)SetPlayerSkin(playerid, PlayerInfo[playerid][org_skin]);
						else SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);

					}
				}
				case 33..37:
				{
					if(PlayerInfo[playerid][member] != area_info[ars_id][a_id] -15 && GetPlayerVirtualWorld(playerid) ==  0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Дверь закрыта.");
				}
				case 38:
				{
					new h = GetPVarInt(playerid, "house_id")-1;
					new hint = h_info[h][h_int] -1;
					set_pos(playerid, house_int[hint][hint_position][0], house_int[hint][hint_position][1], house_int[hint][hint_position][2], house_int[hint][hint_position][3], house_int[hint][hint_int], h_info[h][h_id]);
					SetPVarInt(playerid, "tp_area_used", 1);
					return 1;
				}
				case 40..43:
				{
					ShowCafeDialog(playerid);
					return 1;
				}
				case 44..47:
				{
					ShowBarDialog(playerid);
					return 1;
				}
				case 48..50:
				{
					SetPVarInt(playerid, "tshop_id", area_info[ars_id][a_id] -47);
					show_dialog(playerid, d_car_shop, DIALOG_STYLE_LIST, ""c_server"Автосалон", ""c_server"Выберите тип кузова:\n"c_grey"-"c_white"Джип\n"c_grey"-"c_white"Купе\n"c_grey"-"c_white"Пикап\n"c_grey"-"c_white"Седан\n"c_grey"-"c_white"Универсал\n"c_grey"-"c_white"Фургон\n"c_grey"-"c_white"Мото-транспорт", "Выбрать", "Закрыть");					return 1;
				}
				case 51..52:
				{
					if(!army_player(playerid)) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Дверь закрыта.");
				}
				case 53:
				{
					show_dialog(playerid, d_auto_exam_1, DIALOG_STYLE_MSGBOX, ""c_server"Автошкола",""c_server"\t\t\t\tШкола вождения\n\n"c_white"Добро пожаловать в автошколу.\nЧтобы получить права Вам нужно выполнить следующие действия:\n\n"c_grey"* Изучить ПДД\n* Оплатить "c_server"1000$\n"c_grey"* Сдать тест на знание ПДД\n* Сдать практический экзамен", "Далее", "Назад");
					return 1;
				}
				case 56:
				{
					if(PlayerInfo[playerid][member] != 27) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Доступно только сотрудникам NPR.");
					give_weapon(playerid, 43, 100);
					SendClientMessage(playerid, col_white, ""c_server"* "c_white"Вы взяли фотоаппарат.");
					return 1;
				}
				case 63:
				{
					show_dialog(playerid, d_boat_exam_1, DIALOG_STYLE_MSGBOX, ""c_server"Центр водного транспорта",""c_server"\t\t\t\tЦентр водного транспорта\n\n"c_white"Добро пожаловать в центр обучения управлением водного транспорта.\nЧтобы получить лицензию на водный транспорт Вам нужно выполнить следующие действия:\n\n"c_grey"* Изучить правила передвижения в водном пространстве\n* Оплатить "c_server"3500$\n"c_grey"* Сдать практический экзамен", "Далее", "Назад");
					return 1;
				}
				case 64:
				{
					show_dialog(playerid, d_fly_exam_1, DIALOG_STYLE_MSGBOX, ""c_server"Авиашкола",""c_server"\t\t\t\tЦентр обучения полётам\n\n"c_white"Добро пожаловать в центр обучения полётам.\nЧтобы получить лицензию на воздушный транспорт Вам нужно выполнить следующие действия:\n\n"c_grey"* Изучить правила передвижения в воздушном пространстве\n* Оплатить "c_server"5000$\n"c_grey"* Сдать практический экзамен", "Далее", "Назад");
					return 1;
				}
				case 69..71:
				{
					show_dialog(playerid, d_bank, DIALOG_STYLE_LIST, ""scm_dialog"Банк", ""c_server"1 | "c_white"Управление счетами\n"c_server"2 | "c_white"Открыть новый счёт\n"c_server"3 | "c_white"Пополнить баланс телефона\n"c_server"4 | "c_white"Оплата налогов\n"c_server"5 | "c_white"Оплата штрафов\n"c_server"6 | "c_white"Баланс организаций\n"c_server"7 | "c_white"Семейный счёт", "Выбрать", "Закрыть");
					return 1;
				}
				case 75:
				{
					new gun_name[32 + 1];
				
					global_string = ""c_white"Товар\t"c_white"Цена\n";
					for(new i = 0; i < 8; i++)
					{
						GetWeaponName(crim_ammo_guns[i], gun_name, 16);
						format(global_string, 860, "%s"c_server"%d | "c_white"%s\t"c_green"%i$\n", global_string, i + 1, gun_name, crim_ammo_prices[i]);
					}

					new str[128];

					switch(GetPlayerVirtualWorld(playerid))
					{
						case 1: format(str,sizeof(str),""scm_dialog"Аммуниция (Контроль: {%s}%s"c_white")", f_info[gz_info[47][gz_owner] -1][f_chat_color], f_info[gz_info[47][gz_owner] -1][f_name]);
						case 2: format(str,sizeof(str),""scm_dialog"Аммуниция (Контроль: {%s}%s"c_white")", f_info[gz_info[84][gz_owner] -1][f_chat_color], f_info[gz_info[84][gz_owner] -1][f_name]);
						case 3: format(str,sizeof(str),""scm_dialog"Аммуниция (Контроль: {%s}%s"c_white")", f_info[gz_info[64][gz_owner] -1][f_chat_color], f_info[gz_info[64][gz_owner] -1][f_name]);
					}

					show_dialog(playerid, d_crim_ammo_shop, DIALOG_STYLE_TABLIST_HEADERS, str, global_string, !"Далее", !"Отмена");
					return 1;
				}
				case 76:
				{
					if(PlayerInfo[playerid][member] != 11) return 1;
					if(!is_fraction_duty {playerid})
					{
						show_dialog(playerid, d_duty, DIALOG_STYLE_MSGBOX, ""c_server"Раздевалка:",
						""c_server"* "c_grey"Вы действительно хотите начать рабочий день?", "Да", "Нет");
					}
					else
					{
						show_dialog(playerid, d_duty, DIALOG_STYLE_MSGBOX, ""c_server"Раздевалка:",
						""c_server"* "c_grey"Вы действительно хотите закончить рабочий день?", "Да", "Нет");
					}
					return 1;
				}
				case 77:
				{
					if(is_gym_training {playerid} == 0)
					{
						show_dialog(playerid, d_gym_training, DIALOG_STYLE_MSGBOX, ""c_server"Спортзал:",
						"* "c_grey"Стоимость одной тренировки составляет "c_server"500$\n\n\
						"c_server"* "c_grey"Вы действительно хотите начать тренировку?", "Да", "Нет");
					}
					else
					{
						show_dialog(playerid, d_gym_training, DIALOG_STYLE_MSGBOX, ""c_server"Спортзал:",
						""c_server"* "c_grey"Вы действительно желаете завершить тренировку?", "Да", "Нет");

					}
					return 1;
				}
				case 78:
				{
					show_dialog(playerid, d_job, DIALOG_STYLE_TABLIST_HEADERS,
					!""scm_dialog"Трудоустройство",
					!""c_white"Работа\t"c_white"Требуемый уровень\n\
					"c_server"1 | "c_white"Водитель автобуса\t"c_yellow"2 ур.\n\
					"c_server"2 | "c_white"Водитель такси\t"c_yellow"2 ур.\n\
					"c_server"3 | "c_white"Механик\t"c_yellow"3 ур.\n\
					"c_server"4 | "c_white"Дальнобойщик\t"c_yellow"4 ур.\n\
					"c_server"5 | "c_white"Развозчик продуктов\t"c_yellow"5 ур.\n\
					"c_server"6 | "c_white"Развозчик топлива\t"c_yellow"4 ур.\n\
					"c_server"7 | "c_white"Газонокосильщик\t"c_yellow"4 ур.\n\
					"c_orange_red"* Уволиться с работы", !"Выбрать", !"Закрыть");
					
					return 1;
				}
				case 80:
				{
					show_dialog(playerid, d_family_hall, DIALOG_STYLE_LIST, !""scm_dialog"Архив семей", !"Создать семью\nПереименовать семью\nСписок семей", !"Выбрать", !"Закрыть");
					return 1;
				}
				case 85:
				{
					if(PlayerInfo[playerid][level] < 3) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Казино доступно с 3 уровня.");
					if(GetPVarInt(playerid, "Krupje")!= 0)
					{
						SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы завершили рабочую смену крупье.");
						DeletePVar(playerid, "Krupje");
						SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
					}
				}
				case 87:
				{
					if(GetPVarInt(playerid, "Krupje") ==  0 )show_dialog(playerid, d_casino_job, DIALOG_STYLE_MSGBOX, ""c_server"Работа крупье", ""c_white"Вы хотите устроиться на работу крупье?\n\n"c_grey"* Заработная плата выплачивается сразу после обслуживания игроков.", "Да", "Нет");
					else show_dialog(playerid, d_casino_job, DIALOG_STYLE_MSGBOX, ""c_server"Работа крупье", ""c_white"Вы действительно хотите закончить рабочий день?", "Да", "Нет");
					return 1;
				}
				case 88:
				{
					show_dialog(playerid, d_port_job, DIALOG_STYLE_LIST, ""c_server"Порт", ""c_server"Трудоустройство\n"c_grey"-"c_white"Грузчик\n"c_grey"-"c_white"Работа на грузоподъёмнике\n"c_grey"Завершить работу", "Выбрать", "Закрыть");
					return 1;
				}
				case 86:
				{
					if(PlayerInfo[playerid][timejob] == job_porter && ! IsPlayerAttachedObjectSlotUsed(playerid, 1))
					{
						if(opened_containers == 0)
						{
							SendClientMessage (playerid, col_gray, "* Контейнера для разгрузки пока нет, ожидайте появления контейнера для разгрузки.");
						}
						else
						{

							SetPlayerCheckpoint(playerid, porter_pos_take[opened_containers -1][0], porter_pos_take[opened_containers -1][1], porter_pos_take[opened_containers -1][2], 2.5);
							job_ac_tick[playerid] = GetTickCount();
						}
					}
				}
				case 93..95:
				{
					show_dialog(playerid, d_help, DIALOG_STYLE_LIST, ""c_server"Помощь по игре", ""c_server"1. "c_white"О проекте\n"c_server"2. "c_white"Безопасность\n"c_server"3. "c_white"Role Play\n"c_server"4. "c_white"Основы игры\n"c_server"5. "c_white"Первые шаги\n"c_server"6. "c_white"Транспорт\n"c_server"7. "c_white"Общение\n"c_server"8. "c_white"Жильё\n"c_server"9. "c_white"Бизнес\n"c_server"10. "c_white"Банки и хранение средств\n"c_server"11. "c_white"Работы\n"c_server"12. "c_white"Организации", "Выбрать", "Закрыть");
					return 1;
				}
				case 96:
				{
					if(PlayerInfo[playerid][timejob] == job_forklift)
					{
						InterpolateCameraPos(playerid, 2639.9658,-2424.8433,13.2651, 2701.9277, -2378.6743, 17.4182, 10000, CAMERA_MOVE);
						InterpolateCameraLookAt(playerid, 2639.9658,-2424.8433,13.2651, 2701.5447, -2377.7532, 17.2832, 10000, CAMERA_MOVE);

						show_dialog(playerid, d_port_help, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по работе", "\
						"c_grey"Работа на погрузчике:\n\
						"c_white"Работа в порту заключается в перевозке контейнеров с грузом на погрузчике.\n\
						Данная работа осуществляется посменно, после чего вы будете отправлены на отдых.\n\
						Длительность смены составляет 15 минут, после чего требуется пятнадцатиминутный отдых.\n\n\
						Первым делом необходимо арендовать погрузчик и приступить к работе.",
						"Далее", "Закрыть");
						return 1;
					}
					else if(PlayerInfo[playerid][timejob] == job_porter)
					{
						InterpolateCameraPos(playerid, 2639.9658,-2424.8433,13.2651, 2667.4717, -2523.0828, 28.0960, 10000, CAMERA_MOVE);
						InterpolateCameraLookAt(playerid, 2639.9658,-2424.8433,13.2651, 2668.0283, -2522.2534, 27.8110, 10000, CAMERA_MOVE);
						show_dialog(playerid, d_port_help, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по работе", "\
						"c_grey"Работа грузчиком:\n\
						"c_white"Работа грузчика представляет собой разгрузку контейнеров с главной площадки порта.\n\
						После разгрузки товар отправляется по торговым точкам штата.\n\
						Первым делом необходимо отправиться к любому открытому контейнеру.",
						"Далее", "Назад");
						return 1;
					}
					else SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы не трудоустроены в порту.");
					return 1;
				}
				case 98:
				{
					if(8 != PlayerInfo[playerid][member]) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас нет доступа к оружейной.");
					show_dialog(playerid, d_armoury, DIALOG_STYLE_LIST, ""c_server"Оружейная", "Silenced Pistol | Tazer (35 пт.)\nDesert Eagle (35 пт.)\nM4 (150 пт.)\nMP5 (100 пт.)\nShotgun (50 пт.)\nДубинка\nБронежилет\nМаска", "Выбрать", "Закрыть");
					return 1;
				}
				case 99:
				{
					if(8 != PlayerInfo[playerid][member]) return 1;
					if(!is_fraction_duty {playerid})
					{
						show_dialog(playerid, d_duty, DIALOG_STYLE_MSGBOX, ""c_server"Раздевалка:",
						""c_server"* "c_grey"Вы действительно хотите начать рабочий день?", "Да", "Нет");
					}
					else
					{
						show_dialog(playerid, d_duty, DIALOG_STYLE_MSGBOX, ""c_server"Раздевалка:",
						""c_server"* "c_grey"Вы действительно хотите закончить рабочий день?", "Да", "Нет");
					}
					return 1;
				}
				case 100:
				{
					if(GetPVarInt(playerid, "p_dead") == 4) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вы не можете покинуть госпиталь до полного выздоровления.");
				}
				case 101:
				{
					show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по работе", "\
					"c_server"Работа на шахте:\n\
					"c_white"Шахта -промышленное предприятие, занимающееся добычей полезных ископаемых с помощью системы подземных горных выработок.\n\
					Несмотря на опасность работы шахтёра, она является одной из наиболее востребованных на рынке труда.\n\
					Задачей шахтёра является добыча железной руды и доставка к месту её переработки.\n\n\
					"c_grey"Как работать на шахте?\n\
					"c_grey"1. "c_white"Спуститесь в шахту.\n\
					"c_grey"2. "c_white"Встаньте на маркер футболки, переоденьтесь и возьмите оборудование.\n\
					"c_grey"3. "c_white"Следуйте в сторону красного маркера.\n\
					"c_grey"4. "c_white"Встаньте на красный маркер и начните добывать руду. Погрузите добытую руду на телегу.\n\
					"c_grey"5. "c_white"Следуйте в сторону красного маркера.\n\
					"c_grey"6. "c_white"Привезите руду на переработку.\n\
					"c_grey"7. "c_white"Повторяйте пункты с 3 по 6 до того, как не устанете работать.\n\
					"c_grey"8. "c_white"Если вдруг Вы почувствуете усталость или утомление, переоденьтесь, верните оборудование и получите заработную плату.\n\
					"c_grey"9. "c_white"Поднимитесь наверх.",
					"Закрыть", "");

					return 1;
				}

				case 102:
				{
					show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по работе", "\
					"c_server"Работа на заводе:\n\
					"c_white"Завод -промышленное предприятие, характеризующееся крупномасштабным производством.\n\
					Работа на заводе довольно трудна и однообразна, но очень востребована на рынке труда.\n\
					Заводские рабочие занимаются изготовлением запчастей и материалов, необходимых жителям штата.\n\n\
					"c_grey"Как работать на заводе?\n\
					"c_grey"1. "c_white"Встаньте на маркер футболки и переоденьтесь.\n\
					"c_grey"2. "c_white"Спуститесь вниз и возьмите ящик с заготовками.\n\
					"c_grey"3. "c_white"Подойдите к свободному столу и совершите сборку деталей.\n\
					"c_grey"4. "c_white"Соберите получившиеся детали в коробку.\n\
					"c_grey"5. "c_white"Следуйте в сторону красного маркера.\n\
					"c_grey"6. "c_white"Положите коробку с собранной запчастью на склад.\n\
					"c_grey"7. "c_white"Если вдруг Вы почувствуете усталость или утомление, переоденьтесь и получите заработную плату.\n\n\
					"c_grey"* Примечание: Чтобы собирать деталь, за столом нажимайте "c_white"Y"c_grey" и "c_white"N"c_grey".",
					"Закрыть", "");

					return 1;
				}

				case 103:
				{
					show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Помощь по работе", "\
					"c_server"Работа на лесопилке:\n\
					"c_white"Лесопилка -промышленное предприятие, занимающееся первичной обработкой леса.\n\
					Работа на лесопилке довольно трудна и опасна, но очень востребована на рынке труда.\n\
					Работники лесопилки занимаются распилом деревьев и доставкой лесозаготовок на склад.\n\n\
					"c_grey"Как работать на лесопилке?\n\
					"c_grey"1. "c_white"Встаньте на маркер футболки, переоденьтесь и возьмите бензопилу.\n\
					"c_grey"2. "c_white"Следуйте в сторону красного маркера.\n\
					"c_grey"3. "c_white"Встаньте на красный маркер и начнине пилить деревья.\n\
					"c_grey"4. "c_white"Соберите и возьмите получившуюся лесозаготовку.\n\
					"c_grey"5. "c_white"Следуйте в сторону красного маркера.\n\
					"c_grey"6. "c_white"Привезите лесозаготовку на склад.\n\
					"c_grey"7. "c_white"Повторяйте пункты с 2 по 5 до того, как не устанете работать.\n\
					"c_grey"8. "c_white"Если вдруг Вы почувствуете усталость или утомление, переоденьтесь, верните бензопилу и получите заработную плату.\n\n\
					"c_grey"* Примечание: Чтобы пилить дерево, многократно нажимайте левую кнопку мыши.",
					"Закрыть", "");

					return 1;
				}
				case 104:
				{
					if(TeamPaint[playerid] > 0)
					{
						TeamPaint[playerid] = 0;
						SendClientMessage(playerid, col_gray, "* Вы покинули интернет-кафе и были сняты с регистрации на PaintBall.");
					}
					if(is_player_race_regged[playerid])
					{
						is_player_race_regged[playerid] = 0;
						SendClientMessage(playerid, col_gray, "* Вы покинули интернет-кафе и были сняты с регистрации на гонки.");
					}
				}
				case 105:
				{
					show_dialog(playerid, d_reg_mp, DIALOG_STYLE_TABLIST, ""c_server"Регистрация на мероприятия", ""c_grey"-"c_white"Регистрация на PaintBall\t"c_green"500$\n"c_grey"-"c_white"Регистрация на гонку\t"c_green"500$", "Выбрать", "Закрыть");
					return 1;
				}
				case 106..108, 112..115:
				{
					show_dialog(playerid, d_rent_faggio, DIALOG_STYLE_MSGBOX, ""c_server"Аренда скутера", ""c_white"Стоимость аренды составляет -"c_green"50$\n\n"c_grey"* Скутер отправляется обратно в сервис после 5 минут бездействия.\n* Вы действительно желаете арендовать скутер?", "Аренда", "Отмена");
					return 1;
				}
				case 109:
				{
					if(!radio_player(playerid)|| GetPlayerVirtualWorld(playerid)!= PlayerInfo[playerid][member] -25) return 1;
					if(!is_fraction_duty {playerid})
					{
						show_dialog(playerid, d_duty, DIALOG_STYLE_MSGBOX, ""c_server"Раздевалка:",
						""c_server"* "c_grey"Вы действительно хотите начать рабочий день?", "Да", "Нет");
					}
					else
					{
						show_dialog(playerid, d_duty, DIALOG_STYLE_MSGBOX, ""c_server"Раздевалка:",
						""c_server"* "c_grey"Вы действительно хотите закончить рабочий день?", "Да", "Нет");
					}
					return 1;
				}
				case 110:
				{
					if(!fbi_player(playerid)) return 1;
					if(!is_fraction_duty {playerid})
					{
						show_dialog(playerid, d_duty, DIALOG_STYLE_MSGBOX, ""c_server"Раздевалка:",
						""c_server"* "c_grey"Вы действительно хотите начать рабочий день?", "Да", "Нет");
					}
					else
					{
						show_dialog(playerid, d_duty, DIALOG_STYLE_MSGBOX, ""c_server"Раздевалка:",
						""c_server"* "c_grey"Вы действительно хотите закончить рабочий день?", "Да", "Нет");
					}
					return 1;
				}
				case 111:
				{
					if(!fbi_player(playerid)) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас нет доступа к оружейной.");
					show_dialog(playerid, d_armoury, DIALOG_STYLE_LIST, ""c_server"Оружейная", "Silenced Pistol | Tazer (35 пт.)\nDesert Eagle (35 пт.)\nM4 (150 пт.)\nMP5 (100 пт.)\nShotgun (50 пт.)\nДубинка\nБронежилет\nМаска", "Выбрать", "Закрыть");
					return 1;
				}
				case 116:
				{
					new Float:bd_x, Float:bd_y, Float:bd_z, Float:vehicle_angle;
					GetBoatDoorPos(is_player_in_boat[playerid], bd_x, bd_y, bd_z);
					GetVehicleZAngle(is_player_in_boat[playerid], vehicle_angle);
					set_pos(playerid, bd_x, bd_y, bd_z, vehicle_angle + 180, 0, 0);

					is_player_in_boat[playerid] = 0;
					return 1;
				}

				case 117:
				{
					SetPVarInt(playerid, "tshop_id", 4);
					SetPVarInt(playerid, "tshop_type", 8);
					new veh_id = CreateVehicle(t_shop_models[0][7],
																				t_shop_pos[7][0],
																				t_shop_pos[7][1],
																				t_shop_pos[7][2],
																				t_shop_pos[7][3],
																				0, 0, -1);

					Streamer_Update(playerid);
					SetPVarInt(playerid, "tshop_car", veh_id);

					SetVehicleVirtualWorld(veh_id, playerid + 2);
					set_world(playerid, playerid + 2);
					set_interior(playerid, 0);
					SetPlayerArmedWeapon(playerid, 0);
					p_t_info[playerid][p_tp_immune_time] = 4;
					SetPlayerPos(playerid, 2965.8704, -402.3169, 3.8050);
					TogglePlayerControllable(playerid, false);

					SetPlayerCameraPos(playerid,  t_shop_pos[7][4],
													t_shop_pos[7][5],
													t_shop_pos[7][6]);

					SetPlayerCameraLookAt(playerid,   t_shop_pos[7][0],
														t_shop_pos[7][1],
														t_shop_pos[7][2]);

					new td_string[32];
					format(td_string, sizeof(td_string), "%s", vehicle_name[t_shop_models[0][7] -400]);

					ptd_tshop [playerid][0] = CreatePlayerTextDraw(playerid, 78.705871, 355.666778, td_string);
					PlayerTextDrawLetterSize(playerid, ptd_tshop [playerid][0], 0.406116, 1.669999);
					PlayerTextDrawAlignment(playerid, ptd_tshop [playerid][0], 1);
					PlayerTextDrawColor(playerid, ptd_tshop [playerid][0], -1);
					PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][0], 0);
					PlayerTextDrawSetOutline(playerid, ptd_tshop [playerid][0], 0);
					PlayerTextDrawBackgroundColor(playerid, ptd_tshop [playerid][0], 255);
					PlayerTextDrawFont(playerid, ptd_tshop [playerid][0], 1);
					PlayerTextDrawSetProportional(playerid, ptd_tshop [playerid][0], 1);
					PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][0], 0);

					format(td_string, sizeof(td_string), "%s", t_shop_category[7]);
					ptd_tshop [playerid][1] = CreatePlayerTextDraw(playerid, 78.235282, 373.166656, td_string);
					PlayerTextDrawLetterSize(playerid, ptd_tshop [playerid][1], 0.228235, 0.958333);
					PlayerTextDrawAlignment(playerid, ptd_tshop [playerid][1], 1);
					PlayerTextDrawColor(playerid, ptd_tshop [playerid][1], -1);
					PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][1], 0);
					PlayerTextDrawSetOutline(playerid, ptd_tshop [playerid][1], 0);
					PlayerTextDrawBackgroundColor(playerid, ptd_tshop [playerid][1], 255);
					PlayerTextDrawFont(playerid, ptd_tshop [playerid][1], 1);
					PlayerTextDrawSetProportional(playerid, ptd_tshop [playerid][1], 1);
					PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][1], 0);

					format(td_string, sizeof(td_string), "$%d", GetModelPrice(t_shop_models[0][7]));
					ptd_tshop [playerid][2] = CreatePlayerTextDraw(playerid, 78.235282, 381.333435, td_string);
					PlayerTextDrawLetterSize(playerid, ptd_tshop [playerid][2], 0.228235, 0.958333);
					PlayerTextDrawAlignment(playerid, ptd_tshop [playerid][2], 1);
					PlayerTextDrawColor(playerid, ptd_tshop [playerid][2], -1);
					PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][2], 0);
					PlayerTextDrawSetOutline(playerid, ptd_tshop [playerid][2], 0);
					PlayerTextDrawBackgroundColor(playerid, ptd_tshop [playerid][2], 255);
					PlayerTextDrawFont(playerid, ptd_tshop [playerid][2], 1);
					PlayerTextDrawSetProportional(playerid, ptd_tshop [playerid][2], 1);
					PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][2], 0);

					ptd_tshop [playerid][3] = CreatePlayerTextDraw(playerid, 8.529381, 345.166595, "");
					PlayerTextDrawLetterSize(playerid, ptd_tshop [playerid][3], 0.000000, 0.000000);
					PlayerTextDrawTextSize(playerid, ptd_tshop [playerid][3], 56.117614, 56.749965);
					PlayerTextDrawAlignment(playerid, ptd_tshop [playerid][3], 1);
					PlayerTextDrawColor(playerid, ptd_tshop [playerid][3], -1);
					PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][3], 0);
					PlayerTextDrawSetOutline(playerid, ptd_tshop [playerid][3], 0);
					PlayerTextDrawBackgroundColor(playerid, ptd_tshop [playerid][3], 522133503);
					PlayerTextDrawFont(playerid, ptd_tshop [playerid][3], 5);
					PlayerTextDrawSetProportional(playerid, ptd_tshop [playerid][3], 0);
					PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][3], 0);
					PlayerTextDrawSetPreviewModel(playerid, ptd_tshop [playerid][3], t_shop_models[0][7]);
					PlayerTextDrawSetPreviewRot(playerid, ptd_tshop [playerid][3], -30.000000, 0.000000, 30.000000, 1.000000);
					PlayerTextDrawSetPreviewVehCol(playerid, ptd_tshop [playerid][3], 1, 1);

					for(new j = 0; j < 4; j ++)
					{
						PlayerTextDrawShow(playerid, ptd_tshop [playerid][j]);
					}
					for(new j = 0; j < 20; j ++)
					{
						TextDrawShowForPlayer(playerid, td_tshop[j]);
						TextDrawShowForPlayer(playerid, td_color_tshop[j]);
					}

					SelectTextDraw(playerid, 0xB0C4DEFF);
					return 1;
				}
				case 118:
				{
					show_dialog(playerid, d_training_centr, DIALOG_STYLE_LIST, ""c_server"Тренировочный комплекс", "Тренировка навыков стрельбы\t"c_green"2500$\n"c_white"Дуэли", "Выбрать", "Закрыть");
					return 1;
				}
				case 124:
				{
					if(PlayerInfo[playerid][member] != 11) return 1;
					give_weapon(playerid, 23, 50);
					set_armour(playerid, 100);
				}
				case 61:
				{
					if(kickout_cooldown[playerid] > gettime()) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Вас выставили на улицу, Вы не мжете войти в течение 5 минут.");
				}
				case 123:
				{
					SetPVarInt(playerid, "tshop_id", 5);
					SetPVarInt(playerid, "tshop_type", 9);
					new veh_id = CreateVehicle(t_shop_models[0][8],
																				t_shop_pos[8][0],
																				t_shop_pos[8][1],
																				t_shop_pos[8][2],
																				t_shop_pos[8][3],
																				0, 0, -1);

					Streamer_Update(playerid);
					SetPVarInt(playerid, "tshop_car", veh_id);

					SetVehicleVirtualWorld(veh_id, playerid + 2);
					set_world(playerid, playerid + 2);
					set_interior(playerid, 0);
					SetPlayerArmedWeapon(playerid, 0);
					p_t_info[playerid][p_tp_immune_time] = 4;
					SetPlayerPos(playerid, -1381.4739,-602.5559,14.1484);
					TogglePlayerControllable(playerid, false);

					SetPlayerCameraPos(playerid,  t_shop_pos[8][4],
													t_shop_pos[8][5],
													t_shop_pos[8][6]);

					SetPlayerCameraLookAt(playerid,   t_shop_pos[8][0],
														t_shop_pos[8][1],
														t_shop_pos[8][2]);

					new td_string[32];
					format(td_string, sizeof(td_string), "%s", vehicle_name[t_shop_models[0][8] -400]);

					ptd_tshop [playerid][0] = CreatePlayerTextDraw(playerid, 78.705871, 355.666778, td_string);
					PlayerTextDrawLetterSize(playerid, ptd_tshop [playerid][0], 0.406116, 1.669999);
					PlayerTextDrawAlignment(playerid, ptd_tshop [playerid][0], 1);
					PlayerTextDrawColor(playerid, ptd_tshop [playerid][0], -1);
					PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][0], 0);
					PlayerTextDrawSetOutline(playerid, ptd_tshop [playerid][0], 0);
					PlayerTextDrawBackgroundColor(playerid, ptd_tshop [playerid][0], 255);
					PlayerTextDrawFont(playerid, ptd_tshop [playerid][0], 1);
					PlayerTextDrawSetProportional(playerid, ptd_tshop [playerid][0], 1);
					PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][0], 0);

					format(td_string, sizeof(td_string), "%s", t_shop_category[8]);
					ptd_tshop [playerid][1] = CreatePlayerTextDraw(playerid, 78.235282, 373.166656, td_string);
					PlayerTextDrawLetterSize(playerid, ptd_tshop [playerid][1], 0.228235, 0.958333);
					PlayerTextDrawAlignment(playerid, ptd_tshop [playerid][1], 1);
					PlayerTextDrawColor(playerid, ptd_tshop [playerid][1], -1);
					PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][1], 0);
					PlayerTextDrawSetOutline(playerid, ptd_tshop [playerid][1], 0);
					PlayerTextDrawBackgroundColor(playerid, ptd_tshop [playerid][1], 255);
					PlayerTextDrawFont(playerid, ptd_tshop [playerid][1], 1);
					PlayerTextDrawSetProportional(playerid, ptd_tshop [playerid][1], 1);
					PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][1], 0);

					format(td_string, sizeof(td_string), "$%d", GetModelPrice(t_shop_models[0][8]));
					ptd_tshop [playerid][2] = CreatePlayerTextDraw(playerid, 78.235282, 381.333435, td_string);
					PlayerTextDrawLetterSize(playerid, ptd_tshop [playerid][2], 0.228235, 0.958333);
					PlayerTextDrawAlignment(playerid, ptd_tshop [playerid][2], 1);
					PlayerTextDrawColor(playerid, ptd_tshop [playerid][2], -1);
					PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][2], 0);
					PlayerTextDrawSetOutline(playerid, ptd_tshop [playerid][2], 0);
					PlayerTextDrawBackgroundColor(playerid, ptd_tshop [playerid][2], 255);
					PlayerTextDrawFont(playerid, ptd_tshop [playerid][2], 1);
					PlayerTextDrawSetProportional(playerid, ptd_tshop [playerid][2], 1);
					PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][2], 0);

					ptd_tshop [playerid][3] = CreatePlayerTextDraw(playerid, 8.529381, 345.166595, "");
					PlayerTextDrawLetterSize(playerid, ptd_tshop [playerid][3], 0.000000, 0.000000);
					PlayerTextDrawTextSize(playerid, ptd_tshop [playerid][3], 56.117614, 56.749965);
					PlayerTextDrawAlignment(playerid, ptd_tshop [playerid][3], 1);
					PlayerTextDrawColor(playerid, ptd_tshop [playerid][3], -1);
					PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][3], 0);
					PlayerTextDrawSetOutline(playerid, ptd_tshop [playerid][3], 0);
					PlayerTextDrawBackgroundColor(playerid, ptd_tshop [playerid][3], 522133503);
					PlayerTextDrawFont(playerid, ptd_tshop [playerid][3], 5);
					PlayerTextDrawSetProportional(playerid, ptd_tshop [playerid][3], 0);
					PlayerTextDrawSetShadow(playerid, ptd_tshop [playerid][3], 0);
					PlayerTextDrawSetPreviewModel(playerid, ptd_tshop [playerid][3], t_shop_models[0][8]);
					PlayerTextDrawSetPreviewRot(playerid, ptd_tshop [playerid][3], -30.000000, 0.000000, 30.000000, 1.000000);
					PlayerTextDrawSetPreviewVehCol(playerid, ptd_tshop [playerid][3], 1, 1);

					for(new j = 0; j < 4; j ++)
					{
						PlayerTextDrawShow(playerid, ptd_tshop [playerid][j]);
					}
					for(new j = 0; j < 20; j ++)
					{
						TextDrawShowForPlayer(playerid, td_tshop[j]);
						TextDrawShowForPlayer(playerid, td_color_tshop[j]);
					}

					SelectTextDraw(playerid, 0xB0C4DEFF);
					return 1;
				}
				case 127:
				{
					ShowPharmDialog(playerid);
					return 1;
				}
				case 128:
				{
					show_dialog(playerid, d_air_exam_test, DIALOG_STYLE_MSGBOX, ""c_server"Проверка навыков воздушного транспорта", ""c_white"Вы действительно хотите проверить свои навыки владения "c_server"воздушным "c_white"транспортом?\n\n "c_grey"* Стоимость данного действия составляет 2000$\n * Если вы обойдёте один из рекордов на таблице, которая находится недалеко от Вас, то получите вознаграждение.", "Начать", "Закрыть");
					return 1;
				}
				case 129:
				{
					show_dialog(playerid, d_boat_exam_test, DIALOG_STYLE_MSGBOX, ""c_server"Проверка навыков водяного транспорта", ""c_white"Вы действительно хотите проверить свои навыки владения "c_server"водным "c_white"транспортом?\n\n "c_grey"* Стоимость данного действия составляет 2000$\n * Если вы обойдёте один из рекордов на таблице, которая находится недалеко от Вас, то получите вознаграждение.", "Начать", "Закрыть");
					return 1;
				}
				case 130:
				{
					new str[45 + MAX_PLAYER_NAME], string[sizeof str * 10];
					for(new i; i < 10; i++)
					{
						format(str, sizeof str, ""c_server"%d. "c_white"%s -"c_grey"%d сек.\n", i + 1, server_exam[i][names], server_exam[i][records]);
						strcat(string, str);
					}
					show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Таблица лидеров", string, "Закрыть", "");
					return 1;
				}
				case 131:
				{
					new str[45 + MAX_PLAYER_NAME], string[sizeof str * 10];
					for(new i = 10; i < 20; i++)
					{
						format(str, sizeof str, ""c_server"%d. "c_white"%s -"c_grey"%d сек.\n", i -9, server_exam[i][names], server_exam[i][records]);
						strcat(string, str);
					}
					show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Таблица лидеров", string, "Закрыть", "");
					return 1;
				}
				case 134: show_dialog(playerid, d_rieltore, DIALOG_STYLE_LIST, !""scm_dialog"Риэлторская компания", !""c_server"1 | "c_white"Дома\n"c_server"2 | "c_white"Бизнесы\n"c_server"3 | "c_white"Семейные острова", !"Выбрать", !"Отмена");
				/*case 135:
				{
				    SendClientMessage(playerid, 0xE4EE53FF, "По техническим причинам, мы не успели полностью реализовать фотографа.");
				    SendClientMessage(playerid, 0xE4EE53FF, "Но, вы не расстраивайтесь, он будет функционировать полностью 23.03.2018 с 4:00 по МСК.");
					if(GetTickCount() -GetPVarInt(playerid, "excuse_photographer_pvar") < 60000)
						return 0;
					static query[] = "SELECT * FROM `excuse_for_photographer` WHERE `nick` = '%e' LIMIT 1";
					new fmt_query[sizeof(query) + MAX_PLAYER_NAME + 1 -2];
					mysql_format(sql_connection, fmt_query, sizeof fmt_query, query, PlayerInfo[playerid][name]);
					mysql_tquery(sql_connection, fmt_query, "check_give_excuse_photographer", "i", playerid);
				    return 0;
				} */
				case 136:
				{
					if(quest_photographer_id[playerid] != -1)
					{
						show_dialog(playerid,
									d_photographer_uninvite,
									DIALOG_STYLE_MSGBOX,
									""c_server"Уволиться?",
									""c_white"Вы действительно хотите уволиться?",
									"Да",
									"Нет");
						return 1;
					}
					static const str[] = ""c_server"1. "c_white"Задание от правительства\n";
					new count_job = 1;
					new val_str[11];
					new fmt_str[sizeof(str) + MAX_NAME_PHOTOGRAPHER_POINT * (MAX_PHOTOGRAPHER_JOB_QUEST -QUEST_OLD_MILITARY)];
					strcat(fmt_str, str);
					for(new i = QUEST_OLD_MILITARY; i < MAX_PHOTOGRAPHER_JOB_QUEST; i++)
					{
						if(isnull(photographer_job_info[i][pjName]))
							continue;
						count_job++;
						valstr(val_str, count_job);
						strcat(val_str, ". ");
						strcat(fmt_str, ""c_server"");
						strcat(fmt_str, val_str);
						strcat(fmt_str, ""c_white"");
						strcat(fmt_str, photographer_job_info[i][pjName]);
						strcat(fmt_str, "\n");
					}
					show_dialog(playerid,
								  d_photographer_invite,
								  DIALOG_STYLE_LIST,
								  ""c_server"Устройства на работу фотографа",
								  fmt_str,
								  "Выбрать",
								  "Закрыть");
				}
				case 137:
				{
					new slot = get_weapon_slot(WEAPON_CAMERA);

					if(p_t_info[playerid][p_gun_slot][slot] != 0 || quest_photographer_id[playerid] == -1)
						return 0;
					give_weapon(playerid, WEAPON_CAMERA, 900);
				}
				case 138:
				{
					if(step_photographer_job[playerid] != 2 || action_type{playerid} == ACTION_PHOTOGRAPHER)
						return 0;
					action_type{playerid} = ACTION_PHOTOGRAPHER;
					action_step{playerid} = 0;
					action_td_status(playerid, true);
				}
				case 139:
				{
					if(step_photographer_job[playerid] == 3 && quest_photographer_id[playerid] < QUEST_OLD_MILITARY)
					{
						SendMessagePhtographerSalary(playerid);
						update_cooldown_photographer(playerid, quest_photographer_id[playerid]);
						EndJobPhotographer(playerid);
					}
					else if(step_photographer_job[playerid] == 3 && (QUEST_OLD_MILITARY <= quest_photographer_id[playerid] <= QUEST_PRIEST))
					{
						SendClientMessage(playerid, col_blue, "Отвезите фотографию актеру!");
						return 0;
					}
				}
				case 141:
				{
					static text_dialog[] =
					{
						""c_server"\t\t\tПривет! Сейчас мы расскажем Вам о системе фотографа.\n\n\
						 "c_server"1. "c_white"Задания от правительства доступны раз в 30 минут\n\
						 "c_server"2. "c_white"Все остальные задания доступны раз в день, с интервалом 60 минут.\n\n\
						 "c_server"\t\t\tЗадания с актерами нужно выполнять так: \n\n\
						 "c_server"3.\n\
						 "c_server"3.1.  "c_white"Берем задания\n\
						 "c_server"3.2.  "c_white"Берем фотоаппарат\n\
						 "c_server"3.3.  "c_white"На карте появляется красный квадратик (или треугольник, в зависимости от расстояния)\n\
						 "c_server"3.3.  "c_white"Находим актера на этой точке, берем задания у актера (советуем прочитать задание)\n\
						 "c_server"3.5.  "c_white"На карте появляется красный кружок (метка, такая же, если поставить ее через ESC -> map)\n\
						 "c_server"3.6.  "c_white"Едем на этот кружок\n\
						 "c_server"3.7.  "c_white"Делаем фотографию (должно вывести в чат сообщение)\n\
						 "c_server"3.8.  "c_white"Если фотографий нужно больше 1, то на карте появляется новый красный кружок\n\
						 "c_server"3.9.  "c_white"Едем на новый красный кружок\n\
						 "c_server"3.10. "c_white"Делаем фотографию\n\
						 "c_server"3.11. "c_white"Везем в бюро фотографов\n\
						 "c_server"3.12. "c_white"Печатаем фотографию (дверь около выдачи ЗП, нужно в нее зайти)\n\
						 "c_server"3.13. "c_white"Везем фотографию актеру и получаем деньги\n\n\
						 "c_server"\t\t\tЗадания с правительством нужно выполнять так:\n\n\
						 "c_server"4\n\
						 "c_server"4.1. "c_white"Берем задание от правительства (хотим заметить, что всего 14 заданий, выдаются они рандомно)\n\
						 "c_server"4.2. "c_white"Берем фотоаппарат\n\
						 "c_server"4.3. "c_white"На карте появляется красный квадратик (или треугольник, в зависимости от расстояния)\n\
						 "c_server"4.4. "c_white"Едем на красный квадратик (или треугольник, в зависимости от расстояния)\n\
						 "c_server"4.5. "c_white"Делаем фотографию здания\n\
						 "c_server"4.6. "c_white"Везем в бюро фотографов\n\
						 "c_server"4.7. "c_white"Печатаем фотографию\n\
						 "c_server"4.8. "c_white"Забираем деньги в бюро фотографов"
					};
					show_dialog(playerid,
								  d_none,
								  DIALOG_STYLE_MSGBOX,
								  ""c_server"Информация о работе фотографа",
								  text_dialog,
								  "Закрыть",
								  "");
				}
				case 161:
				{
					if(!PlayerInfo[playerid][gender])
						show_dialog(playerid, d_clothes_bath, DIALOG_STYLE_LIST, !""scm_dialog"Баня", !"Одежда №18\nОдежда №45\nОдежда №97", !"Выбрать", !"Закрыть");
					else
						show_dialog(playerid, d_clothes_bath, DIALOG_STYLE_LIST, !""scm_dialog"Баня", !"Одежда №90\nОдежда №138\nОдежда №140", !"Выбрать", !"Закрыть");
				}
				case 162: SendClientMessage(playerid, col_white, !""scm_error"Временно недоступно.");
				case 163: return ShowElectronicDialog(playerid);
			}
			teleport_tick[playerid] = GetTickCount() + 2000;

			if(area_info[ars_id][a_pick] != 1318) return 1;
			if(sec_id)set_pos(playerid, area_info[ars_id][a_to_pos][0], area_info[ars_id][a_to_pos][1], area_info[ars_id][a_to_pos][2], area_info[ars_id][a_to_pos][3], area_info[ars_id][a_interior][sec_id], area_info[ars_id][a_virt_world][sec_id]);
			else set_pos(playerid, area_info[ars_id][a_pos][0], area_info[ars_id][a_pos][1], area_info[ars_id][a_pos][2], area_info[ars_id][a_pos][3], area_info[ars_id][a_interior][sec_id], area_info[ars_id][a_virt_world][sec_id]);
			teleport_tick[playerid] = GetTickCount();
			
			p_t_info[playerid][pickup_time] = pickupid;
		}

		case pick_type_hentrance:
		{
			for(new h = 0; h < house_count; h ++)
			{
				if(pickupid != h_info[h][h_pickup]) continue;
				new dialog_string[216];
				if(h_info[h][h_owner] == -1)
				{
					format(dialog_string, sizeof dialog_string, "\n\
					"c_white"Стоимость: \t\t"c_server"%d$\n\
					"c_white"Класс: \t\t\t"c_server"%s\n\
					"c_white"Номер дома: \t\t"c_server"%d\n",
					h_info[h][h_price], house_classes[h_info[h][h_int] -1], h_info[h][h_id]);
					if(h_info[h][h_garage] > 0)strcat(dialog_string, "\n"c_grey"* В доме есть обустроенный гараж");
					show_dialog(playerid, d_house, DIALOG_STYLE_MSGBOX, ""c_server"Недвижимость продаётся", dialog_string, "Купить", "Отмена");
					SetPVarInt(playerid, "house_dialog", 1);
				}
				else
				{
					if(h_info[h][h_rent_price] == 0)
					{
						format(dialog_string, sizeof dialog_string, "\n\
						"c_white"Владелец: \t\t"c_server"%s\n\
						"c_white"Класс: \t\t\t"c_server"%s\n\
						"c_white"Номер дома: \t\t"c_server"%d",
						h_info[h][h_owner_name], house_classes[h_info[h][h_int] -1], h_info[h][h_id]);
						if(h_info[h][h_garage] > 0)strcat(dialog_string, "\n\n"c_grey"* В доме есть обустроенный гараж");
						SetPVarInt(playerid, "house_dialog", 2);
						show_dialog(playerid, d_house, DIALOG_STYLE_MSGBOX, ""c_server"Недвижимость занята", dialog_string, "Войти", "Отмена");
					}
					else
					{
						format(dialog_string, sizeof dialog_string, "\n\
						"c_white"Владелец: \t\t"c_server"%s\n\
						"c_white"Класс: \t\t\t"c_server"%s\n\
						"c_white"Рента: \t\t\t"c_server"%d$\n\
						"c_white"Номер дома: \t\t"c_server"%d",
						h_info[h][h_owner_name], house_classes[h_info[h][h_int] -1], h_info[h][h_id],
						h_info[h][h_rent_price], h_info[h][h_id]);
						if(h_info[h][h_garage] > 0)strcat(dialog_string, "\n\n"c_grey"* В доме есть обустроенный гараж");
						show_dialog(playerid, d_house, DIALOG_STYLE_MSGBOX, ""c_server"Недвижимость", dialog_string, "Войти", "Отмена");
						SetPVarInt(playerid, "house_dialog", 2);
					}
				}
				SetPVarInt(playerid, "house_id", h + 1);
				SetPVarInt(playerid, "tp_area_used", 1);
				break;
			}
		}
		case pick_type_clentrance:
		{
			for(new h = 0; h < cellar_count; h ++)
			{
				if(pickupid != cellar_info[h][cl_pickup]) continue;
				new dialog_string[216];
				if(cellar_info[h][cl_owner] == -1)
				{
					format(dialog_string, sizeof dialog_string, "\n\
					"c_white"Стоимость: \t\t\t"c_server"%d$\n\
					"c_white"Номер подвала: \t\t"c_server"%d\n",
					cellar_info[h][cl_price], cellar_info[h][cl_id]);
					show_dialog(playerid, d_cellar, DIALOG_STYLE_MSGBOX, ""c_server"Подвал продаётся", dialog_string, "Купить", "Отмена");
					SetPVarInt(playerid, "cellar_dialog", 1);
				}
				else
				{
					format(dialog_string, sizeof dialog_string, "\n\
					"c_white"Владелец: \t\t\t"c_server"%s\n\
					"c_white"Номер подвала: \t\t"c_server"%d",
					cellar_info[h][cl_owner_name], cellar_info[h][cl_id]);
					show_dialog(playerid, d_cellar, DIALOG_STYLE_MSGBOX, ""c_server"Подвал", dialog_string, "Войти", "Отмена");
					SetPVarInt(playerid, "cellar_dialog", 2);
				}
				SetPVarInt(playerid, "cellar_id", h + 1);
				SetPVarInt(playerid, "tp_area_used", 1);
				break;
			}
		}
		case pick_type_hexit:
		{
			new h = GetPVarInt(playerid, "house_id")-1;
			if(h_info[h][h_improve][0] == 1)
			{
				set_pos(playerid, h_info[h][h_pos][0], h_info[h][h_pos][1], h_info[h][h_pos][2], h_info[h][h_pos][3], 0, h_info[h][h_vw]);
				teleport_tick[playerid] = GetTickCount();
				SetPVarInt(playerid, "tp_area_used", 1);
				if(h_info[h][h_radio_status] == 1)StopAudioStreamForPlayer(playerid);

				DeletePVar(playerid, "house_id");
				SetPVarInt(playerid, "tp_area_used", 1);
			}
			return 1;
		}
		case pick_type_fientrance:
		{
			for(new fi = 0; fi < island_count; fi++)
			{
				if(pickupid != fi_info[fi][fi_pickup]) continue;

				new fint = fi_info[fi][fi_int] -1;
				set_pos(playerid, family_int[fint][fint_position][0], family_int[fint][fint_position][1], family_int[fint][fint_position][2], family_int[fint][fint_position][3], family_int[fint][fint_int], fi_info[fi][fi_id]);
				if(fi_info[fi][fi_radio_status] == 1) PlayAudioStreamForPlayer(playerid, fi_info[fi][fi_radio_url]);

				SetPVarInt(playerid, "island_id", fi + 1);
				SetPVarInt(playerid, "tp_area_used", 1);
				teleport_tick[playerid] = GetTickCount();
				break;
			}
		}
		case pick_type_fiexit:
		{
			new fi = GetPVarInt(playerid, !"island_id") -1;
			set_pos(playerid, fi_info[fi][fi_pos][0], fi_info[fi][fi_pos][1], fi_info[fi][fi_pos][2], fi_info[fi][fi_pos][3], 0, fi_info[fi][fi_vw]);
			if(fi_info[fi][fi_radio_status] == 1) StopAudioStreamForPlayer(playerid);

			teleport_tick[playerid] = GetTickCount();
			SetPVarInt(playerid, !"tp_area_used", 1);
			DeletePVar(playerid, !"island_id");
			return 1;
		}
		case pick_type_bentrance:
		{
			for(new t = 0; t < b_count; t ++)
			{
				if(b_info[t][b_pickup] == pickupid)
				{
					new dialog_string[230 + MAX_PLAYER_NAME + 7 + 32 + 1];

					new business_status[19 + 1] = ""c_orange_red"Закрыт";
					if(!b_info[t][b_close]) business_status = ""c_green"Открыт";
					if(b_info[t][b_owner_inc] == -1)
					{
					    if(b_info[t][b_type] != bizz_type_ammo)
					    {
							format(dialog_string, sizeof(dialog_string),
							""c_white"Бизнес продается:\n\n\
							"c_white"Название:"c_server" %s\n\
							"c_white"Контроль:"c_server" %s\n\
							"c_white"Цена:"c_green" %d$\n\
							"c_white"Состояние: %s", b_info[t][b_name], mafia_owner_name[b_info[t][b_mafia] -1], b_info[t][b_price], business_status);
						}
						else
						{
							format(dialog_string, sizeof(dialog_string),
							""c_white"Бизнес продается:\n\n\
							"c_white"Название:"c_server" %s\n\
							"c_white"Семья:"c_server" %s\n\
							"c_white"Цена:"c_green" %d$\n\
							"c_white"Состояние: %s", b_info[t][b_name], family_info[b_info[t][b_family] -1][fam_name], b_info[t][b_price], business_status);
						}
						show_dialog(playerid, d_b_buy, DIALOG_STYLE_MSGBOX, !""scm_dialog"Информация о бизнесе", dialog_string, !"Купить", !"Войти");
					}
					else
					{
						new bis_int = b_info[t][b_int];
						if(bis_int == -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Произошла ошибка при входе в бизнес!");
						if(b_info[t][b_close] == 1 ||  b_info[t][b_owner_inc] == -1) return GameTextForPlayer(playerid, "~r~BUSINES CLOSED", 2000, 4);
						if(b_info[t][b_fee] > 0)
						{
							format(dialog_string, sizeof(dialog_string),
							""c_white"Вы действительно желаете войти в %s?\n\n"c_grey"* Стоимость входа составляет "c_server"%d$", b_info[t][b_name], b_info[t][b_fee]);
							show_dialog(playerid, d_b_fee_enter, DIALOG_STYLE_MSGBOX, ""c_server"Вход в бизнес", dialog_string, "Войти", "Отмена");
							SetPVarInt(playerid, "p_biz_id", t + 1);
							return 1;
						}


						set_pos(playerid, b_interior[bis_int][i_position][0], b_interior[bis_int][i_position][1], b_interior[bis_int][i_position][2], b_interior[bis_int][i_position][3], b_interior[bis_int][i_interior], b_info[t][b_id] + 1000);
						SetPVarInt(playerid, "tp_area_used", 1);
						if(b_info[t][b_improve][2]) SendClientMessage(playerid, col_gray, "* В этом бизнесе имеется аптечка. Чтобы восстановить здоровье используйте "c_green"/bheal"c_grey" ("c_green"250$"c_grey")");

						teleport_tick[playerid] = GetTickCount();

					}
					SetPVarInt(playerid, "p_biz_id", t + 1);
					SetPVarInt(playerid, "tp_area_used", 1);
					break;
				}
			}
		}
		case pick_type_bexit:
		{
			new t = GetPVarInt(playerid, "p_biz_id")-1;
			DeletePVar(playerid, "p_biz_id");
			set_pos(playerid, b_info[t][b_position][0], b_info[t][b_position][1], b_info[t][b_position][2], b_info[t][b_position][3], 0, 0);
			SetPVarInt(playerid, "tp_area_used", 1);
			teleport_tick[playerid] = GetTickCount();
			return 1;
		}
	}
	return 1;
}


public OnPlayerEnterRaceCheckpoint(playerid)
{
	#if defined debug_mode
		printf("[DEBUG] [OnPlayerEnterRaceCheckpoint] playerid:%d ", playerid);
	#endif
	if(GetPVarInt(playerid, "exam_vehicle")!= 0)
	{
		new ds_cp_number = GetPVarInt(playerid, "driving_cp");
		SetPVarInt(playerid, "driving_cp", ds_cp_number + 1);
		switch(GetVehicleModel(player_vehicle[playerid]))
		{
			case 593: // plain | 3 type
			{
				if(ds_cp_number == 10)
				{
					DeletePVar(playerid, "driving_cp");
					new vehicle_id = GetPVarInt(playerid, "exam_vehicle");


					if(p_t_info[playerid][air_exam_status] == 1)
					{
						new exam_time = gettime () -p_t_info[playerid][air_exam_time];
						for(new i; i < 10; i++)
						{
							if(exam_time > server_exam[i][records]) continue;
							new string[75];
							format(string, sizeof string, ""c_green"* "c_white"Вы побили рекорд и встали на %d место! Ваш приз: %d", i + 1, server_exam[i][prizes]);
							SendClientMessage(playerid, col_white, string);
							format(string, sizeof string, ""c_green"* "c_white"Вы проехали данную трассу за %d секунд.", exam_time);
							SendClientMessage(playerid, col_white, string);
							server_exam[i][records] = exam_time;
							format(server_exam[i][names], MAX_PLAYER_NAME + 1, "%s", PlayerInfo[playerid][name]);

							DeletePVar(playerid, "exam_vehicle");
							set_pos(playerid, 739.3827, -1414.3588, 1500.9509, 176.8004, 1, 3);
							DestroyVehicle(vehicle_id);
							DisablePlayerRaceCheckpoint(playerid);
							give_money(playerid, server_exam[i][prizes]);

							new sql_string[82 + MAX_PLAYER_NAME];
							format(sql_string, sizeof sql_string, "UPDATE `server_exams` SET `e_name` = '%s', `e_record` = '%d' WHERE `e_id` = '%d'", server_exam[i][names], server_exam[i][records], i + 1);
							mysql_query(sql_connection, sql_string);
							return 1;
						}
						SendClientMessage(playerid, col_gray, !""c_orange_red"Вы не смогли побить рекорд.");
					}
					else
					{
						new Float:vehicle_health;

						GetVehicleHealth(vehicle_id, vehicle_health);
						if(vehicle_health < 800)
						{
							SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы допустили слишком много ошибок, практический экзамен провален.");
							p_t_info[playerid][last_alt] = GetTickCount();
						}
						else
						{
							SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно сдали практический экзамен и получили "c_green"лицензию на воздушный транспорт"c_white".");
							PlayerInfo[playerid][fly_lic] = 1;
							update_int_sql(playerid, "u_fly_lic", PlayerInfo[playerid][fly_lic]);
						}
					}
					DeletePVar(playerid, "exam_vehicle");
					set_pos(playerid, 739.3827, -1414.3588, 1500.9509, 176.8004, 1, 3);
					DestroyVehicle(vehicle_id);
					DisablePlayerRaceCheckpoint(playerid);
					return 1;
				}
				SetPlayerRaceCheckpoint(playerid, 3, ps_checkpoints[ds_cp_number][0], ps_checkpoints[ds_cp_number][1], ps_checkpoints[ds_cp_number][2] -1, ps_checkpoints[ds_cp_number + 1][0], ps_checkpoints[ds_cp_number + 1][1], ps_checkpoints[ds_cp_number + 1][2], 8.0);
				job_ac_tick[playerid] = GetTickCount();
			}
			case 473: // boat | 3 type
			{
				if(ds_cp_number == 28)
				{
					new vehicle_id = GetPVarInt(playerid, "exam_vehicle");
					if(p_t_info[playerid][boat_exam_status] == 1)
					{
						new exam_time = gettime () -p_t_info[playerid][boat_exam_time];
						for(new i = 10; i < 20; i++)
						{
							if(exam_time > server_exam[i][records]) continue;
							new string[75];
							format(string, sizeof string, ""c_green"* "c_white"Вы побили рекорд и встали на %d место! Ваш приз: %d", i -9, server_exam[i][prizes]);
							SendClientMessage(playerid, col_white, string);
							format(string, sizeof string, ""c_green"* "c_white"Вы проехали данную трассу за %d секунд.", exam_time);
							SendClientMessage(playerid, col_white, string);
							server_exam[i][records] = exam_time;
							format(server_exam[i][names], MAX_PLAYER_NAME + 1, "%s", PlayerInfo[playerid][name]);

							DeletePVar(playerid, "exam_vehicle");
							set_pos(playerid, 739.3827, -1414.3588, 1500.9509, 176.8004, 1, 2);
							DestroyVehicle(vehicle_id);
							DisablePlayerRaceCheckpoint(playerid);
							give_money(playerid, server_exam[i][prizes]);

							new sql_string[82 + MAX_PLAYER_NAME];
							format(sql_string, sizeof sql_string, "UPDATE `server_exams` SET `e_name` = '%s', `e_record` = '%d' WHERE `e_id` = '%d'", server_exam[i][names], server_exam[i][records], i + 1);
							mysql_query(sql_connection, sql_string);
							return 1;
						}
						SendClientMessage(playerid, col_gray, !""c_orange_red"Вы не смогли побить рекорд.");
					}
					else
					{
					DeletePVar(playerid, "driving_cp");

					new Float:vehicle_health;

					GetVehicleHealth(vehicle_id, vehicle_health);
					if(vehicle_health < 800)
					{
						SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы допустили слишком много ошибок, практический экзамен провален.");
						p_t_info[playerid][last_alt] = GetTickCount();
					}
					else
					{
						SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно сдали практический экзамен и получили "c_green"лицензию на водный транспорт"c_white".");
						PlayerInfo[playerid][boat_lic] = 1;
						update_int_sql(playerid, "u_boat_lic", PlayerInfo[playerid][boat_lic]);
					}
					}
					DeletePVar(playerid, "exam_vehicle");
					set_pos(playerid, 739.3827, -1414.3588, 1500.9509, 176.8004, 1, 2);
					DestroyVehicle(vehicle_id);
					DisablePlayerRaceCheckpoint(playerid);
					return 1;
				}
				SetPlayerRaceCheckpoint(playerid, 3, bs_checkpoints[ds_cp_number][0], bs_checkpoints[ds_cp_number][1], bs_checkpoints[ds_cp_number][2] -1, bs_checkpoints[ds_cp_number + 1][0], bs_checkpoints[ds_cp_number + 1][1], bs_checkpoints[ds_cp_number + 1][2], 8.0);
				job_ac_tick[playerid] = GetTickCount();
			}
			case 587: // vehicle
			{
				if(ds_cp_number == 42)
				{
					DeletePVar(playerid, "driving_cp");
					new vehicle_id = GetPVarInt(playerid, "exam_vehicle"),
						Float:vehicle_health;

					GetVehicleHealth(vehicle_id, vehicle_health);
					if(vehicle_health < 800)
					{
						SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Вы допустили слишком много ошибок, практический экзамен провален.");
						p_t_info[playerid][last_alt] = GetTickCount();
					}
					else
					{
						SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно сдали практический экзамен и получили "c_green"водительские права"c_white".");
						PlayerInfo[playerid][drive_lic] = 1;
						if(quest_status[playerid][1] == 1)
						{
							quest_status[playerid][1] = 2;
							update_quest_data(playerid);
							SendClientMessage(playerid, col_succes, "Задание успешно выполнено. Отправляйтесь к одному из помощников, чтобы получить своё вознаграждение.");
						}

						update_int_sql(playerid, "u_drive_lic", PlayerInfo[playerid][drive_lic]);
					}
					DeletePVar(playerid, "exam_vehicle");
					set_pos(playerid, 739.3827, -1414.3588, 1500.9509, 176.8004, 1, 1);
					DestroyVehicle(vehicle_id);
					DisablePlayerRaceCheckpoint(playerid);
					return 1;
				}
				SetPlayerRaceCheckpoint(playerid, 0, ds_checkpoints[ds_cp_number][0], ds_checkpoints[ds_cp_number][1], ds_checkpoints[ds_cp_number][2] -1, ds_checkpoints[ds_cp_number + 1][0], ds_checkpoints[ds_cp_number + 1][1], ds_checkpoints[ds_cp_number + 1][2], 4.0);
				job_ac_tick[playerid] = GetTickCount();
			}
		}
		return 1;
	}
	if(is_gps_used {playerid} == 1)
	{
		SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы достигли места назначения.");
   		DisablePlayerRaceCheckpoint(playerid);
	   	is_gps_used {playerid} = 0;
	   	return 1;
	}
	else if(is_gps_used {playerid} == 5)
	{
		if(veh_info[player_vehicle[playerid] -1][v_model] == 578)
		{
			DisablePlayerRaceCheckpoint(playerid);
			is_gps_used {playerid} = 0;
			show_dialog(playerid, d_delivery_buy, DIALOG_STYLE_INPUT, ""c_server"Закупка бензина", ""c_server"* "c_grey"Закупочная стоимость "c_server"1 л."c_grey" бензина составляет "c_server"5$\n\n"c_white"Введите количество бензина, которое желаете закупить:", "Принять", "Назад");
			return 1;
		}
		else if(veh_info[player_vehicle[playerid] -1][v_model] == 403)
		{
			if(GetVehicleTrailer(player_vehicle[playerid]) == 0) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Для начала нужно подцепить прицеп.");
			DisablePlayerRaceCheckpoint(playerid);
			is_gps_used {playerid} = 0;
			show_dialog(playerid, d_delivery_buy, DIALOG_STYLE_INPUT, ""c_server"Закупка бензина", ""c_server"* "c_grey"Закупочная стоимость "c_server"1 л."c_grey" бензина составляет "c_server"5$\n\n"c_white"Введите количество бензина, которое желаете закупить:", "Принять", "Назад");
			return 1;
		}
	}
	else if(is_gps_used {playerid} >= 20)
	{
		new query_string[60];
		format(query_string, sizeof query_string, "SELECT * FROM `businesses_orders` WHERE `bo_bid` = '%d'", is_gps_used {playerid} -20);
		mysql_tquery(sql_connection, query_string, "order_end_callback", "i", playerid);
		return 1;
	}
	else if(is_gps_used {playerid} >= 10)
	{
		new Float:v_zangle,
			vehicle_id = GetPlayerVehicleID(playerid);

		GetVehicleZAngle(vehicle_id, v_zangle);
		if(180 + 15 > v_zangle > 180 -15)
		{
			DisablePlayerRaceCheckpoint(playerid);
			is_gps_used {playerid} = 0;

			show_dialog(playerid, d_delivery_buy, DIALOG_STYLE_INPUT, ""c_server"Закупка товара", ""c_server"* "c_grey"Закупочная стоимость "c_server"1 кг."c_grey" товара составляет "c_server"5$\n\n"c_white"Введите количество товара, которое желаете закупить:", "Принять", "Назад");
			return 1;
		}
		else return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Нужно подъехать к стенду с коробками задом.");
	}
	new vehicle_id = GetPlayerVehicleID(playerid);

    if(StartRace == 2)
   	{
    	if(is_player_race_regged[playerid])
    	{
            if(vehicle_id == player_race_vehicle[playerid])
            {
    			new ch = player_race_cp[playerid];
    			player_race_cp[playerid] ++;
    			if(ch == (Race_Treck_Count_Checkpoint[RaceMap-1] -1))
    			{
    			    switch(RaceMap)
    			    {
    			        case 1: SetPlayerRaceCheckpoint(playerid, 1, Race_Treck_Checkpoint_0[ch][0], Race_Treck_Checkpoint_0[ch][1], Race_Treck_Checkpoint_0[ch][2], 0.0, 0.0, 0.0, 10.0);
						case 2: SetPlayerRaceCheckpoint(playerid, 1, Race_Treck_Checkpoint_1[ch][0], Race_Treck_Checkpoint_1[ch][1], Race_Treck_Checkpoint_1[ch][2], 0.0, 0.0, 0.0, 10.0);
						case 3: SetPlayerRaceCheckpoint(playerid, 1, Race_Treck_Checkpoint_2[ch][0], Race_Treck_Checkpoint_2[ch][1], Race_Treck_Checkpoint_2[ch][2], 0.0, 0.0, 0.0, 10.0);
						case 4: SetPlayerRaceCheckpoint(playerid, 1, Race_Treck_Checkpoint_3[ch][0], Race_Treck_Checkpoint_3[ch][1], Race_Treck_Checkpoint_3[ch][2], 0.0, 0.0, 0.0, 10.0);
						case 5: SetPlayerRaceCheckpoint(playerid, 1, Race_Treck_Checkpoint_4[ch][0], Race_Treck_Checkpoint_4[ch][1], Race_Treck_Checkpoint_4[ch][2], 0.0, 0.0, 0.0, 10.0);
						case 6: SetPlayerRaceCheckpoint(playerid, 1, Race_Treck_Checkpoint_5[ch][0], Race_Treck_Checkpoint_5[ch][1], Race_Treck_Checkpoint_5[ch][2], 0.0, 0.0, 0.0, 10.0);
						case 7: SetPlayerRaceCheckpoint(playerid, 1, Race_Treck_Checkpoint_6[ch][0], Race_Treck_Checkpoint_6[ch][1], Race_Treck_Checkpoint_6[ch][2], 0.0, 0.0, 0.0, 10.0);
						case 8: SetPlayerRaceCheckpoint(playerid, 1, Race_Treck_Checkpoint_7[ch][0], Race_Treck_Checkpoint_7[ch][1], Race_Treck_Checkpoint_7[ch][2], 0.0, 0.0, 0.0, 10.0);
						case 9: SetPlayerRaceCheckpoint(playerid, 1, Race_Treck_Checkpoint_8[ch][0], Race_Treck_Checkpoint_8[ch][1], Race_Treck_Checkpoint_8[ch][2], 0.0, 0.0, 0.0, 10.0);
					}
				}
				else if(ch == Race_Treck_Count_Checkpoint[RaceMap-1])
				{
				    is_player_race_regged[playerid] = player_race_cp[playerid] = 0;
	    			DestroyVehicle(player_race_vehicle[playerid]);
			    	player_race_vehicle[playerid] = 0;
					DisableRemoteVehicleCollisions(playerid, 0);
					set_pos(playerid, 1298.1658, -1360.8027, 35.8113, 21.7293, 0, 5);
					DisablePlayerRaceCheckpoint(playerid);
				    RaceCountWinner++;


					new text_str[98],
						pay_money = race_bank / RaceCountWinner;

					format(text_str, sizeof(text_str), ""c_yellow"Вы заняли %i место. Ваш приз составил: %i$", RaceCountWinner, pay_money);
				    SendClientMessage(playerid, col_gray, text_str);
					give_money(playerid, pay_money);
					insert_money_log(playerid, INVALID_PLAYER_ID, pay_money, "выигрыш гонки");
				}
    			else
    			{
    			    switch(RaceMap)
    			    {
    			        case 1:
    			        {
       						SetPlayerRaceCheckpoint(playerid, 0, Race_Treck_Checkpoint_0[ch][0], Race_Treck_Checkpoint_0[ch][1], Race_Treck_Checkpoint_0[ch][2], Race_Treck_Checkpoint_0[ch+1][0], Race_Treck_Checkpoint_0[ch+1][1], Race_Treck_Checkpoint_0[ch+1][2], 10.0);
						}
						case 2:
						{
       						SetPlayerRaceCheckpoint(playerid, 0, Race_Treck_Checkpoint_1[ch][0], Race_Treck_Checkpoint_1[ch][1], Race_Treck_Checkpoint_1[ch][2], Race_Treck_Checkpoint_1[ch+1][0], Race_Treck_Checkpoint_1[ch+1][1], Race_Treck_Checkpoint_1[ch+1][2], 10.0);
						}
						case 3:
						{
       						SetPlayerRaceCheckpoint(playerid, 0, Race_Treck_Checkpoint_2[ch][0], Race_Treck_Checkpoint_2[ch][1], Race_Treck_Checkpoint_2[ch][2], Race_Treck_Checkpoint_2[ch+1][0], Race_Treck_Checkpoint_2[ch+1][1], Race_Treck_Checkpoint_2[ch+1][2], 10.0);
						}
						case 4:
						{
       						SetPlayerRaceCheckpoint(playerid, 0, Race_Treck_Checkpoint_3[ch][0], Race_Treck_Checkpoint_3[ch][1], Race_Treck_Checkpoint_3[ch][2], Race_Treck_Checkpoint_3[ch+1][0], Race_Treck_Checkpoint_3[ch+1][1], Race_Treck_Checkpoint_3[ch+1][2], 10.0);
						}
						case 5:
						{
       						SetPlayerRaceCheckpoint(playerid, 0, Race_Treck_Checkpoint_4[ch][0], Race_Treck_Checkpoint_4[ch][1], Race_Treck_Checkpoint_4[ch][2], Race_Treck_Checkpoint_4[ch+1][0], Race_Treck_Checkpoint_4[ch+1][1], Race_Treck_Checkpoint_4[ch+1][2], 10.0);
						}
						case 6:
						{
       						SetPlayerRaceCheckpoint(playerid, 0, Race_Treck_Checkpoint_5[ch][0], Race_Treck_Checkpoint_5[ch][1], Race_Treck_Checkpoint_5[ch][2], Race_Treck_Checkpoint_5[ch+1][0], Race_Treck_Checkpoint_5[ch+1][1], Race_Treck_Checkpoint_5[ch+1][2], 10.0);
						}
						case 7:
						{
       						SetPlayerRaceCheckpoint(playerid, 0, Race_Treck_Checkpoint_6[ch][0], Race_Treck_Checkpoint_6[ch][1], Race_Treck_Checkpoint_6[ch][2], Race_Treck_Checkpoint_6[ch+1][0], Race_Treck_Checkpoint_6[ch+1][1], Race_Treck_Checkpoint_6[ch+1][2], 10.0);
						}
						case 8:
						{
       						SetPlayerRaceCheckpoint(playerid, 0, Race_Treck_Checkpoint_7[ch][0], Race_Treck_Checkpoint_7[ch][1], Race_Treck_Checkpoint_7[ch][2], Race_Treck_Checkpoint_7[ch+1][0], Race_Treck_Checkpoint_7[ch+1][1], Race_Treck_Checkpoint_7[ch+1][2], 10.0);
						}
						case 9:
						{
       						SetPlayerRaceCheckpoint(playerid, 0, Race_Treck_Checkpoint_8[ch][0], Race_Treck_Checkpoint_8[ch][1], Race_Treck_Checkpoint_8[ch][2], Race_Treck_Checkpoint_8[ch+1][0], Race_Treck_Checkpoint_8[ch+1][1], Race_Treck_Checkpoint_8[ch+1][2], 10.0);
						}
					}
				}
				return 1;
 			}
		}
	}


	if(PlayerInfo[playerid][job] == job_bus && player_rentcar[playerid] != INVALID_VEHICLE_ID && vehicle_id == player_rentcar[playerid])
	{
		DisablePlayerRaceCheckpoint(playerid);
		new pos = p_t_info[playerid][pBusPos];
		new route = p_t_info[playerid][pBusRoute];
		if(gBusCPs[route][pos][0] == gBusCPs[route][pos+1][0] && gBusCPs[route][pos][1] == gBusCPs[route][pos+1][1])
		{

			new routename[56];
			switch(route)
			{
				case 0: routename = "Лос-Сантос -Завод";
				case 1: routename = "Лос-Сантос -Лесопилка";
				case 2: routename = "Лос-Сантос -Шахта";
				case 3: routename = "Лос-Сантос -Автошкола";
				case 4: routename = "Лос-Сантос -Порт";
			}

			new _text_string[148];
			format(_text_string, sizeof(_text_string), "Автобус по маршруту %s отправляется через 10 секунд", routename);
			SendClientMessage(playerid, 0xB7C956FF, _text_string);
			foreach(new pl_id:streamed_players[playerid])
			{
				if(!IsPlayerInRangeOfPoint(pl_id, 35, p_t_info[playerid][p_pos][0], p_t_info[playerid][p_pos][1], p_t_info[playerid][p_pos][2])) continue;
				SendClientMessage(pl_id, 0xB7C956FF, _text_string);
			}
			SetTimerEx("BusStop",10000,false,"i",playerid);
			return 1;
		}
		switch(route)
		{
			case 0:
			{
				if(p_t_info[playerid][pBusPos] >= 48 && p_t_info[playerid][pBusPos]<= 52)
				{
					p_t_info[playerid][pBusPos] = 52;
				}
				else if(p_t_info[playerid][pBusPos] >= 90 && p_t_info[playerid][pBusPos]<= 94)
				{
					p_t_info[playerid][pBusPos] = 94;
				}
			}
			case 1:
			{
				if(p_t_info[playerid][pBusPos] >= 49 && p_t_info[playerid][pBusPos]<= 53)
				{
					p_t_info[playerid][pBusPos] = 53;
				}
				else if(p_t_info[playerid][pBusPos] >= 109 && p_t_info[playerid][pBusPos]<= 113)
				{
					p_t_info[playerid][pBusPos] = 113;
				}
			}
			case 2:
			{
				if(p_t_info[playerid][pBusPos] >= 49 && p_t_info[playerid][pBusPos]<= 53)
				{
					p_t_info[playerid][pBusPos] = 53;
				}
				else if(p_t_info[playerid][pBusPos] >= 102 && p_t_info[playerid][pBusPos]<= 106)
				{
					p_t_info[playerid][pBusPos] = 107;
				}
			}
			case 3:
			{
				if(p_t_info[playerid][pBusPos] >= 49 && p_t_info[playerid][pBusPos]<= 53)
				{
					p_t_info[playerid][pBusPos] = 53;
				}
				else if(p_t_info[playerid][pBusPos] >= 122 && p_t_info[playerid][pBusPos]<= 126)
				{
					p_t_info[playerid][pBusPos] = 126;
				}
			}
			case 4:
			{
				if(p_t_info[playerid][pBusPos] >= 10 && p_t_info[playerid][pBusPos]<= 14)
				{
					p_t_info[playerid][pBusPos] = 14;
				}
				else if(p_t_info[playerid][pBusPos] >= 130 && p_t_info[playerid][pBusPos]<= 134)
				{
					p_t_info[playerid][pBusPos] = 134;
				}
			}
		}
		if(gBusCPs[route][pos+1][0] == 0.0)
		{
			p_t_info[playerid][pBusPos] = 14; // = 0
			PlayerInfo[playerid][salary] += gBusSalary[route];

			if(quest_status[playerid][4] == 1)
			{
				quest_progress[playerid][4] += gBusSalary[route];
				if(quest_progress[playerid][4] > 15000)
				{
					quest_status[playerid][4] = 2;
					SendClientMessage(playerid, col_succes, "Задание успешно выполнено. Отправляйтесь к одному из помощников, чтобы получить своё вознаграждение.");
				}
				update_quest_data(playerid);
			}

			new _text_string[42];
			format(_text_string, sizeof(_text_string), "Заработано: %d$.", PlayerInfo[playerid][salary]);
			SendClientMessage(playerid, 0xB7C956FF, _text_string);

		}
		else
		{
			p_t_info[playerid][pBusPos] ++;
			if(p_t_info[playerid][pBusPos] == 48 && route == 0)
			{
				p_t_info[playerid][pBusPos] += random(5);
			}
			else if(p_t_info[playerid][pBusPos] == 90 && route == 0)
			{
				p_t_info[playerid][pBusPos] += random(5);
			}
			else if(p_t_info[playerid][pBusPos] == 49 &&(route == 1 || route == 2 || route == 3))
			{
				p_t_info[playerid][pBusPos] += random(5);
			}
			else if(p_t_info[playerid][pBusPos] == 102 && route == 1)
			{
				p_t_info[playerid][pBusPos] += random(5);
			}
			else if(p_t_info[playerid][pBusPos] == 109 && route == 2)
			{
				p_t_info[playerid][pBusPos] += random(5);
			}
			else if(p_t_info[playerid][pBusPos] == 122 && route == 3)
			{
				p_t_info[playerid][pBusPos] += random(5);
			}
			else if(p_t_info[playerid][pBusPos] == 10 && route == 4)
			{
				p_t_info[playerid][pBusPos] += random(5);
			}
			else if(p_t_info[playerid][pBusPos] == 130 && route == 4)
			{
				p_t_info[playerid][pBusPos] += random(5);
			}
		}

		job_ac_tick[playerid] = GetTickCount();

		SetNextBusCP(playerid,p_t_info[playerid][pBusPos]);
	}
	return 1;
}


public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	#if defined debug_mode
		printf("[DEBUG] [OnPlayerEnterDynamicCP] playerid:%d | checkpointid:%d", playerid, checkpointid);
	#endif

	return 1;
}

forward check_give_excuse_photographer(const playerid);
public check_give_excuse_photographer(const playerid)
{
	new rows = cache_num_rows();
	if(!rows)
	{
        SendClientMessage(playerid, 0xE4EE53FF, "Мы компенсируем затраченное время на поездку сюда. Вот, держите 2500$");
		static query[] = "INSERT INTO `excuse_for_photographer` (`nick`, `ip`) VALUES ('%e', '%e')";
		new fmt_query[sizeof(query) + MAX_PLAYER_NAME + 1 -2];
		mysql_format (sql_connection, fmt_query, sizeof fmt_query, query, PlayerInfo[playerid][name], p_t_info[playerid][p_ip]);
		mysql_tquery(sql_connection, fmt_query, "", "");
		insert_money_log (playerid, INVALID_PLAYER_ID, 2500, "Бонус за проеб с фотографом.");
		give_money(playerid, 2500);
		SetPVarInt(playerid, "excuse_photographer_pvar", GetTickCount());
	}
}


public OnVehicleSpawn(vehicleid)
{
    if(bicycles(vehicleid))
    {
    new engine,lights,alarm,doors,bonnet,boot,objective;
    veh_info[vehicleid][v_fuel] = 100;
    GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,
	boot,objective);
    return 1;
    }
	for(new j = 0; j < 4; j ++)veh_info[vehicleid -1][v_door_status][j] = 0;

	veh_info[vehicleid -1][v_health] = 1000.0;
	veh_info[vehicleid -1][v_driver] = INVALID_PLAYER_ID;

	veh_info[vehicleid -1][v_cargo] = 0;

	new engine, lights, alarm, doors, bonnet, boot, objective;

	if(veh_info[vehicleid -1][v_locked])
	{
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, engine, lights, alarm, true, bonnet, boot, objective);
	}

	SetVehiclePos(vehicleid, veh_info[vehicleid -1][v_pos][0],
								veh_info[vehicleid -1][v_pos][1],
								veh_info[vehicleid -1][v_pos][2]);
	SetVehicleZAngle(vehicleid, veh_info[vehicleid -1][v_pos][3]);
	ChangeVehicleColor(vehicleid, veh_info[vehicleid -1][v_color][0], veh_info[vehicleid -1][v_color][1]);
	if(veh_info[vehicleid -1][v_paint] != 3)
	{
		ChangeVehiclePaintjob(vehicleid, veh_info[vehicleid -1][v_paint]);
	}

	if(veh_info[vehicleid -1][v_int] != 0)LinkVehicleToInterior(vehicleid, veh_info[vehicleid -1][v_int]);
	if(veh_info[vehicleid -1][v_vw] != 0)SetVehicleVirtualWorld(vehicleid, veh_info[vehicleid -1][v_vw]);


	if(veh_info[vehicleid -1][v_cargo_object][0] != 0)
	{
		for(new j = 0; j < 3; j ++)
		{
			DestroyDynamicObject(veh_info[vehicleid -1][v_cargo_object][j]);
			veh_info[vehicleid -1][v_cargo_object][j] = 0;
		}
	}
	if(veh_info[vehicleid -1][v_type] == vehicle_type_player && veh_info[vehicleid -1][v_sell_price] == 0 && ! v_plane(vehicleid))
	{
		for(new j; j < MAX_NONPARKING_ZONES; j ++)
		{
			if(IsVehicleInQuad(veh_info[vehicleid -1][v_pos][0], veh_info[vehicleid -1][v_pos][1],
									non_parking_pos[j][0], non_parking_pos[j][1],
									non_parking_pos[j][2], non_parking_pos[j][3]) && veh_info[vehicleid -1][v_fine] == 0)
			{

				new query_string[156];

				format(query_string, sizeof(query_string),"UPDATE `users_vehicles` SET `v_fuel` = '%f',`v_millage` = '%f',`v_fine` = '1' WHERE `v_id` = '%d' LIMIT 1",
				veh_info[vehicleid -1][v_fuel],
				veh_info[vehicleid -1][v_millage],
				veh_info[vehicleid -1][v_id]);
				mysql_tquery(sql_connection, query_string, "", "");

				new playerid = -1;
				foreach(new i: logged_players)
				{
					if(veh_info[vehicleid -1][v_owner] == PlayerInfo[i][id])playerid = i;
				}
				Iter_Remove(player_vehicles[playerid], vehicleid);
				show_dialog(playerid, d_clearinfo, DIALOG_STYLE_MSGBOX, ""c_server"Информация", ""c_orange_red"ВНИМАНИЕ!\n\n"c_orange_red"ОДИН ИЗ ВАШИХ АВТОМОБИЛЕЙ НАХОДИТСЯ НА ШТРАФСТОЯНКЕ\n"c_server"Чтобы забрать используйте "c_white"'/gps > Прочее > Штрафстоянка'"c_server".", "Закрыть", "");

				veh_info[vehicleid -1][v_owner] = 0;
				veh_info[vehicleid -1][v_rank] = 0;
				veh_info[vehicleid -1][v_type] = 0;
				DestroyVehicle(vehicleid);

			}
		}

		for(new j = 0; j < 10; j ++)
		{
			if(veh_info[vehicleid -1][v_component][j] == 0) continue;
			AddVehicleComponent(veh_info[vehicleid -1][v_vehicle], veh_info[vehicleid -1][v_component][j]);
		}
	}
	if(veh_info[vehicleid -1][v_fine] > 0)veh_info[vehicleid -1][v_fine] = 0;

	if(v_velo(vehicleid))toggle_engine(0, vehicleid);

	if(GetVehicleModel(vehicleid) ==  450)
	{
		foreach(new i: logged_players)
		{
			if(player_trailer[i] != vehicleid) continue;
			trailer_count[vehicleid -1] = 0;
			DestroyVehicle(vehicleid);
			player_tload_time[i] = -1;
			SendClientMessage(i, -1, "Ваш груз был возвращён на базу.");
			if(player_leavearea_time[i] > 0)player_leavearea_time[i] = -1;
			if(GetPVarInt(i, "truck_waiting")> 0)
			{
				for(new j = 0; j < 3; j ++)
				{
					if(loading_playerid[j] == i)
					{
						loading_playerid[j] = INVALID_PLAYER_ID;
						DeletePVar(i, "truck_waiting");
					}
				}
			}
			for(new j = 0; j < 4; j ++)
			{
				PlayerTextDrawDestroy(i, td_db[i][j]);
				td_db[i][j] = PlayerText:-1;
			}
			player_trailer[i] = INVALID_VEHICLE_ID;
			break;
		}
	}
	if(GetVehicleModel(vehicleid) ==  450)
	{
		foreach(new i: logged_players)
		{
			if(player_trailer[i] != vehicleid) continue;
			give_money(i, trailer_count[vehicleid -1]* 9);
			insert_money_log(i, INVALID_PLAYER_ID, trailer_count[vehicleid -1]* 9, "страховка дб");

			trailer_count[vehicleid -1] = 0;
			DestroyVehicle(vehicleid);

			SendClientMessage(i, -1, "Ваш груз был уничтожен. Страховая возместила Вам часть ущерба.");

			if(GetPVarInt(i, "truck_waiting")> 0)
			{
				for(new j = 0; j < 3; j ++)
				{
					if(loading_playerid[j] == i)
					{
						loading_playerid[j] = INVALID_PLAYER_ID;
						KillTimer(loading_timer[j]);
						loading_timer[j] = -1;
						DestroyDynamic3DTextLabel(loading_text[j]);
						loading_text[j] = Text3D:-1;
						DeletePVar(i, "truck_waiting");
					}
				}
			}
			for(new j = 0; j < 4; j ++)
			{
				PlayerTextDrawDestroy(i, td_db[i][j]);
				td_db[i][j] = PlayerText:-1;
			}
			player_trailer[i] = INVALID_VEHICLE_ID;
			break;
		}
	}


	trailer_count[vehicleid -1] = 0;
	trailer_type[vehicleid -1] = -1;


	if(veh_info[vehicleid -1][v_type] == vehicle_type_server)
	{
		veh_info[vehicleid -1][v_fuel] = 60.0;
	}
	if(veh_info[vehicleid -1][v_type] == vehicle_type_job)
	{
		veh_info[vehicleid -1][v_locked] = false;
		GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(vehicleid, engine, lights, alarm, false, bonnet, boot, objective);
		veh_info[vehicleid -1][v_fuel] = 35.0;
		if(veh_info[vehicleid -1][v_owner] == job_forklift)veh_info[vehicleid -1][v_fuel] = 100.0;
		if(veh_info[vehicleid -1][v_model] == 462)
		{
			DestroyVehicle(vehicleid);
			foreach(new i: logged_players)
			{
				if(player_rentcar[i] == vehicleid)
				{
					player_rentcar[i] = INVALID_VEHICLE_ID;
					SendClientMessage(i, col_gray,""c_orange_red"* "c_grey"Арендованный транспорт был отбуксирован.");
					break;
				}
			}
			return 1;
		}
		if(veh_info[vehicleid -1][v_owner] == job_bus)
		{
			foreach(new i: logged_players)
			{
				if(player_rentcar[i] == vehicleid)
				{
					BusSpawn(i);
					player_rentcar[i] = INVALID_VEHICLE_ID;
					p_t_info [i][pBusRoute] = 0;
					p_t_info [i][pBusPos] = 0;
					p_t_info [i][pBusPrice] = 0;
					SendClientMessage(i, col_gray,""c_orange_red"* "c_grey"Арендованный транспорт был отбуксирован.");
					break;
				}
			}
		}


		else if(veh_info[vehicleid -1][v_owner] == job_delivery)
		{
			foreach(new i: logged_players)
			{
				if(player_rentcar[i] == vehicleid)
				{
					new _v_id = player_rentcar[i];
					player_rentcar[i] = INVALID_VEHICLE_ID;

					SetVehicleToRespawn(_v_id);

					DisablePlayerRaceCheckpoint(i);

					SendClientMessage(i, col_gray,""c_orange_red"* "c_grey"Арендованный транспорт был отбуксирован.");
					break;
				}
			}
		}
		else if(veh_info[vehicleid -1][v_owner] == job_fuel_delivery)
		{
			foreach(new i: logged_players)
			{
				if(player_rentcar[i] == vehicleid)
				{
					new _v_id = player_rentcar[i];
					player_rentcar[i] = INVALID_VEHICLE_ID;

					if(GetVehicleTrailer(_v_id)!= 0)SetVehicleToRespawn(GetVehicleTrailer(_v_id));
					SetVehicleToRespawn(_v_id);

					DisablePlayerRaceCheckpoint(i);

					SendClientMessage(i, col_gray,""c_orange_red"* "c_grey"Арендованный транспорт был отбуксирован.");
					break;
				}
			}
		}
		else if(veh_info[vehicleid -1][v_owner] == job_trucker)
		{
			foreach(new i: logged_players)
			{
				if(player_rentcar[i] == vehicleid)
				{
					new _v_id = player_rentcar[i];
					player_rentcar[i] = INVALID_VEHICLE_ID;

					if(player_trailer[i] != INVALID_VEHICLE_ID)
					{
						trailer_count[vehicleid -1] = 0;
						DestroyVehicle(player_trailer[i]);

						SendClientMessage(i, col_gray, ""c_orange_red"* "c_grey"Вы не смогли доставить груз, затраты не будут возмещены.");
						player_tload_time[i] = -1;

						if(GetPVarInt(i, "truck_waiting")> 0)
						{
							for(new j = 0; j < 3; j ++)
							{
								if(loading_playerid[j] == i)
								{
									loading_playerid[j] = INVALID_PLAYER_ID;
									KillTimer(loading_timer[j]);
									loading_timer[j] = -1;
									DestroyDynamic3DTextLabel(loading_text[j]);
									loading_text[j] = Text3D:-1;
									DeletePVar(i, "truck_waiting");
								}
							}
						}
						for(new j = 0; j < 4; j ++)
						{
							PlayerTextDrawDestroy(i, td_db[i][j]);
							td_db[i][j] = PlayerText:-1;
						}
						player_trailer[i] = INVALID_VEHICLE_ID;
					}
					SetVehicleToRespawn(_v_id);

					DisablePlayerRaceCheckpoint(i);

					SendClientMessage(i, col_gray,""c_orange_red"* "c_grey"Арендованный транспорт был отбуксирован.");
					break;
				}
			}
		}
		else if(veh_info[vehicleid -1][v_owner] == job_taxi)
		{
			foreach(new i: logged_players)
			{
				if(player_rentcar[i] == vehicleid)
				{
					if(p_t_info [i][pTaxi3DText] != Text3D:INVALID_3DTEXT_ID) DestroyDynamic3DTextLabel(p_t_info [i][pTaxi3DText]);
					player_rentcar[i] = INVALID_VEHICLE_ID;
					p_t_info [i][pTaxiPrice] = 0;
					p_t_info [i][pTaxiTurn][0] = INVALID_PLAYER_ID;
					p_t_info [i][pTaxiTurn][1] = INVALID_PLAYER_ID;
					SendClientMessage(i, col_gray,""c_orange_red"* "c_grey"Арендованный транспорт был отбуксирован.");
					break;
				}
			}
		}
		else if(veh_info[vehicleid -1][v_owner] == job_mechanic)
		{
			foreach(new i: logged_players)
			{
				if(player_rentcar[i] == vehicleid)
				{
					new _v_id = player_rentcar[i];
					player_rentcar[i] = INVALID_VEHICLE_ID;

					SetVehicleToRespawn(_v_id);
					p_t_info[i][pTaxiPrice] = 0;
					if(IsValid3DTextLabel(PlayerMehText[i])) DestroyDynamic3DTextLabel (PlayerMehText[i]);
					PlayerMehText[i] = Text3D:INVALID_3DTEXT_ID;
					DeletePVar(i, "MehName");
					DeletePVar(i, "toplivo");
					SendClientMessage(i, col_gray,""c_orange_red"* "c_grey"Арендованный транспорт был отбуксирован.");
					break;
				}
			}
		}
		else if(veh_info[vehicleid -1][v_owner] == job_forklift)
		{
			foreach(new i: logged_players)
			{
				if(player_rentcar[i] == vehicleid)
				{
					new _v_id = player_rentcar[i];
					player_rentcar[i] = INVALID_VEHICLE_ID;



					SetVehicleToRespawn(_v_id);

					if(GetPVarInt(i, "fork_object"))
					{
						DestroyDynamicObject(GetPVarInt(i, "fork_object"));
						DeletePVar(i, "fork_object");
					}

					PlayerTextDrawDestroy(i, forklift_ptd[i]);
					forklift_ptd[i] = PlayerText:-1;
					forklift_time[i] = 0;
					PlayerInfo[i][timejob] = job_none;

					SendClientMessage(i, col_gray,""c_orange_red"* "c_grey"Арендованный транспорт был отбуксирован.");
					break;
				}
			}
		}
		else
		{
			foreach(new i: logged_players)
			{
				if(player_rentcar[i] == vehicleid)
				{
					SendClientMessage(i, col_gray,""c_orange_red"* "c_grey"Арендованный транспорт был отбуксирован.");
					break;
				}
			}
		}
	}
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	if(GetVehicleModel(vehicleid) ==  450)
	{
		foreach(new i: logged_players)
		{
			if(player_trailer[i] != vehicleid) continue;
			give_money(i, trailer_count[vehicleid -1]* 9);
			insert_money_log(i, INVALID_PLAYER_ID, trailer_count[vehicleid -1]* 9, "страховка дб");

			trailer_count[vehicleid -1] = 0;
			DestroyVehicle(vehicleid);

			SendClientMessage(i, -1, "Ваш груз был уничтожен. Страховая возместила Вам часть ущерба.");

			if(GetPVarInt(i, "truck_waiting")> 0)
			{
				for(new j = 0; j < 3; j ++)
				{
					if(loading_playerid[j] == i)
					{
						loading_playerid[j] = INVALID_PLAYER_ID;
						KillTimer(loading_timer[j]);
						loading_timer[j] = -1;
						DestroyDynamic3DTextLabel(loading_text[j]);
						loading_text[j] = Text3D:-1;
						DeletePVar(i, "truck_waiting");
					}
				}
			}
			for(new j = 0; j < 4; j ++)
			{
				PlayerTextDrawDestroy(i, td_db[i][j]);
				td_db[i][j] = PlayerText:-1;
			}
			player_trailer[i] = INVALID_VEHICLE_ID;
			break;
		}
	}
	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	if(GetPVarInt(playerid, "tuning_opened") ==  0) return 1;

	return 1;
}


public OnVehicleStreamIn(vehicleid, forplayerid)
{
	Iter_Add(streamed_vehicles[forplayerid], vehicleid);
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	Iter_Remove(streamed_vehicles[forplayerid], vehicleid);
	return 1;
}

public OnVehicleSirenStateChange(playerid, vehicleid, newstate)
{
	return 1;
}

callback:check_player_registered(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	Streamer_Update(playerid);
	
	set_world(playerid, playerid + 1000);

	InterpolateCameraPos(playerid, 232.0351, -2018.0649, 34.6629, 320.5886, -2025.9048, 21.3491, 25000, CAMERA_MOVE);
	InterpolateCameraLookAt(playerid, 231.3283, -2017.3594, 34.6029, 321.5874, -2025.9340, 21.2741, 25000, CAMERA_MOVE);
	
	if(rows)
	{
		new query_string[156];
		format(query_string, sizeof query_string, "SELECT * FROM `users_bans` WHERE `u_b_name` = '%s' AND `u_b_date` > NOW()LIMIT 1", PlayerInfo[playerid][name]);
		mysql_tquery(sql_connection, query_string, "check_player_banned", "i", playerid);
	}
	else if(!rows)
		show_register(playerid);
		
	return 1;
}


callback: check_player_banned(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		global_string[0] = EOS;
		new date_b[20], reason[64], old_date[20], admin_name[MAX_PLAYER_NAME], ub_days;
		cache_get_field_content(0, "u_b_date", date_b, sql_connection, strlen(date_b));
		cache_get_field_content(0, "u_b_admin", admin_name, sql_connection, strlen(admin_name));
		cache_get_field_content(0, "u_b_reason", reason, sql_connection, strlen(reason));
		cache_get_field_content(0, "u_b_ndate", old_date, sql_connection, strlen(old_date));

		ub_days = cache_get_field_content_int(0, "u_b_days", sql_connection);

		format(global_string, sizeof global_string, ""c_orange_red"Ваш аккаунт был заблокирован, за нарушение правил сервера.\n\n"c_grey" * Пожалуйста, сделайте скриншот данного окна "c_white"(F8),\n"c_grey"   если вы не согласны с наказанием и оставьте жалобу на форуме.\n\n"c_server"* "c_grey"Ваш ник: "c_white"%s.\n"c_server"* "c_grey"Ник администратора: "c_white"%s.\n"c_server"* "c_grey"Дата блокировки: "c_white"%s.\n"c_server"* "c_grey"Дата разблокировки: "c_white"%s (%d дней)\n"c_server"* "c_grey"Причина: "c_white"%s\n",
		PlayerInfo[playerid][name], admin_name, old_date, date_b, ub_days, reason);
		show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX,""c_server"Рнформация о блокировке", global_string, "Выйти", "");
		kick_player(playerid);
	}
	else
	{
		show_login(playerid);
		if(!is_ip_white_list(p_t_info[playerid][p_ip]))SetPVarInt(playerid, "login_timer", _:SetTimerEx("login_timer", 60000, false, "i", playerid));
	}
	return 1;
}


callback: login_timer(playerid)
{
	show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX,""c_orange_red"Соединение разорвано", ""c_white"Вы были кикнуты!\nПричина: "c_orange_red"слишком долгая авторизация"c_white".\nВведите "c_orange_red"/q","Закрыть", "");
	kick_player(playerid);
	return 1;
}


callback: load_user(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
	    if(GetPVarInt(playerid, "Autorization") == 1) clear_td_autorization(playerid);
	
		PlayerInfo[playerid][id] = cache_get_field_content_int(0, "u_id", sql_connection);

		PlayerInfo[playerid][level] = cache_get_field_content_int(0, "u_level", sql_connection);
		PlayerInfo[playerid][exp] = cache_get_field_content_int(0, "u_exp", sql_connection);
		PlayerInfo[playerid][age] = cache_get_field_content_int(0, "u_age", sql_connection);


		PlayerInfo[playerid][skin] = cache_get_field_content_int(0, "u_skin", sql_connection);
		PlayerInfo[playerid][org_skin] = cache_get_field_content_int(0, "u_org_skin", sql_connection);
		PlayerInfo[playerid][money] = cache_get_field_content_int(0, "u_money", sql_connection);
		PlayerInfo[playerid][bank] = cache_get_field_content_int(0, "u_bank", sql_connection);
		PlayerInfo[playerid][gender] = cache_get_field_content_int(0, "u_gender", sql_connection);
		PlayerInfo[playerid][mute] = cache_get_field_content_int(0, "u_mute", sql_connection);
		PlayerInfo[playerid][warn] = cache_get_field_content_int(0, "u_warn", sql_connection);

		PlayerInfo[playerid][house] = cache_get_field_content_int(0, "u_house", sql_connection);
		PlayerInfo[playerid][rent_house] = cache_get_field_content_int(0, "u_renthouse", sql_connection);
		PlayerInfo[playerid][business] = cache_get_field_content_int(0, "u_business", sql_connection);
		
		PlayerInfo[playerid][load_textures] = cache_get_field_content_int(0, "u_load_textures", sql_connection);
		
		PlayerInfo[playerid][island] = cache_get_field_content_int(0, "u_island", sql_connection);

		PlayerInfo[playerid][member] = cache_get_field_content_int(0, "u_member", sql_connection);
		PlayerInfo[playerid][leader] = cache_get_field_content_int(0, "u_leader", sql_connection);
		PlayerInfo[playerid][rank] = cache_get_field_content_int(0, "u_rank", sql_connection);

		PlayerInfo[playerid][jailed] = cache_get_field_content_int(0, "u_jailed", sql_connection);
		PlayerInfo[playerid][jail] = cache_get_field_content_int(0, "u_jail", sql_connection);
		PlayerInfo[playerid][bail] = cache_get_field_content_int(0, "u_bail", sql_connection);
		PlayerInfo[playerid][wanted] = cache_get_field_content_int(0, "u_wanted", sql_connection);

		PlayerInfo[playerid][vip] = cache_get_field_content_int(0, "u_vip", sql_connection);
		PlayerInfo[playerid][walkstyle] = cache_get_field_content_int(0, "u_walkstyle", sql_connection);
		PlayerInfo[playerid][textstyle] = cache_get_field_content_int(0, "u_textstyle", sql_connection);
		PlayerInfo[playerid][hospital] = cache_get_field_content_int(0, "u_hospital", sql_connection);
		cache_get_field_content(0, "u_googleauth", PlayerInfo[playerid][google_auth], sql_connection, 18);
		PlayerInfo[playerid][google_auth_status] = cache_get_field_content_int(0, "u_googleauth_status", sql_connection);

		if(PlayerInfo[playerid][wanted] > 0)
			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][wanted]);

        PlayerInfo[playerid][phone_selected] = cache_get_field_content_int(0, "u_phone", sql_connection);
		PlayerInfo[playerid][number] = cache_get_field_content_int(0, "u_number", sql_connection);
		PlayerInfo[playerid][phone_balance] = cache_get_field_content_int(0, "u_phohe_balance", sql_connection);

		PlayerInfo[playerid][job] = cache_get_field_content_int(0, "u_job", sql_connection);
		PlayerInfo[playerid][salary] = cache_get_field_content_int(0, "u_salary", sql_connection);
		cache_get_field_content(0, "u_ip_registration", p_t_info[playerid][p_reg_ip], sql_connection, 16);

		PlayerInfo[playerid][vote] = cache_get_field_content_int(0, "u_vote", sql_connection);

		new sscanf_delimit[68];
		cache_get_field_content(0, "u_skills", sscanf_delimit, sql_connection, 36);
		sscanf(sscanf_delimit, "p<|>ddddddd", PlayerInfo[playerid][gun_skills][0], PlayerInfo[playerid][gun_skills][1], PlayerInfo[playerid][gun_skills][2],
		PlayerInfo[playerid][gun_skills][3], PlayerInfo[playerid][gun_skills][4], PlayerInfo[playerid][gun_skills][5], PlayerInfo[playerid][gun_skills][6]);

		PlayerInfo[playerid][radio] = cache_get_field_content_int(0, "u_radio", sql_connection);

		PlayerInfo[playerid][drive_lic] = cache_get_field_content_int(0, "u_drive_lic", sql_connection);
		PlayerInfo[playerid][boat_lic] = cache_get_field_content_int(0, "u_boat_lic", sql_connection);
		PlayerInfo[playerid][fly_lic] = cache_get_field_content_int(0, "u_fly_lic", sql_connection);
		PlayerInfo[playerid][gun_lic] = cache_get_field_content_int(0, "u_gun_lic", sql_connection);

		PlayerInfo[playerid][crim_guns] = cache_get_field_content_int(0, "u_guns", sql_connection);
		PlayerInfo[playerid][crim_ammo] = cache_get_field_content_int(0, "u_ammo", sql_connection);
		PlayerInfo[playerid][drugs] = cache_get_field_content_int(0, "u_drugs", sql_connection);
		PlayerInfo[playerid][seed] = cache_get_field_content_int(0, "u_seed", sql_connection);


		PlayerInfo[playerid][truck_skill] = cache_get_field_content_int(0, "u_tskill", sql_connection);
		PlayerInfo[playerid][hunger] = cache_get_field_content_int(0, "u_hunger", sql_connection);
		PlayerInfo[playerid][hunger_immune] = cache_get_field_content_int(0, "u_hungerimmune", sql_connection);

		cache_get_field_content(0, "u_tempskin", sscanf_delimit, sql_connection, 36);
		sscanf(sscanf_delimit, "p<|>ddddd", PlayerInfo[playerid][temp_skin][0], PlayerInfo[playerid][temp_skin][1], PlayerInfo[playerid][temp_skin][2],
		PlayerInfo[playerid][temp_skin][3], PlayerInfo[playerid][temp_skin][4]);


		PlayerInfo[playerid][direct] = cache_get_field_content_int(0, "u_direct", sql_connection);
		PlayerInfo[playerid][bandage] = cache_get_field_content_int(0, "u_bandage", sql_connection);
		PlayerInfo[playerid][schiene] = cache_get_field_content_int(0, "u_schiene", sql_connection);
		PlayerInfo[playerid][aspirin] = cache_get_field_content_int(0, "u_aspirin", sql_connection);
		PlayerInfo[playerid][morphine] = cache_get_field_content_int(0, "u_morphine", sql_connection);
		PlayerInfo[playerid][adrenalin] = cache_get_field_content_int(0, "u_adrenalin", sql_connection);


		PlayerInfo[playerid][aidkit] = cache_get_field_content_int(0, "u_aidkit", sql_connection);
		PlayerInfo[playerid][repairkit] = cache_get_field_content_int(0, "u_repairkit", sql_connection);
		PlayerInfo[playerid][gps_tracker] = cache_get_field_content_int(0, "u_gps_tracker", sql_connection);
		PlayerInfo[playerid][mask] = cache_get_field_content_int(0, "u_mask", sql_connection);
		PlayerInfo[playerid][rope] = cache_get_field_content_int(0, "u_rope", sql_connection);
		PlayerInfo[playerid][canister] = cache_get_field_content_int(0, "u_canister", sql_connection);

		PlayerInfo[playerid][graph_code][0] = cache_get_field_content_int(0, "u_graph_code_status", sql_connection);
		PlayerInfo[playerid][graph_code][1] = cache_get_field_content_int(0, "u_graph_code", sql_connection);

		PlayerInfo[playerid][vk_id][0] = cache_get_field_content_int(0, "u_vk_id_status", sql_connection);
		PlayerInfo[playerid][vk_id][1] = cache_get_field_content_int(0, "u_vk_id", sql_connection);

		PlayerInfo[playerid][fight_skill] = cache_get_field_content_int(0, "u_fight_skill", sql_connection);
		PlayerInfo[playerid][fight_style] = cache_get_field_content_int(0, "u_fight_style", sql_connection);

		PlayerInfo[playerid][cellar] = cache_get_field_content_int(0, "u_cellar", sql_connection);
		switch(PlayerInfo[playerid][fight_style])
		{
			case 5:SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
			case 6:SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
			case 7:SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
		}


		PlayerInfo[playerid][hour_played] = cache_get_field_content_int(0, "u_hour_played", sql_connection);
		PlayerInfo[playerid][tax] = cache_get_field_content_int(0, "u_tax", sql_connection);

		PlayerInfo[playerid][family] = cache_get_field_content_int(0, "u_family", sql_connection);
		PlayerInfo[playerid][donate] = cache_get_field_content_int(0, "u_donate", sql_connection);

		if(PlayerInfo[playerid][family] != 0)
		{
			new text_str[102];
			format(text_str, 102, "%s "c_white"Family", family_info[PlayerInfo[playerid][family] -1][fam_name]);
			PlayerInfo[playerid][family_text] = CreateDynamic3DTextLabel(text_str, col_white, 0.0, 0.0, 0.0, 12.0, playerid, INVALID_VEHICLE_ID, 1);
		}

		PlayerInfo[playerid][family_rang] = cache_get_field_content_int(0, "u_family_rank", sql_connection);
		PlayerInfo[playerid][fam_mute] = cache_get_field_content_int(0, "u_family_mute", sql_connection);

		PlayerInfo[playerid][f_warning] = cache_get_field_content_int(0, "u_f_warning", sql_connection);


		cache_get_field_content(0, "u_settings", sscanf_delimit, sql_connection, 36);
		sscanf(sscanf_delimit, "p<|>dddd", PlayerInfo[playerid][settings][0], PlayerInfo[playerid][settings][1],
		PlayerInfo[playerid][settings][2],	PlayerInfo[playerid][settings][3]);

		cache_get_field_content(0, "u_enhancements", sscanf_delimit, sql_connection, 36);
		sscanf(sscanf_delimit, "p<|>dddd", PlayerInfo[playerid][enhancement][0], PlayerInfo[playerid][enhancement][1],
		PlayerInfo[playerid][enhancement][2], PlayerInfo[playerid][enhancement][3]);

		cache_get_field_content(0, "u_accessories", sscanf_delimit, sql_connection, 68);
		sscanf(sscanf_delimit, "p<|>dddddddd", PlayerInfo[playerid][accessories][0], PlayerInfo[playerid][accessories][1], PlayerInfo[playerid][accessories][2],
		PlayerInfo[playerid][accessories][3], PlayerInfo[playerid][accessories][4], PlayerInfo[playerid][accessories][5], PlayerInfo[playerid][accessories][6],
		PlayerInfo[playerid][accessories][7]);
		cache_get_field_content(0, "u_accessories_used", sscanf_delimit, sql_connection, 68);
		sscanf(sscanf_delimit, "p<|>dddddddd", PlayerInfo[playerid][accessories_used][0], PlayerInfo[playerid][accessories_used][1], PlayerInfo[playerid][accessories_used][2],
		PlayerInfo[playerid][accessories_used][3], PlayerInfo[playerid][accessories_used][4], PlayerInfo[playerid][accessories_used][5], PlayerInfo[playerid][accessories_used][6],
		PlayerInfo[playerid][accessories_used][7]);

		PlayerInfo[playerid][promo_used] = cache_get_field_content_int(0, "u_promo", sql_connection);
		PlayerInfo[playerid][promocode_money] = cache_get_field_content_int(0, "u_promomoney", sql_connection);

		PlayerInfo[playerid][spawnchange] = cache_get_field_content_int(0, "u_spawnchange", sql_connection);
		PlayerInfo[playerid][max_veh] = cache_get_field_content_int(0, "u_maxveh", sql_connection);

		PlayerInfo[playerid][tax_donate] = cache_get_field_content_int(0, "u_donatetax", sql_connection);
		PlayerInfo[playerid][donate_roulette] = cache_get_field_content_int(0, "u_droulette", sql_connection);

		PlayerInfo[playerid][f_mute] = cache_get_field_content_int(0, "u_fmute", sql_connection);


		PlayerInfo[playerid][promo_used_today] = cache_get_field_content_int(0, "u_promo_today", sql_connection);

		cache_get_field_content(0, "u_newbiejob", sscanf_delimit, sql_connection, 32);
		sscanf(sscanf_delimit, "p<|>dddd", PlayerInfo[playerid][newbie_job_skill][0], PlayerInfo[playerid][newbie_job_skill][1], PlayerInfo[playerid][newbie_job_skill][2], PlayerInfo[playerid][newbie_job_skill][3]);

		cache_get_field_content(0, "u_quest_status", sscanf_delimit, 68);
		sscanf(sscanf_delimit, "p<|>dddddddd",
		quest_status[playerid][0],
		quest_status[playerid][1],
		quest_status[playerid][2],
		quest_status[playerid][3],
		quest_status[playerid][4],
		quest_status[playerid][5],
		quest_status[playerid][6],
		quest_status[playerid][7]);

		cache_get_field_content(0, "u_quest_progress", sscanf_delimit, 68);
		sscanf(sscanf_delimit, "p<|>dddddddd",
		quest_progress[playerid][0],
		quest_progress[playerid][1],
		quest_progress[playerid][2],
		quest_progress[playerid][3],
		quest_progress[playerid][4],
		quest_progress[playerid][5],
		quest_progress[playerid][6],
		quest_progress[playerid][7]);

		set_health(playerid, 100);
		SetSpawnInfo(playerid, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);

		
		p_t_info[playerid][p_logged] = true;
		Iter_Add(logged_players, playerid);

        if(PlayerInfo[playerid][family])
        {
            new familyid = PlayerInfo[playerid][family];
            Iter_Add(family_players[familyid], playerid);

            if(Iter_Count(family_players[familyid]) == 1)
            {
                if(family_info[familyid -1][fam_house])
                {
                    if(family_cars[familyid] == 0)
                    {
                        new tquery_string[128];
                        format(tquery_string, sizeof(tquery_string), "SELECT * FROM `family_vehicles` WHERE `sv_owner`='%d' LIMIT %d", familyid, family_info[familyid -1][fam_max_car]);
                        mysql_tquery(sql_connection, tquery_string, "load_family_vehicles", "");
                    }
                    family_cars[familyid] = 1;
                }
            }
        }
		
		KillTimer(GetPVarInt(playerid, "login_timer"));
		DeletePVar(playerid, "login_timer");

       /* new bool:is_null = false;
		cache_is_value_name_null(0, "u_offmsg_1", is_null);
		if(!is_null)
		{
			new query[96];
			format(query, sizeof query,  "SELECT SUBSTR(u_offmsg_1, 1, POSITION(';' IN u_offmsg_1)-1) FROM users WHERE u_id = %d", PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, query, "OfflineMessages", "d", playerid);
		}*/

		for(new i = 0; i < gz_count; i ++)
		{
			GangZoneShowForPlayer(playerid, gz_info[i][gz_created], GetGangZoneColor(gz_info[i][gz_owner]));
		}
		if(mw_gangzone != -1)GangZoneShowForPlayer(playerid, mw_gangzone, f_info[mw_owner -1][f_radar_color]);

		if(!GetPVarInt(playerid, "first_entrance"))
		{
			TogglePlayerSpectating(playerid, false);

			new sql_string[208];
			mysql_format(sql_connection, sql_string, sizeof(sql_string), "INSERT INTO `users_history` (`uh_user`,`uh_date`,`uh_ip`) VALUES ('%d',NOW(),'%s')",
			PlayerInfo[playerid][id], p_t_info[playerid][p_ip]);
			mysql_tquery(sql_connection, sql_string);

			format(sql_string, sizeof sql_string, "SELECT * FROM `users_vehicles` WHERE `v_owner` = '%d' AND `v_sell_price`=0 AND `v_fine`='0' LIMIT 5", PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, sql_string, "load_player_vehicles", "i", playerid);


			if(PlayerInfo[playerid][vk_id][1] != 0)
			{
				if(PlayerInfo[playerid][vk_id][0] == 1)
				{
					new vk_code = RandomEx(10000, 99999);
					vk_checking {playerid} = 1;

					mysql_format(sql_connection, sql_string, sizeof(sql_string), "INSERT INTO `messages`(`create_date`,`vk_id`,`priority`,`text`) VALUES (NOW(),'%d','1','Код авторизации на Elive Role Play: %d | Подключаемый ip: %s')",
					PlayerInfo[playerid][vk_id][1], vk_code, p_t_info[playerid][p_ip]);
					mysql_tquery(sql_connection, sql_string);

					format(sql_string, sizeof(sql_string), "UPDATE `users` SET `u_vk_code` = '%d' WHERE `u_id` = '%d' LIMIT 1",
					vk_code, PlayerInfo[playerid][id]);
					mysql_tquery(sql_connection, sql_string);


					show_dialog(playerid, d_vk_entrance, DIALOG_STYLE_INPUT, ""c_server"Код безопасности", ""c_white"Введите код безопасности, который был отправлен Вам Вконтакте:", "Войти", "Отмена");
				}
				else if(PlayerInfo[playerid][vk_id][0] == 2)
				{
					new last_ip[16];
					cache_get_field_content(0, "u_last_ip", last_ip, sql_connection, 16);
					if(!GetString(last_ip, p_t_info[playerid][p_ip]))
					{
						new vk_code = RandomEx(10000, 99999);
						vk_checking {playerid} = 1;
						mysql_format(sql_connection, sql_string, sizeof(sql_string), "INSERT INTO `messages`(`create_date`,`vk_id`,`priority`,`text`) VALUES (NOW(),'%d','1','Код авторизации на Elive Role Play: %d | Подключаемый ip: %s')",
						PlayerInfo[playerid][vk_id][1], vk_code, p_t_info[playerid][p_ip]);
						mysql_tquery(sql_connection, sql_string);

						format(sql_string, sizeof(sql_string), "UPDATE `users` SET `u_vk_code` = '%d' WHERE `u_id` = '%d' LIMIT 1",
						vk_code, PlayerInfo[playerid][id]);
						mysql_tquery(sql_connection, sql_string);

						show_dialog(playerid, d_vk_entrance, DIALOG_STYLE_INPUT, ""c_server"Код безопасности", ""c_white"Введите код безопасности, который был отправлен Вам Вконтакте:", "Войти", "Отмена");
					}
					else
					{
					if(PlayerInfo[playerid][google_auth_status] == 1)
					{
						google_checking {playerid} = 1;
						show_dialog(playerid, d_googleauth_entrance, DIALOG_STYLE_INPUT, ""c_server"Google Auth", ""c_white"Введите код из приложения:", "Вход", "Выйти");
					}
					else
					{
							SendClientMessage(playerid, col_white, !""scm_info"Вы успешно авторизовались. Желаем приятной игры на "c_server"Elive Role Play.");

							format(sql_string, sizeof sql_string, "SELECT * FROM `debtor_message` WHERE `dm_dest` = '%d' LIMIT 1", PlayerInfo[playerid][id]);
							mysql_tquery(sql_connection, sql_string, "load_debtor_messages", "i", playerid);
						}
					}
				}
			}
			else
			{
				if(PlayerInfo[playerid][google_auth_status] == 1)
				{
					google_checking {playerid} = 1;
					show_dialog(playerid, d_googleauth_entrance, DIALOG_STYLE_INPUT, ""c_server"Google Auth", ""c_white"Введите код из приложения:", "Вход", "Выйти");
				}
				else
				{
					SendClientMessage(playerid, col_white, !""scm_info"Вы успешно авторизовались. Желаем приятной игры на "c_server"Elive Role Play.");

					format(sql_string, sizeof sql_string, "SELECT * FROM `debtor_message` WHERE `dm_dest` = '%d' LIMIT 1", PlayerInfo[playerid][id]);
					mysql_tquery(sql_connection, sql_string, "load_debtor_messages", "i", playerid);
				}
			}
		}
		else
		{
			DeletePVar(playerid, "first_entrance");

			reg_info[playerid][reg_password][0] = EOS;
			reg_info[playerid][reg_referal][0] = EOS;
			reg_info[playerid][reg_email][0] = EOS;
			reg_info[playerid][reg_gender] = 0;
			reg_info[playerid][reg_national] = 0;
			reg_info[playerid][reg_age] = 0;


			PlayerInfo[playerid][temp_skin][0] = reg_info[playerid][reg_skin];

			new _query[126];
			format(_query, sizeof(_query), "UPDATE `users` SET `u_tempskin`='%d|%d|%d|%d|%d' WHERE `u_name` = '%s' LIMIT 1",
			PlayerInfo[playerid][temp_skin][0], PlayerInfo[playerid][temp_skin][1], PlayerInfo[playerid][temp_skin][2],
			PlayerInfo[playerid][temp_skin][3], PlayerInfo[playerid][temp_skin][4], PlayerInfo[playerid][name]);
			mysql_tquery(sql_connection, _query);


			reg_info[playerid][reg_skin] = 0;

			SendClientMessage(playerid, col_white, !""scm_sucess"Поздравляем Вас с успешной регистрацией на "c_server"Elive Role Play"c_white".");
			SendClientMessage(playerid, col_white, !""scm_info"Для быстрого взаимодействия с игроками используйте "c_server"'ПКМ + Y'"c_white".");

			SpawnPlayer(playerid);
		}

		load_phonebook(playerid);

		CancelSelectTextDraw(playerid);
		SetPlayerColor(playerid, 0xFFFFFF80); // col_white
		ResetPlayerMoney(playerid);
		GivePlayerMoney(playerid, PlayerInfo[playerid][money]);
		update_int_sql(playerid, "u_online", 1);
		PlayerInfo[playerid][main_timer] = SetTimerEx("player_timer", 1000, 1, "i", playerid);
		return 1;
	}
	else
	{
		if(GetPVarInt(playerid, "wrong_password") ==  4)
		{
			show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX,!""scm_dialog"Соединение разорвано",!""c_white"Вы превысили максимально допустимое колличество попыток ввода пароля!",!"ОК", !"");
			kick_player(playerid);
			return 1;
		}
		SetPVarInt(playerid, "wrong_password", GetPVarInt(playerid, "wrong_password")+ 1);
		new dialog_string[75];
		format(dialog_string, sizeof dialog_string, ""c_orange_red"-Вы ввели неверный пароль!\n\n"c_grey"Осталось попыток: "c_orange_red"%d", 4 -GetPVarInt(playerid, "wrong_password"));
		show_dialog(playerid, d_bad_login, DIALOG_STYLE_MSGBOX, !""scm_dialog"Ошибка авторизации", dialog_string, !"Назад", !"");
	}
	return 1;
}

callback: CheckExitsUsersPhotographer(const playerid, const id_quest_photographer)
{
	new rows = cache_num_rows();
	if(rows)
	{
		static query[] = "SELECT * FROM "TABLE_PHOTOGRHAPHER_COOLDOWN" WHERE `user_id` = '%d' AND NOW() > `%e` LIMIT 1;";
		new fmt_query[sizeof(query) + 11 + 20];
		mysql_format(sql_connection, fmt_query, sizeof(fmt_query), query, PlayerInfo[playerid][id], query_photographer_string[id_quest_photographer]);
		mysql_tquery(sql_connection, fmt_query, "CheckCoolDownPhotographer", "ii", playerid, id_quest_photographer);
	}
	else
	{
		insert_cooldown_photographer(playerid);
		if(id_quest_photographer == 0)
		{
			new quest_id = quest_photographer_id[playerid] = random(14);
			dynamic_area_photographer_job[playerid] = CreateDynamicCube(photographer_job_info[quest_id][pjXMinPos],
																		photographer_job_info[quest_id][pjYMinPos],
																		photographer_job_info[quest_id][pjZMinPos],
																		photographer_job_info[quest_id][pjXMaxPos],
																		photographer_job_info[quest_id][pjYMaxPos],
																		photographer_job_info[quest_id][pjZMaxPos],
																		_,
																		_,
																		playerid);

			new fmt_str[500 + MAX_PLAYER_NAME + 1 + MAX_NAME_PHOTOGRAPHER_POINT];
			format(fmt_str, sizeof(fmt_str), photographer_msg_quest[0], PlayerInfo[playerid][name],
																		photographer_job_info[quest_id][pjName]);
			show_dialog(playerid, d_photographer_invite + 1, DIALOG_STYLE_MSGBOX, ""c_server"Информация о работе", fmt_str, "Сделаю", "Отказ");

		}
		else if((1 <= id_quest_photographer <= 6))
		{
			static query[] = "SELECT * FROM "TABLE_PHOTOGRHAPHER_COOLDOWN" WHERE `user_id` = '%d' AND NOW() > `next_time_quest_with_actors` LIMIT 1;";
			new fmt_query[sizeof(query) + 11 + 20];
			mysql_format(sql_connection, fmt_query, sizeof(fmt_query), query, PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, fmt_query, "CheckQuestActorsPhotographer", "ii", playerid, id_quest_photographer);
		}
	}
}
callback: CheckCoolDownPhotographer(const playerid, const id_quest_photographer)
{
	new rows = cache_num_rows();
	if(rows)
	{
		if(id_quest_photographer == 0)
		{
			new quest_id = quest_photographer_id[playerid] = random(14);
			dynamic_area_photographer_job[playerid] = CreateDynamicCube(photographer_job_info[quest_id][pjXMinPos],
																		photographer_job_info[quest_id][pjYMinPos],
																		photographer_job_info[quest_id][pjZMinPos],
																		photographer_job_info[quest_id][pjXMaxPos],
																		photographer_job_info[quest_id][pjYMaxPos],
																		photographer_job_info[quest_id][pjZMaxPos],
																		_,
																		_,
																		playerid);

			new fmt_str[500 + MAX_PLAYER_NAME + 1 + MAX_NAME_PHOTOGRAPHER_POINT];
			format(fmt_str, sizeof(fmt_str), photographer_msg_quest[0], PlayerInfo[playerid][name],
																		photographer_job_info[quest_id][pjName]);
			show_dialog(playerid, d_photographer_invite + 1, DIALOG_STYLE_MSGBOX, ""c_server"Информация о работе", fmt_str, "Сделаю", "Отказ");

		}
		else if((1 <= id_quest_photographer <= 6))
		{
			static query[] = "SELECT * FROM "TABLE_PHOTOGRHAPHER_COOLDOWN" WHERE `user_id` = '%d' AND NOW() > `next_time_quest_with_actors` LIMIT 1;";
			new fmt_query[sizeof(query) + 11 + 20];
			mysql_format(sql_connection, fmt_query, sizeof(fmt_query), query, PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, fmt_query, "CheckQuestActorsPhotographer", "ii", playerid, id_quest_photographer);
		}
	}
	else
	{
		SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Задание не доступно. Оно будет доступно через некоторое время!");
		return 0;
	}
	return 1;
}
callback: CheckQuestActorsPhotographer(const playerid, const id_quest_photographer)
{
	new rows = cache_num_rows();
	if(rows)
	{
		show_dialog(playerid,
					d_photographer_invite + 1,
					DIALOG_STYLE_MSGBOX,
					""c_server"Вы уверены?",
					""c_white"Вы уверены, что хотите взять данный квест?",
					"Да",
					"Отказ");
		quest_photographer_id[playerid] = QUEST_OLD_MILITARY + id_quest_photographer -1;

		new count_photo = counter_photos_taken{playerid};
		new id_quest = quest_photographer_id[playerid] + count_photo;

		SetPVarInt(playerid, "photographer_quest_id", id_quest_photographer);

		id_quest += ShiftIndexArray(playerid, id_quest);
	}
	else
	{
		SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Задание не доступно. Оно будет доступно через некоторое время!");
		return 0;
	}
	return 1;
}
callback: users_vehicles_loading()
{
	new fields,
		rows;

	cache_get_data(rows, fields);
	if(rows)
	{
		for(new i = 0; i < rows; i++)
		{
			new veh_id = GetVehicleID();

			veh_info[veh_id -1][v_type] = vehicle_type_player;

			veh_info[veh_id -1][v_id] = cache_get_field_content_int(i, "v_id", sql_connection);
			veh_info[veh_id -1][v_model] = cache_get_field_content_int(i, "v_model", sql_connection);
			veh_info[veh_id -1][v_owner] = cache_get_field_content_int(i, "v_owner", sql_connection);
			veh_info[veh_id -1][v_color][0] = cache_get_field_content_int(i, "v_color_1", sql_connection);
			veh_info[veh_id -1][v_color][1] = cache_get_field_content_int(i, "v_color_2", sql_connection);

			cache_get_field_content(i, "v_plate", veh_info[veh_id -1][v_plate], sql_connection, 12);
			veh_info[veh_id -1][v_fuel] = cache_get_field_content_float(i,"v_fuel", sql_connection);
			veh_info[veh_id -1][v_millage] = cache_get_field_content_float(i,"v_millage", sql_connection);

			veh_info[veh_id -1][v_rank] = 0;

			veh_info[veh_id -1][v_pos][0] = cache_get_field_content_float(i,"v_pos_x", sql_connection);
			veh_info[veh_id -1][v_pos][1] = cache_get_field_content_float(i,"v_pos_y", sql_connection);
			veh_info[veh_id -1][v_pos][2] = cache_get_field_content_float(i,"v_pos_z", sql_connection);
			veh_info[veh_id -1][v_pos][3] = cache_get_field_content_float(i,"v_pos_a", sql_connection);


			veh_info[veh_id -1][v_engine_boost] = cache_get_field_content_float(i,"v_engine_boost", sql_connection);
			veh_info[veh_id -1][v_brake_boost] = cache_get_field_content_float(i,"v_brake_boost", sql_connection);
			veh_info[veh_id -1][v_stability_boost] = cache_get_field_content_float(i,"v_stability_boost", sql_connection);

			new sscanf_delimit[126];
			cache_get_field_content(i, "v_eng_details", sscanf_delimit, sql_connection, 16);
			sscanf(sscanf_delimit, "p<|>ddddd", veh_info[veh_id -1][v_pt_engine][0], veh_info[veh_id -1][v_pt_engine][1],
			veh_info[veh_id -1][v_pt_engine][2], veh_info[veh_id -1][v_pt_engine][3], veh_info[veh_id -1][v_pt_engine][4]	);

			cache_get_field_content(i, "v_brake_details", sscanf_delimit, sql_connection, 16);
			sscanf(sscanf_delimit, "p<|>ddddd", veh_info[veh_id -1][v_pt_brake][0], veh_info[veh_id -1][v_pt_brake][1],
			veh_info[veh_id -1][v_pt_brake][2], veh_info[veh_id -1][v_pt_brake][3], veh_info[veh_id -1][v_pt_brake][4]	);

			cache_get_field_content(i, "v_stab_details", sscanf_delimit, sql_connection, 16);
			sscanf(sscanf_delimit, "p<|>ddddd", veh_info[veh_id -1][v_pt_stability][0], veh_info[veh_id -1][v_pt_stability][1],
			veh_info[veh_id -1][v_pt_stability][2], veh_info[veh_id -1][v_pt_stability][3], veh_info[veh_id -1][v_pt_stability][4]	);

			cache_get_field_content(i, "v_components", sscanf_delimit, sql_connection, 126);
			sscanf(sscanf_delimit, "p<|>dddddddddd", veh_info[veh_id -1][v_component][0], veh_info[veh_id -1][v_component][1],
			veh_info[veh_id -1][v_component][2], veh_info[veh_id -1][v_component][3], veh_info[veh_id -1][v_component][4],
			veh_info[veh_id -1][v_component][5], veh_info[veh_id -1][v_component][6], veh_info[veh_id -1][v_component][7],
			veh_info[veh_id -1][v_component][8], veh_info[veh_id -1][v_component][9]);


			veh_info[veh_id -1][v_sell_slot] = cache_get_field_content_int(i, "v_sell_slot", sql_connection);
			veh_info[veh_id -1][v_sell_price] = cache_get_field_content_int(i, "v_sell_price", sql_connection);
			veh_info[veh_id -1][v_sell_carmarket] = cache_get_field_content_int(i, "v_sell_carmarket", sql_connection);


			veh_info[veh_id -1][v_pos][0] = car_market_pos[veh_info[veh_id -1][v_sell_carmarket]][veh_info[veh_id -1][v_sell_slot]][0];
			veh_info[veh_id -1][v_pos][1] = car_market_pos[veh_info[veh_id -1][v_sell_carmarket]][veh_info[veh_id -1][v_sell_slot]][1];
			veh_info[veh_id -1][v_pos][2] = car_market_pos[veh_info[veh_id -1][v_sell_carmarket]][veh_info[veh_id -1][v_sell_slot]][2];
			veh_info[veh_id -1][v_pos][3] = car_market_pos[veh_info[veh_id -1][v_sell_carmarket]][veh_info[veh_id -1][v_sell_slot]][3];

			veh_info[veh_id -1][v_vehicle] = CreateVehicle(veh_info[veh_id -1][v_model], veh_info[veh_id -1][v_pos][0], veh_info[veh_id -1][v_pos][1], veh_info[veh_id -1][v_pos][2], veh_info[veh_id -1][v_pos][3], veh_info[veh_id -1][v_color][0], veh_info[veh_id -1][v_color][1], -1);
			SetVehicleNumberPlate(veh_info[veh_id -1][v_vehicle], veh_info[veh_id -1][v_plate]);




			new query_string[156];
			format(query_string, sizeof(query_string),""c_server"Машина продаётся\n"c_grey"Модель: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Номер: "c_white"%s\n"c_grey"Пробег: "c_white"%d км.",
			vehicle_name[GetVehicleModel(veh_info[veh_id -1][v_vehicle]) -400],
			veh_info[veh_id -1][v_sell_price],
			veh_info[veh_id -1][v_plate],
			floatround(veh_info[veh_id -1][v_millage]));
			if(!IsValid3DTextLabel(veh_info[veh_id -1][v_sell_text]))
			{
				veh_info[veh_id -1][v_sell_text] = CreateDynamic3DTextLabel(query_string, col_wavy, 0.0, 0.0, 0.2, 5.0, INVALID_PLAYER_ID, veh_info[veh_id -1][v_vehicle]);
			}

			car_market_slotes_toggled[veh_info[veh_id -1][v_sell_carmarket]][veh_info[veh_id -1][v_sell_slot]] = true;

			for(new j = 0; j < 10; j ++)
			{
				AddVehicleComponent(veh_info[veh_id -1][v_vehicle], veh_info[veh_id -1][v_component][j]);
			}
			new engine, lights, alarm, doors, bonnet, boot, objective;
			veh_info[veh_id -1][v_locked] = false;
			GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(veh_id, engine, lights, alarm, false, bonnet, boot, objective);

		}
	}
	return 1;
}



callback: check_referal(playerid, inputtext[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		show_dialog(playerid, d_reg_referal, DIALOG_STYLE_INPUT, !""c_server"Регистрация нового аккаунта", ""c_white"Пожалуйста, введите имя игрока, который пригласил Вас на данный сервер\n\n"c_grey"-По достижению Вами 3 уровня игрок получит денежное вознаграждение\n\nДанного аккаунта не существует.", !"Далее", !"Пропустить");
		return 1;
	}
	format(reg_info[playerid][reg_referal], MAX_PLAYER_NAME, "%s", inputtext);
	return 1;
}
callback: houses_loading()
{
	new fields;
	cache_get_data(house_count, fields);
	if(house_count)
	{
		for(new i = 0; i < house_count; i++)
		{
			h_info[i][h_id] = cache_get_field_content_int(i, "h_id", sql_connection);
			h_info[i][h_owner] = cache_get_field_content_int(i, "h_owner", sql_connection);
			cache_get_field_content(i, "h_ownername", h_info[i][h_owner_name], sql_connection, MAX_PLAYER_NAME);

			h_info[i][h_int] = cache_get_field_content_int(i, "h_int", sql_connection);
			h_info[i][h_vw] = cache_get_field_content_int(i, "h_vw", sql_connection);

			h_info[i][h_pos][0] = cache_get_field_content_float(i,"h_pos_x", sql_connection);
			h_info[i][h_pos][1] = cache_get_field_content_float(i,"h_pos_y", sql_connection);
			h_info[i][h_pos][2] = cache_get_field_content_float(i,"h_pos_z", sql_connection);
			h_info[i][h_pos][3] = cache_get_field_content_float(i,"h_pos_c", sql_connection);

			h_info[i][h_v_pos][0] = cache_get_field_content_float(i,"h_v_pos_x", sql_connection);
			h_info[i][h_v_pos][1] = cache_get_field_content_float(i,"h_v_pos_y", sql_connection);
			h_info[i][h_v_pos][2] = cache_get_field_content_float(i,"h_v_pos_z", sql_connection);
			h_info[i][h_v_pos][3] = cache_get_field_content_float(i,"h_v_pos_c", sql_connection);

			h_info[i][h_radio_status] = cache_get_field_content_int(i, "h_radio_status", sql_connection);
			cache_get_field_content(i, "h_radio_url", h_info[i][h_radio_url], sql_connection, MAX_PLAYER_NAME);

			h_info[i][h_garage] = cache_get_field_content_int(i, "h_garage", sql_connection);
			h_info[i][h_price] = cache_get_field_content_int(i, "h_price", sql_connection);
			h_info[i][h_rent_price] = cache_get_field_content_int(i, "h_rent", sql_connection);
			h_info[i][h_closed] = cache_get_field_content_int(i, "h_closed", sql_connection);

			h_info[i][h_renters] = cache_get_field_content_int(i, "h_renters", sql_connection);

//			h_info[i][h_cellar] = cache_get_field_content_int(i, "h_cellar", sql_connection);

			h_info[i][h_safe_code] = cache_get_field_content_int(i, "h_safe_code", sql_connection);
			h_info[i][h_prods] = cache_get_field_content_int(i, "h_prods", sql_connection);

			h_info[i][h_days] = cache_get_field_content_int(i, "h_days", sql_connection);

			new sscanf_delimit[48];
			cache_get_field_content(i, "h_improve", sscanf_delimit, sql_connection, 48);
			sscanf(sscanf_delimit, "p<|>dddddddd", h_info[i][h_improve][0], h_info[i][h_improve][1], h_info[i][h_improve][2],
			h_info[i][h_improve][3], h_info[i][h_improve][4], h_info[i][h_improve][5], h_info[i][h_improve][6], h_info[i][h_improve][7]);

			cache_get_field_content(i, "h_safe_data", sscanf_delimit, sql_connection, 36);
			sscanf(sscanf_delimit, "p<|>dddddddd", h_info[i][h_safe_data][0], h_info[i][h_safe_data][1],
			h_info[i][h_safe_guns][0],	h_info[i][h_safe_guns][1], h_info[i][h_safe_guns][2],
			h_info[i][h_safe_guns][3],	h_info[i][h_safe_guns][4], h_info[i][h_safe_guns][5]);

			h_info[i][h_seed] = cache_get_field_content_int(i, "h_seed", sql_connection);
			h_info[i][h_seed_result] = cache_get_field_content_int(i, "h_seed_result", sql_connection);


			if(h_info[i][h_garage] > 0)
			{
				CreateDynamic3DTextLabel("** Гараж **\n"c_grey"Нажмите "c_white"Y"c_grey", чтобы заехать",col_lblue,
										h_info[i][h_v_pos][0], h_info[i][h_v_pos][1], h_info[i][h_v_pos][2],
										4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, -1, -1);
			}

			new hint = h_info[i][h_int] -1;

			CreateDynamic3DTextLabel("** Выход **\n"c_grey"Введите "c_white"/exit"c_grey" для выхода из дома",col_blue,
													house_int[hint][hint_position][0], house_int[hint][hint_position][1], house_int[hint][hint_position][2] + 0.5,
													4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, h_info[i][h_id],  house_int[hint][hint_int]);



			if(h_info[i][h_owner] == -1)
			{
				h_info[i][h_pickup] = CreateDynamicPickup(1273, 23, h_info[i][h_pos][0], h_info[i][h_pos][1], h_info[i][h_pos][2], h_info[i][h_vw], -1);
				if(!h_info[i][h_vw]) h_info[i][h_icon_id] = CreateDynamicMapIcon(h_info[i][h_pos][0], h_info[i][h_pos][1], h_info[i][h_pos][2], 31, 0, 0, 0, -1, 300.0);
			}
			else
			{
				if(h_info[i][h_rent_price] == 0)
				{
					h_info[i][h_pickup] = CreateDynamicPickup(1272, 23, h_info[i][h_pos][0], h_info[i][h_pos][1], h_info[i][h_pos][2], h_info[i][h_vw], -1);
					if(!h_info[i][h_vw]) h_info[i][h_icon_id] = CreateDynamicMapIcon(h_info[i][h_pos][0], h_info[i][h_pos][1], h_info[i][h_pos][2], 32, 0, 0, 0, -1, 300.0);
				}
				else
				{
					h_info[i][h_pickup] = CreateDynamicPickup(19524, 23, h_info[i][h_pos][0], h_info[i][h_pos][1], h_info[i][h_pos][2], h_info[i][h_vw], -1);
					if(!h_info[i][h_vw]) h_info[i][h_icon_id] = CreateDynamicMapIcon(h_info[i][h_pos][0], h_info[i][h_pos][1], h_info[i][h_pos][2], 31, 0, 0, 0, -1, 300.0);
				}
			}
			h_info[i][h_exit_pickup] = CreateDynamicPickup(1318, 23, house_int[hint][hint_position][0], house_int[hint][hint_position][1], house_int[hint][hint_position][2], h_info[i][h_id], house_int[hint][hint_int]);

			pick_info [h_info[i][h_pickup]][pick_type] = pick_type_hentrance;
			pick_info[h_info[i][h_exit_pickup]][pick_type] = pick_type_hexit;

			for(new k; k < 6; k++)
			{
				if(!h_info[i][h_improve][k]) continue;
				switch(k)
				{
					case 1:	CreateDynamic3DTextLabel("Сейф\n"c_grey"Нажмите клавишу "c_white"[Y]"c_grey" для взаимодействия", col_server, house_safe_pos[hint][0], house_safe_pos[hint][1], house_safe_pos[hint][2], 3.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, h_info[i][h_id], 2);
					case 2: CreateDynamic3DTextLabel("Холодильник\n"c_grey"Нажмите клавишу "c_white"[Y]"c_grey" для взаимодействия", col_server, house_freeze_pos[hint][0], house_freeze_pos[hint][1], house_freeze_pos[hint][2], 3.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, h_info[i][h_id], 2);
				}
			}
		}
    }
	printf("[SERVER] Загружено %d домов.", house_count);
	return 1;
}

callback: anticheat_loading()
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
 		for(new i = 0; i < AC_MAX_CODES; i++)
        {
            AC_CODE_TRIGGER_TYPE[i] = cache_get_field_content_int(i, ""AC_TABLE_FIELD_TRIGGER"");

            if(AC_CODE_TRIGGER_TYPE[i] == AC_CODE_TRIGGER_TYPE_DISABLED)
                EnableAntiCheat(i, 0);
        }
	}
	return printf("[SERVER] Настроек античитов загружено: %d.", rows);
}

callback: island_loading()
{
	new fields;
	cache_get_data(island_count, fields);
	if(island_count)
	{
		for(new i = 0; i < island_count; i++)
		{
			fi_info[i][fi_id] = cache_get_field_content_int(i, "fi_id", sql_connection);
			fi_info[i][fi_owner] = cache_get_field_content_int(i, "fi_owner", sql_connection);
			cache_get_field_content(i, "fi_ownername", fi_info[i][fi_owner_name], sql_connection, MAX_PLAYER_NAME);

			fi_info[i][fi_int] = cache_get_field_content_int(i, "fi_int", sql_connection);
			fi_info[i][fi_vw] = cache_get_field_content_int(i, "fi_vw", sql_connection);

			fi_info[i][fi_pos][0] = cache_get_field_content_float(i, "fi_pos_x", sql_connection);
			fi_info[i][fi_pos][1] = cache_get_field_content_float(i, "fi_pos_y", sql_connection);
			fi_info[i][fi_pos][2] = cache_get_field_content_float(i, "fi_pos_z", sql_connection);
			fi_info[i][fi_pos][3] = cache_get_field_content_float(i, "fi_pos_a", sql_connection);

			fi_info[i][fi_price] = cache_get_field_content_int(i, "fi_price", sql_connection);
			fi_info[i][fi_family] = cache_get_field_content_int(i, "fi_family", sql_connection);

			new sscanf_delimit[48];
			cache_get_field_content(i, "fi_improve", sscanf_delimit, sql_connection, 48);
			sscanf(sscanf_delimit, "p<|>dddddd", fi_info[i][fi_improve][0], fi_info[i][fi_improve][1], fi_info[i][fi_improve][2], fi_info[i][fi_improve][3], fi_info[i][fi_improve][4], fi_info[i][fi_improve][5]);

			cache_get_field_content(i, "fi_safe_data", sscanf_delimit, sql_connection, 36);
			sscanf(sscanf_delimit, "p<|>dddddddd", fi_info[i][fi_safe_data][0], fi_info[i][fi_safe_data][1], fi_info[i][fi_safe_guns][0], fi_info[i][fi_safe_guns][1], fi_info[i][fi_safe_guns][2], fi_info[i][fi_safe_guns][3], fi_info[i][fi_safe_guns][4], fi_info[i][fi_safe_guns][5]);

			fi_info[i][fi_safe_code] = cache_get_field_content_int(i, "fi_safe_code", sql_connection);

			fi_info[i][fi_radio_status] = cache_get_field_content_int(i, "fi_radio_status", sql_connection);
			cache_get_field_content(i, "fi_radio_url", fi_info[i][fi_radio_url], sql_connection, 128);

			new fint = fi_info[i][fi_int] -1;
			fi_info[i][fi_exit_pickup] = CreateDynamicPickup(19132, 23, family_int[fint][fint_position][0], family_int[fint][fint_position][1], family_int[fint][fint_position][2], fi_info[i][fi_id], family_int[fint][fint_int]);
			
			pick_info[fi_info[i][fi_exit_pickup]][pick_type] = pick_type_fiexit;

			if(fi_info[i][fi_family] >= 1)
			{
				new text_string[120];
				format(text_string, sizeof(text_string), "Семейный остров №%d\nВладелец: {%s}%s Family", fi_info[i][fi_id], family_info[fi_info[i][fi_family] -1][fam_chat_color], family_info[fi_info[i][fi_family] -1][fam_name]);
				fi_info[i][fi_text] = CreateDynamic3DTextLabel(text_string, col_white, fi_info[i][fi_pos][0], fi_info[i][fi_pos][1], fi_info[i][fi_pos][2], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			}
			else
			{
				new text_string[120];
				format(text_string, sizeof(text_string), "Семейный остров №%d\nВладелец: "c_orange_red"отсутствует", fi_info[i][fi_id]);
				fi_info[i][fi_text] = CreateDynamic3DTextLabel(text_string, col_white, fi_info[i][fi_pos][0], fi_info[i][fi_pos][1], fi_info[i][fi_pos][2], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			}

			for(new k; k < 6; k++)
			{
				if(!fi_info[i][fi_improve][k]) continue;

				switch(k)
				{
					case fi_improve_safe: CreateDynamic3DTextLabel("Склад\n"c_grey"Нажмите клавишу "c_white"[Y]"c_grey" для взаимодействия", col_server, island_safe_pos[fint][0], island_safe_pos[fint][1], island_safe_pos[fint][2], 3.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, fi_info[i][fi_id], 3);
					case fi_improve_freeze: CreateDynamic3DTextLabel("Холодильник\n"c_grey"Нажмите клавишу "c_white"[Y]"c_grey" для взаимодействия", col_server, island_freeze_pos[fint][0], island_freeze_pos[fint][1], island_freeze_pos[fint][2], 3.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, fi_info[i][fi_id], 3);
					case fi_improve_healme: CreateDynamic3DTextLabel("Мед. пункт\n"c_grey"Нажмите клавишу "c_white"[Y]"c_grey" для взаимодействия", col_server, island_healme_pos[fint][0], island_healme_pos[fint][1], island_healme_pos[fint][2], 3.5, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, fi_info[i][fi_id], 3);
				}
			}
			fi_info[i][fi_pickup] = CreateDynamicPickup(19132, 23, fi_info[i][fi_pos][0], fi_info[i][fi_pos][1], fi_info[i][fi_pos][2], fi_info[i][fi_vw], -1);
			pick_info[fi_info[i][fi_pickup]][pick_type] = pick_type_fientrance;
		}
    }
	return printf("[SERVER] Всего семейных домов загружено: %d.", island_count);
}

callback: cellars_loading()
{
	new fields;
	cache_get_data(cellar_count, fields);
	if(cellar_count)
	{
		for(new i = 0; i < cellar_count; i++)
		{
			cellar_info[i][cl_id] = cache_get_field_content_int(i, "cl_id", sql_connection);
			cellar_info[i][cl_owner] = cache_get_field_content_int(i, "cl_owner", sql_connection);
			cache_get_field_content(i, "cl_ownername", cellar_info[i][cl_owner_name], sql_connection, MAX_PLAYER_NAME);


			cellar_info[i][cl_pos][0] = cache_get_field_content_float(i,"cl_pos_x", sql_connection);
			cellar_info[i][cl_pos][1] = cache_get_field_content_float(i,"cl_pos_y", sql_connection);
			cellar_info[i][cl_pos][2] = cache_get_field_content_float(i,"cl_pos_z", sql_connection);
			cellar_info[i][cl_pos][3] = cache_get_field_content_float(i,"cl_pos_c", sql_connection);

			cellar_info[i][cl_price] = cache_get_field_content_int(i, "cl_price", sql_connection);
			cellar_info[i][cl_closed] = cache_get_field_content_int(i, "cl_closed", sql_connection);



			new sscanf_delimit[48];
			cache_get_field_content(i, "cl_improve", sscanf_delimit, sql_connection, 48);
			sscanf(sscanf_delimit, "p<|>dddd", cellar_info[i][cl_improve][0], cellar_info[i][cl_improve][1], cellar_info[i][cl_improve][2],
			cellar_info[i][cl_improve][3]);

			cache_get_field_content(i, "cl_safe_data", sscanf_delimit, sql_connection, 36);
			sscanf(sscanf_delimit, "p<|>dddddddd", cellar_info[i][cl_safe_data][0], cellar_info[i][cl_safe_data][1],
			cellar_info[i][cl_safe_guns][0],	cellar_info[i][cl_safe_guns][1], cellar_info[i][cl_safe_guns][2],
			cellar_info[i][cl_safe_guns][3],	cellar_info[i][cl_safe_guns][4], cellar_info[i][cl_safe_guns][5]);

			cellar_info[i][cl_seed] = cache_get_field_content_int(i, "cl_seed", sql_connection);
			cellar_info[i][cl_seed_result] = cache_get_field_content_int(i, "cl_seed_result", sql_connection);


			cellar_info[i][cl_pickup] = CreateDynamicPickup(1318, 23, cellar_info[i][cl_pos][0], cellar_info[i][cl_pos][1], cellar_info[i][cl_pos][2], 0, -1);

			pick_info [cellar_info[i][cl_pickup]][pick_type] = pick_type_clentrance;
		}
    }
	printf("[SERVER] Загружено %d подвалов.", cellar_count);
	return 1;
}



callback: areas_loading()
{
	new fields;
	cache_get_data(area_amount, fields);
	if(area_amount)
	{
       	for(new t = 0; t < area_amount; t++)
        {

			area_info[t][a_id] = cache_get_field_content_int(t, "area_id", sql_connection);

			area_info[t][a_pick] = cache_get_field_content_int(t, "area_pickup", sql_connection);

			area_info[t][a_pos][0] = cache_get_field_content_float(t, "area_x", sql_connection);
			area_info[t][a_pos][1] = cache_get_field_content_float(t, "area_y", sql_connection);
			area_info[t][a_pos][2] = cache_get_field_content_float(t, "area_z", sql_connection);
			area_info[t][a_pos][3] = cache_get_field_content_float(t, "area_c", sql_connection);
			area_info[t][a_to_pos][0] = cache_get_field_content_float(t, "area_to_x", sql_connection);
			area_info[t][a_to_pos][1] = cache_get_field_content_float(t, "area_to_y", sql_connection);
			area_info[t][a_to_pos][2] = cache_get_field_content_float(t, "area_to_z", sql_connection);
			area_info[t][a_to_pos][3] = cache_get_field_content_float(t, "area_to_c", sql_connection);

			area_info[t][a_virt_world][0] = cache_get_field_content_int(t, "area_virtual_world", sql_connection);
			area_info[t][a_virt_world][1] = cache_get_field_content_int(t, "area_to_virtual_world", sql_connection);
			area_info[t][a_interior][0] = cache_get_field_content_int(t, "area_interior", sql_connection);
			area_info[t][a_interior][1] = cache_get_field_content_int(t, "area_to_interior", sql_connection);

			area_info[t][a_area][0] = CreateDynamicPickup(area_info[t][a_pick], 23, area_info[t][a_pos][0], area_info[t][a_pos][1], area_info[t][a_pos][2], area_info[t][a_virt_world][0]);
			pick_info[area_info[t][a_area][0]][pick_type] = pick_type_teleportation;

			if(area_info[t][a_pick] != 1318 || area_info[t][a_to_pos][0] == 0) continue;
			area_info[t][a_area][1] = CreateDynamicPickup(1318, 23, area_info[t][a_to_pos][0], area_info[t][a_to_pos][1], area_info[t][a_to_pos][2], area_info[t][a_virt_world][1]);

			pick_info[area_info[t][a_area][1]][pick_type] = pick_type_teleportation;
	 	}
		printf("[SERVER] Загружено %d телепортов.", area_amount);
    }
	else print("[SERVER] Телепорты не были найдены в базе данных.");

	for(new i = 0; i < MAX_GUNWORK_TABLE; i ++)
	{
//		CreateDynamicPickup(19198, 1, table_areas_pos[i][0], table_areas_pos[i][1], table_areas_pos[i][2]);


//		CreateDynamicCP(table_areas_pos[i][0], table_areas_pos[i][1], table_areas_pos[i][2] -1, 1.0, 1, 1, -1, 2.0);
		table_area[i] = CreateDynamicSphere(table_areas_pos[i][0], table_areas_pos[i][1], table_areas_pos[i][2], 1.0);
		table_area_toggled[i] = INVALID_PLAYER_ID;
	}
 	for(new i = 0; i < 12; i ++)
	{
		stolen_box_area[i] = CreateDynamicSphere(stolen_box_pos[i][0], stolen_box_pos[i][1], stolen_box_pos[i][2], 1.0);
		CreateDynamicPickup(2359, 1, stolen_box_pos[i][0], stolen_box_pos[i][1], stolen_box_pos[i][2]);
	}
 	for(new i = 0; i < 5; i ++)
	{
		stolen_ammo_area[i] = CreateDynamicSphere(stolen_ammo_pos[i][0], stolen_ammo_pos[i][1], stolen_ammo_pos[i][2], 1.0);
		CreateDynamicPickup(2061, 1, stolen_ammo_pos[i][0], stolen_ammo_pos[i][1], stolen_ammo_pos[i][2]);
	}
	factory_take_area = CreateDynamicSphere(-10.9677, -275.7222, 1529.5376, 1.0);
	CreateDynamicPickup(2359, 1, -10.9677, -275.7222, 1529.5376);


	return 1;
}


callback: businesses_loading ()
{
	new fields;
	cache_get_data(b_count, fields);
	if(b_count)
	{
        for(new t = 0; t < b_count; t ++)
        {

			b_info[t][b_id] = cache_get_field_content_int(t, "b_id", sql_connection);
			b_info[t][b_owner_inc] = cache_get_field_content_int(t, "b_owner_inc", sql_connection);

			cache_get_field_content(t, "b_owner_name", b_info[t][b_owner_name], sql_connection, 32);
			cache_get_field_content(t, "b_name", b_info[t][b_name], sql_connection, 32);

			b_info[t][b_position][0] = cache_get_field_content_float(t, "b_pos_x", sql_connection);
			b_info[t][b_position][1] = cache_get_field_content_float(t, "b_pos_y", sql_connection);
			b_info[t][b_position][2] = cache_get_field_content_float(t, "b_pos_z", sql_connection);
			b_info[t][b_position][3] = cache_get_field_content_float(t, "b_pos_c", sql_connection);

			b_info[t][b_int] = cache_get_field_content_int(t, "b_int", sql_connection);

			b_info[t][b_money] = cache_get_field_content_int(t, "b_money", sql_connection);
			b_info[t][b_family] = cache_get_field_content_int(t, "b_family", sql_connection);

			b_info[t][b_close] = cache_get_field_content_int(t, "b_close", sql_connection);
			b_info[t][b_price] = cache_get_field_content_int(t, "b_price", sql_connection);
			b_info[t][b_product] = cache_get_field_content_int(t, "b_product", sql_connection);
			b_info[t][b_type] = cache_get_field_content_int(t, "b_type", sql_connection);

			b_info[t][b_fee] = cache_get_field_content_int(t, "b_fee", sql_connection);
			b_info[t][b_maxproduct] = cache_get_field_content_int(t, "b_maxproduct", sql_connection);

 			b_info[t][b_cost] = cache_get_field_content_int(t, "b_cost", sql_connection);

			b_info[t][b_mafia] = cache_get_field_content_int(t, "b_mafia", sql_connection);

			new sscanf_delimit[36];
			cache_get_field_content(t, "b_improve", sscanf_delimit, sql_connection, 36);
			sscanf(sscanf_delimit, "p<|>ddd", b_info[t][b_improve][0], b_info[t][b_improve][1], b_info[t][b_improve][2]);



			if(b_info[t][b_type] == bizz_type_shop || b_info[t][b_type] == bizz_type_pharm || b_info[t][b_type] == bizz_type_electronic || b_info[t][b_type] == bizz_type_clothes || b_info[t][b_type] == bizz_type_carshop || b_info[t][b_type] == bizz_type_cafe || b_info[t][b_type] == bizz_type_club || b_info[t][b_type] == bizz_type_bar)
			{
				if(b_info[t][b_owner_inc] == -1)
				{
					new label_string[228];
					format(label_string, sizeof(label_string), ""c_server"%s (№%d)\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Бизнес продаётся",
					b_types[b_info[t][b_type]], b_info[t][b_id], b_info[t][b_price], mafia_owner_name[b_info[t][b_mafia] -1]);
					
					b_info[t][b_label] = CreateDynamic3DTextLabel(label_string, -1,  b_info[t][b_position][0], b_info[t][b_position][1], b_info[t][b_position][2] + 0.7, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
				}
				else
				{
					new label_string[228];
					format(label_string, sizeof(label_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
					b_types[b_info[t][b_type]], b_info[t][b_id], b_info[t][b_owner_name], b_info[t][b_price], mafia_owner_name[b_info[t][b_mafia] -1],(! b_info[t][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));

					b_info[t][b_label] = CreateDynamic3DTextLabel(label_string, -1,  b_info[t][b_position][0], b_info[t][b_position][1], b_info[t][b_position][2] + 0.7, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);

				}


				b_info[t][b_pickup] = CreateDynamicPickup(1318, 23, b_info[t][b_position][0], b_info[t][b_position][1], b_info[t][b_position][2], 0, 0);
				pick_info[b_info[t][b_pickup]][pick_type] = pick_type_bentrance;

				b_info[t][b_int] --;
				new bis_int = b_info[t][b_int];

				new pickup_biz = CreateDynamicPickup(1318, 23, b_interior[bis_int][i_position][0], b_interior[bis_int][i_position][1], b_interior[bis_int][i_position][2], b_info[t][b_id] + 1000, b_interior[bis_int][i_interior]);
				pick_info[pickup_biz][pick_type] = pick_type_bexit;

			}
			if(b_info[t][b_type] == bizz_type_ammo)
			{
				if(b_info[t][b_owner_inc] == -1)
				{
					new label_string[228];
					format(label_string, sizeof(label_string), ""c_server"%s (№%d)\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Бизнес продаётся",
					b_types[b_info[t][b_type]], b_info[t][b_id], b_info[t][b_price], family_info[b_info[t][b_family] -1][fam_name]);
					
					b_info[t][b_label] = CreateDynamic3DTextLabel(label_string, -1,  b_info[t][b_position][0], b_info[t][b_position][1], b_info[t][b_position][2] + 0.7, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
				}
				else
				{
					new label_string[228];
					format(label_string, sizeof(label_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
					b_types[b_info[t][b_type]], b_info[t][b_id], b_info[t][b_owner_name], b_info[t][b_price], family_info[b_info[t][b_family] -1][fam_name],(! b_info[t][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));

					b_info[t][b_label] = CreateDynamic3DTextLabel(label_string, -1,  b_info[t][b_position][0], b_info[t][b_position][1], b_info[t][b_position][2] + 0.7, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);

				}
				b_info[t][b_pickup] = CreateDynamicPickup(1318, 23, b_info[t][b_position][0], b_info[t][b_position][1], b_info[t][b_position][2], 0, 0);
				pick_info[b_info[t][b_pickup]][pick_type] = pick_type_bentrance;
				b_info[t][b_int] --;
				new bis_int = b_info[t][b_int];

				new pickup_biz = CreateDynamicPickup(1318, 23, b_interior[bis_int][i_position][0], b_interior[bis_int][i_position][1], b_interior[bis_int][i_position][2], b_info[t][b_id] + 1000, b_interior[bis_int][i_interior]);
				pick_info[pickup_biz][pick_type] = pick_type_bexit;


				new actorid = CreateActor(179, 296.4053,-40.2153,1001.5156,1.6147);
				SetActorVirtualWorld(actorid, b_info[t][b_id] + 1000);


			}
			else if(b_info[t][b_type] == bizz_type_gas)
			{
				if(b_info[t][b_owner_inc] == -1)
				{
					new label_string[228];
					format(label_string, sizeof(label_string), ""c_server"%s (№%d)\n"c_grey"Стоимость: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Бизнес продаётся (/buygas)", b_types[b_info[t][b_type]], b_info[t][b_id], b_info[t][b_price], mafia_owner_name[b_info[t][b_mafia] -1]);
					b_info[t][b_label] = CreateDynamic3DTextLabel(label_string, -1,  b_info[t][b_position][0], b_info[t][b_position][1], b_info[t][b_position][2] + 0.7, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
				}
				else
				{
					new label_string[228];
					format(label_string, sizeof(label_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль:"c_white" %s\n"c_grey"Состояние: "c_white"%s",
					b_types[b_info[t][b_type]], b_info[t][b_id], b_info[t][b_owner_name], b_info[t][b_price], mafia_owner_name[b_info[t][b_mafia] -1],(! b_info[t][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));

					b_info[t][b_label] = CreateDynamic3DTextLabel(label_string, -1,  b_info[t][b_position][0], b_info[t][b_position][1], b_info[t][b_position][2] + 0.7, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
				}
			}
			else if(b_info[t][b_type] == bizz_type_tune)
			{
				if(b_info[t][b_owner_inc] == -1)
				{
					new label_string[228];
					format(label_string, sizeof(label_string), ""c_server"%s (№%d)\n"c_grey"Стоимость: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Автостанция продаётся (/buytune)", b_types[b_info[t][b_type]], b_info[t][b_id], b_info[t][b_price]);
					b_info[t][b_label] = CreateDynamic3DTextLabel(label_string, -1,  b_info[t][b_position][0], b_info[t][b_position][1], b_info[t][b_position][2] + 0.7, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
				}
				else
				{
					new label_string[228];
					format(label_string, sizeof(label_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Контроль: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
					b_types[b_info[t][b_type]], b_info[t][b_id], b_info[t][b_owner_name], mafia_owner_name[b_info[t][b_mafia] -1],(! b_info[t][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));

					b_info[t][b_label] = CreateDynamic3DTextLabel(label_string, -1,  b_info[t][b_position][0], b_info[t][b_position][1], b_info[t][b_position][2] + 0.7, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
				}
				new actorid = CreateActor(50, 944.6522, -1747.3267, 1013.5334, 358.0577);
				SetActorVirtualWorld(actorid, b_info[t][b_id] + 1000);
			}
			if(b_info[t][b_int] >= 0 && b_info[t][b_type] != bizz_type_tune && b_info[t][b_type] != bizz_type_gas)
			{
				new bis_int = b_info[t][b_int];
				CreateDynamicMapIcon(b_info[t][b_position][0], b_info[t][b_position][1], b_info[t][b_position][2], b_interior[bis_int][i_map_icon], 0, 0, 0, -1, 300.0);
			}
			else
			{
				switch(b_info[t][b_type])
				{
					case bizz_type_tune:CreateDynamicMapIcon(b_info[t][b_position][0], b_info[t][b_position][1], b_info[t][b_position][2], 27, 0, 0, 0, -1, 300.0);
					case bizz_type_gas:CreateDynamicMapIcon(b_info[t][b_position][0], b_info[t][b_position][1], b_info[t][b_position][2], 47, 0, 0, 0, -1, 300.0);
				}
			}
		}
	}
	printf("[SERVER] Загружено %d бизнесов.", b_count);
	return 1;
}


callback: unban_callback(playerid, pl_name [])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new _t_string[128];
		mysql_format(sql_connection, _t_string, 90,"DELETE FROM `users_bans` WHERE `u_b_name` = '%s' LIMIT 1", pl_name);
		mysql_query(sql_connection, _t_string);
		format(_t_string, 128, ""c_server"* A.INFO: "c_grey"Администратор %s разблокировал аккаунт %s.", PlayerInfo[playerid][name], pl_name);
		foreach(new i: admin_players)SendClientMessage(i, col_gray, _t_string);
	}
	else
	{
		new _t_string[128];
		format(_t_string, sizeof(_t_string),"Аккаунт %s не найден в списке заблокированных.", pl_name);
		SendClientMessage(playerid, col_gray, _t_string);
	}
	return 1;
}
callback: offban_check_callback(playerid, pl_name[], days, ban_reason[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		new _t_string[128];
		format(_t_string, sizeof(_t_string), "Аккаунт %s не найден в базе данных.", pl_name);
		SendClientMessage(playerid, col_gray, _t_string);
		return 1;
	}
	else
	{
		new _t_string[60 + MAX_PLAYER_NAME];
		format(_t_string, sizeof(_t_string), "SELECT * FROM `users_bans` WHERE `u_b_name` = '%s' LIMIT 1", pl_name);
		mysql_function_query(sql_connection, _t_string, true, "offban_check_callback_is_banned", "isds", playerid, pl_name, days, ban_reason);
		return 1;
	}
}
callback: offban_check_callback_is_banned(playerid, pl_name[], days, ban_reason[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new _t_string[68];
		format(_t_string, sizeof(_t_string), "Аккаунт %s уже заблокирован.", pl_name);
		SendClientMessage(playerid, col_gray, _t_string);
		return 1;
	}
	else
	{
		new _t_string[238];

		format(_t_string, 144, "Администратор %s выдал оффлайн бан игроку %s на %d дней. Причина: %s", PlayerInfo[playerid][name], pl_name, days, ban_reason);
		foreach(new i: logged_players) SendClientMessage(i, col_light_red, _t_string);

		format(_t_string, sizeof(_t_string), "INSERT INTO `users_bans` (`u_b_admin`,`u_b_name`,`u_b_reason`,`u_b_date`,`u_b_ndate`,`u_b_days`) VALUES('%s', '%s', '%s', NOW() + INTERVAL %d DAY,NOW(),'%d')", PlayerInfo[playerid][name], pl_name, ban_reason, days, days);
		mysql_function_query(sql_connection, _t_string, false, "", "");
		//mysql_query(sql_connection, _t_string);

	}
	return 1;
}

callback: offjail_check_callback(playerid, jname[], jtime, reason[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new string[104 + MAX_PLAYER_NAME + 42];
		format(string, sizeof string, "UPDATE `users` SET `u_jail` = '10', `u_jailed` = '%d' WHERE `u_name` = '%s' LIMIT 1", jtime * 60, jname);
		mysql_query(sql_connection, string);

		format(string, sizeof string, "Администратор %s посадил в оффлайн игрока %s на %d минут. Причина: %s", PlayerInfo[playerid][name], jname, jtime, reason);
		foreach(new i: logged_players) SendClientMessage(i, col_light_red, string);

	}
	else
	{
		new scm_string[34 + MAX_PLAYER_NAME];
		format(scm_string, sizeof scm_string, ""scm_error"Аккаунт %s не найден в базе данных.", jname);
		SendClientMessage(playerid, col_white, scm_string);
	}
	return 1;
}

callback: offmute_check_callback(playerid, mname[], mtime, reason[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new string[65 + MAX_PLAYER_NAME + 42];
		format(string, sizeof string, "UPDATE `users` SET `u_mute` = '%d' WHERE `u_name` = '%s' LIMIT 1", mtime * 60, mname);
		mysql_query(sql_connection, string);

		format(string, sizeof string, "Администратор %s выдал мут в оффлайн игроку %s на %d минут. Причина: %s", PlayerInfo[playerid][name], mname, mtime, reason);
		foreach(new i: logged_players) SendClientMessage(i, col_light_red, string);
	}
	else
	{
		new scm_string[34 + MAX_PLAYER_NAME];
		format(scm_string, sizeof scm_string, ""scm_error"Аккаунт %s не найден в базе данных.", mname);
		SendClientMessage(playerid, col_white, scm_string);
	}
	return 1;
}


callback: exams_loading()
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		for(new i; i < 20; i++)
		{
			server_exam[i][records] = cache_get_field_content_int(i, "e_record", sql_connection);
			server_exam[i][prizes] = cache_get_field_content_int(i, "e_prize", sql_connection);
			cache_get_field_content(i, "e_name", server_exam[i][names], sql_connection, 25);
		}
		printf("[SERVER] Загружено %d топ навыков на водн./возд. транспорт.", rows);
	}
	else print("[SERVER] Топ навыков на водн./возд. транспорт не был найден в базе данных.");
	return 1;
}

callback: fractions_loading()
{
	new fields;
	cache_get_data(fraction_count, fields);
	new str_to_hex[28];
	if(fraction_count)
	{
		for(new i = 0; i < fraction_count; i++)
		{
			f_info[i][f_id] = cache_get_field_content_int(i, "f_id", sql_connection);
			cache_get_field_content(i, "f_name", f_info[i][f_name], sql_connection, 48);

			f_info[i][f_money] = cache_get_field_content_int(i, "f_money", sql_connection);
			f_info[i][f_materials] = cache_get_field_content_int(i, "f_materials", sql_connection);
			f_info[i][f_drugs] = cache_get_field_content_int(i, "f_drugs", sql_connection);
			f_info[i][f_guns] = cache_get_field_content_int(i, "f_guns", sql_connection);
			f_info[i][f_dorm_status] = cache_get_field_content_int(i, "f_dorm_status", sql_connection);

			cache_get_field_content(i, "f_leader_name", f_info[i][f_leader_name], sql_connection, MAX_PLAYER_NAME);
			cache_get_field_content(i, "f_chat_color", f_info[i][f_chat_color], sql_connection, 28);
			cache_get_field_content(i, "f_radar_color", str_to_hex, sql_connection, 28);
			f_info[i][f_radar_color] = StrToHex(str_to_hex);

			global_string[0] = EOS;
			cache_get_field_content(i, "f_spawn", global_string), sscanf(global_string, "p<|>ffffdd",
			f_info[i][f_spawn][0], f_info[i][f_spawn][1], f_info[i][f_spawn][2], f_info[i][f_spawn][3],
			f_info[i][f_spawn_int], f_info[i][f_spawn_virt]);


			global_string[0] = EOS;
			if(i > 17 && i < 26)
			{
				cache_get_field_content(i, "f_dip", global_string), sscanf(global_string, "p<|>dddddddd",
				f_diplomacy[i -18][0], f_diplomacy[i -18][1], f_diplomacy[i -18][2],
				f_diplomacy[i -18][3], f_diplomacy[i -18][4], f_diplomacy[i -18][5],
				f_diplomacy[i -18][6], f_diplomacy[i -18][7]);
			}
			global_string[0] = EOS;
			cache_get_field_content(i, "f_ranks", global_string), sscanf(global_string, "p<|>s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]",
			f_rank[i][0], f_rank[i][1], f_rank[i][2], f_rank[i][3],
			f_rank[i][4], f_rank[i][5], f_rank[i][6], f_rank[i][7],
			f_rank[i][8], f_rank[i][9], f_rank[i][10], f_rank[i][11],
			f_rank[i][12], f_rank[i][13], f_rank[i][14], f_rank[i][15]);

			global_string[0] = EOS;
			cache_get_field_content(i, "f_salary", global_string), sscanf(global_string, "p<|>dddddddddddddddd",
			f_info[i][f_rank_salary][0], f_info[i][f_rank_salary][1], f_info[i][f_rank_salary][2],
			f_info[i][f_rank_salary][3], f_info[i][f_rank_salary][4], f_info[i][f_rank_salary][5],
			f_info[i][f_rank_salary][6], f_info[i][f_rank_salary][7], f_info[i][f_rank_salary][8],
			f_info[i][f_rank_salary][9], f_info[i][f_rank_salary][10], f_info[i][f_rank_salary][11],
			f_info[i][f_rank_salary][12], f_info[i][f_rank_salary][13], f_info[i][f_rank_salary][14],
			f_info[i][f_rank_salary][15]);

			global_string[0] = EOS;
			cache_get_field_content(i, "f_skins_m", global_string), sscanf(global_string, "p<|>dddddddddddddddd",
			f_skin[i][0][0], f_skin[i][0][1], f_skin[i][0][2], f_skin[i][0][3],
			f_skin[i][0][4], f_skin[i][0][5], f_skin[i][0][6], f_skin[i][0][7],
			f_skin[i][0][8], f_skin[i][0][9], f_skin[i][0][10], f_skin[i][0][11],
			f_skin[i][0][12], f_skin[i][0][13], f_skin[i][0][14], f_skin[i][0][15]);

			global_string[0] = EOS;
			cache_get_field_content(i, "f_skins_f", global_string), sscanf(global_string, "p<|>dddddddddddddddd",
			f_skin[i][1][0], f_skin[i][1][1], f_skin[i][1][2], f_skin[i][1][3],
			f_skin[i][1][4], f_skin[i][1][5], f_skin[i][1][6], f_skin[i][1][7],
			f_skin[i][1][8], f_skin[i][1][9], f_skin[i][1][10], f_skin[i][1][11],
			f_skin[i][1][12], f_skin[i][1][13], f_skin[i][1][14], f_skin[i][1][15]);

			global_string[0] = EOS;
			cache_get_field_content(i, "f_rank_settings", global_string), sscanf(global_string, "p<|>ddddd",
			f_info[i][f_rank_settings][0], f_info[i][f_rank_settings][1], f_info[i][f_rank_settings][2], f_info[i][f_rank_settings][3],
			f_info[i][f_rank_settings][4]);

		}
		printf("[SERVER] Загружено %d фракций.", fraction_count);
	}
	else print("[SERVER] Фракции не были найдены в базе данных.");

	for(new i; i < sizeof(dorm_pos); i ++)
	{
		if(dorm_pos[i][0] + dorm_pos[i][1] + dorm_pos[i][2] != 0.0)
		{
		    new t_string[232];
			dorm_area[i] = CreateDynamicSphere(dorm_pos[i][0], dorm_pos[i][1], dorm_pos[i][2] + 1, 0.8, f_info[i + 17][f_spawn_virt]);
			CreateDynamicCP(dorm_pos[i][0], dorm_pos[i][1], dorm_pos[i][2], 1.0, f_info[i + 17][f_spawn_virt], f_info[i + 17][f_spawn_int], -1, 10.0);
			format(t_string,sizeof(t_string),"\
			*** Общак ***\n\n\
			"c_grey"Наркотики:"c_white" \t%d/10000 гр.\n\
			"c_grey"Боеприпасы:"c_white" \t%d/50000 пт.\n\
			"c_grey"Ед.оружия:"c_white" \t%d/50000\n\
			"c_grey"Деньги:"c_white" \t%d$",
			f_info[i + 17][f_drugs],
			f_info[i + 17][f_materials],
			f_info[i + 17][f_guns],
			f_info[i + 17][f_money]);
			gdorm_text[i] = CreateDynamic3DTextLabel(t_string, col_blue, dorm_pos[i][0], dorm_pos[i][1], dorm_pos[i][2] + 1, 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, f_info[i + 17][f_spawn_virt], f_info[i + 17][f_spawn_int]);
		}
	}
	return 1;
}

callback: vehicles_loading()
{
	new fields;
	cache_get_data(vehicle_count, fields);
	
	if(vehicle_count)
	{
		for(new i = 0; i < vehicle_count; i++)
		{
			veh_info[i][v_id] = cache_get_field_content_int(i, "sv_id", sql_connection);
			veh_info[i][v_model] = cache_get_field_content_int(i, "sv_model", sql_connection);
			veh_info[i][v_type] = cache_get_field_content_int(i, "sv_type", sql_connection);
			veh_info[i][v_owner] = cache_get_field_content_int(i, "sv_owner", sql_connection);
			veh_info[i][v_color][0] = cache_get_field_content_int(i, "sv_color_1", sql_connection);
			veh_info[i][v_color][1] = cache_get_field_content_int(i, "sv_color_2", sql_connection);

			cache_get_field_content(i, "sv_plate", veh_info[i][v_plate], sql_connection, 12);
			veh_info[i][v_fuel] = cache_get_field_content_float(i,"sv_fuel", sql_connection);
			veh_info[i][v_millage] = cache_get_field_content_float(i,"sv_millage", sql_connection);
			veh_info[i][v_rank] = cache_get_field_content_int(i, "sv_rank", sql_connection);


			veh_info[i][v_pos][0] = cache_get_field_content_float(i,"sv_pos_x", sql_connection);
			veh_info[i][v_pos][1] = cache_get_field_content_float(i,"sv_pos_y", sql_connection);
			veh_info[i][v_pos][2] = cache_get_field_content_float(i,"sv_pos_z", sql_connection);
			veh_info[i][v_pos][3] = cache_get_field_content_float(i,"sv_pos_a", sql_connection);

			veh_info[i][v_locked] = false;
			veh_info[i][v_fuel] = 35.0;

            if(veh_info[i][v_owner] == job_forklift)veh_info[i][v_fuel] = 100.0;
			veh_info[i][v_vehicle] = AddStaticVehicleEx(veh_info[i][v_model], veh_info[i][v_pos][0], veh_info[i][v_pos][1], veh_info[i][v_pos][2], veh_info[i][v_pos][3], veh_info[i][v_color][0], veh_info[i][v_color][1], 600);
			SetVehicleNumberPlate(veh_info[i][v_vehicle], veh_info[i][v_plate]);


			if(veh_info[i][v_owner] >= 4 && veh_info[i][v_owner] <= 6 && veh_info[i][v_type] == vehicle_type_server)
			{
				veh_info[i][v_engine_boost] = 0.28;
				veh_info[i][v_brake_boost] = 9;
			}

			SetVehicleNumberPlate(veh_info[i][v_vehicle], veh_info[i][v_plate]);
			if(veh_info[i][v_model] == 578)
			{
				new v_object = CreateDynamicObject(3287,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				SetDynamicObjectMaterial(v_object, 0, 19962, "samproadsigns", "materialtext1", 0);
				SetDynamicObjectMaterial(v_object, 1, 19962, "samproadsigns", "materialtext1", 0);
				SetDynamicObjectMaterial(v_object, 2, 19962, "samproadsigns", "materialtext1", 0);
				SetDynamicObjectMaterial(v_object, 3, 14576, "mafiacasinovault01", "ab_vaultmetal", -9868951);
				AttachDynamicObjectToVehicle(v_object, veh_info[i][v_vehicle], 0.000, 0.120, 2.090, 0.000, 0.000, 0.000);
				v_object = CreateDynamicObject(1428,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				SetDynamicObjectMaterial(v_object, 0, 5704, "melrose07_lawn", "ws_conc_step1", -9868951);
				AttachDynamicObjectToVehicle(v_object, veh_info[i][v_vehicle], 0.000, -5.289, 1.228, 10.000, 0.000, 0.000);
				v_object = CreateDynamicObject(9131,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				SetDynamicObjectMaterial(v_object, 0, 5704, "melrose07_lawn", "ws_conc_step1", -9868951);
				AttachDynamicObjectToVehicle(v_object, veh_info[i][v_vehicle], 0.000, 0.130, 2.280, 0.000, 0.000, 0.000);
				v_object = CreateDynamicObject(9131,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				SetDynamicObjectMaterial(v_object, 0, 5704, "melrose07_lawn", "ws_conc_step1", -9868951);
				AttachDynamicObjectToVehicle(v_object, veh_info[i][v_vehicle], 0.000, -2.771, 2.280, 0.000, 0.000, 0.000);
				v_object = CreateDynamicObject(1428,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				SetDynamicObjectMaterial(v_object, 0, 5704, "melrose07_lawn", "ws_conc_step1", -9868951);
				AttachDynamicObjectToVehicle(v_object, veh_info[i][v_vehicle], 0.000, -2.233, 3.166, -75.000, 0.000, 0.000);
				v_object = CreateDynamicObject(1428,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				SetDynamicObjectMaterial(v_object, 0, 5704, "melrose07_lawn", "ws_conc_step1", -9868951);
				AttachDynamicObjectToVehicle(v_object, veh_info[i][v_vehicle], 0.000, -0.142, 3.158, -75.000, 0.000, 0.050);
				v_object = CreateDynamicObject(19866,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				SetDynamicObjectMaterial(v_object, 0, 5704, "melrose07_lawn", "ws_conc_step1", -9868951);
				AttachDynamicObjectToVehicle(v_object, veh_info[i][v_vehicle], 0.000, -1.371, -0.350, 0.000, 0.000, 0.000);
				v_object = CreateDynamicObject(19866,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				SetDynamicObjectMaterial(v_object, 0, 5704, "melrose07_lawn", "ws_conc_step1", -9868951);
				AttachDynamicObjectToVehicle(v_object, veh_info[i][v_vehicle], 0.000, -1.391, -0.360, 0.000, 0.000, 0.000);
				v_object = CreateDynamicObject(19363,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				SetDynamicObjectMaterial(v_object, 0, 5704, "melrose07_lawn", "ws_conc_step1", -9868951);
				AttachDynamicObjectToVehicle(v_object, veh_info[i][v_vehicle], 0.000, -3.830, 1.459, 0.000, 0.000, 90.000);
				v_object = CreateDynamicObject(19363,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				SetDynamicObjectMaterial(v_object, 0, 5704, "melrose07_lawn", "ws_conc_step1", -9868951);
				AttachDynamicObjectToVehicle(v_object, veh_info[i][v_vehicle], 0.000, 1.158, 1.459, 0.000, 0.000, -90.000);
				v_object = CreateDynamicObject(2983,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				SetDynamicObjectMaterial(v_object, 10, -1, "none", "none", -9868951);
				SetDynamicObjectMaterial(v_object, 10, -1, "none", "none", -9868951);
				SetDynamicObjectMaterial(v_object, 10, -1, "none", "none", -9868951);
				AttachDynamicObjectToVehicle(v_object, veh_info[i][v_vehicle], 0.000, 0.170, 3.070, 270.000, 0.000, 0.000);
				v_object = CreateDynamicObject(2983,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				SetDynamicObjectMaterial(v_object, 11, -1, "none", "none", -9868951);
				SetDynamicObjectMaterial(v_object, 11, -1, "none", "none", -9868951);
				SetDynamicObjectMaterial(v_object, 11, -1, "none", "none", -9868951);
				AttachDynamicObjectToVehicle(v_object, veh_info[i][v_vehicle], 0.000, -2.730, 3.070, 270.000, 0.000, 0.000);
			}
		}
	}
	printf("[SERVER] Загружено %d автомобилей.", vehicle_count);
   	return 1;
}

callback: server_variables_loading()
{
	new fields, rows;
	cache_get_data(rows, fields);

	//new lock_status;
	if(rows)
	{
        for(new t = 0; t < rows; t ++)
        {
			switch(t)
			{
				case 0:dorm_count[DORM_SAWMILL] = cache_get_field_content_int(t, "var_count", sql_connection);
				case 1:dorm_count[DORM_MINE] = cache_get_field_content_int(t, "var_count", sql_connection);
				case 2:dorm_count[DORM_FACTORY_GUNS] = cache_get_field_content_int(t, "var_count", sql_connection);
				case 3:mine_count[MINE_MELTED] = cache_get_field_content_int(t, "var_count", sql_connection);
				case 4:mine_count[MINE_UNMELTED] = cache_get_field_content_int(t, "var_count", sql_connection);
				case 5:dorm_count[DORM_FACTORY_MINE] = cache_get_field_content_int(t, "var_count", sql_connection);
				case 6:dorm_count[DORM_FACTORY_WOOD] = cache_get_field_content_int(t, "var_count", sql_connection);
				case 7:election_status = cache_get_field_content_int(t, "var_count", sql_connection);
				case 8:server_bonus = cache_get_field_content_int(t, "var_count", sql_connection);
				//case 9:lock_status = cache_get_field_content_int(t, "var_count", sql_connection);

				case 12..16:capture_gang_freezed[t -12] = cache_get_field_content_int(t, "var_count", sql_connection);
			}
		}
//		if(lock_status != 0)SendRconCommand("password testatt");

		if(election_status != 0)
		{
			election_pickup = CreateDynamicPickup(19134, 23, 1582.4055,-1574.5140,1004.6200);
			pick_info[election_pickup][pick_type] = pick_type_server;


			election_text = Create3DTextLabel("** Выборы **", col_blue,1582.4055,-1574.5140,1004.6200,20.0,-1,-1);
		}


		new dorm_string[238];
		if(server_bonus > 1)
		{
			format(dorm_string, 86, "hostname Elive Role Play | Акция х%d", server_bonus);
			SendRconCommand(dorm_string);
		}
		else SendRconCommand("hostname Elive Role Play");




		format(dorm_string, sizeof(dorm_string), "** Состояние склада **\n"c_grey"Заготовки:"c_white" %i/1000000\n"c_grey"Металл:"c_white" %i/1000000\n"c_grey"Древесина:"c_white" %i/1000000",
														dorm_count[DORM_FACTORY_GUNS],
														dorm_count[DORM_FACTORY_MINE],
														dorm_count[DORM_FACTORY_WOOD]);

		dorm_text[DORM_FACTORY] = CreateDynamic3DTextLabel(dorm_string, col_blue, -18.8481,-272.7238,5.4297, 38.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
//		CreateDynamic3DTextLabel("{FFCD00}\tПосигнальте (`H`), чтобы разгрузиться", -1, -1042.2975,-681.3009,32.0126, 38.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);

		format(dorm_string, 76, ""c_server"** Древесина **\n"c_grey"Кол-во на складе:"c_white" %i кг.", dorm_count[DORM_SAWMILL]);
		dorm_text[DORM_SAWMILL] = CreateDynamic3DTextLabel(dorm_string, 0xFFCD00FF, -1116.3190, -1655.1364, 77.3278, 38.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);





		format(dorm_string, 76, ""c_server"** Металл **\n"c_grey"Кол-во на складе:"c_white" %i кг.", dorm_count[DORM_MINE]);
		dorm_text[DORM_MINE] = CreateDynamic3DTextLabel(dorm_string, 0xFFCD00FF, 655.3007,869.1117,-42.0791, 38.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);

		loading_area[DORM_FACTORY] = CreateDynamicSphere(-117.2966, -320.5717, 1.4219, 10.0, -1, -1);
		loading_area[DORM_SAWMILL] = CreateDynamicSphere(-1088.2982, -1630.4126, 76.3672, 10.0, -1, -1);
		loading_area[DORM_MINE] = CreateDynamicSphere(655.3007,869.1117,-42.0791, 10.0, -1, -1);
		factory_unloading_area = CreateDynamicSphere(-18.8481, -272.7238, 5.4297, 10.0, -1, -1);
		port_unloading_area = CreateDynamicSphere(2783.1785,-2391.0684,13.2751, 7.5, -1, -1);

		loading_free_area[DORM_FACTORY] = CreateDynamicSphere(-151.8981,-332.6795,2.0635, 15.0, -1, -1);
		loading_free_area[DORM_SAWMILL] = CreateDynamicSphere(-1100.1698, -1667.6442, 76.9964, 15.0, -1, -1);
		loading_free_area[DORM_MINE] = CreateDynamicSphere(596.1334,829.2231,-42.3389, 15.0, -1, -1);




		format(dorm_string, 134, "\
		"c_server"** Переплавка **\n\
		"c_grey"Руда: "c_white"%d кг.\n\
		"c_grey"Металл: "c_white"%d кг.", mine_count[MINE_UNMELTED], mine_count[MINE_MELTED]);
		mine_text = CreateDynamic3DTextLabel(dorm_string, -1, 589.9409,870.0306,-42.4973, 28.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);




		for(new i; i < 10; i ++)
		{
			dorm_queue[DORM_FACTORY][i] = INVALID_PLAYER_ID;
			dorm_queue[DORM_SAWMILL][i] = INVALID_PLAYER_ID;
			dorm_queue[DORM_MINE][i] = INVALID_PLAYER_ID;
		}




		text_dorm_queue[DORM_SAWMILL] = CreateDynamic3DTextLabel(""c_server"** Очередь на загрузку **", -1, -1088.2982, -1630.4126, 76.3672, 38.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
		text_dorm_queue[DORM_MINE] = CreateDynamic3DTextLabel(""c_server"** Очередь на загрузку **", -1, 660.0589,864.5703,-42.4104, 38.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
		text_dorm_queue[DORM_FACTORY] = CreateDynamic3DTextLabel(""c_server"** Очередь на загрузку **", -1, -117.1780,-315.8277,2.7646, 38.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);

		for(new i = 0; i < 3; i ++)
		{
			loading_playerid[i] = INVALID_PLAYER_ID;
		}

	}
	return 1;
}

callback: server_info_loading()
{
	new fields, rows;
	cache_get_data(rows, fields);
	if(!rows) return 1;
	gunrow = cache_get_field_content_int(0, "serv_nelegal_gun", sql_connection);
	drugsrow = cache_get_field_content_int(0, "serv_nelegal_drugs", sql_connection);
	return 1;
}

callback: gangzones_loading()
{
	new fields;
	cache_get_data(gz_count, fields);
	if(gz_count)
	{
        for(new t = 0; t < gz_count; t ++)
        {
			gz_info[t][gz_id] = cache_get_field_content_int(t, "gz_id", sql_connection);
			gz_info[t][gz_owner] = cache_get_field_content_int(t, "gz_owner", sql_connection);

			gz_info[t][gz_pos][0] = cache_get_field_content_float(t, "gz_x", sql_connection);
			gz_info[t][gz_pos][1] = cache_get_field_content_float(t, "gz_y", sql_connection);
			gz_info[t][gz_pos][2] = cache_get_field_content_float(t, "gz_z", sql_connection);
			gz_info[t][gz_pos][3] = cache_get_field_content_float(t, "gz_a", sql_connection);

			gz_info[t][gz_created] = GangZoneCreate(gz_info[t][gz_pos][0],
															gz_info[t][gz_pos][1],
															gz_info[t][gz_pos][2],
															gz_info[t][gz_pos][3]);

		}
	}
	printf("[SERVER] Загружено %d гангзон.", gz_count);
	return 1;
}

callback: check_mc()
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new _mc_id = cache_get_field_content_int(0, "mc_id", sql_connection);
		new _t_string[72];
		mysql_format(sql_connection, _t_string, 72,"DELETE FROM `users_medcards` WHERE `mc_id` = '%d' LIMIT 1", _mc_id);
		mysql_tquery(sql_connection, _t_string);
	}
	return 1;
}

callback: deposit_boxes_callback(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		show_dialog(playerid, d_bank_control, DIALOG_STYLE_LIST, ""c_server"Управление счетами", "Основной счёт", "Выбрать", "Назад");
	}
	else
	{
		new dialog_string[168],
			_db_name[32],
			line_string[56];


		strcat(dialog_string, "Основной счёт\n");
        for(new j = 0; j < rows; j ++)
        {
			new _db_id = cache_get_field_content_int(j, "db_id", sql_connection);

			cache_get_field_content(j, "db_name", _db_name, sql_connection, 32);


			format(line_string, 14, "deposit_%d", j + 1);
			SetPVarInt(playerid, line_string, _db_id);

			format(line_string, 16, "n_deposit_%d", j + 1);
			SetPVarString(playerid, line_string, _db_name);


			format(line_string, sizeof(line_string), "%s(№%d)\n", _db_name, _db_id);
			strcat(dialog_string, line_string);

		}
		show_dialog(playerid, d_bank_control, DIALOG_STYLE_LIST, ""c_server"Управление счетами", dialog_string, "Выбрать", "Назад");
	}
	return 1;
}

callback: deposit_pincode_callback(playerid, deposit_id)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		new sql_string[96];
		mysql_format(sql_connection, sql_string, 96, "SELECT * FROM `deposit_boxes` WHERE `db_owner` = '%d' LIMIT 3",
		PlayerInfo[playerid][id]);
		mysql_tquery(sql_connection, sql_string, "deposit_boxes_callback", "i", playerid);
		SendClientMessage(playerid, col_gray, "Неверный пин-код.");
		return 1;
	}
	new _db_id = cache_get_field_content_int(0, "db_id", sql_connection),
		_db_name[32],
		_db_money = cache_get_field_content_int(0, "db_money", sql_connection);

	cache_get_field_content(0, "db_name", _db_name, sql_connection, 32);

	new header_string[78];
	format(header_string, sizeof(header_string), ""c_server"%s(№%d)", _db_name, _db_id);
	show_dialog(playerid, d_row_deposit, DIALOG_STYLE_LIST, header_string, "Информация о счете\nПеревод денег на другой счет\nПоложить деньги\nСнять деньги\nПополнить баланс телефона", "Выбрать", "Назад");

	SetPVarInt(playerid, "p_db_id", _db_id);
	SetPVarInt(playerid, "p_db_money", _db_money);
	SetPVarString(playerid, "p_db_name", _db_name);
	return 1;
}

callback: check_deposit_box(playerid, _db_id)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		show_dialog(playerid, d_deposit_transfer_id, DIALOG_STYLE_INPUT, ""c_server"Перевод денег на другой счет", ""c_white"Введите номер счета:", "Принять", "Назад");
		SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Счет с данным номером не найден.");
		return 1;
	}
	new _t_string[78];
	format(_t_string, sizeof(_t_string), ""c_white"Введите количество денег, которое хотите перевести на №%d", _db_id);
	show_dialog(playerid, d_deposit_transfer_money, DIALOG_STYLE_INPUT, ""c_server"Перевод денег на другой счет", _t_string, "Принять", "Назад");

	SetPVarInt(playerid, "todb_id", _db_id);
	return 1;
}

callback: create_deposit_box(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows > 2) return SendClientMessage(playerid, col_gray, "У вас уже есть 3 открытых счета.");
	if(quest_status[playerid][3] == 1)
	{
		quest_status[playerid][3] = 2;
		SendClientMessage(playerid, col_succes, "Задание успешно выполнено. Отправляйтесь к одному из помощников, чтобы получить своё вознаграждение.");
		update_quest_data(playerid);
	}
	show_dialog(playerid, d_deposit_create_name, DIALOG_STYLE_INPUT, ""c_server"Открытие счета", ""c_white"Введите название вашего будущего счета:", "Принять", "Назад");
	return 1;
}















callback: load_player_vehicles(playerid)
{
	new fields,
		rows;

	cache_get_data(rows, fields);
	if(rows)
	{
		for(new i = 0; i < rows; i++)
		{
			new veh_id = GetVehicleID();

			veh_info[veh_id -1][v_type] = vehicle_type_player;

			veh_info[veh_id -1][v_id] = cache_get_field_content_int(i, "v_id", sql_connection);
			veh_info[veh_id -1][v_model] = cache_get_field_content_int(i, "v_model", sql_connection);
			veh_info[veh_id -1][v_owner] = cache_get_field_content_int(i, "v_owner", sql_connection);
			veh_info[veh_id -1][v_color][0] = cache_get_field_content_int(i, "v_color_1", sql_connection);
			veh_info[veh_id -1][v_color][1] = cache_get_field_content_int(i, "v_color_2", sql_connection);


			cache_get_field_content(i, "v_plate", veh_info[veh_id -1][v_plate], sql_connection, 12);
			veh_info[veh_id -1][v_fuel] = cache_get_field_content_float(i,"v_fuel", sql_connection);
			veh_info[veh_id -1][v_millage] = cache_get_field_content_float(i,"v_millage", sql_connection);

			veh_info[veh_id -1][v_rank] = 0;

			veh_info[veh_id -1][v_pos][0] = cache_get_field_content_float(i,"v_pos_x", sql_connection);
			veh_info[veh_id -1][v_pos][1] = cache_get_field_content_float(i,"v_pos_y", sql_connection);
			veh_info[veh_id -1][v_pos][2] = cache_get_field_content_float(i,"v_pos_z", sql_connection);
			veh_info[veh_id -1][v_pos][3] = cache_get_field_content_float(i,"v_pos_a", sql_connection);


			veh_info[veh_id -1][v_engine_boost] = cache_get_field_content_float(i,"v_engine_boost", sql_connection);
			veh_info[veh_id -1][v_brake_boost] = cache_get_field_content_float(i,"v_brake_boost", sql_connection);
			veh_info[veh_id -1][v_stability_boost] = cache_get_field_content_float(i,"v_stability_boost", sql_connection);


			veh_info[veh_id -1][v_vw] = cache_get_field_content_int(i, "v_vw", sql_connection);
			veh_info[veh_id -1][v_int] = cache_get_field_content_int(i, "v_int", sql_connection);

			veh_info[veh_id -1][v_fine] = cache_get_field_content_int(i, "v_fine", sql_connection);


			if(veh_info[veh_id -1][v_fine] > 0)
			{
				new _random = random(4);
				for(new j = 0; j < 4; j ++)
				{
					veh_info[veh_id -1][v_pos][j] = fine_pos[_random][j];
				}
				new scm_string[228];

				format(scm_string, 228, "UPDATE `users_vehicles` SET `v_fine`='0',`v_pos_x` = '%.2f', `v_pos_y` = '%.2f', `v_pos_z` = '%.2f',`v_pos_a` = '%.2f',`v_vw` = '%d',`v_int` = '%d' WHERE `v_id` = '%d'",
				veh_info[veh_id -1][v_pos][0], veh_info[veh_id -1][v_pos][1], veh_info[veh_id -1][v_pos][2], veh_info[veh_id -1][v_pos][3],
				veh_info[veh_id -1][v_vw], veh_info[veh_id -1][v_int],
				veh_info[veh_id -1][v_id]);
				mysql_tquery(sql_connection, scm_string);
			}

			new sscanf_delimit[128];
			cache_get_field_content(i, "v_eng_details", sscanf_delimit, sql_connection, 16);
			sscanf(sscanf_delimit, "p<|>ddddd", veh_info[veh_id -1][v_pt_engine][0], veh_info[veh_id -1][v_pt_engine][1],
			veh_info[veh_id -1][v_pt_engine][2], veh_info[veh_id -1][v_pt_engine][3], veh_info[veh_id -1][v_pt_engine][4]	);

			cache_get_field_content(i, "v_brake_details", sscanf_delimit, sql_connection, 16);
			sscanf(sscanf_delimit, "p<|>ddddd", veh_info[veh_id -1][v_pt_brake][0], veh_info[veh_id -1][v_pt_brake][1],
			veh_info[veh_id -1][v_pt_brake][2], veh_info[veh_id -1][v_pt_brake][3], veh_info[veh_id -1][v_pt_brake][4]	);

			cache_get_field_content(i, "v_stab_details", sscanf_delimit, sql_connection, 16);
			sscanf(sscanf_delimit, "p<|>ddddd", veh_info[veh_id -1][v_pt_stability][0], veh_info[veh_id -1][v_pt_stability][1],
			veh_info[veh_id -1][v_pt_stability][2], veh_info[veh_id -1][v_pt_stability][3], veh_info[veh_id -1][v_pt_stability][4]	);

			cache_get_field_content(i, "v_components", sscanf_delimit, sql_connection, 128);
			sscanf(sscanf_delimit, "p<|>dddddddddd", veh_info[veh_id -1][v_component][0], veh_info[veh_id -1][v_component][1],
			veh_info[veh_id -1][v_component][2], veh_info[veh_id -1][v_component][3], veh_info[veh_id -1][v_component][4],
			veh_info[veh_id -1][v_component][5], veh_info[veh_id -1][v_component][6], veh_info[veh_id -1][v_component][7],
			veh_info[veh_id -1][v_component][8], veh_info[veh_id -1][v_component][9]);

			veh_info[veh_id -1][v_gps_tracker] = cache_get_field_content_int(i, "v_gps_tracker", sql_connection);


			veh_info[veh_id -1][v_vehicle] = CreateVehicle(veh_info[veh_id -1][v_model], veh_info[veh_id -1][v_pos][0], veh_info[veh_id -1][v_pos][1], veh_info[veh_id -1][v_pos][2], veh_info[veh_id -1][v_pos][3], veh_info[veh_id -1][v_color][0], veh_info[veh_id -1][v_color][1], -1);
			SetVehicleNumberPlate(veh_info[veh_id -1][v_vehicle], veh_info[veh_id -1][v_plate]);




			veh_info[veh_id -1][v_paint] = cache_get_field_content_int(i, "v_paint", sql_connection);
			if(veh_info[veh_id -1][v_paint] != 3)
			{
				ChangeVehiclePaintjob(veh_id, veh_info[veh_id -1][v_paint]);
			}

			if(veh_info[veh_id -1][v_int] != 0)LinkVehicleToInterior(veh_info[veh_id -1][v_vehicle], veh_info[veh_id -1][v_int]);
			if(veh_info[veh_id -1][v_vw] != 0)SetVehicleVirtualWorld(veh_info[veh_id -1][v_vehicle], veh_info[veh_id -1][v_vw]);


			for(new j = 0; j < 10; j ++)
			{
				AddVehicleComponent(veh_info[veh_id -1][v_vehicle], veh_info[veh_id -1][v_component][j]);
			}

			Iter_Add(player_vehicles[playerid], veh_info[veh_id -1][v_vehicle]);

			new engine, lights, alarm, doors, bonnet, boot, objective;
			veh_info[veh_id -1][v_locked] = true;
			GetVehicleParamsEx(veh_id, engine, lights, alarm, doors, bonnet, boot, objective);
			SetVehicleParamsEx(veh_id, engine, lights, alarm, true, bonnet, boot, objective);

		}
	}
	return 1;
}



callback: create_vehicle_callback(veh_id, playerid)
{
	veh_info[veh_id -1][v_id] = cache_insert_id();
	return 1;
}


callback: shop_sim_callback(playerid, pl_number)
{
	new fields,
		rows;

	cache_get_data(rows, fields);
	if(rows) return SendClientMessage(playerid, col_white, !""scm_error"Этот номер занят другим игроком."), ShowElectronicDialog(playerid);
	PlayerInfo[playerid][number] = pl_number;
	update_int_sql(playerid, "u_number", PlayerInfo[playerid][number]);
	new _t_string[102];
	format(_t_string, sizeof(_t_string), ""scm_sucess"Вы успешно изменили номер телефона. Новый номер: "c_gold"%d"c_white"." , PlayerInfo[playerid][number]);
	SendClientMessage(playerid, col_white, _t_string);

	new b = GetPVarInt(playerid, "p_biz_id")-1;

	b_info[b][b_product] -= b_electro_product[0];
	b_info[b][b_money] += b_electro_product[0] + floatround(b_electro_product[0]*(float(b_info[b][b_cost]) / 100));
	b_info[b][b_cash_today] += b_electro_product[0] + floatround(b_electro_product[0]*(float(b_info[b][b_cost]) / 100));

	ShowElectronicDialog(playerid);
	give_money(playerid, -b_electro_product[0] -floatround(b_electro_product[0]*(float(b_info[b][b_cost]) / 100)));
	insert_money_log(playerid, INVALID_PLAYER_ID, -b_electro_product[0] -floatround(b_electro_product[0]*(float(b_info[b][b_cost]) / 100)), "Покупка сим-карты");

	return 1;
}


callback: atm_loading ()
{
	new fields;
	cache_get_data(atm_count, fields);
	if(atm_count)
	{
        for(new t = 0; t < atm_count; t ++)
        {
			atm_info[t][atm_id] = cache_get_field_content_int(t, "atm_id", sql_connection);
			atm_info[t][atm_money] = cache_get_field_content_int(t, "atm_money", sql_connection);
			atm_info[t][atm_status] = cache_get_field_content_int(t, "atm_status", sql_connection);

			atm_info[t][atm_position][0] = cache_get_field_content_float(t, "atm_pos_x", sql_connection);
			atm_info[t][atm_position][1] = cache_get_field_content_float(t, "atm_pos_y", sql_connection);
			atm_info[t][atm_position][2] = cache_get_field_content_float(t, "atm_pos_z", sql_connection);
			atm_info[t][atm_position][3] = cache_get_field_content_float(t, "atm_pos_xr", sql_connection);
			atm_info[t][atm_position][4] = cache_get_field_content_float(t, "atm_pos_yr", sql_connection);
			atm_info[t][atm_position][5] = cache_get_field_content_float(t, "atm_pos_zr", sql_connection);

			new atm_object = CreateDynamicObject(2754, atm_info[t][atm_position][0], atm_info[t][atm_position][1], atm_info[t][atm_position][2], atm_info[t][atm_position][3], atm_info[t][atm_position][4], atm_info[t][atm_position][5], 0, 0, -1, 300.0);
			SetDynamicObjectMaterialText(atm_object, 2, "\nБанкомат\n \n \n \n \n ", OBJECT_MATERIAL_SIZE_256x256, "Tahoma", 48, 1, 0xFF000000, 0xFF87CEEB, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
			SetDynamicObjectMaterial(atm_object, 0, -1, "none", "none", 0xFFF0FFFF);
			CreateDynamic3DTextLabel("** Банкомат **\n"c_grey"Нажмите "c_white"Y"c_grey" для взаимодействия", col_blue, atm_info[t][atm_position][0], atm_info[t][atm_position][1], atm_info[t][atm_position][2], 4.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0);
		}
    }
	printf("[SERVER] Загружено %d банкоматов.", atm_count);
	return 1;
}

callback: bh_story(playerid)
{
	new fields,
		rows;
	cache_get_data(rows, fields);

	if(!rows) return SendClientMessage(playerid, col_white, !""scm_error"Информация о доходах не найдена.");

	else
	{
		dlobal_string[0] = EOS;

		for(new i = 0; i < rows; i ++)
		{
			new _bh_date[16], _bh_money;

 			_bh_money = cache_get_field_content_int(i, "bh_count", sql_connection);
			cache_get_field_content(i, "bh_date", _bh_date, sql_connection, 16);

			new line_string[60];
			format(line_string, sizeof(line_string), ""c_white"%s -"c_green"%d$\n", _bh_date, _bh_money);
			strcat(dlobal_string, line_string);
		}
		new line_string[55];
		format(line_string, sizeof(line_string), "\n"c_white"Доходы за сегодня: "c_green"%d$", b_info[PlayerInfo[playerid][business] -1][b_cash_today]);
		strcat(dlobal_string, line_string);
		
		show_dialog(playerid, d_b_story, DIALOG_STYLE_MSGBOX, !""scm_dialog"Доходы", dlobal_string, !"Назад", !"");
	}
	return 1;
}


callback:callback_offmembers(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Игроки с данными параметрами не найдены.");
		ShowLeaderMenu(playerid);
		DeletePVar(playerid, "ofm_list_page");
		return 1;
	}
	new rows_list = GetPVarInt(playerid, "ofm_list_page")-1;
	SetPVarInt(playerid, "ofm_list_rows", rows);
	new line_string[MAX_PLAYER_NAME + 37],
		pl_ofm_name[20],
		pl_ofm_rank,
		pl_ofm_online[16];

	new dialog_string[10 * sizeof(line_string) + 50];
	strcat(dialog_string, ""c_server"Предыдущая страница\n"c_server"Следующая страница\n");
	for(new i = rows_list * 10; i < rows_list * 10 + 10; i ++)
	{
		if(i >= rows) break;

		cache_get_field_content(i, "u_name", pl_ofm_name, sql_connection, 20);
		pl_ofm_rank = cache_get_field_content_int(i, "u_rank", sql_connection);
		cache_get_field_content(i, "u_last_online", pl_ofm_online, sql_connection, 16);

		new pvar_string[8];
		format(pvar_string, sizeof(pvar_string), "ofm_%d", i -rows_list * 10);
		SetPVarString(playerid, pvar_string, pl_ofm_name);

		format(line_string, sizeof(line_string), "%s"c_server"\t%s(%d)"c_white"\t%s\n", pl_ofm_name, f_rank[PlayerInfo[playerid][member] -1][pl_ofm_rank -1], pl_ofm_rank, pl_ofm_online);
		strcat(dialog_string, line_string);

	}

	show_dialog(playerid, d_offmembers_list, DIALOG_STYLE_TABLIST, ""c_server"Члены организации оффлайн", dialog_string, "Выбрать", "Назад");
	return 1;
}









callback: callback_offmembers_info(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new pl_rank, last_date[16], fraction_date[16];

		pl_rank = cache_get_field_content_int(0, "u_rank", sql_connection);
		cache_get_field_content(0, "u_last_date", last_date, sql_connection, 16);
		cache_get_field_content(0, "u_fraction_date", fraction_date, sql_connection, 16);

		new pvar_string[20], pl_name[20];
		format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, "ofm_listitem"));
		GetPVarString(playerid, pvar_string, pl_name, 20);

		new dialog_string[186];
		format(dialog_string, sizeof(dialog_string), ""c_white"Имя: "c_server"%s"c_white"\nРанг:"c_server"%s(%d)"c_white"\nВ организации с "c_server"%s"c_white"\nПоследний вход: "c_server"%s"c_white"", pl_name, f_rank[PlayerInfo[playerid][member] -1][pl_rank -1], pl_rank, fraction_date, last_date);
		show_dialog(playerid, d_offmembers_pl_menu_info, DIALOG_STYLE_MSGBOX, ""c_server"Информация об игроке", dialog_string, "Назад", "");
	}
	if(!rows)
	{
		new query_string[128];
		DeletePVar(playerid, "ofm_listitem");
		if(!GetPVarInt(playerid, "ofm_type"))
		{
			mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_name`,`u_rank`,`u_last_date` FROM `users` WHERE `u_member` = '%d' AND `u_online` = '0'", PlayerInfo[playerid][member]);
			mysql_tquery(sql_connection, query_string, "callback_offmembers", "i", playerid);
			return 1;
		}
		mysql_format(sql_connection, query_string, sizeof query_string, "SELECT `u_name`,`u_rank`,`u_last_date` FROM `users` WHERE `u_member` = '%d' AND `u_rank` = '%d' AND `u_online` = '0'", PlayerInfo[playerid][member], GetPVarInt(playerid, "ofm_type"));
		mysql_tquery(sql_connection, query_string, "callback_offmembers", "i", playerid);

	}
	return 1;
}


callback: ticket_list_callback(playerid)
{
	new fields,
		rows;

	cache_get_data(rows, fields);
	if(!rows)
	{
		show_dialog(playerid, d_atm, DIALOG_STYLE_LIST, ""c_server"Банкомат", "Управление картой\nПополнить баланс телефона\nОплата налогов\nОплата штрафов", "Далее", "Закрыть");
		return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет штрафов!"), DeletePVar(playerid, "ticket_list_page");
	}
	new rows_list = GetPVarInt(playerid, "ticket_list_page")-1;
	SetPVarInt(playerid, "ticket_list_rows", rows);
	new pl_ticket_count,
		pl_ticket_id;

	new dialog_string[10 * 72];
	strcat(dialog_string, ""c_server"Предыдущая страница\n"c_server"Следующая страница\n");
	for(new i = rows_list * 10; i < rows_list * 10 + 10; i ++)
	{
		if(i >= rows) break;

		pl_ticket_id = cache_get_field_content_int(i, "t_id", sql_connection);
		pl_ticket_count = cache_get_field_content_int(i, "t_count", sql_connection);

		new pvar_string[8];

		strcat(dialog_string, "Штраф "c_server"№-");
		valstr(pvar_string, pl_ticket_id);
		strcat(dialog_string, pvar_string);
		strcat(dialog_string, " "c_white" | Сумма:"c_server" ");
		valstr(pvar_string, pl_ticket_count);
		strcat(dialog_string, pvar_string);
		strcat(dialog_string, "$\n");

		format(pvar_string, sizeof(pvar_string), "tlc_%d", i -rows_list * 10);
		SetPVarInt(playerid, pvar_string, pl_ticket_id);
	}
	show_dialog(playerid, d_ticket_list, DIALOG_STYLE_TABLIST, ""c_server"Штрафы", dialog_string, "Выбрать", "Назад");
	return 1;
}



callback: callback_ticket_info(playerid)
{
	new rows,
		fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new ticket_count,
			ticket_date[16],
			ticket_reason[64],
			cop_name[MAX_PLAYER_NAME];

		ticket_count = cache_get_field_content_int(0, "t_count", sql_connection);
		cache_get_field_content(0, "t_reason", ticket_reason, sql_connection, 64);
		cache_get_field_content(0, "t_date", ticket_date, sql_connection, 16);
		cache_get_field_content(0, "t_cop_name", cop_name, sql_connection, 32);

		new dialog_string[186];
		if(GetString(cop_name, "None"))
		{
			format(dialog_string, sizeof(dialog_string), ""c_white"Сумма: "c_server"%d"c_white"\nПричина: "c_server"%s"c_white"\nДата штрафа: "c_server"%s\n\n{AFAFAF}Штраф выписан за нарушение скоростного режима",
	 		ticket_count, ticket_reason, ticket_date);
		}
		else
		{
			format(dialog_string, sizeof(dialog_string), ""c_white"Сумма: "c_server"%d"c_white"\nПричина: "c_server"%s"c_white"\nДата штрафа: "c_server"%s\n\n{AFAFAF}Протокол выписан сотрудником %s ",
			ticket_count, ticket_reason, ticket_date, cop_name);
		}
		show_dialog(playerid, d_ticket_stats, DIALOG_STYLE_MSGBOX, ""c_server"Информация о штрафе", dialog_string, "Назад", "");
	}
	if(!rows)
	{
		new query_string[60];
		format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
		mysql_tquery(sql_connection, query_string, "ticket_list_callback", "i", playerid);
	}
	return 1;
}
callback: callback_ticket_payment(playerid)
{
	new rows,
		fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new ticket_count;

		ticket_count = cache_get_field_content_int(0, "t_count", sql_connection);
		if(PlayerInfo[playerid][money] < ticket_count)
		{
			new query_string[60];
			format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, query_string, "ticket_list_callback", "i", playerid);
			return 1;
		}
		give_money(playerid, -ticket_count);
		new pvar_string[8],
			ticket_id,
			query_string[82];


		format(pvar_string, sizeof(pvar_string), "tlc_%d", GetPVarInt(playerid, "ticket_listitem"));
		ticket_id = GetPVarInt(playerid, pvar_string);
		mysql_format(sql_connection, query_string, sizeof query_string, "DELETE FROM `users_tickets` WHERE `t_id` = '%d' LIMIT 1", ticket_id);
		mysql_tquery(sql_connection, query_string, "");
		SendClientMessage(playerid, col_white, ""c_green"* "c_white"Штраф успешно оплачен.");
		show_dialog(playerid, d_atm, DIALOG_STYLE_LIST, ""c_server"Банкомат", "Управление картой\nПополнить баланс телефона\nОплата налогов\nОплата штрафов", "Далее", "Закрыть");

		f_info[10][f_money] += ticket_count;
		mysql_format(sql_connection, query_string, sizeof(query_string), "UPDATE `fractions` SET `f_money` = '%d' WHERE `f_id` = '11' LIMIT 1",
		f_info[10][f_money]);
		mysql_tquery(sql_connection, query_string, "", "");

	}
	if(!rows)
	{
		new query_string[60];
		format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
		mysql_tquery(sql_connection, query_string, "ticket_list_callback", "i", playerid);
	}
	return 1;
}









callback: bankticket_list_callback(playerid)
{
	new fields,
		rows;

	cache_get_data(rows, fields);
	if(!rows)
	{
		show_dialog(playerid, d_bank, DIALOG_STYLE_LIST, ""scm_dialog"Банк", ""c_server"1 | "c_white"Управление счетами\n"c_server"2 | "c_white"Открыть новый счёт\n"c_server"3 | "c_white"Пополнить баланс телефона\n"c_server"4 | "c_white"Оплата налогов\n"c_server"5 | "c_white"Оплата штрафов\n"c_server"6 | "c_white"Баланс организаций\n"c_server"7 | "c_white"Семейный счёт", "Выбрать", "Закрыть");
		return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет штрафов."), DeletePVar(playerid, "ticket_list_page");
	}
	new rows_list = GetPVarInt(playerid, "ticket_list_page")-1;
	SetPVarInt(playerid, "ticket_list_rows", rows);
	new pl_ticket_count,
		pl_ticket_id;

	new dialog_string[10 * 72];
	strcat(dialog_string, ""c_server"Предыдущая страница\n"c_server"Следующая страница\n");
	for(new i = rows_list * 10; i < rows_list * 10 + 10; i ++)
	{
		if(i >= rows) break;

		pl_ticket_id = cache_get_field_content_int(i, "t_id", sql_connection);
		pl_ticket_count = cache_get_field_content_int(i, "t_count", sql_connection);

		new pvar_string[8];

		strcat(dialog_string, "Штраф "c_server"№-");
		valstr(pvar_string, pl_ticket_id);
		strcat(dialog_string, pvar_string);
		strcat(dialog_string, " "c_white" | Сумма:"c_server" ");
		valstr(pvar_string, pl_ticket_count);
		strcat(dialog_string, pvar_string);
		strcat(dialog_string, "$\n");

		format(pvar_string, sizeof(pvar_string), "tlc_%d", i -rows_list * 10);
		SetPVarInt(playerid, pvar_string, pl_ticket_id);
	}
	show_dialog(playerid, d_bankticket_list, DIALOG_STYLE_TABLIST, ""c_server"Штрафы", dialog_string, "Выбрать", "Назад");
	return 1;
}


callback: callback_bankticket_info(playerid)
{
	new rows,
		fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new ticket_count,
			ticket_date[16],
			ticket_reason[42],
			cop_name[MAX_PLAYER_NAME];

		ticket_count = cache_get_field_content_int(0, "t_count", sql_connection);
		cache_get_field_content(0, "t_reason", ticket_reason, sql_connection, 42);
		cache_get_field_content(0, "t_date", ticket_date, sql_connection, 16);
		cache_get_field_content(0, "t_cop_name", cop_name, sql_connection, 16);

		new dialog_string[186];
		format(dialog_string, sizeof(dialog_string), ""c_white"Сумма: "c_server"%d"c_white"\nПричина: "c_server"%s"c_white"\nДата штрафа: "c_server"%s\n\n\t{AFAFAF}Протокол выписан сотрудником %s ",
		ticket_count, ticket_reason, ticket_date, cop_name);
		show_dialog(playerid, d_bankticket_stats, DIALOG_STYLE_MSGBOX, ""c_server"Информация о штрафе", dialog_string, "Назад", "");
	}
	if(!rows)
	{
		new query_string[60];
		format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
		mysql_tquery(sql_connection, query_string, "bankticket_list_callback", "i", playerid);
	}
	return 1;
}
callback: callback_bankticket_payment(playerid)
{
	new rows,
		fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new ticket_count;

		ticket_count = cache_get_field_content_int(0, "t_count", sql_connection);
		if(PlayerInfo[playerid][money] < ticket_count)
		{
			new query_string[60];
			format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, query_string, "bankticket_list_callback", "i", playerid);
			return 1;
		}
		give_money(playerid, -ticket_count);
		new pvar_string[8],
			ticket_id,
			query_string[82];

		f_info[10][f_money] += ticket_count;

		format(pvar_string, sizeof(pvar_string), "tlc_%d", GetPVarInt(playerid, "ticket_listitem"));
		ticket_id = GetPVarInt(playerid, pvar_string);
		mysql_format(sql_connection, query_string, sizeof query_string, "DELETE FROM `users_tickets` WHERE `t_id` = '%d' LIMIT 1", ticket_id);
		mysql_tquery(sql_connection, query_string, "");
		SendClientMessage(playerid, col_white, ""c_green"* "c_white"Штраф успешно оплачен.");
		show_dialog(playerid, d_bank, DIALOG_STYLE_LIST, ""scm_dialog"Банк", ""c_server"1 | "c_white"Управление счетами\n"c_server"2 | "c_white"Открыть новый счёт\n"c_server"3 | "c_white"Пополнить баланс телефона\n"c_server"4 | "c_white"Оплата налогов\n"c_server"5 | "c_white"Оплата штрафов\n"c_server"6 | "c_white"Баланс организаций\n"c_server"7 | "c_white"Семейный счёт", "Выбрать", "Закрыть");

		mysql_format(sql_connection, query_string, sizeof(query_string), "UPDATE `fractions` SET `f_money` = '%d' WHERE `f_id` = '11' LIMIT 1",
		f_info[10][f_money]);
		mysql_tquery(sql_connection, query_string, "", "");

	}
	if(!rows)
	{
		new query_string[60];
		format(query_string, sizeof query_string, "SELECT * FROM `users_tickets` WHERE `t_player` = '%d'", PlayerInfo[playerid][id]);
		mysql_tquery(sql_connection, query_string, "bankticket_list_callback", "i", playerid);
	}
	return 1;
}


callback: getinfo_order_callback(playerid)
{
	new rows,
		fields;
	cache_get_data(rows, fields);

	if(rows)
	{
		new order_products,
			order_price,
			order_date[16];

		order_products = cache_get_field_content_int(0, "bo_products", sql_connection);
		order_price = cache_get_field_content_int(0, "bo_price", sql_connection);
		cache_get_field_content(0, "bo_date", order_date, sql_connection, 16);

		format(global_string, 228, ""c_grey"Бизнес: "c_white"%s\n\
		"c_grey"Товар: "c_white"%d кг.\n\
		"c_grey"Полная стоимость: "c_white"%d$\n\
		"c_grey"Дата заказа: "c_white"%s",
		b_info[PlayerInfo[playerid][business] -1][b_name],
		order_products,
		order_price * order_products,
		order_date);
		show_dialog(playerid, d_order_info, DIALOG_STYLE_MSGBOX, ""c_server"Информация о заказе", global_string, "Назад", "");
	}
	else
	{
		show_dialog(playerid, d_bpanel_order, DIALOG_STYLE_LIST, ""c_server"Заказ продуктов", "1. Сделать заказ\n2. Отменить заказ\n3. Просмотреть заказ", "Выбрать", "Назад");
		return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас нет действующих заказов.");
	}
	return 1;
}


callback: check_order_callback(playerid, type)
{
	new rows,
		fields;
	cache_get_data(rows, fields);

	DisablePlayerRaceCheckpoint(playerid);
	if(rows)
	{
		if(type == 1)
		{
			show_dialog(playerid, d_bpanel_order, DIALOG_STYLE_LIST, ""c_server"Заказ продуктов", "1. Сделать заказ\n2. Отменить заказ\n3. Просмотреть заказ", "Выбрать", "Назад");
			return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Для начала необходимо отменить Ваш действующий заказ.");
		}
		else if(type == 2)
		{

			new string[68];
			format(string, sizeof(string), "DELETE FROM `businesses_orders` WHERE `bo_bid` = '%d'", PlayerInfo[playerid][business]);
			mysql_tquery(sql_connection, string, "", "");
			show_dialog(playerid, d_bpanel_order, DIALOG_STYLE_LIST, ""c_server"Заказ продуктов", "1. Сделать заказ\n2. Отменить заказ\n3. Просмотреть заказ", "Выбрать", "Назад");
			return SendClientMessage(playerid, col_white,""c_green"* "c_white"Вы успешно отменили заказ.");
		}
	}
	else
	{
		if(type == 1) return 	show_dialog(playerid, d_bpanel_priceorder, DIALOG_STYLE_INPUT, ""c_server"Заказ продуктов", ""c_white"Введите закупочную цену за единицу товара:", "Принять", "Назад");
		else if(type == 2)
		{
			show_dialog(playerid, d_bpanel_order, DIALOG_STYLE_LIST, ""c_server"Заказ продуктов", "1. Сделать заказ\n2. Отменить заказ\n3. Просмотреть заказ", "Выбрать", "Назад");
			return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У Вас нет действующих заказов.");
		}
	}
	return 1;
}

callback: order_end_callback(playerid)
{
	new rows,
		fields;
	cache_get_data(rows, fields);

	DisablePlayerRaceCheckpoint(playerid);
	if(rows)
	{
		new order_products,
			order_price,
			order_date[16];

		order_products = cache_get_field_content_int(0, "bo_products", sql_connection);
		order_price = cache_get_field_content_int(0, "bo_price", sql_connection);
		cache_get_field_content(0, "bo_date", order_date, sql_connection, 16);

		format(global_string, 228, ""c_server"\
		Доставка:\n\
		"c_grey"Бизнес: "c_white"%s\n\
		"c_grey"Товар: "c_white"%d кг.\n\
		"c_grey"Выплата: "c_white"%d$\n\
		"c_grey"Дата заказа: "c_white"%s",
		b_info[is_gps_used {playerid} -21][b_name],
		order_products,
		order_price * order_products,
		order_date);
		show_dialog(playerid, d_delivery_end, DIALOG_STYLE_MSGBOX, ""c_server"Информация о доставке", global_string, "Сдать", "Закрыть");
	}
	else if(!rows)
	{
		is_gps_used {playerid} = 0;
		SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Заказ был уже кем-то выполнен либо отменён.");
		return 1;
	}
	return 1;
}



callback: order_endaccept_callback(playerid)
{
	new rows,
		fields;
	cache_get_data(rows, fields);

	if(player_rentcar[playerid] == INVALID_VEHICLE_ID || player_rentcar[playerid] != player_vehicle[playerid]) return is_gps_used {playerid} = 0;


	if(rows)
	{
		new order_products,
			order_price;

		order_products = cache_get_field_content_int(0, "bo_products", sql_connection);
		order_price = cache_get_field_content_int(0, "bo_price", sql_connection);

		if(veh_info[player_vehicle[playerid] -1][v_cargo] >= order_products)
		{
			veh_info[player_vehicle[playerid] -1][v_cargo] -= order_products;
			b_info[is_gps_used {playerid} -21][b_product] += order_products;
			new string[118];
			format(string, sizeof(string), ""c_green"* "c_white"Вы разгрузили "c_green"%d/5000 кг."c_white" товара за "c_green"%d$"c_white".", order_products, order_products * order_price);
			SendClientMessage(playerid, col_white, string);
			give_money(playerid, order_products * order_price);
			insert_money_log(playerid, INVALID_PLAYER_ID, order_products * order_price, "доставка товаров");

			format(string, sizeof(string), "DELETE FROM `businesses_orders` WHERE `bo_bid` = '%d'",
			is_gps_used {playerid} -20);
			mysql_tquery(sql_connection, string, "", "");
		}
		else
		{
			order_products = veh_info[player_vehicle[playerid] -1][v_cargo];
			veh_info[player_vehicle[playerid] -1][v_cargo] = 0;
			b_info[is_gps_used {playerid} -21][b_product] += order_products;
			new string[118];
			format(string, sizeof(string), ""c_green"* "c_white"Вы разгрузили "c_green"%d/5000 кг."c_white" товара за "c_green"%d$"c_white".", order_products, order_products * order_price);
			SendClientMessage(playerid, col_white, string);

			give_money(playerid, order_products * order_price);
			insert_money_log(playerid, INVALID_PLAYER_ID, order_products * order_price, "доставка товаров");

			format(string, sizeof(string), "UPDATE `businesses_orders` SET `bo_products`=`bo_products`-'%d' WHERE `bo_bid` = '%d'",
			order_products, is_gps_used {playerid} -20);
			mysql_tquery(sql_connection, string, "", "");
		}
		is_gps_used {playerid} = 0;
	}
	else
	{
		is_gps_used {playerid} = 0;
		SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Заказ был уже кем-то выполнен либо отменён.");
		return 1;
	}
	return 1;
}

callback: order_get_callback(playerid)
{
	new rows,
		fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new order_bid = cache_get_field_content_int(0, "bo_bid", sql_connection)-1;

		SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно взяли заказ, бизнес отмечен в GPS, не забудьте загрузить товар.");
		is_gps_used {playerid} = 21 + order_bid;
		SetPlayerRaceCheckpoint(playerid, 1, b_info[order_bid][b_position][0], b_info[order_bid][b_position][1], b_info[order_bid][b_position][2] -1,0.0,0.0,0.0,4.0);
	}
	else
	{
		show_dialog(playerid, d_delivery_bid, DIALOG_STYLE_INPUT, ""c_server"Взять заказ", ""c_orange_red"* "c_grey"Данный заказ не найден в базе заказов.\n\n"c_white"Введите номер заказа, который желаете взять:", "Взять", "Назад");
	}
	return 1;
}


callback: order_list_callback(playerid)
{
	new rows,
		fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		global_string[0] = EOS;
		strcat(global_string, "{cccc99}Номер\tКол-во\t\tСумма\t\tБизнес\n\n"c_white"");

		new line_string[76];
		for(new i = 0; i < rows; i ++)
		{
			new order_id,
				order_products,
				order_price,
				order_bid;

			order_id = cache_get_field_content_int(i, "bo_id", sql_connection);
			order_products = cache_get_field_content_int(i, "bo_products", sql_connection);
			order_price = cache_get_field_content_int(i, "bo_price", sql_connection);
			order_bid = cache_get_field_content_int(i, "bo_bid", sql_connection);

			format(line_string, sizeof(line_string), "%d\t%d кг.\t\t%d$\t\t%s\n",
															order_id,
															order_products,
															order_price * order_products,
															b_info[order_bid -1][b_name]);
			strcat(global_string, line_string);
			if(i >= 32) break;
		}
		format(line_string, 54, ""c_server"Список заказов | Найдено"c_grey" %d", rows);
		show_dialog(playerid, d_delivery_list, DIALOG_STYLE_MSGBOX, line_string, global_string, "Назад", "");
		return 1;
	}
	if(!rows)
	{
		new d_string[110];
		format(d_string, sizeof(d_string), ""c_server"Товара в транспорте: "c_grey"%d кг.\n"c_white"Закупка товара\nСписок заказов\nВзять заказ",
		veh_info[GetPlayerVehicleID(playerid)-1][v_cargo]);
		show_dialog(playerid, d_delivery, DIALOG_STYLE_LIST, ""c_server"Доставка", d_string, "Выбрать", "Закрыть");
		return 1;
	}
	return 1;
}

callback: load_user_history(playerid)
{
	new rows,
		fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		global_string[0] = EOS;

		for(new i = 0; i < rows; i ++)
		{
			new //uh_id,
				uh_ip[16],
				uh_date[22];

			new line_string[62];
			//uh_id = cache_get_field_content_int(i, "uh_id", sql_connection);
			cache_get_field_content(i, "uh_ip", uh_ip, sql_connection, 16);
			cache_get_field_content(i, "uh_date", uh_date, sql_connection, 22);

			format(line_string, sizeof(line_string), ""c_white"%d."c_grey"\t%s\t%s\n",
															i + 1,
															uh_date,
															uh_ip);
			strcat(global_string, line_string);
		}
		show_dialog(playerid, d_security_history, DIALOG_STYLE_MSGBOX, ""c_server"История подключений", global_string, "Назад", "");
	}
	if(!rows)
	{
		show_security(playerid);
		SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"История подключений отсутствует, попробуйте позже");
		return 1;
	}
	return 1;
}
callback:gate_callback(type)
{
	switch(type)
	{
		case 0:MoveDynamicObject(army_gate[0], 285.988281, 1821.206420, 19.935199, 6.0, 0.0000, 0.0000, 90.0000);
		case 1:MoveDynamicObject(army_gate[1], 135.642791, 1941.488647, 21.622999, 6.0, 0.0000, 0.0000, 0.0000);
	}
}



callback: callback_gangtop_killers(playerid)
{
	new rows,
		fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		global_string[0] = EOS;

		for(new i = 0; i < rows; i ++)
		{
			new ut_capture_kills,
				ut_captures,
				ut_name[24];

			new line_string[146];
			ut_capture_kills = cache_get_field_content_int(i, "u_capture_kills", sql_connection);
			ut_captures = cache_get_field_content_int(i, "u_captures", sql_connection);
			cache_get_field_content(i, "u_name", ut_name, sql_connection, 24);

			format(line_string, sizeof(line_string), ""c_server"%d."c_white" %s\t"c_grey"Убийств: "c_white"%d\t"c_grey"Захватов: "c_white"%d\n",
															i + 1,
															ut_name,
															ut_capture_kills,
															ut_captures);
			strcat(global_string, line_string);
		}
		show_dialog(playerid, d_gangtop_info, DIALOG_STYLE_TABLIST, ""c_server"Лучшие стрелки", global_string, "Назад", "Закрыть");
	}
	return 1;
}


callback: callback_gangtop_captures(playerid)
{
	new rows,
		fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		global_string[0] = EOS;

		for(new i = 0; i < rows; i ++)
		{
			new ut_capture_start,
				ut_name[24];

			new line_string[146];
			ut_capture_start = cache_get_field_content_int(i, "u_capture_start", sql_connection);
			cache_get_field_content(i, "u_name", ut_name, sql_connection, 24);

			format(line_string, sizeof(line_string), ""c_server"%d."c_grey" %s\t"c_grey"Спровоцировал захватов территорий: "c_white"%d\n",
															i + 1,
															ut_name,
															ut_capture_start);
			strcat(global_string, line_string);
		}
		show_dialog(playerid, d_gangtop_info, DIALOG_STYLE_TABLIST, ""c_server"Топ захватчиков", global_string, "Назад", "Закрыть");
	}
	return 1;
}


callback:filling_timer(playerid, vehicle_id)
{
	if(GetPVarInt(playerid, "filling_timer") ==  0) return 1;
	if(player_vehicle[playerid] != vehicle_id)
	{
		SendClientMessage(playerid, col_gray, "* Вы покинули транспортное средство, заправка прекращена.");

		toggle_controlable(playerid, true, false);
		return KillTimer(GetPVarInt(playerid, "filling_timer")), DeletePVar(playerid, "filling_timer");
	}
	if(player_vehicle[playerid] == INVALID_VEHICLE_ID)
	{
		SendClientMessage(playerid, col_gray, "* Вы покинули транспортное средство, заправка прекращена.");

		toggle_controlable(playerid, true, false);
		return KillTimer(GetPVarInt(playerid, "filling_timer")), DeletePVar(playerid, "filling_timer");
	}
	if(filling_count {playerid} >= 5)
	{
		filling_count {playerid} -= 5;
		veh_info[player_vehicle[playerid] -1][v_fuel] += 5;
		if(filling_count {playerid} == 0)
		{
			SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно заправили Ваше транспортное средство.");
			toggle_controlable(playerid, true, false);
			KillTimer(GetPVarInt(playerid, "filling_timer")), DeletePVar(playerid, "filling_timer");
		}
	}
	else
	{
		new finish_count = floatround(veh_info[player_vehicle[playerid] -1][v_fuel] + filling_count {playerid});

		veh_info[player_vehicle[playerid] -1][v_fuel] = finish_count;
		filling_count {playerid} = 0;
		SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно заправили Ваше транспортное средство.");
		toggle_controlable(playerid, true, false);
		KillTimer(GetPVarInt(playerid, "filling_timer")), DeletePVar(playerid, "filling_timer");
	}
//	if(veh_info[player_vehicle[playerid] -1][v_fuel] > 100)veh_info[player_vehicle[playerid] -1][v_fuel] = 100;
	return 1;
}


callback: carry_timer(playerid)
{
	ApplyAnimation(playerid,"CARRY","crry_prtial", 4.1, 0, 1, 1, 1, 1);
	return 1;
}


callback: family_loading()
{
    new fields;
    cache_get_data(family_count, fields);
	if(family_count)
	{
		for(new f = 0; f < family_count; f++)
		{

			family_info[f][fam_id] = cache_get_field_content_int(f, "fam_id", sql_connection);
			family_info[f][fam_type] = cache_get_field_content_int(f, "fam_type", sql_connection);

			cache_get_field_content(f, "fam_name", family_info[f][fam_name], sql_connection, 68);
			cache_get_field_content(f, "fam_creator", family_info[f][fam_creator], sql_connection, MAX_PLAYER_NAME);

			family_info[f][fam_nationality] = cache_get_field_content_int(f, "fam_nationality", sql_connection);
			cache_get_field_content(f, "fam_chat_color", family_info[f][fam_chat_color], sql_connection, 8);

			new sscanf_string[380];
			cache_get_field_content(f, "fam_settings", sscanf_string, sql_connection, 64), sscanf(sscanf_string, "p<|>dddddddd", family_info[f][fam_settings][0], family_info[f][fam_settings][1], family_info[f][fam_settings][2], family_info[f][fam_settings][3], family_info[f][fam_settings][4], family_info[f][fam_settings][5], family_info[f][fam_settings][6], family_info[f][fam_settings][7]);
			cache_get_field_content(f, "fam_ranks", sscanf_string, sql_connection, 700), sscanf(sscanf_string, "p<|>s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]s[30]", family_rank[f][0], family_rank[f][1], family_rank[f][2], family_rank[f][3], family_rank[f][4], family_rank[f][5], family_rank[f][6], family_rank[f][7], family_rank[f][8], family_rank[f][9], family_rank[f][10], family_rank[f][11], family_rank[f][12], family_rank[f][13], family_rank[f][14], family_rank[f][15], family_rank[f][16], family_rank[f][17], family_rank[f][18], family_rank[f][19]);

			family_info[f][fam_bank] = cache_get_field_content_int(f, "fam_bank", sql_connection);
			family_info[f][fam_house] = cache_get_field_content_int(f, "fam_house", sql_connection);
			family_info[f][fam_members] = cache_get_field_content_int(f, "fam_members", sql_connection);
			family_info[f][fam_rating] = cache_get_field_content_int(f, "fam_rating", sql_connection);
			family_info[f][fam_ticket] = cache_get_field_content_int(f, "fam_ticket", sql_connection);
			family_info[f][fam_max_car] = cache_get_field_content_int(f, "fam_max_car", sql_connection);
		}
	}
	for(new i = 0; i < family_count; i ++)
	{
		new query_string[144];
		format(query_string, sizeof(query_string), "SELECT `u_family` FROM `users` WHERE `u_family`='%d'", i + 1);
		new Cache:_result = mysql_query(sql_connection, query_string);
		new count_members = cache_num_rows();
		cache_delete(_result);

		family_info[i][fam_members] = count_members;

		format(query_string, sizeof(query_string), "UPDATE `family` SET `fam_members`='%d' WHERE `fam_id`='%d' LIMIT 1", family_info[i][fam_members], i + 1);
		mysql_query(sql_connection, query_string);
	}
	return printf("[SERVER] Всего семей загружено: %d", family_count);
}


callback: callback_familylist(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	
    if(!rows)
    {
        SendClientMessage(playerid, col_white, !""scm_error"В архиве не найдено ни 1 семьи.");
        show_dialog(playerid, d_family_hall, DIALOG_STYLE_LIST, !""scm_dialog"Архив семей", !"Создать семью\nПереименовать семью\nСписок семей", !"Выбрать", !"Закрыть");
        return DeletePVar(playerid, !"ofm_list_page");
    }
    new rows_list = GetPVarInt(playerid, !"ofm_list_page") -1;
    SetPVarInt(playerid, !"ofm_list_rows", rows);

    new pl_f_name[68], pl_f_color[68];

    dlobal_string[0] = EOS;
    for(new i = rows_list * 10; i < rows_list * 10 + 10; i++)
    {
        if(i >= rows) break;
        
        cache_get_field_content(i, "fam_name", pl_f_name, sql_connection, 68);
        cache_get_field_content(i, "fam_chat_color", pl_f_color, sql_connection, 8);

        new line_string[80];
        format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s\n", i + 1, pl_f_name);
        strcat(dlobal_string, line_string);
    }
    return show_dialog(playerid, d_family_list, DIALOG_STYLE_MSGBOX, !""scm_dialog"Архив семей", dlobal_string, !"Назад", !"Далее");
}

callback: del_elections_list(playerid, inputtext[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new _t_string[108];
		format(_t_string, 98, "DELETE FROM `elections` WHERE `e_name` = '%s'", inputtext);
		mysql_tquery(sql_connection, _t_string);
		show_dialog(playerid, d_election, DIALOG_STYLE_LIST,""c_server"Управление выборами | Статус", "Выборы закрыты\nРегистрация кандидатов\nГолосование\nУдалить кандидатов\nУдалить кандидата", "Принять", "Закрыть");
		format(_t_string, 108, ""c_server"* A.INFO: "c_grey"%s удалил кандидата %s из списка.", PlayerInfo[playerid][name], inputtext);
		foreach(new i: admin_players)SendClientMessage(i, col_gray, _t_string);
		return 1;
	}
	SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Данный игрок не найден в списке кандидатов.");
	show_dialog(playerid, d_election_delete, DIALOG_STYLE_INPUT, ""c_server"Удалить кандидата", ""c_white"Введите имя игрока, которого хотите убрать из списка кандидатов:", "Принять", "Назад");
	return 1;
}


callback: elections_insert(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows >= 15) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Лимит кандидатов уже набран.");
	give_money(playerid, -250000);
	insert_money_log(playerid, INVALID_PLAYER_ID, -250000, "регистрация кандидата");

	new sql_string[76];
	format(sql_string, sizeof(sql_string), "INSERT INTO `elections` (e_name) VALUES ('%s')", PlayerInfo[playerid][name]);
	mysql_tquery(sql_connection, sql_string);

	SendClientMessage(playerid, col_white, ""c_green"* "c_white"Вы успешно зарегистрировали свою кандидатуру на выборы.");
	return 1;
}


callback: elections_msgbox(playerid)
{
	new rows, fields,
		dialog_string[15 * 56];


	cache_get_data(rows, fields);
	if(rows)
	{
		strcat(dialog_string, ""c_white"");

		for(new i = 0; i < rows; i ++)
		{
			new _candidate_name[MAX_PLAYER_NAME],
				_candidate_votes,
				line_string[56];


			cache_get_field_content(i, "e_name", _candidate_name, sql_connection, 20);
			_candidate_votes = cache_get_field_content_int(i, "e_votes", sql_connection);


			format(line_string, sizeof(line_string), "%d. %s [%d голосов]\n", i + 1, _candidate_name, _candidate_votes);
			strcat(dialog_string, line_string);

		}
		show_dialog(playerid, d_election_msgbox, DIALOG_STYLE_MSGBOX, ""c_server"Список кандидатов", dialog_string, "Назад", "Закрыть");
	}
	else return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Ещё не было подано ни одной кандидатуры.");
	return 1;
}

callback: elections_list(playerid)
{
	new rows, fields,
		dialog_string[15 * 56];


	cache_get_data(rows, fields);
	if(rows)
	{
		strcat(dialog_string, ""c_white"");

		for(new i = 0; i < rows; i ++)
		{
			new _candidate_name[MAX_PLAYER_NAME],
				_candidate_votes,
				line_string[56];


			cache_get_field_content(i, "e_name", _candidate_name, sql_connection, 20);
			_candidate_votes = cache_get_field_content_int(i, "e_votes", sql_connection);


			new pvar_string[8];
			format(pvar_string, sizeof(pvar_string), "el_%d", i);
			SetPVarString(playerid, pvar_string, _candidate_name);

			format(line_string, sizeof(line_string), "%d. %s [%d голосов]\n", i + 1, _candidate_name, _candidate_votes);
			strcat(dialog_string, line_string);

		}
		show_dialog(playerid, d_election_list, DIALOG_STYLE_LIST, ""c_server"Список кандидатов", dialog_string, "Выбрать", "Назад");
	}
	else return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Ещё не было подано ни одной кандидатуры.");
	return 1;
}


callback: crane_moving_second_step()
{
	MoveObject(crane_object[0][0], 2783.420166, -2470.333740, 13.623873, 6.0, 0.000, 0.000, 0.000);
	MoveObject(crane_magnit[0], 2848.952392, -2470.375976, 33.264030, 6.0, 0.000, 0.000, 0.000);
	SetTimer("crane_moving_third_step", 12000, false);
	return 1;
}

callback: crane_moving_third_step()
{
	crane_status[0] = true;
	return 1;
}

callback: _crane_moving_second_step()
{
	MoveObject(crane_object[1][0], 2783.420166, -2428.874023, 13.623873, 6.0, 0.000, 0.000, 0.000);
	MoveObject(crane_magnit[1], 2848.952392, -2428.916259, 33.264030, 6.0, 0.000, 0.000, 0.000);
	SetTimer("_crane_moving_third_step", 12000, false);
	return 1;
}

callback: _crane_moving_third_step()
{
	crane_status[1] = true;
	return 1;
}


callback: destroy_opened_container(cell_id)
{
	if(container_info[cell_id][con_object][0] != 0)DestroyDynamicObject(container_info[cell_id][con_object][0]);
	if(container_info[cell_id][con_object][1] != 0)DestroyDynamicObject(container_info[cell_id][con_object][1]);


	container_info[cell_id][con_status][0] = 0;
	container_info[cell_id][con_object][0] = 0;
	container_info[cell_id][con_status][1] = 0;
	container_info[cell_id][con_object][1] = 0;
	return 1;
}

callback: clear_hunger_td(playerid)
{
	if(!GetPVarInt(playerid, "hunger_td_active")) return 1;
	for(new j = 0; j < 6; j ++)
	{
		TextDrawHideForPlayer(playerid, satiery_td[j]);
		if(j < 4)
		{
			PlayerTextDrawDestroy(playerid, satiery_ptd[playerid][j]);
			satiery_ptd[playerid][j] = PlayerText:-1;
		}
	}
	DeletePVar(playerid, "hunger_td_active");
	return 1;
}

callback: barrier_callback(j)
{
	MoveDynamicObject(barrier_object[j], barrier_pos[j][1][0], barrier_pos[j][1][1], barrier_pos[j][1][2],
										0.07,barrier_pos[j][1][3], barrier_pos[j][1][4], barrier_pos[j][1][5]);
	return 1;
}




callback: joblist_callback(playerid, targetid)
{
	new rows,
		fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		global_string[0] = EOS;
		fields = 0;
		if(rows > 15)fields = rows -15;

		format(global_string, 82, ""c_grey"Дата приёма\tДата увольнения\tВыговоры\tОрганизация\t\tПричина"c_white"\n");
		for(new i = fields; i < rows; i ++)
		{
			new ji_dateinvite[16],
				ji_dateuninvite[16],
				ji_reason[48],
				ji_fraction,
				ji_warnings;

			new line_string[16 + 16 + 48 + 32 + 24];
			ji_fraction = cache_get_field_content_int(i, "ji_fraction", sql_connection);
			ji_warnings = cache_get_field_content_int(i, "ji_warnings", sql_connection);


			cache_get_field_content(i, "ji_date_invite", ji_dateinvite, sql_connection, 16);
			cache_get_field_content(i, "ji_date_uninvite", ji_dateuninvite, sql_connection, 16);
			cache_get_field_content(i, "ji_reason", ji_reason, sql_connection, 48);

			format(line_string, sizeof(line_string), ""c_white"%s\t%s\t\t\t%d\t%s\t\t%s\n",
															ji_dateinvite,
															ji_dateuninvite,
															ji_warnings,
															f_info[ji_fraction -1][f_name],
															ji_reason);
			strcat(global_string, line_string);
		}
		show_dialog(targetid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Трудовая книжка", global_string, "Закрыть", "");
		new scm_string[108];
		format(scm_string, 108, ""c_green"* "c_white"Вы показали "c_green"%s"c_white" трудовую книжку.", PlayerInfo[targetid][name]);
		SendClientMessage(playerid, col_white, scm_string);

	}
	else return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Не удалось обнаружить ни одной записи в трудовой книжке.");
	return 1;
}

callback: ganglist_callback(playerid, targetid)
{
	new rows,
		fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		global_string[0] = EOS;
		fields = 0;
		if(rows > 15)fields = rows -15;

		format(global_string, 82, ""c_grey"Дата приёма\tДата увольнения\tВыговоры\tОрганизация\t\tПричина"c_white"\n");
		for(new i = fields; i < rows; i ++)
		{
			new ji_dateinvite[16],
				ji_dateuninvite[16],
				ji_reason[48],
				ji_fraction,
				ji_warnings;

			new line_string[16 + 16 + 48 + 32 + 24];
			ji_fraction = cache_get_field_content_int(i, "ji_fraction", sql_connection);
			ji_warnings = cache_get_field_content_int(i, "ji_warnings", sql_connection);


			cache_get_field_content(i, "ji_date_invite", ji_dateinvite, sql_connection, 16);
			cache_get_field_content(i, "ji_date_uninvite", ji_dateuninvite, sql_connection, 16);
			cache_get_field_content(i, "ji_reason", ji_reason, sql_connection, 48);

			format(line_string, sizeof(line_string), ""c_white"%s\t%s\t\t\t%d\t%s\t\t%s\n",
															ji_dateinvite,
															ji_dateuninvite,
															ji_warnings,
															f_info[ji_fraction -1][f_name],
															ji_reason);
			strcat(global_string, line_string);
		}
		show_dialog(targetid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Gang list", global_string, "Закрыть", "");
		new scm_string[108];
		format(scm_string, 108, ""c_green"* "c_white"Вы показали "c_green"%s"c_white" лист славы.", PlayerInfo[targetid][name]);
		SendClientMessage(playerid, col_white, scm_string);

	}
	else return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Не удалось обнаружить ни одной записи в листе славы.");
	return 1;
}



callback: load_fine_vehicles(playerid)
{
	new rows,
		fields;
	cache_get_data(rows, fields);
	if(!rows) return SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"У Вас нет арестованных транспортных средств.");
	global_string[0] = EOS;
	for(new i = 0; i < rows; i ++)
	{
		new veh_model,
			veh_plate[16],
			veh_id;

		veh_id = cache_get_field_content_int(i, "v_id", sql_connection);
		veh_model = cache_get_field_content_int(i, "v_model", sql_connection);

		cache_get_field_content(i, "v_plate", veh_plate, sql_connection, 16);

		new line_string[62];
		format(line_string, sizeof(line_string), "%s | %s\n", vehicle_name[veh_model -400], veh_plate);
		strcat(global_string, line_string);

		format(line_string, 14, "lf_listid_%d", i);
		SetPVarInt(playerid, line_string, veh_id);
	}
	show_dialog(playerid, d_fine, DIALOG_STYLE_LIST, ""c_server"Штрафстоянка", global_string, "Выбрать", "Закрыть");

	return 1;
}




callback:callback_debtors(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Игроки с задолженностями не найдены.");
		DeletePVar(playerid, "ofm_list_page");
		return 1;
	}
	new rows_list = GetPVarInt(playerid, "ofm_list_page")-1;
	SetPVarInt(playerid, "ofm_list_rows", rows);
	new line_string[MAX_PLAYER_NAME + 37],
		pl_ofm_name[20],
		pl_ofm_tax;

	new dialog_string[10 * sizeof(line_string) + 50];
	strcat(dialog_string, ""c_server"Предыдущая страница\t\n"c_server"Следующая страница\t\n");
	for(new i = rows_list * 10; i < rows_list * 10 + 10; i ++)
	{
		if(i >= rows) break;

		cache_get_field_content(i, "u_name", pl_ofm_name, sql_connection, 20);
		pl_ofm_tax = cache_get_field_content_int(i, "u_tax", sql_connection);

		new pvar_string[8];
		format(pvar_string, sizeof(pvar_string), "ofm_%d", i -rows_list * 10);
		SetPVarString(playerid, pvar_string, pl_ofm_name);

		format(line_string, sizeof(line_string), "%s"c_server"\t%d$\n", pl_ofm_name, pl_ofm_tax);
		strcat(dialog_string, line_string);

	}

	show_dialog(playerid, d_debtors_list, DIALOG_STYLE_TABLIST, ""c_server"Список должников", dialog_string, "Выбрать", "Назад");
	return 1;
}


callback: callback_debtor_info(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new pl_id, pl_bank, pl_house, pl_business, pl_tax;

		pl_id = cache_get_field_content_int(0, "u_id", sql_connection);
		pl_business = cache_get_field_content_int(0, "u_business", sql_connection);
		pl_house = cache_get_field_content_int(0, "u_house", sql_connection);
		pl_tax = cache_get_field_content_int(0, "u_tax", sql_connection);
		pl_bank = cache_get_field_content_int(0, "u_bank", sql_connection);


		new query_string[138];
		format(query_string, sizeof(query_string), "SELECT * FROM `deposit_boxes` WHERE `db_owner` ='%d'", pl_id);
		mysql_tquery(sql_connection, query_string, "callback_debtor_info_", "iiiii", playerid, pl_business, pl_house, pl_tax, pl_bank);




	}
	if(!rows)
	{
		DeletePVar(playerid, "ofm_listitem");
		mysql_tquery(sql_connection, "SELECT `u_name`,`u_tax` FROM `users` WHERE `u_tax` > 10000 ORDER BY `users`.`u_tax` DESC", "callback_debtors", "i", playerid);

	}
	return 1;
}

callback:callback_debtor_info_(playerid, pl_business, pl_house, pl_tax, pl_bank)
{
	new rows, fields;
	cache_get_data(rows, fields);

	new pvar_string[20], pl_name[20];
	format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, "ofm_listitem"));
	GetPVarString(playerid, pvar_string, pl_name, 20);

	new house_data[32];
	if(pl_house != -1)format(house_data, sizeof(house_data), "дом № %d(%d$)", pl_house, h_info[pl_house -1][h_price]);
	else format(house_data, sizeof(house_data), "отсутствует");
	new business_date[64];
	if(pl_business != -1)format(business_date, 64, "%s(%d$)", b_info[pl_business -1][b_name], b_info[pl_business -1][b_price]);
	else format(business_date, 64, "отсутствует");

	format(global_string, sizeof(global_string), "\
	"c_white"Имя: "c_grey"%s"c_white"\n\
	Задолженность: "c_grey"%d$"c_white"\n\
	Дом: "c_grey"%s"c_white"\n\
	Бизнес: "c_grey"%s\n\n\
	"c_server"Средства в банке\n\n\
	"c_white"Основной счёт: "c_grey"%d$"c_white"",
	pl_name, pl_tax, house_data, business_date, pl_bank);
	if(rows)
	{

		for(new i = 0; i < rows; i ++)
		{
			new _db_id, _db_money, line_string[68];

			_db_id = cache_get_field_content_int(0, "db_id", sql_connection);
			_db_money = cache_get_field_content_int(i, "db_money", sql_connection);

			format(line_string, 68, "Счёт №%d -"c_grey"%d$"c_white"\n", _db_id, _db_money);
			strcat(line_string, line_string);
		}
	}
	show_dialog(playerid, d_debtor_info, DIALOG_STYLE_MSGBOX, ""c_server"Информация об игроке", global_string, "Назад", "");

	return 1;
}

callback: callback_debtor_property(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new pl_id, pl_house, pl_business, pl_tax;

		pl_id = cache_get_field_content_int(0, "u_id", sql_connection);
		pl_business = cache_get_field_content_int(0, "u_business", sql_connection);
		pl_house = cache_get_field_content_int(0, "u_house", sql_connection);
		pl_tax = cache_get_field_content_int(0, "u_tax", sql_connection);


		new dialog_string[138];
		new house_data[32];
		if(pl_house != -1)format(house_data, sizeof(house_data), "дом № %d\t%d$\n", pl_house, h_info[pl_house -1][h_price]);
		else format(house_data, sizeof(house_data), "Дом отсутствует\n");
		new business_date[64];
		if(pl_business != -1)format(business_date, 64, "%s\t%d$\n", b_info[pl_business -1][b_name], b_info[pl_business -1][b_price]);
		else format(business_date, 42, "Бизнес отсутствует\n");

		strcat(dialog_string, house_data);
		strcat(dialog_string, business_date);

		SetPVarInt(playerid, "debt_uid", pl_id);
		SetPVarInt(playerid, "debt_house", pl_house);
		SetPVarInt(playerid, "debt_business", pl_business);
		SetPVarInt(playerid, "debt_tax", pl_tax);

		show_dialog(playerid, d_debtor_sell, DIALOG_STYLE_TABLIST, ""c_server"Изъятие недвижимости", dialog_string, "Выбрать", "Назад");

	}
	return 1;
}
callback: callback_debtor_bankmoney(playerid, pl_name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new pl_id, pl_bank, pl_tax;

		pl_id = cache_get_field_content_int(0, "u_id", sql_connection);
		pl_bank = cache_get_field_content_int(0, "u_bank", sql_connection);
		pl_tax = cache_get_field_content_int(0, "u_tax", sql_connection);

		if(pl_bank < 1)
		{
			SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"У игрока нет средств на основном банковском счету.");

			new pvar_string[38];


			format(pvar_string, sizeof(pvar_string), ""c_server"%s", pl_name);
			show_dialog(playerid, d_debtors_pl_menu, DIALOG_STYLE_LIST, pvar_string, "Информация об имуществе\nПродать имущество\nСписать деньги с банковского счета\nВыслать извещение", "Выбрать", "Назад");
			return 1;
		}

		new player_id, _text_string[164];
		sscanf(pl_name, "u", player_id);
		if(IsPlayerConnected(player_id))
		{
			if(PlayerInfo[player_id][bank] > pl_tax)
			{
				PlayerInfo[player_id][bank] -= pl_tax;
				format(_text_string, 128,"UPDATE `users` SET `u_tax` = '0',`u_bank`='%d' WHERE `u_id` = '%d' LIMIT 1",
				PlayerInfo[player_id][bank], pl_id);
				mysql_tquery(sql_connection, _text_string);

				PlayerInfo[player_id][tax] = 0;

				f_info[10][f_money] += pl_tax;
				format(_text_string, sizeof(_text_string), "UPDATE `fractions` SET `f_money` = '%d' WHERE `f_id` = '11' LIMIT 1",
				f_info[10][f_money]);
				mysql_tquery(sql_connection, _text_string, "", "");
			}
			else
			{
				format(_text_string, 128,"UPDATE `users` SET `u_tax` = u_tax-'%d',`u_bank`='0' WHERE `u_id` = '%d' LIMIT 1",
				PlayerInfo[player_id][bank], pl_id);
				mysql_tquery(sql_connection, _text_string);

				PlayerInfo[player_id][tax] -= PlayerInfo[player_id][bank];

				f_info[10][f_money] += PlayerInfo[player_id][bank];
				format(_text_string, sizeof(_text_string), "UPDATE `fractions` SET `f_money` = '%d' WHERE `f_id` = '11' LIMIT 1",
				f_info[10][f_money]);
				mysql_tquery(sql_connection, _text_string, "", "");

				PlayerInfo[player_id][bank] = 0;
			}
			SendClientMessage(player_id, col_gray, "* Сотрудники мэрии списали с Вашего счёта средства в счёт уплаты налогов.");
			SendClientMessage(player_id, col_gray, "* В следующий раз будьте усмотрительнее при выплатах налогов.");

		}
		else
		{
			format(_text_string, sizeof _text_string, "INSERT INTO `debtor_message`(`dm_text`, `dm_dest`) VALUES ('"c_white"С Вашего банковского счёта была списана часть средств для погашение налогового долга.','%d')",
			GetPVarInt(playerid, "debt_uid"));
			mysql_tquery(sql_connection, _text_string);
			if(pl_bank > pl_tax)
			{
				pl_bank -= pl_tax;
				format(_text_string, 128,"UPDATE `users` SET `u_tax` = '0',`u_bank`='%d' WHERE `u_id` = '%d' LIMIT 1",
				pl_bank, pl_id);
				mysql_tquery(sql_connection, _text_string);

				f_info[10][f_money] += pl_tax;
				format(_text_string, sizeof(_text_string), "UPDATE `fractions` SET `f_money` = '%d' WHERE `f_id` = '11' LIMIT 1",
				f_info[10][f_money]);
				mysql_tquery(sql_connection, _text_string, "", "");
			}
			else
			{
				format(_text_string, 128,"UPDATE `users` SET `u_tax` = u_tax-'%d',`u_bank`='0' WHERE `u_id` = '%d' LIMIT 1",
				pl_bank, pl_id);

				mysql_tquery(sql_connection, _text_string);

				f_info[10][f_money] += pl_bank;
				format(_text_string, sizeof(_text_string), "UPDATE `fractions` SET `f_money` = '%d' WHERE `f_id` = '11' LIMIT 1",
				f_info[10][f_money]);
				mysql_tquery(sql_connection, _text_string, "", "");
			}
		}
		SendClientMessage(playerid, col_white, ""c_green"* "c_white"Средства должника успешно списаны с его счёта.");
		DeletePVar(playerid, "debt_house");
		DeletePVar(playerid, "debt_business");
		DeletePVar(playerid, "debt_tax");
		DeletePVar(playerid, "debt_uid");
		DeletePVar(playerid, "ofm_listitem");
		mysql_tquery(sql_connection, "SELECT `u_name`,`u_tax` FROM `users` WHERE `u_tax` > 10000 ORDER BY `users`.`u_tax` DESC", "callback_debtors", "i", playerid);
	}
	return 1;
}



callback:clear_trailer(cell, objectid)
{
	port_trailer_status[cell] = false;
	DestroyDynamicObject(objectid);
	return 1;
}



callback:load_debtor_messages(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		global_string[0] = EOS;

		for(new i = 0; i < rows; i ++)
		{
			new dm_text[172];
			cache_get_field_content(i, "dm_text", dm_text, sql_connection, 168);
			strcat(dm_text, "\n");
			strcat(global_string, dm_text);

			format(dm_text, 128, "DELETE FROM `debtor_message` WHERE `dm_dest` = '%d'", PlayerInfo[playerid][id]);
			mysql_tquery(sql_connection, dm_text);
		}

		show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, ""c_server"Уведомления", global_string, "Закрыть", "");
	}
	return 1;
}


callback:referal_bonus_callback(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows) return 1;

	new referal_name[MAX_PLAYER_NAME];
	cache_get_field_content(0, "u_name", referal_name, sql_connection, MAX_PLAYER_NAME);
	new referal_inc = cache_get_field_content_int(0, "u_id", sql_connection);


	new _pl_id;
	sscanf(referal_name, "u", _pl_id);
	if(IsPlayerConnected(_pl_id))
	{
		if(!p_t_info[_pl_id][p_logged])
		{
			new query_string[232];
			format(query_string, 128, "* Игрок %s получил "c_server"75.000$ за приглашение Вас на сервер.", referal_name);
			SendClientMessage(playerid, col_gray, query_string);

			format(query_string, sizeof query_string, "INSERT INTO `debtor_message`(`dm_text`, `dm_dest`) VALUES ('"c_white"Вы получили "c_server"75.000$"c_white" за приглашение игрока "c_server"%s','%d')",
			PlayerInfo[playerid][name], referal_inc);
			mysql_tquery(sql_connection, query_string);

			format(query_string, 144, "UPDATE `users` SET u_money=u_money+'75000' WHERE `u_id` = '%d'",
			referal_inc);
			mysql_tquery(sql_connection, query_string);
		}
		else
		{
			new query_string[128];
			format(query_string, 128, "* Игрок %s получил "c_server"75.000$ за приглашение Вас на сервер.", referal_name);
			SendClientMessage(playerid, col_gray, query_string);

			format(query_string, 128, "* Вы получили "c_server"75.000$ за приглашение "c_server"%s"c_grey".", PlayerInfo[playerid][name]);
			SendClientMessage(_pl_id, col_gray, query_string);

			give_money(_pl_id, 75000);
			insert_money_log(_pl_id, playerid, 75000, "реферальные деньги");
		}
	}
	else
	{
		new query_string[232];
		format(query_string, 128, "* Игрок %s получил "c_server"75.000$ за приглашение Вас на сервер.", referal_name);
		SendClientMessage(playerid, col_gray, query_string);

		format(query_string, sizeof query_string, "INSERT INTO `debtor_message`(`dm_text`, `dm_dest`) VALUES ('"c_white"Вы получили "c_server"75.000$"c_white" за приглашение игрока "c_server"%s','%d')",
		PlayerInfo[playerid][name], referal_inc);
		mysql_tquery(sql_connection, query_string);

		format(query_string, 144, "UPDATE `users` SET u_money=u_money+'75000' WHERE `u_id` = '%d'",
		referal_inc);
		mysql_tquery(sql_connection, query_string);
	}
	return 1;
}

callback: change_donate_name(playerid, donate_name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		show_dialog(playerid, d_donate_rename, DIALOG_STYLE_INPUT, ""c_server"Донат услуги","\
		"c_orange_red"* Данный никнейм уже занят.\n\n\
		"c_grey"-"c_white"Смена Ник-Нейма:\n\n\
		"c_grey"* Цена: "c_green"20 E-coin"c_grey".\n\
		"c_grey"* Вы действительно хотите сменить Ваш \""c_white"Ник-Нейм"c_grey"\".","Принять", "Назад");
		return 1;
	}
	if(SetPlayerName(playerid, donate_name) == -1) return SendClientMessage(playerid, col_gray,""c_orange_red"* "c_grey"Игрок с таким именем подключён к серверу.");

	new sql_string[198];
	format(sql_string, sizeof(sql_string), "UPDATE `users` SET `u_donate` = `u_donate`-'20',`u_name` = '%s' WHERE `u_id` = '%d' LIMIT 1", donate_name, PlayerInfo[playerid][id]);
	mysql_query(sql_connection, sql_string);

	if(PlayerInfo[playerid][admin] != 0)
	{
		format(sql_string, sizeof(sql_string), "UPDATE `users_admins` SET `u_a_name` = '%s' WHERE `u_a_name` = '%s' LIMIT 1", donate_name, PlayerInfo[playerid][name]);
		mysql_tquery(sql_connection, sql_string);
	}
	format(sql_string, sizeof(sql_string), "UPDATE `fractions_blacklist` SET `bl_name` = '%s' WHERE `bl_name` = '%s'", donate_name, PlayerInfo[playerid][name]);
	mysql_tquery(sql_connection, sql_string);

	if(PlayerInfo[playerid][house] != -1)
    {
   		strmid(h_info[PlayerInfo[playerid][house] -1][h_owner_name], donate_name, 0, strlen(donate_name), 31);
		format(sql_string, 138, "UPDATE `houses` SET `h_ownername` = '%s' WHERE `h_id` = '%d' LIMIT 1", donate_name, PlayerInfo[playerid][house]);
		mysql_tquery(sql_connection, sql_string);
	}
	if(PlayerInfo[playerid][house] != -1)
    {
   		strmid(h_info[PlayerInfo[playerid][house] -1][h_owner_name], donate_name, 0, strlen(donate_name), 31);
		format(sql_string, 138, "UPDATE `businesses` SET `b_owner_name` = '%s' WHERE `b_id` = '%d' LIMIT 1", donate_name, PlayerInfo[playerid][business]);
		mysql_tquery(sql_connection, sql_string);
	}
	format(sql_string, 98,""c_server"* S.INFO: "c_grey"Ваш никнейм был изменен на: "c_server"%s", donate_name);
	SendClientMessage(playerid, col_gray, sql_string);
	SendClientMessage(playerid, col_gray, ""c_server"* S.INFO: "c_grey"Рекомендуем вам перезайти в игру с новым никнеймом.");
	format(sql_string, 132, ""c_server"* A.INFO: "c_grey"%s сменил никнейм на %s", PlayerInfo[playerid][name], donate_name);
	foreach(new i: admin_players)SendClientMessage(i, col_gray, sql_string);

	format(sql_string, 132, "<< %s сменил имя на %s >>", PlayerInfo[playerid][name], donate_name);
	foreach(new i: logged_players) if(PlayerInfo[i][settings][2]) SendClientMessage(i, col_light_red, sql_string);

	format(sql_string, sizeof(sql_string), "INSERT INTO `nickname_history` (`nh_owner`,`nh_oldname`,`nh_newname`,`nh_date`,`nh_admin`) VALUES ('%d','%s','%s',NOW(),'donate')",
	PlayerInfo[playerid][id], PlayerInfo[playerid][name], donate_name);
	mysql_tquery(sql_connection, sql_string);


	strmid(PlayerInfo[playerid][name], donate_name, 0, strlen(donate_name), 31);

	show_donate(playerid);
	return 1;
}



callback:donate_unwarns(playerid)
{
	new fields,
		rows;

	cache_get_data(rows, fields);
	if(!rows)
	{
		show_dialog(playerid, d_donate_maxveh, DIALOG_STYLE_MSGBOX, ""c_server"Донат услуги","\
		"c_orange_red"* У Вас нет предупреждений, которые можно было бы снять.\n\n\
		"c_grey"-"c_white"Снять предупреждение:\n\n\
		"c_grey"* Цена: "c_green"100 E-coin"c_grey".\n\
		"c_grey"* Вы действительно хотите снять \""c_white"Предупреждение"c_grey"\"?","Принять", "Назад");
		return 1;
	}
	new warn_id = cache_get_field_content_int(rows -1, "w_id", sql_connection);

	new scm_string[148];
	format(scm_string, sizeof scm_string, "UPDATE `users_warns` SET `w_end`=NOW() WHERE `w_id`='%d'", warn_id);
	mysql_tquery(sql_connection, scm_string);

	format(scm_string, sizeof(scm_string),"UPDATE `users` SET `u_donate` = `u_donate`-'100' WHERE `u_id` = '%d' LIMIT 1",
	PlayerInfo[playerid][id]);
	mysql_query(sql_connection, scm_string);

	show_donate(playerid);
	SendClientMessage(playerid, col_white, !""scm_sucess"Донат услуга успешно приобретена.");
	return 1;
}

callback: promo_second_callback(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		show_dialog(playerid, d_mm_promocode, DIALOG_STYLE_INPUT, ""c_server"Промокод",
		""c_orange_red"* Данный промокод не существует.\n\n\
		"c_grey"-"c_white"На нашем проекте Вы можете ввести промокод и получить бонусный пакет.\n\n\
		"c_grey"* Если у Вас имеется промокод, введите его здесь:", "Принять", "Назад");
		return 1;
	}

	if(PlayerInfo[playerid][promo_used_today] == 1)
	{
		show_dialog(playerid, d_mm_promocode, DIALOG_STYLE_INPUT, ""c_server"Промокод",
		""c_orange_red"* Вы уже вводили промокод сегодня.\n\n\
		"c_grey"-"c_white"На нашем проекте Вы можете ввести промокод и получить бонусный пакет.\n\n\
		"c_grey"* Если у Вас имеется промокод, введите его здесь:", "Принять", "Назад");
		return 1;
	}
	new promo_exp = cache_get_field_content_int(0, "promo_exp", sql_connection);
	if(PlayerInfo[playerid][level] == 1 && PlayerInfo[playerid][exp] < promo_exp)
	{
		show_dialog(playerid, d_mm_promocode, DIALOG_STYLE_INPUT, ""c_server"Промокод",
		""c_orange_red"* Вы не подходите требованиям данного промокода.\n\n\
		"c_grey"-"c_white"На нашем проекте Вы можете ввести промокод и получить бонусный пакет.\n\n\
		"c_grey"* Если у Вас имеется промокод, введите его здесь:", "Принять", "Назад");
		return 1;
	}

	new promo_money, promo_id;
	promo_id = cache_get_field_content_int(0, "promo_id", sql_connection);
	promo_money = cache_get_field_content_int(0, "promo_money", sql_connection);

	new promo_drivelic = cache_get_field_content_int(0, "promo_drivelic", sql_connection);
	new promo_boatlic = cache_get_field_content_int(0, "promo_boatlic", sql_connection);
	new promo_gunlic = cache_get_field_content_int(0, "promo_gunlic", sql_connection);
	new promo_flylic = cache_get_field_content_int(0, "promo_flylic", sql_connection);

	new promo_skill_silenced = cache_get_field_content_int(0, "promo_flylic", sql_connection);
    new promo_skill_deagle = cache_get_field_content_int(0, "promo_skill_deagle", sql_connection);
    new promo_skill_shotgun = cache_get_field_content_int(0, "promo_skill_shotgun", sql_connection);
    new promo_skill_mp5 = cache_get_field_content_int(0, "promo_skill_mp5", sql_connection);
    new promo_skill_ak47 = cache_get_field_content_int(0, "promo_skill_ak47", sql_connection);
    new promo_skill_m4 = cache_get_field_content_int(0, "promo_skill_m4", sql_connection);
    new promo_skill_rifle = cache_get_field_content_int(0, "promo_skill_rifle", sql_connection);


	if(promo_drivelic)PlayerInfo[playerid][drive_lic] = promo_drivelic;
	if(promo_boatlic)PlayerInfo[playerid][boat_lic] = promo_boatlic;
	if(promo_gunlic)PlayerInfo[playerid][gun_lic] = promo_gunlic;
	if(promo_flylic)PlayerInfo[playerid][fly_lic] = promo_flylic;

	if(promo_skill_silenced)PlayerInfo[playerid][gun_skills][0] = promo_skill_silenced;
	if(promo_skill_deagle)PlayerInfo[playerid][gun_skills][1] = promo_skill_deagle;
	if(promo_skill_shotgun)PlayerInfo[playerid][gun_skills][2] = promo_skill_shotgun;
	if(promo_skill_mp5)PlayerInfo[playerid][gun_skills][3] = promo_skill_mp5;
	if(promo_skill_ak47)PlayerInfo[playerid][gun_skills][4] = promo_skill_ak47;
	if(promo_skill_m4)PlayerInfo[playerid][gun_skills][5] = promo_skill_m4;
	if(promo_skill_rifle)PlayerInfo[playerid][gun_skills][6] = promo_skill_rifle;

	SetPlayerSkills(playerid);

	if(promo_money > 0)
	{
		give_money(playerid, promo_money);
		insert_money_log(playerid, INVALID_PLAYER_ID, promo_money, "промыч");
	}


	PlayerInfo[playerid][promo_used_today] = 1;

	new query_string[296];
	format(query_string, 148,"UPDATE `time_promocodes` SET `promo_used` = `promo_used`+'1' WHERE `promo_id` = '%d' LIMIT 1",
	promo_id);
	mysql_tquery(sql_connection, query_string);

	format(query_string, sizeof(query_string),"UPDATE `users` SET `u_promo_today` = '1',`u_skills`='%d|%d|%d|%d|%d|%d|%d',`u_drive_lic`='%d',\
	`u_boat_lic`='%d',`u_fly_lic`='%d',`u_gun_lic`='%d'	WHERE `u_id` = '%d' LIMIT 1",
	PlayerInfo[playerid][gun_skills][0], PlayerInfo[playerid][gun_skills][1], PlayerInfo[playerid][gun_skills][2],
	PlayerInfo[playerid][gun_skills][3], PlayerInfo[playerid][gun_skills][4], PlayerInfo[playerid][gun_skills][5],
	PlayerInfo[playerid][gun_skills][6], PlayerInfo[playerid][drive_lic], PlayerInfo[playerid][boat_lic], PlayerInfo[playerid][fly_lic], PlayerInfo[playerid][gun_lic], PlayerInfo[playerid][id]);
	mysql_tquery(sql_connection, query_string);

	SendClientMessage(playerid, col_white, ""c_green"* "c_white"Промокод успешно активирован. Следующий будет доступен через 24 часа.");


	pc_cmd_menu(playerid);
	return 1;
}

callback: promo_code_list(const playerid)
{
	new
		rows = cache_num_rows(),
		promo_code_name[32],
		promo_code_used,
		val_str[11];

	new string[1500] = ""c_server"Название промокода\t\
						"c_server"Кол-во использований\t\n\
						"c_red"Создать промокод\n";
	if(rows)
	{
		for(new i = 0; i < rows; i++)
		{
			cache_get_field_content(i, "promo_text", promo_code_name, sql_connection, 32);
			promo_code_used = cache_get_field_content_int(i, "promo_used", sql_connection);

			strcat(string, promo_code_name);
			strcat(string, "\t\t\t");

			valstr(val_str, promo_code_used);
			strcat(string, val_str);
			strcat(string, "\n");
		}
		show_dialog(playerid, d_promo_list, DIALOG_STYLE_TABLIST_HEADERS, !""scm_dialog"Лист промокодов", string, !"Выбрать", !"Закрыть");
	}
}

callback: CreatePromocode(playerid, const text[])
{
	if(cache_num_rows())
	{
		SendClientMessage(playerid, col_gray, !"Такой промокод уже существует");
		return show_dialog(playerid, d_promo_list_enter, DIALOG_STYLE_INPUT, "Создание промокода", ""c_white"Пожалуйста, введите название нового промокода. Например: "c_red"#mavi", "Enter", "Назад");
	}

	new query_string[95];
	format(query_string, sizeof query_string, "INSERT INTO `server_promocodes`(`promo_text`, `promo_used`)VALUES('%s', '0')", text, text);
	mysql_tquery(sql_connection, query_string);

	SendClientMessage(playerid, col_green, "Промокод создан");
	return callcmd::promocodelist(playerid);
}

callback: PromocodeSettings(playerid, listitem)
{
	new promo_id, promo_text[11];

	promo_id = cache_get_field_content_int(listitem, "promo_id", sql_connection);
	cache_get_field_content(listitem, "promo_text", promo_text, sql_connection);

	SetPVarInt(playerid, !"sel_promo_id", promo_id);

	return show_dialog(playerid, d_promo_settings, DIALOG_STYLE_LIST, "Управление промокодом", ""c_white"1 | "c_server"Изменить промокод\n"c_white"2 | "c_red"Удалить промокод\n", !"Выбрать", !"Отменить");
}

callback: EditPromocode(playerid, promo_id, const text[])
{
	if(cache_num_rows())
	{
		SendClientMessage(playerid, col_gray, !"Такой промокод уже существует");
		return show_dialog(playerid, d_promo_list_enter, DIALOG_STYLE_INPUT, "Создание промокода", ""c_white"Пожалуйста, введите название нового промокода. Например: "c_red"#mavi", "Enter", "Назад");
	}

	new query_string[95];
	format(query_string, sizeof query_string, "UPDATE server_promocodes SET promo_text = '%s' WHERE promo_id = '%d'", text, promo_id);
	mysql_tquery(sql_connection, query_string);

	DeletePVar(playerid, !"sel_promo_id");
	SendClientMessage(playerid, col_green, "Промокод изменен");
	return callcmd::promocodelist(playerid);
}

callback: promo_callback(playerid, inputtext[] )
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{

		new scm_string[98];
		mysql_format(sql_connection, scm_string, sizeof(scm_string ), "SELECT * FROM `time_promocodes` WHERE `promo_text` = '%e' LIMIT 1", inputtext);
		mysql_tquery(sql_connection, scm_string, "promo_second_callback", "i", playerid);

		return 1;
	}

	if(PlayerInfo[playerid][promo_used] == 1)
	{
		show_dialog(playerid, d_mm_promocode, DIALOG_STYLE_INPUT, ""c_server"Промокод",
		""c_orange_red"* У Вас уже активирован промокод из данной группы.\n\n\
		"c_grey"-"c_white"На нашем проекте Вы можете ввести промокод и получить бонусный пакет.\n\n\
		"c_grey"* Если у Вас имеется промокод, введите его здесь:", "Принять", "Назад");
		return 1;
	}

	new promo_money, promo_id;
	promo_id = cache_get_field_content_int(0, "promo_id", sql_connection);
	promo_money = cache_get_field_content_int(0, "promo_money", sql_connection);

	new promo_lic = cache_get_field_content_int(0, "promo_lic", sql_connection);
	new promo_deagle = cache_get_field_content_int(0, "promo_skill", sql_connection);
	new promo_roulette = cache_get_field_content_int(0, "promo_roulette", sql_connection);

	if(promo_lic)PlayerInfo[playerid][drive_lic] = promo_lic;
	if(promo_deagle)
	{
		PlayerInfo[playerid][gun_skills][1] = 100;
		SetPlayerSkills(playerid);
	}
	if(promo_money > 0)
	{
		PlayerInfo[playerid][promocode_money] += promo_money;
		update_int_sql(playerid, "u_promomoney", PlayerInfo[playerid][promocode_money]);
	}
	if(promo_roulette > 0)
	{
		PlayerInfo[playerid][donate_roulette] += promo_roulette;
		update_int_sql(playerid, "u_droulette", PlayerInfo[playerid][donate_roulette]);
	}
	PlayerInfo[playerid][promo_used] = 1;

	new query_string[256];
	format(query_string, 148,"UPDATE `server_promocodes` SET `promo_used` = `promo_used`+'1' WHERE `promo_id` = '%d' LIMIT 1",
	promo_id);
	mysql_tquery(sql_connection, query_string);

	format(query_string, sizeof(query_string),"UPDATE `users` SET `u_promo` = '1',`u_skills`='%d|%d|%d|%d|%d|%d|%d',`u_drive_lic`='%d' WHERE `u_id` = '%d' LIMIT 1",
	PlayerInfo[playerid][gun_skills][0], PlayerInfo[playerid][gun_skills][1], PlayerInfo[playerid][gun_skills][2],
	PlayerInfo[playerid][gun_skills][3], PlayerInfo[playerid][gun_skills][4], PlayerInfo[playerid][gun_skills][5],
	PlayerInfo[playerid][gun_skills][6], PlayerInfo[playerid][drive_lic], PlayerInfo[playerid][id]);
	mysql_tquery(sql_connection, query_string);

	SendClientMessage(playerid, col_white, ""c_green"* "c_white"Промокод успешно активирован. Денежный бонус будет выдан по достижению 3 уровня.");

	pc_cmd_menu(playerid);
	return 1;
}

callback:callback_referallist(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		SendClientMessage(playerid, col_gray, ""c_orange_red"* "c_grey"Не найдено ни одного реферала.");
		DeletePVar(playerid, "ofm_list_page");
		return 1;
	}
	new rows_list = GetPVarInt(playerid, "ofm_list_page")-1;
	SetPVarInt(playerid, "ofm_list_rows", rows);
	new line_string[68 + 16],
		pl_f_name[MAX_PLAYER_NAME];

	global_string[0] = EOS;
	for(new i = rows_list * 20; i < rows_list * 20 + 20; i ++)
	{
		if(i >= rows) break;

		cache_get_field_content(i, "u_name", pl_f_name, sql_connection, MAX_PLAYER_NAME);

		format(line_string, sizeof(line_string), ""c_grey"%d. "c_white"%s\n", i + 1, pl_f_name);
		strcat(global_string, line_string);

	}

	show_dialog(playerid, d_referals_list, DIALOG_STYLE_MSGBOX, ""c_server"Список рефералов", global_string, "Назад", "Далее");
	return 1;
}

//

callback: callback_fam_timer(fam_tid)
{
	foreach(new pl_id: logged_players)
	{
		if(!PlayerInfo[pl_id][family] && GetPVarInt(pl_id, "fam_td_status") ==  1)
		{
			for(new j = 0; j < 31; j ++)
			{
				TextDrawHideForPlayer(pl_id, Family_War_TD[j]);
			}
			DeletePVar(pl_id, "fam_td_status");
			for(new j = 0; j < 5; j ++)if(!IsPlayerMobile(pl_id)) SendDeathMessageToPlayer(pl_id, 1001, 1001, 200);
		}
		else if((PlayerInfo[pl_id][family] == fam_owner || PlayerInfo[pl_id][family] == fam_attacker) && GetPVarInt(pl_id, "fam_td_status") ==  0)
		{
			for(new j = 0; j < 31; j ++)
			{
				TextDrawShowForPlayer(pl_id, Family_War_TD[j]);
			}
			GangZoneFlashForPlayer(pl_id, fam_gangzone, 0xFFFFFF55);
			SetPVarInt(pl_id, "fam_td_status", 1);
		}
	}
	if(fam_time >= 1)
	{
		fam_time --;

		new td_string[12];
		format(td_string, sizeof(td_string), "%s", convert_time(fam_time));
		TextDrawSetString(Family_War_TD[22], td_string);
	}
	else if(fam_time < 1)
	{
		if(fam_owner_points >= fam_attacker_points)// победа хозяев
		{
			new _string[144];
			format(_string, sizeof(_string), "{%s}[Семья] Вы отстояли свою аммуницию (%s). Бизнес остаётся в ваших руках.",
			family_info[fam_owner -1][fam_chat_color],
			b_info[fam_tid][b_name]);
			family_message(fam_owner, col_white, _string);
			
			format(_string, sizeof(_string), "{%s}[Семья] Захват аммуниции %s (№%d) провален. Победила семья: %s.",
			family_info[fam_attacker -1][fam_chat_color],
			b_info[fam_tid][b_name],
			b_info[fam_tid][b_id],
		    family_info[fam_owner -1][fam_name]);
			family_message(fam_attacker, col_white, _string);
		}
		else if(fam_owner_points < fam_attacker_points)// победа атаки
		{
			new _string[144];
			format(_string, sizeof(_string), "{%s}[Семья] Вы отжали аммуницию %s (№%d) у семьи %s.",
			family_info[fam_attacker -1][fam_chat_color],
			b_info[fam_tid][b_name],
			b_info[fam_tid][b_id],
		    family_info[fam_owner -1][fam_name]);
			family_message(fam_attacker, col_white, _string);
			
			format(_string, sizeof(_string), "{%s}[Семья] Вы потеряли свою аммуницию (%s). Бизнес переходит к другой семье.",
			family_info[fam_owner -1][fam_chat_color],
			b_info[fam_tid][b_name]);
			family_message(fam_owner, col_white, _string);
			
			fam_owner = fam_attacker;
		}

		foreach(new i: logged_players)
		{
			if(GetPVarInt(i, "fam_td_status") ==  1)
			{
				for(new j = 0; j < 31; j ++)
				{
					TextDrawHideForPlayer(i, Family_War_TD[j]);
				}
				DeletePVar(i, "fam_td_status");
				for(new j = 0; j < 5; j ++)if(!IsPlayerMobile(i)) SendDeathMessageToPlayer(i, 1001, 1001, 200);
			}
		}

		b_info[fam_tid][b_family] = fam_owner;

		new query_string[228];

		format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
		b_types[b_info[fam_tid][b_type]], b_info[fam_tid][b_id], b_info[fam_tid][b_owner_name], b_info[fam_tid][b_price], family_info[b_info[fam_tid][b_family] -1][fam_name],(! b_info[fam_tid][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
		UpdateDynamic3DTextLabelText(b_info[fam_tid][b_label], -1, query_string);

		format(query_string, 118,"UPDATE `businesses` SET `b_family` = '%d' WHERE `b_id` = '%d' LIMIT 1", b_info[fam_tid][b_family], b_info[fam_tid][b_id]);
		mysql_tquery(sql_connection, query_string);

		KillTimer(fam_timer);

		fam_biz = -1,
			fam_owner_points = -1,
				fam_attacker_points	= -1;

		fam_time = -1;


		fam_attacker = -1;
		fam_owner = -1;

		GangZoneStopFlashForAll(fam_gangzone);
		GangZoneHideForAll(fam_gangzone);
		GangZoneDestroy(fam_gangzone);
		fam_gangzone = -1;
	}
	return 1;
}

//

callback: callback_mw_timer(mw_tid)
{
	foreach(new pl_id: logged_players)
	{
		if(!mafia_player(pl_id) && GetPVarInt(pl_id, "mw_td_status") ==  1)
		{
			for(new j = 0; j < 18; j ++)
			{
				TextDrawHideForPlayer(pl_id, mw_td[j]);

			}
			DeletePVar(pl_id, "mw_td_status");
			for(new j = 0; j < 5; j ++)if(!IsPlayerMobile(pl_id)) SendDeathMessageToPlayer(pl_id, 1001, 1001, 200);
		}
		else if(mafia_player(pl_id) && GetPVarInt(pl_id, "mw_td_status") ==  0)
		{
			for(new j = 0; j < 18; j ++)
			{
				TextDrawShowForPlayer(pl_id, mw_td[j]);
			}
			GangZoneFlashForPlayer(pl_id, mw_gangzone, f_info[mw_attacker -1][f_radar_color]);
			SetPVarInt(pl_id, "mw_td_status", 1);
		}
	}
	if(mw_time >= 1)
	{
		mw_time --;

		new td_string[24];
		format(td_string, sizeof(td_string), "BIZWAR_TIME:_%s", convert_time(mw_time));
		TextDrawSetString(mw_td[5], td_string);
	}
	else if(mw_time < 1)
	{
		if(mw_owner_points >= mw_attacker_points)// победа хозяев
		{
			new _string[92];
			format(_string, sizeof(_string), "{%s}%s отстояли свой бизнес",
			f_info[mw_owner -1][f_chat_color],
			f_info[mw_owner -1][f_name]);
			SendMafiaMessage(col_gray, _string);
		}
		else if(mw_owner_points < mw_attacker_points)// победа атаки
		{
			new _string[92];
			format(_string, sizeof(_string), "{%s}%s отжали бизнес у {%s}%s",
			f_info[mw_attacker -1][f_chat_color],
			f_info[mw_attacker -1][f_name],
			f_info[mw_owner -1][f_chat_color],
			f_info[mw_owner -1][f_name]);
			SendMafiaMessage(col_gray, _string);
			mw_owner = mw_attacker;
		}

		foreach(new i: logged_players)
		{
			if(GetPVarInt(i, "mw_td_status") ==  1)
			{
				for(new j = 0; j < 18; j ++)
				{
					TextDrawHideForPlayer(i, mw_td[j]);
				}
				DeletePVar(i, "mw_td_status");
				for(new j = 0; j < 5; j ++)if(!IsPlayerMobile(i)) SendDeathMessageToPlayer(i, 1001, 1001, 200);
			}
		}



		b_info[mw_tid][b_mafia] = mw_owner;

		new query_string[228];
		if(b_info[mw_tid][b_type] == bizz_type_shop || b_info[mw_tid][b_type] == bizz_type_pharm || b_info[mw_tid][b_type] == bizz_type_electronic || b_info[mw_tid][b_type] == bizz_type_clothes || b_info[mw_tid][b_type] == bizz_type_carshop || b_info[mw_tid][b_type] == bizz_type_cafe || b_info[mw_tid][b_type] == bizz_type_club || b_info[mw_tid][b_type] == bizz_type_bar)
		{
			format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
			b_types[b_info[mw_tid][b_type]], b_info[mw_tid][b_id], b_info[mw_tid][b_owner_name], b_info[mw_tid][b_price], mafia_owner_name[b_info[mw_tid][b_mafia] -1],(! b_info[mw_tid][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
			UpdateDynamic3DTextLabelText(b_info[mw_tid][b_label], -1, query_string);
		}

		else if(b_info[mw_tid][b_type] == bizz_type_gas)
		{
			format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Контроль:"c_white" %s\n"c_grey"Состояние: "c_white"%s",
			b_types[b_info[mw_tid][b_type]], b_info[mw_tid][b_id], b_info[mw_tid][b_owner_name], b_info[mw_tid][b_price], mafia_owner_name[b_info[mw_tid][b_mafia] -1],(! b_info[mw_tid][b_close]) ? ("{1a9616}Открыто") : ("{e11010}Закрыто"));
			UpdateDynamic3DTextLabelText(b_info[mw_tid][b_label], -1, query_string);
		}
		else if(b_info[mw_tid][b_type] == bizz_type_ammo)
		{
			format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_grey"Владелец: "c_white"%s\n"c_grey"Цена: "c_white"%d$\n"c_grey"Семья: "c_white"%s\n"c_grey"Состояние: "c_white"%s",
			b_types[b_info[mw_tid][b_type]], b_info[mw_tid][b_id], b_info[mw_tid][b_owner_name], b_info[mw_tid][b_price], family_info[b_info[mw_tid][b_family] -1][fam_name],(! b_info[mw_tid][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
			UpdateDynamic3DTextLabelText(b_info[mw_tid][b_label], -1, query_string);
		}
		else if(b_info[mw_tid][b_type] == bizz_type_tune)
		{
			format(query_string, sizeof(query_string), ""c_server"%s (№%d)\n"c_white"Владелец: %s\nКонтроль: %s\nСостояние: %s",
			b_types[b_info[mw_tid][b_type]], b_info[mw_tid][b_id], b_info[mw_tid][b_owner_name], mafia_owner_name[b_info[mw_tid][b_mafia] -1],(! b_info[mw_tid][b_close]) ? ("{1a9616}Открыт") : ("{e11010}Закрыт"));
			UpdateDynamic3DTextLabelText(b_info[mw_tid][b_label], -1, query_string);
		}


		format(query_string, 118,"UPDATE `businesses` SET `b_mafia` = '%d' WHERE `b_id` = '%d' LIMIT 1", b_info[mw_tid][b_mafia], b_info[mw_tid][b_id]);
		mysql_tquery(sql_connection, query_string);




		KillTimer(mw_timer);

		mw_biz = -1,
			mw_owner_points = -1,
				mw_attacker_points	= -1;

		mw_time = -1;


		mw_attacker = -1;
		mw_owner = -1;

		GangZoneStopFlashForAll(mw_gangzone);
		GangZoneHideForAll(mw_gangzone);
		GangZoneDestroy(mw_gangzone);
		mw_gangzone = -1;
	}
	return 1;
}

callback: check_bl_list(playerid, pl_name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new target_inc = cache_get_field_content_int(0, "bl_player", sql_connection);



		new sql_string[128];
		format(sql_string, sizeof(sql_string), "DELETE FROM `fractions_blacklist` WHERE `bl_player`='%d' AND `bl_fraction`='%d'",
		target_inc, PlayerInfo[playerid][member]);
		mysql_tquery(sql_connection, sql_string);

		new targetid = INVALID_PLAYER_ID;

		foreach(new i: logged_players)
		{
			if(PlayerInfo[i][id] != target_inc) continue;
			targetid = i;
		}
		if(targetid != INVALID_PLAYER_ID)
		{
			format(sql_string, sizeof(sql_string), ""c_green"* "c_white"%s убрал Вас из чёрного списка \"%s\".", PlayerInfo[playerid][name], f_info[PlayerInfo[playerid][member] -1][f_name]);
			SendClientMessage(targetid, col_white, sql_string);
		}

		format(sql_string, sizeof(sql_string), ""c_green"* "c_white"Вы убрали из чёрного списка %s.", pl_name);
		SendClientMessage(playerid, col_white, sql_string);
		show_dialog(playerid, d_blacklist, DIALOG_STYLE_LIST, ""c_server"Чёрный список", "Добавить человека в чёрный список\nОчистить черный список\nУбрать человека из черного списка", "Выбрать", "Назад");

	}
	else
	{
		new text_string[98];
		format(text_string, 98, ""c_orange_red"* "c_grey"%s не найден в чёрном списке.", pl_name);
		SendClientMessage(playerid, col_gray, text_string);
		show_dialog(playerid, d_blacklist, DIALOG_STYLE_LIST, ""c_server"Чёрный список", "Добавить человека в чёрный список\nОчистить черный список\nУбрать человека из черного списка", "Выбрать", "Назад");
	}
	return 1;
}

cmd:offwarn(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 3) return 1;
	new target_name[24], warn_reason[32];
	if(sscanf(params, "s[24]s[32]", target_name, warn_reason)) return SendClientMessage(playerid, col_gray,"Используйте: /offwarn [имя] [причина]");

	new scm_string[128];
	format(scm_string, sizeof(scm_string ), "SELECT `u_id` FROM `users` WHERE `u_name` = '%s' LIMIT 1", target_name);
	mysql_function_query(sql_connection, scm_string, true, "offwarn_check_callback", "iss", playerid, target_name, warn_reason);
	return 1;
}

callback: offwarn_check_callback(playerid, pl_name[], reason_[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(!rows)
	{
		new scm_string[128];
		format(scm_string, sizeof(scm_string), "Аккаунт %s не найден в базе данных.", pl_name);
		SendClientMessage(playerid, col_gray, scm_string);
		return 1;
	}
	else
	{
		new account_id = cache_get_field_content_int(0, "u_id", sql_connection);
		new scm_string[128];
		format(scm_string, sizeof(scm_string ), "SELECT * FROM `users_warns` WHERE `w_owner` = '%d' LIMIT 1", account_id);
		mysql_function_query(sql_connection, scm_string, true, "offwarn_second_callback", "isis", playerid, pl_name, account_id, reason_);
		return 1;
	}
}

callback: offwarn_second_callback(playerid, pl_name[], account_id, reason_[])
{
	new _warn_count = 0,
	query_string[78];
	format(query_string, sizeof(query_string),"SELECT * FROM users_warns WHERE w_owner = '%d'", account_id);
	new Cache:result = mysql_query(sql_connection, query_string);
	_warn_count = cache_num_rows();
	if(_warn_count != 2)
	{
		new scm_string[238];
		format(scm_string, 144, "Администратор %s выдал предупреждение игроку %s в оффлайне. Причина: %s", PlayerInfo[playerid][name], pl_name, reason_);
		foreach(new i: admin_players) if(PlayerInfo[i][settings][2]) SendClientMessage(i, col_light_red, scm_string);

		format(scm_string, sizeof(scm_string ), "INSERT INTO `users_warns` (`w_admin_name`,`w_owner`,`w_reason`,`w_date`,`w_end`) VALUES('%s', '%d', '%s', NOW(), NOW() + INTERVAL 5 DAY)", PlayerInfo[playerid][name], account_id, reason_);
		mysql_tquery(sql_connection, scm_string);


		format(scm_string, sizeof(scm_string ), "UPDATE `users` SET `u_member`='0',`u_rank`='0',`u_leader`='0' WHERE `u_id` = '%d' LIMIT 1", account_id);
		mysql_tquery(sql_connection, scm_string);

		return 1;
	}
	if(_warn_count == 2)
	{
		new scm_string[238];
		format(scm_string, 144, "Администратор %s заблокировал в оффлайне игрока %s [3 предупреждения]. Причина: %s", PlayerInfo[playerid][name], pl_name, reason_);
		foreach(new i: logged_players) if(PlayerInfo[i][settings][2]) SendClientMessage(i, col_light_red, scm_string);

		format(scm_string, sizeof(scm_string ), "INSERT INTO `users_bans` (`u_b_admin`,`u_b_name`,`u_b_reason`,`u_b_date`,`u_b_ndate`,`u_b_days`) VALUES('%s', '%s', '%s', NOW() + INTERVAL 3 DAY, NOW(), '3')", PlayerInfo[playerid][name], pl_name, reason_);
		mysql_query(sql_connection, scm_string);


		format(scm_string, sizeof scm_string, "UPDATE `users_warns` SET `w_end`=NOW() WHERE `w_owner`='%d'", account_id);
		mysql_tquery(sql_connection, scm_string);

		return 1;
	}
	cache_delete(result);
	return _warn_count;
}

callback: CallBackRadar(playerid,area)
{
    if(cop_player(playerid) && PlayerInfo[playerid][rank] > 4) return true;
    new vehicleid = GetPlayerVehicleID(playerid);
    new speed = floatround((GetVehicleSpeed(vehicleid)), floatround_ceil);
    new scm_string[130 + MAX_PLAYER_NAME * 2 + 42 + 6 + 6];
    if(speed >= RadarMaxSpeed[area]+10)
	{
        new shtraf = 250;
        new msg[142];
        format(msg,sizeof(msg),""c_server"* S.INFO: "c_grey"Вы нарушили скоростной режим на %d км/ч. Штраф: $%d!",speed-RadarMaxSpeed[area],shtraf);
        SendClientMessage(playerid, -1, msg);
        mysql_format(sql_connection, scm_string, sizeof(scm_string), "INSERT INTO `users_tickets` (`t_player`,`t_player_name`,`t_cop_name`,`t_reason`,`t_count`,`t_date`) VALUES ('%d','%s','None','Нарушение скоростного режима','%d',NOW())",
		PlayerInfo[playerid][id], PlayerInfo[playerid][name], shtraf);
		mysql_tquery(sql_connection, scm_string);
    }
    return true;
}

callback: auction_cars()
{
	new time = GetTickCount();
	cache_get_row_count(unactiveCars);
	if(unactiveCars)
	{
		new car_id;
		for(new i = 0; i < unactiveCars; i++)
		{
			cache_get_field_content_int(i, "id", car_id);

			cache_get_field_content(i, "active", portInfo[car_id][bActive], sql_connection);
			portInfo[car_id][bCarModel] = cache_get_field_content_int(i, "model", sql_connection);
			portInfo[car_id][bColor1] = cache_get_field_content_int(i, "color1", sql_connection);
			portInfo[car_id][bColor2] = cache_get_field_content_int(i, "color2", sql_connection);
			portInfo[car_id][bCurrentRate] = cache_get_field_content_int(i, "current_rate", sql_connection);
			portInfo[car_id][bAuctionPrice] = cache_get_field_content_int(i, "auction_price", sql_connection);
			portInfo[car_id][bStrengthPercentage] = cache_get_field_content_int(i, "strength", sql_connection);
			portInfo[car_id][bMileage] = cache_get_field_content_int(i, "mileage", sql_connection);
			cache_get_field_content(i, "tuning", portInfo[car_id][bTuning], sql_connection);
			cache_get_field_content(i, "ptuning", portInfo[car_id][bPTuning], sql_connection);
			portInfo[car_id][bRaterID] = cache_get_field_content_int(i, "winner_id", sql_connection);
			cache_get_field_content(i, "winner", portInfo[car_id][bRateInitiator], sql_connection, 32);
			portInfo[car_id][bDeliveryTime] = cache_get_field_content_int(i, "delivery_time", sql_connection);
			portInfo[car_id][bTime] = cache_get_field_content_int(i, "time", sql_connection);
			portInfo[car_id][bMaxSpeed] = max_veh_speed[portInfo[car_id][bCarModel] -400];
		}
		printf("[SERVER] Загружено автомобилей на порту: %d.", unactiveCars, GetTickCount() -time);
	}
	else print("[SERVER] Загружено автомобилей на порту: 0.");
	return 1;
}

callback: OnLoadRadarCallback()
{
    new r, f;
    new string[200];
    cache_get_data(r, f);
    for(new i = 0; i < r; i++)
    {
        RadarInfo[i][rid] = cache_get_field_content_int(i, "id", sql_connection);
        RadarInfo[i][rX] = cache_get_field_content_float(i, "rX", sql_connection);
        RadarInfo[i][rY] = cache_get_field_content_float(i, "rY", sql_connection);
        RadarInfo[i][rZ] = cache_get_field_content_float(i, "rZ", sql_connection);
        RadarInfo[i][rRZ] = cache_get_field_content_float(i, "rRZ", sql_connection);
        RadarInfo[i][rR] = cache_get_field_content_float(i, "rR", sql_connection);
        RadarInfo[i][rSpeed] = cache_get_field_content_int(i, "rSpeed", sql_connection);
        RadarInfo[i][rObj] = CreateObject(18880, RadarInfo[i][rX], RadarInfo[i][rY], RadarInfo[i][rZ], 0.0, 0.0, RadarInfo[i][rRZ]);
        new int = CreateDynamicSphere(RadarInfo[i][rX], RadarInfo[i][rY], RadarInfo[i][rZ], RadarInfo[i][rR], 0, 0, -1);
		RadarIterator[radariter++] = int;
		//Iter_Add(RadarIterator<radariter++>, int);
        RadarMaxSpeed[int] = RadarInfo[i][rSpeed];
        TOTALRADAR++;
        
		format(string, sizeof(string), ""c_server"Скоростной радар\n\n"c_white"Максимальная скорость: "c_server"%d км/ч", RadarInfo[i][rSpeed]);
        Create3DTextLabel(string, 0x008080FF, RadarInfo[i][rX], RadarInfo[i][rY], RadarInfo[i][rZ]+5.0, RadarInfo[i][rR], 0, 0);
    }
    if(TOTALRADAR == 0) print("[SERVER] Загружено радаров: 0");
    else printf("[SERVER] Загружено радаров: %d", TOTALRADAR);
    return 1;
}

/*callback: OfflineMessages(playerid)
{
	new string[144], query[78 + sizeof string];
	cache_get_value_index(0, 0, string);

	print(string);
	if(isnull(string)) return;

	SendClientMessage(playerid, -1, string);

	format(query, sizeof query, "UPDATE users SET u_offmsg_1 = TRIM(LEADING '%s;' FROM u_offmsg_1) WHERE u_id = %d", string, PlayerInfo[playerid][id]);
	mysql_query(sql_connection, query);

	format(query, sizeof query,  "SELECT SUBSTR(u_offmsg_1, 1, POSITION(';' IN u_offmsg_1)-1) FROM users WHERE u_id = %d", PlayerInfo[playerid][id]);
	mysql_tquery(sql_connection, query, "OfflineMessages", "d", playerid);
}
*/

cmd:offunwarn(playerid, params[])
{
	if(PlayerInfo[playerid][admin] < 5) return 1;
	if(sscanf(params, "s[24]", params[0])) return SendClientMessage(playerid, col_gray,"Используйте: /unwarnoff [имя]");

	new scm_string[128];
	format(scm_string, sizeof(scm_string ), "SELECT `u_id` FROM `users` WHERE `u_name` = '%s' LIMIT 1", params[0]);
	mysql_function_query(sql_connection, scm_string, true, "unwarnoff_check_callback", "is", playerid, params[0]);
	return 1;
}

callback: unwarnoff_check_callback(playerid, pl_name[])
{
	new account_id = cache_get_field_content_int(0, "u_id", sql_connection);
	new scm_string[128];
	format(scm_string, sizeof(scm_string ), "SELECT * FROM `users_warns` WHERE `w_owner` = '%d' LIMIT 1", account_id);
	mysql_function_query(sql_connection, scm_string, true, "unwarnoff_second_callback", "isi", playerid, pl_name, account_id);
	return 1;
}

callback: unwarnoff_second_callback(playerid, pl_name[], account_id)
{
	new scm_string[128];
	format(scm_string, sizeof(scm_string ), "DELETE FROM `users_warns` WHERE `w_owner`='%d'", account_id);
	mysql_query(sql_connection, scm_string);

	format(scm_string, 128, ""c_server"* A.INFO: "c_grey"%s снял все варны с %s.", PlayerInfo[playerid][name], pl_name);
	foreach(new i: admin_players) SendClientMessage(i, col_gray, scm_string);
	return 1;
}

stock clear_td_registration(playerid)
{
	for(new j = 0; j < 57; j ++)
		TextDrawHideForPlayer(playerid, Registration_TD[j]);

	PlayerTextDrawDestroy(playerid, Registration_PTD[playerid][0]);
	Registration_PTD[playerid][0] = PlayerText:-1;

    DeletePVar(playerid, "Registration");

	return 1;
}

stock clear_td_autorization(playerid)
{
	for(new j = 1; j < 27; j ++)
		TextDrawHideForPlayer(playerid, Autorization_TD[j]);

	PlayerTextDrawDestroy(playerid, Autorization_PTD[playerid][0]);
	Autorization_PTD[playerid][0] = PlayerText:-1;

    DeletePVar(playerid, "Autorization");

	return 1;
}

stock show_settings_family(playerid, family_id, select_id)
{
    global_string[0] = EOS;
    for(new i = 0; i < family_info[family_id -1][fam_settings][3]; i++)
    {
        new line_string[60];
        format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s\n", i + 1, family_rank[family_id -1][i]);
        strcat(global_string, line_string);
    }

    if(select_id == 0) show_dialog(playerid, d_family_settings_select, DIALOG_STYLE_LIST, !""scm_dialog"Приём в семью", global_string, !"Выбрать", !"Назад");
    else if(select_id == 1) show_dialog(playerid, d_family_settings_select, DIALOG_STYLE_LIST, !""scm_dialog"Исключение из семьи", global_string, !"Выбрать", !"Назад");
    else if(select_id == 2) show_dialog(playerid, d_family_settings_select, DIALOG_STYLE_LIST, !""scm_dialog"Изменение статуса", global_string, !"Выбрать", !"Назад");
    else if(select_id == 3) show_dialog(playerid, d_family_settings_select, DIALOG_STYLE_LIST, !""scm_dialog"Чёрный список", global_string, !"Выбрать", !"Назад");
    else if(select_id == 4) show_dialog(playerid, d_family_settings_select, DIALOG_STYLE_LIST, !""scm_dialog"Достук к /fam(un)mute", global_string, !"Выбрать", !"Назад");
    else if(select_id == 5) show_dialog(playerid, d_family_settings_select, DIALOG_STYLE_LIST, !""scm_dialog"Доступ к /famlock", global_string, !"Выбрать", !"Назад");
    else if(select_id == 6) show_dialog(playerid, d_family_settings_select, DIALOG_STYLE_LIST, !""scm_dialog"Достук к общаку", global_string, !"Выбрать", !"Назад");
    return SetPVarInt(playerid, !"select_id", select_id);
}

stock family_logs(playerid)
{
    return show_dialog(playerid, d_family_logs, DIALOG_STYLE_LIST, !""scm_dialog"История семьи", !""c_server"1."c_white" Ранговая история\n"c_server"2."c_white" История выговоров\n"c_server"3."c_white" Чёрный список\n"c_server"4."c_white" История принятий\n"c_server"5."c_white" История увольнений\n"c_server"6."c_white" История склада", !"Выбрать", !"Назад");
}

stock family_settings(playerid)
{
	global_string[0] = EOS;

    new f = PlayerInfo[playerid][family] -1, line_string[105];
    format(line_string, sizeof(line_string), ""c_server"1 | "c_white"Прием в семью -"c_server"%s\n", family_rank[f][(family_info[f][fam_settings][0]) -1]);
    strcat(global_string, line_string);
    format(line_string, sizeof(line_string), ""c_server"2 | "c_white"Исключение из семьи -"c_server"%s\n", family_rank[f][(family_info[f][fam_settings][1]) -1]);
    strcat(global_string, line_string);
    format(line_string, sizeof(line_string), ""c_server"3 | "c_white"Изменение статуса -"c_server"%s\n", family_rank[f][(family_info[f][fam_settings][2]) -1]);
    strcat(global_string, line_string);
    format(line_string, sizeof(line_string), ""c_server"4 | "c_white"Чёрный список -"c_server"%s\n", family_rank[f][(family_info[f][fam_settings][4]) -1]);
    strcat(global_string, line_string);
    format(line_string, sizeof(line_string), ""c_server"5 | "c_white"Доступ к /fam(un)mute -"c_server"%s\n", family_rank[f][(family_info[f][fam_settings][5]) -1]);
    strcat(global_string, line_string);
    format(line_string, sizeof(line_string), ""c_server"6 | "c_white"Доступ к /famlock -"c_server"%s\n", family_rank[f][(family_info[f][fam_settings][6]) -1]);
    strcat(global_string, line_string);
    format(line_string, sizeof(line_string), ""c_server"7 | "c_white"Доступ к общаку -"c_server"%s\n", family_rank[f][(family_info[f][fam_settings][7]) -1]);
    strcat(global_string, line_string);
    format(line_string, sizeof(line_string), ""c_server"8 | "c_white"Количество статусов -"c_server"%d\n", family_info[f][fam_settings][3]);
    strcat(global_string, line_string);

    strcat(global_string, ""c_server"9 | "c_white"Название статусов\n");
    strcat(global_string, ""c_server"10 | "c_white"Национальность семьи\n");
    strcat(global_string, ""c_server"11 | "c_white"Оформление семейного чата");

    return show_dialog(playerid, d_family_settings, DIALOG_STYLE_LIST, !""scm_dialog"Настройки семьи", global_string, !"Выбрать", !"Назад");
}

stock family_sql(familyid)
{
    new query_string[100];
    format(query_string, sizeof(query_string), "UPDATE `family` SET `fam_settings`='%d|%d|%d|%d|%d|%d|%d|%d' WHERE `fam_id`='%d' LIMIT 1", family_info[familyid -1][fam_settings][0], family_info[familyid -1][fam_settings][1], family_info[familyid -1][fam_settings][2], family_info[familyid -1][fam_settings][3], family_info[familyid -1][fam_settings][4], family_info[familyid -1][fam_settings][5], family_info[familyid -1][fam_settings][6], family_info[familyid -1][fam_settings][7], familyid);
    mysql_query(sql_connection, query_string);
    return 1;
}

stock write_family(playerid, fam, type, text[])
{
    slobal_string[0] = EOS;
    format(slobal_string, sizeof(slobal_string), "INSERT INTO `logs_family` (`name`,`family`,`type`,`Text`,`text_date`) VALUES ('%s','%d','%d','%s', NOW())", PlayerInfo[playerid][name], fam, type, text);
    mysql_query(sql_connection, slobal_string);
    return 1;
}

callback: callback_offamily(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);

	if(!rows)
	{
		SendClientMessage(playerid, col_white, !""scm_error"Игроки с данными параметрами не найдены.");
		DeletePVar(playerid, !"ofm_list_page");
		return pc_cmd_fmenu(playerid);
	}

	new rows_list = GetPVarInt(playerid, !"ofm_list_page") -1;
	SetPVarInt(playerid, !"ofm_list_rows", rows);

	global_string[0] = EOS;
	strcat(global_string, ""c_grey"Предыдущая страница\n"c_grey"Следующая страница\n"c_white"");
	for(new i = rows_list * 10; i < rows_list * 10 + 10; i ++)
	{
		if(i >= rows) break;

		new pl_ofm_name[24], pl_ofm_online[24], fam_c_rank;
		
		
		cache_get_field_content(i, "u_name", pl_ofm_name, sql_connection, 24);
		cache_get_field_content(i, "u_last_date", pl_ofm_online, sql_connection, 24);
		fam_c_rank = cache_get_field_content_int(i, "u_family_rank", sql_connection);

		new pvar_string[8];
		format(pvar_string, sizeof(pvar_string), "ofm_%d", i -rows_list * 10);
		SetPVarString(playerid, pvar_string, pl_ofm_name);

		new _pl_id;
		sscanf(pl_ofm_name, "u", _pl_id);

		new line_string[120];
		format(line_string, sizeof(line_string), "%s -%s (%d) -%s (%s)\n", pl_ofm_name, family_rank[PlayerInfo[playerid][family] -1][fam_c_rank -1], fam_c_rank, pl_ofm_online, (IsPlayerConnected(_pl_id)) ? (""c_green"в сети") : (""c_orange_red"не в сети"));
		strcat(global_string, line_string);
	}
	return show_dialog(playerid, d_offamily_list, DIALOG_STYLE_LIST, !""scm_dialog"Члены семьи ["c_orange_red"не в сети"c_white"]", global_string, !"Выбрать", !"Назад");
}

callback: callback_offamily_info(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);

	if(rows)
	{
	
		new last_date[16], fraction_date[24], fam_c_rank;
		fam_c_rank = cache_get_field_content_int(0, "u_family_rank", sql_connection);
		cache_get_field_content(0, "u_last_date", last_date, sql_connection, 24);
		cache_get_field_content(0, "u_family_date", fraction_date, sql_connection, 24);

		new pvar_string[38], pl_name[MAX_PLAYER_NAME];
		format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
		GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

		new dialog_string[256];
		format(dialog_string, sizeof(dialog_string), ""c_white"Имя: "c_server"%s\n"c_white"Должность: "c_server"%s (%d)\n"c_white"В семье: "c_grey"%s\n"c_white"Последний вход: "c_grey"%s", pl_name, family_rank[PlayerInfo[playerid][family] -1][fam_c_rank -1], fam_c_rank, fraction_date, last_date);
		show_dialog(playerid, d_offamily_pl_menu_info, DIALOG_STYLE_MSGBOX, !""scm_dialog"Информация об игроке", dialog_string, !"Назад", !"");
	}
	if(!rows)
	{
		DeletePVar(playerid, !"ofm_listitem");
		if(!GetPVarInt(playerid, !"ofm_type"))
		{
			new query_string[100];
			mysql_format(sql_connection, query_string, sizeof(query_string), "SELECT `u_name`,`u_last_date`,`u_family_rank` FROM `users` WHERE `u_family`='%d'", PlayerInfo[playerid][family]);
			mysql_tquery(sql_connection, query_string, "callback_offamily", "i", playerid);
			return 1;
		}
	}
	return 1;
}

callback: logs_player_family(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);

	new t_name[32], t_date[48], t_id;
	if(!rows)
	{
		DeletePVar(playerid, !"ofm_list_page");
		return SendClientMessage(playerid, col_white, !""scm_error"Активных логов не найдено.");
	}

	SetPVarInt(playerid, !"ofm_list_rows", rows);
	new rows_list = GetPVarInt(playerid, !"ofm_list_page") -1;

	global_string[0] = EOS;
	strcat(global_string, ""c_grey"Предыдущая страница\n"c_grey"Следующая страница\n"c_white"");
	for(new i = rows_list * 10; i < rows_list * 10 + 10; i ++)
	{
		if(i >= rows) break;

		t_id = cache_get_field_content_int(i, "id", sql_connection);
		cache_get_field_content(i, "name", t_name, sql_connection, 32);
		cache_get_field_content(i, "text_date", t_date, sql_connection, 48);

		new pvar_string[16];
		format(pvar_string, sizeof(pvar_string), "vrl_%d", i -rows_list * 10);
		SetPVarInt(playerid, pvar_string, t_id);

		new line_string[128];
		format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s "c_grey"(%s)\n", i + 1, t_name, t_date);
		strcat(global_string, line_string);
	}
	return show_dialog(playerid, d_offamily_lognext, DIALOG_STYLE_LIST, !""scm_dialog"История семьи", global_string, !"Выбрать", !"Закрыть");
}

callback: logs_player_family_info(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);

	if(!rows)
	{
		DeletePVar(playerid, !"ofm_list_page");
		return pc_cmd_fmenu(playerid);
	}


	new t_name[32], t_date[48], t_text[128];
	cache_get_field_content(0, "name", t_name, sql_connection, 32);
	cache_get_field_content(0, "text_date", t_date, sql_connection, 48);
	cache_get_field_content(0, "Text", t_text, sql_connection, 128);

	new logs_dialog[512];
	format(logs_dialog, sizeof(logs_dialog), ""c_white"Ник персонажа: "c_gold"%s\n"c_white"Дата: "c_silver"%s\n\n"c_white"Действие: "c_silver"%s", t_name, t_date, t_text);
	return show_dialog(playerid, d_offamily_logback, DIALOG_STYLE_MSGBOX, !""scm_dialog"История семьи", logs_dialog, !"Назад", !"Закрыть");
}

callback: get_family_logs(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);

	new t_name[32], t_date[48], t_id;
	if(!rows)
	{
		DeletePVar(playerid, !"ofm_list_page");
		return SendClientMessage(playerid, col_white, !""scm_error"Активных логов не найдено.");
	}

	SetPVarInt(playerid, !"ofm_list_rows", rows);
	new rows_list = GetPVarInt(playerid, !"ofm_list_page") -1;

	global_string[0] = EOS;
	strcat(global_string, ""c_grey"Предыдущая страница\n"c_grey"Следующая страница\n"c_white"");
	for(new i = rows_list * 10; i < rows_list * 10 + 10; i ++)
	{
		if(i >= rows) break;

		t_id = cache_get_field_content_int(i, "id", sql_connection);
		cache_get_field_content(i, "name", t_name, sql_connection, 32);
		cache_get_field_content(i, "text_date", t_date, sql_connection, 48);

		new pvar_string[16];
		format(pvar_string, sizeof(pvar_string), "vrl_%d", i -rows_list * 10);
		SetPVarInt(playerid, pvar_string, t_id);

		new line_string[100];
		format(line_string, sizeof(line_string), ""c_server"%d | "c_white"%s -"c_grey"%s\n", i + 1, t_name, t_date);
		strcat(global_string, line_string);
	}
	return show_dialog(playerid, d_family_lognext, DIALOG_STYLE_LIST, !""scm_dialog"История семьи", global_string, !"Выбрать", !"Закрыть");
}

callback: get_family_logs_info(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);

	if(!rows)
	{
	    DeletePVar(playerid, !"ofm_list_page");
	    return pc_cmd_fmenu(playerid);
	}

	new t_name[32], t_date[48], t_text[128];
	
	cache_get_field_content(0, "name", t_name, sql_connection, 32);
	cache_get_field_content(0, "text_date", t_date, sql_connection, 48);
	cache_get_field_content(0, "Text", t_text, sql_connection, 128);

	new dialog_string[350];
	format(dialog_string, sizeof(dialog_string), ""c_white"Ник персонажа: "c_gold"%s\n"c_white"Дата: "c_silver"%s\n\n"c_white"Действие: "c_silver"%s", t_name, t_date, t_text);
	return show_dialog(playerid, d_family_logback, DIALOG_STYLE_MSGBOX, !""scm_dialog"История семьи", dialog_string, !"Назад", !"Закрыть");
}

callback: check_bl_list_family(playerid, pl_name[])
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new target_inc;
		
		target_inc = cache_get_field_content_int(0, "bl_player", sql_connection);

		new query_string[144];
		format(query_string, sizeof(query_string), "DELETE FROM `family_blacklist` WHERE `bl_player`='%d' AND `bl_family`='%d' LIMIT 1", target_inc, PlayerInfo[playerid][family]);
		mysql_query(sql_connection, query_string);

		new targetid = INVALID_PLAYER_ID;
		foreach(new i: logged_players)
		{
			if(PlayerInfo[i][id] != target_inc) continue;
			targetid = i;
		}
		if(targetid != INVALID_PLAYER_ID)
		{
			format(query_string, sizeof(query_string), ""scm_info""c_server"%s"c_white" убрал Вас из чёрного списка семьи "c_gold"%s", PlayerInfo[playerid][name], family_info[PlayerInfo[playerid][family] -1][fam_name]);
			SendClientMessage(targetid, col_white, query_string);
		}
		format(query_string, sizeof(query_string), "%s убрал(-а) %s из чёрного списка семьи %s", PlayerInfo[playerid][name], pl_name, family_info[PlayerInfo[playerid][family] -1][fam_name]);
		write_family(playerid, PlayerInfo[playerid][family], TYPE_LOG_BL, query_string);

		format(query_string, sizeof(query_string), ""scm_info"Вы убрали из чёрного списка "c_server"%s", pl_name);
		SendClientMessage(playerid, col_white, query_string);

		show_dialog(playerid, d_blacklist_family, DIALOG_STYLE_LIST, !""scm_dialog"Чёрный список", !""c_server"1."c_white" Добавить человека в чёрный список\n"c_server"2."c_white" Очистить черный список\n"c_server"3."c_white" Убрать человека из черного списка\n"c_server"4."c_white"Чёрный список игроков", !"Выбрать", !"Назад");
	}
	else
	{
		new text_string[95];
		format(text_string, sizeof(text_string), ""scm_error""c_server"%s"c_white" не найден в чёрном списке", pl_name);
		SendClientMessage(playerid, col_white, text_string);

		show_dialog(playerid, d_blacklist_family, DIALOG_STYLE_LIST, !""scm_dialog"Чёрный список", !""c_server"1."c_white" Добавить человека в чёрный список\n"c_server"2."c_white" Очистить черный список\n"c_server"3."c_white" Убрать человека из черного списка\n"c_server"4."c_white"Чёрный список игроков", !"Выбрать", !"Назад");
	}
	return 1;
}

callback: callback_bl_family(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
    if(!rows) return SendClientMessage(playerid, col_white, !""scm_error"Игроки с данными параметрами не найдены.");

    new rows_list = GetPVarInt(playerid, !"ofm_list_page") -1;
    SetPVarInt(playerid, !"ofm_list_rows", rows);

    global_string[0] = EOS;
    strcat(global_string, ""c_grey"Предыдущая страница\n"c_grey"Следующая страница\n"c_white"");
    for(new i = rows_list * 10; i < rows_list * 10 + 10; i ++)
    {
        if(i >= rows) break;

        new pl_ofm_name[24], pl_ofm_online[24];

        cache_get_field_content(i, "bl_name", pl_ofm_name, sql_connection, 24);
        cache_get_field_content(i, "bl_date", pl_ofm_online, sql_connection, 24);

        new pvar_string[8];
        format(pvar_string, sizeof(pvar_string), "ofm_%d", i -rows_list * 10);
        SetPVarString(playerid, pvar_string, pl_ofm_name);

        new _pl_id;
        sscanf(pl_ofm_name, "u", _pl_id);

        new line_string[95];
        format(line_string, sizeof(line_string), ""c_white"%s -"c_grey"Дата занесения: %s (%s)\n", pl_ofm_name, pl_ofm_online, (IsPlayerConnected(_pl_id)) ? (""c_green"в сети"c_white"") : (""c_orange_red"не в сети"c_white""));
        strcat(global_string, line_string);
    }
    return show_dialog(playerid, d_offamily_bl_list, DIALOG_STYLE_LIST, !""scm_dialog"Чёрный список", global_string, !"Выбрать", !"Назад");
}

callback: callback_bl_family_info(playerid)
{
	new rows, fields;
	cache_get_data(rows, fields);
	if(rows)
	{
		new pl_date[24], pl_reason[24], pl_add_name[32];

		cache_get_field_content(0, "bl_date", pl_date, sql_connection, 24);
		cache_get_field_content(0, "bl_reason", pl_reason, sql_connection, 24);
		cache_get_field_content(0, "bl_add_name", pl_add_name, sql_connection, 32);

		new pvar_string[38], pl_name[MAX_PLAYER_NAME];
		format(pvar_string, sizeof(pvar_string), "ofm_%d", GetPVarInt(playerid, !"ofm_listitem"));
		GetPVarString(playerid, pvar_string, pl_name, MAX_PLAYER_NAME);

		new dialog_string[325];
		format(dialog_string, sizeof(dialog_string), ""c_white"Имя: "c_gold"%s\n"c_white"Причина: "c_silver"%s\n"c_white"Дата занесения: "c_silver"%s\n"c_white"Занес: "c_silver"%s", pl_name, pl_reason, pl_date, pl_add_name);
		show_dialog(playerid, d_offamily_bl_pl_menu_info, DIALOG_STYLE_MSGBOX, !""scm_dialog"Информация о игроке", dialog_string, !"Назад", !"");
	}
	if(!rows)
	{
		DeletePVar(playerid, !"ofm_listitem");

		if(!GetPVarInt(playerid, !"ofm_type"))
		{
			new query_string[80];
			format(query_string, sizeof(query_string), "SELECT `bl_name`,`bl_date` FROM `family_blacklist` WHERE `bl_family`='%d'", PlayerInfo[playerid][family]);
			mysql_tquery(sql_connection, query_string, "callback_bl_family", "i", playerid);
			return 1;
		}
	}
	return 1;
}

stock show_dialog_offpanel(playerid, pl_name[], _type)
{
	new header_string[45];
	format(header_string, sizeof(header_string), ""scm_dialog"%s", pl_name);

	switch(_type)
	{
	    case 0: show_dialog(playerid, d_offadmins_menu, DIALOG_STYLE_LIST, header_string, !"Статистика администратора\nСнять администратора\nПовысить / понизить администратора\nОнлайн администратора\nПолная информация", !"Выбрать", !"Назад");
	    case 1: show_dialog(playerid, d_offleaders_menu, DIALOG_STYLE_LIST, header_string, !"Информация об игроке\nСнять с лидерского поста\nОнлайн лидера\nПолная информация", !"Выбрать", !"Назад");
	    case 2: {}
	    case 3: show_dialog(playerid, d_offamily_pl_menu, DIALOG_STYLE_LIST, header_string, !"Информация об игроке\nВыгнать из семьи\nПовысить / понизить игрока\nИстория в семье", !"Выбрать", !"Назад");
	    case 4: show_dialog(playerid, d_offamily_bl_pl_menu, DIALOG_STYLE_LIST, header_string, !"Информация об игроке\nВычеркнуть из чёрного списка", !"Выбрать", !"Назад");
	}
	return 1;
}

stock offuninvite_check(playerid, pl_name[], type)
{
	if(type == 0)
	{
		new _pl_id, family_id = PlayerInfo[playerid][family];
		sscanf(pl_name, "u", _pl_id);

		if(IsPlayerConnected(_pl_id))
		{
			if(playerid == _pl_id)
			{
				SendClientMessage(playerid, col_white, !""scm_error"Вы не можете применить это действие к себе.");

				DeletePVar(playerid, !"ofm_listitem");
				if(!GetPVarInt(playerid, !"ofm_type"))
				{
					new query_string[100];
					mysql_format(sql_connection, query_string, sizeof(query_string), "SELECT `u_name`,`u_last_date`,`u_family_rank` FROM `users` WHERE `u_family`='%d'", PlayerInfo[playerid][family]);
					mysql_tquery(sql_connection, query_string, "callback_offamily", "i", playerid);
				}
				return 1;
			}
			Iter_Remove(family_players[family_id], _pl_id);

			PlayerInfo[_pl_id][family] = 0;
			PlayerInfo[_pl_id][family_rang] = 0;

			new text_string[105];
			format(text_string, sizeof(text_string), ""scm_info""c_server"%s"c_white" выгнал(-а) Вас из семьи.", PlayerInfo[playerid][name]);
			SendClientMessage(_pl_id, col_white, text_string);
		}
		else
		{
			new query_string[105];
			format(query_string, sizeof(query_string), "INSERT INTO `debtor_message`(`dm_text`, `dm_dest`) VALUES ('Вас выгнали из семьи.','%d')", get_player_account_id(pl_name));
			mysql_query(sql_connection, query_string);
		}
		new query_string[125];
		format(query_string, sizeof(query_string), "UPDATE `users` SET `u_family`='0',`u_family_rank`='0' WHERE `u_name`='%s' LIMIT 1", pl_name);
		mysql_query(sql_connection, query_string);

		format(query_string, sizeof(query_string), ""scm_info"Вы выгнали "c_server"%s"c_white" из семьи.", pl_name);
		SendClientMessage(playerid, col_white, query_string);

		family_info[family_id][fam_members] --;

		format(query_string, sizeof(query_string), "UPDATE `family` SET `fam_members`='%d' WHERE `fam_id`='%d' LIMIT 1", family_info[family_id -1][fam_members], family_id);
		mysql_query(sql_connection, query_string);

		format(query_string, sizeof(query_string), "%s выгнал(-а) из семьи %s", PlayerInfo[playerid][name], pl_name);
		write_family(playerid, family_id, TYPE_LOG_UVAL, query_string);

		DeletePVar(playerid, !"ofm_listitem");
		if(!GetPVarInt(playerid, !"ofm_type"))
		{
			mysql_format(sql_connection, query_string, sizeof(query_string), "SELECT `u_name`,`u_last_date`,`u_family_rank` FROM `users` WHERE `u_family`='%d'", PlayerInfo[playerid][family]);
			mysql_tquery(sql_connection, query_string, "callback_offamily", "i", playerid);
			return 1;
		}
	}
	return 1;
}

stock offmembers_rank(playerid, value_rank, pl_name[], type)
{
	if(type == 0)
	{
		new _pl_id;
		sscanf(pl_name, "u", _pl_id);

		if(IsPlayerConnected(_pl_id))
		{
			if(playerid == _pl_id)
			{
				SendClientMessage(playerid, col_white, !""scm_error"Вы не можете применить это действие к себе.");
				return show_dialog_offpanel(playerid, pl_name, 3);
			}
			PlayerInfo[_pl_id][family_rang] = value_rank;

			new text_string[110];
			format(text_string, sizeof(text_string), ""scm_info""c_server"%s"c_white" изменил(-а) Ваш статус в семье на "c_gold"%d", PlayerInfo[playerid][name], value_rank);
			SendClientMessage(_pl_id, col_white, text_string);
		}
		else
		{
			new debtor_string[35];
			format(debtor_string, sizeof(debtor_string), "Вам изменили статус в семье на %d", value_rank);

			new query_string[150];
			format(query_string, sizeof(query_string), "INSERT INTO `debtor_message`(`dm_text`,`dm_dest`) VALUES ('%s','%d')", debtor_string, get_player_account_id(pl_name));
			mysql_query(sql_connection, query_string);
		}
		new query_string[120];
		format(query_string, sizeof(query_string), "UPDATE `users` SET `u_family_rank`='%d' WHERE `u_name`='%s' LIMIT 1", value_rank, pl_name);
		mysql_query(sql_connection, query_string);

		format(query_string, sizeof(query_string), ""scm_info"Вы изменили статус "c_server"%s"c_white" на "c_gold"%d", pl_name, value_rank);
		SendClientMessage(playerid, col_white, query_string);

		format(query_string, sizeof(query_string), "%s изменил(-а) статус %s на %d", PlayerInfo[playerid][name], pl_name, value_rank);
		write_family(playerid, PlayerInfo[playerid][family], TYPE_LOG_AGIVERANK, query_string);
	}
    return 1;
}

callback: load_family_vehicles()
{
	new rows, fields;
	cache_get_data(rows, fields);
	
    if(rows)
    {
        for(new i = 0; i < rows; i++)
        {
			new veh_id = GetVehicleID();
			veh_info[veh_id -1][v_id] = cache_get_field_content_int(i, "sv_id", sql_connection);
			veh_info[veh_id -1][v_model] = cache_get_field_content_int(i, "sv_model", sql_connection);
			veh_info[veh_id -1][v_type] = cache_get_field_content_int(i, "sv_type", sql_connection);
			veh_info[veh_id -1][v_owner] = cache_get_field_content_int(i, "sv_owner", sql_connection);
			veh_info[veh_id -1][v_rank] = cache_get_field_content_int(i, "sv_rank", sql_connection);

			cache_get_field_content(i, "sv_plate", veh_info[veh_id -1][v_plate], sql_connection, 12);

			veh_info[veh_id -1][v_fuel] = cache_get_field_content_float(i, "sv_fuel", sql_connection);

			veh_info[veh_id -1][v_color][0] = cache_get_field_content_int(i, "sv_color_1", sql_connection);
			veh_info[veh_id -1][v_color][1] = cache_get_field_content_int(i, "sv_color_2", sql_connection);
			veh_info[veh_id -1][v_paint] = cache_get_field_content_int(i, "sv_paint", sql_connection);

			veh_info[veh_id -1][v_pos][0] = cache_get_field_content_float(i, "sv_pos_x", sql_connection);
			veh_info[veh_id -1][v_pos][1] = cache_get_field_content_float(i, "sv_pos_y", sql_connection);
			veh_info[veh_id -1][v_pos][2] = cache_get_field_content_float(i, "sv_pos_z", sql_connection);
			veh_info[veh_id -1][v_pos][3] = cache_get_field_content_float(i, "sv_pos_a", sql_connection);

			veh_info[veh_id -1][v_millage] = cache_get_field_content_float(i, "sv_millage", sql_connection);

			veh_info[veh_id -1][v_engine_boost] = cache_get_field_content_float(i, "sv_engine_boost", sql_connection);
			veh_info[veh_id -1][v_brake_boost] = cache_get_field_content_float(i, "sv_brake_boost", sql_connection);
			veh_info[veh_id -1][v_stability_boost] = cache_get_field_content_float(i, "sv_stability_boost", sql_connection);

			new sscanf_delimit[126];
			cache_get_field_content(i, "sv_eng_details", sscanf_delimit, sql_connection, 16);
			sscanf(sscanf_delimit, "p<|>ddddd", veh_info[veh_id -1][v_pt_engine][0], veh_info[veh_id -1][v_pt_engine][1], veh_info[veh_id -1][v_pt_engine][2], veh_info[veh_id -1][v_pt_engine][3], veh_info[veh_id -1][v_pt_engine][4]);

			cache_get_field_content(i, "sv_brake_details", sscanf_delimit, sql_connection, 16);
			sscanf(sscanf_delimit, "p<|>ddddd", veh_info[veh_id -1][v_pt_brake][0], veh_info[veh_id -1][v_pt_brake][1], veh_info[veh_id -1][v_pt_brake][2], veh_info[veh_id -1][v_pt_brake][3], veh_info[veh_id -1][v_pt_brake][4]);

			cache_get_field_content(i, "sv_stab_details", sscanf_delimit, sql_connection, 16);
			sscanf(sscanf_delimit, "p<|>ddddd", veh_info[veh_id -1][v_pt_stability][0], veh_info[veh_id -1][v_pt_stability][1], veh_info[veh_id -1][v_pt_stability][2], veh_info[veh_id -1][v_pt_stability][3], veh_info[veh_id -1][v_pt_stability][4]);

			cache_get_field_content(i, "sv_components", sscanf_delimit, sql_connection, 126);
			sscanf(sscanf_delimit, "p<|>dddddddddd", veh_info[veh_id -1][v_component][0], veh_info[veh_id -1][v_component][1], veh_info[veh_id -1][v_component][2], veh_info[veh_id -1][v_component][3], veh_info[veh_id -1][v_component][4], veh_info[veh_id -1][v_component][5], veh_info[veh_id -1][v_component][6], veh_info[veh_id -1][v_component][7], veh_info[veh_id -1][v_component][8], veh_info[veh_id -1][v_component][9]);

			veh_info[veh_id -1][v_vw] = cache_get_field_content_int(i, "sv_vw", sql_connection);
			veh_info[veh_id -1][v_int] = cache_get_field_content_int(i, "sv_int", sql_connection);

            veh_info[veh_id -1][v_vehicle] = AddStaticVehicleEx(veh_info[veh_id -1][v_model], veh_info[veh_id -1][v_pos][0], veh_info[veh_id -1][v_pos][1], veh_info[veh_id -1][v_pos][2], veh_info[veh_id -1][v_pos][3], veh_info[veh_id -1][v_color][0], veh_info[veh_id -1][v_color][1], 600);
            SetVehicleNumberPlate(veh_info[veh_id -1][v_vehicle], veh_info[veh_id -1][v_plate]);

			if(veh_info[veh_id -1][v_int] != 0)
				LinkVehicleToInterior(veh_info[veh_id -1][v_vehicle], veh_info[veh_id -1][v_int]);

			if(veh_info[veh_id -1][v_vw] != 0)
				SetVehicleVirtualWorld(veh_info[veh_id -1][v_vehicle], veh_info[veh_id -1][v_vw]);

            if(veh_info[veh_id -1][v_paint] != 3)
            	ChangeVehiclePaintjob(veh_info[veh_id -1][v_vehicle], veh_info[veh_id -1][v_paint]);

            for(new j = 0; j < 10; j ++)
            	AddVehicleComponent(veh_info[veh_id -1][v_vehicle], veh_info[veh_id -1][v_component][j]);

            Iter_Add(family_vehicles[veh_info[veh_id -1][v_owner]], veh_id);
        }
    }
    return printf("[SERVER] Всего загружено семейного транспорта: %d", rows);
}

stock convert_money(amount, delimiter[2] = ",")
{
	new int_string[15];
	format(int_string, sizeof(int_string), "%d", amount >= 0 ? amount : -amount);

	new value = strlen(int_string);
	switch(value)
	{
		case 4..6:
			strins(int_string, delimiter, value -3, 1);
		case 7..9:
			strins(int_string, delimiter, value -3, 1),
			strins(int_string, delimiter, value -6, 1);
		case 10..12:
			strins(int_string, delimiter, value -3, 1),
			strins(int_string, delimiter, value -6, 1),
			strins(int_string, delimiter, value -9, 1);
	}

	if(amount < 0) strins(int_string, "-", 0);
	return int_string;
}

callback: fixed_camera_pos(playerid, _inter_id, _type)
{
	switch(_type)
	{
		case 1:
		{
			SetPlayerCameraPos(playerid, b_info[_inter_id][b_position][0] -15, b_info[_inter_id][b_position][1] + 27, b_info[_inter_id][b_position][2] + 31);
			SetPlayerCameraLookAt(playerid, b_info[_inter_id][b_position][0] -14, b_info[_inter_id][b_position][1] + 26, b_info[_inter_id][b_position][2] + 30);
		}
		case 2:
		{
			SetPlayerCameraPos(playerid, h_info[_inter_id][h_pos][0] -15, h_info[_inter_id][h_pos][1] + 27, h_info[_inter_id][h_pos][2] + 31);
			SetPlayerCameraLookAt(playerid, h_info[_inter_id][h_pos][0] -14, h_info[_inter_id][h_pos][1] + 26, h_info[_inter_id][h_pos][2] + 30);
		}
		case 3:
		{
			SetPlayerCameraPos(playerid, fi_info[_inter_id][fi_pos][0] + 110, fi_info[_inter_id][fi_pos][1], fi_info[_inter_id][fi_pos][2] + 47);
			SetPlayerCameraLookAt(playerid, fi_info[_inter_id][fi_pos][0] + 109, fi_info[_inter_id][fi_pos][1], fi_info[_inter_id][fi_pos][2] + 46);
		}
	}

    KillTimer(p_t_info[playerid][camera_timer]);
    p_t_info[playerid][camera_timer] = 0;
    return 1;
}

stock report_delete(i)
{
	report_player[i] = -1;
	report_text[i][0] = EOS;
	report_text_admin[i][0] = EOS;
	report_slot[i] = -1;
	return 1;
}

callback: OnCheatDetected(playerid, const ip_address[], type, code)
{
	if(IsPlayerMobile(playerid) && code != 1 && code != 3 && code != 10) return 1;

	new bot_ip[16];
	GetPlayerIp(playerid, bot_ip, sizeof(bot_ip));
	if(!strcmp(bot_ip, "255.255.255.255", true)) return 1;

	if(PlayerInfo[playerid][admin] >= 1) return 1;
	if(type == AC_CODE_TRIGGER_TYPE_DISABLED) return 1;

    if(type == AC_GLOBAL_TRIGGER_TYPE_PLAYER)
    {
        switch(code)
        {
            case 5, 6, 11, 22:
            {
                return 1;
            }
            case 32: // CarJack
            {
                new
                    Float:x,
                    Float:y,
                    Float:z;

                AntiCheatGetPos(playerid, x, y, z);
                return SetPlayerPos(playerid, x, y, z);
            }
            case 40: // Sandbox
            {
                SendClientMessage(playerid, -1, MAX_CONNECTS_MSG);
                return AntiCheatKickWithDesync(playerid, code);
            }
            case 41: // Invalid Version
            {
                SendClientMessage(playerid, -1, UNKNOWN_CLIENT_MSG);
                return AntiCheatKickWithDesync(playerid, code);
            }
            default:
            {
                if(gettime() -pAntiCheatLastCodeTriggerTime[playerid][code] < AC_TRIGGER_ANTIFLOOD_TIME)
                    return 1;

                pAntiCheatLastCodeTriggerTime[playerid][code] = gettime();
                AC_CODE_TRIGGERED_COUNT[code] ++;

                new
                    string[88 -10 + MAX_PLAYER_NAME + 5 + AC_MAX_CODE_NAME_LENGTH + AC_MAX_CODE_LENGTH],
                    trigger_type = AC_CODE_TRIGGER_TYPE[code];

				switch(trigger_type)
				{
	                case AC_CODE_TRIGGER_TYPE_WARNING:
	                {
	                    format(string, sizeof(string), ""c_server"* A.INFO:"c_grey" %s[%d] подозревается в использовании чит-программ: %s [code: %03d].", PlayerInfo[playerid][name], playerid, AC_CODE_NAME[code], code);
	                    foreach(new i : admin_players) SendClientMessage(i, col_white, string);
	                }
	                case AC_CODE_TRIGGER_TYPE_KICK:
	                {
	                    format(string, sizeof(string), ""c_server"* A.INFO:"c_grey" %s[%d] был кикнут по подозрению в использовании чит-программ: %s [code: %03d].", PlayerInfo[playerid][name], playerid, AC_CODE_NAME[code], code);
	                    foreach(new i : admin_players) SendClientMessage(i, col_white, string);
	                    
						new hour, minute, second;
						gettime(hour, minute, second);

                        global_string = "";
	              		format(global_string, sizeof(global_string), ""c_orange_red"Вы были отсоединены от сервера Анти-Чит системой.\n\n\
						"c_white"Не исключено, что это могло произойти по ошибке, в таком случае, приносим свои извенения.\n\
						"c_white"Вы можете помочь нам в улучшении Анти-Чит системы, для этого сделайте скриншот экрана {FFE100}(F8)\n\
						"c_white"И отправьте его на наш форум ("c_server"forum.elive-rp.ru"c_white") в: "c_server"Технический раздел.\n\
						"c_white"Ник-Нейм: "c_server"%s\n\
						"c_white"Идентификатор: "c_server"#%03d | %s\n\
						"c_white"Время на момент срабатывания: %02d:%02d:%02d\n\n\
						\t\t"c_grey"* Напоминаем, что использование чит-программ наказывается блокировкой аккаунта\n", PlayerInfo[playerid][name], code, AC_CODE_NAME[code], hour, minute, second),
						show_dialog(playerid, d_none, DIALOG_STYLE_MSGBOX, !""scm_dialog"Уведомление системы безопасности", global_string, !"Закрыть", !"");

						AntiCheatKickWithDesync(playerid, code);
	                }
	                case AC_CODE_TRIGGER_TYPE_PANEL:
	                {
	                    switch(code)
	                    {
							case 0..9: add_cheater(playerid, 0);
							case 10..17: add_cheater(playerid, 1);
					        case 18: add_cheater(playerid, 0);
					        case 19..22: add_cheater(playerid, 1);
					        case 23: add_cheater(playerid, 0);
					        case 24..29: add_cheater(playerid, 1);
					        case 30: add_cheater(playerid, 0);
					        case 31..52: add_cheater(playerid, 1);
						}
					}
	                case AC_CODE_TRIGGER_TYPE_DISABLED: return 1;
				}
            }
        }
    }
    else // AC_GLOBAL_TRIGGER_TYPE_IP
    {
        AC_CODE_TRIGGERED_COUNT[code] ++;

        new
            string[58 -8 + 16 + AC_MAX_CODE_NAME_LENGTH + AC_MAX_CODE_LENGTH];

        format(string, sizeof(string), "<AC-BAN-IP> IP-адрес %s был заблокирован: %s [code: %03d].", ip_address, AC_CODE_NAME[code], code);
        foreach(new i : admin_players) SendClientMessage(i, col_white, string);

        BlockIpAddress(p_t_info[playerid][p_ip], 60 * 1000);
    }
    return 1;
}

/* Islands

cmd:island(playerid)
{
	if(PlayerInfo[playerid][island] == -1) return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет семейного острова.");
	return show_dialog(playerid, d_island, DIALOG_STYLE_LIST, !""scm_dialog"Семейный остров", !""c_server"1 | "c_white"Информация об острове\n"c_server"2 | "c_white"Улучшения", !"Выбрать", !"Закрыть");
}
cmd:sellisland(playerid)
{
	if(PlayerInfo[playerid][island] == -1) return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет семейного острова.");

	new dialog_string[110];
	format(dialog_string, sizeof(dialog_string), ""c_white"Вы действительно хотите продать семейный остров?\nСтоимость: "c_green"%d$", (fi_info[PlayerInfo[playerid][island] -1][fi_price] / 100) * 50);
	return show_dialog(playerid, d_sellisland, DIALOG_STYLE_MSGBOX, !""scm_dialog"Семейный остров", dialog_string, !"Далее", !"Закрыть");
}

cmd:iradio(playerid)
{
	if(PlayerInfo[playerid][island] == -1) return SendClientMessage(playerid, col_white, !""scm_error"У Вас нет семейного острова.");

	new fi = PlayerInfo[playerid][island] -1;
	if(fi_info[fi][fi_improve][fi_improve_audio]) return SendClientMessage(playerid, col_white, !""scm_error"В доме не установлено улучшение \"Акустическая система\".");
	if(!IsPlayerInRangeOfPoint(playerid, 30, family_int[fi_info[fi][fi_int] -1][fint_position][0], family_int[fi_info[fi][fi_int] -1][fint_position][1], family_int[fi_info[fi][fi_int] -1][fint_position][2]) && GetPlayerVirtualWorld(playerid) != fi_info[fi][fi_id]) return SendClientMessage(playerid, col_white, !""scm_error"Вы должны находиться в доме.");

	if(fi_info[fi][fi_radio_status] == 0)
		show_dialog(playerid, d_island_radio_url, DIALOG_STYLE_INPUT, !""scm_dialog"Акустическая система", !""c_white"Введите URL ссылку на поток:", !"Далее", !"Закрыть");
	else
	{
		fi_info[fi][fi_radio_status] = 0;

		new query_string[98];
		format(query_string, sizeof(query_string), "UPDATE `family_island` SET `fi_radio_status`='%d' WHERE `fi_id`='%d' LIMIT 1", fi_info[fi][fi_radio_status], PlayerInfo[playerid][island]);
		mysql_query(sql_connection, query_string);

		foreach(new i: streamed_players[playerid]) StopAudioStreamForPlayer(i);
		StopAudioStreamForPlayer(playerid);

		SendClientMessage(playerid, col_white, !""scm_info"Акустическая система успешно выключена.");
	}
	return 1;
}
*/
callback: OnVehicleRequestDeath(vehicleid, killerid)
{
    new Float:Healths;
    GetVehicleHealth(vehicleid, Healths);
    if(Healths >= 300.0) return false;

    return true;
}

stock show_fon_player(playerid)
{
	if(!player_fon_box[playerid])
	{
	    Loading_PTD[playerid][0] = CreatePlayerTextDraw(playerid, 242.5672, 242.4110, "LD_SPAC:white"); // Progress
		PlayerTextDrawTextSize(playerid, Loading_PTD[playerid][0], 0.6, 6.1799);
		PlayerTextDrawAlignment(playerid, Loading_PTD[playerid][0], 1);
		PlayerTextDrawColor(playerid, Loading_PTD[playerid][0], 1234959871);
		PlayerTextDrawBackgroundColor(playerid, Loading_PTD[playerid][0], 255);
		PlayerTextDrawFont(playerid, Loading_PTD[playerid][0], 4);
		PlayerTextDrawSetProportional(playerid, Loading_PTD[playerid][0], 0);
		PlayerTextDrawSetShadow(playerid, Loading_PTD[playerid][0], 0);

        PlayerTextDrawShow(playerid, Loading_PTD[playerid][0]);

		for(new j = 0; j < 9; j ++)
			TextDrawHideForPlayer(playerid, td_logo[j]);

		if(PlayerInfo[playerid][admin] > 0)
			for(new k; k < 10; k++) TextDrawHideForPlayer(playerid, ch_td[0][k]), TextDrawHideForPlayer(playerid, ch_td[1][k]);

		for(new i; i < 28; i ++)
			TextDrawShowForPlayer(playerid, Loading_TD[i]);

		player_fon_box[playerid] = 1;
		player_fon_timer[playerid] = SetTimerEx("timer_fon_player", true, 100, "ii", playerid, 1);
	}
}

stock hide_fon_player(playerid)
{
    if(player_fon_box[playerid] > 0)
    {
        player_fon_box[playerid] = 0;
        player_fon_timer[playerid] = SetTimerEx("timer_fon_player", true, 100, "ii", playerid, 2);
    }
}

callback: timer_fon_player(playerid, type)
{
	PlayerTextDrawTextSize(playerid, Loading_PTD[playerid][0], 0.6 * player_fon_box[playerid], 6.1799);
	PlayerTextDrawHide(playerid, Loading_PTD[playerid][0]);
	PlayerTextDrawShow(playerid, Loading_PTD[playerid][0]);

    if(1 == type)
    {
        player_fon_box[playerid] ++;
        if(player_fon_box[playerid] >= 255)
        {
        	KillTimer(player_fon_timer[playerid]);
        	hide_fon_player(playerid);
        }
    }
    else
    {
        if(player_fon_box[playerid] == 0)
        {
        	for(new i; i < 28; i ++)
				TextDrawHideForPlayer(playerid, Loading_TD[i]);

			for(new j = 0; j < 9; j ++)
				TextDrawShowForPlayer(playerid, td_logo[j]);

			if(PlayerInfo[playerid][admin] > 0)
				for(new k; k < 10; k++) TextDrawShowForPlayer(playerid, ch_td[0][k]), TextDrawShowForPlayer(playerid, ch_td[1][k]);

            PlayerTextDrawDestroy(playerid, Loading_PTD[playerid][0]);
            KillTimer(player_fon_timer[playerid]);
        }
    }
    return true;
}

stock TranslateText(string[])
{
	new result[128];
	for (new i = 0; i < sizeof(result); i++)
	{
		switch (string[i])
		{
			case 'а': result[i] = 'a';
			case 'А': result[i] = 'A';
			case 'б': result[i] = '—';
			case 'Б': result[i] = 'Ђ';
			case 'в': result[i] = 'ў';
			case 'В': result[i] = '‹';
			case 'г': result[i] = '™';
			case 'Г': result[i] = '‚';
			case 'д': result[i] = 'љ';
			case 'Д': result[i] = 'ѓ';
			case 'е': result[i] = 'e';
			case 'Е': result[i] = 'E';
			case 'ё': result[i] = 'e';
			case 'Ё': result[i] = 'E';
			case 'ж': result[i] = '›';
			case 'Ж': result[i] = '„';
			case 'з': result[i] = 'џ';
			case 'З': result[i] = '€';
			case 'и': result[i] = 'њ';
			case 'И': result[i] = '…';
			case 'й': result[i] = 'ќ';
			case 'Й': result[i] = '…';
			case 'к': result[i] = 'k';
			case 'К': result[i] = 'K';
			case 'л': result[i] = 'ћ';
			case 'Л': result[i] = '‡';
			case 'м': result[i] = 'Ї';
			case 'М': result[i] = 'M';
			case 'н': result[i] = '®';
			case 'Н': result[i] = ' ';
			case 'о': result[i] = 'o';
			case 'О': result[i] = 'O';
			case 'п': result[i] = 'Ј';
			case 'П': result[i] = 'Њ';
			case 'р': result[i] = 'p';
			case 'Р': result[i] = 'P';
			case 'с': result[i] = 'c';
			case 'С': result[i] = 'C';
			case 'т': result[i] = '¦';
			case 'Т': result[i] = 'Џ';
			case 'у': result[i] = 'y';
			case 'У': result[i] = 'Y';
			case 'ф': result[i] = '~';
			case 'Ф': result[i] = 'Ѓ';
			case 'х': result[i] = 'x';
			case 'Х': result[i] = 'X';
			case 'ц': result[i] = '*';
			case 'Ц': result[i] = '‰';
			case 'ч': result[i] = '¤';
			case 'Ч': result[i] = 'Ќ';
			case 'ш': result[i] = 'Ґ';
			case 'Ш': result[i] = 'Ћ';
			case 'щ': result[i] = 'Ў';
			case 'Щ': result[i] = 'Љ';
			case 'ь': result[i] = '©';
			case 'Ь': result[i] = '’';
			case 'ъ': result[i] = 'ђ';
			case 'Ъ': result[i] = '§';
			case 'ы': result[i] = 'Ё';
			case 'Ы': result[i] = '‘';
			case 'э': result[i] = 'Є';
			case 'Э': result[i] = '“';
			case 'ю': result[i] = '«';
			case 'Ю': result[i] = '”';
			case 'я': result[i] = '¬';
			case 'Я': result[i] = '•';
			case '-': result[i] = '-';
			default: result[i] = string[i];
		}
	}
	return result;
}

/*stock LoadMySQLSettings()
{
	new FileID = ini_openFile("mysql_settings.ini"),errCode;
	if(FileID < 0)
	{
		printf("Error while opening MySQL settings file. Error code: %d",FileID);
		return 0;
	}
	errCode = ini_getString(FileID,"host",MySQLSettings[DOOME_HOST]);
	if(errCode < 0) printf("Error while reading MySQL settings file (host). Error code: %d",errCode);
	errCode = ini_getString(FileID,"username",MySQLSettings[DOOME_USERNAME]);
	if(errCode < 0) printf("Error while reading MySQL settings file (username). Error code: %d",errCode);
	errCode = ini_getString(FileID,"password",MySQLSettings[DOOME_PASSWORD]);
	if(errCode < 0) printf("Error while reading MySQL settings file (password). Error code: %d",errCode);
	errCode = ini_getString(FileID,"database",MySQLSettings[DOOME_DATABASE]);
	if(errCode < 0) printf("Error while reading MySQL settings file (database). Error code: %d",errCode);
	ini_closeFile(FileID);
	return 1;
}*/

